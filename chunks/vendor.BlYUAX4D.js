var Bie = Object.defineProperty;
var Vie = (n, e, t) => e in n ? Bie(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t;
var Lr = (n, e, t) => (Vie(n, typeof e != "symbol" ? e + "" : e, t), t), LC = (n, e, t) => {
  if (!e.has(n))
    throw TypeError("Cannot " + t);
};
var Q = (n, e, t) => (LC(n, e, "read from private field"), t ? t.call(n) : e.get(n)), St = (n, e, t) => {
  if (e.has(n))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(n) : e.set(n, t);
}, it = (n, e, t, r) => (LC(n, e, "write to private field"), r ? r.call(n, t) : e.set(n, t), t);
var Fb = (n, e, t, r) => ({
  set _(i) {
    it(n, e, i, t);
  },
  get _() {
    return Q(n, e, r);
  }
}), Ye = (n, e, t) => (LC(n, e, "access private method"), t);
import "../css/vendor-BycN2tkO.css";
import { defineComponent as U, openBlock as z, createElementBlock as X, createElementVNode as J, shallowRef as lo, watchEffect as Ua, readonly as $S, ref as F, watch as de, getCurrentScope as xW, onScopeDispose as vD, unref as P, getCurrentInstance as xt, onMounted as dt, nextTick as ut, warn as zie, isVNode as il, computed as B, onBeforeUnmount as hi, inject as $e, isRef as ol, onBeforeMount as mD, provide as Jt, renderSlot as Ce, mergeProps as ps, toRef as hs, onUnmounted as j0, reactive as Si, toRefs as jc, normalizeClass as Z, onUpdated as H0, createVNode as pe, Fragment as pr, useSlots as Hc, withCtx as me, createBlock as ye, resolveDynamicComponent as cn, normalizeStyle as pt, createTextVNode as uo, toDisplayString as Ke, createCommentVNode as he, TransitionGroup as Fie, useAttrs as Qie, withDirectives as zt, withModifiers as en, vShow as rr, Transition as ml, cloneVNode as Zie, Text as SW, Comment as _W, Teleport as NS, onDeactivated as Wie, toRaw as Iw, vModelCheckbox as Rw, vModelRadio as CW, toHandlers as Gie, withKeys as Nr, renderList as Nf, h as nt, createSlots as jie, resolveComponent as Tn, resolveDirective as yD, vModelText as Hie, render as bc, shallowReactive as qie, markRaw as Yie, createApp as Xie } from "vue";
var AW = typeof global == "object" && global && global.Object === Object && global, Uie = typeof self == "object" && self && self.Object === Object && self, ca = AW || Uie || Function("return this")(), Os = ca.Symbol, TW = Object.prototype, Kie = TW.hasOwnProperty, Jie = TW.toString, Pv = Os ? Os.toStringTag : void 0;
function eoe(n) {
  var e = Kie.call(n, Pv), t = n[Pv];
  try {
    n[Pv] = void 0;
    var r = !0;
  } catch {
  }
  var i = Jie.call(n);
  return r && (e ? n[Pv] = t : delete n[Pv]), i;
}
var toe = Object.prototype, noe = toe.toString;
function roe(n) {
  return noe.call(n);
}
var ioe = "[object Null]", ooe = "[object Undefined]", W$ = Os ? Os.toStringTag : void 0;
function cu(n) {
  return n == null ? n === void 0 ? ooe : ioe : W$ && W$ in Object(n) ? eoe(n) : roe(n);
}
function ws(n) {
  return n != null && typeof n == "object";
}
var soe = "[object Symbol]";
function sl(n) {
  return typeof n == "symbol" || ws(n) && cu(n) == soe;
}
function Of(n, e) {
  for (var t = -1, r = n == null ? 0 : n.length, i = Array(r); ++t < r; )
    i[t] = e(n[t], t, n);
  return i;
}
var Fr = Array.isArray, aoe = 1 / 0, G$ = Os ? Os.prototype : void 0, j$ = G$ ? G$.toString : void 0;
function PW(n) {
  if (typeof n == "string")
    return n;
  if (Fr(n))
    return Of(n, PW) + "";
  if (sl(n))
    return j$ ? j$.call(n) : "";
  var e = n + "";
  return e == "0" && 1 / n == -aoe ? "-0" : e;
}
var loe = /\s/;
function uoe(n) {
  for (var e = n.length; e-- && loe.test(n.charAt(e)); )
    ;
  return e;
}
var coe = /^\s+/;
function hoe(n) {
  return n && n.slice(0, uoe(n) + 1).replace(coe, "");
}
function Hn(n) {
  var e = typeof n;
  return n != null && (e == "object" || e == "function");
}
var H$ = NaN, foe = /^[-+]0x[0-9a-f]+$/i, doe = /^0b[01]+$/i, poe = /^0o[0-7]+$/i, goe = parseInt;
function wp(n) {
  if (typeof n == "number")
    return n;
  if (sl(n))
    return H$;
  if (Hn(n)) {
    var e = typeof n.valueOf == "function" ? n.valueOf() : n;
    n = Hn(e) ? e + "" : e;
  }
  if (typeof n != "string")
    return n === 0 ? n : +n;
  n = hoe(n);
  var t = doe.test(n);
  return t || poe.test(n) ? goe(n.slice(2), t ? 2 : 8) : foe.test(n) ? H$ : +n;
}
var q$ = 1 / 0, voe = 17976931348623157e292;
function moe(n) {
  if (!n)
    return n === 0 ? n : 0;
  if (n = wp(n), n === q$ || n === -q$) {
    var e = n < 0 ? -1 : 1;
    return e * voe;
  }
  return n === n ? n : 0;
}
function EW(n) {
  var e = moe(n), t = e % 1;
  return e === e ? t ? e - t : e : 0;
}
function qc(n) {
  return n;
}
var yoe = "[object AsyncFunction]", boe = "[object Function]", Ooe = "[object GeneratorFunction]", woe = "[object Proxy]";
function bD(n) {
  if (!Hn(n))
    return !1;
  var e = cu(n);
  return e == boe || e == Ooe || e == yoe || e == woe;
}
var IC = ca["__core-js_shared__"], Y$ = function() {
  var n = /[^.]+$/.exec(IC && IC.keys && IC.keys.IE_PROTO || "");
  return n ? "Symbol(src)_1." + n : "";
}();
function xoe(n) {
  return !!Y$ && Y$ in n;
}
var Soe = Function.prototype, _oe = Soe.toString;
function ld(n) {
  if (n != null) {
    try {
      return _oe.call(n);
    } catch {
    }
    try {
      return n + "";
    } catch {
    }
  }
  return "";
}
var Coe = /[\\^$.*+?()[\]{}|]/g, Aoe = /^\[object .+?Constructor\]$/, Toe = Function.prototype, Poe = Object.prototype, Eoe = Toe.toString, koe = Poe.hasOwnProperty, Moe = RegExp(
  "^" + Eoe.call(koe).replace(Coe, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function Doe(n) {
  if (!Hn(n) || xoe(n))
    return !1;
  var e = bD(n) ? Moe : Aoe;
  return e.test(ld(n));
}
function Loe(n, e) {
  return n == null ? void 0 : n[e];
}
function ud(n, e) {
  var t = Loe(n, e);
  return Doe(t) ? t : void 0;
}
var bP = ud(ca, "WeakMap"), X$ = Object.create, Ioe = /* @__PURE__ */ function() {
  function n() {
  }
  return function(e) {
    if (!Hn(e))
      return {};
    if (X$)
      return X$(e);
    n.prototype = e;
    var t = new n();
    return n.prototype = void 0, t;
  };
}();
function kW(n, e, t) {
  switch (t.length) {
    case 0:
      return n.call(e);
    case 1:
      return n.call(e, t[0]);
    case 2:
      return n.call(e, t[0], t[1]);
    case 3:
      return n.call(e, t[0], t[1], t[2]);
  }
  return n.apply(e, t);
}
function Roe() {
}
function MW(n, e) {
  var t = -1, r = n.length;
  for (e || (e = Array(r)); ++t < r; )
    e[t] = n[t];
  return e;
}
var $oe = 800, Noe = 16, Boe = Date.now;
function Voe(n) {
  var e = 0, t = 0;
  return function() {
    var r = Boe(), i = Noe - (r - t);
    if (t = r, i > 0) {
      if (++e >= $oe)
        return arguments[0];
    } else
      e = 0;
    return n.apply(void 0, arguments);
  };
}
function zoe(n) {
  return function() {
    return n;
  };
}
var $w = function() {
  try {
    var n = ud(Object, "defineProperty");
    return n({}, "", {}), n;
  } catch {
  }
}(), Foe = $w ? function(n, e) {
  return $w(n, "toString", {
    configurable: !0,
    enumerable: !1,
    value: zoe(e),
    writable: !0
  });
} : qc;
const Qoe = Foe;
var DW = Voe(Qoe);
function Zoe(n, e) {
  for (var t = -1, r = n == null ? 0 : n.length; ++t < r && e(n[t], t, n) !== !1; )
    ;
  return n;
}
function LW(n, e, t, r) {
  for (var i = n.length, o = t + (r ? 1 : -1); r ? o-- : ++o < i; )
    if (e(n[o], o, n))
      return o;
  return -1;
}
function Woe(n) {
  return n !== n;
}
function Goe(n, e, t) {
  for (var r = t - 1, i = n.length; ++r < i; )
    if (n[r] === e)
      return r;
  return -1;
}
function joe(n, e, t) {
  return e === e ? Goe(n, e, t) : LW(n, Woe, t);
}
function IW(n, e) {
  var t = n == null ? 0 : n.length;
  return !!t && joe(n, e, 0) > -1;
}
var Hoe = 9007199254740991, qoe = /^(?:0|[1-9]\d*)$/;
function BS(n, e) {
  var t = typeof n;
  return e = e ?? Hoe, !!e && (t == "number" || t != "symbol" && qoe.test(n)) && n > -1 && n % 1 == 0 && n < e;
}
function VS(n, e, t) {
  e == "__proto__" && $w ? $w(n, e, {
    configurable: !0,
    enumerable: !0,
    value: t,
    writable: !0
  }) : n[e] = t;
}
function Fg(n, e) {
  return n === e || n !== n && e !== e;
}
var Yoe = Object.prototype, Xoe = Yoe.hasOwnProperty;
function zS(n, e, t) {
  var r = n[e];
  (!(Xoe.call(n, e) && Fg(r, t)) || t === void 0 && !(e in n)) && VS(n, e, t);
}
function cd(n, e, t, r) {
  var i = !t;
  t || (t = {});
  for (var o = -1, s = e.length; ++o < s; ) {
    var a = e[o], l = r ? r(t[a], n[a], a, t, n) : void 0;
    l === void 0 && (l = n[a]), i ? VS(t, a, l) : zS(t, a, l);
  }
  return t;
}
var U$ = Math.max;
function RW(n, e, t) {
  return e = U$(e === void 0 ? n.length - 1 : e, 0), function() {
    for (var r = arguments, i = -1, o = U$(r.length - e, 0), s = Array(o); ++i < o; )
      s[i] = r[e + i];
    i = -1;
    for (var a = Array(e + 1); ++i < e; )
      a[i] = r[i];
    return a[e] = t(s), kW(n, this, a);
  };
}
function Qg(n, e) {
  return DW(RW(n, e, qc), n + "");
}
var Uoe = 9007199254740991;
function OD(n) {
  return typeof n == "number" && n > -1 && n % 1 == 0 && n <= Uoe;
}
function Yc(n) {
  return n != null && OD(n.length) && !bD(n);
}
function Ty(n, e, t) {
  if (!Hn(t))
    return !1;
  var r = typeof e;
  return (r == "number" ? Yc(t) && BS(e, t.length) : r == "string" && e in t) ? Fg(t[e], n) : !1;
}
function wD(n) {
  return Qg(function(e, t) {
    var r = -1, i = t.length, o = i > 1 ? t[i - 1] : void 0, s = i > 2 ? t[2] : void 0;
    for (o = n.length > 3 && typeof o == "function" ? (i--, o) : void 0, s && Ty(t[0], t[1], s) && (o = i < 3 ? void 0 : o, i = 1), e = Object(e); ++r < i; ) {
      var a = t[r];
      a && n(e, a, r, o);
    }
    return e;
  });
}
var Koe = Object.prototype;
function q0(n) {
  var e = n && n.constructor, t = typeof e == "function" && e.prototype || Koe;
  return n === t;
}
function Joe(n, e) {
  for (var t = -1, r = Array(n); ++t < n; )
    r[t] = e(t);
  return r;
}
var ese = "[object Arguments]";
function K$(n) {
  return ws(n) && cu(n) == ese;
}
var $W = Object.prototype, tse = $W.hasOwnProperty, nse = $W.propertyIsEnumerable, Gp = K$(/* @__PURE__ */ function() {
  return arguments;
}()) ? K$ : function(n) {
  return ws(n) && tse.call(n, "callee") && !nse.call(n, "callee");
};
function rse() {
  return !1;
}
var NW = typeof exports == "object" && exports && !exports.nodeType && exports, J$ = NW && typeof module == "object" && module && !module.nodeType && module, ise = J$ && J$.exports === NW, eN = ise ? ca.Buffer : void 0, ose = eN ? eN.isBuffer : void 0, jp = ose || rse, sse = "[object Arguments]", ase = "[object Array]", lse = "[object Boolean]", use = "[object Date]", cse = "[object Error]", hse = "[object Function]", fse = "[object Map]", dse = "[object Number]", pse = "[object Object]", gse = "[object RegExp]", vse = "[object Set]", mse = "[object String]", yse = "[object WeakMap]", bse = "[object ArrayBuffer]", Ose = "[object DataView]", wse = "[object Float32Array]", xse = "[object Float64Array]", Sse = "[object Int8Array]", _se = "[object Int16Array]", Cse = "[object Int32Array]", Ase = "[object Uint8Array]", Tse = "[object Uint8ClampedArray]", Pse = "[object Uint16Array]", Ese = "[object Uint32Array]", Cn = {};
Cn[wse] = Cn[xse] = Cn[Sse] = Cn[_se] = Cn[Cse] = Cn[Ase] = Cn[Tse] = Cn[Pse] = Cn[Ese] = !0;
Cn[sse] = Cn[ase] = Cn[bse] = Cn[lse] = Cn[Ose] = Cn[use] = Cn[cse] = Cn[hse] = Cn[fse] = Cn[dse] = Cn[pse] = Cn[gse] = Cn[vse] = Cn[mse] = Cn[yse] = !1;
function kse(n) {
  return ws(n) && OD(n.length) && !!Cn[cu(n)];
}
function Y0(n) {
  return function(e) {
    return n(e);
  };
}
var BW = typeof exports == "object" && exports && !exports.nodeType && exports, zm = BW && typeof module == "object" && module && !module.nodeType && module, Mse = zm && zm.exports === BW, RC = Mse && AW.process, Hp = function() {
  try {
    var n = zm && zm.require && zm.require("util").types;
    return n || RC && RC.binding && RC.binding("util");
  } catch {
  }
}(), tN = Hp && Hp.isTypedArray, Dse = tN ? Y0(tN) : kse;
const FS = Dse;
var Lse = Object.prototype, Ise = Lse.hasOwnProperty;
function VW(n, e) {
  var t = Fr(n), r = !t && Gp(n), i = !t && !r && jp(n), o = !t && !r && !i && FS(n), s = t || r || i || o, a = s ? Joe(n.length, String) : [], l = a.length;
  for (var u in n)
    (e || Ise.call(n, u)) && !(s && // Safari 9 has enumerable `arguments.length` in strict mode.
    (u == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (u == "offset" || u == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    o && (u == "buffer" || u == "byteLength" || u == "byteOffset") || // Skip index properties.
    BS(u, l))) && a.push(u);
  return a;
}
function zW(n, e) {
  return function(t) {
    return n(e(t));
  };
}
var Rse = zW(Object.keys, Object), $se = Object.prototype, Nse = $se.hasOwnProperty;
function FW(n) {
  if (!q0(n))
    return Rse(n);
  var e = [];
  for (var t in Object(n))
    Nse.call(n, t) && t != "constructor" && e.push(t);
  return e;
}
function Zg(n) {
  return Yc(n) ? VW(n) : FW(n);
}
var Bse = Object.prototype, Vse = Bse.hasOwnProperty, zse = wD(function(n, e) {
  if (q0(e) || Yc(e)) {
    cd(e, Zg(e), n);
    return;
  }
  for (var t in e)
    Vse.call(e, t) && zS(n, t, e[t]);
});
const lVt = zse;
function Fse(n) {
  var e = [];
  if (n != null)
    for (var t in Object(n))
      e.push(t);
  return e;
}
var Qse = Object.prototype, Zse = Qse.hasOwnProperty;
function Wse(n) {
  if (!Hn(n))
    return Fse(n);
  var e = q0(n), t = [];
  for (var r in n)
    r == "constructor" && (e || !Zse.call(n, r)) || t.push(r);
  return t;
}
function Wg(n) {
  return Yc(n) ? VW(n, !0) : Wse(n);
}
var Gse = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, jse = /^\w*$/;
function xD(n, e) {
  if (Fr(n))
    return !1;
  var t = typeof n;
  return t == "number" || t == "symbol" || t == "boolean" || n == null || sl(n) ? !0 : jse.test(n) || !Gse.test(n) || e != null && n in Object(e);
}
var Py = ud(Object, "create");
function Hse() {
  this.__data__ = Py ? Py(null) : {}, this.size = 0;
}
function qse(n) {
  var e = this.has(n) && delete this.__data__[n];
  return this.size -= e ? 1 : 0, e;
}
var Yse = "__lodash_hash_undefined__", Xse = Object.prototype, Use = Xse.hasOwnProperty;
function Kse(n) {
  var e = this.__data__;
  if (Py) {
    var t = e[n];
    return t === Yse ? void 0 : t;
  }
  return Use.call(e, n) ? e[n] : void 0;
}
var Jse = Object.prototype, eae = Jse.hasOwnProperty;
function tae(n) {
  var e = this.__data__;
  return Py ? e[n] !== void 0 : eae.call(e, n);
}
var nae = "__lodash_hash_undefined__";
function rae(n, e) {
  var t = this.__data__;
  return this.size += this.has(n) ? 0 : 1, t[n] = Py && e === void 0 ? nae : e, this;
}
function Bf(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var r = n[e];
    this.set(r[0], r[1]);
  }
}
Bf.prototype.clear = Hse;
Bf.prototype.delete = qse;
Bf.prototype.get = Kse;
Bf.prototype.has = tae;
Bf.prototype.set = rae;
function iae() {
  this.__data__ = [], this.size = 0;
}
function QS(n, e) {
  for (var t = n.length; t--; )
    if (Fg(n[t][0], e))
      return t;
  return -1;
}
var oae = Array.prototype, sae = oae.splice;
function aae(n) {
  var e = this.__data__, t = QS(e, n);
  if (t < 0)
    return !1;
  var r = e.length - 1;
  return t == r ? e.pop() : sae.call(e, t, 1), --this.size, !0;
}
function lae(n) {
  var e = this.__data__, t = QS(e, n);
  return t < 0 ? void 0 : e[t][1];
}
function uae(n) {
  return QS(this.__data__, n) > -1;
}
function cae(n, e) {
  var t = this.__data__, r = QS(t, n);
  return r < 0 ? (++this.size, t.push([n, e])) : t[r][1] = e, this;
}
function hu(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var r = n[e];
    this.set(r[0], r[1]);
  }
}
hu.prototype.clear = iae;
hu.prototype.delete = aae;
hu.prototype.get = lae;
hu.prototype.has = uae;
hu.prototype.set = cae;
var Ey = ud(ca, "Map");
function hae() {
  this.size = 0, this.__data__ = {
    hash: new Bf(),
    map: new (Ey || hu)(),
    string: new Bf()
  };
}
function fae(n) {
  var e = typeof n;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? n !== "__proto__" : n === null;
}
function ZS(n, e) {
  var t = n.__data__;
  return fae(e) ? t[typeof e == "string" ? "string" : "hash"] : t.map;
}
function dae(n) {
  var e = ZS(this, n).delete(n);
  return this.size -= e ? 1 : 0, e;
}
function pae(n) {
  return ZS(this, n).get(n);
}
function gae(n) {
  return ZS(this, n).has(n);
}
function vae(n, e) {
  var t = ZS(this, n), r = t.size;
  return t.set(n, e), this.size += t.size == r ? 0 : 1, this;
}
function fu(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var r = n[e];
    this.set(r[0], r[1]);
  }
}
fu.prototype.clear = hae;
fu.prototype.delete = dae;
fu.prototype.get = pae;
fu.prototype.has = gae;
fu.prototype.set = vae;
var mae = "Expected a function";
function SD(n, e) {
  if (typeof n != "function" || e != null && typeof e != "function")
    throw new TypeError(mae);
  var t = function() {
    var r = arguments, i = e ? e.apply(this, r) : r[0], o = t.cache;
    if (o.has(i))
      return o.get(i);
    var s = n.apply(this, r);
    return t.cache = o.set(i, s) || o, s;
  };
  return t.cache = new (SD.Cache || fu)(), t;
}
SD.Cache = fu;
var yae = 500;
function bae(n) {
  var e = SD(n, function(r) {
    return t.size === yae && t.clear(), r;
  }), t = e.cache;
  return e;
}
var Oae = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, wae = /\\(\\)?/g, xae = bae(function(n) {
  var e = [];
  return n.charCodeAt(0) === 46 && e.push(""), n.replace(Oae, function(t, r, i, o) {
    e.push(i ? o.replace(wae, "$1") : r || t);
  }), e;
});
function X0(n) {
  return n == null ? "" : PW(n);
}
function Gg(n, e) {
  return Fr(n) ? n : xD(n, e) ? [n] : xae(X0(n));
}
var Sae = 1 / 0;
function jg(n) {
  if (typeof n == "string" || sl(n))
    return n;
  var e = n + "";
  return e == "0" && 1 / n == -Sae ? "-0" : e;
}
function U0(n, e) {
  e = Gg(e, n);
  for (var t = 0, r = e.length; n != null && t < r; )
    n = n[jg(e[t++])];
  return t && t == r ? n : void 0;
}
function as(n, e, t) {
  var r = n == null ? void 0 : U0(n, e);
  return r === void 0 ? t : r;
}
function _D(n, e) {
  for (var t = -1, r = e.length, i = n.length; ++t < r; )
    n[i + t] = e[t];
  return n;
}
var nN = Os ? Os.isConcatSpreadable : void 0;
function _ae(n) {
  return Fr(n) || Gp(n) || !!(nN && n && n[nN]);
}
function Hg(n, e, t, r, i) {
  var o = -1, s = n.length;
  for (t || (t = _ae), i || (i = []); ++o < s; ) {
    var a = n[o];
    e > 0 && t(a) ? e > 1 ? Hg(a, e - 1, t, r, i) : _D(i, a) : r || (i[i.length] = a);
  }
  return i;
}
function Cae(n) {
  var e = n == null ? 0 : n.length;
  return e ? Hg(n, 1) : [];
}
function QW(n) {
  return DW(RW(n, void 0, Cae), n + "");
}
var CD = zW(Object.getPrototypeOf, Object), Aae = "[object Object]", Tae = Function.prototype, Pae = Object.prototype, ZW = Tae.toString, Eae = Pae.hasOwnProperty, kae = ZW.call(Object);
function ha(n) {
  if (!ws(n) || cu(n) != Aae)
    return !1;
  var e = CD(n);
  if (e === null)
    return !0;
  var t = Eae.call(e, "constructor") && e.constructor;
  return typeof t == "function" && t instanceof t && ZW.call(t) == kae;
}
function AD(n, e, t) {
  var r = -1, i = n.length;
  e < 0 && (e = -e > i ? 0 : i + e), t = t > i ? i : t, t < 0 && (t += i), i = e > t ? 0 : t - e >>> 0, e >>>= 0;
  for (var o = Array(i); ++r < i; )
    o[r] = n[r + e];
  return o;
}
function Mae(n, e, t) {
  var r = n.length;
  return t = t === void 0 ? r : t, !e && t >= r ? n : AD(n, e, t);
}
var Dae = "\\ud800-\\udfff", Lae = "\\u0300-\\u036f", Iae = "\\ufe20-\\ufe2f", Rae = "\\u20d0-\\u20ff", $ae = Lae + Iae + Rae, Nae = "\\ufe0e\\ufe0f", Bae = "\\u200d", Vae = RegExp("[" + Bae + Dae + $ae + Nae + "]");
function WW(n) {
  return Vae.test(n);
}
function zae(n) {
  return n.split("");
}
var GW = "\\ud800-\\udfff", Fae = "\\u0300-\\u036f", Qae = "\\ufe20-\\ufe2f", Zae = "\\u20d0-\\u20ff", Wae = Fae + Qae + Zae, Gae = "\\ufe0e\\ufe0f", jae = "[" + GW + "]", OP = "[" + Wae + "]", wP = "\\ud83c[\\udffb-\\udfff]", Hae = "(?:" + OP + "|" + wP + ")", jW = "[^" + GW + "]", HW = "(?:\\ud83c[\\udde6-\\uddff]){2}", qW = "[\\ud800-\\udbff][\\udc00-\\udfff]", qae = "\\u200d", YW = Hae + "?", XW = "[" + Gae + "]?", Yae = "(?:" + qae + "(?:" + [jW, HW, qW].join("|") + ")" + XW + YW + ")*", Xae = XW + YW + Yae, Uae = "(?:" + [jW + OP + "?", OP, HW, qW, jae].join("|") + ")", Kae = RegExp(wP + "(?=" + wP + ")|" + Uae + Xae, "g");
function Jae(n) {
  return n.match(Kae) || [];
}
function ele(n) {
  return WW(n) ? Jae(n) : zae(n);
}
function UW(n) {
  return function(e) {
    e = X0(e);
    var t = WW(e) ? ele(e) : void 0, r = t ? t[0] : e.charAt(0), i = t ? Mae(t, 1).join("") : e.slice(1);
    return r[n]() + i;
  };
}
var Nw = UW("toUpperCase");
function tle(n) {
  return Nw(X0(n).toLowerCase());
}
function nle(n, e, t, r) {
  var i = -1, o = n == null ? 0 : n.length;
  for (r && o && (t = n[++i]); ++i < o; )
    t = e(t, n[i], i, n);
  return t;
}
function rle(n) {
  return function(e) {
    return n == null ? void 0 : n[e];
  };
}
var ile = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "s"
}, ole = rle(ile);
const sle = ole;
var ale = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, lle = "\\u0300-\\u036f", ule = "\\ufe20-\\ufe2f", cle = "\\u20d0-\\u20ff", hle = lle + ule + cle, fle = "[" + hle + "]", dle = RegExp(fle, "g");
function ple(n) {
  return n = X0(n), n && n.replace(ale, sle).replace(dle, "");
}
var gle = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function vle(n) {
  return n.match(gle) || [];
}
var mle = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function yle(n) {
  return mle.test(n);
}
var KW = "\\ud800-\\udfff", ble = "\\u0300-\\u036f", Ole = "\\ufe20-\\ufe2f", wle = "\\u20d0-\\u20ff", xle = ble + Ole + wle, JW = "\\u2700-\\u27bf", eG = "a-z\\xdf-\\xf6\\xf8-\\xff", Sle = "\\xac\\xb1\\xd7\\xf7", _le = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Cle = "\\u2000-\\u206f", Ale = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", tG = "A-Z\\xc0-\\xd6\\xd8-\\xde", Tle = "\\ufe0e\\ufe0f", nG = Sle + _le + Cle + Ale, rG = "['’]", rN = "[" + nG + "]", Ple = "[" + xle + "]", iG = "\\d+", Ele = "[" + JW + "]", oG = "[" + eG + "]", sG = "[^" + KW + nG + iG + JW + eG + tG + "]", kle = "\\ud83c[\\udffb-\\udfff]", Mle = "(?:" + Ple + "|" + kle + ")", Dle = "[^" + KW + "]", aG = "(?:\\ud83c[\\udde6-\\uddff]){2}", lG = "[\\ud800-\\udbff][\\udc00-\\udfff]", op = "[" + tG + "]", Lle = "\\u200d", iN = "(?:" + oG + "|" + sG + ")", Ile = "(?:" + op + "|" + sG + ")", oN = "(?:" + rG + "(?:d|ll|m|re|s|t|ve))?", sN = "(?:" + rG + "(?:D|LL|M|RE|S|T|VE))?", uG = Mle + "?", cG = "[" + Tle + "]?", Rle = "(?:" + Lle + "(?:" + [Dle, aG, lG].join("|") + ")" + cG + uG + ")*", $le = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Nle = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", Ble = cG + uG + Rle, Vle = "(?:" + [Ele, aG, lG].join("|") + ")" + Ble, zle = RegExp([
  op + "?" + oG + "+" + oN + "(?=" + [rN, op, "$"].join("|") + ")",
  Ile + "+" + sN + "(?=" + [rN, op + iN, "$"].join("|") + ")",
  op + "?" + iN + "+" + oN,
  op + "+" + sN,
  Nle,
  $le,
  iG,
  Vle
].join("|"), "g");
function Fle(n) {
  return n.match(zle) || [];
}
function Qle(n, e, t) {
  return n = X0(n), e = t ? void 0 : e, e === void 0 ? yle(n) ? Fle(n) : vle(n) : n.match(e) || [];
}
var Zle = "['’]", Wle = RegExp(Zle, "g");
function TD(n) {
  return function(e) {
    return nle(Qle(ple(e).replace(Wle, "")), n, "");
  };
}
var WS = TD(function(n, e, t) {
  return e = e.toLowerCase(), n + (t ? tle(e) : e);
});
function ky() {
  if (!arguments.length)
    return [];
  var n = arguments[0];
  return Fr(n) ? n : [n];
}
var Gle = Math.ceil, jle = Math.max;
function uVt(n, e, t) {
  (t ? Ty(n, e, t) : e === void 0) ? e = 1 : e = jle(EW(e), 0);
  var r = n == null ? 0 : n.length;
  if (!r || e < 1)
    return [];
  for (var i = 0, o = 0, s = Array(Gle(r / e)); i < r; )
    s[o++] = AD(n, i, i += e);
  return s;
}
function Hle(n, e, t) {
  return n === n && (t !== void 0 && (n = n <= t ? n : t), e !== void 0 && (n = n >= e ? n : e)), n;
}
function so(n, e, t) {
  return t === void 0 && (t = e, e = void 0), t !== void 0 && (t = wp(t), t = t === t ? t : 0), e !== void 0 && (e = wp(e), e = e === e ? e : 0), Hle(wp(n), e, t);
}
function qle() {
  this.__data__ = new hu(), this.size = 0;
}
function Yle(n) {
  var e = this.__data__, t = e.delete(n);
  return this.size = e.size, t;
}
function Xle(n) {
  return this.__data__.get(n);
}
function Ule(n) {
  return this.__data__.has(n);
}
var Kle = 200;
function Jle(n, e) {
  var t = this.__data__;
  if (t instanceof hu) {
    var r = t.__data__;
    if (!Ey || r.length < Kle - 1)
      return r.push([n, e]), this.size = ++t.size, this;
    t = this.__data__ = new fu(r);
  }
  return t.set(n, e), this.size = t.size, this;
}
function Us(n) {
  var e = this.__data__ = new hu(n);
  this.size = e.size;
}
Us.prototype.clear = qle;
Us.prototype.delete = Yle;
Us.prototype.get = Xle;
Us.prototype.has = Ule;
Us.prototype.set = Jle;
function eue(n, e) {
  return n && cd(e, Zg(e), n);
}
function tue(n, e) {
  return n && cd(e, Wg(e), n);
}
var hG = typeof exports == "object" && exports && !exports.nodeType && exports, aN = hG && typeof module == "object" && module && !module.nodeType && module, nue = aN && aN.exports === hG, lN = nue ? ca.Buffer : void 0, uN = lN ? lN.allocUnsafe : void 0;
function fG(n, e) {
  if (e)
    return n.slice();
  var t = n.length, r = uN ? uN(t) : new n.constructor(t);
  return n.copy(r), r;
}
function rue(n, e) {
  for (var t = -1, r = n == null ? 0 : n.length, i = 0, o = []; ++t < r; ) {
    var s = n[t];
    e(s, t, n) && (o[i++] = s);
  }
  return o;
}
function dG() {
  return [];
}
var iue = Object.prototype, oue = iue.propertyIsEnumerable, cN = Object.getOwnPropertySymbols, PD = cN ? function(n) {
  return n == null ? [] : (n = Object(n), rue(cN(n), function(e) {
    return oue.call(n, e);
  }));
} : dG;
function sue(n, e) {
  return cd(n, PD(n), e);
}
var aue = Object.getOwnPropertySymbols, pG = aue ? function(n) {
  for (var e = []; n; )
    _D(e, PD(n)), n = CD(n);
  return e;
} : dG;
function lue(n, e) {
  return cd(n, pG(n), e);
}
function gG(n, e, t) {
  var r = e(n);
  return Fr(n) ? r : _D(r, t(n));
}
function xP(n) {
  return gG(n, Zg, PD);
}
function vG(n) {
  return gG(n, Wg, pG);
}
var SP = ud(ca, "DataView"), _P = ud(ca, "Promise"), xp = ud(ca, "Set"), hN = "[object Map]", uue = "[object Object]", fN = "[object Promise]", dN = "[object Set]", pN = "[object WeakMap]", gN = "[object DataView]", cue = ld(SP), hue = ld(Ey), fue = ld(_P), due = ld(xp), pue = ld(bP), Rh = cu;
(SP && Rh(new SP(new ArrayBuffer(1))) != gN || Ey && Rh(new Ey()) != hN || _P && Rh(_P.resolve()) != fN || xp && Rh(new xp()) != dN || bP && Rh(new bP()) != pN) && (Rh = function(n) {
  var e = cu(n), t = e == uue ? n.constructor : void 0, r = t ? ld(t) : "";
  if (r)
    switch (r) {
      case cue:
        return gN;
      case hue:
        return hN;
      case fue:
        return fN;
      case due:
        return dN;
      case pue:
        return pN;
    }
  return e;
});
const qp = Rh;
var gue = Object.prototype, vue = gue.hasOwnProperty;
function mue(n) {
  var e = n.length, t = new n.constructor(e);
  return e && typeof n[0] == "string" && vue.call(n, "index") && (t.index = n.index, t.input = n.input), t;
}
var Bw = ca.Uint8Array;
function ED(n) {
  var e = new n.constructor(n.byteLength);
  return new Bw(e).set(new Bw(n)), e;
}
function yue(n, e) {
  var t = e ? ED(n.buffer) : n.buffer;
  return new n.constructor(t, n.byteOffset, n.byteLength);
}
var bue = /\w*$/;
function Oue(n) {
  var e = new n.constructor(n.source, bue.exec(n));
  return e.lastIndex = n.lastIndex, e;
}
var vN = Os ? Os.prototype : void 0, mN = vN ? vN.valueOf : void 0;
function wue(n) {
  return mN ? Object(mN.call(n)) : {};
}
function mG(n, e) {
  var t = e ? ED(n.buffer) : n.buffer;
  return new n.constructor(t, n.byteOffset, n.length);
}
var xue = "[object Boolean]", Sue = "[object Date]", _ue = "[object Map]", Cue = "[object Number]", Aue = "[object RegExp]", Tue = "[object Set]", Pue = "[object String]", Eue = "[object Symbol]", kue = "[object ArrayBuffer]", Mue = "[object DataView]", Due = "[object Float32Array]", Lue = "[object Float64Array]", Iue = "[object Int8Array]", Rue = "[object Int16Array]", $ue = "[object Int32Array]", Nue = "[object Uint8Array]", Bue = "[object Uint8ClampedArray]", Vue = "[object Uint16Array]", zue = "[object Uint32Array]";
function Fue(n, e, t) {
  var r = n.constructor;
  switch (e) {
    case kue:
      return ED(n);
    case xue:
    case Sue:
      return new r(+n);
    case Mue:
      return yue(n, t);
    case Due:
    case Lue:
    case Iue:
    case Rue:
    case $ue:
    case Nue:
    case Bue:
    case Vue:
    case zue:
      return mG(n, t);
    case _ue:
      return new r();
    case Cue:
    case Pue:
      return new r(n);
    case Aue:
      return Oue(n);
    case Tue:
      return new r();
    case Eue:
      return wue(n);
  }
}
function yG(n) {
  return typeof n.constructor == "function" && !q0(n) ? Ioe(CD(n)) : {};
}
var Que = "[object Map]";
function Zue(n) {
  return ws(n) && qp(n) == Que;
}
var yN = Hp && Hp.isMap, Wue = yN ? Y0(yN) : Zue, Gue = "[object Set]";
function jue(n) {
  return ws(n) && qp(n) == Gue;
}
var bN = Hp && Hp.isSet, Hue = bN ? Y0(bN) : jue, que = 1, Yue = 2, Xue = 4, bG = "[object Arguments]", Uue = "[object Array]", Kue = "[object Boolean]", Jue = "[object Date]", ece = "[object Error]", OG = "[object Function]", tce = "[object GeneratorFunction]", nce = "[object Map]", rce = "[object Number]", wG = "[object Object]", ice = "[object RegExp]", oce = "[object Set]", sce = "[object String]", ace = "[object Symbol]", lce = "[object WeakMap]", uce = "[object ArrayBuffer]", cce = "[object DataView]", hce = "[object Float32Array]", fce = "[object Float64Array]", dce = "[object Int8Array]", pce = "[object Int16Array]", gce = "[object Int32Array]", vce = "[object Uint8Array]", mce = "[object Uint8ClampedArray]", yce = "[object Uint16Array]", bce = "[object Uint32Array]", yn = {};
yn[bG] = yn[Uue] = yn[uce] = yn[cce] = yn[Kue] = yn[Jue] = yn[hce] = yn[fce] = yn[dce] = yn[pce] = yn[gce] = yn[nce] = yn[rce] = yn[wG] = yn[ice] = yn[oce] = yn[sce] = yn[ace] = yn[vce] = yn[mce] = yn[yce] = yn[bce] = !0;
yn[ece] = yn[OG] = yn[lce] = !1;
function Sp(n, e, t, r, i, o) {
  var s, a = e & que, l = e & Yue, u = e & Xue;
  if (t && (s = i ? t(n, r, i, o) : t(n)), s !== void 0)
    return s;
  if (!Hn(n))
    return n;
  var c = Fr(n);
  if (c) {
    if (s = mue(n), !a)
      return MW(n, s);
  } else {
    var h = qp(n), f = h == OG || h == tce;
    if (jp(n))
      return fG(n, a);
    if (h == wG || h == bG || f && !i) {
      if (s = l || f ? {} : yG(n), !a)
        return l ? lue(n, tue(s, n)) : sue(n, eue(s, n));
    } else {
      if (!yn[h])
        return i ? n : {};
      s = Fue(n, h, a);
    }
  }
  o || (o = new Us());
  var d = o.get(n);
  if (d)
    return d;
  o.set(n, s), Hue(n) ? n.forEach(function(v) {
    s.add(Sp(v, e, t, v, n, o));
  }) : Wue(n) && n.forEach(function(v, m) {
    s.set(m, Sp(v, e, t, m, n, o));
  });
  var p = u ? l ? vG : xP : l ? Wg : Zg, g = c ? void 0 : p(n);
  return Zoe(g || n, function(v, m) {
    g && (m = v, v = n[m]), zS(s, m, Sp(v, e, t, m, n, o));
  }), s;
}
var Oce = 4;
function My(n) {
  return Sp(n, Oce);
}
var wce = 1, xce = 4;
function Pn(n) {
  return Sp(n, wce | xce);
}
var Sce = "__lodash_hash_undefined__";
function _ce(n) {
  return this.__data__.set(n, Sce), this;
}
function Cce(n) {
  return this.__data__.has(n);
}
function Yp(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.__data__ = new fu(); ++e < t; )
    this.add(n[e]);
}
Yp.prototype.add = Yp.prototype.push = _ce;
Yp.prototype.has = Cce;
function Ace(n, e) {
  for (var t = -1, r = n == null ? 0 : n.length; ++t < r; )
    if (e(n[t], t, n))
      return !0;
  return !1;
}
function kD(n, e) {
  return n.has(e);
}
var Tce = 1, Pce = 2;
function xG(n, e, t, r, i, o) {
  var s = t & Tce, a = n.length, l = e.length;
  if (a != l && !(s && l > a))
    return !1;
  var u = o.get(n), c = o.get(e);
  if (u && c)
    return u == e && c == n;
  var h = -1, f = !0, d = t & Pce ? new Yp() : void 0;
  for (o.set(n, e), o.set(e, n); ++h < a; ) {
    var p = n[h], g = e[h];
    if (r)
      var v = s ? r(g, p, h, e, n, o) : r(p, g, h, n, e, o);
    if (v !== void 0) {
      if (v)
        continue;
      f = !1;
      break;
    }
    if (d) {
      if (!Ace(e, function(m, y) {
        if (!kD(d, y) && (p === m || i(p, m, t, r, o)))
          return d.push(y);
      })) {
        f = !1;
        break;
      }
    } else if (!(p === g || i(p, g, t, r, o))) {
      f = !1;
      break;
    }
  }
  return o.delete(n), o.delete(e), f;
}
function Ece(n) {
  var e = -1, t = Array(n.size);
  return n.forEach(function(r, i) {
    t[++e] = [i, r];
  }), t;
}
function MD(n) {
  var e = -1, t = Array(n.size);
  return n.forEach(function(r) {
    t[++e] = r;
  }), t;
}
var kce = 1, Mce = 2, Dce = "[object Boolean]", Lce = "[object Date]", Ice = "[object Error]", Rce = "[object Map]", $ce = "[object Number]", Nce = "[object RegExp]", Bce = "[object Set]", Vce = "[object String]", zce = "[object Symbol]", Fce = "[object ArrayBuffer]", Qce = "[object DataView]", ON = Os ? Os.prototype : void 0, $C = ON ? ON.valueOf : void 0;
function Zce(n, e, t, r, i, o, s) {
  switch (t) {
    case Qce:
      if (n.byteLength != e.byteLength || n.byteOffset != e.byteOffset)
        return !1;
      n = n.buffer, e = e.buffer;
    case Fce:
      return !(n.byteLength != e.byteLength || !o(new Bw(n), new Bw(e)));
    case Dce:
    case Lce:
    case $ce:
      return Fg(+n, +e);
    case Ice:
      return n.name == e.name && n.message == e.message;
    case Nce:
    case Vce:
      return n == e + "";
    case Rce:
      var a = Ece;
    case Bce:
      var l = r & kce;
      if (a || (a = MD), n.size != e.size && !l)
        return !1;
      var u = s.get(n);
      if (u)
        return u == e;
      r |= Mce, s.set(n, e);
      var c = xG(a(n), a(e), r, i, o, s);
      return s.delete(n), c;
    case zce:
      if ($C)
        return $C.call(n) == $C.call(e);
  }
  return !1;
}
var Wce = 1, Gce = Object.prototype, jce = Gce.hasOwnProperty;
function Hce(n, e, t, r, i, o) {
  var s = t & Wce, a = xP(n), l = a.length, u = xP(e), c = u.length;
  if (l != c && !s)
    return !1;
  for (var h = l; h--; ) {
    var f = a[h];
    if (!(s ? f in e : jce.call(e, f)))
      return !1;
  }
  var d = o.get(n), p = o.get(e);
  if (d && p)
    return d == e && p == n;
  var g = !0;
  o.set(n, e), o.set(e, n);
  for (var v = s; ++h < l; ) {
    f = a[h];
    var m = n[f], y = e[f];
    if (r)
      var b = s ? r(y, m, f, e, n, o) : r(m, y, f, n, e, o);
    if (!(b === void 0 ? m === y || i(m, y, t, r, o) : b)) {
      g = !1;
      break;
    }
    v || (v = f == "constructor");
  }
  if (g && !v) {
    var O = n.constructor, w = e.constructor;
    O != w && "constructor" in n && "constructor" in e && !(typeof O == "function" && O instanceof O && typeof w == "function" && w instanceof w) && (g = !1);
  }
  return o.delete(n), o.delete(e), g;
}
var qce = 1, wN = "[object Arguments]", xN = "[object Array]", Qb = "[object Object]", Yce = Object.prototype, SN = Yce.hasOwnProperty;
function Xce(n, e, t, r, i, o) {
  var s = Fr(n), a = Fr(e), l = s ? xN : qp(n), u = a ? xN : qp(e);
  l = l == wN ? Qb : l, u = u == wN ? Qb : u;
  var c = l == Qb, h = u == Qb, f = l == u;
  if (f && jp(n)) {
    if (!jp(e))
      return !1;
    s = !0, c = !1;
  }
  if (f && !c)
    return o || (o = new Us()), s || FS(n) ? xG(n, e, t, r, i, o) : Zce(n, e, l, t, r, i, o);
  if (!(t & qce)) {
    var d = c && SN.call(n, "__wrapped__"), p = h && SN.call(e, "__wrapped__");
    if (d || p) {
      var g = d ? n.value() : n, v = p ? e.value() : e;
      return o || (o = new Us()), i(g, v, t, r, o);
    }
  }
  return f ? (o || (o = new Us()), Hce(n, e, t, r, i, o)) : !1;
}
function GS(n, e, t, r, i) {
  return n === e ? !0 : n == null || e == null || !ws(n) && !ws(e) ? n !== n && e !== e : Xce(n, e, t, r, GS, i);
}
var Uce = 1, Kce = 2;
function Jce(n, e, t, r) {
  var i = t.length, o = i, s = !r;
  if (n == null)
    return !o;
  for (n = Object(n); i--; ) {
    var a = t[i];
    if (s && a[2] ? a[1] !== n[a[0]] : !(a[0] in n))
      return !1;
  }
  for (; ++i < o; ) {
    a = t[i];
    var l = a[0], u = n[l], c = a[1];
    if (s && a[2]) {
      if (u === void 0 && !(l in n))
        return !1;
    } else {
      var h = new Us();
      if (r)
        var f = r(u, c, l, n, e, h);
      if (!(f === void 0 ? GS(c, u, Uce | Kce, r, h) : f))
        return !1;
    }
  }
  return !0;
}
function SG(n) {
  return n === n && !Hn(n);
}
function ehe(n) {
  for (var e = Zg(n), t = e.length; t--; ) {
    var r = e[t], i = n[r];
    e[t] = [r, i, SG(i)];
  }
  return e;
}
function _G(n, e) {
  return function(t) {
    return t == null ? !1 : t[n] === e && (e !== void 0 || n in Object(t));
  };
}
function the(n) {
  var e = ehe(n);
  return e.length == 1 && e[0][2] ? _G(e[0][0], e[0][1]) : function(t) {
    return t === n || Jce(t, n, e);
  };
}
function nhe(n, e) {
  return n != null && e in Object(n);
}
function CG(n, e, t) {
  e = Gg(e, n);
  for (var r = -1, i = e.length, o = !1; ++r < i; ) {
    var s = jg(e[r]);
    if (!(o = n != null && t(n, s)))
      break;
    n = n[s];
  }
  return o || ++r != i ? o : (i = n == null ? 0 : n.length, !!i && OD(i) && BS(s, i) && (Fr(n) || Gp(n)));
}
function AG(n, e) {
  return n != null && CG(n, e, nhe);
}
var rhe = 1, ihe = 2;
function ohe(n, e) {
  return xD(n) && SG(e) ? _G(jg(n), e) : function(t) {
    var r = as(t, n);
    return r === void 0 && r === e ? AG(t, n) : GS(e, r, rhe | ihe);
  };
}
function she(n) {
  return function(e) {
    return e == null ? void 0 : e[n];
  };
}
function ahe(n) {
  return function(e) {
    return U0(e, n);
  };
}
function lhe(n) {
  return xD(n) ? she(jg(n)) : ahe(n);
}
function K0(n) {
  return typeof n == "function" ? n : n == null ? qc : typeof n == "object" ? Fr(n) ? ohe(n[0], n[1]) : the(n) : lhe(n);
}
function uhe(n, e, t, r) {
  for (var i = -1, o = n == null ? 0 : n.length; ++i < o; ) {
    var s = n[i];
    e(r, s, t(s), n);
  }
  return r;
}
function che(n) {
  return function(e, t, r) {
    for (var i = -1, o = Object(e), s = r(e), a = s.length; a--; ) {
      var l = s[n ? a : ++i];
      if (t(o[l], l, o) === !1)
        break;
    }
    return e;
  };
}
var TG = che();
function hhe(n, e) {
  return n && TG(n, e, Zg);
}
function fhe(n, e) {
  return function(t, r) {
    if (t == null)
      return t;
    if (!Yc(t))
      return n(t, r);
    for (var i = t.length, o = e ? i : -1, s = Object(t); (e ? o-- : ++o < i) && r(s[o], o, s) !== !1; )
      ;
    return t;
  };
}
var PG = fhe(hhe);
function dhe(n, e, t, r) {
  return PG(n, function(i, o, s) {
    e(r, i, t(i), s);
  }), r;
}
function phe(n, e) {
  return function(t, r) {
    var i = Fr(t) ? uhe : dhe, o = e ? e() : {};
    return i(t, n, K0(r), o);
  };
}
var NC = function() {
  return ca.Date.now();
}, ghe = "Expected a function", vhe = Math.max, mhe = Math.min;
function Vf(n, e, t) {
  var r, i, o, s, a, l, u = 0, c = !1, h = !1, f = !0;
  if (typeof n != "function")
    throw new TypeError(ghe);
  e = wp(e) || 0, Hn(t) && (c = !!t.leading, h = "maxWait" in t, o = h ? vhe(wp(t.maxWait) || 0, e) : o, f = "trailing" in t ? !!t.trailing : f);
  function d(x) {
    var S = r, _ = i;
    return r = i = void 0, u = x, s = n.apply(_, S), s;
  }
  function p(x) {
    return u = x, a = setTimeout(m, e), c ? d(x) : s;
  }
  function g(x) {
    var S = x - l, _ = x - u, C = e - S;
    return h ? mhe(C, o - _) : C;
  }
  function v(x) {
    var S = x - l, _ = x - u;
    return l === void 0 || S >= e || S < 0 || h && _ >= o;
  }
  function m() {
    var x = NC();
    if (v(x))
      return y(x);
    a = setTimeout(m, g(x));
  }
  function y(x) {
    return a = void 0, f && r ? d(x) : (r = i = void 0, s);
  }
  function b() {
    a !== void 0 && clearTimeout(a), u = 0, r = l = i = a = void 0;
  }
  function O() {
    return a === void 0 ? s : y(NC());
  }
  function w() {
    var x = NC(), S = v(x);
    if (r = arguments, i = this, l = x, S) {
      if (a === void 0)
        return p(l);
      if (h)
        return clearTimeout(a), a = setTimeout(m, e), d(l);
    }
    return a === void 0 && (a = setTimeout(m, e)), s;
  }
  return w.cancel = b, w.flush = O, w;
}
var EG = Object.prototype, yhe = EG.hasOwnProperty, bhe = Qg(function(n, e) {
  n = Object(n);
  var t = -1, r = e.length, i = r > 2 ? e[2] : void 0;
  for (i && Ty(e[0], e[1], i) && (r = 1); ++t < r; )
    for (var o = e[t], s = Wg(o), a = -1, l = s.length; ++a < l; ) {
      var u = s[a], c = n[u];
      (c === void 0 || Fg(c, EG[u]) && !yhe.call(n, u)) && (n[u] = o[u]);
    }
  return n;
});
function CP(n, e, t) {
  (t !== void 0 && !Fg(n[e], t) || t === void 0 && !(e in n)) && VS(n, e, t);
}
function Vw(n) {
  return ws(n) && Yc(n);
}
function AP(n, e) {
  if (!(e === "constructor" && typeof n[e] == "function") && e != "__proto__")
    return n[e];
}
function Ohe(n) {
  return cd(n, Wg(n));
}
function whe(n, e, t, r, i, o, s) {
  var a = AP(n, t), l = AP(e, t), u = s.get(l);
  if (u) {
    CP(n, t, u);
    return;
  }
  var c = o ? o(a, l, t + "", n, e, s) : void 0, h = c === void 0;
  if (h) {
    var f = Fr(l), d = !f && jp(l), p = !f && !d && FS(l);
    c = l, f || d || p ? Fr(a) ? c = a : Vw(a) ? c = MW(a) : d ? (h = !1, c = fG(l, !0)) : p ? (h = !1, c = mG(l, !0)) : c = [] : ha(l) || Gp(l) ? (c = a, Gp(a) ? c = Ohe(a) : (!Hn(a) || bD(a)) && (c = yG(l))) : h = !1;
  }
  h && (s.set(l, c), i(c, l, r, o, s), s.delete(l)), CP(n, t, c);
}
function jS(n, e, t, r, i) {
  n !== e && TG(e, function(o, s) {
    if (i || (i = new Us()), Hn(o))
      whe(n, e, s, t, jS, r, i);
    else {
      var a = r ? r(AP(n, s), o, s + "", n, e, i) : void 0;
      a === void 0 && (a = o), CP(n, s, a);
    }
  }, Wg);
}
function kG(n, e, t, r, i, o) {
  return Hn(n) && Hn(e) && (o.set(e, n), jS(n, e, void 0, kG, o), o.delete(e)), n;
}
var xhe = wD(function(n, e, t, r) {
  jS(n, e, t, r);
});
const She = xhe;
var MG = Qg(function(n) {
  return n.push(void 0, kG), kW(She, void 0, n);
});
function DG(n, e, t) {
  for (var r = -1, i = n == null ? 0 : n.length; ++r < i; )
    if (t(e, n[r]))
      return !0;
  return !1;
}
var _he = 200;
function Che(n, e, t, r) {
  var i = -1, o = IW, s = !0, a = n.length, l = [], u = e.length;
  if (!a)
    return l;
  t && (e = Of(e, Y0(t))), r ? (o = DG, s = !1) : e.length >= _he && (o = kD, s = !1, e = new Yp(e));
  e:
    for (; ++i < a; ) {
      var c = n[i], h = t == null ? c : t(c);
      if (c = r || c !== 0 ? c : 0, s && h === h) {
        for (var f = u; f--; )
          if (e[f] === h)
            continue e;
        l.push(c);
      } else
        o(e, h, r) || l.push(c);
    }
  return l;
}
var Ahe = Qg(function(n, e) {
  return Vw(n) ? Che(n, Hg(e, 1, Vw, !0)) : [];
});
function The(n) {
  var e = n == null ? 0 : n.length;
  return e ? n[e - 1] : void 0;
}
var Phe = Math.max, Ehe = Math.min;
function khe(n, e, t) {
  var r = n == null ? 0 : n.length;
  if (!r)
    return -1;
  var i = r - 1;
  return t !== void 0 && (i = EW(t), i = t < 0 ? Phe(r + i, 0) : Ehe(i, r - 1)), LW(n, K0(e), i, !0);
}
function LG(n, e) {
  var t = -1, r = Yc(n) ? Array(n.length) : [];
  return PG(n, function(i, o, s) {
    r[++t] = e(i, o, s);
  }), r;
}
function Mhe(n, e) {
  var t = Fr(n) ? Of : LG;
  return t(n, K0(e));
}
function Dhe(n, e) {
  return Hg(Mhe(n, e), 1);
}
function zw(n) {
  for (var e = -1, t = n == null ? 0 : n.length, r = {}; ++e < t; ) {
    var i = n[e];
    r[i[0]] = i[1];
  }
  return r;
}
var Lhe = Object.prototype, Ihe = Lhe.hasOwnProperty, _N = phe(function(n, e, t) {
  Ihe.call(n, t) ? n[t].push(e) : VS(n, t, [e]);
});
function Rhe(n, e) {
  return n > e;
}
var $he = Object.prototype, Nhe = $he.hasOwnProperty;
function Bhe(n, e) {
  return n != null && Nhe.call(n, e);
}
function Zb(n, e) {
  return n != null && CG(n, e, Bhe);
}
function Vhe(n, e) {
  return e.length < 2 ? n : U0(n, AD(e, 0, -1));
}
var zhe = "[object Boolean]";
function cVt(n) {
  return n === !0 || n === !1 || ws(n) && cu(n) == zhe;
}
var Fhe = "[object Map]", Qhe = "[object Set]", Zhe = Object.prototype, Whe = Zhe.hasOwnProperty;
function IG(n) {
  if (n == null)
    return !0;
  if (Yc(n) && (Fr(n) || typeof n == "string" || typeof n.splice == "function" || jp(n) || FS(n) || Gp(n)))
    return !n.length;
  var e = qp(n);
  if (e == Fhe || e == Qhe)
    return !n.size;
  if (q0(n))
    return !FW(n).length;
  for (var t in n)
    if (Whe.call(n, t))
      return !1;
  return !0;
}
function wi(n, e) {
  return GS(n, e);
}
var Ghe = "[object Number]";
function CN(n) {
  return typeof n == "number" || ws(n) && cu(n) == Ghe;
}
function No(n) {
  return n == null;
}
function RG(n) {
  return n === void 0;
}
var jhe = TD(function(n, e, t) {
  return n + (t ? "-" : "") + e.toLowerCase();
});
const hVt = jhe;
var Hhe = UW("toLowerCase");
function qhe(n, e) {
  return n < e;
}
function $G(n, e, t) {
  for (var r = -1, i = n.length; ++r < i; ) {
    var o = n[r], s = e(o);
    if (s != null && (a === void 0 ? s === s && !sl(s) : t(s, a)))
      var a = s, l = o;
  }
  return l;
}
function Yhe(n) {
  return n && n.length ? $G(n, qc, Rhe) : void 0;
}
function Xhe(n, e) {
  for (var t, r = -1, i = n.length; ++r < i; ) {
    var o = e(n[r]);
    o !== void 0 && (t = t === void 0 ? o : t + o);
  }
  return t;
}
var Uhe = NaN;
function Khe(n, e) {
  var t = n == null ? 0 : n.length;
  return t ? Xhe(n, e) / t : Uhe;
}
function fVt(n) {
  return Khe(n, qc);
}
var jn = wD(function(n, e, t) {
  jS(n, e, t);
});
function dVt(n) {
  return n && n.length ? $G(n, qc, qhe) : void 0;
}
function NG(n, e) {
  return e = Gg(e, n), n = Vhe(n, e), n == null || delete n[jg(The(e))];
}
function Jhe(n) {
  return ha(n) ? void 0 : n;
}
var efe = 1, tfe = 2, nfe = 4, pVt = QW(function(n, e) {
  var t = {};
  if (n == null)
    return t;
  var r = !1;
  e = Of(e, function(o) {
    return o = Gg(o, n), r || (r = o.length > 1), o;
  }), cd(n, vG(n), t), r && (t = Sp(t, efe | tfe | nfe, Jhe));
  for (var i = e.length; i--; )
    NG(t, e[i]);
  return t;
});
function BG(n, e, t, r) {
  if (!Hn(n))
    return n;
  e = Gg(e, n);
  for (var i = -1, o = e.length, s = o - 1, a = n; a != null && ++i < o; ) {
    var l = jg(e[i]), u = t;
    if (l === "__proto__" || l === "constructor" || l === "prototype")
      return n;
    if (i != s) {
      var c = a[l];
      u = r ? r(c, l, a) : void 0, u === void 0 && (u = Hn(c) ? c : BS(e[i + 1]) ? [] : {});
    }
    zS(a, l, u), a = a[l];
  }
  return n;
}
function rfe(n, e, t) {
  for (var r = -1, i = e.length, o = {}; ++r < i; ) {
    var s = e[r], a = U0(n, s);
    t(a, s) && BG(o, Gg(s, n), a);
  }
  return o;
}
function ife(n, e) {
  var t = n.length;
  for (n.sort(e); t--; )
    n[t] = n[t].value;
  return n;
}
function ofe(n, e) {
  if (n !== e) {
    var t = n !== void 0, r = n === null, i = n === n, o = sl(n), s = e !== void 0, a = e === null, l = e === e, u = sl(e);
    if (!a && !u && !o && n > e || o && s && l && !a && !u || r && s && l || !t && l || !i)
      return 1;
    if (!r && !o && !u && n < e || u && t && i && !r && !o || a && t && i || !s && i || !l)
      return -1;
  }
  return 0;
}
function sfe(n, e, t) {
  for (var r = -1, i = n.criteria, o = e.criteria, s = i.length, a = t.length; ++r < s; ) {
    var l = ofe(i[r], o[r]);
    if (l) {
      if (r >= a)
        return l;
      var u = t[r];
      return l * (u == "desc" ? -1 : 1);
    }
  }
  return n.index - e.index;
}
function afe(n, e, t) {
  e.length ? e = Of(e, function(o) {
    return Fr(o) ? function(s) {
      return U0(s, o.length === 1 ? o[0] : o);
    } : o;
  }) : e = [qc];
  var r = -1;
  e = Of(e, Y0(K0));
  var i = LG(n, function(o, s, a) {
    var l = Of(e, function(u) {
      return u(o);
    });
    return { criteria: l, index: ++r, value: o };
  });
  return ife(i, function(o, s) {
    return sfe(o, s, t);
  });
}
function lfe(n, e) {
  return rfe(n, e, function(t, r) {
    return AG(n, r);
  });
}
var TP = QW(function(n, e) {
  return n == null ? {} : lfe(n, e);
});
function ufe(n, e, t) {
  return n == null ? n : BG(n, e, t);
}
var VG = Qg(function(n, e) {
  if (n == null)
    return [];
  var t = e.length;
  return t > 1 && Ty(n, e[0], e[1]) ? e = [] : t > 2 && Ty(e[0], e[1], e[2]) && (e = [e[0]]), afe(n, Hg(e, 1), []);
}), cfe = 4294967295, hfe = cfe - 1, ffe = Math.floor, dfe = Math.min;
function zG(n, e, t, r) {
  var i = 0, o = n == null ? 0 : n.length;
  if (o === 0)
    return 0;
  e = t(e);
  for (var s = e !== e, a = e === null, l = sl(e), u = e === void 0; i < o; ) {
    var c = ffe((i + o) / 2), h = t(n[c]), f = h !== void 0, d = h === null, p = h === h, g = sl(h);
    if (s)
      var v = r || p;
    else
      u ? v = p && (r || f) : a ? v = p && f && (r || !d) : l ? v = p && f && !d && (r || !g) : d || g ? v = !1 : v = r ? h <= e : h < e;
    v ? i = c + 1 : o = c;
  }
  return dfe(o, hfe);
}
var pfe = 4294967295, gfe = pfe >>> 1;
function vfe(n, e, t) {
  var r = 0, i = n == null ? r : n.length;
  if (typeof e == "number" && e === e && i <= gfe) {
    for (; r < i; ) {
      var o = r + i >>> 1, s = n[o];
      s !== null && !sl(s) && (t ? s <= e : s < e) ? r = o + 1 : i = o;
    }
    return i;
  }
  return zG(n, e, qc, t);
}
function mfe(n, e) {
  return vfe(n, e);
}
function yfe(n, e, t) {
  return zG(n, e, K0(t));
}
var bfe = TD(function(n, e, t) {
  return n + (t ? " " : "") + Nw(e);
}), Ofe = "Expected a function";
function wfe(n, e, t) {
  var r = !0, i = !0;
  if (typeof n != "function")
    throw new TypeError(Ofe);
  return Hn(t) && (r = "leading" in t ? !!t.leading : r, i = "trailing" in t ? !!t.trailing : i), Vf(n, e, {
    leading: r,
    maxWait: e,
    trailing: i
  });
}
var xfe = 1 / 0, Sfe = xp && 1 / MD(new xp([, -0]))[1] == xfe ? function(n) {
  return new xp(n);
} : Roe, _fe = 200;
function FG(n, e, t) {
  var r = -1, i = IW, o = n.length, s = !0, a = [], l = a;
  if (t)
    s = !1, i = DG;
  else if (o >= _fe) {
    var u = e ? null : Sfe(n);
    if (u)
      return MD(u);
    s = !1, i = kD, l = new Yp();
  } else
    l = e ? [] : a;
  e:
    for (; ++r < o; ) {
      var c = n[r], h = e ? e(c) : c;
      if (c = t || c !== 0 ? c : 0, s && h === h) {
        for (var f = l.length; f--; )
          if (l[f] === h)
            continue e;
        e && l.push(h), a.push(c);
      } else
        i(l, h, t) || (l !== a && l.push(h), a.push(c));
    }
  return a;
}
var AN = Qg(function(n) {
  return FG(Hg(n, 1, Vw, !0));
});
function QG(n) {
  return n && n.length ? FG(n) : [];
}
function gVt(n, e) {
  return n == null ? !0 : NG(n, e);
}
/*! Element Plus Icons Vue v2.3.1 */
var Cfe = /* @__PURE__ */ U({
  name: "ArrowDown",
  __name: "arrow-down",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"
      })
    ]));
  }
}), HS = Cfe, Afe = /* @__PURE__ */ U({
  name: "ArrowLeft",
  __name: "arrow-left",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"
      })
    ]));
  }
}), ZG = Afe, Tfe = /* @__PURE__ */ U({
  name: "ArrowRight",
  __name: "arrow-right",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"
      })
    ]));
  }
}), J0 = Tfe, Pfe = /* @__PURE__ */ U({
  name: "ArrowUp",
  __name: "arrow-up",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m488.832 344.32-339.84 356.672a32 32 0 0 0 0 44.16l.384.384a29.44 29.44 0 0 0 42.688 0l320-335.872 319.872 335.872a29.44 29.44 0 0 0 42.688 0l.384-.384a32 32 0 0 0 0-44.16L535.168 344.32a32 32 0 0 0-46.336 0"
      })
    ]));
  }
}), WG = Pfe, Efe = /* @__PURE__ */ U({
  name: "Check",
  __name: "check",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M406.656 706.944 195.84 496.256a32 32 0 1 0-45.248 45.248l256 256 512-512a32 32 0 0 0-45.248-45.248L406.592 706.944z"
      })
    ]));
  }
}), kfe = Efe, Mfe = /* @__PURE__ */ U({
  name: "CircleCheck",
  __name: "circle-check",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      }),
      J("path", {
        fill: "currentColor",
        d: "M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"
      })
    ]));
  }
}), GG = Mfe, Dfe = /* @__PURE__ */ U({
  name: "CircleCloseFilled",
  __name: "circle-close-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 393.664L407.936 353.6a38.4 38.4 0 1 0-54.336 54.336L457.664 512 353.6 616.064a38.4 38.4 0 1 0 54.336 54.336L512 566.336 616.064 670.4a38.4 38.4 0 1 0 54.336-54.336L566.336 512 670.4 407.936a38.4 38.4 0 1 0-54.336-54.336z"
      })
    ]));
  }
}), jG = Dfe, Lfe = /* @__PURE__ */ U({
  name: "CircleClose",
  __name: "circle-close",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248z"
      }),
      J("path", {
        fill: "currentColor",
        d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      })
    ]));
  }
}), qS = Lfe, Ife = /* @__PURE__ */ U({
  name: "Close",
  __name: "close",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
      })
    ]));
  }
}), Oc = Ife, Rfe = /* @__PURE__ */ U({
  name: "CopyDocument",
  __name: "copy-document",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64z"
      }),
      J("path", {
        fill: "currentColor",
        d: "M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64"
      })
    ]));
  }
}), vVt = Rfe, $fe = /* @__PURE__ */ U({
  name: "DArrowLeft",
  __name: "d-arrow-left",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M529.408 149.376a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L259.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L197.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224zm256 0a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L515.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L453.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224z"
      })
    ]));
  }
}), Nfe = $fe, Bfe = /* @__PURE__ */ U({
  name: "DArrowRight",
  __name: "d-arrow-right",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M452.864 149.312a29.12 29.12 0 0 1 41.728.064L826.24 489.664a32 32 0 0 1 0 44.672L494.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L764.736 512 452.864 192a30.592 30.592 0 0 1 0-42.688m-256 0a29.12 29.12 0 0 1 41.728.064L570.24 489.664a32 32 0 0 1 0 44.672L238.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L508.736 512 196.864 192a30.592 30.592 0 0 1 0-42.688z"
      })
    ]));
  }
}), Vfe = Bfe, zfe = /* @__PURE__ */ U({
  name: "Delete",
  __name: "delete",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M160 256H96a32 32 0 0 1 0-64h256V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64h-64v672a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32zm448-64v-64H416v64zM224 896h576V256H224zm192-128a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32m192 0a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32"
      })
    ]));
  }
}), mVt = zfe, Ffe = /* @__PURE__ */ U({
  name: "Download",
  __name: "download",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64m384-253.696 236.288-236.352 45.248 45.248L508.8 704 192 387.2l45.248-45.248L480 584.704V128h64z"
      })
    ]));
  }
}), yVt = Ffe, Qfe = /* @__PURE__ */ U({
  name: "Edit",
  __name: "edit",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M832 512a32 32 0 1 1 64 0v352a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h352a32 32 0 0 1 0 64H192v640h640z"
      }),
      J("path", {
        fill: "currentColor",
        d: "m469.952 554.24 52.8-7.552L847.104 222.4a32 32 0 1 0-45.248-45.248L477.44 501.44l-7.552 52.8zm422.4-422.4a96 96 0 0 1 0 135.808l-331.84 331.84a32 32 0 0 1-18.112 9.088L436.8 623.68a32 32 0 0 1-36.224-36.224l15.104-105.6a32 32 0 0 1 9.024-18.112l331.904-331.84a96 96 0 0 1 135.744 0z"
      })
    ]));
  }
}), bVt = Qfe, Zfe = /* @__PURE__ */ U({
  name: "Files",
  __name: "files",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M128 384v448h768V384zm-32-64h832a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V352a32 32 0 0 1 32-32m64-128h704v64H160zm96-128h512v64H256z"
      })
    ]));
  }
}), OVt = Zfe, Wfe = /* @__PURE__ */ U({
  name: "Fold",
  __name: "fold",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M896 192H128v128h768zm0 256H384v128h512zm0 256H128v128h768zM320 384 128 512l192 128z"
      })
    ]));
  }
}), wVt = Wfe, Gfe = /* @__PURE__ */ U({
  name: "FullScreen",
  __name: "full-screen",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m160 96.064 192 .192a32 32 0 0 1 0 64l-192-.192V352a32 32 0 0 1-64 0V96h64zm0 831.872V928H96V672a32 32 0 1 1 64 0v191.936l192-.192a32 32 0 1 1 0 64zM864 96.064V96h64v256a32 32 0 1 1-64 0V160.064l-192 .192a32 32 0 1 1 0-64l192-.192zm0 831.872-192-.192a32 32 0 0 1 0-64l192 .192V672a32 32 0 1 1 64 0v256h-64z"
      })
    ]));
  }
}), xVt = Gfe, jfe = /* @__PURE__ */ U({
  name: "Help",
  __name: "help",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m759.936 805.248-90.944-91.008A254.912 254.912 0 0 1 512 768a254.912 254.912 0 0 1-156.992-53.76l-90.944 91.008A382.464 382.464 0 0 0 512 896c94.528 0 181.12-34.176 247.936-90.752m45.312-45.312A382.464 382.464 0 0 0 896 512c0-94.528-34.176-181.12-90.752-247.936l-91.008 90.944C747.904 398.4 768 452.864 768 512c0 59.136-20.096 113.6-53.76 156.992l91.008 90.944zm-45.312-541.184A382.464 382.464 0 0 0 512 128c-94.528 0-181.12 34.176-247.936 90.752l90.944 91.008A254.912 254.912 0 0 1 512 256c59.136 0 113.6 20.096 156.992 53.76l90.944-91.008zm-541.184 45.312A382.464 382.464 0 0 0 128 512c0 94.528 34.176 181.12 90.752 247.936l91.008-90.944A254.912 254.912 0 0 1 256 512c0-59.136 20.096-113.6 53.76-156.992zm417.28 394.496a194.56 194.56 0 0 0 22.528-22.528C686.912 602.56 704 559.232 704 512a191.232 191.232 0 0 0-67.968-146.56A191.296 191.296 0 0 0 512 320a191.232 191.232 0 0 0-146.56 67.968C337.088 421.44 320 464.768 320 512a191.232 191.232 0 0 0 67.968 146.56C421.44 686.912 464.768 704 512 704c47.296 0 90.56-17.088 124.032-45.44zM512 960a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      })
    ]));
  }
}), SVt = jfe, Hfe = /* @__PURE__ */ U({
  name: "Hide",
  __name: "hide",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2zM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z"
      }),
      J("path", {
        fill: "currentColor",
        d: "M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z"
      })
    ]));
  }
}), qfe = Hfe, Yfe = /* @__PURE__ */ U({
  name: "InfoFilled",
  __name: "info-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896.064A448 448 0 0 1 512 64m67.2 275.072c33.28 0 60.288-23.104 60.288-57.344s-27.072-57.344-60.288-57.344c-33.28 0-60.16 23.104-60.16 57.344s26.88 57.344 60.16 57.344M590.912 699.2c0-6.848 2.368-24.64 1.024-34.752l-52.608 60.544c-10.88 11.456-24.512 19.392-30.912 17.28a12.992 12.992 0 0 1-8.256-14.72l87.68-276.992c7.168-35.136-12.544-67.2-54.336-71.296-44.096 0-108.992 44.736-148.48 101.504 0 6.784-1.28 23.68.064 33.792l52.544-60.608c10.88-11.328 23.552-19.328 29.952-17.152a12.8 12.8 0 0 1 7.808 16.128L388.48 728.576c-10.048 32.256 8.96 63.872 55.04 71.04 67.84 0 107.904-43.648 147.456-100.416z"
      })
    ]));
  }
}), HG = Yfe, Xfe = /* @__PURE__ */ U({
  name: "Loading",
  __name: "loading",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32m0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32m448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32m-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32M195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0m-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"
      })
    ]));
  }
}), YS = Xfe, Ufe = /* @__PURE__ */ U({
  name: "MagicStick",
  __name: "magic-stick",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64h64v192h-64zm0 576h64v192h-64zM160 480v-64h192v64zm576 0v-64h192v64zM249.856 199.04l45.248-45.184L430.848 289.6 385.6 334.848 249.856 199.104zM657.152 606.4l45.248-45.248 135.744 135.744-45.248 45.248zM114.048 923.2 68.8 877.952l316.8-316.8 45.248 45.248zM702.4 334.848 657.152 289.6l135.744-135.744 45.248 45.248z"
      })
    ]));
  }
}), _Vt = Ufe, Kfe = /* @__PURE__ */ U({
  name: "Minus",
  __name: "minus",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64"
      })
    ]));
  }
}), Jfe = Kfe, ede = /* @__PURE__ */ U({
  name: "MoreFilled",
  __name: "more-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M176 416a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224"
      })
    ]));
  }
}), TN = ede, tde = /* @__PURE__ */ U({
  name: "Plus",
  __name: "plus",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M480 480V128a32 32 0 0 1 64 0v352h352a32 32 0 1 1 0 64H544v352a32 32 0 1 1-64 0V544H128a32 32 0 0 1 0-64z"
      })
    ]));
  }
}), qG = tde, nde = /* @__PURE__ */ U({
  name: "QuestionFilled",
  __name: "question-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m23.744 191.488c-52.096 0-92.928 14.784-123.2 44.352-30.976 29.568-45.76 70.4-45.76 122.496h80.256c0-29.568 5.632-52.8 17.6-68.992 13.376-19.712 35.2-28.864 66.176-28.864 23.936 0 42.944 6.336 56.32 19.712 12.672 13.376 19.712 31.68 19.712 54.912 0 17.6-6.336 34.496-19.008 49.984l-8.448 9.856c-45.76 40.832-73.216 70.4-82.368 89.408-9.856 19.008-14.08 42.24-14.08 68.992v9.856h80.96v-9.856c0-16.896 3.52-31.68 10.56-45.76 6.336-12.672 15.488-24.64 28.16-35.2 33.792-29.568 54.208-48.576 60.544-55.616 16.896-22.528 26.048-51.392 26.048-86.592 0-42.944-14.08-76.736-42.24-101.376-28.16-25.344-65.472-37.312-111.232-37.312zm-12.672 406.208a54.272 54.272 0 0 0-38.72 14.784 49.408 49.408 0 0 0-15.488 38.016c0 15.488 4.928 28.16 15.488 38.016A54.848 54.848 0 0 0 523.072 768c15.488 0 28.16-4.928 38.72-14.784a51.52 51.52 0 0 0 16.192-38.72 51.968 51.968 0 0 0-15.488-38.016 55.936 55.936 0 0 0-39.424-14.784z"
      })
    ]));
  }
}), CVt = nde, rde = /* @__PURE__ */ U({
  name: "RefreshLeft",
  __name: "refresh-left",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M289.088 296.704h92.992a32 32 0 0 1 0 64H232.96a32 32 0 0 1-32-32V179.712a32 32 0 0 1 64 0v50.56a384 384 0 0 1 643.84 282.88 384 384 0 0 1-383.936 384 384 384 0 0 1-384-384h64a320 320 0 1 0 640 0 320 320 0 0 0-555.712-216.448z"
      })
    ]));
  }
}), AVt = rde, ide = /* @__PURE__ */ U({
  name: "RefreshRight",
  __name: "refresh-right",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M784.512 230.272v-50.56a32 32 0 1 1 64 0v149.056a32 32 0 0 1-32 32H667.52a32 32 0 1 1 0-64h92.992A320 320 0 1 0 524.8 833.152a320 320 0 0 0 320-320h64a384 384 0 0 1-384 384 384 384 0 0 1-384-384 384 384 0 0 1 643.712-282.88z"
      })
    ]));
  }
}), TVt = ide, ode = /* @__PURE__ */ U({
  name: "Refresh",
  __name: "refresh",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M771.776 794.88A384 384 0 0 1 128 512h64a320 320 0 0 0 555.712 216.448H654.72a32 32 0 1 1 0-64h149.056a32 32 0 0 1 32 32v148.928a32 32 0 1 1-64 0v-50.56zM276.288 295.616h92.992a32 32 0 0 1 0 64H220.16a32 32 0 0 1-32-32V178.56a32 32 0 0 1 64 0v50.56A384 384 0 0 1 896.128 512h-64a320 320 0 0 0-555.776-216.384z"
      })
    ]));
  }
}), PVt = ode, sde = /* @__PURE__ */ U({
  name: "Refrigerator",
  __name: "refrigerator",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M256 448h512V160a32 32 0 0 0-32-32H288a32 32 0 0 0-32 32zm0 64v352a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V512zm32-448h448a96 96 0 0 1 96 96v704a96 96 0 0 1-96 96H288a96 96 0 0 1-96-96V160a96 96 0 0 1 96-96m32 224h64v96h-64zm0 288h64v96h-64z"
      })
    ]));
  }
}), EVt = sde, ade = /* @__PURE__ */ U({
  name: "RemoveFilled",
  __name: "remove-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896M288 512a38.4 38.4 0 0 0 38.4 38.4h371.2a38.4 38.4 0 0 0 0-76.8H326.4A38.4 38.4 0 0 0 288 512"
      })
    ]));
  }
}), kVt = ade, lde = /* @__PURE__ */ U({
  name: "Search",
  __name: "search",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704"
      })
    ]));
  }
}), MVt = lde, ude = /* @__PURE__ */ U({
  name: "Select",
  __name: "select",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M77.248 415.04a64 64 0 0 1 90.496 0l226.304 226.304L846.528 188.8a64 64 0 1 1 90.56 90.496l-543.04 543.04-316.8-316.8a64 64 0 0 1 0-90.496z"
      })
    ]));
  }
}), DVt = ude, cde = /* @__PURE__ */ U({
  name: "SuccessFilled",
  __name: "success-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336z"
      })
    ]));
  }
}), YG = cde, hde = /* @__PURE__ */ U({
  name: "Tickets",
  __name: "tickets",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M192 128v768h640V128zm-32-64h704a32 32 0 0 1 32 32v832a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32m160 448h384v64H320zm0-192h192v64H320zm0 384h384v64H320z"
      })
    ]));
  }
}), LVt = hde, fde = /* @__PURE__ */ U({
  name: "Tools",
  __name: "tools",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M764.416 254.72a351.68 351.68 0 0 1 86.336 149.184H960v192.064H850.752a351.68 351.68 0 0 1-86.336 149.312l54.72 94.72-166.272 96-54.592-94.72a352.64 352.64 0 0 1-172.48 0L371.136 936l-166.272-96 54.72-94.72a351.68 351.68 0 0 1-86.336-149.312H64v-192h109.248a351.68 351.68 0 0 1 86.336-149.312L204.8 160l166.208-96h.192l54.656 94.592a352.64 352.64 0 0 1 172.48 0L652.8 64h.128L819.2 160l-54.72 94.72zM704 499.968a192 192 0 1 0-384 0 192 192 0 0 0 384 0"
      })
    ]));
  }
}), IVt = fde, dde = /* @__PURE__ */ U({
  name: "TrendCharts",
  __name: "trend-charts",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M128 896V128h768v768zm291.712-327.296 128 102.4 180.16-201.792-47.744-42.624-139.84 156.608-128-102.4-180.16 201.792 47.744 42.624 139.84-156.608zM816 352a48 48 0 1 0-96 0 48 48 0 0 0 96 0"
      })
    ]));
  }
}), RVt = dde, pde = /* @__PURE__ */ U({
  name: "Upload",
  __name: "upload",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64m384-578.304V704h-64V247.296L237.248 490.048 192 444.8 508.8 128l316.8 316.8-45.312 45.248z"
      })
    ]));
  }
}), $Vt = pde, gde = /* @__PURE__ */ U({
  name: "View",
  __name: "view",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352m0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448m0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160"
      })
    ]));
  }
}), vde = gde, mde = /* @__PURE__ */ U({
  name: "WarnTriangleFilled",
  __name: "warn-triangle-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      "xml:space": "preserve",
      style: { "enable-background": "new 0 0 1024 1024" },
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M928.99 755.83 574.6 203.25c-12.89-20.16-36.76-32.58-62.6-32.58s-49.71 12.43-62.6 32.58L95.01 755.83c-12.91 20.12-12.9 44.91.01 65.03 12.92 20.12 36.78 32.51 62.59 32.49h708.78c25.82.01 49.68-12.37 62.59-32.49 12.91-20.12 12.92-44.91.01-65.03M554.67 768h-85.33v-85.33h85.33zm0-426.67v298.66h-85.33V341.32z"
      })
    ]));
  }
}), NVt = mde, yde = /* @__PURE__ */ U({
  name: "WarningFilled",
  __name: "warning-filled",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 192a58.432 58.432 0 0 0-58.24 63.744l23.36 256.384a35.072 35.072 0 0 0 69.76 0l23.296-256.384A58.432 58.432 0 0 0 512 256m0 512a51.2 51.2 0 1 0 0-102.4 51.2 51.2 0 0 0 0 102.4"
      })
    ]));
  }
}), DD = yde, bde = /* @__PURE__ */ U({
  name: "Warning",
  __name: "warning",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 832a384 384 0 0 0 0-768 384 384 0 0 0 0 768m48-176a48 48 0 1 1-96 0 48 48 0 0 1 96 0m-48-464a32 32 0 0 1 32 32v288a32 32 0 0 1-64 0V288a32 32 0 0 1 32-32"
      })
    ]));
  }
}), BVt = bde, Ode = /* @__PURE__ */ U({
  name: "ZoomIn",
  __name: "zoom-in",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704m-32-384v-96a32 32 0 0 1 64 0v96h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64z"
      })
    ]));
  }
}), VVt = Ode, wde = /* @__PURE__ */ U({
  name: "ZoomOut",
  __name: "zoom-out",
  setup(n) {
    return (e, t) => (z(), X("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      J("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704M352 448h256a32 32 0 0 1 0 64H352a32 32 0 0 1 0-64"
      })
    ]));
  }
}), zVt = wde;
function Jh() {
  return Jh = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, Jh.apply(this, arguments);
}
function xde(n, e) {
  n.prototype = Object.create(e.prototype), n.prototype.constructor = n, Dy(n, e);
}
function PP(n) {
  return PP = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, PP(n);
}
function Dy(n, e) {
  return Dy = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(r, i) {
    return r.__proto__ = i, r;
  }, Dy(n, e);
}
function Sde() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch {
    return !1;
  }
}
function NO(n, e, t) {
  return Sde() ? NO = Reflect.construct.bind() : NO = function(i, o, s) {
    var a = [null];
    a.push.apply(a, o);
    var l = Function.bind.apply(i, a), u = new l();
    return s && Dy(u, s.prototype), u;
  }, NO.apply(null, arguments);
}
function _de(n) {
  return Function.toString.call(n).indexOf("[native code]") !== -1;
}
function EP(n) {
  var e = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return EP = function(r) {
    if (r === null || !_de(r))
      return r;
    if (typeof r != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof e < "u") {
      if (e.has(r))
        return e.get(r);
      e.set(r, i);
    }
    function i() {
      return NO(r, arguments, PP(this).constructor);
    }
    return i.prototype = Object.create(r.prototype, {
      constructor: {
        value: i,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), Dy(i, r);
  }, EP(n);
}
var Cde = /%[sdj%]/g, XG = function() {
};
typeof process < "u" && process.env && process.env.NODE_ENV !== "production" && typeof window < "u" && typeof document < "u" && (XG = function(e, t) {
  typeof console < "u" && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING > "u" && t.every(function(r) {
    return typeof r == "string";
  }) && console.warn(e, t);
});
function kP(n) {
  if (!n || !n.length)
    return null;
  var e = {};
  return n.forEach(function(t) {
    var r = t.field;
    e[r] = e[r] || [], e[r].push(t);
  }), e;
}
function Lo(n) {
  for (var e = arguments.length, t = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
    t[r - 1] = arguments[r];
  var i = 0, o = t.length;
  if (typeof n == "function")
    return n.apply(null, t);
  if (typeof n == "string") {
    var s = n.replace(Cde, function(a) {
      if (a === "%%")
        return "%";
      if (i >= o)
        return a;
      switch (a) {
        case "%s":
          return String(t[i++]);
        case "%d":
          return Number(t[i++]);
        case "%j":
          try {
            return JSON.stringify(t[i++]);
          } catch {
            return "[Circular]";
          }
          break;
        default:
          return a;
      }
    });
    return s;
  }
  return n;
}
function Ade(n) {
  return n === "string" || n === "url" || n === "hex" || n === "email" || n === "date" || n === "pattern";
}
function Pr(n, e) {
  return !!(n == null || e === "array" && Array.isArray(n) && !n.length || Ade(e) && typeof n == "string" && !n);
}
function Tde(n, e, t) {
  var r = [], i = 0, o = n.length;
  function s(a) {
    r.push.apply(r, a || []), i++, i === o && t(r);
  }
  n.forEach(function(a) {
    e(a, s);
  });
}
function PN(n, e, t) {
  var r = 0, i = n.length;
  function o(s) {
    if (s && s.length) {
      t(s);
      return;
    }
    var a = r;
    r = r + 1, a < i ? e(n[a], o) : t([]);
  }
  o([]);
}
function Pde(n) {
  var e = [];
  return Object.keys(n).forEach(function(t) {
    e.push.apply(e, n[t] || []);
  }), e;
}
var EN = /* @__PURE__ */ function(n) {
  xde(e, n);
  function e(t, r) {
    var i;
    return i = n.call(this, "Async Validation Error") || this, i.errors = t, i.fields = r, i;
  }
  return e;
}(/* @__PURE__ */ EP(Error));
function Ede(n, e, t, r, i) {
  if (e.first) {
    var o = new Promise(function(f, d) {
      var p = function(m) {
        return r(m), m.length ? d(new EN(m, kP(m))) : f(i);
      }, g = Pde(n);
      PN(g, t, p);
    });
    return o.catch(function(f) {
      return f;
    }), o;
  }
  var s = e.firstFields === !0 ? Object.keys(n) : e.firstFields || [], a = Object.keys(n), l = a.length, u = 0, c = [], h = new Promise(function(f, d) {
    var p = function(v) {
      if (c.push.apply(c, v), u++, u === l)
        return r(c), c.length ? d(new EN(c, kP(c))) : f(i);
    };
    a.length || (r(c), f(i)), a.forEach(function(g) {
      var v = n[g];
      s.indexOf(g) !== -1 ? PN(v, t, p) : Tde(v, t, p);
    });
  });
  return h.catch(function(f) {
    return f;
  }), h;
}
function kde(n) {
  return !!(n && n.message !== void 0);
}
function Mde(n, e) {
  for (var t = n, r = 0; r < e.length; r++) {
    if (t == null)
      return t;
    t = t[e[r]];
  }
  return t;
}
function kN(n, e) {
  return function(t) {
    var r;
    return n.fullFields ? r = Mde(e, n.fullFields) : r = e[t.field || n.fullField], kde(t) ? (t.field = t.field || n.fullField, t.fieldValue = r, t) : {
      message: typeof t == "function" ? t() : t,
      fieldValue: r,
      field: t.field || n.fullField
    };
  };
}
function MN(n, e) {
  if (e) {
    for (var t in e)
      if (e.hasOwnProperty(t)) {
        var r = e[t];
        typeof r == "object" && typeof n[t] == "object" ? n[t] = Jh({}, n[t], r) : n[t] = r;
      }
  }
  return n;
}
var UG = function(e, t, r, i, o, s) {
  e.required && (!r.hasOwnProperty(e.field) || Pr(t, s || e.type)) && i.push(Lo(o.messages.required, e.fullField));
}, Dde = function(e, t, r, i, o) {
  (/^\s+$/.test(t) || t === "") && i.push(Lo(o.messages.whitespace, e.fullField));
}, Wb, Lde = function() {
  if (Wb)
    return Wb;
  var n = "[a-fA-F\\d:]", e = function(O) {
    return O && O.includeBoundaries ? "(?:(?<=\\s|^)(?=" + n + ")|(?<=" + n + ")(?=\\s|$))" : "";
  }, t = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}", r = "[a-fA-F\\d]{1,4}", i = (`
(?:
(?:` + r + ":){7}(?:" + r + `|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:` + r + ":){6}(?:" + t + "|:" + r + `|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:` + r + ":){5}(?::" + t + "|(?::" + r + `){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:` + r + ":){4}(?:(?::" + r + "){0,1}:" + t + "|(?::" + r + `){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:` + r + ":){3}(?:(?::" + r + "){0,2}:" + t + "|(?::" + r + `){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:` + r + ":){2}(?:(?::" + r + "){0,3}:" + t + "|(?::" + r + `){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:` + r + ":){1}(?:(?::" + r + "){0,4}:" + t + "|(?::" + r + `){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::` + r + "){0,5}:" + t + "|(?::" + r + `){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`).replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim(), o = new RegExp("(?:^" + t + "$)|(?:^" + i + "$)"), s = new RegExp("^" + t + "$"), a = new RegExp("^" + i + "$"), l = function(O) {
    return O && O.exact ? o : new RegExp("(?:" + e(O) + t + e(O) + ")|(?:" + e(O) + i + e(O) + ")", "g");
  };
  l.v4 = function(b) {
    return b && b.exact ? s : new RegExp("" + e(b) + t + e(b), "g");
  }, l.v6 = function(b) {
    return b && b.exact ? a : new RegExp("" + e(b) + i + e(b), "g");
  };
  var u = "(?:(?:[a-z]+:)?//)", c = "(?:\\S+(?::\\S*)?@)?", h = l.v4().source, f = l.v6().source, d = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)", p = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*", g = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))", v = "(?::\\d{2,5})?", m = '(?:[/?#][^\\s"]*)?', y = "(?:" + u + "|www\\.)" + c + "(?:localhost|" + h + "|" + f + "|" + d + p + g + ")" + v + m;
  return Wb = new RegExp("(?:^" + y + "$)", "i"), Wb;
}, DN = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
  // url: new RegExp(
  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
  //   'i',
  // ),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
}, gm = {
  integer: function(e) {
    return gm.number(e) && parseInt(e, 10) === e;
  },
  float: function(e) {
    return gm.number(e) && !gm.integer(e);
  },
  array: function(e) {
    return Array.isArray(e);
  },
  regexp: function(e) {
    if (e instanceof RegExp)
      return !0;
    try {
      return !!new RegExp(e);
    } catch {
      return !1;
    }
  },
  date: function(e) {
    return typeof e.getTime == "function" && typeof e.getMonth == "function" && typeof e.getYear == "function" && !isNaN(e.getTime());
  },
  number: function(e) {
    return isNaN(e) ? !1 : typeof e == "number";
  },
  object: function(e) {
    return typeof e == "object" && !gm.array(e);
  },
  method: function(e) {
    return typeof e == "function";
  },
  email: function(e) {
    return typeof e == "string" && e.length <= 320 && !!e.match(DN.email);
  },
  url: function(e) {
    return typeof e == "string" && e.length <= 2048 && !!e.match(Lde());
  },
  hex: function(e) {
    return typeof e == "string" && !!e.match(DN.hex);
  }
}, Ide = function(e, t, r, i, o) {
  if (e.required && t === void 0) {
    UG(e, t, r, i, o);
    return;
  }
  var s = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"], a = e.type;
  s.indexOf(a) > -1 ? gm[a](t) || i.push(Lo(o.messages.types[a], e.fullField, e.type)) : a && typeof t !== e.type && i.push(Lo(o.messages.types[a], e.fullField, e.type));
}, Rde = function(e, t, r, i, o) {
  var s = typeof e.len == "number", a = typeof e.min == "number", l = typeof e.max == "number", u = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, c = t, h = null, f = typeof t == "number", d = typeof t == "string", p = Array.isArray(t);
  if (f ? h = "number" : d ? h = "string" : p && (h = "array"), !h)
    return !1;
  p && (c = t.length), d && (c = t.replace(u, "_").length), s ? c !== e.len && i.push(Lo(o.messages[h].len, e.fullField, e.len)) : a && !l && c < e.min ? i.push(Lo(o.messages[h].min, e.fullField, e.min)) : l && !a && c > e.max ? i.push(Lo(o.messages[h].max, e.fullField, e.max)) : a && l && (c < e.min || c > e.max) && i.push(Lo(o.messages[h].range, e.fullField, e.min, e.max));
}, Ed = "enum", $de = function(e, t, r, i, o) {
  e[Ed] = Array.isArray(e[Ed]) ? e[Ed] : [], e[Ed].indexOf(t) === -1 && i.push(Lo(o.messages[Ed], e.fullField, e[Ed].join(", ")));
}, Nde = function(e, t, r, i, o) {
  if (e.pattern) {
    if (e.pattern instanceof RegExp)
      e.pattern.lastIndex = 0, e.pattern.test(t) || i.push(Lo(o.messages.pattern.mismatch, e.fullField, t, e.pattern));
    else if (typeof e.pattern == "string") {
      var s = new RegExp(e.pattern);
      s.test(t) || i.push(Lo(o.messages.pattern.mismatch, e.fullField, t, e.pattern));
    }
  }
}, Bt = {
  required: UG,
  whitespace: Dde,
  type: Ide,
  range: Rde,
  enum: $de,
  pattern: Nde
}, Bde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t, "string") && !e.required)
      return r();
    Bt.required(e, t, i, s, o, "string"), Pr(t, "string") || (Bt.type(e, t, i, s, o), Bt.range(e, t, i, s, o), Bt.pattern(e, t, i, s, o), e.whitespace === !0 && Bt.whitespace(e, t, i, s, o));
  }
  r(s);
}, Vde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && Bt.type(e, t, i, s, o);
  }
  r(s);
}, zde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (t === "" && (t = void 0), Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && (Bt.type(e, t, i, s, o), Bt.range(e, t, i, s, o));
  }
  r(s);
}, Fde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && Bt.type(e, t, i, s, o);
  }
  r(s);
}, Qde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), Pr(t) || Bt.type(e, t, i, s, o);
  }
  r(s);
}, Zde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && (Bt.type(e, t, i, s, o), Bt.range(e, t, i, s, o));
  }
  r(s);
}, Wde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && (Bt.type(e, t, i, s, o), Bt.range(e, t, i, s, o));
  }
  r(s);
}, Gde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (t == null && !e.required)
      return r();
    Bt.required(e, t, i, s, o, "array"), t != null && (Bt.type(e, t, i, s, o), Bt.range(e, t, i, s, o));
  }
  r(s);
}, jde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && Bt.type(e, t, i, s, o);
  }
  r(s);
}, Hde = "enum", qde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o), t !== void 0 && Bt[Hde](e, t, i, s, o);
  }
  r(s);
}, Yde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t, "string") && !e.required)
      return r();
    Bt.required(e, t, i, s, o), Pr(t, "string") || Bt.pattern(e, t, i, s, o);
  }
  r(s);
}, Xde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t, "date") && !e.required)
      return r();
    if (Bt.required(e, t, i, s, o), !Pr(t, "date")) {
      var l;
      t instanceof Date ? l = t : l = new Date(t), Bt.type(e, l, i, s, o), l && Bt.range(e, l.getTime(), i, s, o);
    }
  }
  r(s);
}, Ude = function(e, t, r, i, o) {
  var s = [], a = Array.isArray(t) ? "array" : typeof t;
  Bt.required(e, t, i, s, o, a), r(s);
}, BC = function(e, t, r, i, o) {
  var s = e.type, a = [], l = e.required || !e.required && i.hasOwnProperty(e.field);
  if (l) {
    if (Pr(t, s) && !e.required)
      return r();
    Bt.required(e, t, i, a, o, s), Pr(t, s) || Bt.type(e, t, i, a, o);
  }
  r(a);
}, Kde = function(e, t, r, i, o) {
  var s = [], a = e.required || !e.required && i.hasOwnProperty(e.field);
  if (a) {
    if (Pr(t) && !e.required)
      return r();
    Bt.required(e, t, i, s, o);
  }
  r(s);
}, Fm = {
  string: Bde,
  method: Vde,
  number: zde,
  boolean: Fde,
  regexp: Qde,
  integer: Zde,
  float: Wde,
  array: Gde,
  object: jde,
  enum: qde,
  pattern: Yde,
  date: Xde,
  url: BC,
  hex: BC,
  email: BC,
  required: Ude,
  any: Kde
};
function MP() {
  return {
    default: "Validation error on field %s",
    required: "%s is required",
    enum: "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      boolean: "%s is not a %s",
      integer: "%s is not an %s",
      float: "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function() {
      var e = JSON.parse(JSON.stringify(this));
      return e.clone = this.clone, e;
    }
  };
}
var DP = MP(), eb = /* @__PURE__ */ function() {
  function n(t) {
    this.rules = null, this._messages = DP, this.define(t);
  }
  var e = n.prototype;
  return e.define = function(r) {
    var i = this;
    if (!r)
      throw new Error("Cannot configure a schema with no rules");
    if (typeof r != "object" || Array.isArray(r))
      throw new Error("Rules must be an object");
    this.rules = {}, Object.keys(r).forEach(function(o) {
      var s = r[o];
      i.rules[o] = Array.isArray(s) ? s : [s];
    });
  }, e.messages = function(r) {
    return r && (this._messages = MN(MP(), r)), this._messages;
  }, e.validate = function(r, i, o) {
    var s = this;
    i === void 0 && (i = {}), o === void 0 && (o = function() {
    });
    var a = r, l = i, u = o;
    if (typeof l == "function" && (u = l, l = {}), !this.rules || Object.keys(this.rules).length === 0)
      return u && u(null, a), Promise.resolve(a);
    function c(g) {
      var v = [], m = {};
      function y(O) {
        if (Array.isArray(O)) {
          var w;
          v = (w = v).concat.apply(w, O);
        } else
          v.push(O);
      }
      for (var b = 0; b < g.length; b++)
        y(g[b]);
      v.length ? (m = kP(v), u(v, m)) : u(null, a);
    }
    if (l.messages) {
      var h = this.messages();
      h === DP && (h = MP()), MN(h, l.messages), l.messages = h;
    } else
      l.messages = this.messages();
    var f = {}, d = l.keys || Object.keys(this.rules);
    d.forEach(function(g) {
      var v = s.rules[g], m = a[g];
      v.forEach(function(y) {
        var b = y;
        typeof b.transform == "function" && (a === r && (a = Jh({}, a)), m = a[g] = b.transform(m)), typeof b == "function" ? b = {
          validator: b
        } : b = Jh({}, b), b.validator = s.getValidationMethod(b), b.validator && (b.field = g, b.fullField = b.fullField || g, b.type = s.getType(b), f[g] = f[g] || [], f[g].push({
          rule: b,
          value: m,
          source: a,
          field: g
        }));
      });
    });
    var p = {};
    return Ede(f, l, function(g, v) {
      var m = g.rule, y = (m.type === "object" || m.type === "array") && (typeof m.fields == "object" || typeof m.defaultField == "object");
      y = y && (m.required || !m.required && g.value), m.field = g.field;
      function b(x, S) {
        return Jh({}, S, {
          fullField: m.fullField + "." + x,
          fullFields: m.fullFields ? [].concat(m.fullFields, [x]) : [x]
        });
      }
      function O(x) {
        x === void 0 && (x = []);
        var S = Array.isArray(x) ? x : [x];
        !l.suppressWarning && S.length && n.warning("async-validator:", S), S.length && m.message !== void 0 && (S = [].concat(m.message));
        var _ = S.map(kN(m, a));
        if (l.first && _.length)
          return p[m.field] = 1, v(_);
        if (!y)
          v(_);
        else {
          if (m.required && !g.value)
            return m.message !== void 0 ? _ = [].concat(m.message).map(kN(m, a)) : l.error && (_ = [l.error(m, Lo(l.messages.required, m.field))]), v(_);
          var C = {};
          m.defaultField && Object.keys(g.value).map(function(k) {
            C[k] = m.defaultField;
          }), C = Jh({}, C, g.rule.fields);
          var A = {};
          Object.keys(C).forEach(function(k) {
            var L = C[k], D = Array.isArray(L) ? L : [L];
            A[k] = D.map(b.bind(null, k));
          });
          var T = new n(A);
          T.messages(l.messages), g.rule.options && (g.rule.options.messages = l.messages, g.rule.options.error = l.error), T.validate(g.value, g.rule.options || l, function(k) {
            var L = [];
            _ && _.length && L.push.apply(L, _), k && k.length && L.push.apply(L, k), v(L.length ? L : null);
          });
        }
      }
      var w;
      if (m.asyncValidator)
        w = m.asyncValidator(m, g.value, O, g.source, l);
      else if (m.validator) {
        try {
          w = m.validator(m, g.value, O, g.source, l);
        } catch (x) {
          console.error == null || console.error(x), l.suppressValidatorError || setTimeout(function() {
            throw x;
          }, 0), O(x.message);
        }
        w === !0 ? O() : w === !1 ? O(typeof m.message == "function" ? m.message(m.fullField || m.field) : m.message || (m.fullField || m.field) + " fails") : w instanceof Array ? O(w) : w instanceof Error && O(w.message);
      }
      w && w.then && w.then(function() {
        return O();
      }, function(x) {
        return O(x);
      });
    }, function(g) {
      c(g);
    }, a);
  }, e.getType = function(r) {
    if (r.type === void 0 && r.pattern instanceof RegExp && (r.type = "pattern"), typeof r.validator != "function" && r.type && !Fm.hasOwnProperty(r.type))
      throw new Error(Lo("Unknown rule type %s", r.type));
    return r.type || "string";
  }, e.getValidationMethod = function(r) {
    if (typeof r.validator == "function")
      return r.validator;
    var i = Object.keys(r), o = i.indexOf("message");
    return o !== -1 && i.splice(o, 1), i.length === 1 && i[0] === "required" ? Fm.required : Fm[this.getType(r)] || void 0;
  }, n;
}();
eb.register = function(e, t) {
  if (typeof t != "function")
    throw new Error("Cannot register a validator by type, validator is not a function");
  Fm[e] = t;
};
eb.warning = XG;
eb.messages = DP;
eb.validators = Fm;
const Jde = 'a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])', epe = (n) => process.env.NODE_ENV === "test" ? !0 : getComputedStyle(n).position === "fixed" ? !1 : n.offsetParent !== null, LN = (n) => Array.from(n.querySelectorAll(Jde)).filter((e) => tpe(e) && epe(e)), tpe = (n) => {
  if (n.tabIndex > 0 || n.tabIndex === 0 && n.getAttribute("tabIndex") !== null)
    return !0;
  if (n.disabled)
    return !1;
  switch (n.nodeName) {
    case "A":
      return !!n.href && n.rel !== "ignore";
    case "INPUT":
      return !(n.type === "hidden" || n.type === "file");
    case "BUTTON":
    case "SELECT":
    case "TEXTAREA":
      return !0;
    default:
      return !1;
  }
}, kl = (n, e, { checkForDefaultPrevented: t = !0 } = {}) => (i) => {
  const o = n == null ? void 0 : n(i);
  if (t === !1 || !o)
    return e == null ? void 0 : e(i);
};
var npe = Object.defineProperty, rpe = Object.defineProperties, ipe = Object.getOwnPropertyDescriptors, IN = Object.getOwnPropertySymbols, ope = Object.prototype.hasOwnProperty, spe = Object.prototype.propertyIsEnumerable, RN = (n, e, t) => e in n ? npe(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, ape = (n, e) => {
  for (var t in e || (e = {}))
    ope.call(e, t) && RN(n, t, e[t]);
  if (IN)
    for (var t of IN(e))
      spe.call(e, t) && RN(n, t, e[t]);
  return n;
}, lpe = (n, e) => rpe(n, ipe(e));
function $N(n, e) {
  var t;
  const r = lo();
  return Ua(() => {
    r.value = n();
  }, lpe(ape({}, e), {
    flush: (t = e == null ? void 0 : e.flush) != null ? t : "sync"
  })), $S(r);
}
var NN;
const Ht = typeof window < "u", upe = (n) => typeof n == "string", Fw = () => {
}, cpe = Ht && ((NN = window == null ? void 0 : window.navigator) == null ? void 0 : NN.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function Ly(n) {
  return typeof n == "function" ? n() : P(n);
}
function hpe(n, e) {
  function t(...r) {
    return new Promise((i, o) => {
      Promise.resolve(n(() => e.apply(this, r), { fn: e, thisArg: this, args: r })).then(i).catch(o);
    });
  }
  return t;
}
function fpe(n, e = {}) {
  let t, r, i = Fw;
  const o = (a) => {
    clearTimeout(a), i(), i = Fw;
  };
  return (a) => {
    const l = Ly(n), u = Ly(e.maxWait);
    return t && o(t), l <= 0 || u !== void 0 && u <= 0 ? (r && (o(r), r = null), Promise.resolve(a())) : new Promise((c, h) => {
      i = e.rejectOnCancel ? h : c, u && !r && (r = setTimeout(() => {
        t && o(t), r = null, c(a());
      }, u)), t = setTimeout(() => {
        r && o(r), r = null, c(a());
      }, l);
    });
  };
}
function dpe(n) {
  return n;
}
function tb(n) {
  return xW() ? (vD(n), !0) : !1;
}
function ppe(n, e = 200, t = {}) {
  return hpe(fpe(e, t), n);
}
function gpe(n, e = 200, t = {}) {
  const r = F(n.value), i = ppe(() => {
    r.value = n.value;
  }, e, t);
  return de(n, () => i()), r;
}
function vpe(n, e = !0) {
  xt() ? dt(n) : e ? n() : ut(n);
}
function Qw(n, e, t = {}) {
  const {
    immediate: r = !0
  } = t, i = F(!1);
  let o = null;
  function s() {
    o && (clearTimeout(o), o = null);
  }
  function a() {
    i.value = !1, s();
  }
  function l(...u) {
    s(), i.value = !0, o = setTimeout(() => {
      i.value = !1, o = null, n(...u);
    }, Ly(e));
  }
  return r && (i.value = !0, Ht && l()), tb(a), {
    isPending: $S(i),
    start: l,
    stop: a
  };
}
function Bl(n) {
  var e;
  const t = Ly(n);
  return (e = t == null ? void 0 : t.$el) != null ? e : t;
}
const nb = Ht ? window : void 0, mpe = Ht ? window.document : void 0;
function co(...n) {
  let e, t, r, i;
  if (upe(n[0]) || Array.isArray(n[0]) ? ([t, r, i] = n, e = nb) : [e, t, r, i] = n, !e)
    return Fw;
  Array.isArray(t) || (t = [t]), Array.isArray(r) || (r = [r]);
  const o = [], s = () => {
    o.forEach((c) => c()), o.length = 0;
  }, a = (c, h, f, d) => (c.addEventListener(h, f, d), () => c.removeEventListener(h, f, d)), l = de(() => [Bl(e), Ly(i)], ([c, h]) => {
    s(), c && o.push(...t.flatMap((f) => r.map((d) => a(c, f, d, h))));
  }, { immediate: !0, flush: "post" }), u = () => {
    l(), s();
  };
  return tb(u), u;
}
let BN = !1;
function ype(n, e, t = {}) {
  const { window: r = nb, ignore: i = [], capture: o = !0, detectIframe: s = !1 } = t;
  if (!r)
    return;
  cpe && !BN && (BN = !0, Array.from(r.document.body.children).forEach((f) => f.addEventListener("click", Fw)));
  let a = !0;
  const l = (f) => i.some((d) => {
    if (typeof d == "string")
      return Array.from(r.document.querySelectorAll(d)).some((p) => p === f.target || f.composedPath().includes(p));
    {
      const p = Bl(d);
      return p && (f.target === p || f.composedPath().includes(p));
    }
  }), c = [
    co(r, "click", (f) => {
      const d = Bl(n);
      if (!(!d || d === f.target || f.composedPath().includes(d))) {
        if (f.detail === 0 && (a = !l(f)), !a) {
          a = !0;
          return;
        }
        e(f);
      }
    }, { passive: !0, capture: o }),
    co(r, "pointerdown", (f) => {
      const d = Bl(n);
      d && (a = !f.composedPath().includes(d) && !l(f));
    }, { passive: !0 }),
    s && co(r, "blur", (f) => {
      var d;
      const p = Bl(n);
      ((d = r.document.activeElement) == null ? void 0 : d.tagName) === "IFRAME" && !(p != null && p.contains(r.document.activeElement)) && e(f);
    })
  ].filter(Boolean);
  return () => c.forEach((f) => f());
}
function KG(n, e = !1) {
  const t = F(), r = () => t.value = !!n();
  return r(), vpe(r, e), t;
}
const VN = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, zN = "__vueuse_ssr_handlers__";
VN[zN] = VN[zN] || {};
function bpe({ document: n = mpe } = {}) {
  if (!n)
    return F("visible");
  const e = F(n.visibilityState);
  return co(n, "visibilitychange", () => {
    e.value = n.visibilityState;
  }), e;
}
var FN = Object.getOwnPropertySymbols, Ope = Object.prototype.hasOwnProperty, wpe = Object.prototype.propertyIsEnumerable, xpe = (n, e) => {
  var t = {};
  for (var r in n)
    Ope.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && FN)
    for (var r of FN(n))
      e.indexOf(r) < 0 && wpe.call(n, r) && (t[r] = n[r]);
  return t;
};
function Ri(n, e, t = {}) {
  const r = t, { window: i = nb } = r, o = xpe(r, ["window"]);
  let s;
  const a = KG(() => i && "ResizeObserver" in i), l = () => {
    s && (s.disconnect(), s = void 0);
  }, u = de(() => Bl(n), (h) => {
    l(), a.value && i && h && (s = new ResizeObserver(e), s.observe(h, o));
  }, { immediate: !0, flush: "post" }), c = () => {
    l(), u();
  };
  return tb(c), {
    isSupported: a,
    stop: c
  };
}
var QN = Object.getOwnPropertySymbols, Spe = Object.prototype.hasOwnProperty, _pe = Object.prototype.propertyIsEnumerable, Cpe = (n, e) => {
  var t = {};
  for (var r in n)
    Spe.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && QN)
    for (var r of QN(n))
      e.indexOf(r) < 0 && _pe.call(n, r) && (t[r] = n[r]);
  return t;
};
function Ape(n, e, t = {}) {
  const r = t, { window: i = nb } = r, o = Cpe(r, ["window"]);
  let s;
  const a = KG(() => i && "MutationObserver" in i), l = () => {
    s && (s.disconnect(), s = void 0);
  }, u = de(() => Bl(n), (h) => {
    l(), a.value && i && h && (s = new MutationObserver(e), s.observe(h, o));
  }, { immediate: !0 }), c = () => {
    l(), u();
  };
  return tb(c), {
    isSupported: a,
    stop: c
  };
}
var ZN;
(function(n) {
  n.UP = "UP", n.RIGHT = "RIGHT", n.DOWN = "DOWN", n.LEFT = "LEFT", n.NONE = "NONE";
})(ZN || (ZN = {}));
var Tpe = Object.defineProperty, WN = Object.getOwnPropertySymbols, Ppe = Object.prototype.hasOwnProperty, Epe = Object.prototype.propertyIsEnumerable, GN = (n, e, t) => e in n ? Tpe(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, kpe = (n, e) => {
  for (var t in e || (e = {}))
    Ppe.call(e, t) && GN(n, t, e[t]);
  if (WN)
    for (var t of WN(e))
      Epe.call(e, t) && GN(n, t, e[t]);
  return n;
};
const Mpe = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
kpe({
  linear: dpe
}, Mpe);
function Dpe({ window: n = nb } = {}) {
  if (!n)
    return F(!1);
  const e = F(n.document.hasFocus());
  return co(n, "blur", () => {
    e.value = !1;
  }), co(n, "focus", () => {
    e.value = !0;
  }), e;
}
const Lpe = () => Ht && /firefox/i.test(window.navigator.userAgent), LD = (n) => {
  let e, t;
  return n.type === "touchend" ? (t = n.changedTouches[0].clientY, e = n.changedTouches[0].clientX) : n.type.startsWith("touch") ? (t = n.touches[0].clientY, e = n.touches[0].clientX) : (t = n.clientY, e = n.clientX), {
    clientX: e,
    clientY: t
  };
};
/**
* @vue/shared v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
process.env.NODE_ENV !== "production" && Object.freeze({});
process.env.NODE_ENV !== "production" && Object.freeze([]);
const Ql = () => {
}, JG = Object.assign, Ipe = Object.prototype.hasOwnProperty, na = (n, e) => Ipe.call(n, e), Gn = Array.isArray, wn = (n) => typeof n == "function", qt = (n) => typeof n == "string", Rpe = (n) => typeof n == "symbol", ti = (n) => n !== null && typeof n == "object", jN = (n) => (ti(n) || wn(n)) && wn(n.then) && wn(n.catch), $pe = Object.prototype.toString, Npe = (n) => $pe.call(n), VC = (n) => Npe(n).slice(8, -1), ej = (n) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}, Bpe = /-(\w)/g, Vpe = ej((n) => n.replace(Bpe, (e, t) => t ? t.toUpperCase() : "")), zpe = ej((n) => n.charAt(0).toUpperCase() + n.slice(1)), Fpe = (n, e) => !Object.is(n, e), Io = (n) => n === void 0, xi = (n) => typeof n == "boolean", mt = (n) => typeof n == "number", ra = (n) => typeof Element > "u" ? !1 : n instanceof Element, Qpe = (n) => qt(n) ? !Number.isNaN(Number(n)) : !1, Zpe = (n = "") => n.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d"), Hu = (n) => zpe(n), HN = (n) => Object.keys(n), BO = (n, e, t) => ({
  get value() {
    return as(n, e, t);
  },
  set value(r) {
    ufe(n, e, r);
  }
});
class tj extends Error {
  constructor(e) {
    super(e), this.name = "ElementPlusError";
  }
}
function du(n, e) {
  throw new tj(`[${n}] ${e}`);
}
function jt(n, e) {
  if (process.env.NODE_ENV !== "production") {
    const t = qt(n) ? new tj(`[${n}] ${e}`) : n;
    console.warn(t);
  }
}
const Wpe = "utils/dom/style", nj = (n = "") => n.split(" ").filter((e) => !!e.trim()), _p = (n, e) => {
  if (!n || !e)
    return !1;
  if (e.includes(" "))
    throw new Error("className should not contain space.");
  return n.classList.contains(e);
}, Iy = (n, e) => {
  !n || !e.trim() || n.classList.add(...nj(e));
}, Xp = (n, e) => {
  !n || !e.trim() || n.classList.remove(...nj(e));
}, Gpe = (n, e) => {
  var t;
  if (!Ht || !n || !e)
    return "";
  let r = Vpe(e);
  r === "float" && (r = "cssFloat");
  try {
    const i = n.style[r];
    if (i)
      return i;
    const o = (t = document.defaultView) == null ? void 0 : t.getComputedStyle(n, "");
    return o ? o[r] : "";
  } catch {
    return n.style[r];
  }
};
function Fo(n, e = "px") {
  if (!n)
    return "";
  if (mt(n) || Qpe(n))
    return `${n}${e}`;
  if (qt(n))
    return n;
  jt(Wpe, "binding value must be a string or number");
}
let Gb;
const jpe = (n) => {
  var e;
  if (!Ht)
    return 0;
  if (Gb !== void 0)
    return Gb;
  const t = document.createElement("div");
  t.className = `${n}-scrollbar__wrap`, t.style.visibility = "hidden", t.style.width = "100px", t.style.position = "absolute", t.style.top = "-9999px", document.body.appendChild(t);
  const r = t.offsetWidth;
  t.style.overflow = "scroll";
  const i = document.createElement("div");
  i.style.width = "100%", t.appendChild(i);
  const o = i.offsetWidth;
  return (e = t.parentNode) == null || e.removeChild(t), Gb = r - o, Gb;
};
function Hpe(n, e) {
  if (!Ht)
    return;
  if (!e) {
    n.scrollTop = 0;
    return;
  }
  const t = [];
  let r = e.offsetParent;
  for (; r !== null && n !== r && n.contains(r); )
    t.push(r), r = r.offsetParent;
  const i = e.offsetTop + t.reduce((l, u) => l + u.offsetTop, 0), o = i + e.offsetHeight, s = n.scrollTop, a = s + n.clientHeight;
  i < s ? n.scrollTop = i : o > a && (n.scrollTop = o - n.clientHeight);
}
const rj = "__epPropKey", ke = (n) => n, qpe = (n) => ti(n) && !!n[rj], XS = (n, e) => {
  if (!ti(n) || qpe(n))
    return n;
  const { values: t, required: r, default: i, type: o, validator: s } = n, l = {
    type: o,
    required: !!r,
    validator: t || s ? (u) => {
      let c = !1, h = [];
      if (t && (h = Array.from(t), na(n, "default") && h.push(i), c || (c = h.includes(u))), s && (c || (c = s(u))), !c && h.length > 0) {
        const f = [...new Set(h)].map((d) => JSON.stringify(d)).join(", ");
        zie(`Invalid prop: validation failed${e ? ` for prop "${e}"` : ""}. Expected one of [${f}], got value ${JSON.stringify(u)}.`);
      }
      return c;
    } : void 0,
    [rj]: !0
  };
  return na(n, "default") && (l.default = i), l;
}, qe = (n) => zw(Object.entries(n).map(([e, t]) => [
  e,
  XS(t, e)
])), Vr = ke([
  String,
  Object,
  Function
]), ij = {
  Close: Oc
}, oj = {
  Close: Oc,
  SuccessFilled: YG,
  InfoFilled: HG,
  WarningFilled: DD,
  CircleCloseFilled: jG
}, Up = {
  success: YG,
  warning: DD,
  error: jG,
  info: HG
}, sj = {
  validating: YS,
  success: GG,
  error: qS
}, Bn = (n, e) => {
  if (n.install = (t) => {
    for (const r of [n, ...Object.values(e ?? {})])
      t.component(r.name, r);
  }, e)
    for (const [t, r] of Object.entries(e))
      n[t] = r;
  return n;
}, aj = (n, e) => (n.install = (t) => {
  n._context = t._context, t.config.globalProperties[e] = n;
}, n), Ype = (n, e) => (n.install = (t) => {
  t.directive(e, n);
}, n), fa = (n) => (n.install = Ql, n), Xpe = (...n) => (e) => {
  n.forEach((t) => {
    wn(t) ? t(e) : t.value = e;
  });
}, ii = {
  tab: "Tab",
  enter: "Enter",
  space: "Space",
  left: "ArrowLeft",
  up: "ArrowUp",
  right: "ArrowRight",
  down: "ArrowDown",
  esc: "Escape",
  delete: "Delete",
  backspace: "Backspace",
  numpadEnter: "NumpadEnter",
  pageUp: "PageUp",
  pageDown: "PageDown",
  home: "Home",
  end: "End"
}, Vt = "update:modelValue", ia = "change", wf = "input", hd = ["", "default", "small", "large"], lj = (n) => ["", ...hd].includes(n);
var VO = /* @__PURE__ */ ((n) => (n[n.TEXT = 1] = "TEXT", n[n.CLASS = 2] = "CLASS", n[n.STYLE = 4] = "STYLE", n[n.PROPS = 8] = "PROPS", n[n.FULL_PROPS = 16] = "FULL_PROPS", n[n.HYDRATE_EVENTS = 32] = "HYDRATE_EVENTS", n[n.STABLE_FRAGMENT = 64] = "STABLE_FRAGMENT", n[n.KEYED_FRAGMENT = 128] = "KEYED_FRAGMENT", n[n.UNKEYED_FRAGMENT = 256] = "UNKEYED_FRAGMENT", n[n.NEED_PATCH = 512] = "NEED_PATCH", n[n.DYNAMIC_SLOTS = 1024] = "DYNAMIC_SLOTS", n[n.HOISTED = -1] = "HOISTED", n[n.BAIL = -2] = "BAIL", n))(VO || {});
const zO = (n) => {
  const e = Gn(n) ? n : [n], t = [];
  return e.forEach((r) => {
    var i;
    Gn(r) ? t.push(...zO(r)) : il(r) && Gn(r.children) ? t.push(...zO(r.children)) : (t.push(r), il(r) && ((i = r.component) != null && i.subTree) && t.push(...zO(r.component.subTree)));
  }), t;
}, uj = (n) => /([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(n), Upe = (n) => Ht ? window.requestAnimationFrame(n) : setTimeout(n, 16), fd = (n) => n, Kpe = ["class", "style"], Jpe = /^on[A-Z]/, ege = (n = {}) => {
  const { excludeListeners: e = !1, excludeKeys: t } = n, r = B(() => ((t == null ? void 0 : t.value) || []).concat(Kpe)), i = xt();
  return i ? B(() => {
    var o;
    return zw(Object.entries((o = i.proxy) == null ? void 0 : o.$attrs).filter(([s]) => !r.value.includes(s) && !(e && Jpe.test(s))));
  }) : (jt("use-attrs", "getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function"), B(() => ({})));
}, zf = ({ from: n, replacement: e, scope: t, version: r, ref: i, type: o = "API" }, s) => {
  de(() => P(s), (a) => {
    a && jt(t, `[${o}] ${n} is about to be deprecated in version ${r}, please use ${e} instead.
For more detail, please visit: ${i}
`);
  }, {
    immediate: !0
  });
}, cj = (n, e, t, r) => {
  let i = {
    offsetX: 0,
    offsetY: 0
  };
  const o = (l) => {
    const u = l.clientX, c = l.clientY, { offsetX: h, offsetY: f } = i, d = n.value.getBoundingClientRect(), p = d.left, g = d.top, v = d.width, m = d.height, y = document.documentElement.clientWidth, b = document.documentElement.clientHeight, O = -p + h, w = -g + f, x = y - p - v + h, S = b - g - m + f, _ = (A) => {
      let T = h + A.clientX - u, k = f + A.clientY - c;
      r != null && r.value || (T = Math.min(Math.max(T, O), x), k = Math.min(Math.max(k, w), S)), i = {
        offsetX: T,
        offsetY: k
      }, n.value && (n.value.style.transform = `translate(${Fo(T)}, ${Fo(k)})`);
    }, C = () => {
      document.removeEventListener("mousemove", _), document.removeEventListener("mouseup", C);
    };
    document.addEventListener("mousemove", _), document.addEventListener("mouseup", C);
  }, s = () => {
    e.value && n.value && e.value.addEventListener("mousedown", o);
  }, a = () => {
    e.value && n.value && e.value.removeEventListener("mousedown", o);
  };
  dt(() => {
    Ua(() => {
      t.value ? s() : a();
    });
  }), hi(() => {
    a();
  });
};
var tge = {
  name: "en",
  el: {
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color."
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    dropdown: {
      toggleDropdown: "Toggle Dropdown"
    },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: {
      close: "Close this dialog"
    },
    drawer: {
      close: "Close this dialog"
    },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tour: {
      next: "Next",
      previous: "Previous",
      finish: "Finish"
    },
    tree: {
      emptyText: "No Data"
    },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
const nge = (n) => (e, t) => rge(e, t, P(n)), rge = (n, e, t) => as(t, n, n).replace(/\{(\w+)\}/g, (r, i) => {
  var o;
  return `${(o = e == null ? void 0 : e[i]) != null ? o : `{${i}}`}`;
}), ige = (n) => {
  const e = B(() => P(n).name), t = ol(n) ? n : F(n);
  return {
    lang: e,
    locale: t,
    t: nge(n)
  };
}, hj = Symbol("localeContextKey"), Wi = (n) => {
  const e = n || $e(hj, F());
  return ige(B(() => e.value || tge));
};
/**
* @vue/reactivity v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
function fj(n, ...e) {
  console.warn(`[Vue warn] ${n}`, ...e);
}
let oge;
function sge(n, e = oge) {
  e && e.active && e.effects.push(n);
}
let Qm;
class age {
  constructor(e, t, r, i) {
    this.fn = e, this.trigger = t, this.scheduler = r, this.active = !0, this.deps = [], this._dirtyLevel = 4, this._trackId = 0, this._runnings = 0, this._shouldSchedule = !1, this._depsLength = 0, sge(this, i);
  }
  get dirty() {
    if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {
      this._dirtyLevel = 1, uge();
      for (let e = 0; e < this._depsLength; e++) {
        const t = this.deps[e];
        if (t.computed && (lge(t.computed), this._dirtyLevel >= 4))
          break;
      }
      this._dirtyLevel === 1 && (this._dirtyLevel = 0), cge();
    }
    return this._dirtyLevel >= 4;
  }
  set dirty(e) {
    this._dirtyLevel = e ? 4 : 0;
  }
  run() {
    if (this._dirtyLevel = 0, !this.active)
      return this.fn();
    let e = xf, t = Qm;
    try {
      return xf = !0, Qm = this, this._runnings++, qN(this), this.fn();
    } finally {
      YN(this), this._runnings--, Qm = t, xf = e;
    }
  }
  stop() {
    var e;
    this.active && (qN(this), YN(this), (e = this.onStop) == null || e.call(this), this.active = !1);
  }
}
function lge(n) {
  return n.value;
}
function qN(n) {
  n._trackId++, n._depsLength = 0;
}
function YN(n) {
  if (n.deps.length > n._depsLength) {
    for (let e = n._depsLength; e < n.deps.length; e++)
      dj(n.deps[e], n);
    n.deps.length = n._depsLength;
  }
}
function dj(n, e) {
  const t = n.get(e);
  t !== void 0 && e._trackId !== t && (n.delete(e), n.size === 0 && n.cleanup());
}
let xf = !0, LP = 0;
const pj = [];
function uge() {
  pj.push(xf), xf = !1;
}
function cge() {
  const n = pj.pop();
  xf = n === void 0 ? !0 : n;
}
function hge() {
  LP++;
}
function fge() {
  for (LP--; !LP && IP.length; )
    IP.shift()();
}
function dge(n, e, t) {
  var r;
  if (e.get(n) !== n._trackId) {
    e.set(n, n._trackId);
    const i = n.deps[n._depsLength];
    i !== e ? (i && dj(i, n), n.deps[n._depsLength++] = e) : n._depsLength++, process.env.NODE_ENV !== "production" && ((r = n.onTrack) == null || r.call(n, JG({ effect: n }, t)));
  }
}
const IP = [];
function pge(n, e, t) {
  var r;
  hge();
  for (const i of n.keys()) {
    let o;
    i._dirtyLevel < e && (o ?? (o = n.get(i) === i._trackId)) && (i._shouldSchedule || (i._shouldSchedule = i._dirtyLevel === 0), i._dirtyLevel = e), i._shouldSchedule && (o ?? (o = n.get(i) === i._trackId)) && (process.env.NODE_ENV !== "production" && ((r = i.onTrigger) == null || r.call(i, JG({ effect: i }, t))), i.trigger(), (!i._runnings || i.allowRecurse) && i._dirtyLevel !== 2 && (i._shouldSchedule = !1, i.scheduler && IP.push(i.scheduler)));
  }
  fge();
}
const gge = (n, e) => {
  const t = /* @__PURE__ */ new Map();
  return t.cleanup = n, t.computed = e, t;
};
Symbol(process.env.NODE_ENV !== "production" ? "iterate" : "");
Symbol(process.env.NODE_ENV !== "production" ? "Map key iterate" : "");
new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((n) => n !== "arguments" && n !== "caller").map((n) => Symbol[n]).filter(Rpe)
);
function US(n) {
  const e = n && n.__v_raw;
  return e ? US(e) : n;
}
const vge = "Computed is still dirty after getter evaluation, likely because a computed is mutating its own dependency in its getter. State mutations in computed getters should be avoided.  Check the docs for more details: https://vuejs.org/guide/essentials/computed.html#getters-should-be-side-effect-free";
class gj {
  constructor(e, t, r, i) {
    this._setter = t, this.dep = void 0, this.__v_isRef = !0, this.__v_isReadonly = !1, this.effect = new age(
      () => e(this._value),
      () => zC(
        this,
        this.effect._dirtyLevel === 2 ? 2 : 3
      )
    ), this.effect.computed = this, this.effect.active = this._cacheable = !i, this.__v_isReadonly = r;
  }
  get value() {
    const e = US(this);
    return (!e._cacheable || e.effect.dirty) && Fpe(e._value, e._value = e.effect.run()) && zC(e, 4), yge(e), e.effect._dirtyLevel >= 2 && (process.env.NODE_ENV !== "production" && fj(vge), zC(e, 2)), e._value;
  }
  set value(e) {
    this._setter(e);
  }
  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x
  get _dirty() {
    return this.effect.dirty;
  }
  set _dirty(e) {
    this.effect.dirty = e;
  }
  // #endregion
}
function mge(n, e, t = !1) {
  let r, i;
  const o = wn(n);
  o ? (r = n, i = process.env.NODE_ENV !== "production" ? () => {
    fj("Write operation failed: computed value is readonly");
  } : Ql) : (r = n.get, i = n.set);
  const s = new gj(r, i, o || !i, t);
  return process.env.NODE_ENV !== "production" && e && !t && (s.effect.onTrack = e.onTrack, s.effect.onTrigger = e.onTrigger), s;
}
function yge(n) {
  var e;
  xf && Qm && (n = US(n), dge(
    Qm,
    (e = n.dep) != null ? e : n.dep = gge(
      () => n.dep = void 0,
      n instanceof gj ? n : void 0
    ),
    process.env.NODE_ENV !== "production" ? {
      target: n,
      type: "get",
      key: "value"
    } : void 0
  ));
}
function zC(n, e = 4, t) {
  n = US(n);
  const r = n.dep;
  r && pge(
    r,
    e,
    process.env.NODE_ENV !== "production" ? {
      target: n,
      type: "set",
      key: "value",
      newValue: t
    } : void 0
  );
}
const Zm = "el", bge = "is-", ah = (n, e, t, r, i) => {
  let o = `${n}-${e}`;
  return t && (o += `-${t}`), r && (o += `__${r}`), i && (o += `--${i}`), o;
}, vj = Symbol("namespaceContextKey"), ID = (n) => {
  const e = n || (xt() ? $e(vj, F(Zm)) : F(Zm));
  return B(() => P(e) || Zm);
}, Ie = (n, e) => {
  const t = ID(e);
  return {
    namespace: t,
    b: (g = "") => ah(t.value, n, g, "", ""),
    e: (g) => g ? ah(t.value, n, "", g, "") : "",
    m: (g) => g ? ah(t.value, n, "", "", g) : "",
    be: (g, v) => g && v ? ah(t.value, n, g, v, "") : "",
    em: (g, v) => g && v ? ah(t.value, n, "", g, v) : "",
    bm: (g, v) => g && v ? ah(t.value, n, g, "", v) : "",
    bem: (g, v, m) => g && v && m ? ah(t.value, n, g, v, m) : "",
    is: (g, ...v) => {
      const m = v.length >= 1 ? v[0] : !0;
      return g && m ? `${bge}${g}` : "";
    },
    cssVar: (g) => {
      const v = {};
      for (const m in g)
        g[m] && (v[`--${t.value}-${m}`] = g[m]);
      return v;
    },
    cssVarName: (g) => `--${t.value}-${g}`,
    cssVarBlock: (g) => {
      const v = {};
      for (const m in g)
        g[m] && (v[`--${t.value}-${n}-${m}`] = g[m]);
      return v;
    },
    cssVarBlockName: (g) => `--${t.value}-${n}-${g}`
  };
}, mj = (n, e = {}) => {
  ol(n) || du("[useLockscreen]", "You need to pass a ref param to this function");
  const t = e.ns || Ie("popup"), r = mge(() => t.bm("parent", "hidden"));
  if (!Ht || _p(document.body, r.value))
    return;
  let i = 0, o = !1, s = "0";
  const a = () => {
    setTimeout(() => {
      Xp(document == null ? void 0 : document.body, r.value), o && document && (document.body.style.width = s);
    }, 200);
  };
  de(n, (l) => {
    if (!l) {
      a();
      return;
    }
    o = !_p(document.body, r.value), o && (s = document.body.style.width), i = jpe(t.namespace.value);
    const u = document.documentElement.clientHeight < document.body.scrollHeight, c = Gpe(document.body, "overflowY");
    i > 0 && (u || c === "scroll") && o && (document.body.style.width = `calc(100% - ${i}px)`), Iy(document.body, r.value);
  }), vD(() => a());
}, Oge = XS({
  type: ke(Boolean),
  default: null
}), wge = XS({
  type: ke(Function)
}), yj = (n) => {
  const e = `update:${n}`, t = `onUpdate:${n}`, r = [e], i = {
    [n]: Oge,
    [t]: wge
  };
  return {
    useModelToggle: ({
      indicator: s,
      toggleReason: a,
      shouldHideWhenRouteChanges: l,
      shouldProceed: u,
      onShow: c,
      onHide: h
    }) => {
      const f = xt(), { emit: d } = f, p = f.props, g = B(() => wn(p[t])), v = B(() => p[n] === null), m = (S) => {
        s.value !== !0 && (s.value = !0, a && (a.value = S), wn(c) && c(S));
      }, y = (S) => {
        s.value !== !1 && (s.value = !1, a && (a.value = S), wn(h) && h(S));
      }, b = (S) => {
        if (p.disabled === !0 || wn(u) && !u())
          return;
        const _ = g.value && Ht;
        _ && d(e, !0), (v.value || !_) && m(S);
      }, O = (S) => {
        if (p.disabled === !0 || !Ht)
          return;
        const _ = g.value && Ht;
        _ && d(e, !1), (v.value || !_) && y(S);
      }, w = (S) => {
        xi(S) && (p.disabled && S ? g.value && d(e, !1) : s.value !== S && (S ? m() : y()));
      }, x = () => {
        s.value ? O() : b();
      };
      return de(() => p[n], w), l && f.appContext.config.globalProperties.$route !== void 0 && de(() => ({
        ...f.proxy.$route
      }), () => {
        l.value && s.value && O();
      }), dt(() => {
        w(p[n]);
      }), {
        hide: O,
        show: b,
        toggle: x,
        hasUpdateHandler: g
      };
    },
    useModelToggleProps: i,
    useModelToggleEmits: r
  };
};
yj("modelValue");
const bj = (n) => {
  const e = xt();
  return B(() => {
    var t, r;
    return (r = (t = e == null ? void 0 : e.proxy) == null ? void 0 : t.$props) == null ? void 0 : r[n];
  });
};
var ho = "top", xs = "bottom", Ss = "right", fo = "left", RD = "auto", rb = [ho, xs, Ss, fo], Kp = "start", Ry = "end", xge = "clippingParents", Oj = "viewport", Ev = "popper", Sge = "reference", XN = rb.reduce(function(n, e) {
  return n.concat([e + "-" + Kp, e + "-" + Ry]);
}, []), KS = [].concat(rb, [RD]).reduce(function(n, e) {
  return n.concat([e, e + "-" + Kp, e + "-" + Ry]);
}, []), _ge = "beforeRead", Cge = "read", Age = "afterRead", Tge = "beforeMain", Pge = "main", Ege = "afterMain", kge = "beforeWrite", Mge = "write", Dge = "afterWrite", Lge = [_ge, Cge, Age, Tge, Pge, Ege, kge, Mge, Dge];
function al(n) {
  return n ? (n.nodeName || "").toLowerCase() : null;
}
function da(n) {
  if (n == null)
    return window;
  if (n.toString() !== "[object Window]") {
    var e = n.ownerDocument;
    return e && e.defaultView || window;
  }
  return n;
}
function Jp(n) {
  var e = da(n).Element;
  return n instanceof e || n instanceof Element;
}
function gs(n) {
  var e = da(n).HTMLElement;
  return n instanceof e || n instanceof HTMLElement;
}
function $D(n) {
  if (typeof ShadowRoot > "u")
    return !1;
  var e = da(n).ShadowRoot;
  return n instanceof e || n instanceof ShadowRoot;
}
function Ige(n) {
  var e = n.state;
  Object.keys(e.elements).forEach(function(t) {
    var r = e.styles[t] || {}, i = e.attributes[t] || {}, o = e.elements[t];
    !gs(o) || !al(o) || (Object.assign(o.style, r), Object.keys(i).forEach(function(s) {
      var a = i[s];
      a === !1 ? o.removeAttribute(s) : o.setAttribute(s, a === !0 ? "" : a);
    }));
  });
}
function Rge(n) {
  var e = n.state, t = { popper: { position: e.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
  return Object.assign(e.elements.popper.style, t.popper), e.styles = t, e.elements.arrow && Object.assign(e.elements.arrow.style, t.arrow), function() {
    Object.keys(e.elements).forEach(function(r) {
      var i = e.elements[r], o = e.attributes[r] || {}, s = Object.keys(e.styles.hasOwnProperty(r) ? e.styles[r] : t[r]), a = s.reduce(function(l, u) {
        return l[u] = "", l;
      }, {});
      !gs(i) || !al(i) || (Object.assign(i.style, a), Object.keys(o).forEach(function(l) {
        i.removeAttribute(l);
      }));
    });
  };
}
var wj = { name: "applyStyles", enabled: !0, phase: "write", fn: Ige, effect: Rge, requires: ["computeStyles"] };
function Ka(n) {
  return n.split("-")[0];
}
var Sf = Math.max, Zw = Math.min, eg = Math.round;
function tg(n, e) {
  e === void 0 && (e = !1);
  var t = n.getBoundingClientRect(), r = 1, i = 1;
  if (gs(n) && e) {
    var o = n.offsetHeight, s = n.offsetWidth;
    s > 0 && (r = eg(t.width) / s || 1), o > 0 && (i = eg(t.height) / o || 1);
  }
  return { width: t.width / r, height: t.height / i, top: t.top / i, right: t.right / r, bottom: t.bottom / i, left: t.left / r, x: t.left / r, y: t.top / i };
}
function ND(n) {
  var e = tg(n), t = n.offsetWidth, r = n.offsetHeight;
  return Math.abs(e.width - t) <= 1 && (t = e.width), Math.abs(e.height - r) <= 1 && (r = e.height), { x: n.offsetLeft, y: n.offsetTop, width: t, height: r };
}
function xj(n, e) {
  var t = e.getRootNode && e.getRootNode();
  if (n.contains(e))
    return !0;
  if (t && $D(t)) {
    var r = e;
    do {
      if (r && n.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Xl(n) {
  return da(n).getComputedStyle(n);
}
function $ge(n) {
  return ["table", "td", "th"].indexOf(al(n)) >= 0;
}
function Xc(n) {
  return ((Jp(n) ? n.ownerDocument : n.document) || window.document).documentElement;
}
function JS(n) {
  return al(n) === "html" ? n : n.assignedSlot || n.parentNode || ($D(n) ? n.host : null) || Xc(n);
}
function UN(n) {
  return !gs(n) || Xl(n).position === "fixed" ? null : n.offsetParent;
}
function Nge(n) {
  var e = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1, t = navigator.userAgent.indexOf("Trident") !== -1;
  if (t && gs(n)) {
    var r = Xl(n);
    if (r.position === "fixed")
      return null;
  }
  var i = JS(n);
  for ($D(i) && (i = i.host); gs(i) && ["html", "body"].indexOf(al(i)) < 0; ) {
    var o = Xl(i);
    if (o.transform !== "none" || o.perspective !== "none" || o.contain === "paint" || ["transform", "perspective"].indexOf(o.willChange) !== -1 || e && o.willChange === "filter" || e && o.filter && o.filter !== "none")
      return i;
    i = i.parentNode;
  }
  return null;
}
function ib(n) {
  for (var e = da(n), t = UN(n); t && $ge(t) && Xl(t).position === "static"; )
    t = UN(t);
  return t && (al(t) === "html" || al(t) === "body" && Xl(t).position === "static") ? e : t || Nge(n) || e;
}
function BD(n) {
  return ["top", "bottom"].indexOf(n) >= 0 ? "x" : "y";
}
function Wm(n, e, t) {
  return Sf(n, Zw(e, t));
}
function Bge(n, e, t) {
  var r = Wm(n, e, t);
  return r > t ? t : r;
}
function Sj() {
  return { top: 0, right: 0, bottom: 0, left: 0 };
}
function _j(n) {
  return Object.assign({}, Sj(), n);
}
function Cj(n, e) {
  return e.reduce(function(t, r) {
    return t[r] = n, t;
  }, {});
}
var Vge = function(n, e) {
  return n = typeof n == "function" ? n(Object.assign({}, e.rects, { placement: e.placement })) : n, _j(typeof n != "number" ? n : Cj(n, rb));
};
function zge(n) {
  var e, t = n.state, r = n.name, i = n.options, o = t.elements.arrow, s = t.modifiersData.popperOffsets, a = Ka(t.placement), l = BD(a), u = [fo, Ss].indexOf(a) >= 0, c = u ? "height" : "width";
  if (!(!o || !s)) {
    var h = Vge(i.padding, t), f = ND(o), d = l === "y" ? ho : fo, p = l === "y" ? xs : Ss, g = t.rects.reference[c] + t.rects.reference[l] - s[l] - t.rects.popper[c], v = s[l] - t.rects.reference[l], m = ib(o), y = m ? l === "y" ? m.clientHeight || 0 : m.clientWidth || 0 : 0, b = g / 2 - v / 2, O = h[d], w = y - f[c] - h[p], x = y / 2 - f[c] / 2 + b, S = Wm(O, x, w), _ = l;
    t.modifiersData[r] = (e = {}, e[_] = S, e.centerOffset = S - x, e);
  }
}
function Fge(n) {
  var e = n.state, t = n.options, r = t.element, i = r === void 0 ? "[data-popper-arrow]" : r;
  i != null && (typeof i == "string" && (i = e.elements.popper.querySelector(i), !i) || !xj(e.elements.popper, i) || (e.elements.arrow = i));
}
var Qge = { name: "arrow", enabled: !0, phase: "main", fn: zge, effect: Fge, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] };
function ng(n) {
  return n.split("-")[1];
}
var Zge = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
function Wge(n) {
  var e = n.x, t = n.y, r = window, i = r.devicePixelRatio || 1;
  return { x: eg(e * i) / i || 0, y: eg(t * i) / i || 0 };
}
function KN(n) {
  var e, t = n.popper, r = n.popperRect, i = n.placement, o = n.variation, s = n.offsets, a = n.position, l = n.gpuAcceleration, u = n.adaptive, c = n.roundOffsets, h = n.isFixed, f = s.x, d = f === void 0 ? 0 : f, p = s.y, g = p === void 0 ? 0 : p, v = typeof c == "function" ? c({ x: d, y: g }) : { x: d, y: g };
  d = v.x, g = v.y;
  var m = s.hasOwnProperty("x"), y = s.hasOwnProperty("y"), b = fo, O = ho, w = window;
  if (u) {
    var x = ib(t), S = "clientHeight", _ = "clientWidth";
    if (x === da(t) && (x = Xc(t), Xl(x).position !== "static" && a === "absolute" && (S = "scrollHeight", _ = "scrollWidth")), x = x, i === ho || (i === fo || i === Ss) && o === Ry) {
      O = xs;
      var C = h && x === w && w.visualViewport ? w.visualViewport.height : x[S];
      g -= C - r.height, g *= l ? 1 : -1;
    }
    if (i === fo || (i === ho || i === xs) && o === Ry) {
      b = Ss;
      var A = h && x === w && w.visualViewport ? w.visualViewport.width : x[_];
      d -= A - r.width, d *= l ? 1 : -1;
    }
  }
  var T = Object.assign({ position: a }, u && Zge), k = c === !0 ? Wge({ x: d, y: g }) : { x: d, y: g };
  if (d = k.x, g = k.y, l) {
    var L;
    return Object.assign({}, T, (L = {}, L[O] = y ? "0" : "", L[b] = m ? "0" : "", L.transform = (w.devicePixelRatio || 1) <= 1 ? "translate(" + d + "px, " + g + "px)" : "translate3d(" + d + "px, " + g + "px, 0)", L));
  }
  return Object.assign({}, T, (e = {}, e[O] = y ? g + "px" : "", e[b] = m ? d + "px" : "", e.transform = "", e));
}
function Gge(n) {
  var e = n.state, t = n.options, r = t.gpuAcceleration, i = r === void 0 ? !0 : r, o = t.adaptive, s = o === void 0 ? !0 : o, a = t.roundOffsets, l = a === void 0 ? !0 : a, u = { placement: Ka(e.placement), variation: ng(e.placement), popper: e.elements.popper, popperRect: e.rects.popper, gpuAcceleration: i, isFixed: e.options.strategy === "fixed" };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign({}, e.styles.popper, KN(Object.assign({}, u, { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: s, roundOffsets: l })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign({}, e.styles.arrow, KN(Object.assign({}, u, { offsets: e.modifiersData.arrow, position: "absolute", adaptive: !1, roundOffsets: l })))), e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-placement": e.placement });
}
var Aj = { name: "computeStyles", enabled: !0, phase: "beforeWrite", fn: Gge, data: {} }, jb = { passive: !0 };
function jge(n) {
  var e = n.state, t = n.instance, r = n.options, i = r.scroll, o = i === void 0 ? !0 : i, s = r.resize, a = s === void 0 ? !0 : s, l = da(e.elements.popper), u = [].concat(e.scrollParents.reference, e.scrollParents.popper);
  return o && u.forEach(function(c) {
    c.addEventListener("scroll", t.update, jb);
  }), a && l.addEventListener("resize", t.update, jb), function() {
    o && u.forEach(function(c) {
      c.removeEventListener("scroll", t.update, jb);
    }), a && l.removeEventListener("resize", t.update, jb);
  };
}
var Tj = { name: "eventListeners", enabled: !0, phase: "write", fn: function() {
}, effect: jge, data: {} }, Hge = { left: "right", right: "left", bottom: "top", top: "bottom" };
function FO(n) {
  return n.replace(/left|right|bottom|top/g, function(e) {
    return Hge[e];
  });
}
var qge = { start: "end", end: "start" };
function JN(n) {
  return n.replace(/start|end/g, function(e) {
    return qge[e];
  });
}
function VD(n) {
  var e = da(n), t = e.pageXOffset, r = e.pageYOffset;
  return { scrollLeft: t, scrollTop: r };
}
function zD(n) {
  return tg(Xc(n)).left + VD(n).scrollLeft;
}
function Yge(n) {
  var e = da(n), t = Xc(n), r = e.visualViewport, i = t.clientWidth, o = t.clientHeight, s = 0, a = 0;
  return r && (i = r.width, o = r.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (s = r.offsetLeft, a = r.offsetTop)), { width: i, height: o, x: s + zD(n), y: a };
}
function Xge(n) {
  var e, t = Xc(n), r = VD(n), i = (e = n.ownerDocument) == null ? void 0 : e.body, o = Sf(t.scrollWidth, t.clientWidth, i ? i.scrollWidth : 0, i ? i.clientWidth : 0), s = Sf(t.scrollHeight, t.clientHeight, i ? i.scrollHeight : 0, i ? i.clientHeight : 0), a = -r.scrollLeft + zD(n), l = -r.scrollTop;
  return Xl(i || t).direction === "rtl" && (a += Sf(t.clientWidth, i ? i.clientWidth : 0) - o), { width: o, height: s, x: a, y: l };
}
function FD(n) {
  var e = Xl(n), t = e.overflow, r = e.overflowX, i = e.overflowY;
  return /auto|scroll|overlay|hidden/.test(t + i + r);
}
function Pj(n) {
  return ["html", "body", "#document"].indexOf(al(n)) >= 0 ? n.ownerDocument.body : gs(n) && FD(n) ? n : Pj(JS(n));
}
function Gm(n, e) {
  var t;
  e === void 0 && (e = []);
  var r = Pj(n), i = r === ((t = n.ownerDocument) == null ? void 0 : t.body), o = da(r), s = i ? [o].concat(o.visualViewport || [], FD(r) ? r : []) : r, a = e.concat(s);
  return i ? a : a.concat(Gm(JS(s)));
}
function RP(n) {
  return Object.assign({}, n, { left: n.x, top: n.y, right: n.x + n.width, bottom: n.y + n.height });
}
function Uge(n) {
  var e = tg(n);
  return e.top = e.top + n.clientTop, e.left = e.left + n.clientLeft, e.bottom = e.top + n.clientHeight, e.right = e.left + n.clientWidth, e.width = n.clientWidth, e.height = n.clientHeight, e.x = e.left, e.y = e.top, e;
}
function e3(n, e) {
  return e === Oj ? RP(Yge(n)) : Jp(e) ? Uge(e) : RP(Xge(Xc(n)));
}
function Kge(n) {
  var e = Gm(JS(n)), t = ["absolute", "fixed"].indexOf(Xl(n).position) >= 0, r = t && gs(n) ? ib(n) : n;
  return Jp(r) ? e.filter(function(i) {
    return Jp(i) && xj(i, r) && al(i) !== "body";
  }) : [];
}
function Jge(n, e, t) {
  var r = e === "clippingParents" ? Kge(n) : [].concat(e), i = [].concat(r, [t]), o = i[0], s = i.reduce(function(a, l) {
    var u = e3(n, l);
    return a.top = Sf(u.top, a.top), a.right = Zw(u.right, a.right), a.bottom = Zw(u.bottom, a.bottom), a.left = Sf(u.left, a.left), a;
  }, e3(n, o));
  return s.width = s.right - s.left, s.height = s.bottom - s.top, s.x = s.left, s.y = s.top, s;
}
function Ej(n) {
  var e = n.reference, t = n.element, r = n.placement, i = r ? Ka(r) : null, o = r ? ng(r) : null, s = e.x + e.width / 2 - t.width / 2, a = e.y + e.height / 2 - t.height / 2, l;
  switch (i) {
    case ho:
      l = { x: s, y: e.y - t.height };
      break;
    case xs:
      l = { x: s, y: e.y + e.height };
      break;
    case Ss:
      l = { x: e.x + e.width, y: a };
      break;
    case fo:
      l = { x: e.x - t.width, y: a };
      break;
    default:
      l = { x: e.x, y: e.y };
  }
  var u = i ? BD(i) : null;
  if (u != null) {
    var c = u === "y" ? "height" : "width";
    switch (o) {
      case Kp:
        l[u] = l[u] - (e[c] / 2 - t[c] / 2);
        break;
      case Ry:
        l[u] = l[u] + (e[c] / 2 - t[c] / 2);
        break;
    }
  }
  return l;
}
function $y(n, e) {
  e === void 0 && (e = {});
  var t = e, r = t.placement, i = r === void 0 ? n.placement : r, o = t.boundary, s = o === void 0 ? xge : o, a = t.rootBoundary, l = a === void 0 ? Oj : a, u = t.elementContext, c = u === void 0 ? Ev : u, h = t.altBoundary, f = h === void 0 ? !1 : h, d = t.padding, p = d === void 0 ? 0 : d, g = _j(typeof p != "number" ? p : Cj(p, rb)), v = c === Ev ? Sge : Ev, m = n.rects.popper, y = n.elements[f ? v : c], b = Jge(Jp(y) ? y : y.contextElement || Xc(n.elements.popper), s, l), O = tg(n.elements.reference), w = Ej({ reference: O, element: m, strategy: "absolute", placement: i }), x = RP(Object.assign({}, m, w)), S = c === Ev ? x : O, _ = { top: b.top - S.top + g.top, bottom: S.bottom - b.bottom + g.bottom, left: b.left - S.left + g.left, right: S.right - b.right + g.right }, C = n.modifiersData.offset;
  if (c === Ev && C) {
    var A = C[i];
    Object.keys(_).forEach(function(T) {
      var k = [Ss, xs].indexOf(T) >= 0 ? 1 : -1, L = [ho, xs].indexOf(T) >= 0 ? "y" : "x";
      _[T] += A[L] * k;
    });
  }
  return _;
}
function eve(n, e) {
  e === void 0 && (e = {});
  var t = e, r = t.placement, i = t.boundary, o = t.rootBoundary, s = t.padding, a = t.flipVariations, l = t.allowedAutoPlacements, u = l === void 0 ? KS : l, c = ng(r), h = c ? a ? XN : XN.filter(function(p) {
    return ng(p) === c;
  }) : rb, f = h.filter(function(p) {
    return u.indexOf(p) >= 0;
  });
  f.length === 0 && (f = h);
  var d = f.reduce(function(p, g) {
    return p[g] = $y(n, { placement: g, boundary: i, rootBoundary: o, padding: s })[Ka(g)], p;
  }, {});
  return Object.keys(d).sort(function(p, g) {
    return d[p] - d[g];
  });
}
function tve(n) {
  if (Ka(n) === RD)
    return [];
  var e = FO(n);
  return [JN(n), e, JN(e)];
}
function nve(n) {
  var e = n.state, t = n.options, r = n.name;
  if (!e.modifiersData[r]._skip) {
    for (var i = t.mainAxis, o = i === void 0 ? !0 : i, s = t.altAxis, a = s === void 0 ? !0 : s, l = t.fallbackPlacements, u = t.padding, c = t.boundary, h = t.rootBoundary, f = t.altBoundary, d = t.flipVariations, p = d === void 0 ? !0 : d, g = t.allowedAutoPlacements, v = e.options.placement, m = Ka(v), y = m === v, b = l || (y || !p ? [FO(v)] : tve(v)), O = [v].concat(b).reduce(function(Y, ie) {
      return Y.concat(Ka(ie) === RD ? eve(e, { placement: ie, boundary: c, rootBoundary: h, padding: u, flipVariations: p, allowedAutoPlacements: g }) : ie);
    }, []), w = e.rects.reference, x = e.rects.popper, S = /* @__PURE__ */ new Map(), _ = !0, C = O[0], A = 0; A < O.length; A++) {
      var T = O[A], k = Ka(T), L = ng(T) === Kp, D = [ho, xs].indexOf(k) >= 0, E = D ? "width" : "height", M = $y(e, { placement: T, boundary: c, rootBoundary: h, altBoundary: f, padding: u }), R = D ? L ? Ss : fo : L ? xs : ho;
      w[E] > x[E] && (R = FO(R));
      var N = FO(R), $ = [];
      if (o && $.push(M[k] <= 0), a && $.push(M[R] <= 0, M[N] <= 0), $.every(function(Y) {
        return Y;
      })) {
        C = T, _ = !1;
        break;
      }
      S.set(T, $);
    }
    if (_)
      for (var V = p ? 3 : 1, H = function(Y) {
        var ie = O.find(function(se) {
          var K = S.get(se);
          if (K)
            return K.slice(0, Y).every(function(re) {
              return re;
            });
        });
        if (ie)
          return C = ie, "break";
      }, G = V; G > 0; G--) {
        var q = H(G);
        if (q === "break")
          break;
      }
    e.placement !== C && (e.modifiersData[r]._skip = !0, e.placement = C, e.reset = !0);
  }
}
var rve = { name: "flip", enabled: !0, phase: "main", fn: nve, requiresIfExists: ["offset"], data: { _skip: !1 } };
function t3(n, e, t) {
  return t === void 0 && (t = { x: 0, y: 0 }), { top: n.top - e.height - t.y, right: n.right - e.width + t.x, bottom: n.bottom - e.height + t.y, left: n.left - e.width - t.x };
}
function n3(n) {
  return [ho, Ss, xs, fo].some(function(e) {
    return n[e] >= 0;
  });
}
function ive(n) {
  var e = n.state, t = n.name, r = e.rects.reference, i = e.rects.popper, o = e.modifiersData.preventOverflow, s = $y(e, { elementContext: "reference" }), a = $y(e, { altBoundary: !0 }), l = t3(s, r), u = t3(a, i, o), c = n3(l), h = n3(u);
  e.modifiersData[t] = { referenceClippingOffsets: l, popperEscapeOffsets: u, isReferenceHidden: c, hasPopperEscaped: h }, e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-reference-hidden": c, "data-popper-escaped": h });
}
var ove = { name: "hide", enabled: !0, phase: "main", requiresIfExists: ["preventOverflow"], fn: ive };
function sve(n, e, t) {
  var r = Ka(n), i = [fo, ho].indexOf(r) >= 0 ? -1 : 1, o = typeof t == "function" ? t(Object.assign({}, e, { placement: n })) : t, s = o[0], a = o[1];
  return s = s || 0, a = (a || 0) * i, [fo, Ss].indexOf(r) >= 0 ? { x: a, y: s } : { x: s, y: a };
}
function ave(n) {
  var e = n.state, t = n.options, r = n.name, i = t.offset, o = i === void 0 ? [0, 0] : i, s = KS.reduce(function(c, h) {
    return c[h] = sve(h, e.rects, o), c;
  }, {}), a = s[e.placement], l = a.x, u = a.y;
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += l, e.modifiersData.popperOffsets.y += u), e.modifiersData[r] = s;
}
var lve = { name: "offset", enabled: !0, phase: "main", requires: ["popperOffsets"], fn: ave };
function uve(n) {
  var e = n.state, t = n.name;
  e.modifiersData[t] = Ej({ reference: e.rects.reference, element: e.rects.popper, strategy: "absolute", placement: e.placement });
}
var kj = { name: "popperOffsets", enabled: !0, phase: "read", fn: uve, data: {} };
function cve(n) {
  return n === "x" ? "y" : "x";
}
function hve(n) {
  var e = n.state, t = n.options, r = n.name, i = t.mainAxis, o = i === void 0 ? !0 : i, s = t.altAxis, a = s === void 0 ? !1 : s, l = t.boundary, u = t.rootBoundary, c = t.altBoundary, h = t.padding, f = t.tether, d = f === void 0 ? !0 : f, p = t.tetherOffset, g = p === void 0 ? 0 : p, v = $y(e, { boundary: l, rootBoundary: u, padding: h, altBoundary: c }), m = Ka(e.placement), y = ng(e.placement), b = !y, O = BD(m), w = cve(O), x = e.modifiersData.popperOffsets, S = e.rects.reference, _ = e.rects.popper, C = typeof g == "function" ? g(Object.assign({}, e.rects, { placement: e.placement })) : g, A = typeof C == "number" ? { mainAxis: C, altAxis: C } : Object.assign({ mainAxis: 0, altAxis: 0 }, C), T = e.modifiersData.offset ? e.modifiersData.offset[e.placement] : null, k = { x: 0, y: 0 };
  if (x) {
    if (o) {
      var L, D = O === "y" ? ho : fo, E = O === "y" ? xs : Ss, M = O === "y" ? "height" : "width", R = x[O], N = R + v[D], $ = R - v[E], V = d ? -_[M] / 2 : 0, H = y === Kp ? S[M] : _[M], G = y === Kp ? -_[M] : -S[M], q = e.elements.arrow, Y = d && q ? ND(q) : { width: 0, height: 0 }, ie = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : Sj(), se = ie[D], K = ie[E], re = Wm(0, S[M], Y[M]), ge = b ? S[M] / 2 - V - re - se - A.mainAxis : H - re - se - A.mainAxis, ne = b ? -S[M] / 2 + V + re + K + A.mainAxis : G + re + K + A.mainAxis, ue = e.elements.arrow && ib(e.elements.arrow), xe = ue ? O === "y" ? ue.clientTop || 0 : ue.clientLeft || 0 : 0, gt = (L = T == null ? void 0 : T[O]) != null ? L : 0, He = R + ge - gt - xe, It = R + ne - gt, Rt = Wm(d ? Zw(N, He) : N, R, d ? Sf($, It) : $);
      x[O] = Rt, k[O] = Rt - R;
    }
    if (a) {
      var pn, Xn = O === "x" ? ho : fo, Dn = O === "x" ? xs : Ss, yr = x[w], ur = w === "y" ? "height" : "width", vo = yr + v[Xn], mo = yr - v[Dn], ji = [ho, fo].indexOf(m) !== -1, ve = (pn = T == null ? void 0 : T[w]) != null ? pn : 0, yt = ji ? vo : yr - S[ur] - _[ur] - ve + A.altAxis, Ln = ji ? yr + S[ur] + _[ur] - ve - A.altAxis : mo, Ms = d && ji ? Bge(yt, yr, Ln) : Wm(d ? yt : vo, yr, d ? Ln : mo);
      x[w] = Ms, k[w] = Ms - yr;
    }
    e.modifiersData[r] = k;
  }
}
var fve = { name: "preventOverflow", enabled: !0, phase: "main", fn: hve, requiresIfExists: ["offset"] };
function dve(n) {
  return { scrollLeft: n.scrollLeft, scrollTop: n.scrollTop };
}
function pve(n) {
  return n === da(n) || !gs(n) ? VD(n) : dve(n);
}
function gve(n) {
  var e = n.getBoundingClientRect(), t = eg(e.width) / n.offsetWidth || 1, r = eg(e.height) / n.offsetHeight || 1;
  return t !== 1 || r !== 1;
}
function vve(n, e, t) {
  t === void 0 && (t = !1);
  var r = gs(e), i = gs(e) && gve(e), o = Xc(e), s = tg(n, i), a = { scrollLeft: 0, scrollTop: 0 }, l = { x: 0, y: 0 };
  return (r || !r && !t) && ((al(e) !== "body" || FD(o)) && (a = pve(e)), gs(e) ? (l = tg(e, !0), l.x += e.clientLeft, l.y += e.clientTop) : o && (l.x = zD(o))), { x: s.left + a.scrollLeft - l.x, y: s.top + a.scrollTop - l.y, width: s.width, height: s.height };
}
function mve(n) {
  var e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Set(), r = [];
  n.forEach(function(o) {
    e.set(o.name, o);
  });
  function i(o) {
    t.add(o.name);
    var s = [].concat(o.requires || [], o.requiresIfExists || []);
    s.forEach(function(a) {
      if (!t.has(a)) {
        var l = e.get(a);
        l && i(l);
      }
    }), r.push(o);
  }
  return n.forEach(function(o) {
    t.has(o.name) || i(o);
  }), r;
}
function yve(n) {
  var e = mve(n);
  return Lge.reduce(function(t, r) {
    return t.concat(e.filter(function(i) {
      return i.phase === r;
    }));
  }, []);
}
function bve(n) {
  var e;
  return function() {
    return e || (e = new Promise(function(t) {
      Promise.resolve().then(function() {
        e = void 0, t(n());
      });
    })), e;
  };
}
function Ove(n) {
  var e = n.reduce(function(t, r) {
    var i = t[r.name];
    return t[r.name] = i ? Object.assign({}, i, r, { options: Object.assign({}, i.options, r.options), data: Object.assign({}, i.data, r.data) }) : r, t;
  }, {});
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}
var r3 = { placement: "bottom", modifiers: [], strategy: "absolute" };
function i3() {
  for (var n = arguments.length, e = new Array(n), t = 0; t < n; t++)
    e[t] = arguments[t];
  return !e.some(function(r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function QD(n) {
  n === void 0 && (n = {});
  var e = n, t = e.defaultModifiers, r = t === void 0 ? [] : t, i = e.defaultOptions, o = i === void 0 ? r3 : i;
  return function(s, a, l) {
    l === void 0 && (l = o);
    var u = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, r3, o), modifiersData: {}, elements: { reference: s, popper: a }, attributes: {}, styles: {} }, c = [], h = !1, f = { state: u, setOptions: function(g) {
      var v = typeof g == "function" ? g(u.options) : g;
      p(), u.options = Object.assign({}, o, u.options, v), u.scrollParents = { reference: Jp(s) ? Gm(s) : s.contextElement ? Gm(s.contextElement) : [], popper: Gm(a) };
      var m = yve(Ove([].concat(r, u.options.modifiers)));
      return u.orderedModifiers = m.filter(function(y) {
        return y.enabled;
      }), d(), f.update();
    }, forceUpdate: function() {
      if (!h) {
        var g = u.elements, v = g.reference, m = g.popper;
        if (i3(v, m)) {
          u.rects = { reference: vve(v, ib(m), u.options.strategy === "fixed"), popper: ND(m) }, u.reset = !1, u.placement = u.options.placement, u.orderedModifiers.forEach(function(_) {
            return u.modifiersData[_.name] = Object.assign({}, _.data);
          });
          for (var y = 0; y < u.orderedModifiers.length; y++) {
            if (u.reset === !0) {
              u.reset = !1, y = -1;
              continue;
            }
            var b = u.orderedModifiers[y], O = b.fn, w = b.options, x = w === void 0 ? {} : w, S = b.name;
            typeof O == "function" && (u = O({ state: u, options: x, name: S, instance: f }) || u);
          }
        }
      }
    }, update: bve(function() {
      return new Promise(function(g) {
        f.forceUpdate(), g(u);
      });
    }), destroy: function() {
      p(), h = !0;
    } };
    if (!i3(s, a))
      return f;
    f.setOptions(l).then(function(g) {
      !h && l.onFirstUpdate && l.onFirstUpdate(g);
    });
    function d() {
      u.orderedModifiers.forEach(function(g) {
        var v = g.name, m = g.options, y = m === void 0 ? {} : m, b = g.effect;
        if (typeof b == "function") {
          var O = b({ state: u, name: v, instance: f, options: y }), w = function() {
          };
          c.push(O || w);
        }
      });
    }
    function p() {
      c.forEach(function(g) {
        return g();
      }), c = [];
    }
    return f;
  };
}
QD();
var wve = [Tj, kj, Aj, wj];
QD({ defaultModifiers: wve });
var xve = [Tj, kj, Aj, wj, lve, rve, fve, Qge, ove], Sve = QD({ defaultModifiers: xve });
const _ve = (n, e, t = {}) => {
  const r = {
    name: "updateState",
    enabled: !0,
    phase: "write",
    fn: ({ state: l }) => {
      const u = Cve(l);
      Object.assign(s.value, u);
    },
    requires: ["computeStyles"]
  }, i = B(() => {
    const { onFirstUpdate: l, placement: u, strategy: c, modifiers: h } = P(t);
    return {
      onFirstUpdate: l,
      placement: u || "bottom",
      strategy: c || "absolute",
      modifiers: [
        ...h || [],
        r,
        { name: "applyStyles", enabled: !1 }
      ]
    };
  }), o = lo(), s = F({
    styles: {
      popper: {
        position: P(i).strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), a = () => {
    o.value && (o.value.destroy(), o.value = void 0);
  };
  return de(i, (l) => {
    const u = P(o);
    u && u.setOptions(l);
  }, {
    deep: !0
  }), de([n, e], ([l, u]) => {
    a(), !(!l || !u) && (o.value = Sve(l, u, P(i)));
  }), hi(() => {
    a();
  }), {
    state: B(() => {
      var l;
      return { ...((l = P(o)) == null ? void 0 : l.state) || {} };
    }),
    styles: B(() => P(s).styles),
    attributes: B(() => P(s).attributes),
    update: () => {
      var l;
      return (l = P(o)) == null ? void 0 : l.update();
    },
    forceUpdate: () => {
      var l;
      return (l = P(o)) == null ? void 0 : l.forceUpdate();
    },
    instanceRef: B(() => P(o))
  };
};
function Cve(n) {
  const e = Object.keys(n.elements), t = zw(e.map((i) => [i, n.styles[i] || {}])), r = zw(e.map((i) => [i, n.attributes[i]]));
  return {
    styles: t,
    attributes: r
  };
}
const ZD = (n) => {
  if (!n)
    return { onClick: Ql, onMousedown: Ql, onMouseup: Ql };
  let e = !1, t = !1;
  return { onClick: (s) => {
    e && t && n(s), e = t = !1;
  }, onMousedown: (s) => {
    e = s.target === s.currentTarget;
  }, onMouseup: (s) => {
    t = s.target === s.currentTarget;
  } };
};
function o3() {
  let n;
  const e = (r, i) => {
    t(), n = window.setTimeout(r, i);
  }, t = () => window.clearTimeout(n);
  return tb(() => t()), {
    registerTimeout: e,
    cancelTimeout: t
  };
}
const $P = {
  prefix: Math.floor(Math.random() * 1e4),
  current: 0
}, Ave = Symbol("elIdInjection"), WD = () => xt() ? $e(Ave, $P) : $P, ll = (n) => {
  const e = WD();
  !Ht && e === $P && jt("IdInjection", `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed
usage: app.provide(ID_INJECTION_KEY, {
  prefix: number,
  current: number,
})`);
  const t = ID();
  return B(() => P(n) || `${t.value}-id-${e.prefix}-${e.current++}`);
};
let sp = [];
const s3 = (n) => {
  const e = n;
  e.key === ii.esc && sp.forEach((t) => t(e));
}, Tve = (n) => {
  dt(() => {
    sp.length === 0 && document.addEventListener("keydown", s3), Ht && sp.push(n);
  }), hi(() => {
    sp = sp.filter((e) => e !== n), sp.length === 0 && Ht && document.removeEventListener("keydown", s3);
  });
};
let a3;
const Mj = () => {
  const n = ID(), e = WD(), t = B(() => `${n.value}-popper-container-${e.prefix}`), r = B(() => `#${t.value}`);
  return {
    id: t,
    selector: r
  };
}, Pve = (n) => {
  const e = document.createElement("div");
  return e.id = n, document.body.appendChild(e), e;
}, Eve = () => {
  const { id: n, selector: e } = Mj();
  return mD(() => {
    Ht && (process.env.NODE_ENV === "test" || !a3 && !document.body.querySelector(e.value)) && (a3 = Pve(n.value));
  }), {
    id: n,
    selector: e
  };
}, kve = qe({
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  }
}), Mve = ({
  showAfter: n,
  hideAfter: e,
  autoClose: t,
  open: r,
  close: i
}) => {
  const { registerTimeout: o } = o3(), {
    registerTimeout: s,
    cancelTimeout: a
  } = o3();
  return {
    onOpen: (c) => {
      o(() => {
        r(c);
        const h = P(t);
        mt(h) && h > 0 && s(() => {
          i(c);
        }, h);
      }, P(n));
    },
    onClose: (c) => {
      a(), o(() => {
        i(c);
      }, P(e));
    }
  };
}, Dj = Symbol("elForwardRef"), Dve = (n) => {
  Jt(Dj, {
    setForwardRef: (t) => {
      n.value = t;
    }
  });
}, Lve = (n) => ({
  mounted(e) {
    n(e);
  },
  updated(e) {
    n(e);
  },
  unmounted() {
    n(null);
  }
}), l3 = F(0), Lj = 2e3, Ij = Symbol("zIndexContextKey"), GD = (n) => {
  const e = n || (xt() ? $e(Ij, void 0) : void 0), t = B(() => {
    const o = P(e);
    return mt(o) ? o : Lj;
  }), r = B(() => t.value + l3.value);
  return {
    initialZIndex: t,
    currentZIndex: r,
    nextZIndex: () => (l3.value++, r.value)
  };
};
function Ive(n) {
  const e = F();
  function t() {
    if (n.value == null)
      return;
    const { selectionStart: i, selectionEnd: o, value: s } = n.value;
    if (i == null || o == null)
      return;
    const a = s.slice(0, Math.max(0, i)), l = s.slice(Math.max(0, o));
    e.value = {
      selectionStart: i,
      selectionEnd: o,
      value: s,
      beforeTxt: a,
      afterTxt: l
    };
  }
  function r() {
    if (n.value == null || e.value == null)
      return;
    const { value: i } = n.value, { beforeTxt: o, afterTxt: s, selectionStart: a } = e.value;
    if (o == null || s == null || a == null)
      return;
    let l = i.length;
    if (i.endsWith(s))
      l = i.length - s.length;
    else if (i.startsWith(o))
      l = o.length;
    else {
      const u = o[a - 1], c = i.indexOf(u, a - 1);
      c !== -1 && (l = c + 1);
    }
    n.value.setSelectionRange(l, l);
  }
  return [t, r];
}
const Rve = (n, e, t) => zO(n.subTree).filter((o) => {
  var s;
  return il(o) && ((s = o.type) == null ? void 0 : s.name) === e && !!o.component;
}).map((o) => o.component.uid).map((o) => t[o]).filter((o) => !!o), $ve = (n, e) => {
  const t = {}, r = lo([]);
  return {
    children: r,
    addChild: (s) => {
      t[s.uid] = s, r.value = Rve(n, e, t);
    },
    removeChild: (s) => {
      delete t[s], r.value = r.value.filter((a) => a.uid !== s);
    }
  };
}, pa = XS({
  type: String,
  values: hd,
  required: !1
}), Rj = Symbol("size"), Nve = () => {
  const n = $e(Rj, {});
  return B(() => P(n.size) || "");
};
function jD(n, { afterFocus: e, beforeBlur: t, afterBlur: r } = {}) {
  const i = xt(), { emit: o } = i, s = lo(), a = F(!1), l = (h) => {
    a.value || (a.value = !0, o("focus", h), e == null || e());
  }, u = (h) => {
    var f;
    wn(t) && t(h) || h.relatedTarget && ((f = s.value) != null && f.contains(h.relatedTarget)) || (a.value = !1, o("blur", h), r == null || r());
  }, c = () => {
    var h;
    (h = n.value) == null || h.focus();
  };
  return de(s, (h) => {
    h && h.setAttribute("tabindex", "-1");
  }), co(s, "click", c), {
    wrapperRef: s,
    isFocused: a,
    handleFocus: l,
    handleBlur: u
  };
}
const $j = Symbol(), Ww = F();
function e_(n, e = void 0) {
  const t = xt() ? $e($j, Ww) : Ww;
  return n ? B(() => {
    var r, i;
    return (i = (r = t.value) == null ? void 0 : r[n]) != null ? i : e;
  }) : t;
}
function HD(n, e) {
  const t = e_(), r = Ie(n, B(() => {
    var a;
    return ((a = t.value) == null ? void 0 : a.namespace) || Zm;
  })), i = Wi(B(() => {
    var a;
    return (a = t.value) == null ? void 0 : a.locale;
  })), o = GD(B(() => {
    var a;
    return ((a = t.value) == null ? void 0 : a.zIndex) || Lj;
  })), s = B(() => {
    var a;
    return P(e) || ((a = t.value) == null ? void 0 : a.size) || "";
  });
  return Nj(B(() => P(t) || {})), {
    ns: r,
    locale: i,
    zIndex: o,
    size: s
  };
}
const Nj = (n, e, t = !1) => {
  var r;
  const i = !!xt(), o = i ? e_() : void 0, s = (r = e == null ? void 0 : e.provide) != null ? r : i ? Jt : void 0;
  if (!s) {
    jt("provideGlobalConfig", "provideGlobalConfig() can only be used inside setup().");
    return;
  }
  const a = B(() => {
    const l = P(n);
    return o != null && o.value ? Bve(o.value, l) : l;
  });
  return s($j, a), s(hj, B(() => a.value.locale)), s(vj, B(() => a.value.namespace)), s(Ij, B(() => a.value.zIndex)), s(Rj, {
    size: B(() => a.value.size || "")
  }), (t || !Ww.value) && (Ww.value = a.value), a;
}, Bve = (n, e) => {
  var t;
  const r = [.../* @__PURE__ */ new Set([...HN(n), ...HN(e)])], i = {};
  for (const o of r)
    i[o] = (t = e[o]) != null ? t : n[o];
  return i;
}, Vve = qe({
  a11y: {
    type: Boolean,
    default: !0
  },
  locale: {
    type: ke(Object)
  },
  size: pa,
  button: {
    type: ke(Object)
  },
  experimentalFeatures: {
    type: ke(Object)
  },
  keyboardNavigation: {
    type: Boolean,
    default: !0
  },
  message: {
    type: ke(Object)
  },
  zIndex: Number,
  namespace: {
    type: String,
    default: "el"
  }
}), NP = {};
U({
  name: "ElConfigProvider",
  props: Vve,
  setup(n, { slots: e }) {
    de(() => n.message, (r) => {
      Object.assign(NP, r ?? {});
    }, { immediate: !0, deep: !0 });
    const t = Nj(n);
    return () => Ce(e, "default", { config: t == null ? void 0 : t.value });
  }
});
var Ze = (n, e) => {
  const t = n.__vccOpts || n;
  for (const [r, i] of e)
    t[r] = i;
  return t;
};
const zve = qe({
  size: {
    type: ke([Number, String])
  },
  color: {
    type: String
  }
}), Fve = U({
  name: "ElIcon",
  inheritAttrs: !1
}), Qve = /* @__PURE__ */ U({
  ...Fve,
  props: zve,
  setup(n) {
    const e = n, t = Ie("icon"), r = B(() => {
      const { size: i, color: o } = e;
      return !i && !o ? {} : {
        fontSize: Io(i) ? void 0 : Fo(i),
        "--color": o
      };
    });
    return (i, o) => (z(), X("i", ps({
      class: P(t).b(),
      style: P(r)
    }, i.$attrs), [
      Ce(i.$slots, "default")
    ], 16));
  }
});
var Zve = /* @__PURE__ */ Ze(Qve, [["__file", "icon.vue"]]);
const Dt = Bn(Zve), qg = Symbol("formContextKey"), Ff = Symbol("formItemContextKey"), Qo = (n, e = {}) => {
  const t = F(void 0), r = e.prop ? t : bj("size"), i = e.global ? t : Nve(), o = e.form ? { size: void 0 } : $e(qg, void 0), s = e.formItem ? { size: void 0 } : $e(Ff, void 0);
  return B(() => r.value || P(n) || (s == null ? void 0 : s.size) || (o == null ? void 0 : o.size) || i.value || "");
}, Uc = (n) => {
  const e = bj("disabled"), t = $e(qg, void 0);
  return B(() => e.value || P(n) || (t == null ? void 0 : t.disabled) || !1);
}, yl = () => {
  const n = $e(qg, void 0), e = $e(Ff, void 0);
  return {
    form: n,
    formItem: e
  };
}, dd = (n, {
  formItemContext: e,
  disableIdGeneration: t,
  disableIdManagement: r
}) => {
  t || (t = F(!1)), r || (r = F(!1));
  const i = F();
  let o;
  const s = B(() => {
    var a;
    return !!(!n.label && e && e.inputIds && ((a = e.inputIds) == null ? void 0 : a.length) <= 1);
  });
  return dt(() => {
    o = de([hs(n, "id"), t], ([a, l]) => {
      const u = a ?? (l ? void 0 : ll().value);
      u !== i.value && (e != null && e.removeInputId && (i.value && e.removeInputId(i.value), !(r != null && r.value) && !l && u && e.addInputId(u)), i.value = u);
    }, { immediate: !0 });
  }), j0(() => {
    o && o(), e != null && e.removeInputId && i.value && e.removeInputId(i.value);
  }), {
    isLabeledByFormItem: s,
    inputId: i
  };
}, Wve = qe({
  size: {
    type: String,
    values: hd
  },
  disabled: Boolean
}), Gve = qe({
  ...Wve,
  model: Object,
  rules: {
    type: ke(Object)
  },
  labelPosition: {
    type: String,
    values: ["left", "right", "top"],
    default: "right"
  },
  requireAsteriskPosition: {
    type: String,
    values: ["left", "right"],
    default: "left"
  },
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  labelSuffix: {
    type: String,
    default: ""
  },
  inline: Boolean,
  inlineMessage: Boolean,
  statusIcon: Boolean,
  showMessage: {
    type: Boolean,
    default: !0
  },
  validateOnRuleChange: {
    type: Boolean,
    default: !0
  },
  hideRequiredAsterisk: Boolean,
  scrollToError: Boolean,
  scrollIntoViewOptions: {
    type: [Object, Boolean]
  }
}), jve = {
  validate: (n, e, t) => (Gn(n) || qt(n)) && xi(e) && qt(t)
}, Hve = "ElForm";
function qve() {
  const n = F([]), e = B(() => {
    if (!n.value.length)
      return "0";
    const o = Math.max(...n.value);
    return o ? `${o}px` : "";
  });
  function t(o) {
    const s = n.value.indexOf(o);
    return s === -1 && e.value === "0" && jt(Hve, `unexpected width ${o}`), s;
  }
  function r(o, s) {
    if (o && s) {
      const a = t(s);
      n.value.splice(a, 1, o);
    } else
      o && n.value.push(o);
  }
  function i(o) {
    const s = t(o);
    s > -1 && n.value.splice(s, 1);
  }
  return {
    autoLabelWidth: e,
    registerLabelWidth: r,
    deregisterLabelWidth: i
  };
}
const Hb = (n, e) => {
  const t = ky(e);
  return t.length > 0 ? n.filter((r) => r.prop && t.includes(r.prop)) : n;
}, QO = "ElForm", Yve = U({
  name: QO
}), Xve = /* @__PURE__ */ U({
  ...Yve,
  props: Gve,
  emits: jve,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = [], o = Qo(), s = Ie("form"), a = B(() => {
      const { labelPosition: b, inline: O } = r;
      return [
        s.b(),
        s.m(o.value || "default"),
        {
          [s.m(`label-${b}`)]: b,
          [s.m("inline")]: O
        }
      ];
    }), l = (b) => i.find((O) => O.prop === b), u = (b) => {
      i.push(b);
    }, c = (b) => {
      b.prop && i.splice(i.indexOf(b), 1);
    }, h = (b = []) => {
      if (!r.model) {
        jt(QO, "model is required for resetFields to work.");
        return;
      }
      Hb(i, b).forEach((O) => O.resetField());
    }, f = (b = []) => {
      Hb(i, b).forEach((O) => O.clearValidate());
    }, d = B(() => {
      const b = !!r.model;
      return b || jt(QO, "model is required for validate to work."), b;
    }), p = (b) => {
      if (i.length === 0)
        return [];
      const O = Hb(i, b);
      return O.length ? O : (jt(QO, "please pass correct props!"), []);
    }, g = async (b) => m(void 0, b), v = async (b = []) => {
      if (!d.value)
        return !1;
      const O = p(b);
      if (O.length === 0)
        return !0;
      let w = {};
      for (const x of O)
        try {
          await x.validate("");
        } catch (S) {
          w = {
            ...w,
            ...S
          };
        }
      return Object.keys(w).length === 0 ? !0 : Promise.reject(w);
    }, m = async (b = [], O) => {
      const w = !wn(O);
      try {
        const x = await v(b);
        return x === !0 && (O == null || O(x)), x;
      } catch (x) {
        if (x instanceof Error)
          throw x;
        const S = x;
        return r.scrollToError && y(Object.keys(S)[0]), O == null || O(!1, S), w && Promise.reject(S);
      }
    }, y = (b) => {
      var O;
      const w = Hb(i, b)[0];
      w && ((O = w.$el) == null || O.scrollIntoView(r.scrollIntoViewOptions));
    };
    return de(() => r.rules, () => {
      r.validateOnRuleChange && g().catch((b) => jt(b));
    }, { deep: !0 }), Jt(qg, Si({
      ...jc(r),
      emit: t,
      resetFields: h,
      clearValidate: f,
      validateField: m,
      getField: l,
      addField: u,
      removeField: c,
      ...qve()
    })), e({
      validate: g,
      validateField: m,
      resetFields: h,
      clearValidate: f,
      scrollToField: y
    }), (b, O) => (z(), X("form", {
      class: Z(P(a))
    }, [
      Ce(b.$slots, "default")
    ], 2));
  }
});
var Uve = /* @__PURE__ */ Ze(Xve, [["__file", "form.vue"]]);
const Kve = [
  "",
  "error",
  "validating",
  "success"
], Jve = qe({
  label: String,
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  prop: {
    type: ke([String, Array])
  },
  required: {
    type: Boolean,
    default: void 0
  },
  rules: {
    type: ke([Object, Array])
  },
  error: String,
  validateStatus: {
    type: String,
    values: Kve
  },
  for: String,
  inlineMessage: {
    type: [String, Boolean],
    default: ""
  },
  showMessage: {
    type: Boolean,
    default: !0
  },
  size: {
    type: String,
    values: hd
  }
}), u3 = "ElLabelWrap";
var eme = U({
  name: u3,
  props: {
    isAutoWidth: Boolean,
    updateAll: Boolean
  },
  setup(n, {
    slots: e
  }) {
    const t = $e(qg, void 0), r = $e(Ff);
    r || du(u3, "usage: <el-form-item><label-wrap /></el-form-item>");
    const i = Ie("form"), o = F(), s = F(0), a = () => {
      var c;
      if ((c = o.value) != null && c.firstElementChild) {
        const h = window.getComputedStyle(o.value.firstElementChild).width;
        return Math.ceil(Number.parseFloat(h));
      } else
        return 0;
    }, l = (c = "update") => {
      ut(() => {
        e.default && n.isAutoWidth && (c === "update" ? s.value = a() : c === "remove" && (t == null || t.deregisterLabelWidth(s.value)));
      });
    }, u = () => l("update");
    return dt(() => {
      u();
    }), hi(() => {
      l("remove");
    }), H0(() => u()), de(s, (c, h) => {
      n.updateAll && (t == null || t.registerLabelWidth(c, h));
    }), Ri(B(() => {
      var c, h;
      return (h = (c = o.value) == null ? void 0 : c.firstElementChild) != null ? h : null;
    }), u), () => {
      var c, h;
      if (!e)
        return null;
      const {
        isAutoWidth: f
      } = n;
      if (f) {
        const d = t == null ? void 0 : t.autoLabelWidth, p = r == null ? void 0 : r.hasLabel, g = {};
        if (p && d && d !== "auto") {
          const v = Math.max(0, Number.parseInt(d, 10) - s.value), m = t.labelPosition === "left" ? "marginRight" : "marginLeft";
          v && (g[m] = `${v}px`);
        }
        return pe("div", {
          ref: o,
          class: [i.be("item", "label-wrap")],
          style: g
        }, [(c = e.default) == null ? void 0 : c.call(e)]);
      } else
        return pe(pr, {
          ref: o
        }, [(h = e.default) == null ? void 0 : h.call(e)]);
    };
  }
});
const tme = ["role", "aria-labelledby"], nme = U({
  name: "ElFormItem"
}), rme = /* @__PURE__ */ U({
  ...nme,
  props: Jve,
  setup(n, { expose: e }) {
    const t = n, r = Hc(), i = $e(qg, void 0), o = $e(Ff, void 0), s = Qo(void 0, { formItem: !1 }), a = Ie("form-item"), l = ll().value, u = F([]), c = F(""), h = gpe(c, 100), f = F(""), d = F();
    let p, g = !1;
    const v = B(() => {
      if ((i == null ? void 0 : i.labelPosition) === "top")
        return {};
      const K = Fo(t.labelWidth || (i == null ? void 0 : i.labelWidth) || "");
      return K ? { width: K } : {};
    }), m = B(() => {
      if ((i == null ? void 0 : i.labelPosition) === "top" || i != null && i.inline)
        return {};
      if (!t.label && !t.labelWidth && C)
        return {};
      const K = Fo(t.labelWidth || (i == null ? void 0 : i.labelWidth) || "");
      return !t.label && !r.label ? { marginLeft: K } : {};
    }), y = B(() => [
      a.b(),
      a.m(s.value),
      a.is("error", c.value === "error"),
      a.is("validating", c.value === "validating"),
      a.is("success", c.value === "success"),
      a.is("required", D.value || t.required),
      a.is("no-asterisk", i == null ? void 0 : i.hideRequiredAsterisk),
      (i == null ? void 0 : i.requireAsteriskPosition) === "right" ? "asterisk-right" : "asterisk-left",
      { [a.m("feedback")]: i == null ? void 0 : i.statusIcon }
    ]), b = B(() => xi(t.inlineMessage) ? t.inlineMessage : (i == null ? void 0 : i.inlineMessage) || !1), O = B(() => [
      a.e("error"),
      { [a.em("error", "inline")]: b.value }
    ]), w = B(() => t.prop ? qt(t.prop) ? t.prop : t.prop.join(".") : ""), x = B(() => !!(t.label || r.label)), S = B(() => t.for || (u.value.length === 1 ? u.value[0] : void 0)), _ = B(() => !S.value && x.value), C = !!o, A = B(() => {
      const K = i == null ? void 0 : i.model;
      if (!(!K || !t.prop))
        return BO(K, t.prop).value;
    }), T = B(() => {
      const { required: K } = t, re = [];
      t.rules && re.push(...ky(t.rules));
      const ge = i == null ? void 0 : i.rules;
      if (ge && t.prop) {
        const ne = BO(ge, t.prop).value;
        ne && re.push(...ky(ne));
      }
      if (K !== void 0) {
        const ne = re.map((ue, xe) => [ue, xe]).filter(([ue]) => Object.keys(ue).includes("required"));
        if (ne.length > 0)
          for (const [ue, xe] of ne)
            ue.required !== K && (re[xe] = { ...ue, required: K });
        else
          re.push({ required: K });
      }
      return re;
    }), k = B(() => T.value.length > 0), L = (K) => T.value.filter((ge) => !ge.trigger || !K ? !0 : Array.isArray(ge.trigger) ? ge.trigger.includes(K) : ge.trigger === K).map(({ trigger: ge, ...ne }) => ne), D = B(() => T.value.some((K) => K.required)), E = B(() => {
      var K;
      return h.value === "error" && t.showMessage && ((K = i == null ? void 0 : i.showMessage) != null ? K : !0);
    }), M = B(() => `${t.label || ""}${(i == null ? void 0 : i.labelSuffix) || ""}`), R = (K) => {
      c.value = K;
    }, N = (K) => {
      var re, ge;
      const { errors: ne, fields: ue } = K;
      (!ne || !ue) && console.error(K), R("error"), f.value = ne ? (ge = (re = ne == null ? void 0 : ne[0]) == null ? void 0 : re.message) != null ? ge : `${t.prop} is required` : "", i == null || i.emit("validate", t.prop, !1, f.value);
    }, $ = () => {
      R("success"), i == null || i.emit("validate", t.prop, !0, "");
    }, V = async (K) => {
      const re = w.value;
      return new eb({
        [re]: K
      }).validate({ [re]: A.value }, { firstFields: !0 }).then(() => ($(), !0)).catch((ne) => (N(ne), Promise.reject(ne)));
    }, H = async (K, re) => {
      if (g || !t.prop)
        return !1;
      const ge = wn(re);
      if (!k.value)
        return re == null || re(!1), !1;
      const ne = L(K);
      return ne.length === 0 ? (re == null || re(!0), !0) : (R("validating"), V(ne).then(() => (re == null || re(!0), !0)).catch((ue) => {
        const { fields: xe } = ue;
        return re == null || re(!1, xe), ge ? !1 : Promise.reject(xe);
      }));
    }, G = () => {
      R(""), f.value = "", g = !1;
    }, q = async () => {
      const K = i == null ? void 0 : i.model;
      if (!K || !t.prop)
        return;
      const re = BO(K, t.prop);
      g = !0, re.value = My(p), await ut(), G(), g = !1;
    }, Y = (K) => {
      u.value.includes(K) || u.value.push(K);
    }, ie = (K) => {
      u.value = u.value.filter((re) => re !== K);
    };
    de(() => t.error, (K) => {
      f.value = K || "", R(K ? "error" : "");
    }, { immediate: !0 }), de(() => t.validateStatus, (K) => R(K || ""));
    const se = Si({
      ...jc(t),
      $el: d,
      size: s,
      validateState: c,
      labelId: l,
      inputIds: u,
      isGroup: _,
      hasLabel: x,
      fieldValue: A,
      addInputId: Y,
      removeInputId: ie,
      resetField: q,
      clearValidate: G,
      validate: H
    });
    return Jt(Ff, se), dt(() => {
      t.prop && (i == null || i.addField(se), p = My(A.value));
    }), hi(() => {
      i == null || i.removeField(se);
    }), e({
      size: s,
      validateMessage: f,
      validateState: c,
      validate: H,
      clearValidate: G,
      resetField: q
    }), (K, re) => {
      var ge;
      return z(), X("div", {
        ref_key: "formItemRef",
        ref: d,
        class: Z(P(y)),
        role: P(_) ? "group" : void 0,
        "aria-labelledby": P(_) ? P(l) : void 0
      }, [
        pe(P(eme), {
          "is-auto-width": P(v).width === "auto",
          "update-all": ((ge = P(i)) == null ? void 0 : ge.labelWidth) === "auto"
        }, {
          default: me(() => [
            P(x) ? (z(), ye(cn(P(S) ? "label" : "div"), {
              key: 0,
              id: P(l),
              for: P(S),
              class: Z(P(a).e("label")),
              style: pt(P(v))
            }, {
              default: me(() => [
                Ce(K.$slots, "label", { label: P(M) }, () => [
                  uo(Ke(P(M)), 1)
                ])
              ]),
              _: 3
            }, 8, ["id", "for", "class", "style"])) : he("v-if", !0)
          ]),
          _: 3
        }, 8, ["is-auto-width", "update-all"]),
        J("div", {
          class: Z(P(a).e("content")),
          style: pt(P(m))
        }, [
          Ce(K.$slots, "default"),
          pe(Fie, {
            name: `${P(a).namespace.value}-zoom-in-top`
          }, {
            default: me(() => [
              P(E) ? Ce(K.$slots, "error", {
                key: 0,
                error: f.value
              }, () => [
                J("div", {
                  class: Z(P(O))
                }, Ke(f.value), 3)
              ]) : he("v-if", !0)
            ]),
            _: 3
          }, 8, ["name"])
        ], 6)
      ], 10, tme);
    };
  }
});
var Bj = /* @__PURE__ */ Ze(rme, [["__file", "form-item.vue"]]);
const FVt = Bn(Uve, {
  FormItem: Bj
}), QVt = fa(Bj);
let Ls;
const ime = `
  height:0 !important;
  visibility:hidden !important;
  ${Lpe() ? "" : "overflow:hidden !important;"}
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`, ome = [
  "letter-spacing",
  "line-height",
  "padding-top",
  "padding-bottom",
  "font-family",
  "font-weight",
  "font-size",
  "text-rendering",
  "text-transform",
  "width",
  "text-indent",
  "padding-left",
  "padding-right",
  "border-width",
  "box-sizing"
];
function sme(n) {
  const e = window.getComputedStyle(n), t = e.getPropertyValue("box-sizing"), r = Number.parseFloat(e.getPropertyValue("padding-bottom")) + Number.parseFloat(e.getPropertyValue("padding-top")), i = Number.parseFloat(e.getPropertyValue("border-bottom-width")) + Number.parseFloat(e.getPropertyValue("border-top-width"));
  return { contextStyle: ome.map((s) => `${s}:${e.getPropertyValue(s)}`).join(";"), paddingSize: r, borderSize: i, boxSizing: t };
}
function c3(n, e = 1, t) {
  var r;
  Ls || (Ls = document.createElement("textarea"), document.body.appendChild(Ls));
  const { paddingSize: i, borderSize: o, boxSizing: s, contextStyle: a } = sme(n);
  Ls.setAttribute("style", `${a};${ime}`), Ls.value = n.value || n.placeholder || "";
  let l = Ls.scrollHeight;
  const u = {};
  s === "border-box" ? l = l + o : s === "content-box" && (l = l - i), Ls.value = "";
  const c = Ls.scrollHeight - i;
  if (mt(e)) {
    let h = c * e;
    s === "border-box" && (h = h + i + o), l = Math.max(h, l), u.minHeight = `${h}px`;
  }
  if (mt(t)) {
    let h = c * t;
    s === "border-box" && (h = h + i + o), l = Math.min(h, l);
  }
  return u.height = `${l}px`, (r = Ls.parentNode) == null || r.removeChild(Ls), Ls = void 0, u;
}
const ame = qe({
  id: {
    type: String,
    default: void 0
  },
  size: pa,
  disabled: Boolean,
  modelValue: {
    type: ke([
      String,
      Number,
      Object
    ]),
    default: ""
  },
  maxlength: {
    type: [String, Number]
  },
  minlength: {
    type: [String, Number]
  },
  type: {
    type: String,
    default: "text"
  },
  resize: {
    type: String,
    values: ["none", "both", "horizontal", "vertical"]
  },
  autosize: {
    type: ke([Boolean, Object]),
    default: !1
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  formatter: {
    type: Function
  },
  parser: {
    type: Function
  },
  placeholder: {
    type: String
  },
  form: {
    type: String
  },
  readonly: {
    type: Boolean,
    default: !1
  },
  clearable: {
    type: Boolean,
    default: !1
  },
  showPassword: {
    type: Boolean,
    default: !1
  },
  showWordLimit: {
    type: Boolean,
    default: !1
  },
  suffixIcon: {
    type: Vr
  },
  prefixIcon: {
    type: Vr
  },
  containerRole: {
    type: String,
    default: void 0
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  inputStyle: {
    type: ke([Object, Array, String]),
    default: () => fd({})
  },
  autofocus: {
    type: Boolean,
    default: !1
  }
}), lme = {
  [Vt]: (n) => qt(n),
  input: (n) => qt(n),
  change: (n) => qt(n),
  focus: (n) => n instanceof FocusEvent,
  blur: (n) => n instanceof FocusEvent,
  clear: () => !0,
  mouseleave: (n) => n instanceof MouseEvent,
  mouseenter: (n) => n instanceof MouseEvent,
  keydown: (n) => n instanceof Event,
  compositionstart: (n) => n instanceof CompositionEvent,
  compositionupdate: (n) => n instanceof CompositionEvent,
  compositionend: (n) => n instanceof CompositionEvent
}, ume = ["role"], cme = ["id", "minlength", "maxlength", "type", "disabled", "readonly", "autocomplete", "tabindex", "aria-label", "placeholder", "form", "autofocus"], hme = ["id", "minlength", "maxlength", "tabindex", "disabled", "readonly", "autocomplete", "aria-label", "placeholder", "form", "autofocus"], fme = U({
  name: "ElInput",
  inheritAttrs: !1
}), dme = /* @__PURE__ */ U({
  ...fme,
  props: ame,
  emits: lme,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = Qie(), o = Hc(), s = B(() => {
      const ve = {};
      return r.containerRole === "combobox" && (ve["aria-haspopup"] = i["aria-haspopup"], ve["aria-owns"] = i["aria-owns"], ve["aria-expanded"] = i["aria-expanded"]), ve;
    }), a = B(() => [
      r.type === "textarea" ? v.b() : g.b(),
      g.m(d.value),
      g.is("disabled", p.value),
      g.is("exceed", Y.value),
      {
        [g.b("group")]: o.prepend || o.append,
        [g.bm("group", "append")]: o.append,
        [g.bm("group", "prepend")]: o.prepend,
        [g.m("prefix")]: o.prefix || r.prefixIcon,
        [g.m("suffix")]: o.suffix || r.suffixIcon || r.clearable || r.showPassword,
        [g.bm("suffix", "password-clear")]: V.value && H.value
      },
      i.class
    ]), l = B(() => [
      g.e("wrapper"),
      g.is("focus", A.value)
    ]), u = ege({
      excludeKeys: B(() => Object.keys(s.value))
    }), { form: c, formItem: h } = yl(), { inputId: f } = dd(r, {
      formItemContext: h
    }), d = Qo(), p = Uc(), g = Ie("input"), v = Ie("textarea"), m = lo(), y = lo(), b = F(!1), O = F(!1), w = F(!1), x = F(), S = lo(r.inputStyle), _ = B(() => m.value || y.value), { wrapperRef: C, isFocused: A, handleFocus: T, handleBlur: k } = jD(_, {
      afterBlur() {
        var ve;
        r.validateEvent && ((ve = h == null ? void 0 : h.validate) == null || ve.call(h, "blur").catch((yt) => jt(yt)));
      }
    }), L = B(() => {
      var ve;
      return (ve = c == null ? void 0 : c.statusIcon) != null ? ve : !1;
    }), D = B(() => (h == null ? void 0 : h.validateState) || ""), E = B(() => D.value && sj[D.value]), M = B(() => w.value ? vde : qfe), R = B(() => [
      i.style
    ]), N = B(() => [
      r.inputStyle,
      S.value,
      { resize: r.resize }
    ]), $ = B(() => No(r.modelValue) ? "" : String(r.modelValue)), V = B(() => r.clearable && !p.value && !r.readonly && !!$.value && (A.value || b.value)), H = B(() => r.showPassword && !p.value && !r.readonly && !!$.value && (!!$.value || A.value)), G = B(() => r.showWordLimit && !!r.maxlength && (r.type === "text" || r.type === "textarea") && !p.value && !r.readonly && !r.showPassword), q = B(() => $.value.length), Y = B(() => !!G.value && q.value > Number(r.maxlength)), ie = B(() => !!o.suffix || !!r.suffixIcon || V.value || r.showPassword || G.value || !!D.value && L.value), [se, K] = Ive(m);
    Ri(y, (ve) => {
      if (ne(), !G.value || r.resize !== "both")
        return;
      const yt = ve[0], { width: Ln } = yt.contentRect;
      x.value = {
        right: `calc(100% - ${Ln + 15 + 6}px)`
      };
    });
    const re = () => {
      const { type: ve, autosize: yt } = r;
      if (!(!Ht || ve !== "textarea" || !y.value))
        if (yt) {
          const Ln = ti(yt) ? yt.minRows : void 0, Ms = ti(yt) ? yt.maxRows : void 0, Cd = c3(y.value, Ln, Ms);
          S.value = {
            overflowY: "hidden",
            ...Cd
          }, ut(() => {
            y.value.offsetHeight, S.value = Cd;
          });
        } else
          S.value = {
            minHeight: c3(y.value).minHeight
          };
    }, ne = ((ve) => {
      let yt = !1;
      return () => {
        var Ln;
        if (yt || !r.autosize)
          return;
        ((Ln = y.value) == null ? void 0 : Ln.offsetParent) === null || (ve(), yt = !0);
      };
    })(re), ue = () => {
      const ve = _.value, yt = r.formatter ? r.formatter($.value) : $.value;
      !ve || ve.value === yt || (ve.value = yt);
    }, xe = async (ve) => {
      se();
      let { value: yt } = ve.target;
      if (r.formatter && (yt = r.parser ? r.parser(yt) : yt), !O.value) {
        if (yt === $.value) {
          ue();
          return;
        }
        t(Vt, yt), t("input", yt), await ut(), ue(), K();
      }
    }, gt = (ve) => {
      t("change", ve.target.value);
    }, He = (ve) => {
      t("compositionstart", ve), O.value = !0;
    }, It = (ve) => {
      var yt;
      t("compositionupdate", ve);
      const Ln = (yt = ve.target) == null ? void 0 : yt.value, Ms = Ln[Ln.length - 1] || "";
      O.value = !uj(Ms);
    }, Rt = (ve) => {
      t("compositionend", ve), O.value && (O.value = !1, xe(ve));
    }, pn = () => {
      w.value = !w.value, Xn();
    }, Xn = async () => {
      var ve;
      await ut(), (ve = _.value) == null || ve.focus();
    }, Dn = () => {
      var ve;
      return (ve = _.value) == null ? void 0 : ve.blur();
    }, yr = (ve) => {
      b.value = !1, t("mouseleave", ve);
    }, ur = (ve) => {
      b.value = !0, t("mouseenter", ve);
    }, vo = (ve) => {
      t("keydown", ve);
    }, mo = () => {
      var ve;
      (ve = _.value) == null || ve.select();
    }, ji = () => {
      t(Vt, ""), t("change", ""), t("clear"), t("input", "");
    };
    return de(() => r.modelValue, () => {
      var ve;
      ut(() => re()), r.validateEvent && ((ve = h == null ? void 0 : h.validate) == null || ve.call(h, "change").catch((yt) => jt(yt)));
    }), de($, () => ue()), de(() => r.type, async () => {
      await ut(), ue(), re();
    }), dt(() => {
      !r.formatter && r.parser && jt("ElInput", "If you set the parser, you also need to set the formatter."), ue(), ut(re);
    }), e({
      input: m,
      textarea: y,
      ref: _,
      textareaStyle: N,
      autosize: hs(r, "autosize"),
      focus: Xn,
      blur: Dn,
      select: mo,
      clear: ji,
      resizeTextarea: re
    }), (ve, yt) => zt((z(), X("div", ps(P(s), {
      class: P(a),
      style: P(R),
      role: ve.containerRole,
      onMouseenter: ur,
      onMouseleave: yr
    }), [
      he(" input "),
      ve.type !== "textarea" ? (z(), X(pr, { key: 0 }, [
        he(" prepend slot "),
        ve.$slots.prepend ? (z(), X("div", {
          key: 0,
          class: Z(P(g).be("group", "prepend"))
        }, [
          Ce(ve.$slots, "prepend")
        ], 2)) : he("v-if", !0),
        J("div", {
          ref_key: "wrapperRef",
          ref: C,
          class: Z(P(l))
        }, [
          he(" prefix slot "),
          ve.$slots.prefix || ve.prefixIcon ? (z(), X("span", {
            key: 0,
            class: Z(P(g).e("prefix"))
          }, [
            J("span", {
              class: Z(P(g).e("prefix-inner"))
            }, [
              Ce(ve.$slots, "prefix"),
              ve.prefixIcon ? (z(), ye(P(Dt), {
                key: 0,
                class: Z(P(g).e("icon"))
              }, {
                default: me(() => [
                  (z(), ye(cn(ve.prefixIcon)))
                ]),
                _: 1
              }, 8, ["class"])) : he("v-if", !0)
            ], 2)
          ], 2)) : he("v-if", !0),
          J("input", ps({
            id: P(f),
            ref_key: "input",
            ref: m,
            class: P(g).e("inner")
          }, P(u), {
            minlength: ve.minlength,
            maxlength: ve.maxlength,
            type: ve.showPassword ? w.value ? "text" : "password" : ve.type,
            disabled: P(p),
            readonly: ve.readonly,
            autocomplete: ve.autocomplete,
            tabindex: ve.tabindex,
            "aria-label": ve.label,
            placeholder: ve.placeholder,
            style: ve.inputStyle,
            form: ve.form,
            autofocus: ve.autofocus,
            onCompositionstart: He,
            onCompositionupdate: It,
            onCompositionend: Rt,
            onInput: xe,
            onFocus: yt[0] || (yt[0] = (...Ln) => P(T) && P(T)(...Ln)),
            onBlur: yt[1] || (yt[1] = (...Ln) => P(k) && P(k)(...Ln)),
            onChange: gt,
            onKeydown: vo
          }), null, 16, cme),
          he(" suffix slot "),
          P(ie) ? (z(), X("span", {
            key: 1,
            class: Z(P(g).e("suffix"))
          }, [
            J("span", {
              class: Z(P(g).e("suffix-inner"))
            }, [
              !P(V) || !P(H) || !P(G) ? (z(), X(pr, { key: 0 }, [
                Ce(ve.$slots, "suffix"),
                ve.suffixIcon ? (z(), ye(P(Dt), {
                  key: 0,
                  class: Z(P(g).e("icon"))
                }, {
                  default: me(() => [
                    (z(), ye(cn(ve.suffixIcon)))
                  ]),
                  _: 1
                }, 8, ["class"])) : he("v-if", !0)
              ], 64)) : he("v-if", !0),
              P(V) ? (z(), ye(P(Dt), {
                key: 1,
                class: Z([P(g).e("icon"), P(g).e("clear")]),
                onMousedown: en(P(Ql), ["prevent"]),
                onClick: ji
              }, {
                default: me(() => [
                  pe(P(qS))
                ]),
                _: 1
              }, 8, ["class", "onMousedown"])) : he("v-if", !0),
              P(H) ? (z(), ye(P(Dt), {
                key: 2,
                class: Z([P(g).e("icon"), P(g).e("password")]),
                onClick: pn
              }, {
                default: me(() => [
                  (z(), ye(cn(P(M))))
                ]),
                _: 1
              }, 8, ["class"])) : he("v-if", !0),
              P(G) ? (z(), X("span", {
                key: 3,
                class: Z(P(g).e("count"))
              }, [
                J("span", {
                  class: Z(P(g).e("count-inner"))
                }, Ke(P(q)) + " / " + Ke(ve.maxlength), 3)
              ], 2)) : he("v-if", !0),
              P(D) && P(E) && P(L) ? (z(), ye(P(Dt), {
                key: 4,
                class: Z([
                  P(g).e("icon"),
                  P(g).e("validateIcon"),
                  P(g).is("loading", P(D) === "validating")
                ])
              }, {
                default: me(() => [
                  (z(), ye(cn(P(E))))
                ]),
                _: 1
              }, 8, ["class"])) : he("v-if", !0)
            ], 2)
          ], 2)) : he("v-if", !0)
        ], 2),
        he(" append slot "),
        ve.$slots.append ? (z(), X("div", {
          key: 1,
          class: Z(P(g).be("group", "append"))
        }, [
          Ce(ve.$slots, "append")
        ], 2)) : he("v-if", !0)
      ], 64)) : (z(), X(pr, { key: 1 }, [
        he(" textarea "),
        J("textarea", ps({
          id: P(f),
          ref_key: "textarea",
          ref: y,
          class: P(v).e("inner")
        }, P(u), {
          minlength: ve.minlength,
          maxlength: ve.maxlength,
          tabindex: ve.tabindex,
          disabled: P(p),
          readonly: ve.readonly,
          autocomplete: ve.autocomplete,
          style: P(N),
          "aria-label": ve.label,
          placeholder: ve.placeholder,
          form: ve.form,
          autofocus: ve.autofocus,
          onCompositionstart: He,
          onCompositionupdate: It,
          onCompositionend: Rt,
          onInput: xe,
          onFocus: yt[2] || (yt[2] = (...Ln) => P(T) && P(T)(...Ln)),
          onBlur: yt[3] || (yt[3] = (...Ln) => P(k) && P(k)(...Ln)),
          onChange: gt,
          onKeydown: vo
        }), null, 16, hme),
        P(G) ? (z(), X("span", {
          key: 0,
          style: pt(x.value),
          class: Z(P(g).e("count"))
        }, Ke(P(q)) + " / " + Ke(ve.maxlength), 7)) : he("v-if", !0)
      ], 64))
    ], 16, ume)), [
      [rr, ve.type !== "hidden"]
    ]);
  }
});
var pme = /* @__PURE__ */ Ze(dme, [["__file", "input.vue"]]);
const ob = Bn(pme), kd = 4, gme = {
  vertical: {
    offset: "offsetHeight",
    scroll: "scrollTop",
    scrollSize: "scrollHeight",
    size: "height",
    key: "vertical",
    axis: "Y",
    client: "clientY",
    direction: "top"
  },
  horizontal: {
    offset: "offsetWidth",
    scroll: "scrollLeft",
    scrollSize: "scrollWidth",
    size: "width",
    key: "horizontal",
    axis: "X",
    client: "clientX",
    direction: "left"
  }
}, vme = ({
  move: n,
  size: e,
  bar: t
}) => ({
  [t.size]: e,
  transform: `translate${t.axis}(${n}%)`
}), qD = Symbol("scrollbarContextKey"), mme = qe({
  vertical: Boolean,
  size: String,
  move: Number,
  ratio: {
    type: Number,
    required: !0
  },
  always: Boolean
}), yme = "Thumb", bme = /* @__PURE__ */ U({
  __name: "thumb",
  props: mme,
  setup(n) {
    const e = n, t = $e(qD), r = Ie("scrollbar");
    t || du(yme, "can not inject scrollbar context");
    const i = F(), o = F(), s = F({}), a = F(!1);
    let l = !1, u = !1, c = Ht ? document.onselectstart : null;
    const h = B(() => gme[e.vertical ? "vertical" : "horizontal"]), f = B(() => vme({
      size: e.size,
      move: e.move,
      bar: h.value
    })), d = B(() => i.value[h.value.offset] ** 2 / t.wrapElement[h.value.scrollSize] / e.ratio / o.value[h.value.offset]), p = (x) => {
      var S;
      if (x.stopPropagation(), x.ctrlKey || [1, 2].includes(x.button))
        return;
      (S = window.getSelection()) == null || S.removeAllRanges(), v(x);
      const _ = x.currentTarget;
      _ && (s.value[h.value.axis] = _[h.value.offset] - (x[h.value.client] - _.getBoundingClientRect()[h.value.direction]));
    }, g = (x) => {
      if (!o.value || !i.value || !t.wrapElement)
        return;
      const S = Math.abs(x.target.getBoundingClientRect()[h.value.direction] - x[h.value.client]), _ = o.value[h.value.offset] / 2, C = (S - _) * 100 * d.value / i.value[h.value.offset];
      t.wrapElement[h.value.scroll] = C * t.wrapElement[h.value.scrollSize] / 100;
    }, v = (x) => {
      x.stopImmediatePropagation(), l = !0, document.addEventListener("mousemove", m), document.addEventListener("mouseup", y), c = document.onselectstart, document.onselectstart = () => !1;
    }, m = (x) => {
      if (!i.value || !o.value || l === !1)
        return;
      const S = s.value[h.value.axis];
      if (!S)
        return;
      const _ = (i.value.getBoundingClientRect()[h.value.direction] - x[h.value.client]) * -1, C = o.value[h.value.offset] - S, A = (_ - C) * 100 * d.value / i.value[h.value.offset];
      t.wrapElement[h.value.scroll] = A * t.wrapElement[h.value.scrollSize] / 100;
    }, y = () => {
      l = !1, s.value[h.value.axis] = 0, document.removeEventListener("mousemove", m), document.removeEventListener("mouseup", y), w(), u && (a.value = !1);
    }, b = () => {
      u = !1, a.value = !!e.size;
    }, O = () => {
      u = !0, a.value = l;
    };
    hi(() => {
      w(), document.removeEventListener("mouseup", y);
    });
    const w = () => {
      document.onselectstart !== c && (document.onselectstart = c);
    };
    return co(hs(t, "scrollbarElement"), "mousemove", b), co(hs(t, "scrollbarElement"), "mouseleave", O), (x, S) => (z(), ye(ml, {
      name: P(r).b("fade"),
      persisted: ""
    }, {
      default: me(() => [
        zt(J("div", {
          ref_key: "instance",
          ref: i,
          class: Z([P(r).e("bar"), P(r).is(P(h).key)]),
          onMousedown: g
        }, [
          J("div", {
            ref_key: "thumb",
            ref: o,
            class: Z(P(r).e("thumb")),
            style: pt(P(f)),
            onMousedown: p
          }, null, 38)
        ], 34), [
          [rr, x.always || a.value]
        ])
      ]),
      _: 1
    }, 8, ["name"]));
  }
});
var h3 = /* @__PURE__ */ Ze(bme, [["__file", "thumb.vue"]]);
const Ome = qe({
  always: {
    type: Boolean,
    default: !0
  },
  minSize: {
    type: Number,
    required: !0
  }
}), wme = /* @__PURE__ */ U({
  __name: "bar",
  props: Ome,
  setup(n, { expose: e }) {
    const t = n, r = $e(qD), i = F(0), o = F(0), s = F(""), a = F(""), l = F(1), u = F(1);
    return e({
      handleScroll: (f) => {
        if (f) {
          const d = f.offsetHeight - kd, p = f.offsetWidth - kd;
          o.value = f.scrollTop * 100 / d * l.value, i.value = f.scrollLeft * 100 / p * u.value;
        }
      },
      update: () => {
        const f = r == null ? void 0 : r.wrapElement;
        if (!f)
          return;
        const d = f.offsetHeight - kd, p = f.offsetWidth - kd, g = d ** 2 / f.scrollHeight, v = p ** 2 / f.scrollWidth, m = Math.max(g, t.minSize), y = Math.max(v, t.minSize);
        l.value = g / (d - g) / (m / (d - m)), u.value = v / (p - v) / (y / (p - y)), a.value = m + kd < d ? `${m}px` : "", s.value = y + kd < p ? `${y}px` : "";
      }
    }), (f, d) => (z(), X(pr, null, [
      pe(h3, {
        move: i.value,
        ratio: u.value,
        size: s.value,
        always: f.always
      }, null, 8, ["move", "ratio", "size", "always"]),
      pe(h3, {
        move: o.value,
        ratio: l.value,
        size: a.value,
        vertical: "",
        always: f.always
      }, null, 8, ["move", "ratio", "size", "always"])
    ], 64));
  }
});
var xme = /* @__PURE__ */ Ze(wme, [["__file", "bar.vue"]]);
const Sme = qe({
  height: {
    type: [String, Number],
    default: ""
  },
  maxHeight: {
    type: [String, Number],
    default: ""
  },
  native: {
    type: Boolean,
    default: !1
  },
  wrapStyle: {
    type: ke([String, Object, Array]),
    default: ""
  },
  wrapClass: {
    type: [String, Array],
    default: ""
  },
  viewClass: {
    type: [String, Array],
    default: ""
  },
  viewStyle: {
    type: [String, Array, Object],
    default: ""
  },
  noresize: Boolean,
  tag: {
    type: String,
    default: "div"
  },
  always: Boolean,
  minSize: {
    type: Number,
    default: 20
  },
  id: String,
  role: String,
  ariaLabel: String,
  ariaOrientation: {
    type: String,
    values: ["horizontal", "vertical"]
  }
}), _me = {
  scroll: ({
    scrollTop: n,
    scrollLeft: e
  }) => [n, e].every(mt)
}, BP = "ElScrollbar", Cme = U({
  name: BP
}), Ame = /* @__PURE__ */ U({
  ...Cme,
  props: Sme,
  emits: _me,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = Ie("scrollbar");
    let o, s;
    const a = F(), l = F(), u = F(), c = F(), h = B(() => {
      const b = {};
      return r.height && (b.height = Fo(r.height)), r.maxHeight && (b.maxHeight = Fo(r.maxHeight)), [r.wrapStyle, b];
    }), f = B(() => [
      r.wrapClass,
      i.e("wrap"),
      { [i.em("wrap", "hidden-default")]: !r.native }
    ]), d = B(() => [i.e("view"), r.viewClass]), p = () => {
      var b;
      l.value && ((b = c.value) == null || b.handleScroll(l.value), t("scroll", {
        scrollTop: l.value.scrollTop,
        scrollLeft: l.value.scrollLeft
      }));
    };
    function g(b, O) {
      ti(b) ? l.value.scrollTo(b) : mt(b) && mt(O) && l.value.scrollTo(b, O);
    }
    const v = (b) => {
      if (!mt(b)) {
        jt(BP, "value must be a number");
        return;
      }
      l.value.scrollTop = b;
    }, m = (b) => {
      if (!mt(b)) {
        jt(BP, "value must be a number");
        return;
      }
      l.value.scrollLeft = b;
    }, y = () => {
      var b;
      (b = c.value) == null || b.update();
    };
    return de(() => r.noresize, (b) => {
      b ? (o == null || o(), s == null || s()) : ({ stop: o } = Ri(u, y), s = co("resize", y));
    }, { immediate: !0 }), de(() => [r.maxHeight, r.height], () => {
      r.native || ut(() => {
        var b;
        y(), l.value && ((b = c.value) == null || b.handleScroll(l.value));
      });
    }), Jt(qD, Si({
      scrollbarElement: a,
      wrapElement: l
    })), dt(() => {
      r.native || ut(() => {
        y();
      });
    }), H0(() => y()), e({
      wrapRef: l,
      update: y,
      scrollTo: g,
      setScrollTop: v,
      setScrollLeft: m,
      handleScroll: p
    }), (b, O) => (z(), X("div", {
      ref_key: "scrollbarRef",
      ref: a,
      class: Z(P(i).b())
    }, [
      J("div", {
        ref_key: "wrapRef",
        ref: l,
        class: Z(P(f)),
        style: pt(P(h)),
        onScroll: p
      }, [
        (z(), ye(cn(b.tag), {
          id: b.id,
          ref_key: "resizeRef",
          ref: u,
          class: Z(P(d)),
          style: pt(b.viewStyle),
          role: b.role,
          "aria-label": b.ariaLabel,
          "aria-orientation": b.ariaOrientation
        }, {
          default: me(() => [
            Ce(b.$slots, "default")
          ]),
          _: 3
        }, 8, ["id", "class", "style", "role", "aria-label", "aria-orientation"]))
      ], 38),
      b.native ? he("v-if", !0) : (z(), ye(xme, {
        key: 0,
        ref_key: "barRef",
        ref: c,
        always: b.always,
        "min-size": b.minSize
      }, null, 8, ["always", "min-size"]))
    ], 2));
  }
});
var Tme = /* @__PURE__ */ Ze(Ame, [["__file", "scrollbar.vue"]]);
const YD = Bn(Tme), XD = Symbol("popper"), Vj = Symbol("popperContent"), Pme = [
  "dialog",
  "grid",
  "group",
  "listbox",
  "menu",
  "navigation",
  "tooltip",
  "tree"
], zj = qe({
  role: {
    type: String,
    values: Pme,
    default: "tooltip"
  }
}), Eme = U({
  name: "ElPopper",
  inheritAttrs: !1
}), kme = /* @__PURE__ */ U({
  ...Eme,
  props: zj,
  setup(n, { expose: e }) {
    const t = n, r = F(), i = F(), o = F(), s = F(), a = B(() => t.role), l = {
      triggerRef: r,
      popperInstanceRef: i,
      contentRef: o,
      referenceRef: s,
      role: a
    };
    return e(l), Jt(XD, l), (u, c) => Ce(u.$slots, "default");
  }
});
var Mme = /* @__PURE__ */ Ze(kme, [["__file", "popper.vue"]]);
const Fj = qe({
  arrowOffset: {
    type: Number,
    default: 5
  }
}), Dme = U({
  name: "ElPopperArrow",
  inheritAttrs: !1
}), Lme = /* @__PURE__ */ U({
  ...Dme,
  props: Fj,
  setup(n, { expose: e }) {
    const t = n, r = Ie("popper"), { arrowOffset: i, arrowRef: o, arrowStyle: s } = $e(Vj, void 0);
    return de(() => t.arrowOffset, (a) => {
      i.value = a;
    }), hi(() => {
      o.value = void 0;
    }), e({
      arrowRef: o
    }), (a, l) => (z(), X("span", {
      ref_key: "arrowRef",
      ref: o,
      class: Z(P(r).e("arrow")),
      style: pt(P(s)),
      "data-popper-arrow": ""
    }, null, 6));
  }
});
var Ime = /* @__PURE__ */ Ze(Lme, [["__file", "arrow.vue"]]);
const FC = "ElOnlyChild", Rme = U({
  name: FC,
  setup(n, {
    slots: e,
    attrs: t
  }) {
    var r;
    const i = $e(Dj), o = Lve((r = i == null ? void 0 : i.setForwardRef) != null ? r : Ql);
    return () => {
      var s;
      const a = (s = e.default) == null ? void 0 : s.call(e, t);
      if (!a)
        return null;
      if (a.length > 1)
        return jt(FC, "requires exact only one valid child."), null;
      const l = Qj(a);
      return l ? zt(Zie(l, t), [[o]]) : (jt(FC, "no valid child node found"), null);
    };
  }
});
function Qj(n) {
  if (!n)
    return null;
  const e = n;
  for (const t of e) {
    if (ti(t))
      switch (t.type) {
        case _W:
          continue;
        case SW:
        case "svg":
          return f3(t);
        case pr:
          return Qj(t.children);
        default:
          return t;
      }
    return f3(t);
  }
  return null;
}
function f3(n) {
  const e = Ie("only-child");
  return pe("span", {
    class: e.e("content")
  }, [n]);
}
const Zj = qe({
  virtualRef: {
    type: ke(Object)
  },
  virtualTriggering: Boolean,
  onMouseenter: {
    type: ke(Function)
  },
  onMouseleave: {
    type: ke(Function)
  },
  onClick: {
    type: ke(Function)
  },
  onKeydown: {
    type: ke(Function)
  },
  onFocus: {
    type: ke(Function)
  },
  onBlur: {
    type: ke(Function)
  },
  onContextmenu: {
    type: ke(Function)
  },
  id: String,
  open: Boolean
}), $me = U({
  name: "ElPopperTrigger",
  inheritAttrs: !1
}), Nme = /* @__PURE__ */ U({
  ...$me,
  props: Zj,
  setup(n, { expose: e }) {
    const t = n, { role: r, triggerRef: i } = $e(XD, void 0);
    Dve(i);
    const o = B(() => a.value ? t.id : void 0), s = B(() => {
      if (r && r.value === "tooltip")
        return t.open && t.id ? t.id : void 0;
    }), a = B(() => {
      if (r && r.value !== "tooltip")
        return r.value;
    }), l = B(() => a.value ? `${t.open}` : void 0);
    let u;
    return dt(() => {
      de(() => t.virtualRef, (c) => {
        c && (i.value = Bl(c));
      }, {
        immediate: !0
      }), de(i, (c, h) => {
        u == null || u(), u = void 0, ra(c) && ([
          "onMouseenter",
          "onMouseleave",
          "onClick",
          "onKeydown",
          "onFocus",
          "onBlur",
          "onContextmenu"
        ].forEach((f) => {
          var d;
          const p = t[f];
          p && (c.addEventListener(f.slice(2).toLowerCase(), p), (d = h == null ? void 0 : h.removeEventListener) == null || d.call(h, f.slice(2).toLowerCase(), p));
        }), u = de([o, s, a, l], (f) => {
          [
            "aria-controls",
            "aria-describedby",
            "aria-haspopup",
            "aria-expanded"
          ].forEach((d, p) => {
            No(f[p]) ? c.removeAttribute(d) : c.setAttribute(d, f[p]);
          });
        }, { immediate: !0 })), ra(h) && [
          "aria-controls",
          "aria-describedby",
          "aria-haspopup",
          "aria-expanded"
        ].forEach((f) => h.removeAttribute(f));
      }, {
        immediate: !0
      });
    }), hi(() => {
      u == null || u(), u = void 0;
    }), e({
      triggerRef: i
    }), (c, h) => c.virtualTriggering ? he("v-if", !0) : (z(), ye(P(Rme), ps({ key: 0 }, c.$attrs, {
      "aria-controls": P(o),
      "aria-describedby": P(s),
      "aria-expanded": P(l),
      "aria-haspopup": P(a)
    }), {
      default: me(() => [
        Ce(c.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-controls", "aria-describedby", "aria-expanded", "aria-haspopup"]));
  }
});
var Bme = /* @__PURE__ */ Ze(Nme, [["__file", "trigger.vue"]]);
const QC = "focus-trap.focus-after-trapped", ZC = "focus-trap.focus-after-released", Vme = "focus-trap.focusout-prevented", d3 = {
  cancelable: !0,
  bubbles: !1
}, zme = {
  cancelable: !0,
  bubbles: !1
}, p3 = "focusAfterTrapped", g3 = "focusAfterReleased", Wj = Symbol("elFocusTrap"), UD = F(), t_ = F(0), KD = F(0);
let qb = 0;
const Gj = (n) => {
  const e = [], t = document.createTreeWalker(n, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (r) => {
      const i = r.tagName === "INPUT" && r.type === "hidden";
      return r.disabled || r.hidden || i ? NodeFilter.FILTER_SKIP : r.tabIndex >= 0 || r === document.activeElement ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; t.nextNode(); )
    e.push(t.currentNode);
  return e;
}, v3 = (n, e) => {
  for (const t of n)
    if (!Fme(t, e))
      return t;
}, Fme = (n, e) => {
  if (process.env.NODE_ENV === "test")
    return !1;
  if (getComputedStyle(n).visibility === "hidden")
    return !0;
  for (; n; ) {
    if (e && n === e)
      return !1;
    if (getComputedStyle(n).display === "none")
      return !0;
    n = n.parentElement;
  }
  return !1;
}, Qme = (n) => {
  const e = Gj(n), t = v3(e, n), r = v3(e.reverse(), n);
  return [t, r];
}, Zme = (n) => n instanceof HTMLInputElement && "select" in n, Du = (n, e) => {
  if (n && n.focus) {
    const t = document.activeElement;
    n.focus({ preventScroll: !0 }), KD.value = window.performance.now(), n !== t && Zme(n) && e && n.select();
  }
};
function m3(n, e) {
  const t = [...n], r = n.indexOf(e);
  return r !== -1 && t.splice(r, 1), t;
}
const Wme = () => {
  let n = [];
  return {
    push: (r) => {
      const i = n[0];
      i && r !== i && i.pause(), n = m3(n, r), n.unshift(r);
    },
    remove: (r) => {
      var i, o;
      n = m3(n, r), (o = (i = n[0]) == null ? void 0 : i.resume) == null || o.call(i);
    }
  };
}, Gme = (n, e = !1) => {
  const t = document.activeElement;
  for (const r of n)
    if (Du(r, e), document.activeElement !== t)
      return;
}, y3 = Wme(), jme = () => t_.value > KD.value, Yb = () => {
  UD.value = "pointer", t_.value = window.performance.now();
}, b3 = () => {
  UD.value = "keyboard", t_.value = window.performance.now();
}, Hme = () => (dt(() => {
  qb === 0 && (document.addEventListener("mousedown", Yb), document.addEventListener("touchstart", Yb), document.addEventListener("keydown", b3)), qb++;
}), hi(() => {
  qb--, qb <= 0 && (document.removeEventListener("mousedown", Yb), document.removeEventListener("touchstart", Yb), document.removeEventListener("keydown", b3));
}), {
  focusReason: UD,
  lastUserFocusTimestamp: t_,
  lastAutomatedFocusTimestamp: KD
}), Xb = (n) => new CustomEvent(Vme, {
  ...zme,
  detail: n
}), qme = U({
  name: "ElFocusTrap",
  inheritAttrs: !1,
  props: {
    loop: Boolean,
    trapped: Boolean,
    focusTrapEl: Object,
    focusStartEl: {
      type: [Object, String],
      default: "first"
    }
  },
  emits: [
    p3,
    g3,
    "focusin",
    "focusout",
    "focusout-prevented",
    "release-requested"
  ],
  setup(n, { emit: e }) {
    const t = F();
    let r, i;
    const { focusReason: o } = Hme();
    Tve((p) => {
      n.trapped && !s.paused && e("release-requested", p);
    });
    const s = {
      paused: !1,
      pause() {
        this.paused = !0;
      },
      resume() {
        this.paused = !1;
      }
    }, a = (p) => {
      if (!n.loop && !n.trapped || s.paused)
        return;
      const { key: g, altKey: v, ctrlKey: m, metaKey: y, currentTarget: b, shiftKey: O } = p, { loop: w } = n, x = g === ii.tab && !v && !m && !y, S = document.activeElement;
      if (x && S) {
        const _ = b, [C, A] = Qme(_);
        if (C && A) {
          if (!O && S === A) {
            const k = Xb({
              focusReason: o.value
            });
            e("focusout-prevented", k), k.defaultPrevented || (p.preventDefault(), w && Du(C, !0));
          } else if (O && [C, _].includes(S)) {
            const k = Xb({
              focusReason: o.value
            });
            e("focusout-prevented", k), k.defaultPrevented || (p.preventDefault(), w && Du(A, !0));
          }
        } else if (S === _) {
          const k = Xb({
            focusReason: o.value
          });
          e("focusout-prevented", k), k.defaultPrevented || p.preventDefault();
        }
      }
    };
    Jt(Wj, {
      focusTrapRef: t,
      onKeydown: a
    }), de(() => n.focusTrapEl, (p) => {
      p && (t.value = p);
    }, { immediate: !0 }), de([t], ([p], [g]) => {
      p && (p.addEventListener("keydown", a), p.addEventListener("focusin", c), p.addEventListener("focusout", h)), g && (g.removeEventListener("keydown", a), g.removeEventListener("focusin", c), g.removeEventListener("focusout", h));
    });
    const l = (p) => {
      e(p3, p);
    }, u = (p) => e(g3, p), c = (p) => {
      const g = P(t);
      if (!g)
        return;
      const v = p.target, m = p.relatedTarget, y = v && g.contains(v);
      n.trapped || m && g.contains(m) || (r = m), y && e("focusin", p), !s.paused && n.trapped && (y ? i = v : Du(i, !0));
    }, h = (p) => {
      const g = P(t);
      if (!(s.paused || !g))
        if (n.trapped) {
          const v = p.relatedTarget;
          !No(v) && !g.contains(v) && setTimeout(() => {
            if (!s.paused && n.trapped) {
              const m = Xb({
                focusReason: o.value
              });
              e("focusout-prevented", m), m.defaultPrevented || Du(i, !0);
            }
          }, 0);
        } else {
          const v = p.target;
          v && g.contains(v) || e("focusout", p);
        }
    };
    async function f() {
      await ut();
      const p = P(t);
      if (p) {
        y3.push(s);
        const g = p.contains(document.activeElement) ? r : document.activeElement;
        if (r = g, !p.contains(g)) {
          const m = new Event(QC, d3);
          p.addEventListener(QC, l), p.dispatchEvent(m), m.defaultPrevented || ut(() => {
            let y = n.focusStartEl;
            qt(y) || (Du(y), document.activeElement !== y && (y = "first")), y === "first" && Gme(Gj(p), !0), (document.activeElement === g || y === "container") && Du(p);
          });
        }
      }
    }
    function d() {
      const p = P(t);
      if (p) {
        p.removeEventListener(QC, l);
        const g = new CustomEvent(ZC, {
          ...d3,
          detail: {
            focusReason: o.value
          }
        });
        p.addEventListener(ZC, u), p.dispatchEvent(g), !g.defaultPrevented && (o.value == "keyboard" || !jme() || p.contains(document.activeElement)) && Du(r ?? document.body), p.removeEventListener(ZC, u), y3.remove(s);
      }
    }
    return dt(() => {
      n.trapped && f(), de(() => n.trapped, (p) => {
        p ? f() : d();
      });
    }), hi(() => {
      n.trapped && d();
    }), {
      onKeydown: a
    };
  }
});
function Yme(n, e, t, r, i, o) {
  return Ce(n.$slots, "default", { handleKeydown: n.onKeydown });
}
var n_ = /* @__PURE__ */ Ze(qme, [["render", Yme], ["__file", "focus-trap.vue"]]);
const Xme = ["fixed", "absolute"], Ume = qe({
  boundariesPadding: {
    type: Number,
    default: 0
  },
  fallbackPlacements: {
    type: ke(Array),
    default: void 0
  },
  gpuAcceleration: {
    type: Boolean,
    default: !0
  },
  offset: {
    type: Number,
    default: 12
  },
  placement: {
    type: String,
    values: KS,
    default: "bottom"
  },
  popperOptions: {
    type: ke(Object),
    default: () => ({})
  },
  strategy: {
    type: String,
    values: Xme,
    default: "absolute"
  }
}), jj = qe({
  ...Ume,
  id: String,
  style: {
    type: ke([String, Array, Object])
  },
  className: {
    type: ke([String, Array, Object])
  },
  effect: {
    type: String,
    default: "dark"
  },
  visible: Boolean,
  enterable: {
    type: Boolean,
    default: !0
  },
  pure: Boolean,
  focusOnShow: {
    type: Boolean,
    default: !1
  },
  trapping: {
    type: Boolean,
    default: !1
  },
  popperClass: {
    type: ke([String, Array, Object])
  },
  popperStyle: {
    type: ke([String, Array, Object])
  },
  referenceEl: {
    type: ke(Object)
  },
  triggerTargetEl: {
    type: ke(Object)
  },
  stopPopperMouseEvent: {
    type: Boolean,
    default: !0
  },
  ariaLabel: {
    type: String,
    default: void 0
  },
  virtualTriggering: Boolean,
  zIndex: Number
}), Kme = {
  mouseenter: (n) => n instanceof MouseEvent,
  mouseleave: (n) => n instanceof MouseEvent,
  focus: () => !0,
  blur: () => !0,
  close: () => !0
}, Jme = (n, e = []) => {
  const { placement: t, strategy: r, popperOptions: i } = n, o = {
    placement: t,
    strategy: r,
    ...i,
    modifiers: [...tye(n), ...e]
  };
  return nye(o, i == null ? void 0 : i.modifiers), o;
}, eye = (n) => {
  if (Ht)
    return Bl(n);
};
function tye(n) {
  const { offset: e, gpuAcceleration: t, fallbackPlacements: r } = n;
  return [
    {
      name: "offset",
      options: {
        offset: [0, e ?? 12]
      }
    },
    {
      name: "preventOverflow",
      options: {
        padding: {
          top: 2,
          bottom: 2,
          left: 5,
          right: 5
        }
      }
    },
    {
      name: "flip",
      options: {
        padding: 5,
        fallbackPlacements: r
      }
    },
    {
      name: "computeStyles",
      options: {
        gpuAcceleration: t
      }
    }
  ];
}
function nye(n, e) {
  e && (n.modifiers = [...n.modifiers, ...e ?? []]);
}
const rye = 0, iye = (n) => {
  const { popperInstanceRef: e, contentRef: t, triggerRef: r, role: i } = $e(XD, void 0), o = F(), s = F(), a = B(() => ({
    name: "eventListeners",
    enabled: !!n.visible
  })), l = B(() => {
    var m;
    const y = P(o), b = (m = P(s)) != null ? m : rye;
    return {
      name: "arrow",
      enabled: !RG(y),
      options: {
        element: y,
        padding: b
      }
    };
  }), u = B(() => ({
    onFirstUpdate: () => {
      p();
    },
    ...Jme(n, [
      P(l),
      P(a)
    ])
  })), c = B(() => eye(n.referenceEl) || P(r)), { attributes: h, state: f, styles: d, update: p, forceUpdate: g, instanceRef: v } = _ve(c, t, u);
  return de(v, (m) => e.value = m), dt(() => {
    de(() => {
      var m;
      return (m = P(c)) == null ? void 0 : m.getBoundingClientRect();
    }, () => {
      p();
    });
  }), {
    attributes: h,
    arrowRef: o,
    contentRef: t,
    instanceRef: v,
    state: f,
    styles: d,
    role: i,
    forceUpdate: g,
    update: p
  };
}, oye = (n, {
  attributes: e,
  styles: t,
  role: r
}) => {
  const { nextZIndex: i } = GD(), o = Ie("popper"), s = B(() => P(e).popper), a = F(mt(n.zIndex) ? n.zIndex : i()), l = B(() => [
    o.b(),
    o.is("pure", n.pure),
    o.is(n.effect),
    n.popperClass
  ]), u = B(() => [
    { zIndex: P(a) },
    P(t).popper,
    n.popperStyle || {}
  ]), c = B(() => r.value === "dialog" ? "false" : void 0), h = B(() => P(t).arrow || {});
  return {
    ariaModal: c,
    arrowStyle: h,
    contentAttrs: s,
    contentClass: l,
    contentStyle: u,
    contentZIndex: a,
    updateZIndex: () => {
      a.value = mt(n.zIndex) ? n.zIndex : i();
    }
  };
}, sye = (n, e) => {
  const t = F(!1), r = F();
  return {
    focusStartRef: r,
    trapped: t,
    onFocusAfterReleased: (u) => {
      var c;
      ((c = u.detail) == null ? void 0 : c.focusReason) !== "pointer" && (r.value = "first", e("blur"));
    },
    onFocusAfterTrapped: () => {
      e("focus");
    },
    onFocusInTrap: (u) => {
      n.visible && !t.value && (u.target && (r.value = u.target), t.value = !0);
    },
    onFocusoutPrevented: (u) => {
      n.trapping || (u.detail.focusReason === "pointer" && u.preventDefault(), t.value = !1);
    },
    onReleaseRequested: () => {
      t.value = !1, e("close");
    }
  };
}, aye = U({
  name: "ElPopperContent"
}), lye = /* @__PURE__ */ U({
  ...aye,
  props: jj,
  emits: Kme,
  setup(n, { expose: e, emit: t }) {
    const r = n, {
      focusStartRef: i,
      trapped: o,
      onFocusAfterReleased: s,
      onFocusAfterTrapped: a,
      onFocusInTrap: l,
      onFocusoutPrevented: u,
      onReleaseRequested: c
    } = sye(r, t), { attributes: h, arrowRef: f, contentRef: d, styles: p, instanceRef: g, role: v, update: m } = iye(r), {
      ariaModal: y,
      arrowStyle: b,
      contentAttrs: O,
      contentClass: w,
      contentStyle: x,
      updateZIndex: S
    } = oye(r, {
      styles: p,
      attributes: h,
      role: v
    }), _ = $e(Ff, void 0), C = F();
    Jt(Vj, {
      arrowStyle: b,
      arrowRef: f,
      arrowOffset: C
    }), _ && (_.addInputId || _.removeInputId) && Jt(Ff, {
      ..._,
      addInputId: Ql,
      removeInputId: Ql
    });
    let A;
    const T = (L = !0) => {
      m(), L && S();
    }, k = () => {
      T(!1), r.visible && r.focusOnShow ? o.value = !0 : r.visible === !1 && (o.value = !1);
    };
    return dt(() => {
      de(() => r.triggerTargetEl, (L, D) => {
        A == null || A(), A = void 0;
        const E = P(L || d.value), M = P(D || d.value);
        ra(E) && (A = de([v, () => r.ariaLabel, y, () => r.id], (R) => {
          ["role", "aria-label", "aria-modal", "id"].forEach((N, $) => {
            No(R[$]) ? E.removeAttribute(N) : E.setAttribute(N, R[$]);
          });
        }, { immediate: !0 })), M !== E && ra(M) && ["role", "aria-label", "aria-modal", "id"].forEach((R) => {
          M.removeAttribute(R);
        });
      }, { immediate: !0 }), de(() => r.visible, k, { immediate: !0 });
    }), hi(() => {
      A == null || A(), A = void 0;
    }), e({
      popperContentRef: d,
      popperInstanceRef: g,
      updatePopper: T,
      contentStyle: x
    }), (L, D) => (z(), X("div", ps({
      ref_key: "contentRef",
      ref: d
    }, P(O), {
      style: P(x),
      class: P(w),
      tabindex: "-1",
      onMouseenter: D[0] || (D[0] = (E) => L.$emit("mouseenter", E)),
      onMouseleave: D[1] || (D[1] = (E) => L.$emit("mouseleave", E))
    }), [
      pe(P(n_), {
        trapped: P(o),
        "trap-on-focus-in": !0,
        "focus-trap-el": P(d),
        "focus-start-el": P(i),
        onFocusAfterTrapped: P(a),
        onFocusAfterReleased: P(s),
        onFocusin: P(l),
        onFocusoutPrevented: P(u),
        onReleaseRequested: P(c)
      }, {
        default: me(() => [
          Ce(L.$slots, "default")
        ]),
        _: 3
      }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusin", "onFocusoutPrevented", "onReleaseRequested"])
    ], 16));
  }
});
var uye = /* @__PURE__ */ Ze(lye, [["__file", "content.vue"]]);
const cye = Bn(Mme), JD = Symbol("elTooltip"), To = qe({
  ...kve,
  ...jj,
  appendTo: {
    type: ke([String, Object])
  },
  content: {
    type: String,
    default: ""
  },
  rawContent: {
    type: Boolean,
    default: !1
  },
  persistent: Boolean,
  ariaLabel: String,
  visible: {
    type: ke(Boolean),
    default: null
  },
  transition: String,
  teleported: {
    type: Boolean,
    default: !0
  },
  disabled: Boolean
}), Ny = qe({
  ...Zj,
  disabled: Boolean,
  trigger: {
    type: ke([String, Array]),
    default: "hover"
  },
  triggerKeys: {
    type: ke(Array),
    default: () => [ii.enter, ii.space]
  }
}), {
  useModelToggleProps: hye,
  useModelToggleEmits: fye,
  useModelToggle: dye
} = yj("visible"), pye = qe({
  ...zj,
  ...hye,
  ...To,
  ...Ny,
  ...Fj,
  showArrow: {
    type: Boolean,
    default: !0
  }
}), gye = [
  ...fye,
  "before-show",
  "before-hide",
  "show",
  "hide",
  "open",
  "close"
], vye = (n, e) => Gn(n) ? n.includes(e) : n === e, Md = (n, e, t) => (r) => {
  vye(P(n), e) && t(r);
}, mye = U({
  name: "ElTooltipTrigger"
}), yye = /* @__PURE__ */ U({
  ...mye,
  props: Ny,
  setup(n, { expose: e }) {
    const t = n, r = Ie("tooltip"), { controlled: i, id: o, open: s, onOpen: a, onClose: l, onToggle: u } = $e(JD, void 0), c = F(null), h = () => {
      if (P(i) || t.disabled)
        return !0;
    }, f = hs(t, "trigger"), d = kl(h, Md(f, "hover", a)), p = kl(h, Md(f, "hover", l)), g = kl(h, Md(f, "click", (O) => {
      O.button === 0 && u(O);
    })), v = kl(h, Md(f, "focus", a)), m = kl(h, Md(f, "focus", l)), y = kl(h, Md(f, "contextmenu", (O) => {
      O.preventDefault(), u(O);
    })), b = kl(h, (O) => {
      const { code: w } = O;
      t.triggerKeys.includes(w) && (O.preventDefault(), u(O));
    });
    return e({
      triggerRef: c
    }), (O, w) => (z(), ye(P(Bme), {
      id: P(o),
      "virtual-ref": O.virtualRef,
      open: P(s),
      "virtual-triggering": O.virtualTriggering,
      class: Z(P(r).e("trigger")),
      onBlur: P(m),
      onClick: P(g),
      onContextmenu: P(y),
      onFocus: P(v),
      onMouseenter: P(d),
      onMouseleave: P(p),
      onKeydown: P(b)
    }, {
      default: me(() => [
        Ce(O.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "virtual-ref", "open", "virtual-triggering", "class", "onBlur", "onClick", "onContextmenu", "onFocus", "onMouseenter", "onMouseleave", "onKeydown"]));
  }
});
var bye = /* @__PURE__ */ Ze(yye, [["__file", "trigger.vue"]]);
const Oye = U({
  name: "ElTooltipContent",
  inheritAttrs: !1
}), wye = /* @__PURE__ */ U({
  ...Oye,
  props: To,
  setup(n, { expose: e }) {
    const t = n, { selector: r } = Mj(), i = Ie("tooltip"), o = F(null), s = F(!1), {
      controlled: a,
      id: l,
      open: u,
      trigger: c,
      onClose: h,
      onOpen: f,
      onShow: d,
      onHide: p,
      onBeforeShow: g,
      onBeforeHide: v
    } = $e(JD, void 0), m = B(() => t.transition || `${i.namespace.value}-fade-in-linear`), y = B(() => process.env.NODE_ENV === "test" ? !0 : t.persistent);
    hi(() => {
      s.value = !0;
    });
    const b = B(() => P(y) ? !0 : P(u)), O = B(() => t.disabled ? !1 : P(u)), w = B(() => t.appendTo || r.value), x = B(() => {
      var R;
      return (R = t.style) != null ? R : {};
    }), S = B(() => !P(u)), _ = () => {
      p();
    }, C = () => {
      if (P(a))
        return !0;
    }, A = kl(C, () => {
      t.enterable && P(c) === "hover" && f();
    }), T = kl(C, () => {
      P(c) === "hover" && h();
    }), k = () => {
      var R, N;
      (N = (R = o.value) == null ? void 0 : R.updatePopper) == null || N.call(R), g == null || g();
    }, L = () => {
      v == null || v();
    }, D = () => {
      d(), M = ype(B(() => {
        var R;
        return (R = o.value) == null ? void 0 : R.popperContentRef;
      }), () => {
        if (P(a))
          return;
        P(c) !== "hover" && h();
      });
    }, E = () => {
      t.virtualTriggering || h();
    };
    let M;
    return de(() => P(u), (R) => {
      R || M == null || M();
    }, {
      flush: "post"
    }), de(() => t.content, () => {
      var R, N;
      (N = (R = o.value) == null ? void 0 : R.updatePopper) == null || N.call(R);
    }), e({
      contentRef: o
    }), (R, N) => (z(), ye(NS, {
      disabled: !R.teleported,
      to: P(w)
    }, [
      pe(ml, {
        name: P(m),
        onAfterLeave: _,
        onBeforeEnter: k,
        onAfterEnter: D,
        onBeforeLeave: L
      }, {
        default: me(() => [
          P(b) ? zt((z(), ye(P(uye), ps({
            key: 0,
            id: P(l),
            ref_key: "contentRef",
            ref: o
          }, R.$attrs, {
            "aria-label": R.ariaLabel,
            "aria-hidden": P(S),
            "boundaries-padding": R.boundariesPadding,
            "fallback-placements": R.fallbackPlacements,
            "gpu-acceleration": R.gpuAcceleration,
            offset: R.offset,
            placement: R.placement,
            "popper-options": R.popperOptions,
            strategy: R.strategy,
            effect: R.effect,
            enterable: R.enterable,
            pure: R.pure,
            "popper-class": R.popperClass,
            "popper-style": [R.popperStyle, P(x)],
            "reference-el": R.referenceEl,
            "trigger-target-el": R.triggerTargetEl,
            visible: P(O),
            "z-index": R.zIndex,
            onMouseenter: P(A),
            onMouseleave: P(T),
            onBlur: E,
            onClose: P(h)
          }), {
            default: me(() => [
              s.value ? he("v-if", !0) : Ce(R.$slots, "default", { key: 0 })
            ]),
            _: 3
          }, 16, ["id", "aria-label", "aria-hidden", "boundaries-padding", "fallback-placements", "gpu-acceleration", "offset", "placement", "popper-options", "strategy", "effect", "enterable", "pure", "popper-class", "popper-style", "reference-el", "trigger-target-el", "visible", "z-index", "onMouseenter", "onMouseleave", "onClose"])), [
            [rr, P(O)]
          ]) : he("v-if", !0)
        ]),
        _: 3
      }, 8, ["name"])
    ], 8, ["disabled", "to"]));
  }
});
var xye = /* @__PURE__ */ Ze(wye, [["__file", "content.vue"]]);
const Sye = ["innerHTML"], _ye = { key: 1 }, Cye = U({
  name: "ElTooltip"
}), Aye = /* @__PURE__ */ U({
  ...Cye,
  props: pye,
  emits: gye,
  setup(n, { expose: e, emit: t }) {
    const r = n;
    Eve();
    const i = ll(), o = F(), s = F(), a = () => {
      var m;
      const y = P(o);
      y && ((m = y.popperInstanceRef) == null || m.update());
    }, l = F(!1), u = F(), { show: c, hide: h, hasUpdateHandler: f } = dye({
      indicator: l,
      toggleReason: u
    }), { onOpen: d, onClose: p } = Mve({
      showAfter: hs(r, "showAfter"),
      hideAfter: hs(r, "hideAfter"),
      autoClose: hs(r, "autoClose"),
      open: c,
      close: h
    }), g = B(() => xi(r.visible) && !f.value);
    Jt(JD, {
      controlled: g,
      id: i,
      open: $S(l),
      trigger: hs(r, "trigger"),
      onOpen: (m) => {
        d(m);
      },
      onClose: (m) => {
        p(m);
      },
      onToggle: (m) => {
        P(l) ? p(m) : d(m);
      },
      onShow: () => {
        t("show", u.value);
      },
      onHide: () => {
        t("hide", u.value);
      },
      onBeforeShow: () => {
        t("before-show", u.value);
      },
      onBeforeHide: () => {
        t("before-hide", u.value);
      },
      updatePopper: a
    }), de(() => r.disabled, (m) => {
      m && l.value && (l.value = !1);
    });
    const v = (m) => {
      var y, b;
      const O = (b = (y = s.value) == null ? void 0 : y.contentRef) == null ? void 0 : b.popperContentRef, w = (m == null ? void 0 : m.relatedTarget) || document.activeElement;
      return O && O.contains(w);
    };
    return Wie(() => l.value && h()), e({
      popperRef: o,
      contentRef: s,
      isFocusInsideContent: v,
      updatePopper: a,
      onOpen: d,
      onClose: p,
      hide: h
    }), (m, y) => (z(), ye(P(cye), {
      ref_key: "popperRef",
      ref: o,
      role: m.role
    }, {
      default: me(() => [
        pe(bye, {
          disabled: m.disabled,
          trigger: m.trigger,
          "trigger-keys": m.triggerKeys,
          "virtual-ref": m.virtualRef,
          "virtual-triggering": m.virtualTriggering
        }, {
          default: me(() => [
            m.$slots.default ? Ce(m.$slots, "default", { key: 0 }) : he("v-if", !0)
          ]),
          _: 3
        }, 8, ["disabled", "trigger", "trigger-keys", "virtual-ref", "virtual-triggering"]),
        pe(xye, {
          ref_key: "contentRef",
          ref: s,
          "aria-label": m.ariaLabel,
          "boundaries-padding": m.boundariesPadding,
          content: m.content,
          disabled: m.disabled,
          effect: m.effect,
          enterable: m.enterable,
          "fallback-placements": m.fallbackPlacements,
          "hide-after": m.hideAfter,
          "gpu-acceleration": m.gpuAcceleration,
          offset: m.offset,
          persistent: m.persistent,
          "popper-class": m.popperClass,
          "popper-style": m.popperStyle,
          placement: m.placement,
          "popper-options": m.popperOptions,
          pure: m.pure,
          "raw-content": m.rawContent,
          "reference-el": m.referenceEl,
          "trigger-target-el": m.triggerTargetEl,
          "show-after": m.showAfter,
          strategy: m.strategy,
          teleported: m.teleported,
          transition: m.transition,
          "virtual-triggering": m.virtualTriggering,
          "z-index": m.zIndex,
          "append-to": m.appendTo
        }, {
          default: me(() => [
            Ce(m.$slots, "content", {}, () => [
              m.rawContent ? (z(), X("span", {
                key: 0,
                innerHTML: m.content
              }, null, 8, Sye)) : (z(), X("span", _ye, Ke(m.content), 1))
            ]),
            m.showArrow ? (z(), ye(P(Ime), {
              key: 0,
              "arrow-offset": m.arrowOffset
            }, null, 8, ["arrow-offset"])) : he("v-if", !0)
          ]),
          _: 3
        }, 8, ["aria-label", "boundaries-padding", "content", "disabled", "effect", "enterable", "fallback-placements", "hide-after", "gpu-acceleration", "offset", "persistent", "popper-class", "popper-style", "placement", "popper-options", "pure", "raw-content", "reference-el", "trigger-target-el", "show-after", "strategy", "teleported", "transition", "virtual-triggering", "z-index", "append-to"])
      ]),
      _: 3
    }, 8, ["role"]));
  }
});
var Tye = /* @__PURE__ */ Ze(Aye, [["__file", "tooltip.vue"]]);
const sb = Bn(Tye), Pye = qe({
  value: {
    type: [String, Number],
    default: ""
  },
  max: {
    type: Number,
    default: 99
  },
  isDot: Boolean,
  hidden: Boolean,
  type: {
    type: String,
    values: ["primary", "success", "warning", "info", "danger"],
    default: "danger"
  }
}), Eye = ["textContent"], kye = U({
  name: "ElBadge"
}), Mye = /* @__PURE__ */ U({
  ...kye,
  props: Pye,
  setup(n, { expose: e }) {
    const t = n, r = Ie("badge"), i = B(() => t.isDot ? "" : mt(t.value) && mt(t.max) ? t.max < t.value ? `${t.max}+` : `${t.value}` : `${t.value}`);
    return e({
      content: i
    }), (o, s) => (z(), X("div", {
      class: Z(P(r).b())
    }, [
      Ce(o.$slots, "default"),
      pe(ml, {
        name: `${P(r).namespace.value}-zoom-in-center`,
        persisted: ""
      }, {
        default: me(() => [
          zt(J("sup", {
            class: Z([
              P(r).e("content"),
              P(r).em("content", o.type),
              P(r).is("fixed", !!o.$slots.default),
              P(r).is("dot", o.isDot)
            ]),
            textContent: Ke(P(i))
          }, null, 10, Eye), [
            [rr, !o.hidden && (P(i) || o.isDot)]
          ])
        ]),
        _: 1
      }, 8, ["name"])
    ], 2));
  }
});
var Dye = /* @__PURE__ */ Ze(Mye, [["__file", "badge.vue"]]);
const Lye = Bn(Dye), Hj = Symbol("buttonGroupContextKey"), Iye = (n, e) => {
  zf({
    from: "type.text",
    replacement: "link",
    version: "3.0.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/button.html#button-attributes"
  }, B(() => n.type === "text"));
  const t = $e(Hj, void 0), r = e_("button"), { form: i } = yl(), o = Qo(B(() => t == null ? void 0 : t.size)), s = Uc(), a = F(), l = Hc(), u = B(() => n.type || (t == null ? void 0 : t.type) || ""), c = B(() => {
    var p, g, v;
    return (v = (g = n.autoInsertSpace) != null ? g : (p = r.value) == null ? void 0 : p.autoInsertSpace) != null ? v : !1;
  }), h = B(() => n.tag === "button" ? {
    ariaDisabled: s.value || n.loading,
    disabled: s.value || n.loading,
    autofocus: n.autofocus,
    type: n.nativeType
  } : {}), f = B(() => {
    var p;
    const g = (p = l.default) == null ? void 0 : p.call(l);
    if (c.value && (g == null ? void 0 : g.length) === 1) {
      const v = g[0];
      if ((v == null ? void 0 : v.type) === SW) {
        const m = v.children;
        return new RegExp("^\\p{Unified_Ideograph}{2}$", "u").test(m.trim());
      }
    }
    return !1;
  });
  return {
    _disabled: s,
    _size: o,
    _type: u,
    _ref: a,
    _props: h,
    shouldAddSpace: f,
    handleClick: (p) => {
      n.nativeType === "reset" && (i == null || i.resetFields()), e("click", p);
    }
  };
}, Rye = [
  "default",
  "primary",
  "success",
  "warning",
  "info",
  "danger",
  "text",
  ""
], $ye = ["button", "submit", "reset"], VP = qe({
  size: pa,
  disabled: Boolean,
  type: {
    type: String,
    values: Rye,
    default: ""
  },
  icon: {
    type: Vr
  },
  nativeType: {
    type: String,
    values: $ye,
    default: "button"
  },
  loading: Boolean,
  loadingIcon: {
    type: Vr,
    default: () => YS
  },
  plain: Boolean,
  text: Boolean,
  link: Boolean,
  bg: Boolean,
  autofocus: Boolean,
  round: Boolean,
  circle: Boolean,
  color: String,
  dark: Boolean,
  autoInsertSpace: {
    type: Boolean,
    default: void 0
  },
  tag: {
    type: ke([String, Object]),
    default: "button"
  }
}), Nye = {
  click: (n) => n instanceof MouseEvent
};
function oi(n, e) {
  Bye(n) && (n = "100%");
  var t = Vye(n);
  return n = e === 360 ? n : Math.min(e, Math.max(0, parseFloat(n))), t && (n = parseInt(String(n * e), 10) / 100), Math.abs(n - e) < 1e-6 ? 1 : (e === 360 ? n = (n < 0 ? n % e + e : n % e) / parseFloat(String(e)) : n = n % e / parseFloat(String(e)), n);
}
function Ub(n) {
  return Math.min(1, Math.max(0, n));
}
function Bye(n) {
  return typeof n == "string" && n.indexOf(".") !== -1 && parseFloat(n) === 1;
}
function Vye(n) {
  return typeof n == "string" && n.indexOf("%") !== -1;
}
function qj(n) {
  return n = parseFloat(n), (isNaN(n) || n < 0 || n > 1) && (n = 1), n;
}
function Kb(n) {
  return n <= 1 ? "".concat(Number(n) * 100, "%") : n;
}
function ef(n) {
  return n.length === 1 ? "0" + n : String(n);
}
function zye(n, e, t) {
  return {
    r: oi(n, 255) * 255,
    g: oi(e, 255) * 255,
    b: oi(t, 255) * 255
  };
}
function O3(n, e, t) {
  n = oi(n, 255), e = oi(e, 255), t = oi(t, 255);
  var r = Math.max(n, e, t), i = Math.min(n, e, t), o = 0, s = 0, a = (r + i) / 2;
  if (r === i)
    s = 0, o = 0;
  else {
    var l = r - i;
    switch (s = a > 0.5 ? l / (2 - r - i) : l / (r + i), r) {
      case n:
        o = (e - t) / l + (e < t ? 6 : 0);
        break;
      case e:
        o = (t - n) / l + 2;
        break;
      case t:
        o = (n - e) / l + 4;
        break;
    }
    o /= 6;
  }
  return { h: o, s, l: a };
}
function WC(n, e, t) {
  return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? n + (e - n) * (6 * t) : t < 1 / 2 ? e : t < 2 / 3 ? n + (e - n) * (2 / 3 - t) * 6 : n;
}
function Fye(n, e, t) {
  var r, i, o;
  if (n = oi(n, 360), e = oi(e, 100), t = oi(t, 100), e === 0)
    i = t, o = t, r = t;
  else {
    var s = t < 0.5 ? t * (1 + e) : t + e - t * e, a = 2 * t - s;
    r = WC(a, s, n + 1 / 3), i = WC(a, s, n), o = WC(a, s, n - 1 / 3);
  }
  return { r: r * 255, g: i * 255, b: o * 255 };
}
function w3(n, e, t) {
  n = oi(n, 255), e = oi(e, 255), t = oi(t, 255);
  var r = Math.max(n, e, t), i = Math.min(n, e, t), o = 0, s = r, a = r - i, l = r === 0 ? 0 : a / r;
  if (r === i)
    o = 0;
  else {
    switch (r) {
      case n:
        o = (e - t) / a + (e < t ? 6 : 0);
        break;
      case e:
        o = (t - n) / a + 2;
        break;
      case t:
        o = (n - e) / a + 4;
        break;
    }
    o /= 6;
  }
  return { h: o, s: l, v: s };
}
function Qye(n, e, t) {
  n = oi(n, 360) * 6, e = oi(e, 100), t = oi(t, 100);
  var r = Math.floor(n), i = n - r, o = t * (1 - e), s = t * (1 - i * e), a = t * (1 - (1 - i) * e), l = r % 6, u = [t, s, o, o, a, t][l], c = [a, t, t, s, o, o][l], h = [o, o, a, t, t, s][l];
  return { r: u * 255, g: c * 255, b: h * 255 };
}
function x3(n, e, t, r) {
  var i = [
    ef(Math.round(n).toString(16)),
    ef(Math.round(e).toString(16)),
    ef(Math.round(t).toString(16))
  ];
  return r && i[0].startsWith(i[0].charAt(1)) && i[1].startsWith(i[1].charAt(1)) && i[2].startsWith(i[2].charAt(1)) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join("");
}
function Zye(n, e, t, r, i) {
  var o = [
    ef(Math.round(n).toString(16)),
    ef(Math.round(e).toString(16)),
    ef(Math.round(t).toString(16)),
    ef(Wye(r))
  ];
  return i && o[0].startsWith(o[0].charAt(1)) && o[1].startsWith(o[1].charAt(1)) && o[2].startsWith(o[2].charAt(1)) && o[3].startsWith(o[3].charAt(1)) ? o[0].charAt(0) + o[1].charAt(0) + o[2].charAt(0) + o[3].charAt(0) : o.join("");
}
function Wye(n) {
  return Math.round(parseFloat(n) * 255).toString(16);
}
function S3(n) {
  return wo(n) / 255;
}
function wo(n) {
  return parseInt(n, 16);
}
function Gye(n) {
  return {
    r: n >> 16,
    g: (n & 65280) >> 8,
    b: n & 255
  };
}
var zP = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function jye(n) {
  var e = { r: 0, g: 0, b: 0 }, t = 1, r = null, i = null, o = null, s = !1, a = !1;
  return typeof n == "string" && (n = Yye(n)), typeof n == "object" && (Al(n.r) && Al(n.g) && Al(n.b) ? (e = zye(n.r, n.g, n.b), s = !0, a = String(n.r).substr(-1) === "%" ? "prgb" : "rgb") : Al(n.h) && Al(n.s) && Al(n.v) ? (r = Kb(n.s), i = Kb(n.v), e = Qye(n.h, r, i), s = !0, a = "hsv") : Al(n.h) && Al(n.s) && Al(n.l) && (r = Kb(n.s), o = Kb(n.l), e = Fye(n.h, r, o), s = !0, a = "hsl"), Object.prototype.hasOwnProperty.call(n, "a") && (t = n.a)), t = qj(t), {
    ok: s,
    format: n.format || a,
    r: Math.min(255, Math.max(e.r, 0)),
    g: Math.min(255, Math.max(e.g, 0)),
    b: Math.min(255, Math.max(e.b, 0)),
    a: t
  };
}
var Hye = "[-\\+]?\\d+%?", qye = "[-\\+]?\\d*\\.\\d+%?", Uu = "(?:".concat(qye, ")|(?:").concat(Hye, ")"), GC = "[\\s|\\(]+(".concat(Uu, ")[,|\\s]+(").concat(Uu, ")[,|\\s]+(").concat(Uu, ")\\s*\\)?"), jC = "[\\s|\\(]+(".concat(Uu, ")[,|\\s]+(").concat(Uu, ")[,|\\s]+(").concat(Uu, ")[,|\\s]+(").concat(Uu, ")\\s*\\)?"), Rs = {
  CSS_UNIT: new RegExp(Uu),
  rgb: new RegExp("rgb" + GC),
  rgba: new RegExp("rgba" + jC),
  hsl: new RegExp("hsl" + GC),
  hsla: new RegExp("hsla" + jC),
  hsv: new RegExp("hsv" + GC),
  hsva: new RegExp("hsva" + jC),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function Yye(n) {
  if (n = n.trim().toLowerCase(), n.length === 0)
    return !1;
  var e = !1;
  if (zP[n])
    n = zP[n], e = !0;
  else if (n === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var t = Rs.rgb.exec(n);
  return t ? { r: t[1], g: t[2], b: t[3] } : (t = Rs.rgba.exec(n), t ? { r: t[1], g: t[2], b: t[3], a: t[4] } : (t = Rs.hsl.exec(n), t ? { h: t[1], s: t[2], l: t[3] } : (t = Rs.hsla.exec(n), t ? { h: t[1], s: t[2], l: t[3], a: t[4] } : (t = Rs.hsv.exec(n), t ? { h: t[1], s: t[2], v: t[3] } : (t = Rs.hsva.exec(n), t ? { h: t[1], s: t[2], v: t[3], a: t[4] } : (t = Rs.hex8.exec(n), t ? {
    r: wo(t[1]),
    g: wo(t[2]),
    b: wo(t[3]),
    a: S3(t[4]),
    format: e ? "name" : "hex8"
  } : (t = Rs.hex6.exec(n), t ? {
    r: wo(t[1]),
    g: wo(t[2]),
    b: wo(t[3]),
    format: e ? "name" : "hex"
  } : (t = Rs.hex4.exec(n), t ? {
    r: wo(t[1] + t[1]),
    g: wo(t[2] + t[2]),
    b: wo(t[3] + t[3]),
    a: S3(t[4] + t[4]),
    format: e ? "name" : "hex8"
  } : (t = Rs.hex3.exec(n), t ? {
    r: wo(t[1] + t[1]),
    g: wo(t[2] + t[2]),
    b: wo(t[3] + t[3]),
    format: e ? "name" : "hex"
  } : !1)))))))));
}
function Al(n) {
  return !!Rs.CSS_UNIT.exec(String(n));
}
var Xye = (
  /** @class */
  function() {
    function n(e, t) {
      e === void 0 && (e = ""), t === void 0 && (t = {});
      var r;
      if (e instanceof n)
        return e;
      typeof e == "number" && (e = Gye(e)), this.originalInput = e;
      var i = jye(e);
      this.originalInput = e, this.r = i.r, this.g = i.g, this.b = i.b, this.a = i.a, this.roundA = Math.round(100 * this.a) / 100, this.format = (r = t.format) !== null && r !== void 0 ? r : i.format, this.gradientType = t.gradientType, this.r < 1 && (this.r = Math.round(this.r)), this.g < 1 && (this.g = Math.round(this.g)), this.b < 1 && (this.b = Math.round(this.b)), this.isValid = i.ok;
    }
    return n.prototype.isDark = function() {
      return this.getBrightness() < 128;
    }, n.prototype.isLight = function() {
      return !this.isDark();
    }, n.prototype.getBrightness = function() {
      var e = this.toRgb();
      return (e.r * 299 + e.g * 587 + e.b * 114) / 1e3;
    }, n.prototype.getLuminance = function() {
      var e = this.toRgb(), t, r, i, o = e.r / 255, s = e.g / 255, a = e.b / 255;
      return o <= 0.03928 ? t = o / 12.92 : t = Math.pow((o + 0.055) / 1.055, 2.4), s <= 0.03928 ? r = s / 12.92 : r = Math.pow((s + 0.055) / 1.055, 2.4), a <= 0.03928 ? i = a / 12.92 : i = Math.pow((a + 0.055) / 1.055, 2.4), 0.2126 * t + 0.7152 * r + 0.0722 * i;
    }, n.prototype.getAlpha = function() {
      return this.a;
    }, n.prototype.setAlpha = function(e) {
      return this.a = qj(e), this.roundA = Math.round(100 * this.a) / 100, this;
    }, n.prototype.isMonochrome = function() {
      var e = this.toHsl().s;
      return e === 0;
    }, n.prototype.toHsv = function() {
      var e = w3(this.r, this.g, this.b);
      return { h: e.h * 360, s: e.s, v: e.v, a: this.a };
    }, n.prototype.toHsvString = function() {
      var e = w3(this.r, this.g, this.b), t = Math.round(e.h * 360), r = Math.round(e.s * 100), i = Math.round(e.v * 100);
      return this.a === 1 ? "hsv(".concat(t, ", ").concat(r, "%, ").concat(i, "%)") : "hsva(".concat(t, ", ").concat(r, "%, ").concat(i, "%, ").concat(this.roundA, ")");
    }, n.prototype.toHsl = function() {
      var e = O3(this.r, this.g, this.b);
      return { h: e.h * 360, s: e.s, l: e.l, a: this.a };
    }, n.prototype.toHslString = function() {
      var e = O3(this.r, this.g, this.b), t = Math.round(e.h * 360), r = Math.round(e.s * 100), i = Math.round(e.l * 100);
      return this.a === 1 ? "hsl(".concat(t, ", ").concat(r, "%, ").concat(i, "%)") : "hsla(".concat(t, ", ").concat(r, "%, ").concat(i, "%, ").concat(this.roundA, ")");
    }, n.prototype.toHex = function(e) {
      return e === void 0 && (e = !1), x3(this.r, this.g, this.b, e);
    }, n.prototype.toHexString = function(e) {
      return e === void 0 && (e = !1), "#" + this.toHex(e);
    }, n.prototype.toHex8 = function(e) {
      return e === void 0 && (e = !1), Zye(this.r, this.g, this.b, this.a, e);
    }, n.prototype.toHex8String = function(e) {
      return e === void 0 && (e = !1), "#" + this.toHex8(e);
    }, n.prototype.toHexShortString = function(e) {
      return e === void 0 && (e = !1), this.a === 1 ? this.toHexString(e) : this.toHex8String(e);
    }, n.prototype.toRgb = function() {
      return {
        r: Math.round(this.r),
        g: Math.round(this.g),
        b: Math.round(this.b),
        a: this.a
      };
    }, n.prototype.toRgbString = function() {
      var e = Math.round(this.r), t = Math.round(this.g), r = Math.round(this.b);
      return this.a === 1 ? "rgb(".concat(e, ", ").concat(t, ", ").concat(r, ")") : "rgba(".concat(e, ", ").concat(t, ", ").concat(r, ", ").concat(this.roundA, ")");
    }, n.prototype.toPercentageRgb = function() {
      var e = function(t) {
        return "".concat(Math.round(oi(t, 255) * 100), "%");
      };
      return {
        r: e(this.r),
        g: e(this.g),
        b: e(this.b),
        a: this.a
      };
    }, n.prototype.toPercentageRgbString = function() {
      var e = function(t) {
        return Math.round(oi(t, 255) * 100);
      };
      return this.a === 1 ? "rgb(".concat(e(this.r), "%, ").concat(e(this.g), "%, ").concat(e(this.b), "%)") : "rgba(".concat(e(this.r), "%, ").concat(e(this.g), "%, ").concat(e(this.b), "%, ").concat(this.roundA, ")");
    }, n.prototype.toName = function() {
      if (this.a === 0)
        return "transparent";
      if (this.a < 1)
        return !1;
      for (var e = "#" + x3(this.r, this.g, this.b, !1), t = 0, r = Object.entries(zP); t < r.length; t++) {
        var i = r[t], o = i[0], s = i[1];
        if (e === s)
          return o;
      }
      return !1;
    }, n.prototype.toString = function(e) {
      var t = !!e;
      e = e ?? this.format;
      var r = !1, i = this.a < 1 && this.a >= 0, o = !t && i && (e.startsWith("hex") || e === "name");
      return o ? e === "name" && this.a === 0 ? this.toName() : this.toRgbString() : (e === "rgb" && (r = this.toRgbString()), e === "prgb" && (r = this.toPercentageRgbString()), (e === "hex" || e === "hex6") && (r = this.toHexString()), e === "hex3" && (r = this.toHexString(!0)), e === "hex4" && (r = this.toHex8String(!0)), e === "hex8" && (r = this.toHex8String()), e === "name" && (r = this.toName()), e === "hsl" && (r = this.toHslString()), e === "hsv" && (r = this.toHsvString()), r || this.toHexString());
    }, n.prototype.toNumber = function() {
      return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    }, n.prototype.clone = function() {
      return new n(this.toString());
    }, n.prototype.lighten = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.l += e / 100, t.l = Ub(t.l), new n(t);
    }, n.prototype.brighten = function(e) {
      e === void 0 && (e = 10);
      var t = this.toRgb();
      return t.r = Math.max(0, Math.min(255, t.r - Math.round(255 * -(e / 100)))), t.g = Math.max(0, Math.min(255, t.g - Math.round(255 * -(e / 100)))), t.b = Math.max(0, Math.min(255, t.b - Math.round(255 * -(e / 100)))), new n(t);
    }, n.prototype.darken = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.l -= e / 100, t.l = Ub(t.l), new n(t);
    }, n.prototype.tint = function(e) {
      return e === void 0 && (e = 10), this.mix("white", e);
    }, n.prototype.shade = function(e) {
      return e === void 0 && (e = 10), this.mix("black", e);
    }, n.prototype.desaturate = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.s -= e / 100, t.s = Ub(t.s), new n(t);
    }, n.prototype.saturate = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.s += e / 100, t.s = Ub(t.s), new n(t);
    }, n.prototype.greyscale = function() {
      return this.desaturate(100);
    }, n.prototype.spin = function(e) {
      var t = this.toHsl(), r = (t.h + e) % 360;
      return t.h = r < 0 ? 360 + r : r, new n(t);
    }, n.prototype.mix = function(e, t) {
      t === void 0 && (t = 50);
      var r = this.toRgb(), i = new n(e).toRgb(), o = t / 100, s = {
        r: (i.r - r.r) * o + r.r,
        g: (i.g - r.g) * o + r.g,
        b: (i.b - r.b) * o + r.b,
        a: (i.a - r.a) * o + r.a
      };
      return new n(s);
    }, n.prototype.analogous = function(e, t) {
      e === void 0 && (e = 6), t === void 0 && (t = 30);
      var r = this.toHsl(), i = 360 / t, o = [this];
      for (r.h = (r.h - (i * e >> 1) + 720) % 360; --e; )
        r.h = (r.h + i) % 360, o.push(new n(r));
      return o;
    }, n.prototype.complement = function() {
      var e = this.toHsl();
      return e.h = (e.h + 180) % 360, new n(e);
    }, n.prototype.monochromatic = function(e) {
      e === void 0 && (e = 6);
      for (var t = this.toHsv(), r = t.h, i = t.s, o = t.v, s = [], a = 1 / e; e--; )
        s.push(new n({ h: r, s: i, v: o })), o = (o + a) % 1;
      return s;
    }, n.prototype.splitcomplement = function() {
      var e = this.toHsl(), t = e.h;
      return [
        this,
        new n({ h: (t + 72) % 360, s: e.s, l: e.l }),
        new n({ h: (t + 216) % 360, s: e.s, l: e.l })
      ];
    }, n.prototype.onBackground = function(e) {
      var t = this.toRgb(), r = new n(e).toRgb(), i = t.a + r.a * (1 - t.a);
      return new n({
        r: (t.r * t.a + r.r * r.a * (1 - t.a)) / i,
        g: (t.g * t.a + r.g * r.a * (1 - t.a)) / i,
        b: (t.b * t.a + r.b * r.a * (1 - t.a)) / i,
        a: i
      });
    }, n.prototype.triad = function() {
      return this.polyad(3);
    }, n.prototype.tetrad = function() {
      return this.polyad(4);
    }, n.prototype.polyad = function(e) {
      for (var t = this.toHsl(), r = t.h, i = [this], o = 360 / e, s = 1; s < e; s++)
        i.push(new n({ h: (r + s * o) % 360, s: t.s, l: t.l }));
      return i;
    }, n.prototype.equals = function(e) {
      return this.toRgbString() === new n(e).toRgbString();
    }, n;
  }()
);
function xu(n, e = 20) {
  return n.mix("#141414", e).toString();
}
function Uye(n) {
  const e = Uc(), t = Ie("button");
  return B(() => {
    let r = {};
    const i = n.color;
    if (i) {
      const o = new Xye(i), s = n.dark ? o.tint(20).toString() : xu(o, 20);
      if (n.plain)
        r = t.cssVarBlock({
          "bg-color": n.dark ? xu(o, 90) : o.tint(90).toString(),
          "text-color": i,
          "border-color": n.dark ? xu(o, 50) : o.tint(50).toString(),
          "hover-text-color": `var(${t.cssVarName("color-white")})`,
          "hover-bg-color": i,
          "hover-border-color": i,
          "active-bg-color": s,
          "active-text-color": `var(${t.cssVarName("color-white")})`,
          "active-border-color": s
        }), e.value && (r[t.cssVarBlockName("disabled-bg-color")] = n.dark ? xu(o, 90) : o.tint(90).toString(), r[t.cssVarBlockName("disabled-text-color")] = n.dark ? xu(o, 50) : o.tint(50).toString(), r[t.cssVarBlockName("disabled-border-color")] = n.dark ? xu(o, 80) : o.tint(80).toString());
      else {
        const a = n.dark ? xu(o, 30) : o.tint(30).toString(), l = o.isDark() ? `var(${t.cssVarName("color-white")})` : `var(${t.cssVarName("color-black")})`;
        if (r = t.cssVarBlock({
          "bg-color": i,
          "text-color": l,
          "border-color": i,
          "hover-bg-color": a,
          "hover-text-color": l,
          "hover-border-color": a,
          "active-bg-color": s,
          "active-border-color": s
        }), e.value) {
          const u = n.dark ? xu(o, 50) : o.tint(50).toString();
          r[t.cssVarBlockName("disabled-bg-color")] = u, r[t.cssVarBlockName("disabled-text-color")] = n.dark ? "rgba(255, 255, 255, 0.5)" : `var(${t.cssVarName("color-white")})`, r[t.cssVarBlockName("disabled-border-color")] = u;
        }
      }
    }
    return r;
  });
}
const Kye = U({
  name: "ElButton"
}), Jye = /* @__PURE__ */ U({
  ...Kye,
  props: VP,
  emits: Nye,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = Uye(r), o = Ie("button"), { _ref: s, _size: a, _type: l, _disabled: u, _props: c, shouldAddSpace: h, handleClick: f } = Iye(r, t);
    return e({
      ref: s,
      size: a,
      type: l,
      disabled: u,
      shouldAddSpace: h
    }), (d, p) => (z(), ye(cn(d.tag), ps({
      ref_key: "_ref",
      ref: s
    }, P(c), {
      class: [
        P(o).b(),
        P(o).m(P(l)),
        P(o).m(P(a)),
        P(o).is("disabled", P(u)),
        P(o).is("loading", d.loading),
        P(o).is("plain", d.plain),
        P(o).is("round", d.round),
        P(o).is("circle", d.circle),
        P(o).is("text", d.text),
        P(o).is("link", d.link),
        P(o).is("has-bg", d.bg)
      ],
      style: P(i),
      onClick: P(f)
    }), {
      default: me(() => [
        d.loading ? (z(), X(pr, { key: 0 }, [
          d.$slots.loading ? Ce(d.$slots, "loading", { key: 0 }) : (z(), ye(P(Dt), {
            key: 1,
            class: Z(P(o).is("loading"))
          }, {
            default: me(() => [
              (z(), ye(cn(d.loadingIcon)))
            ]),
            _: 1
          }, 8, ["class"]))
        ], 64)) : d.icon || d.$slots.icon ? (z(), ye(P(Dt), { key: 1 }, {
          default: me(() => [
            d.icon ? (z(), ye(cn(d.icon), { key: 0 })) : Ce(d.$slots, "icon", { key: 1 })
          ]),
          _: 3
        })) : he("v-if", !0),
        d.$slots.default ? (z(), X("span", {
          key: 2,
          class: Z({ [P(o).em("text", "expand")]: P(h) })
        }, [
          Ce(d.$slots, "default")
        ], 2)) : he("v-if", !0)
      ]),
      _: 3
    }, 16, ["class", "style", "onClick"]));
  }
});
var e0e = /* @__PURE__ */ Ze(Jye, [["__file", "button.vue"]]);
const t0e = {
  size: VP.size,
  type: VP.type
}, n0e = U({
  name: "ElButtonGroup"
}), r0e = /* @__PURE__ */ U({
  ...n0e,
  props: t0e,
  setup(n) {
    const e = n;
    Jt(Hj, Si({
      size: hs(e, "size"),
      type: hs(e, "type")
    }));
    const t = Ie("button");
    return (r, i) => (z(), X("div", {
      class: Z(`${P(t).b("group")}`)
    }, [
      Ce(r.$slots, "default")
    ], 2));
  }
});
var Yj = /* @__PURE__ */ Ze(r0e, [["__file", "button-group.vue"]]);
const FP = Bn(e0e, {
  ButtonGroup: Yj
});
fa(Yj);
var i0e = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function ab(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function o0e(n) {
  if (n.__esModule)
    return n;
  var e = n.default;
  if (typeof e == "function") {
    var t = function r() {
      return this instanceof r ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(n, r);
    Object.defineProperty(t, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return n[r];
      }
    });
  }), t;
}
const Lu = /* @__PURE__ */ new Map();
let _3;
Ht && (document.addEventListener("mousedown", (n) => _3 = n), document.addEventListener("mouseup", (n) => {
  for (const e of Lu.values())
    for (const { documentHandler: t } of e)
      t(n, _3);
}));
function C3(n, e) {
  let t = [];
  return Array.isArray(e.arg) ? t = e.arg : ra(e.arg) && t.push(e.arg), function(r, i) {
    const o = e.instance.popperRef, s = r.target, a = i == null ? void 0 : i.target, l = !e || !e.instance, u = !s || !a, c = n.contains(s) || n.contains(a), h = n === s, f = t.length && t.some((p) => p == null ? void 0 : p.contains(s)) || t.length && t.includes(a), d = o && (o.contains(s) || o.contains(a));
    l || u || c || h || f || d || e.value(r, i);
  };
}
const eL = {
  beforeMount(n, e) {
    Lu.has(n) || Lu.set(n, []), Lu.get(n).push({
      documentHandler: C3(n, e),
      bindingFn: e.value
    });
  },
  updated(n, e) {
    Lu.has(n) || Lu.set(n, []);
    const t = Lu.get(n), r = t.findIndex((o) => o.bindingFn === e.oldValue), i = {
      documentHandler: C3(n, e),
      bindingFn: e.value
    };
    r >= 0 ? t.splice(r, 1, i) : t.push(i);
  },
  unmounted(n) {
    Lu.delete(n);
  }
}, s0e = 100, a0e = 600, A3 = {
  beforeMount(n, e) {
    const t = e.value, { interval: r = s0e, delay: i = a0e } = wn(t) ? {} : t;
    let o, s;
    const a = () => wn(t) ? t() : t.handler(), l = () => {
      s && (clearTimeout(s), s = void 0), o && (clearInterval(o), o = void 0);
    };
    n.addEventListener("mousedown", (u) => {
      u.button === 0 && (l(), a(), document.addEventListener("mouseup", () => l(), {
        once: !0
      }), s = setTimeout(() => {
        o = setInterval(() => {
          a();
        }, r);
      }, i));
    });
  }
}, QP = "_trap-focus-children", tf = [], T3 = (n) => {
  var e;
  if (tf.length === 0)
    return;
  const t = tf[tf.length - 1][QP];
  if (t.length > 0 && n.code === ii.tab) {
    if (t.length === 1) {
      n.preventDefault(), document.activeElement !== t[0] && t[0].focus();
      return;
    }
    const r = n.shiftKey, i = n.target === t[0], o = n.target === t[t.length - 1];
    if (i && r && (n.preventDefault(), t[t.length - 1].focus()), o && !r && (n.preventDefault(), t[0].focus()), process.env.NODE_ENV === "test") {
      const s = t.indexOf(n.target);
      s !== -1 && ((e = t[r ? s - 1 : s + 1]) == null || e.focus());
    }
  }
}, l0e = {
  beforeMount(n) {
    n[QP] = LN(n), tf.push(n), tf.length <= 1 && document.addEventListener("keydown", T3);
  },
  updated(n) {
    ut(() => {
      n[QP] = LN(n);
    });
  },
  unmounted() {
    tf.shift(), tf.length === 0 && document.removeEventListener("keydown", T3);
  }
};
var P3 = !1, Zh, ZP, WP, ZO, WO, Xj, GO, GP, jP, HP, Uj, qP, YP, Kj, Jj;
function qi() {
  if (!P3) {
    P3 = !0;
    var n = navigator.userAgent, e = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(n), t = /(Mac OS X)|(Windows)|(Linux)/.exec(n);
    if (qP = /\b(iPhone|iP[ao]d)/.exec(n), YP = /\b(iP[ao]d)/.exec(n), HP = /Android/i.exec(n), Kj = /FBAN\/\w+;/i.exec(n), Jj = /Mobile/i.exec(n), Uj = !!/Win64/.exec(n), e) {
      Zh = e[1] ? parseFloat(e[1]) : e[5] ? parseFloat(e[5]) : NaN, Zh && document && document.documentMode && (Zh = document.documentMode);
      var r = /(?:Trident\/(\d+.\d+))/.exec(n);
      Xj = r ? parseFloat(r[1]) + 4 : Zh, ZP = e[2] ? parseFloat(e[2]) : NaN, WP = e[3] ? parseFloat(e[3]) : NaN, ZO = e[4] ? parseFloat(e[4]) : NaN, ZO ? (e = /(?:Chrome\/(\d+\.\d+))/.exec(n), WO = e && e[1] ? parseFloat(e[1]) : NaN) : WO = NaN;
    } else
      Zh = ZP = WP = WO = ZO = NaN;
    if (t) {
      if (t[1]) {
        var i = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(n);
        GO = i ? parseFloat(i[1].replace("_", ".")) : !0;
      } else
        GO = !1;
      GP = !!t[2], jP = !!t[3];
    } else
      GO = GP = jP = !1;
  }
}
var XP = { ie: function() {
  return qi() || Zh;
}, ieCompatibilityMode: function() {
  return qi() || Xj > Zh;
}, ie64: function() {
  return XP.ie() && Uj;
}, firefox: function() {
  return qi() || ZP;
}, opera: function() {
  return qi() || WP;
}, webkit: function() {
  return qi() || ZO;
}, safari: function() {
  return XP.webkit();
}, chrome: function() {
  return qi() || WO;
}, windows: function() {
  return qi() || GP;
}, osx: function() {
  return qi() || GO;
}, linux: function() {
  return qi() || jP;
}, iphone: function() {
  return qi() || qP;
}, mobile: function() {
  return qi() || qP || YP || HP || Jj;
}, nativeApp: function() {
  return qi() || Kj;
}, android: function() {
  return qi() || HP;
}, ipad: function() {
  return qi() || YP;
} }, u0e = XP, Jb = !!(typeof window < "u" && window.document && window.document.createElement), c0e = { canUseDOM: Jb, canUseWorkers: typeof Worker < "u", canUseEventListeners: Jb && !!(window.addEventListener || window.attachEvent), canUseViewport: Jb && !!window.screen, isInWorker: !Jb }, e7 = c0e, t7;
e7.canUseDOM && (t7 = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== !0);
function h0e(n, e) {
  if (!e7.canUseDOM || e && !("addEventListener" in document))
    return !1;
  var t = "on" + n, r = t in document;
  if (!r) {
    var i = document.createElement("div");
    i.setAttribute(t, "return;"), r = typeof i[t] == "function";
  }
  return !r && t7 && n === "wheel" && (r = document.implementation.hasFeature("Events.wheel", "3.0")), r;
}
var f0e = h0e, E3 = 10, k3 = 40, M3 = 800;
function n7(n) {
  var e = 0, t = 0, r = 0, i = 0;
  return "detail" in n && (t = n.detail), "wheelDelta" in n && (t = -n.wheelDelta / 120), "wheelDeltaY" in n && (t = -n.wheelDeltaY / 120), "wheelDeltaX" in n && (e = -n.wheelDeltaX / 120), "axis" in n && n.axis === n.HORIZONTAL_AXIS && (e = t, t = 0), r = e * E3, i = t * E3, "deltaY" in n && (i = n.deltaY), "deltaX" in n && (r = n.deltaX), (r || i) && n.deltaMode && (n.deltaMode == 1 ? (r *= k3, i *= k3) : (r *= M3, i *= M3)), r && !e && (e = r < 1 ? -1 : 1), i && !t && (t = i < 1 ? -1 : 1), { spinX: e, spinY: t, pixelX: r, pixelY: i };
}
n7.getEventType = function() {
  return u0e.firefox() ? "DOMMouseScroll" : f0e("wheel") ? "wheel" : "mousewheel";
};
var d0e = n7;
/**
* Checks if an event is supported in the current execution environment.
*
* NOTE: This will not work correctly for non-generic events such as `change`,
* `reset`, `load`, `error`, and `select`.
*
* Borrows from Modernizr.
*
* @param {string} eventNameSuffix Event name, e.g. "click".
* @param {?boolean} capture Check if the capture phase is supported.
* @return {boolean} True if the event is supported.
* @internal
* @license Modernizr 3.0.0pre (Custom Build) | MIT
*/
const p0e = function(n, e) {
  if (n && n.addEventListener) {
    const t = function(r) {
      const i = d0e(r);
      e && Reflect.apply(e, this, [r, i]);
    };
    n.addEventListener("wheel", t, { passive: !0 });
  }
}, g0e = {
  beforeMount(n, e) {
    p0e(n, e.value);
  }
}, r7 = {
  modelValue: {
    type: [Number, String, Boolean],
    default: void 0
  },
  label: {
    type: [String, Boolean, Number, Object],
    default: void 0
  },
  indeterminate: Boolean,
  disabled: Boolean,
  checked: Boolean,
  name: {
    type: String,
    default: void 0
  },
  trueLabel: {
    type: [String, Number],
    default: void 0
  },
  falseLabel: {
    type: [String, Number],
    default: void 0
  },
  id: {
    type: String,
    default: void 0
  },
  controls: {
    type: String,
    default: void 0
  },
  border: Boolean,
  size: pa,
  tabindex: [String, Number],
  validateEvent: {
    type: Boolean,
    default: !0
  }
}, i7 = {
  [Vt]: (n) => qt(n) || mt(n) || xi(n),
  change: (n) => qt(n) || mt(n) || xi(n)
}, Yg = Symbol("checkboxGroupContextKey"), v0e = ({
  model: n,
  isChecked: e
}) => {
  const t = $e(Yg, void 0), r = B(() => {
    var o, s;
    const a = (o = t == null ? void 0 : t.max) == null ? void 0 : o.value, l = (s = t == null ? void 0 : t.min) == null ? void 0 : s.value;
    return !Io(a) && n.value.length >= a && !e.value || !Io(l) && n.value.length <= l && e.value;
  });
  return {
    isDisabled: Uc(B(() => (t == null ? void 0 : t.disabled.value) || r.value)),
    isLimitDisabled: r
  };
}, m0e = (n, {
  model: e,
  isLimitExceeded: t,
  hasOwnLabel: r,
  isDisabled: i,
  isLabeledByFormItem: o
}) => {
  const s = $e(Yg, void 0), { formItem: a } = yl(), { emit: l } = xt();
  function u(p) {
    var g, v;
    return p === n.trueLabel || p === !0 ? (g = n.trueLabel) != null ? g : !0 : (v = n.falseLabel) != null ? v : !1;
  }
  function c(p, g) {
    l("change", u(p), g);
  }
  function h(p) {
    if (t.value)
      return;
    const g = p.target;
    l("change", u(g.checked), p);
  }
  async function f(p) {
    t.value || !r.value && !i.value && o.value && (p.composedPath().some((m) => m.tagName === "LABEL") || (e.value = u([!1, n.falseLabel].includes(e.value)), await ut(), c(e.value, p)));
  }
  const d = B(() => (s == null ? void 0 : s.validateEvent) || n.validateEvent);
  return de(() => n.modelValue, () => {
    d.value && (a == null || a.validate("change").catch((p) => jt(p)));
  }), {
    handleChange: h,
    onClickRoot: f
  };
}, y0e = (n) => {
  const e = F(!1), { emit: t } = xt(), r = $e(Yg, void 0), i = B(() => Io(r) === !1), o = F(!1), s = B({
    get() {
      var a, l;
      return i.value ? (a = r == null ? void 0 : r.modelValue) == null ? void 0 : a.value : (l = n.modelValue) != null ? l : e.value;
    },
    set(a) {
      var l, u;
      i.value && Gn(a) ? (o.value = ((l = r == null ? void 0 : r.max) == null ? void 0 : l.value) !== void 0 && a.length > (r == null ? void 0 : r.max.value) && a.length > s.value.length, o.value === !1 && ((u = r == null ? void 0 : r.changeEvent) == null || u.call(r, a))) : (t(Vt, a), e.value = a);
    }
  });
  return {
    model: s,
    isGroup: i,
    isLimitExceeded: o
  };
}, b0e = (n, e, { model: t }) => {
  const r = $e(Yg, void 0), i = F(!1), o = B(() => {
    const u = t.value;
    return xi(u) ? u : Gn(u) ? ti(n.label) ? u.map(Iw).some((c) => wi(c, n.label)) : u.map(Iw).includes(n.label) : u != null ? u === n.trueLabel : !!u;
  }), s = Qo(B(() => {
    var u;
    return (u = r == null ? void 0 : r.size) == null ? void 0 : u.value;
  }), {
    prop: !0
  }), a = Qo(B(() => {
    var u;
    return (u = r == null ? void 0 : r.size) == null ? void 0 : u.value;
  })), l = B(() => !!e.default || !No(n.label));
  return {
    checkboxButtonSize: s,
    isChecked: o,
    isFocused: i,
    checkboxSize: a,
    hasOwnLabel: l
  };
}, O0e = (n, { model: e }) => {
  function t() {
    Gn(e.value) && !e.value.includes(n.label) ? e.value.push(n.label) : e.value = n.trueLabel || !0;
  }
  n.checked && t();
}, o7 = (n, e) => {
  const { formItem: t } = yl(), { model: r, isGroup: i, isLimitExceeded: o } = y0e(n), {
    isFocused: s,
    isChecked: a,
    checkboxButtonSize: l,
    checkboxSize: u,
    hasOwnLabel: c
  } = b0e(n, e, { model: r }), { isDisabled: h } = v0e({ model: r, isChecked: a }), { inputId: f, isLabeledByFormItem: d } = dd(n, {
    formItemContext: t,
    disableIdGeneration: c,
    disableIdManagement: i
  }), { handleChange: p, onClickRoot: g } = m0e(n, {
    model: r,
    isLimitExceeded: o,
    hasOwnLabel: c,
    isDisabled: h,
    isLabeledByFormItem: d
  });
  return O0e(n, { model: r }), {
    inputId: f,
    isLabeledByFormItem: d,
    isChecked: a,
    isDisabled: h,
    isFocused: s,
    checkboxButtonSize: l,
    checkboxSize: u,
    hasOwnLabel: c,
    model: r,
    handleChange: p,
    onClickRoot: g
  };
}, w0e = ["id", "indeterminate", "name", "tabindex", "disabled", "true-value", "false-value"], x0e = ["id", "indeterminate", "disabled", "value", "name", "tabindex"], S0e = U({
  name: "ElCheckbox"
}), _0e = /* @__PURE__ */ U({
  ...S0e,
  props: r7,
  emits: i7,
  setup(n) {
    const e = n, t = Hc(), {
      inputId: r,
      isLabeledByFormItem: i,
      isChecked: o,
      isDisabled: s,
      isFocused: a,
      checkboxSize: l,
      hasOwnLabel: u,
      model: c,
      handleChange: h,
      onClickRoot: f
    } = o7(e, t), d = Ie("checkbox"), p = B(() => [
      d.b(),
      d.m(l.value),
      d.is("disabled", s.value),
      d.is("bordered", e.border),
      d.is("checked", o.value)
    ]), g = B(() => [
      d.e("input"),
      d.is("disabled", s.value),
      d.is("checked", o.value),
      d.is("indeterminate", e.indeterminate),
      d.is("focus", a.value)
    ]);
    return (v, m) => (z(), ye(cn(!P(u) && P(i) ? "span" : "label"), {
      class: Z(P(p)),
      "aria-controls": v.indeterminate ? v.controls : null,
      onClick: P(f)
    }, {
      default: me(() => [
        J("span", {
          class: Z(P(g))
        }, [
          v.trueLabel || v.falseLabel ? zt((z(), X("input", {
            key: 0,
            id: P(r),
            "onUpdate:modelValue": m[0] || (m[0] = (y) => ol(c) ? c.value = y : null),
            class: Z(P(d).e("original")),
            type: "checkbox",
            indeterminate: v.indeterminate,
            name: v.name,
            tabindex: v.tabindex,
            disabled: P(s),
            "true-value": v.trueLabel,
            "false-value": v.falseLabel,
            onChange: m[1] || (m[1] = (...y) => P(h) && P(h)(...y)),
            onFocus: m[2] || (m[2] = (y) => a.value = !0),
            onBlur: m[3] || (m[3] = (y) => a.value = !1),
            onClick: m[4] || (m[4] = en(() => {
            }, ["stop"]))
          }, null, 42, w0e)), [
            [Rw, P(c)]
          ]) : zt((z(), X("input", {
            key: 1,
            id: P(r),
            "onUpdate:modelValue": m[5] || (m[5] = (y) => ol(c) ? c.value = y : null),
            class: Z(P(d).e("original")),
            type: "checkbox",
            indeterminate: v.indeterminate,
            disabled: P(s),
            value: v.label,
            name: v.name,
            tabindex: v.tabindex,
            onChange: m[6] || (m[6] = (...y) => P(h) && P(h)(...y)),
            onFocus: m[7] || (m[7] = (y) => a.value = !0),
            onBlur: m[8] || (m[8] = (y) => a.value = !1),
            onClick: m[9] || (m[9] = en(() => {
            }, ["stop"]))
          }, null, 42, x0e)), [
            [Rw, P(c)]
          ]),
          J("span", {
            class: Z(P(d).e("inner"))
          }, null, 2)
        ], 2),
        P(u) ? (z(), X("span", {
          key: 0,
          class: Z(P(d).e("label"))
        }, [
          Ce(v.$slots, "default"),
          v.$slots.default ? he("v-if", !0) : (z(), X(pr, { key: 0 }, [
            uo(Ke(v.label), 1)
          ], 64))
        ], 2)) : he("v-if", !0)
      ]),
      _: 3
    }, 8, ["class", "aria-controls", "onClick"]));
  }
});
var C0e = /* @__PURE__ */ Ze(_0e, [["__file", "checkbox.vue"]]);
const A0e = ["name", "tabindex", "disabled", "true-value", "false-value"], T0e = ["name", "tabindex", "disabled", "value"], P0e = U({
  name: "ElCheckboxButton"
}), E0e = /* @__PURE__ */ U({
  ...P0e,
  props: r7,
  emits: i7,
  setup(n) {
    const e = n, t = Hc(), {
      isFocused: r,
      isChecked: i,
      isDisabled: o,
      checkboxButtonSize: s,
      model: a,
      handleChange: l
    } = o7(e, t), u = $e(Yg, void 0), c = Ie("checkbox"), h = B(() => {
      var d, p, g, v;
      const m = (p = (d = u == null ? void 0 : u.fill) == null ? void 0 : d.value) != null ? p : "";
      return {
        backgroundColor: m,
        borderColor: m,
        color: (v = (g = u == null ? void 0 : u.textColor) == null ? void 0 : g.value) != null ? v : "",
        boxShadow: m ? `-1px 0 0 0 ${m}` : void 0
      };
    }), f = B(() => [
      c.b("button"),
      c.bm("button", s.value),
      c.is("disabled", o.value),
      c.is("checked", i.value),
      c.is("focus", r.value)
    ]);
    return (d, p) => (z(), X("label", {
      class: Z(P(f))
    }, [
      d.trueLabel || d.falseLabel ? zt((z(), X("input", {
        key: 0,
        "onUpdate:modelValue": p[0] || (p[0] = (g) => ol(a) ? a.value = g : null),
        class: Z(P(c).be("button", "original")),
        type: "checkbox",
        name: d.name,
        tabindex: d.tabindex,
        disabled: P(o),
        "true-value": d.trueLabel,
        "false-value": d.falseLabel,
        onChange: p[1] || (p[1] = (...g) => P(l) && P(l)(...g)),
        onFocus: p[2] || (p[2] = (g) => r.value = !0),
        onBlur: p[3] || (p[3] = (g) => r.value = !1),
        onClick: p[4] || (p[4] = en(() => {
        }, ["stop"]))
      }, null, 42, A0e)), [
        [Rw, P(a)]
      ]) : zt((z(), X("input", {
        key: 1,
        "onUpdate:modelValue": p[5] || (p[5] = (g) => ol(a) ? a.value = g : null),
        class: Z(P(c).be("button", "original")),
        type: "checkbox",
        name: d.name,
        tabindex: d.tabindex,
        disabled: P(o),
        value: d.label,
        onChange: p[6] || (p[6] = (...g) => P(l) && P(l)(...g)),
        onFocus: p[7] || (p[7] = (g) => r.value = !0),
        onBlur: p[8] || (p[8] = (g) => r.value = !1),
        onClick: p[9] || (p[9] = en(() => {
        }, ["stop"]))
      }, null, 42, T0e)), [
        [Rw, P(a)]
      ]),
      d.$slots.default || d.label ? (z(), X("span", {
        key: 2,
        class: Z(P(c).be("button", "inner")),
        style: pt(P(i) ? P(h) : void 0)
      }, [
        Ce(d.$slots, "default", {}, () => [
          uo(Ke(d.label), 1)
        ])
      ], 6)) : he("v-if", !0)
    ], 2));
  }
});
var s7 = /* @__PURE__ */ Ze(E0e, [["__file", "checkbox-button.vue"]]);
const k0e = qe({
  modelValue: {
    type: ke(Array),
    default: () => []
  },
  disabled: Boolean,
  min: Number,
  max: Number,
  size: pa,
  label: String,
  fill: String,
  textColor: String,
  tag: {
    type: String,
    default: "div"
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), M0e = {
  [Vt]: (n) => Gn(n),
  change: (n) => Gn(n)
}, D0e = U({
  name: "ElCheckboxGroup"
}), L0e = /* @__PURE__ */ U({
  ...D0e,
  props: k0e,
  emits: M0e,
  setup(n, { emit: e }) {
    const t = n, r = Ie("checkbox"), { formItem: i } = yl(), { inputId: o, isLabeledByFormItem: s } = dd(t, {
      formItemContext: i
    }), a = async (u) => {
      e(Vt, u), await ut(), e("change", u);
    }, l = B({
      get() {
        return t.modelValue;
      },
      set(u) {
        a(u);
      }
    });
    return Jt(Yg, {
      ...TP(jc(t), [
        "size",
        "min",
        "max",
        "disabled",
        "validateEvent",
        "fill",
        "textColor"
      ]),
      modelValue: l,
      changeEvent: a
    }), de(() => t.modelValue, () => {
      t.validateEvent && (i == null || i.validate("change").catch((u) => jt(u)));
    }), (u, c) => {
      var h;
      return z(), ye(cn(u.tag), {
        id: P(o),
        class: Z(P(r).b("group")),
        role: "group",
        "aria-label": P(s) ? void 0 : u.label || "checkbox-group",
        "aria-labelledby": P(s) ? (h = P(i)) == null ? void 0 : h.labelId : void 0
      }, {
        default: me(() => [
          Ce(u.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "class", "aria-label", "aria-labelledby"]);
    };
  }
});
var a7 = /* @__PURE__ */ Ze(L0e, [["__file", "checkbox-group.vue"]]);
const rg = Bn(C0e, {
  CheckboxButton: s7,
  CheckboxGroup: a7
});
fa(s7);
const ZVt = fa(a7), l7 = qe({
  size: pa,
  disabled: Boolean,
  label: {
    type: [String, Number, Boolean],
    default: ""
  }
}), I0e = qe({
  ...l7,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  border: Boolean
}), u7 = {
  [Vt]: (n) => qt(n) || mt(n) || xi(n),
  [ia]: (n) => qt(n) || mt(n) || xi(n)
}, c7 = Symbol("radioGroupKey"), h7 = (n, e) => {
  const t = F(), r = $e(c7, void 0), i = B(() => !!r), o = B({
    get() {
      return i.value ? r.modelValue : n.modelValue;
    },
    set(c) {
      i.value ? r.changeEvent(c) : e && e(Vt, c), t.value.checked = n.modelValue === n.label;
    }
  }), s = Qo(B(() => r == null ? void 0 : r.size)), a = Uc(B(() => r == null ? void 0 : r.disabled)), l = F(!1), u = B(() => a.value || i.value && o.value !== n.label ? -1 : 0);
  return {
    radioRef: t,
    isGroup: i,
    radioGroup: r,
    focus: l,
    size: s,
    disabled: a,
    tabIndex: u,
    modelValue: o
  };
}, R0e = ["value", "name", "disabled"], $0e = U({
  name: "ElRadio"
}), N0e = /* @__PURE__ */ U({
  ...$0e,
  props: I0e,
  emits: u7,
  setup(n, { emit: e }) {
    const t = n, r = Ie("radio"), { radioRef: i, radioGroup: o, focus: s, size: a, disabled: l, modelValue: u } = h7(t, e);
    function c() {
      ut(() => e("change", u.value));
    }
    return (h, f) => {
      var d;
      return z(), X("label", {
        class: Z([
          P(r).b(),
          P(r).is("disabled", P(l)),
          P(r).is("focus", P(s)),
          P(r).is("bordered", h.border),
          P(r).is("checked", P(u) === h.label),
          P(r).m(P(a))
        ])
      }, [
        J("span", {
          class: Z([
            P(r).e("input"),
            P(r).is("disabled", P(l)),
            P(r).is("checked", P(u) === h.label)
          ])
        }, [
          zt(J("input", {
            ref_key: "radioRef",
            ref: i,
            "onUpdate:modelValue": f[0] || (f[0] = (p) => ol(u) ? u.value = p : null),
            class: Z(P(r).e("original")),
            value: h.label,
            name: h.name || ((d = P(o)) == null ? void 0 : d.name),
            disabled: P(l),
            type: "radio",
            onFocus: f[1] || (f[1] = (p) => s.value = !0),
            onBlur: f[2] || (f[2] = (p) => s.value = !1),
            onChange: c,
            onClick: f[3] || (f[3] = en(() => {
            }, ["stop"]))
          }, null, 42, R0e), [
            [CW, P(u)]
          ]),
          J("span", {
            class: Z(P(r).e("inner"))
          }, null, 2)
        ], 2),
        J("span", {
          class: Z(P(r).e("label")),
          onKeydown: f[4] || (f[4] = en(() => {
          }, ["stop"]))
        }, [
          Ce(h.$slots, "default", {}, () => [
            uo(Ke(h.label), 1)
          ])
        ], 34)
      ], 2);
    };
  }
});
var B0e = /* @__PURE__ */ Ze(N0e, [["__file", "radio.vue"]]);
const V0e = qe({
  ...l7,
  name: {
    type: String,
    default: ""
  }
}), z0e = ["value", "name", "disabled"], F0e = U({
  name: "ElRadioButton"
}), Q0e = /* @__PURE__ */ U({
  ...F0e,
  props: V0e,
  setup(n) {
    const e = n, t = Ie("radio"), { radioRef: r, focus: i, size: o, disabled: s, modelValue: a, radioGroup: l } = h7(e), u = B(() => ({
      backgroundColor: (l == null ? void 0 : l.fill) || "",
      borderColor: (l == null ? void 0 : l.fill) || "",
      boxShadow: l != null && l.fill ? `-1px 0 0 0 ${l.fill}` : "",
      color: (l == null ? void 0 : l.textColor) || ""
    }));
    return (c, h) => {
      var f;
      return z(), X("label", {
        class: Z([
          P(t).b("button"),
          P(t).is("active", P(a) === c.label),
          P(t).is("disabled", P(s)),
          P(t).is("focus", P(i)),
          P(t).bm("button", P(o))
        ])
      }, [
        zt(J("input", {
          ref_key: "radioRef",
          ref: r,
          "onUpdate:modelValue": h[0] || (h[0] = (d) => ol(a) ? a.value = d : null),
          class: Z(P(t).be("button", "original-radio")),
          value: c.label,
          type: "radio",
          name: c.name || ((f = P(l)) == null ? void 0 : f.name),
          disabled: P(s),
          onFocus: h[1] || (h[1] = (d) => i.value = !0),
          onBlur: h[2] || (h[2] = (d) => i.value = !1),
          onClick: h[3] || (h[3] = en(() => {
          }, ["stop"]))
        }, null, 42, z0e), [
          [CW, P(a)]
        ]),
        J("span", {
          class: Z(P(t).be("button", "inner")),
          style: pt(P(a) === c.label ? P(u) : {}),
          onKeydown: h[4] || (h[4] = en(() => {
          }, ["stop"]))
        }, [
          Ce(c.$slots, "default", {}, () => [
            uo(Ke(c.label), 1)
          ])
        ], 38)
      ], 2);
    };
  }
});
var f7 = /* @__PURE__ */ Ze(Q0e, [["__file", "radio-button.vue"]]);
const Z0e = qe({
  id: {
    type: String,
    default: void 0
  },
  size: pa,
  disabled: Boolean,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  fill: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  textColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: void 0
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), W0e = u7, G0e = ["id", "aria-label", "aria-labelledby"], j0e = U({
  name: "ElRadioGroup"
}), H0e = /* @__PURE__ */ U({
  ...j0e,
  props: Z0e,
  emits: W0e,
  setup(n, { emit: e }) {
    const t = n, r = Ie("radio"), i = ll(), o = F(), { formItem: s } = yl(), { inputId: a, isLabeledByFormItem: l } = dd(t, {
      formItemContext: s
    }), u = (h) => {
      e(Vt, h), ut(() => e("change", h));
    };
    dt(() => {
      const h = o.value.querySelectorAll("[type=radio]"), f = h[0];
      !Array.from(h).some((d) => d.checked) && f && (f.tabIndex = 0);
    });
    const c = B(() => t.name || i.value);
    return Jt(c7, Si({
      ...jc(t),
      changeEvent: u,
      name: c
    })), de(() => t.modelValue, () => {
      t.validateEvent && (s == null || s.validate("change").catch((h) => jt(h)));
    }), (h, f) => (z(), X("div", {
      id: P(a),
      ref_key: "radioGroupRef",
      ref: o,
      class: Z(P(r).b("group")),
      role: "radiogroup",
      "aria-label": P(l) ? void 0 : h.label || "radio-group",
      "aria-labelledby": P(l) ? P(s).labelId : void 0
    }, [
      Ce(h.$slots, "default")
    ], 10, G0e));
  }
});
var d7 = /* @__PURE__ */ Ze(H0e, [["__file", "radio-group.vue"]]);
const WVt = Bn(B0e, {
  RadioButton: f7,
  RadioGroup: d7
}), GVt = fa(d7), jVt = fa(f7), p7 = qe({
  type: {
    type: String,
    values: ["primary", "success", "info", "warning", "danger"],
    default: "primary"
  },
  closable: Boolean,
  disableTransitions: Boolean,
  hit: Boolean,
  color: String,
  size: {
    type: String,
    values: hd
  },
  effect: {
    type: String,
    values: ["dark", "light", "plain"],
    default: "light"
  },
  round: Boolean
}), q0e = {
  close: (n) => n instanceof MouseEvent,
  click: (n) => n instanceof MouseEvent
}, Y0e = U({
  name: "ElTag"
}), X0e = /* @__PURE__ */ U({
  ...Y0e,
  props: p7,
  emits: q0e,
  setup(n, { emit: e }) {
    const t = n, r = Qo(), i = Ie("tag"), o = B(() => {
      const { type: l, hit: u, effect: c, closable: h, round: f } = t;
      return [
        i.b(),
        i.is("closable", h),
        i.m(l || "primary"),
        i.m(r.value),
        i.m(c),
        i.is("hit", u),
        i.is("round", f)
      ];
    }), s = (l) => {
      e("close", l);
    }, a = (l) => {
      e("click", l);
    };
    return (l, u) => l.disableTransitions ? (z(), X("span", {
      key: 0,
      class: Z(P(o)),
      style: pt({ backgroundColor: l.color }),
      onClick: a
    }, [
      J("span", {
        class: Z(P(i).e("content"))
      }, [
        Ce(l.$slots, "default")
      ], 2),
      l.closable ? (z(), ye(P(Dt), {
        key: 0,
        class: Z(P(i).e("close")),
        onClick: en(s, ["stop"])
      }, {
        default: me(() => [
          pe(P(Oc))
        ]),
        _: 1
      }, 8, ["class", "onClick"])) : he("v-if", !0)
    ], 6)) : (z(), ye(ml, {
      key: 1,
      name: `${P(i).namespace.value}-zoom-in-center`,
      appear: ""
    }, {
      default: me(() => [
        J("span", {
          class: Z(P(o)),
          style: pt({ backgroundColor: l.color }),
          onClick: a
        }, [
          J("span", {
            class: Z(P(i).e("content"))
          }, [
            Ce(l.$slots, "default")
          ], 2),
          l.closable ? (z(), ye(P(Dt), {
            key: 0,
            class: Z(P(i).e("close")),
            onClick: en(s, ["stop"])
          }, {
            default: me(() => [
              pe(P(Oc))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : he("v-if", !0)
        ], 6)
      ]),
      _: 3
    }, 8, ["name"]));
  }
});
var U0e = /* @__PURE__ */ Ze(X0e, [["__file", "tag.vue"]]);
const K0e = Bn(U0e), D3 = (n) => mt(n) || qt(n) || Gn(n), J0e = qe({
  accordion: Boolean,
  modelValue: {
    type: ke([Array, String, Number]),
    default: () => fd([])
  }
}), ebe = {
  [Vt]: D3,
  [ia]: D3
}, g7 = Symbol("collapseContextKey"), tbe = (n, e) => {
  const t = F(ky(n.modelValue)), r = (o) => {
    t.value = o;
    const s = n.accordion ? t.value[0] : t.value;
    e(Vt, s), e(ia, s);
  }, i = (o) => {
    if (n.accordion)
      r([t.value[0] === o ? "" : o]);
    else {
      const s = [...t.value], a = s.indexOf(o);
      a > -1 ? s.splice(a, 1) : s.push(o), r(s);
    }
  };
  return de(() => n.modelValue, () => t.value = ky(n.modelValue), { deep: !0 }), Jt(g7, {
    activeNames: t,
    handleItemClick: i
  }), {
    activeNames: t,
    setActiveNames: r
  };
}, nbe = () => {
  const n = Ie("collapse");
  return {
    rootKls: B(() => n.b())
  };
}, rbe = U({
  name: "ElCollapse"
}), ibe = /* @__PURE__ */ U({
  ...rbe,
  props: J0e,
  emits: ebe,
  setup(n, { expose: e, emit: t }) {
    const r = n, { activeNames: i, setActiveNames: o } = tbe(r, t), { rootKls: s } = nbe();
    return e({
      activeNames: i,
      setActiveNames: o
    }), (a, l) => (z(), X("div", {
      class: Z(P(s))
    }, [
      Ce(a.$slots, "default")
    ], 2));
  }
});
var obe = /* @__PURE__ */ Ze(ibe, [["__file", "collapse.vue"]]);
const sbe = U({
  name: "ElCollapseTransition"
}), abe = /* @__PURE__ */ U({
  ...sbe,
  setup(n) {
    const e = Ie("collapse-transition"), t = (i) => {
      i.style.maxHeight = "", i.style.overflow = i.dataset.oldOverflow, i.style.paddingTop = i.dataset.oldPaddingTop, i.style.paddingBottom = i.dataset.oldPaddingBottom;
    }, r = {
      beforeEnter(i) {
        i.dataset || (i.dataset = {}), i.dataset.oldPaddingTop = i.style.paddingTop, i.dataset.oldPaddingBottom = i.style.paddingBottom, i.style.height && (i.dataset.elExistsHeight = i.style.height), i.style.maxHeight = 0, i.style.paddingTop = 0, i.style.paddingBottom = 0;
      },
      enter(i) {
        requestAnimationFrame(() => {
          i.dataset.oldOverflow = i.style.overflow, i.dataset.elExistsHeight ? i.style.maxHeight = i.dataset.elExistsHeight : i.scrollHeight !== 0 ? i.style.maxHeight = `${i.scrollHeight}px` : i.style.maxHeight = 0, i.style.paddingTop = i.dataset.oldPaddingTop, i.style.paddingBottom = i.dataset.oldPaddingBottom, i.style.overflow = "hidden";
        });
      },
      afterEnter(i) {
        i.style.maxHeight = "", i.style.overflow = i.dataset.oldOverflow;
      },
      enterCancelled(i) {
        t(i);
      },
      beforeLeave(i) {
        i.dataset || (i.dataset = {}), i.dataset.oldPaddingTop = i.style.paddingTop, i.dataset.oldPaddingBottom = i.style.paddingBottom, i.dataset.oldOverflow = i.style.overflow, i.style.maxHeight = `${i.scrollHeight}px`, i.style.overflow = "hidden";
      },
      leave(i) {
        i.scrollHeight !== 0 && (i.style.maxHeight = 0, i.style.paddingTop = 0, i.style.paddingBottom = 0);
      },
      afterLeave(i) {
        t(i);
      },
      leaveCancelled(i) {
        t(i);
      }
    };
    return (i, o) => (z(), ye(ml, ps({
      name: P(e).b()
    }, Gie(r)), {
      default: me(() => [
        Ce(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["name"]));
  }
});
var jO = /* @__PURE__ */ Ze(abe, [["__file", "collapse-transition.vue"]]);
jO.install = (n) => {
  n.component(jO.name, jO);
};
const lbe = jO, ube = qe({
  title: {
    type: String,
    default: ""
  },
  name: {
    type: ke([String, Number]),
    default: void 0
  },
  disabled: Boolean
}), cbe = (n) => {
  const e = $e(g7), { namespace: t } = Ie("collapse"), r = F(!1), i = F(!1), o = WD(), s = B(() => o.current++), a = B(() => {
    var f;
    return (f = n.name) != null ? f : `${t.value}-id-${o.prefix}-${P(s)}`;
  }), l = B(() => e == null ? void 0 : e.activeNames.value.includes(P(a)));
  return {
    focusing: r,
    id: s,
    isActive: l,
    handleFocus: () => {
      setTimeout(() => {
        i.value ? i.value = !1 : r.value = !0;
      }, 50);
    },
    handleHeaderClick: () => {
      n.disabled || (e == null || e.handleItemClick(P(a)), r.value = !1, i.value = !0);
    },
    handleEnterClick: () => {
      e == null || e.handleItemClick(P(a));
    }
  };
}, hbe = (n, { focusing: e, isActive: t, id: r }) => {
  const i = Ie("collapse"), o = B(() => [
    i.b("item"),
    i.is("active", P(t)),
    i.is("disabled", n.disabled)
  ]), s = B(() => [
    i.be("item", "header"),
    i.is("active", P(t)),
    { focusing: P(e) && !n.disabled }
  ]), a = B(() => [
    i.be("item", "arrow"),
    i.is("active", P(t))
  ]), l = B(() => i.be("item", "wrap")), u = B(() => i.be("item", "content")), c = B(() => i.b(`content-${P(r)}`)), h = B(() => i.b(`head-${P(r)}`));
  return {
    arrowKls: a,
    headKls: s,
    rootKls: o,
    itemWrapperKls: l,
    itemContentKls: u,
    scopedContentId: c,
    scopedHeadId: h
  };
}, fbe = ["id", "aria-expanded", "aria-controls", "aria-describedby", "tabindex"], dbe = ["id", "aria-hidden", "aria-labelledby"], pbe = U({
  name: "ElCollapseItem"
}), gbe = /* @__PURE__ */ U({
  ...pbe,
  props: ube,
  setup(n, { expose: e }) {
    const t = n, {
      focusing: r,
      id: i,
      isActive: o,
      handleFocus: s,
      handleHeaderClick: a,
      handleEnterClick: l
    } = cbe(t), {
      arrowKls: u,
      headKls: c,
      rootKls: h,
      itemWrapperKls: f,
      itemContentKls: d,
      scopedContentId: p,
      scopedHeadId: g
    } = hbe(t, { focusing: r, isActive: o, id: i });
    return e({
      isActive: o
    }), (v, m) => (z(), X("div", {
      class: Z(P(h))
    }, [
      J("button", {
        id: P(g),
        class: Z(P(c)),
        "aria-expanded": P(o),
        "aria-controls": P(p),
        "aria-describedby": P(p),
        tabindex: v.disabled ? -1 : 0,
        type: "button",
        onClick: m[0] || (m[0] = (...y) => P(a) && P(a)(...y)),
        onKeydown: m[1] || (m[1] = Nr(en((...y) => P(l) && P(l)(...y), ["stop", "prevent"]), ["space", "enter"])),
        onFocus: m[2] || (m[2] = (...y) => P(s) && P(s)(...y)),
        onBlur: m[3] || (m[3] = (y) => r.value = !1)
      }, [
        Ce(v.$slots, "title", {}, () => [
          uo(Ke(v.title), 1)
        ]),
        pe(P(Dt), {
          class: Z(P(u))
        }, {
          default: me(() => [
            pe(P(J0))
          ]),
          _: 1
        }, 8, ["class"])
      ], 42, fbe),
      pe(P(lbe), null, {
        default: me(() => [
          zt(J("div", {
            id: P(p),
            role: "region",
            class: Z(P(f)),
            "aria-hidden": !P(o),
            "aria-labelledby": P(g)
          }, [
            J("div", {
              class: Z(P(d))
            }, [
              Ce(v.$slots, "default")
            ], 2)
          ], 10, dbe), [
            [rr, P(o)]
          ])
        ]),
        _: 3
      })
    ], 2));
  }
});
var v7 = /* @__PURE__ */ Ze(gbe, [["__file", "collapse-item.vue"]]);
const HVt = Bn(obe, {
  CollapseItem: v7
}), qVt = fa(v7), vbe = qe({
  color: {
    type: ke(Object),
    required: !0
  },
  vertical: {
    type: Boolean,
    default: !1
  }
});
let HC = !1;
function By(n, e) {
  if (!Ht)
    return;
  const t = function(o) {
    var s;
    (s = e.drag) == null || s.call(e, o);
  }, r = function(o) {
    var s;
    document.removeEventListener("mousemove", t), document.removeEventListener("mouseup", r), document.removeEventListener("touchmove", t), document.removeEventListener("touchend", r), document.onselectstart = null, document.ondragstart = null, HC = !1, (s = e.end) == null || s.call(e, o);
  }, i = function(o) {
    var s;
    HC || (o.preventDefault(), document.onselectstart = () => !1, document.ondragstart = () => !1, document.addEventListener("mousemove", t), document.addEventListener("mouseup", r), document.addEventListener("touchmove", t), document.addEventListener("touchend", r), HC = !0, (s = e.start) == null || s.call(e, o));
  };
  n.addEventListener("mousedown", i), n.addEventListener("touchstart", i);
}
const mbe = (n) => {
  const e = xt(), t = lo(), r = lo();
  function i(s) {
    s.target !== t.value && o(s);
  }
  function o(s) {
    if (!r.value || !t.value)
      return;
    const l = e.vnode.el.getBoundingClientRect(), { clientX: u, clientY: c } = LD(s);
    if (n.vertical) {
      let h = c - l.top;
      h = Math.max(t.value.offsetHeight / 2, h), h = Math.min(h, l.height - t.value.offsetHeight / 2), n.color.set("alpha", Math.round((h - t.value.offsetHeight / 2) / (l.height - t.value.offsetHeight) * 100));
    } else {
      let h = u - l.left;
      h = Math.max(t.value.offsetWidth / 2, h), h = Math.min(h, l.width - t.value.offsetWidth / 2), n.color.set("alpha", Math.round((h - t.value.offsetWidth / 2) / (l.width - t.value.offsetWidth) * 100));
    }
  }
  return {
    thumb: t,
    bar: r,
    handleDrag: o,
    handleClick: i
  };
}, ybe = (n, {
  bar: e,
  thumb: t,
  handleDrag: r
}) => {
  const i = xt(), o = Ie("color-alpha-slider"), s = F(0), a = F(0), l = F();
  function u() {
    if (!t.value || n.vertical)
      return 0;
    const y = i.vnode.el, b = n.color.get("alpha");
    return y ? Math.round(b * (y.offsetWidth - t.value.offsetWidth / 2) / 100) : 0;
  }
  function c() {
    if (!t.value)
      return 0;
    const y = i.vnode.el;
    if (!n.vertical)
      return 0;
    const b = n.color.get("alpha");
    return y ? Math.round(b * (y.offsetHeight - t.value.offsetHeight / 2) / 100) : 0;
  }
  function h() {
    if (n.color && n.color.value) {
      const { r: y, g: b, b: O } = n.color.toRgb();
      return `linear-gradient(to right, rgba(${y}, ${b}, ${O}, 0) 0%, rgba(${y}, ${b}, ${O}, 1) 100%)`;
    }
    return "";
  }
  function f() {
    s.value = u(), a.value = c(), l.value = h();
  }
  dt(() => {
    if (!e.value || !t.value)
      return;
    const y = {
      drag: (b) => {
        r(b);
      },
      end: (b) => {
        r(b);
      }
    };
    By(e.value, y), By(t.value, y), f();
  }), de(() => n.color.get("alpha"), () => f()), de(() => n.color.value, () => f());
  const d = B(() => [o.b(), o.is("vertical", n.vertical)]), p = B(() => o.e("bar")), g = B(() => o.e("thumb")), v = B(() => ({ background: l.value })), m = B(() => ({
    left: Fo(s.value),
    top: Fo(a.value)
  }));
  return { rootKls: d, barKls: p, barStyle: v, thumbKls: g, thumbStyle: m, update: f };
}, bbe = "ElColorAlphaSlider", Obe = U({
  name: bbe
}), wbe = /* @__PURE__ */ U({
  ...Obe,
  props: vbe,
  setup(n, { expose: e }) {
    const t = n, { bar: r, thumb: i, handleDrag: o, handleClick: s } = mbe(t), { rootKls: a, barKls: l, barStyle: u, thumbKls: c, thumbStyle: h, update: f } = ybe(t, {
      bar: r,
      thumb: i,
      handleDrag: o
    });
    return e({
      update: f,
      bar: r,
      thumb: i
    }), (d, p) => (z(), X("div", {
      class: Z(P(a))
    }, [
      J("div", {
        ref_key: "bar",
        ref: r,
        class: Z(P(l)),
        style: pt(P(u)),
        onClick: p[0] || (p[0] = (...g) => P(s) && P(s)(...g))
      }, null, 6),
      J("div", {
        ref_key: "thumb",
        ref: i,
        class: Z(P(c)),
        style: pt(P(h))
      }, null, 6)
    ], 2));
  }
});
var xbe = /* @__PURE__ */ Ze(wbe, [["__file", "alpha-slider.vue"]]);
const Sbe = U({
  name: "ElColorHueSlider",
  props: {
    color: {
      type: Object,
      required: !0
    },
    vertical: Boolean
  },
  setup(n) {
    const e = Ie("color-hue-slider"), t = xt(), r = F(), i = F(), o = F(0), s = F(0), a = B(() => n.color.get("hue"));
    de(() => a.value, () => {
      f();
    });
    function l(d) {
      d.target !== r.value && u(d);
    }
    function u(d) {
      if (!i.value || !r.value)
        return;
      const g = t.vnode.el.getBoundingClientRect(), { clientX: v, clientY: m } = LD(d);
      let y;
      if (n.vertical) {
        let b = m - g.top;
        b = Math.min(b, g.height - r.value.offsetHeight / 2), b = Math.max(r.value.offsetHeight / 2, b), y = Math.round((b - r.value.offsetHeight / 2) / (g.height - r.value.offsetHeight) * 360);
      } else {
        let b = v - g.left;
        b = Math.min(b, g.width - r.value.offsetWidth / 2), b = Math.max(r.value.offsetWidth / 2, b), y = Math.round((b - r.value.offsetWidth / 2) / (g.width - r.value.offsetWidth) * 360);
      }
      n.color.set("hue", y);
    }
    function c() {
      if (!r.value)
        return 0;
      const d = t.vnode.el;
      if (n.vertical)
        return 0;
      const p = n.color.get("hue");
      return d ? Math.round(p * (d.offsetWidth - r.value.offsetWidth / 2) / 360) : 0;
    }
    function h() {
      if (!r.value)
        return 0;
      const d = t.vnode.el;
      if (!n.vertical)
        return 0;
      const p = n.color.get("hue");
      return d ? Math.round(p * (d.offsetHeight - r.value.offsetHeight / 2) / 360) : 0;
    }
    function f() {
      o.value = c(), s.value = h();
    }
    return dt(() => {
      if (!i.value || !r.value)
        return;
      const d = {
        drag: (p) => {
          u(p);
        },
        end: (p) => {
          u(p);
        }
      };
      By(i.value, d), By(r.value, d), f();
    }), {
      bar: i,
      thumb: r,
      thumbLeft: o,
      thumbTop: s,
      hueValue: a,
      handleClick: l,
      update: f,
      ns: e
    };
  }
});
function _be(n, e, t, r, i, o) {
  return z(), X("div", {
    class: Z([n.ns.b(), n.ns.is("vertical", n.vertical)])
  }, [
    J("div", {
      ref: "bar",
      class: Z(n.ns.e("bar")),
      onClick: e[0] || (e[0] = (...s) => n.handleClick && n.handleClick(...s))
    }, null, 2),
    J("div", {
      ref: "thumb",
      class: Z(n.ns.e("thumb")),
      style: pt({
        left: n.thumbLeft + "px",
        top: n.thumbTop + "px"
      })
    }, null, 6)
  ], 2);
}
var Cbe = /* @__PURE__ */ Ze(Sbe, [["render", _be], ["__file", "hue-slider.vue"]]);
const Abe = qe({
  modelValue: String,
  id: String,
  showAlpha: Boolean,
  colorFormat: String,
  disabled: Boolean,
  size: pa,
  popperClass: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  predefine: {
    type: ke(Array)
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), Tbe = {
  [Vt]: (n) => qt(n) || No(n),
  [ia]: (n) => qt(n) || No(n),
  activeChange: (n) => qt(n) || No(n),
  focus: (n) => n instanceof FocusEvent,
  blur: (n) => n instanceof FocusEvent
}, m7 = Symbol("colorPickerContextKey"), L3 = function(n, e, t) {
  return [
    n,
    e * t / ((n = (2 - e) * t) < 1 ? n : 2 - n) || 0,
    n / 2
  ];
}, Pbe = function(n) {
  return typeof n == "string" && n.includes(".") && Number.parseFloat(n) === 1;
}, Ebe = function(n) {
  return typeof n == "string" && n.includes("%");
}, Cp = function(n, e) {
  Pbe(n) && (n = "100%");
  const t = Ebe(n);
  return n = Math.min(e, Math.max(0, Number.parseFloat(`${n}`))), t && (n = Number.parseInt(`${n * e}`, 10) / 100), Math.abs(n - e) < 1e-6 ? 1 : n % e / Number.parseFloat(e);
}, I3 = {
  10: "A",
  11: "B",
  12: "C",
  13: "D",
  14: "E",
  15: "F"
}, HO = (n) => {
  n = Math.min(Math.round(n), 255);
  const e = Math.floor(n / 16), t = n % 16;
  return `${I3[e] || e}${I3[t] || t}`;
}, R3 = function({ r: n, g: e, b: t }) {
  return Number.isNaN(+n) || Number.isNaN(+e) || Number.isNaN(+t) ? "" : `#${HO(n)}${HO(e)}${HO(t)}`;
}, qC = {
  A: 10,
  B: 11,
  C: 12,
  D: 13,
  E: 14,
  F: 15
}, lh = function(n) {
  return n.length === 2 ? (qC[n[0].toUpperCase()] || +n[0]) * 16 + (qC[n[1].toUpperCase()] || +n[1]) : qC[n[1].toUpperCase()] || +n[1];
}, kbe = function(n, e, t) {
  e = e / 100, t = t / 100;
  let r = e;
  const i = Math.max(t, 0.01);
  t *= 2, e *= t <= 1 ? t : 2 - t, r *= i <= 1 ? i : 2 - i;
  const o = (t + e) / 2, s = t === 0 ? 2 * r / (i + r) : 2 * e / (t + e);
  return {
    h: n,
    s: s * 100,
    v: o * 100
  };
}, $3 = (n, e, t) => {
  n = Cp(n, 255), e = Cp(e, 255), t = Cp(t, 255);
  const r = Math.max(n, e, t), i = Math.min(n, e, t);
  let o;
  const s = r, a = r - i, l = r === 0 ? 0 : a / r;
  if (r === i)
    o = 0;
  else {
    switch (r) {
      case n: {
        o = (e - t) / a + (e < t ? 6 : 0);
        break;
      }
      case e: {
        o = (t - n) / a + 2;
        break;
      }
      case t: {
        o = (n - e) / a + 4;
        break;
      }
    }
    o /= 6;
  }
  return { h: o * 360, s: l * 100, v: s * 100 };
}, kv = function(n, e, t) {
  n = Cp(n, 360) * 6, e = Cp(e, 100), t = Cp(t, 100);
  const r = Math.floor(n), i = n - r, o = t * (1 - e), s = t * (1 - i * e), a = t * (1 - (1 - i) * e), l = r % 6, u = [t, s, o, o, a, t][l], c = [a, t, t, s, o, o][l], h = [o, o, a, t, t, s][l];
  return {
    r: Math.round(u * 255),
    g: Math.round(c * 255),
    b: Math.round(h * 255)
  };
};
let jm = class {
  constructor(e = {}) {
    this._hue = 0, this._saturation = 100, this._value = 100, this._alpha = 100, this.enableAlpha = !1, this.format = "hex", this.value = "";
    for (const t in e)
      na(e, t) && (this[t] = e[t]);
    e.value ? this.fromString(e.value) : this.doOnChange();
  }
  set(e, t) {
    if (arguments.length === 1 && typeof e == "object") {
      for (const r in e)
        na(e, r) && this.set(r, e[r]);
      return;
    }
    this[`_${e}`] = t, this.doOnChange();
  }
  get(e) {
    return e === "alpha" ? Math.floor(this[`_${e}`]) : this[`_${e}`];
  }
  toRgb() {
    return kv(this._hue, this._saturation, this._value);
  }
  fromString(e) {
    if (!e) {
      this._hue = 0, this._saturation = 100, this._value = 100, this.doOnChange();
      return;
    }
    const t = (r, i, o) => {
      this._hue = Math.max(0, Math.min(360, r)), this._saturation = Math.max(0, Math.min(100, i)), this._value = Math.max(0, Math.min(100, o)), this.doOnChange();
    };
    if (e.includes("hsl")) {
      const r = e.replace(/hsla|hsl|\(|\)/gm, "").split(/\s|,/g).filter((i) => i !== "").map((i, o) => o > 2 ? Number.parseFloat(i) : Number.parseInt(i, 10));
      if (r.length === 4 ? this._alpha = Number.parseFloat(r[3]) * 100 : r.length === 3 && (this._alpha = 100), r.length >= 3) {
        const { h: i, s: o, v: s } = kbe(r[0], r[1], r[2]);
        t(i, o, s);
      }
    } else if (e.includes("hsv")) {
      const r = e.replace(/hsva|hsv|\(|\)/gm, "").split(/\s|,/g).filter((i) => i !== "").map((i, o) => o > 2 ? Number.parseFloat(i) : Number.parseInt(i, 10));
      r.length === 4 ? this._alpha = Number.parseFloat(r[3]) * 100 : r.length === 3 && (this._alpha = 100), r.length >= 3 && t(r[0], r[1], r[2]);
    } else if (e.includes("rgb")) {
      const r = e.replace(/rgba|rgb|\(|\)/gm, "").split(/\s|,/g).filter((i) => i !== "").map((i, o) => o > 2 ? Number.parseFloat(i) : Number.parseInt(i, 10));
      if (r.length === 4 ? this._alpha = Number.parseFloat(r[3]) * 100 : r.length === 3 && (this._alpha = 100), r.length >= 3) {
        const { h: i, s: o, v: s } = $3(r[0], r[1], r[2]);
        t(i, o, s);
      }
    } else if (e.includes("#")) {
      const r = e.replace("#", "").trim();
      if (!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(r))
        return;
      let i, o, s;
      r.length === 3 ? (i = lh(r[0] + r[0]), o = lh(r[1] + r[1]), s = lh(r[2] + r[2])) : (r.length === 6 || r.length === 8) && (i = lh(r.slice(0, 2)), o = lh(r.slice(2, 4)), s = lh(r.slice(4, 6))), r.length === 8 ? this._alpha = lh(r.slice(6)) / 255 * 100 : (r.length === 3 || r.length === 6) && (this._alpha = 100);
      const { h: a, s: l, v: u } = $3(i, o, s);
      t(a, l, u);
    }
  }
  compare(e) {
    return Math.abs(e._hue - this._hue) < 2 && Math.abs(e._saturation - this._saturation) < 1 && Math.abs(e._value - this._value) < 1 && Math.abs(e._alpha - this._alpha) < 1;
  }
  doOnChange() {
    const { _hue: e, _saturation: t, _value: r, _alpha: i, format: o } = this;
    if (this.enableAlpha)
      switch (o) {
        case "hsl": {
          const s = L3(e, t / 100, r / 100);
          this.value = `hsla(${e}, ${Math.round(s[1] * 100)}%, ${Math.round(s[2] * 100)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hsv": {
          this.value = `hsva(${e}, ${Math.round(t)}%, ${Math.round(r)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hex": {
          this.value = `${R3(kv(e, t, r))}${HO(i * 255 / 100)}`;
          break;
        }
        default: {
          const { r: s, g: a, b: l } = kv(e, t, r);
          this.value = `rgba(${s}, ${a}, ${l}, ${this.get("alpha") / 100})`;
        }
      }
    else
      switch (o) {
        case "hsl": {
          const s = L3(e, t / 100, r / 100);
          this.value = `hsl(${e}, ${Math.round(s[1] * 100)}%, ${Math.round(s[2] * 100)}%)`;
          break;
        }
        case "hsv": {
          this.value = `hsv(${e}, ${Math.round(t)}%, ${Math.round(r)}%)`;
          break;
        }
        case "rgb": {
          const { r: s, g: a, b: l } = kv(e, t, r);
          this.value = `rgb(${s}, ${a}, ${l})`;
          break;
        }
        default:
          this.value = R3(kv(e, t, r));
      }
  }
};
const Mbe = U({
  props: {
    colors: {
      type: Array,
      required: !0
    },
    color: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = Ie("color-predefine"), { currentColor: t } = $e(m7), r = F(o(n.colors, n.color));
    de(() => t.value, (s) => {
      const a = new jm();
      a.fromString(s), r.value.forEach((l) => {
        l.selected = a.compare(l);
      });
    }), Ua(() => {
      r.value = o(n.colors, n.color);
    });
    function i(s) {
      n.color.fromString(n.colors[s]);
    }
    function o(s, a) {
      return s.map((l) => {
        const u = new jm();
        return u.enableAlpha = !0, u.format = "rgba", u.fromString(l), u.selected = u.value === a.value, u;
      });
    }
    return {
      rgbaColors: r,
      handleSelect: i,
      ns: e
    };
  }
}), Dbe = ["onClick"];
function Lbe(n, e, t, r, i, o) {
  return z(), X("div", {
    class: Z(n.ns.b())
  }, [
    J("div", {
      class: Z(n.ns.e("colors"))
    }, [
      (z(!0), X(pr, null, Nf(n.rgbaColors, (s, a) => (z(), X("div", {
        key: n.colors[a],
        class: Z([
          n.ns.e("color-selector"),
          n.ns.is("alpha", s._alpha < 100),
          { selected: s.selected }
        ]),
        onClick: (l) => n.handleSelect(a)
      }, [
        J("div", {
          style: pt({ backgroundColor: s.value })
        }, null, 4)
      ], 10, Dbe))), 128))
    ], 2)
  ], 2);
}
var Ibe = /* @__PURE__ */ Ze(Mbe, [["render", Lbe], ["__file", "predefine.vue"]]);
const Rbe = U({
  name: "ElSlPanel",
  props: {
    color: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = Ie("color-svpanel"), t = xt(), r = F(0), i = F(0), o = F("hsl(0, 100%, 50%)"), s = B(() => {
      const u = n.color.get("hue"), c = n.color.get("value");
      return { hue: u, value: c };
    });
    function a() {
      const u = n.color.get("saturation"), c = n.color.get("value"), h = t.vnode.el, { clientWidth: f, clientHeight: d } = h;
      i.value = u * f / 100, r.value = (100 - c) * d / 100, o.value = `hsl(${n.color.get("hue")}, 100%, 50%)`;
    }
    function l(u) {
      const h = t.vnode.el.getBoundingClientRect(), { clientX: f, clientY: d } = LD(u);
      let p = f - h.left, g = d - h.top;
      p = Math.max(0, p), p = Math.min(p, h.width), g = Math.max(0, g), g = Math.min(g, h.height), i.value = p, r.value = g, n.color.set({
        saturation: p / h.width * 100,
        value: 100 - g / h.height * 100
      });
    }
    return de(() => s.value, () => {
      a();
    }), dt(() => {
      By(t.vnode.el, {
        drag: (u) => {
          l(u);
        },
        end: (u) => {
          l(u);
        }
      }), a();
    }), {
      cursorTop: r,
      cursorLeft: i,
      background: o,
      colorValue: s,
      handleDrag: l,
      update: a,
      ns: e
    };
  }
}), $be = /* @__PURE__ */ J("div", null, null, -1), Nbe = [
  $be
];
function Bbe(n, e, t, r, i, o) {
  return z(), X("div", {
    class: Z(n.ns.b()),
    style: pt({
      backgroundColor: n.background
    })
  }, [
    J("div", {
      class: Z(n.ns.e("white"))
    }, null, 2),
    J("div", {
      class: Z(n.ns.e("black"))
    }, null, 2),
    J("div", {
      class: Z(n.ns.e("cursor")),
      style: pt({
        top: n.cursorTop + "px",
        left: n.cursorLeft + "px"
      })
    }, Nbe, 6)
  ], 6);
}
var Vbe = /* @__PURE__ */ Ze(Rbe, [["render", Bbe], ["__file", "sv-panel.vue"]]);
const zbe = ["onKeydown"], Fbe = ["id", "aria-label", "aria-labelledby", "aria-description", "aria-disabled", "tabindex"], Qbe = U({
  name: "ElColorPicker"
}), Zbe = /* @__PURE__ */ U({
  ...Qbe,
  props: Abe,
  emits: Tbe,
  setup(n, { expose: e, emit: t }) {
    const r = n, { t: i } = Wi(), o = Ie("color"), { formItem: s } = yl(), a = Qo(), l = Uc(), { inputId: u, isLabeledByFormItem: c } = dd(r, {
      formItemContext: s
    }), h = F(), f = F(), d = F(), p = F(), g = F(), v = F(), {
      isFocused: m,
      handleFocus: y,
      handleBlur: b
    } = jD(g, {
      beforeBlur(ne) {
        var ue;
        return (ue = p.value) == null ? void 0 : ue.isFocusInsideContent(ne);
      },
      afterBlur() {
        M(!1), V();
      }
    }), O = (ne) => {
      if (l.value)
        return ge();
      y(ne);
    };
    let w = !0;
    const x = Si(new jm({
      enableAlpha: r.showAlpha,
      format: r.colorFormat || "",
      value: r.modelValue
    })), S = F(!1), _ = F(!1), C = F(""), A = B(() => !r.modelValue && !_.value ? "transparent" : E(x, r.showAlpha)), T = B(() => !r.modelValue && !_.value ? "" : x.value), k = B(() => c.value ? void 0 : r.label || i("el.colorpicker.defaultLabel")), L = B(() => c.value ? s == null ? void 0 : s.labelId : void 0), D = B(() => [
      o.b("picker"),
      o.is("disabled", l.value),
      o.bm("picker", a.value),
      o.is("focused", m.value)
    ]);
    function E(ne, ue) {
      if (!(ne instanceof jm))
        throw new TypeError("color should be instance of _color Class");
      const { r: xe, g: gt, b: He } = ne.toRgb();
      return ue ? `rgba(${xe}, ${gt}, ${He}, ${ne.get("alpha") / 100})` : `rgb(${xe}, ${gt}, ${He})`;
    }
    function M(ne) {
      S.value = ne;
    }
    const R = Vf(M, 100, { leading: !0 });
    function N() {
      l.value || M(!0);
    }
    function $() {
      R(!1), V();
    }
    function V() {
      ut(() => {
        r.modelValue ? x.fromString(r.modelValue) : (x.value = "", ut(() => {
          _.value = !1;
        }));
      });
    }
    function H() {
      l.value || R(!S.value);
    }
    function G() {
      x.fromString(C.value);
    }
    function q() {
      const ne = x.value;
      t(Vt, ne), t("change", ne), r.validateEvent && (s == null || s.validate("change").catch((ue) => jt(ue))), R(!1), ut(() => {
        const ue = new jm({
          enableAlpha: r.showAlpha,
          format: r.colorFormat || "",
          value: r.modelValue
        });
        x.compare(ue) || V();
      });
    }
    function Y() {
      R(!1), t(Vt, null), t("change", null), r.modelValue !== null && r.validateEvent && (s == null || s.validate("change").catch((ne) => jt(ne))), V();
    }
    function ie(ne) {
      if (S.value && ($(), m.value)) {
        const ue = new FocusEvent("focus", ne);
        b(ue);
      }
    }
    function se(ne) {
      ne.preventDefault(), ne.stopPropagation(), M(!1), V();
    }
    function K(ne) {
      switch (ne.code) {
        case ii.enter:
        case ii.space:
          ne.preventDefault(), ne.stopPropagation(), N(), v.value.focus();
          break;
        case ii.esc:
          se(ne);
          break;
      }
    }
    function re() {
      g.value.focus();
    }
    function ge() {
      g.value.blur();
    }
    return dt(() => {
      r.modelValue && (C.value = T.value);
    }), de(() => r.modelValue, (ne) => {
      ne ? ne && ne !== x.value && (w = !1, x.fromString(ne)) : _.value = !1;
    }), de(() => T.value, (ne) => {
      C.value = ne, w && t("activeChange", ne), w = !0;
    }), de(() => x.value, () => {
      !r.modelValue && !_.value && (_.value = !0);
    }), de(() => S.value, () => {
      ut(() => {
        var ne, ue, xe;
        (ne = h.value) == null || ne.update(), (ue = f.value) == null || ue.update(), (xe = d.value) == null || xe.update();
      });
    }), Jt(m7, {
      currentColor: T
    }), e({
      color: x,
      show: N,
      hide: $,
      focus: re,
      blur: ge
    }), (ne, ue) => (z(), ye(P(sb), {
      ref_key: "popper",
      ref: p,
      visible: S.value,
      "show-arrow": !1,
      "fallback-placements": ["bottom", "top", "right", "left"],
      offset: 0,
      "gpu-acceleration": !1,
      "popper-class": [P(o).be("picker", "panel"), P(o).b("dropdown"), ne.popperClass],
      "stop-popper-mouse-event": !1,
      effect: "light",
      trigger: "click",
      transition: `${P(o).namespace.value}-zoom-in-top`,
      persistent: "",
      onHide: ue[2] || (ue[2] = (xe) => M(!1))
    }, {
      content: me(() => [
        zt((z(), X("div", {
          onKeydown: Nr(se, ["esc"])
        }, [
          J("div", {
            class: Z(P(o).be("dropdown", "main-wrapper"))
          }, [
            pe(Cbe, {
              ref_key: "hue",
              ref: h,
              class: "hue-slider",
              color: P(x),
              vertical: ""
            }, null, 8, ["color"]),
            pe(Vbe, {
              ref_key: "sv",
              ref: f,
              color: P(x)
            }, null, 8, ["color"])
          ], 2),
          ne.showAlpha ? (z(), ye(xbe, {
            key: 0,
            ref_key: "alpha",
            ref: d,
            color: P(x)
          }, null, 8, ["color"])) : he("v-if", !0),
          ne.predefine ? (z(), ye(Ibe, {
            key: 1,
            ref: "predefine",
            color: P(x),
            colors: ne.predefine
          }, null, 8, ["color", "colors"])) : he("v-if", !0),
          J("div", {
            class: Z(P(o).be("dropdown", "btns"))
          }, [
            J("span", {
              class: Z(P(o).be("dropdown", "value"))
            }, [
              pe(P(ob), {
                ref_key: "inputRef",
                ref: v,
                modelValue: C.value,
                "onUpdate:modelValue": ue[0] || (ue[0] = (xe) => C.value = xe),
                "validate-event": !1,
                size: "small",
                onKeyup: Nr(G, ["enter"]),
                onBlur: G
              }, null, 8, ["modelValue", "onKeyup"])
            ], 2),
            pe(P(FP), {
              class: Z(P(o).be("dropdown", "link-btn")),
              text: "",
              size: "small",
              onClick: Y
            }, {
              default: me(() => [
                uo(Ke(P(i)("el.colorpicker.clear")), 1)
              ]),
              _: 1
            }, 8, ["class"]),
            pe(P(FP), {
              plain: "",
              size: "small",
              class: Z(P(o).be("dropdown", "btn")),
              onClick: q
            }, {
              default: me(() => [
                uo(Ke(P(i)("el.colorpicker.confirm")), 1)
              ]),
              _: 1
            }, 8, ["class"])
          ], 2)
        ], 40, zbe)), [
          [P(eL), ie]
        ])
      ]),
      default: me(() => [
        J("div", {
          id: P(u),
          ref_key: "triggerRef",
          ref: g,
          class: Z(P(D)),
          role: "button",
          "aria-label": P(k),
          "aria-labelledby": P(L),
          "aria-description": P(i)("el.colorpicker.description", { color: ne.modelValue || "" }),
          "aria-disabled": P(l),
          tabindex: P(l) ? -1 : ne.tabindex,
          onKeydown: K,
          onFocus: O,
          onBlur: ue[1] || (ue[1] = (...xe) => P(b) && P(b)(...xe))
        }, [
          P(l) ? (z(), X("div", {
            key: 0,
            class: Z(P(o).be("picker", "mask"))
          }, null, 2)) : he("v-if", !0),
          J("div", {
            class: Z(P(o).be("picker", "trigger")),
            onClick: H
          }, [
            J("span", {
              class: Z([P(o).be("picker", "color"), P(o).is("alpha", ne.showAlpha)])
            }, [
              J("span", {
                class: Z(P(o).be("picker", "color-inner")),
                style: pt({
                  backgroundColor: P(A)
                })
              }, [
                zt(pe(P(Dt), {
                  class: Z([P(o).be("picker", "icon"), P(o).is("icon-arrow-down")])
                }, {
                  default: me(() => [
                    pe(P(HS))
                  ]),
                  _: 1
                }, 8, ["class"]), [
                  [rr, ne.modelValue || _.value]
                ]),
                zt(pe(P(Dt), {
                  class: Z([P(o).be("picker", "empty"), P(o).is("icon-close")])
                }, {
                  default: me(() => [
                    pe(P(Oc))
                  ]),
                  _: 1
                }, 8, ["class"]), [
                  [rr, !ne.modelValue && !_.value]
                ])
              ], 6)
            ], 2)
          ], 2)
        ], 42, Fbe)
      ]),
      _: 1
    }, 8, ["visible", "popper-class", "transition"]));
  }
});
var Wbe = /* @__PURE__ */ Ze(Zbe, [["__file", "color-picker.vue"]]);
const XVt = Bn(Wbe), Gbe = qe({
  mask: {
    type: Boolean,
    default: !0
  },
  customMaskEvent: {
    type: Boolean,
    default: !1
  },
  overlayClass: {
    type: ke([
      String,
      Array,
      Object
    ])
  },
  zIndex: {
    type: ke([String, Number])
  }
}), jbe = {
  click: (n) => n instanceof MouseEvent
}, Hbe = "overlay";
var qbe = U({
  name: "ElOverlay",
  props: Gbe,
  emits: jbe,
  setup(n, { slots: e, emit: t }) {
    const r = Ie(Hbe), i = (l) => {
      t("click", l);
    }, { onClick: o, onMousedown: s, onMouseup: a } = ZD(n.customMaskEvent ? void 0 : i);
    return () => n.mask ? pe("div", {
      class: [r.b(), n.overlayClass],
      style: {
        zIndex: n.zIndex
      },
      onClick: o,
      onMousedown: s,
      onMouseup: a
    }, [Ce(e, "default")], VO.STYLE | VO.CLASS | VO.PROPS, ["onClick", "onMouseup", "onMousedown"]) : nt("div", {
      class: n.overlayClass,
      style: {
        zIndex: n.zIndex,
        position: "fixed",
        top: "0px",
        right: "0px",
        bottom: "0px",
        left: "0px"
      }
    }, [Ce(e, "default")]);
  }
});
const tL = qbe, y7 = Symbol("dialogInjectionKey"), b7 = qe({
  center: Boolean,
  alignCenter: Boolean,
  closeIcon: {
    type: Vr
  },
  draggable: Boolean,
  overflow: Boolean,
  fullscreen: Boolean,
  showClose: {
    type: Boolean,
    default: !0
  },
  title: {
    type: String,
    default: ""
  },
  ariaLevel: {
    type: String,
    default: "2"
  }
}), Ybe = {
  close: () => !0
}, Xbe = ["aria-level"], Ube = ["aria-label"], Kbe = ["id"], Jbe = U({ name: "ElDialogContent" }), e1e = /* @__PURE__ */ U({
  ...Jbe,
  props: b7,
  emits: Ybe,
  setup(n) {
    const e = n, { t } = Wi(), { Close: r } = ij, { dialogRef: i, headerRef: o, bodyId: s, ns: a, style: l } = $e(y7), { focusTrapRef: u } = $e(Wj), c = B(() => [
      a.b(),
      a.is("fullscreen", e.fullscreen),
      a.is("draggable", e.draggable),
      a.is("align-center", e.alignCenter),
      { [a.m("center")]: e.center }
    ]), h = Xpe(u, i), f = B(() => e.draggable), d = B(() => e.overflow);
    return cj(i, o, f, d), (p, g) => (z(), X("div", {
      ref: P(h),
      class: Z(P(c)),
      style: pt(P(l)),
      tabindex: "-1"
    }, [
      J("header", {
        ref_key: "headerRef",
        ref: o,
        class: Z([P(a).e("header"), { "show-close": p.showClose }])
      }, [
        Ce(p.$slots, "header", {}, () => [
          J("span", {
            role: "heading",
            "aria-level": p.ariaLevel,
            class: Z(P(a).e("title"))
          }, Ke(p.title), 11, Xbe)
        ]),
        p.showClose ? (z(), X("button", {
          key: 0,
          "aria-label": P(t)("el.dialog.close"),
          class: Z(P(a).e("headerbtn")),
          type: "button",
          onClick: g[0] || (g[0] = (v) => p.$emit("close"))
        }, [
          pe(P(Dt), {
            class: Z(P(a).e("close"))
          }, {
            default: me(() => [
              (z(), ye(cn(p.closeIcon || P(r))))
            ]),
            _: 1
          }, 8, ["class"])
        ], 10, Ube)) : he("v-if", !0)
      ], 2),
      J("div", {
        id: P(s),
        class: Z(P(a).e("body"))
      }, [
        Ce(p.$slots, "default")
      ], 10, Kbe),
      p.$slots.footer ? (z(), X("footer", {
        key: 0,
        class: Z(P(a).e("footer"))
      }, [
        Ce(p.$slots, "footer")
      ], 2)) : he("v-if", !0)
    ], 6));
  }
});
var t1e = /* @__PURE__ */ Ze(e1e, [["__file", "dialog-content.vue"]]);
const O7 = qe({
  ...b7,
  appendToBody: Boolean,
  appendTo: {
    type: ke(String),
    default: "body"
  },
  beforeClose: {
    type: ke(Function)
  },
  destroyOnClose: Boolean,
  closeOnClickModal: {
    type: Boolean,
    default: !0
  },
  closeOnPressEscape: {
    type: Boolean,
    default: !0
  },
  lockScroll: {
    type: Boolean,
    default: !0
  },
  modal: {
    type: Boolean,
    default: !0
  },
  openDelay: {
    type: Number,
    default: 0
  },
  closeDelay: {
    type: Number,
    default: 0
  },
  top: {
    type: String
  },
  modelValue: Boolean,
  modalClass: String,
  width: {
    type: [String, Number]
  },
  zIndex: {
    type: Number
  },
  trapFocus: {
    type: Boolean,
    default: !1
  },
  headerAriaLevel: {
    type: String,
    default: "2"
  }
}), w7 = {
  open: () => !0,
  opened: () => !0,
  close: () => !0,
  closed: () => !0,
  [Vt]: (n) => xi(n),
  openAutoFocus: () => !0,
  closeAutoFocus: () => !0
}, x7 = (n, e) => {
  var t;
  const i = xt().emit, { nextZIndex: o } = GD();
  let s = "";
  const a = ll(), l = ll(), u = F(!1), c = F(!1), h = F(!1), f = F((t = n.zIndex) != null ? t : o());
  let d, p;
  const g = e_("namespace", Zm), v = B(() => {
    const E = {}, M = `--${g.value}-dialog`;
    return n.fullscreen || (n.top && (E[`${M}-margin-top`] = n.top), n.width && (E[`${M}-width`] = Fo(n.width))), E;
  }), m = B(() => n.alignCenter ? { display: "flex" } : {});
  function y() {
    i("opened");
  }
  function b() {
    i("closed"), i(Vt, !1), n.destroyOnClose && (h.value = !1);
  }
  function O() {
    i("close");
  }
  function w() {
    p == null || p(), d == null || d(), n.openDelay && n.openDelay > 0 ? { stop: d } = Qw(() => C(), n.openDelay) : C();
  }
  function x() {
    d == null || d(), p == null || p(), n.closeDelay && n.closeDelay > 0 ? { stop: p } = Qw(() => A(), n.closeDelay) : A();
  }
  function S() {
    function E(M) {
      M || (c.value = !0, u.value = !1);
    }
    n.beforeClose ? n.beforeClose(E) : x();
  }
  function _() {
    n.closeOnClickModal && S();
  }
  function C() {
    Ht && (u.value = !0);
  }
  function A() {
    u.value = !1;
  }
  function T() {
    i("openAutoFocus");
  }
  function k() {
    i("closeAutoFocus");
  }
  function L(E) {
    var M;
    ((M = E.detail) == null ? void 0 : M.focusReason) === "pointer" && E.preventDefault();
  }
  n.lockScroll && mj(u);
  function D() {
    n.closeOnPressEscape && S();
  }
  return de(() => n.modelValue, (E) => {
    E ? (c.value = !1, w(), h.value = !0, f.value = RG(n.zIndex) ? o() : f.value++, ut(() => {
      i("open"), e.value && (e.value.scrollTop = 0);
    })) : u.value && x();
  }), de(() => n.fullscreen, (E) => {
    e.value && (E ? (s = e.value.style.transform, e.value.style.transform = "") : e.value.style.transform = s);
  }), dt(() => {
    n.modelValue && (u.value = !0, h.value = !0, w());
  }), {
    afterEnter: y,
    afterLeave: b,
    beforeLeave: O,
    handleClose: S,
    onModalClick: _,
    close: x,
    doClose: A,
    onOpenAutoFocus: T,
    onCloseAutoFocus: k,
    onCloseRequested: D,
    onFocusoutPrevented: L,
    titleId: a,
    bodyId: l,
    closed: c,
    style: v,
    overlayDialogStyle: m,
    rendered: h,
    visible: u,
    zIndex: f
  };
}, n1e = ["aria-label", "aria-labelledby", "aria-describedby"], r1e = U({
  name: "ElDialog",
  inheritAttrs: !1
}), i1e = /* @__PURE__ */ U({
  ...r1e,
  props: O7,
  emits: w7,
  setup(n, { expose: e }) {
    const t = n, r = Hc();
    zf({
      scope: "el-dialog",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/dialog.html#slots"
    }, B(() => !!r.title));
    const i = Ie("dialog"), o = F(), s = F(), a = F(), {
      visible: l,
      titleId: u,
      bodyId: c,
      style: h,
      overlayDialogStyle: f,
      rendered: d,
      zIndex: p,
      afterEnter: g,
      afterLeave: v,
      beforeLeave: m,
      handleClose: y,
      onModalClick: b,
      onOpenAutoFocus: O,
      onCloseAutoFocus: w,
      onCloseRequested: x,
      onFocusoutPrevented: S
    } = x7(t, o);
    Jt(y7, {
      dialogRef: o,
      headerRef: s,
      bodyId: c,
      ns: i,
      rendered: d,
      style: h
    });
    const _ = ZD(b), C = B(() => t.draggable && !t.fullscreen);
    return e({
      visible: l,
      dialogContentRef: a
    }), (A, T) => (z(), ye(NS, {
      to: A.appendTo,
      disabled: A.appendTo !== "body" ? !1 : !A.appendToBody
    }, [
      pe(ml, {
        name: "dialog-fade",
        onAfterEnter: P(g),
        onAfterLeave: P(v),
        onBeforeLeave: P(m),
        persisted: ""
      }, {
        default: me(() => [
          zt(pe(P(tL), {
            "custom-mask-event": "",
            mask: A.modal,
            "overlay-class": A.modalClass,
            "z-index": P(p)
          }, {
            default: me(() => [
              J("div", {
                role: "dialog",
                "aria-modal": "true",
                "aria-label": A.title || void 0,
                "aria-labelledby": A.title ? void 0 : P(u),
                "aria-describedby": P(c),
                class: Z(`${P(i).namespace.value}-overlay-dialog`),
                style: pt(P(f)),
                onClick: T[0] || (T[0] = (...k) => P(_).onClick && P(_).onClick(...k)),
                onMousedown: T[1] || (T[1] = (...k) => P(_).onMousedown && P(_).onMousedown(...k)),
                onMouseup: T[2] || (T[2] = (...k) => P(_).onMouseup && P(_).onMouseup(...k))
              }, [
                pe(P(n_), {
                  loop: "",
                  trapped: P(l),
                  "focus-start-el": "container",
                  onFocusAfterTrapped: P(O),
                  onFocusAfterReleased: P(w),
                  onFocusoutPrevented: P(S),
                  onReleaseRequested: P(x)
                }, {
                  default: me(() => [
                    P(d) ? (z(), ye(t1e, ps({
                      key: 0,
                      ref_key: "dialogContentRef",
                      ref: a
                    }, A.$attrs, {
                      center: A.center,
                      "align-center": A.alignCenter,
                      "close-icon": A.closeIcon,
                      draggable: P(C),
                      overflow: A.overflow,
                      fullscreen: A.fullscreen,
                      "show-close": A.showClose,
                      title: A.title,
                      "aria-level": A.headerAriaLevel,
                      onClose: P(y)
                    }), jie({
                      header: me(() => [
                        A.$slots.title ? Ce(A.$slots, "title", { key: 1 }) : Ce(A.$slots, "header", {
                          key: 0,
                          close: P(y),
                          titleId: P(u),
                          titleClass: P(i).e("title")
                        })
                      ]),
                      default: me(() => [
                        Ce(A.$slots, "default")
                      ]),
                      _: 2
                    }, [
                      A.$slots.footer ? {
                        name: "footer",
                        fn: me(() => [
                          Ce(A.$slots, "footer")
                        ])
                      } : void 0
                    ]), 1040, ["center", "align-center", "close-icon", "draggable", "overflow", "fullscreen", "show-close", "title", "aria-level", "onClose"])) : he("v-if", !0)
                  ]),
                  _: 3
                }, 8, ["trapped", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])
              ], 46, n1e)
            ]),
            _: 3
          }, 8, ["mask", "overlay-class", "z-index"]), [
            [rr, P(l)]
          ])
        ]),
        _: 3
      }, 8, ["onAfterEnter", "onAfterLeave", "onBeforeLeave"])
    ], 8, ["to", "disabled"]));
  }
});
var o1e = /* @__PURE__ */ Ze(i1e, [["__file", "dialog.vue"]]);
const UVt = Bn(o1e), s1e = qe({
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  contentPosition: {
    type: String,
    values: ["left", "center", "right"],
    default: "center"
  },
  borderStyle: {
    type: ke(String),
    default: "solid"
  }
}), a1e = U({
  name: "ElDivider"
}), l1e = /* @__PURE__ */ U({
  ...a1e,
  props: s1e,
  setup(n) {
    const e = n, t = Ie("divider"), r = B(() => t.cssVar({
      "border-style": e.borderStyle
    }));
    return (i, o) => (z(), X("div", {
      class: Z([P(t).b(), P(t).m(i.direction)]),
      style: pt(P(r)),
      role: "separator"
    }, [
      i.$slots.default && i.direction !== "vertical" ? (z(), X("div", {
        key: 0,
        class: Z([P(t).e("text"), P(t).is(i.contentPosition)])
      }, [
        Ce(i.$slots, "default")
      ], 2)) : he("v-if", !0)
    ], 6));
  }
});
var u1e = /* @__PURE__ */ Ze(l1e, [["__file", "divider.vue"]]);
const KVt = Bn(u1e), c1e = qe({
  ...O7,
  direction: {
    type: String,
    default: "rtl",
    values: ["ltr", "rtl", "ttb", "btt"]
  },
  size: {
    type: [String, Number],
    default: "30%"
  },
  withHeader: {
    type: Boolean,
    default: !0
  },
  modalFade: {
    type: Boolean,
    default: !0
  },
  headerAriaLevel: {
    type: String,
    default: "2"
  }
}), h1e = w7, f1e = ["aria-label", "aria-labelledby", "aria-describedby"], d1e = ["id", "aria-level"], p1e = ["aria-label"], g1e = ["id"], v1e = U({
  name: "ElDrawer",
  inheritAttrs: !1
}), m1e = /* @__PURE__ */ U({
  ...v1e,
  props: c1e,
  emits: h1e,
  setup(n, { expose: e }) {
    const t = n, r = Hc();
    zf({
      scope: "el-drawer",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/drawer.html#slots"
    }, B(() => !!r.title));
    const i = F(), o = F(), s = Ie("drawer"), { t: a } = Wi(), {
      afterEnter: l,
      afterLeave: u,
      beforeLeave: c,
      visible: h,
      rendered: f,
      titleId: d,
      bodyId: p,
      onModalClick: g,
      onOpenAutoFocus: v,
      onCloseAutoFocus: m,
      onFocusoutPrevented: y,
      onCloseRequested: b,
      handleClose: O
    } = x7(t, i), w = B(() => t.direction === "rtl" || t.direction === "ltr"), x = B(() => Fo(t.size));
    return e({
      handleClose: O,
      afterEnter: l,
      afterLeave: u
    }), (S, _) => (z(), ye(NS, {
      to: "body",
      disabled: !S.appendToBody
    }, [
      pe(ml, {
        name: P(s).b("fade"),
        onAfterEnter: P(l),
        onAfterLeave: P(u),
        onBeforeLeave: P(c),
        persisted: ""
      }, {
        default: me(() => [
          zt(pe(P(tL), {
            mask: S.modal,
            "overlay-class": S.modalClass,
            "z-index": S.zIndex,
            onClick: P(g)
          }, {
            default: me(() => [
              pe(P(n_), {
                loop: "",
                trapped: P(h),
                "focus-trap-el": i.value,
                "focus-start-el": o.value,
                onFocusAfterTrapped: P(v),
                onFocusAfterReleased: P(m),
                onFocusoutPrevented: P(y),
                onReleaseRequested: P(b)
              }, {
                default: me(() => [
                  J("div", ps({
                    ref_key: "drawerRef",
                    ref: i,
                    "aria-modal": "true",
                    "aria-label": S.title || void 0,
                    "aria-labelledby": S.title ? void 0 : P(d),
                    "aria-describedby": P(p)
                  }, S.$attrs, {
                    class: [P(s).b(), S.direction, P(h) && "open"],
                    style: P(w) ? "width: " + P(x) : "height: " + P(x),
                    role: "dialog",
                    onClick: _[1] || (_[1] = en(() => {
                    }, ["stop"]))
                  }), [
                    J("span", {
                      ref_key: "focusStartRef",
                      ref: o,
                      class: Z(P(s).e("sr-focus")),
                      tabindex: "-1"
                    }, null, 2),
                    S.withHeader ? (z(), X("header", {
                      key: 0,
                      class: Z(P(s).e("header"))
                    }, [
                      S.$slots.title ? Ce(S.$slots, "title", { key: 1 }, () => [
                        he(" DEPRECATED SLOT ")
                      ]) : Ce(S.$slots, "header", {
                        key: 0,
                        close: P(O),
                        titleId: P(d),
                        titleClass: P(s).e("title")
                      }, () => [
                        S.$slots.title ? he("v-if", !0) : (z(), X("span", {
                          key: 0,
                          id: P(d),
                          role: "heading",
                          "aria-level": S.headerAriaLevel,
                          class: Z(P(s).e("title"))
                        }, Ke(S.title), 11, d1e))
                      ]),
                      S.showClose ? (z(), X("button", {
                        key: 2,
                        "aria-label": P(a)("el.drawer.close"),
                        class: Z(P(s).e("close-btn")),
                        type: "button",
                        onClick: _[0] || (_[0] = (...C) => P(O) && P(O)(...C))
                      }, [
                        pe(P(Dt), {
                          class: Z(P(s).e("close"))
                        }, {
                          default: me(() => [
                            pe(P(Oc))
                          ]),
                          _: 1
                        }, 8, ["class"])
                      ], 10, p1e)) : he("v-if", !0)
                    ], 2)) : he("v-if", !0),
                    P(f) ? (z(), X("div", {
                      key: 1,
                      id: P(p),
                      class: Z(P(s).e("body"))
                    }, [
                      Ce(S.$slots, "default")
                    ], 10, g1e)) : he("v-if", !0),
                    S.$slots.footer ? (z(), X("div", {
                      key: 2,
                      class: Z(P(s).e("footer"))
                    }, [
                      Ce(S.$slots, "footer")
                    ], 2)) : he("v-if", !0)
                  ], 16, f1e)
                ]),
                _: 3
              }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])
            ]),
            _: 3
          }, 8, ["mask", "overlay-class", "z-index", "onClick"]), [
            [rr, P(h)]
          ])
        ]),
        _: 3
      }, 8, ["name", "onAfterEnter", "onAfterLeave", "onBeforeLeave"])
    ], 8, ["disabled"]));
  }
});
var y1e = /* @__PURE__ */ Ze(m1e, [["__file", "drawer.vue"]]);
const JVt = Bn(y1e), b1e = /* @__PURE__ */ U({
  inheritAttrs: !1
});
function O1e(n, e, t, r, i, o) {
  return Ce(n.$slots, "default");
}
var w1e = /* @__PURE__ */ Ze(b1e, [["render", O1e], ["__file", "collection.vue"]]);
const x1e = /* @__PURE__ */ U({
  name: "ElCollectionItem",
  inheritAttrs: !1
});
function S1e(n, e, t, r, i, o) {
  return Ce(n.$slots, "default");
}
var _1e = /* @__PURE__ */ Ze(x1e, [["render", S1e], ["__file", "collection-item.vue"]]);
const C1e = "data-el-collection-item", A1e = (n) => {
  const e = `El${n}Collection`, t = `${e}Item`, r = Symbol(e), i = Symbol(t), o = {
    ...w1e,
    name: e,
    setup() {
      const a = F(null), l = /* @__PURE__ */ new Map();
      Jt(r, {
        itemMap: l,
        getItems: () => {
          const c = P(a);
          if (!c)
            return [];
          const h = Array.from(c.querySelectorAll(`[${C1e}]`));
          return [...l.values()].sort((d, p) => h.indexOf(d.ref) - h.indexOf(p.ref));
        },
        collectionRef: a
      });
    }
  }, s = {
    ..._1e,
    name: t,
    setup(a, { attrs: l }) {
      const u = F(null), c = $e(r, void 0);
      Jt(i, {
        collectionItemRef: u
      }), dt(() => {
        const h = P(u);
        h && c.itemMap.set(h, {
          ref: h,
          ...l
        });
      }), hi(() => {
        const h = P(u);
        c.itemMap.delete(h);
      });
    }
  };
  return {
    COLLECTION_INJECTION_KEY: r,
    COLLECTION_ITEM_INJECTION_KEY: i,
    ElCollection: o,
    ElCollectionItem: s
  };
}, YC = qe({
  trigger: Ny.trigger,
  effect: {
    ...To.effect,
    default: "light"
  },
  type: {
    type: ke(String)
  },
  placement: {
    type: ke(String),
    default: "bottom"
  },
  popperOptions: {
    type: ke(Object),
    default: () => ({})
  },
  id: String,
  size: {
    type: String,
    default: ""
  },
  splitButton: Boolean,
  hideOnClick: {
    type: Boolean,
    default: !0
  },
  loop: {
    type: Boolean,
    default: !0
  },
  showTimeout: {
    type: Number,
    default: 150
  },
  hideTimeout: {
    type: Number,
    default: 150
  },
  tabindex: {
    type: ke([Number, String]),
    default: 0
  },
  maxHeight: {
    type: ke([Number, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  role: {
    type: String,
    default: "menu"
  },
  buttonProps: {
    type: ke(Object)
  },
  teleported: To.teleported
});
qe({
  command: {
    type: [Object, String, Number],
    default: () => ({})
  },
  disabled: Boolean,
  divided: Boolean,
  textValue: String,
  icon: {
    type: Vr
  }
});
qe({
  onKeydown: { type: ke(Function) }
});
A1e("Dropdown");
const T1e = qe({
  id: {
    type: String,
    default: void 0
  },
  step: {
    type: Number,
    default: 1
  },
  stepStrictly: Boolean,
  max: {
    type: Number,
    default: Number.POSITIVE_INFINITY
  },
  min: {
    type: Number,
    default: Number.NEGATIVE_INFINITY
  },
  modelValue: Number,
  readonly: Boolean,
  disabled: Boolean,
  size: pa,
  controls: {
    type: Boolean,
    default: !0
  },
  controlsPosition: {
    type: String,
    default: "",
    values: ["", "right"]
  },
  valueOnClear: {
    type: [String, Number, null],
    validator: (n) => n === null || mt(n) || ["min", "max"].includes(n),
    default: null
  },
  name: String,
  label: String,
  placeholder: String,
  precision: {
    type: Number,
    validator: (n) => n >= 0 && n === Number.parseInt(`${n}`, 10)
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), P1e = {
  [ia]: (n, e) => e !== n,
  blur: (n) => n instanceof FocusEvent,
  focus: (n) => n instanceof FocusEvent,
  [wf]: (n) => mt(n) || No(n),
  [Vt]: (n) => mt(n) || No(n)
}, E1e = ["aria-label", "onKeydown"], k1e = ["aria-label", "onKeydown"], M1e = U({
  name: "ElInputNumber"
}), D1e = /* @__PURE__ */ U({
  ...M1e,
  props: T1e,
  emits: P1e,
  setup(n, { expose: e, emit: t }) {
    const r = n, { t: i } = Wi(), o = Ie("input-number"), s = F(), a = Si({
      currentValue: r.modelValue,
      userInput: null
    }), { formItem: l } = yl(), u = B(() => mt(r.modelValue) && r.modelValue <= r.min), c = B(() => mt(r.modelValue) && r.modelValue >= r.max), h = B(() => {
      const E = m(r.step);
      return Io(r.precision) ? Math.max(m(r.modelValue), E) : (E > r.precision && jt("InputNumber", "precision should not be less than the decimal places of step"), r.precision);
    }), f = B(() => r.controls && r.controlsPosition === "right"), d = Qo(), p = Uc(), g = B(() => {
      if (a.userInput !== null)
        return a.userInput;
      let E = a.currentValue;
      if (No(E))
        return "";
      if (mt(E)) {
        if (Number.isNaN(E))
          return "";
        Io(r.precision) || (E = E.toFixed(r.precision));
      }
      return E;
    }), v = (E, M) => {
      if (Io(M) && (M = h.value), M === 0)
        return Math.round(E);
      let R = String(E);
      const N = R.indexOf(".");
      if (N === -1 || !R.replace(".", "").split("")[N + M])
        return E;
      const H = R.length;
      return R.charAt(H - 1) === "5" && (R = `${R.slice(0, Math.max(0, H - 1))}6`), Number.parseFloat(Number(R).toFixed(M));
    }, m = (E) => {
      if (No(E))
        return 0;
      const M = E.toString(), R = M.indexOf(".");
      let N = 0;
      return R !== -1 && (N = M.length - R - 1), N;
    }, y = (E, M = 1) => mt(E) ? v(E + r.step * M) : a.currentValue, b = () => {
      if (r.readonly || p.value || c.value)
        return;
      const E = Number(g.value) || 0, M = y(E);
      x(M), t(wf, a.currentValue), L();
    }, O = () => {
      if (r.readonly || p.value || u.value)
        return;
      const E = Number(g.value) || 0, M = y(E, -1);
      x(M), t(wf, a.currentValue), L();
    }, w = (E, M) => {
      const { max: R, min: N, step: $, precision: V, stepStrictly: H, valueOnClear: G } = r;
      R < N && du("InputNumber", "min should not be greater than max.");
      let q = Number(E);
      if (No(E) || Number.isNaN(q))
        return null;
      if (E === "") {
        if (G === null)
          return null;
        q = qt(G) ? { min: N, max: R }[G] : G;
      }
      return H && (q = v(Math.round(q / $) * $, V)), Io(V) || (q = v(q, V)), (q > R || q < N) && (q = q > R ? R : N, M && t(Vt, q)), q;
    }, x = (E, M = !0) => {
      var R;
      const N = a.currentValue, $ = w(E);
      if (!M) {
        t(Vt, $);
        return;
      }
      N !== $ && (a.userInput = null, t(Vt, $), t(ia, $, N), r.validateEvent && ((R = l == null ? void 0 : l.validate) == null || R.call(l, "change").catch((V) => jt(V))), a.currentValue = $);
    }, S = (E) => {
      a.userInput = E;
      const M = E === "" ? null : Number(E);
      t(wf, M), x(M, !1);
    }, _ = (E) => {
      const M = E !== "" ? Number(E) : "";
      (mt(M) && !Number.isNaN(M) || E === "") && x(M), L(), a.userInput = null;
    }, C = () => {
      var E, M;
      (M = (E = s.value) == null ? void 0 : E.focus) == null || M.call(E);
    }, A = () => {
      var E, M;
      (M = (E = s.value) == null ? void 0 : E.blur) == null || M.call(E);
    }, T = (E) => {
      t("focus", E);
    }, k = (E) => {
      var M;
      a.userInput = null, t("blur", E), r.validateEvent && ((M = l == null ? void 0 : l.validate) == null || M.call(l, "blur").catch((R) => jt(R)));
    }, L = () => {
      a.currentValue !== r.modelValue && (a.currentValue = r.modelValue);
    }, D = (E) => {
      document.activeElement === E.target && E.preventDefault();
    };
    return de(() => r.modelValue, (E, M) => {
      const R = w(E, !0);
      a.userInput === null && R !== M && (a.currentValue = R);
    }, { immediate: !0 }), dt(() => {
      var E;
      const { min: M, max: R, modelValue: N } = r, $ = (E = s.value) == null ? void 0 : E.input;
      if ($.setAttribute("role", "spinbutton"), Number.isFinite(R) ? $.setAttribute("aria-valuemax", String(R)) : $.removeAttribute("aria-valuemax"), Number.isFinite(M) ? $.setAttribute("aria-valuemin", String(M)) : $.removeAttribute("aria-valuemin"), $.setAttribute("aria-valuenow", a.currentValue || a.currentValue === 0 ? String(a.currentValue) : ""), $.setAttribute("aria-disabled", String(p.value)), !mt(N) && N != null) {
        let V = Number(N);
        Number.isNaN(V) && (V = null), t(Vt, V);
      }
    }), H0(() => {
      var E, M;
      const R = (E = s.value) == null ? void 0 : E.input;
      R == null || R.setAttribute("aria-valuenow", `${(M = a.currentValue) != null ? M : ""}`);
    }), e({
      focus: C,
      blur: A
    }), (E, M) => (z(), X("div", {
      class: Z([
        P(o).b(),
        P(o).m(P(d)),
        P(o).is("disabled", P(p)),
        P(o).is("without-controls", !E.controls),
        P(o).is("controls-right", P(f))
      ]),
      onDragstart: M[0] || (M[0] = en(() => {
      }, ["prevent"]))
    }, [
      E.controls ? zt((z(), X("span", {
        key: 0,
        role: "button",
        "aria-label": P(i)("el.inputNumber.decrease"),
        class: Z([P(o).e("decrease"), P(o).is("disabled", P(u))]),
        onKeydown: Nr(O, ["enter"])
      }, [
        pe(P(Dt), null, {
          default: me(() => [
            P(f) ? (z(), ye(P(HS), { key: 0 })) : (z(), ye(P(Jfe), { key: 1 }))
          ]),
          _: 1
        })
      ], 42, E1e)), [
        [P(A3), O]
      ]) : he("v-if", !0),
      E.controls ? zt((z(), X("span", {
        key: 1,
        role: "button",
        "aria-label": P(i)("el.inputNumber.increase"),
        class: Z([P(o).e("increase"), P(o).is("disabled", P(c))]),
        onKeydown: Nr(b, ["enter"])
      }, [
        pe(P(Dt), null, {
          default: me(() => [
            P(f) ? (z(), ye(P(WG), { key: 0 })) : (z(), ye(P(qG), { key: 1 }))
          ]),
          _: 1
        })
      ], 42, k1e)), [
        [P(A3), b]
      ]) : he("v-if", !0),
      pe(P(ob), {
        id: E.id,
        ref_key: "input",
        ref: s,
        type: "number",
        step: E.step,
        "model-value": P(g),
        placeholder: E.placeholder,
        readonly: E.readonly,
        disabled: P(p),
        size: P(d),
        max: E.max,
        min: E.min,
        name: E.name,
        label: E.label,
        "validate-event": !1,
        onWheel: D,
        onKeydown: [
          Nr(en(b, ["prevent"]), ["up"]),
          Nr(en(O, ["prevent"]), ["down"])
        ],
        onBlur: k,
        onFocus: T,
        onInput: S,
        onChange: _
      }, null, 8, ["id", "step", "model-value", "placeholder", "readonly", "disabled", "size", "max", "min", "name", "label", "onKeydown"])
    ], 34));
  }
});
var L1e = /* @__PURE__ */ Ze(D1e, [["__file", "input-number.vue"]]);
const e4t = Bn(L1e), S7 = Symbol("elPaginationKey"), I1e = qe({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  prevText: {
    type: String
  },
  prevIcon: {
    type: Vr
  }
}), R1e = {
  click: (n) => n instanceof MouseEvent
}, $1e = ["disabled", "aria-label", "aria-disabled"], N1e = { key: 0 }, B1e = U({
  name: "ElPaginationPrev"
}), V1e = /* @__PURE__ */ U({
  ...B1e,
  props: I1e,
  emits: R1e,
  setup(n) {
    const e = n, { t } = Wi(), r = B(() => e.disabled || e.currentPage <= 1);
    return (i, o) => (z(), X("button", {
      type: "button",
      class: "btn-prev",
      disabled: P(r),
      "aria-label": i.prevText || P(t)("el.pagination.prev"),
      "aria-disabled": P(r),
      onClick: o[0] || (o[0] = (s) => i.$emit("click", s))
    }, [
      i.prevText ? (z(), X("span", N1e, Ke(i.prevText), 1)) : (z(), ye(P(Dt), { key: 1 }, {
        default: me(() => [
          (z(), ye(cn(i.prevIcon)))
        ]),
        _: 1
      }))
    ], 8, $1e));
  }
});
var z1e = /* @__PURE__ */ Ze(V1e, [["__file", "prev.vue"]]);
const F1e = qe({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    default: 50
  },
  nextText: {
    type: String
  },
  nextIcon: {
    type: Vr
  }
}), Q1e = ["disabled", "aria-label", "aria-disabled"], Z1e = { key: 0 }, W1e = U({
  name: "ElPaginationNext"
}), G1e = /* @__PURE__ */ U({
  ...W1e,
  props: F1e,
  emits: ["click"],
  setup(n) {
    const e = n, { t } = Wi(), r = B(() => e.disabled || e.currentPage === e.pageCount || e.pageCount === 0);
    return (i, o) => (z(), X("button", {
      type: "button",
      class: "btn-next",
      disabled: P(r),
      "aria-label": i.nextText || P(t)("el.pagination.next"),
      "aria-disabled": P(r),
      onClick: o[0] || (o[0] = (s) => i.$emit("click", s))
    }, [
      i.nextText ? (z(), X("span", Z1e, Ke(i.nextText), 1)) : (z(), ye(P(Dt), { key: 1 }, {
        default: me(() => [
          (z(), ye(cn(i.nextIcon)))
        ]),
        _: 1
      }))
    ], 8, Q1e));
  }
});
var j1e = /* @__PURE__ */ Ze(G1e, [["__file", "next.vue"]]);
const _7 = Symbol("ElSelectGroup"), r_ = Symbol("ElSelect");
function H1e(n, e) {
  const t = $e(r_), r = $e(_7, { disabled: !1 }), i = B(() => t.props.multiple ? c(t.props.modelValue, n.value) : c([t.props.modelValue], n.value)), o = B(() => {
    if (t.props.multiple) {
      const d = t.props.modelValue || [];
      return !i.value && d.length >= t.props.multipleLimit && t.props.multipleLimit > 0;
    } else
      return !1;
  }), s = B(() => n.label || (ti(n.value) ? "" : n.value)), a = B(() => n.value || n.label || ""), l = B(() => n.disabled || e.groupDisabled || o.value), u = xt(), c = (d = [], p) => {
    if (ti(n.value)) {
      const g = t.props.valueKey;
      return d && d.some((v) => Iw(as(v, g)) === as(p, g));
    } else
      return d && d.includes(p);
  }, h = () => {
    !n.disabled && !r.disabled && (t.states.hoveringIndex = t.optionsArray.indexOf(u.proxy));
  }, f = (d) => {
    const p = new RegExp(Zpe(d), "i");
    e.visible = p.test(s.value) || n.created;
  };
  return de(() => s.value, () => {
    !n.created && !t.props.remote && t.setSelected();
  }), de(() => n.value, (d, p) => {
    const { remote: g, valueKey: v } = t.props;
    if (wi(d, p) || (t.onOptionDestroy(p, u.proxy), t.onOptionCreate(u.proxy)), !n.created && !g) {
      if (v && ti(d) && ti(p) && d[v] === p[v])
        return;
      t.setSelected();
    }
  }), de(() => r.disabled, () => {
    e.groupDisabled = r.disabled;
  }, { immediate: !0 }), {
    select: t,
    currentLabel: s,
    currentValue: a,
    itemSelected: i,
    isDisabled: l,
    hoverItem: h,
    updateOption: f
  };
}
const q1e = U({
  name: "ElOption",
  componentName: "ElOption",
  props: {
    value: {
      required: !0,
      type: [String, Number, Boolean, Object]
    },
    label: [String, Number],
    created: Boolean,
    disabled: Boolean
  },
  setup(n) {
    const e = Ie("select"), t = ll(), r = B(() => [
      e.be("dropdown", "item"),
      e.is("disabled", P(a)),
      e.is("selected", P(s)),
      e.is("hovering", P(f))
    ]), i = Si({
      index: -1,
      groupDisabled: !1,
      visible: !0,
      hover: !1
    }), {
      currentLabel: o,
      itemSelected: s,
      isDisabled: a,
      select: l,
      hoverItem: u,
      updateOption: c
    } = H1e(n, i), { visible: h, hover: f } = jc(i), d = xt().proxy;
    l.onOptionCreate(d), hi(() => {
      const g = d.value, { selected: v } = l.states, y = (l.props.multiple ? v : [v]).some((b) => b.value === d.value);
      ut(() => {
        l.states.cachedOptions.get(g) === d && !y && l.states.cachedOptions.delete(g);
      }), l.onOptionDestroy(g, d);
    });
    function p() {
      n.disabled !== !0 && i.groupDisabled !== !0 && l.handleOptionSelect(d);
    }
    return {
      ns: e,
      id: t,
      containerKls: r,
      currentLabel: o,
      itemSelected: s,
      isDisabled: a,
      select: l,
      hoverItem: u,
      updateOption: c,
      visible: h,
      hover: f,
      selectOptionClick: p,
      states: i
    };
  }
}), Y1e = ["id", "aria-disabled", "aria-selected"];
function X1e(n, e, t, r, i, o) {
  return zt((z(), X("li", {
    id: n.id,
    class: Z(n.containerKls),
    role: "option",
    "aria-disabled": n.isDisabled || void 0,
    "aria-selected": n.itemSelected,
    onMouseenter: e[0] || (e[0] = (...s) => n.hoverItem && n.hoverItem(...s)),
    onClick: e[1] || (e[1] = en((...s) => n.selectOptionClick && n.selectOptionClick(...s), ["stop"]))
  }, [
    Ce(n.$slots, "default", {}, () => [
      J("span", null, Ke(n.currentLabel), 1)
    ])
  ], 42, Y1e)), [
    [rr, n.visible]
  ]);
}
var nL = /* @__PURE__ */ Ze(q1e, [["render", X1e], ["__file", "option.vue"]]);
const U1e = U({
  name: "ElSelectDropdown",
  componentName: "ElSelectDropdown",
  setup() {
    const n = $e(r_), e = Ie("select"), t = B(() => n.props.popperClass), r = B(() => n.props.multiple), i = B(() => n.props.fitInputWidth), o = F("");
    function s() {
      var a;
      o.value = `${(a = n.selectRef) == null ? void 0 : a.offsetWidth}px`;
    }
    return dt(() => {
      s(), Ri(n.selectRef, s);
    }), {
      ns: e,
      minWidth: o,
      popperClass: t,
      isMultiple: r,
      isFitInputWidth: i
    };
  }
});
function K1e(n, e, t, r, i, o) {
  return z(), X("div", {
    class: Z([n.ns.b("dropdown"), n.ns.is("multiple", n.isMultiple), n.popperClass]),
    style: pt({ [n.isFitInputWidth ? "width" : "minWidth"]: n.minWidth })
  }, [
    n.$slots.header ? (z(), X("div", {
      key: 0,
      class: Z(n.ns.be("dropdown", "header"))
    }, [
      Ce(n.$slots, "header")
    ], 2)) : he("v-if", !0),
    Ce(n.$slots, "default"),
    n.$slots.footer ? (z(), X("div", {
      key: 1,
      class: Z(n.ns.be("dropdown", "footer"))
    }, [
      Ce(n.$slots, "footer")
    ], 2)) : he("v-if", !0)
  ], 6);
}
var J1e = /* @__PURE__ */ Ze(U1e, [["render", K1e], ["__file", "select-dropdown.vue"]]);
function eOe(n) {
  const e = F(!1);
  return {
    handleCompositionStart: () => {
      e.value = !0;
    },
    handleCompositionUpdate: (o) => {
      const s = o.target.value, a = s[s.length - 1] || "";
      e.value = !uj(a);
    },
    handleCompositionEnd: (o) => {
      e.value && (e.value = !1, wn(n) && n(o));
    }
  };
}
const tOe = 11, nOe = (n, e) => {
  const { t } = Wi(), r = ll(), i = Ie("select"), o = Ie("input"), s = Si({
    inputValue: "",
    options: /* @__PURE__ */ new Map(),
    cachedOptions: /* @__PURE__ */ new Map(),
    disabledOptions: /* @__PURE__ */ new Map(),
    optionValues: [],
    selected: n.multiple ? [] : {},
    selectionWidth: 0,
    calculatorWidth: 0,
    collapseItemWidth: 0,
    selectedLabel: "",
    hoveringIndex: -1,
    previousQuery: null,
    inputHovering: !1,
    menuVisibleOnFocus: !1,
    isBeforeHide: !1
  });
  zf({
    from: "suffixTransition",
    replacement: "override style scheme",
    version: "2.3.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/select.html#select-attributes"
  }, B(() => n.suffixTransition === !1));
  const a = F(null), l = F(null), u = F(null), c = F(null), h = F(null), f = F(null), d = F(null), p = F(null), g = F(null), v = F(null), m = F(null), y = F(null), { wrapperRef: b, isFocused: O, handleFocus: w, handleBlur: x } = jD(h, {
    afterFocus() {
      n.automaticDropdown && !S.value && (S.value = !0, s.menuVisibleOnFocus = !0);
    },
    beforeBlur(le) {
      var Ae, an;
      return ((Ae = u.value) == null ? void 0 : Ae.isFocusInsideContent(le)) || ((an = c.value) == null ? void 0 : an.isFocusInsideContent(le));
    },
    afterBlur() {
      S.value = !1, s.menuVisibleOnFocus = !1;
    }
  }), S = F(!1), _ = F(), { form: C, formItem: A } = yl(), { inputId: T } = dd(n, {
    formItemContext: A
  }), k = B(() => n.disabled || (C == null ? void 0 : C.disabled)), L = B(() => n.multiple ? Gn(n.modelValue) && n.modelValue.length > 0 : n.modelValue !== void 0 && n.modelValue !== null && n.modelValue !== ""), D = B(() => n.clearable && !k.value && s.inputHovering && L.value), E = B(() => n.remote && n.filterable && !n.remoteShowSuffix ? "" : n.suffixIcon), M = B(() => i.is("reverse", E.value && S.value && n.suffixTransition)), R = B(() => (A == null ? void 0 : A.validateState) || ""), N = B(() => sj[R.value]), $ = B(() => n.remote ? 300 : 0), V = B(() => n.loading ? n.loadingText || t("el.select.loading") : n.remote && !s.inputValue && s.options.size === 0 ? !1 : n.filterable && s.inputValue && s.options.size > 0 && H.value === 0 ? n.noMatchText || t("el.select.noMatch") : s.options.size === 0 ? n.noDataText || t("el.select.noData") : null), H = B(() => G.value.filter((le) => le.visible).length), G = B(() => {
    const le = Array.from(s.options.values()), Ae = [];
    return s.optionValues.forEach((an) => {
      const Un = le.findIndex((wu) => wu.value === an);
      Un > -1 && Ae.push(le[Un]);
    }), Ae.length >= le.length ? Ae : le;
  }), q = B(() => Array.from(s.cachedOptions.values())), Y = B(() => {
    const le = G.value.filter((Ae) => !Ae.created).some((Ae) => Ae.currentLabel === s.inputValue);
    return n.filterable && n.allowCreate && s.inputValue !== "" && !le;
  }), ie = () => {
    n.filterable && wn(n.filterMethod) || n.filterable && n.remote && wn(n.remoteMethod) || G.value.forEach((le) => {
      le.updateOption(s.inputValue);
    });
  }, se = Qo(), K = B(() => ["small"].includes(se.value) ? "small" : "default"), re = B({
    get() {
      return S.value && V.value !== !1;
    },
    set(le) {
      S.value = le;
    }
  }), ge = B(() => Gn(n.modelValue) ? n.modelValue.length === 0 && !s.inputValue : n.filterable ? !s.inputValue : !0), ne = B(() => {
    var le;
    const Ae = (le = n.placeholder) != null ? le : t("el.select.placeholder");
    return n.multiple || !L.value ? Ae : s.selectedLabel;
  });
  de(() => n.modelValue, (le, Ae) => {
    n.multiple && n.filterable && !n.reserveKeyword && (s.inputValue = "", ue("")), gt(), !wi(le, Ae) && n.validateEvent && (A == null || A.validate("change").catch((an) => jt(an)));
  }, {
    flush: "post",
    deep: !0
  }), de(() => S.value, (le) => {
    le ? ue(s.inputValue) : (s.inputValue = "", s.previousQuery = null, s.isBeforeHide = !0), e("visible-change", le);
  }), de(() => s.options.entries(), () => {
    var le;
    if (!Ht)
      return;
    const Ae = ((le = a.value) == null ? void 0 : le.querySelectorAll("input")) || [];
    (!n.filterable && !n.defaultFirstOption && !Io(n.modelValue) || !Array.from(Ae).includes(document.activeElement)) && gt(), n.defaultFirstOption && (n.filterable || n.remote) && H.value && xe();
  }, {
    flush: "post"
  }), de(() => s.hoveringIndex, (le) => {
    mt(le) && le > -1 ? _.value = G.value[le] || {} : _.value = {}, G.value.forEach((Ae) => {
      Ae.hover = _.value === Ae;
    });
  }), Ua(() => {
    s.isBeforeHide || ie();
  });
  const ue = (le) => {
    s.previousQuery !== le && (s.previousQuery = le, n.filterable && wn(n.filterMethod) ? n.filterMethod(le) : n.filterable && n.remote && wn(n.remoteMethod) && n.remoteMethod(le), n.defaultFirstOption && (n.filterable || n.remote) && H.value ? ut(xe) : ut(It));
  }, xe = () => {
    const le = G.value.filter((Un) => Un.visible && !Un.disabled && !Un.states.groupDisabled), Ae = le.find((Un) => Un.created), an = le[0];
    s.hoveringIndex = We(G.value, Ae || an);
  }, gt = () => {
    if (n.multiple)
      s.selectedLabel = "";
    else {
      const Ae = He(n.modelValue);
      s.selectedLabel = Ae.currentLabel, s.selected = Ae;
      return;
    }
    const le = [];
    Gn(n.modelValue) && n.modelValue.forEach((Ae) => {
      le.push(He(Ae));
    }), s.selected = le;
  }, He = (le) => {
    let Ae;
    const an = VC(le).toLowerCase() === "object", Un = VC(le).toLowerCase() === "null", wu = VC(le).toLowerCase() === "undefined";
    for (let sh = s.cachedOptions.size - 1; sh >= 0; sh--) {
      const Oa = q.value[sh];
      if (an ? as(Oa.value, n.valueKey) === as(le, n.valueKey) : Oa.value === le) {
        Ae = {
          value: le,
          currentLabel: Oa.currentLabel,
          isDisabled: Oa.isDisabled
        };
        break;
      }
    }
    if (Ae)
      return Ae;
    const Pd = an ? le.label : !Un && !wu ? le : "";
    return {
      value: le,
      currentLabel: Pd
    };
  }, It = () => {
    n.multiple ? s.selected.length > 0 ? s.hoveringIndex = Math.min(...s.selected.map((le) => G.value.findIndex((Ae) => Tv(Ae) === Tv(le)))) : s.hoveringIndex = -1 : s.hoveringIndex = G.value.findIndex((le) => Tv(le) === Tv(s.selected));
  }, Rt = () => {
    s.selectionWidth = l.value.getBoundingClientRect().width;
  }, pn = () => {
    s.calculatorWidth = f.value.getBoundingClientRect().width;
  }, Xn = () => {
    s.collapseItemWidth = m.value.getBoundingClientRect().width;
  }, Dn = () => {
    var le, Ae;
    (Ae = (le = u.value) == null ? void 0 : le.updatePopper) == null || Ae.call(le);
  }, yr = () => {
    var le, Ae;
    (Ae = (le = c.value) == null ? void 0 : le.updatePopper) == null || Ae.call(le);
  }, ur = () => {
    s.inputValue.length > 0 && !S.value && (S.value = !0), ue(s.inputValue);
  }, vo = (le) => {
    if (s.inputValue = le.target.value, n.remote)
      mo();
    else
      return ur();
  }, mo = Vf(() => {
    ur();
  }, $.value), ji = (le) => {
    wi(n.modelValue, le) || e(ia, le);
  }, ve = (le) => khe(le, (Ae) => !s.disabledOptions.has(Ae)), yt = (le) => {
    if (n.multiple && le.code !== ii.delete && le.target.value.length <= 0) {
      const Ae = n.modelValue.slice(), an = ve(Ae);
      if (an < 0)
        return;
      Ae.splice(an, 1), e(Vt, Ae), ji(Ae);
    }
  }, Ln = (le, Ae) => {
    const an = s.selected.indexOf(Ae);
    if (an > -1 && !k.value) {
      const Un = n.modelValue.slice();
      Un.splice(an, 1), e(Vt, Un), ji(Un), e("remove-tag", Ae.value);
    }
    le.stopPropagation(), Ad();
  }, Ms = (le) => {
    le.stopPropagation();
    const Ae = n.multiple ? [] : "";
    if (!qt(Ae))
      for (const an of s.selected)
        an.isDisabled && Ae.push(an.value);
    e(Vt, Ae), ji(Ae), s.hoveringIndex = -1, S.value = !1, e("clear"), Ad();
  }, Cd = (le) => {
    if (n.multiple) {
      const Ae = (n.modelValue || []).slice(), an = We(Ae, le.value);
      an > -1 ? Ae.splice(an, 1) : (n.multipleLimit <= 0 || Ae.length < n.multipleLimit) && Ae.push(le.value), e(Vt, Ae), ji(Ae), le.created && ue(""), n.filterable && !n.reserveKeyword && (s.inputValue = "");
    } else
      e(Vt, le.value), ji(le.value), S.value = !1;
    Ad(), !S.value && ut(() => {
      st(le);
    });
  }, We = (le = [], Ae) => {
    if (!ti(Ae))
      return le.indexOf(Ae);
    const an = n.valueKey;
    let Un = -1;
    return le.some((wu, Pd) => Iw(as(wu, an)) === as(Ae, an) ? (Un = Pd, !0) : !1), Un;
  }, st = (le) => {
    var Ae, an, Un, wu, Pd;
    const zb = Gn(le) ? le[0] : le;
    let sh = null;
    if (zb != null && zb.value) {
      const Oa = G.value.filter((Z$) => Z$.value === zb.value);
      Oa.length > 0 && (sh = Oa[0].$el);
    }
    if (u.value && sh) {
      const Oa = (wu = (Un = (an = (Ae = u.value) == null ? void 0 : Ae.popperRef) == null ? void 0 : an.contentRef) == null ? void 0 : Un.querySelector) == null ? void 0 : wu.call(Un, `.${i.be("dropdown", "wrap")}`);
      Oa && Hpe(Oa, sh);
    }
    (Pd = y.value) == null || Pd.handleScroll();
  }, $t = (le) => {
    s.options.set(le.value, le), s.cachedOptions.set(le.value, le), le.disabled && s.disabledOptions.set(le.value, le);
  }, Pt = (le, Ae) => {
    s.options.get(le) === Ae && s.options.delete(le);
  }, {
    handleCompositionStart: sn,
    handleCompositionUpdate: Dr,
    handleCompositionEnd: Hi
  } = eOe((le) => vo(le)), Ou = B(() => {
    var le, Ae;
    return (Ae = (le = u.value) == null ? void 0 : le.popperRef) == null ? void 0 : Ae.contentRef;
  }), Ds = () => {
    ut(() => st(s.selected));
  }, Ad = () => {
    var le;
    (le = h.value) == null || le.focus();
  }, kC = () => {
    Td();
  }, MC = (le) => {
    Ms(le);
  }, Td = (le) => {
    if (S.value = !1, O.value) {
      const Ae = new FocusEvent("focus", le);
      ut(() => x(Ae));
    }
  }, DC = () => {
    s.inputValue.length > 0 ? s.inputValue = "" : S.value = !1;
  }, F$ = () => {
    k.value || (s.menuVisibleOnFocus ? s.menuVisibleOnFocus = !1 : S.value = !S.value);
  }, kie = () => {
    S.value ? G.value[s.hoveringIndex] && Cd(G.value[s.hoveringIndex]) : F$();
  }, Tv = (le) => ti(le.value) ? as(le.value, n.valueKey) : le.value, Mie = B(() => G.value.filter((le) => le.visible).every((le) => le.disabled)), Die = B(() => n.multiple ? n.collapseTags ? s.selected.slice(0, n.maxCollapseTags) : s.selected : []), Lie = B(() => n.multiple ? n.collapseTags ? s.selected.slice(n.maxCollapseTags) : [] : []), Q$ = (le) => {
    if (!S.value) {
      S.value = !0;
      return;
    }
    if (!(s.options.size === 0 || H.value === 0) && !Mie.value) {
      le === "next" ? (s.hoveringIndex++, s.hoveringIndex === s.options.size && (s.hoveringIndex = 0)) : le === "prev" && (s.hoveringIndex--, s.hoveringIndex < 0 && (s.hoveringIndex = s.options.size - 1));
      const Ae = G.value[s.hoveringIndex];
      (Ae.disabled === !0 || Ae.states.groupDisabled === !0 || !Ae.visible) && Q$(le), ut(() => st(_.value));
    }
  }, Iie = () => {
    if (!l.value)
      return 0;
    const le = window.getComputedStyle(l.value);
    return Number.parseFloat(le.gap || "6px");
  }, Rie = B(() => {
    const le = Iie();
    return { maxWidth: `${m.value && n.maxCollapseTags === 1 ? s.selectionWidth - s.collapseItemWidth - le : s.selectionWidth}px` };
  }), $ie = B(() => ({ maxWidth: `${s.selectionWidth}px` })), Nie = B(() => ({
    width: `${Math.max(s.calculatorWidth, tOe)}px`
  }));
  return n.multiple && !Gn(n.modelValue) && e(Vt, []), !n.multiple && Gn(n.modelValue) && e(Vt, ""), Ri(l, Rt), Ri(f, pn), Ri(g, Dn), Ri(b, Dn), Ri(v, yr), Ri(m, Xn), dt(() => {
    gt();
  }), {
    inputId: T,
    contentId: r,
    nsSelect: i,
    nsInput: o,
    states: s,
    isFocused: O,
    expanded: S,
    optionsArray: G,
    hoverOption: _,
    selectSize: se,
    filteredOptionsCount: H,
    resetCalculatorWidth: pn,
    updateTooltip: Dn,
    updateTagTooltip: yr,
    debouncedOnInputChange: mo,
    onInput: vo,
    deletePrevTag: yt,
    deleteTag: Ln,
    deleteSelected: Ms,
    handleOptionSelect: Cd,
    scrollToOption: st,
    hasModelValue: L,
    shouldShowPlaceholder: ge,
    currentPlaceholder: ne,
    showClose: D,
    iconComponent: E,
    iconReverse: M,
    validateState: R,
    validateIcon: N,
    showNewOption: Y,
    updateOptions: ie,
    collapseTagSize: K,
    setSelected: gt,
    selectDisabled: k,
    emptyText: V,
    handleCompositionStart: sn,
    handleCompositionUpdate: Dr,
    handleCompositionEnd: Hi,
    onOptionCreate: $t,
    onOptionDestroy: Pt,
    handleMenuEnter: Ds,
    handleFocus: w,
    focus: Ad,
    blur: kC,
    handleBlur: x,
    handleClearClick: MC,
    handleClickOutside: Td,
    handleEsc: DC,
    toggleMenu: F$,
    selectOption: kie,
    getValueKey: Tv,
    navigateOptions: Q$,
    dropdownMenuVisible: re,
    showTagList: Die,
    collapseTagList: Lie,
    tagStyle: Rie,
    collapseTagStyle: $ie,
    inputStyle: Nie,
    popperRef: Ou,
    inputRef: h,
    tooltipRef: u,
    tagTooltipRef: c,
    calculatorRef: f,
    prefixRef: d,
    suffixRef: p,
    selectRef: a,
    wrapperRef: b,
    selectionRef: l,
    scrollbarRef: y,
    menuRef: g,
    tagMenuRef: v,
    collapseItemRef: m
  };
};
var rOe = U({
  name: "ElOptions",
  setup(n, { slots: e }) {
    const t = $e(r_);
    let r = [];
    return () => {
      var i, o;
      const s = (i = e.default) == null ? void 0 : i.call(e), a = [];
      function l(u) {
        Gn(u) && u.forEach((c) => {
          var h, f, d, p;
          const g = (h = (c == null ? void 0 : c.type) || {}) == null ? void 0 : h.name;
          g === "ElOptionGroup" ? l(!qt(c.children) && !Gn(c.children) && wn((f = c.children) == null ? void 0 : f.default) ? (d = c.children) == null ? void 0 : d.default() : c.children) : g === "ElOption" ? a.push((p = c.props) == null ? void 0 : p.value) : Gn(c.children) && l(c.children);
        });
      }
      return s.length && l((o = s[0]) == null ? void 0 : o.children), wi(a, r) || (r = a, t && (t.states.optionValues = a)), s;
    };
  }
});
const iOe = qe({
  name: String,
  id: String,
  modelValue: {
    type: [Array, String, Number, Boolean, Object],
    default: void 0
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  automaticDropdown: Boolean,
  size: pa,
  effect: {
    type: ke(String),
    default: "light"
  },
  disabled: Boolean,
  clearable: Boolean,
  filterable: Boolean,
  allowCreate: Boolean,
  loading: Boolean,
  popperClass: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: ke(Object),
    default: () => ({})
  },
  remote: Boolean,
  loadingText: String,
  noMatchText: String,
  noDataText: String,
  remoteMethod: Function,
  filterMethod: Function,
  multiple: Boolean,
  multipleLimit: {
    type: Number,
    default: 0
  },
  placeholder: {
    type: String
  },
  defaultFirstOption: Boolean,
  reserveKeyword: {
    type: Boolean,
    default: !0
  },
  valueKey: {
    type: String,
    default: "value"
  },
  collapseTags: Boolean,
  collapseTagsTooltip: Boolean,
  maxCollapseTags: {
    type: Number,
    default: 1
  },
  teleported: To.teleported,
  persistent: {
    type: Boolean,
    default: !0
  },
  clearIcon: {
    type: Vr,
    default: qS
  },
  fitInputWidth: Boolean,
  suffixIcon: {
    type: Vr,
    default: HS
  },
  tagType: { ...p7.type, default: "info" },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  remoteShowSuffix: Boolean,
  suffixTransition: {
    type: Boolean,
    default: !0
  },
  placement: {
    type: ke(String),
    values: KS,
    default: "bottom-start"
  },
  fallbackPlacements: {
    type: ke(Array),
    default: ["bottom-start", "top-start", "right", "left"]
  },
  ariaLabel: {
    type: String,
    default: void 0
  }
}), N3 = "ElSelect", oOe = U({
  name: N3,
  componentName: N3,
  components: {
    ElInput: ob,
    ElSelectMenu: J1e,
    ElOption: nL,
    ElOptions: rOe,
    ElTag: K0e,
    ElScrollbar: YD,
    ElTooltip: sb,
    ElIcon: Dt
  },
  directives: { ClickOutside: eL },
  props: iOe,
  emits: [
    Vt,
    ia,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(n, { emit: e }) {
    const t = nOe(n, e);
    return Jt(r_, Si({
      props: n,
      states: t.states,
      optionsArray: t.optionsArray,
      handleOptionSelect: t.handleOptionSelect,
      onOptionCreate: t.onOptionCreate,
      onOptionDestroy: t.onOptionDestroy,
      selectRef: t.selectRef,
      setSelected: t.setSelected
    })), {
      ...t
    };
  }
}), sOe = ["id", "disabled", "autocomplete", "readonly", "aria-activedescendant", "aria-controls", "aria-expanded", "aria-label"], aOe = ["textContent"];
function lOe(n, e, t, r, i, o) {
  const s = Tn("el-tag"), a = Tn("el-tooltip"), l = Tn("el-icon"), u = Tn("el-option"), c = Tn("el-options"), h = Tn("el-scrollbar"), f = Tn("el-select-menu"), d = yD("click-outside");
  return zt((z(), X("div", {
    ref: "selectRef",
    class: Z([n.nsSelect.b(), n.nsSelect.m(n.selectSize)]),
    onMouseenter: e[14] || (e[14] = (p) => n.states.inputHovering = !0),
    onMouseleave: e[15] || (e[15] = (p) => n.states.inputHovering = !1),
    onClick: e[16] || (e[16] = en((...p) => n.toggleMenu && n.toggleMenu(...p), ["stop"]))
  }, [
    pe(a, {
      ref: "tooltipRef",
      visible: n.dropdownMenuVisible,
      placement: n.placement,
      teleported: n.teleported,
      "popper-class": [n.nsSelect.e("popper"), n.popperClass],
      "popper-options": n.popperOptions,
      "fallback-placements": n.fallbackPlacements,
      effect: n.effect,
      pure: "",
      trigger: "click",
      transition: `${n.nsSelect.namespace.value}-zoom-in-top`,
      "stop-popper-mouse-event": !1,
      "gpu-acceleration": !1,
      persistent: n.persistent,
      onBeforeShow: n.handleMenuEnter,
      onHide: e[13] || (e[13] = (p) => n.states.isBeforeHide = !1)
    }, {
      default: me(() => {
        var p;
        return [
          J("div", {
            ref: "wrapperRef",
            class: Z([
              n.nsSelect.e("wrapper"),
              n.nsSelect.is("focused", n.isFocused),
              n.nsSelect.is("hovering", n.states.inputHovering),
              n.nsSelect.is("filterable", n.filterable),
              n.nsSelect.is("disabled", n.selectDisabled)
            ])
          }, [
            n.$slots.prefix ? (z(), X("div", {
              key: 0,
              ref: "prefixRef",
              class: Z(n.nsSelect.e("prefix"))
            }, [
              Ce(n.$slots, "prefix")
            ], 2)) : he("v-if", !0),
            J("div", {
              ref: "selectionRef",
              class: Z([
                n.nsSelect.e("selection"),
                n.nsSelect.is("near", n.multiple && !n.$slots.prefix && !!n.states.selected.length)
              ])
            }, [
              n.multiple ? Ce(n.$slots, "tag", { key: 0 }, () => [
                (z(!0), X(pr, null, Nf(n.showTagList, (g) => (z(), X("div", {
                  key: n.getValueKey(g),
                  class: Z(n.nsSelect.e("selected-item"))
                }, [
                  pe(s, {
                    closable: !n.selectDisabled && !g.isDisabled,
                    size: n.collapseTagSize,
                    type: n.tagType,
                    "disable-transitions": "",
                    style: pt(n.tagStyle),
                    onClose: (v) => n.deleteTag(v, g)
                  }, {
                    default: me(() => [
                      J("span", {
                        class: Z(n.nsSelect.e("tags-text"))
                      }, Ke(g.currentLabel), 3)
                    ]),
                    _: 2
                  }, 1032, ["closable", "size", "type", "style", "onClose"])
                ], 2))), 128)),
                n.collapseTags && n.states.selected.length > n.maxCollapseTags ? (z(), ye(a, {
                  key: 0,
                  ref: "tagTooltipRef",
                  disabled: n.dropdownMenuVisible || !n.collapseTagsTooltip,
                  "fallback-placements": ["bottom", "top", "right", "left"],
                  effect: n.effect,
                  placement: "bottom",
                  teleported: n.teleported
                }, {
                  default: me(() => [
                    J("div", {
                      ref: "collapseItemRef",
                      class: Z(n.nsSelect.e("selected-item"))
                    }, [
                      pe(s, {
                        closable: !1,
                        size: n.collapseTagSize,
                        type: n.tagType,
                        "disable-transitions": "",
                        style: pt(n.collapseTagStyle)
                      }, {
                        default: me(() => [
                          J("span", {
                            class: Z(n.nsSelect.e("tags-text"))
                          }, " + " + Ke(n.states.selected.length - n.maxCollapseTags), 3)
                        ]),
                        _: 1
                      }, 8, ["size", "type", "style"])
                    ], 2)
                  ]),
                  content: me(() => [
                    J("div", {
                      ref: "tagMenuRef",
                      class: Z(n.nsSelect.e("selection"))
                    }, [
                      (z(!0), X(pr, null, Nf(n.collapseTagList, (g) => (z(), X("div", {
                        key: n.getValueKey(g),
                        class: Z(n.nsSelect.e("selected-item"))
                      }, [
                        pe(s, {
                          class: "in-tooltip",
                          closable: !n.selectDisabled && !g.isDisabled,
                          size: n.collapseTagSize,
                          type: n.tagType,
                          "disable-transitions": "",
                          onClose: (v) => n.deleteTag(v, g)
                        }, {
                          default: me(() => [
                            J("span", {
                              class: Z(n.nsSelect.e("tags-text"))
                            }, Ke(g.currentLabel), 3)
                          ]),
                          _: 2
                        }, 1032, ["closable", "size", "type", "onClose"])
                      ], 2))), 128))
                    ], 2)
                  ]),
                  _: 1
                }, 8, ["disabled", "effect", "teleported"])) : he("v-if", !0)
              ]) : he("v-if", !0),
              n.selectDisabled ? he("v-if", !0) : (z(), X("div", {
                key: 1,
                class: Z([
                  n.nsSelect.e("selected-item"),
                  n.nsSelect.e("input-wrapper"),
                  n.nsSelect.is("hidden", !n.filterable)
                ])
              }, [
                zt(J("input", {
                  id: n.inputId,
                  ref: "inputRef",
                  "onUpdate:modelValue": e[0] || (e[0] = (g) => n.states.inputValue = g),
                  type: "text",
                  class: Z([n.nsSelect.e("input"), n.nsSelect.is(n.selectSize)]),
                  disabled: n.selectDisabled,
                  autocomplete: n.autocomplete,
                  style: pt(n.inputStyle),
                  role: "combobox",
                  readonly: !n.filterable,
                  spellcheck: "false",
                  "aria-activedescendant": ((p = n.hoverOption) == null ? void 0 : p.id) || "",
                  "aria-controls": n.contentId,
                  "aria-expanded": n.dropdownMenuVisible,
                  "aria-label": n.ariaLabel,
                  "aria-autocomplete": "none",
                  "aria-haspopup": "listbox",
                  onFocus: e[1] || (e[1] = (...g) => n.handleFocus && n.handleFocus(...g)),
                  onBlur: e[2] || (e[2] = (...g) => n.handleBlur && n.handleBlur(...g)),
                  onKeydown: [
                    e[3] || (e[3] = Nr(en((g) => n.navigateOptions("next"), ["stop", "prevent"]), ["down"])),
                    e[4] || (e[4] = Nr(en((g) => n.navigateOptions("prev"), ["stop", "prevent"]), ["up"])),
                    e[5] || (e[5] = Nr(en((...g) => n.handleEsc && n.handleEsc(...g), ["stop", "prevent"]), ["esc"])),
                    e[6] || (e[6] = Nr(en((...g) => n.selectOption && n.selectOption(...g), ["stop", "prevent"]), ["enter"])),
                    e[7] || (e[7] = Nr(en((...g) => n.deletePrevTag && n.deletePrevTag(...g), ["stop"]), ["delete"]))
                  ],
                  onCompositionstart: e[8] || (e[8] = (...g) => n.handleCompositionStart && n.handleCompositionStart(...g)),
                  onCompositionupdate: e[9] || (e[9] = (...g) => n.handleCompositionUpdate && n.handleCompositionUpdate(...g)),
                  onCompositionend: e[10] || (e[10] = (...g) => n.handleCompositionEnd && n.handleCompositionEnd(...g)),
                  onInput: e[11] || (e[11] = (...g) => n.onInput && n.onInput(...g)),
                  onClick: e[12] || (e[12] = en((...g) => n.toggleMenu && n.toggleMenu(...g), ["stop"]))
                }, null, 46, sOe), [
                  [Hie, n.states.inputValue]
                ]),
                n.filterable ? (z(), X("span", {
                  key: 0,
                  ref: "calculatorRef",
                  "aria-hidden": "true",
                  class: Z(n.nsSelect.e("input-calculator")),
                  textContent: Ke(n.states.inputValue)
                }, null, 10, aOe)) : he("v-if", !0)
              ], 2)),
              n.shouldShowPlaceholder ? (z(), X("div", {
                key: 2,
                class: Z([
                  n.nsSelect.e("selected-item"),
                  n.nsSelect.e("placeholder"),
                  n.nsSelect.is("transparent", !n.hasModelValue || n.expanded && !n.states.inputValue)
                ])
              }, [
                J("span", null, Ke(n.currentPlaceholder), 1)
              ], 2)) : he("v-if", !0)
            ], 2),
            J("div", {
              ref: "suffixRef",
              class: Z(n.nsSelect.e("suffix"))
            }, [
              n.iconComponent && !n.showClose ? (z(), ye(l, {
                key: 0,
                class: Z([n.nsSelect.e("caret"), n.nsSelect.e("icon"), n.iconReverse])
              }, {
                default: me(() => [
                  (z(), ye(cn(n.iconComponent)))
                ]),
                _: 1
              }, 8, ["class"])) : he("v-if", !0),
              n.showClose && n.clearIcon ? (z(), ye(l, {
                key: 1,
                class: Z([n.nsSelect.e("caret"), n.nsSelect.e("icon")]),
                onClick: n.handleClearClick
              }, {
                default: me(() => [
                  (z(), ye(cn(n.clearIcon)))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : he("v-if", !0),
              n.validateState && n.validateIcon ? (z(), ye(l, {
                key: 2,
                class: Z([n.nsInput.e("icon"), n.nsInput.e("validateIcon")])
              }, {
                default: me(() => [
                  (z(), ye(cn(n.validateIcon)))
                ]),
                _: 1
              }, 8, ["class"])) : he("v-if", !0)
            ], 2)
          ], 2)
        ];
      }),
      content: me(() => [
        pe(f, { ref: "menuRef" }, {
          default: me(() => [
            n.$slots.header ? (z(), X("div", {
              key: 0,
              class: Z(n.nsSelect.be("dropdown", "header"))
            }, [
              Ce(n.$slots, "header")
            ], 2)) : he("v-if", !0),
            zt(pe(h, {
              id: n.contentId,
              ref: "scrollbarRef",
              tag: "ul",
              "wrap-class": n.nsSelect.be("dropdown", "wrap"),
              "view-class": n.nsSelect.be("dropdown", "list"),
              class: Z([n.nsSelect.is("empty", n.filteredOptionsCount === 0)]),
              role: "listbox",
              "aria-label": n.ariaLabel,
              "aria-orientation": "vertical"
            }, {
              default: me(() => [
                n.showNewOption ? (z(), ye(u, {
                  key: 0,
                  value: n.states.inputValue,
                  created: !0
                }, null, 8, ["value"])) : he("v-if", !0),
                pe(c, null, {
                  default: me(() => [
                    Ce(n.$slots, "default")
                  ]),
                  _: 3
                })
              ]),
              _: 3
            }, 8, ["id", "wrap-class", "view-class", "class", "aria-label"]), [
              [rr, n.states.options.size > 0 && !n.loading]
            ]),
            n.$slots.loading && n.loading ? (z(), X("div", {
              key: 1,
              class: Z(n.nsSelect.be("dropdown", "loading"))
            }, [
              Ce(n.$slots, "loading")
            ], 2)) : n.loading || n.filteredOptionsCount === 0 ? (z(), X("div", {
              key: 2,
              class: Z(n.nsSelect.be("dropdown", "empty"))
            }, [
              Ce(n.$slots, "empty", {}, () => [
                J("span", null, Ke(n.emptyText), 1)
              ])
            ], 2)) : he("v-if", !0),
            n.$slots.footer ? (z(), X("div", {
              key: 3,
              class: Z(n.nsSelect.be("dropdown", "footer"))
            }, [
              Ce(n.$slots, "footer")
            ], 2)) : he("v-if", !0)
          ]),
          _: 3
        }, 512)
      ]),
      _: 3
    }, 8, ["visible", "placement", "teleported", "popper-class", "popper-options", "fallback-placements", "effect", "transition", "persistent", "onBeforeShow"])
  ], 34)), [
    [d, n.handleClickOutside, n.popperRef]
  ]);
}
var uOe = /* @__PURE__ */ Ze(oOe, [["render", lOe], ["__file", "select.vue"]]);
const cOe = U({
  name: "ElOptionGroup",
  componentName: "ElOptionGroup",
  props: {
    label: String,
    disabled: Boolean
  },
  setup(n) {
    const e = Ie("select"), t = F(null), r = xt(), i = F([]);
    Jt(_7, Si({
      ...jc(n)
    }));
    const o = B(() => i.value.some((l) => l.visible === !0)), s = (l) => {
      const u = [];
      return Gn(l.children) && l.children.forEach((c) => {
        var h, f;
        c.type && c.type.name === "ElOption" && c.component && c.component.proxy ? u.push(c.component.proxy) : (h = c.children) != null && h.length ? u.push(...s(c)) : (f = c.component) != null && f.subTree && u.push(...s(c.component.subTree));
      }), u;
    }, a = () => {
      i.value = s(r.subTree);
    };
    return dt(() => {
      a();
    }), Ape(t, a, {
      attributes: !0,
      subtree: !0,
      childList: !0
    }), {
      groupRef: t,
      visible: o,
      ns: e
    };
  }
});
function hOe(n, e, t, r, i, o) {
  return zt((z(), X("ul", {
    ref: "groupRef",
    class: Z(n.ns.be("group", "wrap"))
  }, [
    J("li", {
      class: Z(n.ns.be("group", "title"))
    }, Ke(n.label), 3),
    J("li", null, [
      J("ul", {
        class: Z(n.ns.b("group"))
      }, [
        Ce(n.$slots, "default")
      ], 2)
    ])
  ], 2)), [
    [rr, n.visible]
  ]);
}
var C7 = /* @__PURE__ */ Ze(cOe, [["render", hOe], ["__file", "option-group.vue"]]);
const fOe = Bn(uOe, {
  Option: nL,
  OptionGroup: C7
}), dOe = fa(nL);
fa(C7);
const rL = () => $e(S7, {}), pOe = qe({
  pageSize: {
    type: Number,
    required: !0
  },
  pageSizes: {
    type: ke(Array),
    default: () => fd([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String
  },
  disabled: Boolean,
  teleported: Boolean,
  size: {
    type: String,
    values: hd
  }
}), gOe = U({
  name: "ElPaginationSizes"
}), vOe = /* @__PURE__ */ U({
  ...gOe,
  props: pOe,
  emits: ["page-size-change"],
  setup(n, { emit: e }) {
    const t = n, { t: r } = Wi(), i = Ie("pagination"), o = rL(), s = F(t.pageSize);
    de(() => t.pageSizes, (u, c) => {
      if (!wi(u, c) && Array.isArray(u)) {
        const h = u.includes(t.pageSize) ? t.pageSize : t.pageSizes[0];
        e("page-size-change", h);
      }
    }), de(() => t.pageSize, (u) => {
      s.value = u;
    });
    const a = B(() => t.pageSizes);
    function l(u) {
      var c;
      u !== s.value && (s.value = u, (c = o.handleSizeChange) == null || c.call(o, Number(u)));
    }
    return (u, c) => (z(), X("span", {
      class: Z(P(i).e("sizes"))
    }, [
      pe(P(fOe), {
        "model-value": s.value,
        disabled: u.disabled,
        "popper-class": u.popperClass,
        size: u.size,
        teleported: u.teleported,
        "validate-event": !1,
        onChange: l
      }, {
        default: me(() => [
          (z(!0), X(pr, null, Nf(P(a), (h) => (z(), ye(P(dOe), {
            key: h,
            value: h,
            label: h + P(r)("el.pagination.pagesize")
          }, null, 8, ["value", "label"]))), 128))
        ]),
        _: 1
      }, 8, ["model-value", "disabled", "popper-class", "size", "teleported"])
    ], 2));
  }
});
var mOe = /* @__PURE__ */ Ze(vOe, [["__file", "sizes.vue"]]);
const yOe = qe({
  size: {
    type: String,
    values: hd
  }
}), bOe = ["disabled"], OOe = U({
  name: "ElPaginationJumper"
}), wOe = /* @__PURE__ */ U({
  ...OOe,
  props: yOe,
  setup(n) {
    const { t: e } = Wi(), t = Ie("pagination"), { pageCount: r, disabled: i, currentPage: o, changeEvent: s } = rL(), a = F(), l = B(() => {
      var h;
      return (h = a.value) != null ? h : o == null ? void 0 : o.value;
    });
    function u(h) {
      a.value = h ? +h : "";
    }
    function c(h) {
      h = Math.trunc(+h), s == null || s(h), a.value = void 0;
    }
    return (h, f) => (z(), X("span", {
      class: Z(P(t).e("jump")),
      disabled: P(i)
    }, [
      J("span", {
        class: Z([P(t).e("goto")])
      }, Ke(P(e)("el.pagination.goto")), 3),
      pe(P(ob), {
        size: h.size,
        class: Z([P(t).e("editor"), P(t).is("in-pagination")]),
        min: 1,
        max: P(r),
        disabled: P(i),
        "model-value": P(l),
        "validate-event": !1,
        label: P(e)("el.pagination.page"),
        type: "number",
        "onUpdate:modelValue": u,
        onChange: c
      }, null, 8, ["size", "class", "max", "disabled", "model-value", "label"]),
      J("span", {
        class: Z([P(t).e("classifier")])
      }, Ke(P(e)("el.pagination.pageClassifier")), 3)
    ], 10, bOe));
  }
});
var xOe = /* @__PURE__ */ Ze(wOe, [["__file", "jumper.vue"]]);
const SOe = qe({
  total: {
    type: Number,
    default: 1e3
  }
}), _Oe = ["disabled"], COe = U({
  name: "ElPaginationTotal"
}), AOe = /* @__PURE__ */ U({
  ...COe,
  props: SOe,
  setup(n) {
    const { t: e } = Wi(), t = Ie("pagination"), { disabled: r } = rL();
    return (i, o) => (z(), X("span", {
      class: Z(P(t).e("total")),
      disabled: P(r)
    }, Ke(P(e)("el.pagination.total", {
      total: i.total
    })), 11, _Oe));
  }
});
var TOe = /* @__PURE__ */ Ze(AOe, [["__file", "total.vue"]]);
const POe = qe({
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    required: !0
  },
  pagerCount: {
    type: Number,
    default: 7
  },
  disabled: Boolean
}), EOe = ["onKeyup"], kOe = ["aria-current", "aria-label", "tabindex"], MOe = ["tabindex", "aria-label"], DOe = ["aria-current", "aria-label", "tabindex"], LOe = ["tabindex", "aria-label"], IOe = ["aria-current", "aria-label", "tabindex"], ROe = U({
  name: "ElPaginationPager"
}), $Oe = /* @__PURE__ */ U({
  ...ROe,
  props: POe,
  emits: ["change"],
  setup(n, { emit: e }) {
    const t = n, r = Ie("pager"), i = Ie("icon"), { t: o } = Wi(), s = F(!1), a = F(!1), l = F(!1), u = F(!1), c = F(!1), h = F(!1), f = B(() => {
      const O = t.pagerCount, w = (O - 1) / 2, x = Number(t.currentPage), S = Number(t.pageCount);
      let _ = !1, C = !1;
      S > O && (x > O - w && (_ = !0), x < S - w && (C = !0));
      const A = [];
      if (_ && !C) {
        const T = S - (O - 2);
        for (let k = T; k < S; k++)
          A.push(k);
      } else if (!_ && C)
        for (let T = 2; T < O; T++)
          A.push(T);
      else if (_ && C) {
        const T = Math.floor(O / 2) - 1;
        for (let k = x - T; k <= x + T; k++)
          A.push(k);
      } else
        for (let T = 2; T < S; T++)
          A.push(T);
      return A;
    }), d = B(() => [
      "more",
      "btn-quickprev",
      i.b(),
      r.is("disabled", t.disabled)
    ]), p = B(() => [
      "more",
      "btn-quicknext",
      i.b(),
      r.is("disabled", t.disabled)
    ]), g = B(() => t.disabled ? -1 : 0);
    Ua(() => {
      const O = (t.pagerCount - 1) / 2;
      s.value = !1, a.value = !1, t.pageCount > t.pagerCount && (t.currentPage > t.pagerCount - O && (s.value = !0), t.currentPage < t.pageCount - O && (a.value = !0));
    });
    function v(O = !1) {
      t.disabled || (O ? l.value = !0 : u.value = !0);
    }
    function m(O = !1) {
      O ? c.value = !0 : h.value = !0;
    }
    function y(O) {
      const w = O.target;
      if (w.tagName.toLowerCase() === "li" && Array.from(w.classList).includes("number")) {
        const x = Number(w.textContent);
        x !== t.currentPage && e("change", x);
      } else
        w.tagName.toLowerCase() === "li" && Array.from(w.classList).includes("more") && b(O);
    }
    function b(O) {
      const w = O.target;
      if (w.tagName.toLowerCase() === "ul" || t.disabled)
        return;
      let x = Number(w.textContent);
      const S = t.pageCount, _ = t.currentPage, C = t.pagerCount - 2;
      w.className.includes("more") && (w.className.includes("quickprev") ? x = _ - C : w.className.includes("quicknext") && (x = _ + C)), Number.isNaN(+x) || (x < 1 && (x = 1), x > S && (x = S)), x !== _ && e("change", x);
    }
    return (O, w) => (z(), X("ul", {
      class: Z(P(r).b()),
      onClick: b,
      onKeyup: Nr(y, ["enter"])
    }, [
      O.pageCount > 0 ? (z(), X("li", {
        key: 0,
        class: Z([[
          P(r).is("active", O.currentPage === 1),
          P(r).is("disabled", O.disabled)
        ], "number"]),
        "aria-current": O.currentPage === 1,
        "aria-label": P(o)("el.pagination.currentPage", { pager: 1 }),
        tabindex: P(g)
      }, " 1 ", 10, kOe)) : he("v-if", !0),
      s.value ? (z(), X("li", {
        key: 1,
        class: Z(P(d)),
        tabindex: P(g),
        "aria-label": P(o)("el.pagination.prevPages", { pager: O.pagerCount - 2 }),
        onMouseenter: w[0] || (w[0] = (x) => v(!0)),
        onMouseleave: w[1] || (w[1] = (x) => l.value = !1),
        onFocus: w[2] || (w[2] = (x) => m(!0)),
        onBlur: w[3] || (w[3] = (x) => c.value = !1)
      }, [
        (l.value || c.value) && !O.disabled ? (z(), ye(P(Nfe), { key: 0 })) : (z(), ye(P(TN), { key: 1 }))
      ], 42, MOe)) : he("v-if", !0),
      (z(!0), X(pr, null, Nf(P(f), (x) => (z(), X("li", {
        key: x,
        class: Z([[
          P(r).is("active", O.currentPage === x),
          P(r).is("disabled", O.disabled)
        ], "number"]),
        "aria-current": O.currentPage === x,
        "aria-label": P(o)("el.pagination.currentPage", { pager: x }),
        tabindex: P(g)
      }, Ke(x), 11, DOe))), 128)),
      a.value ? (z(), X("li", {
        key: 2,
        class: Z(P(p)),
        tabindex: P(g),
        "aria-label": P(o)("el.pagination.nextPages", { pager: O.pagerCount - 2 }),
        onMouseenter: w[4] || (w[4] = (x) => v()),
        onMouseleave: w[5] || (w[5] = (x) => u.value = !1),
        onFocus: w[6] || (w[6] = (x) => m()),
        onBlur: w[7] || (w[7] = (x) => h.value = !1)
      }, [
        (u.value || h.value) && !O.disabled ? (z(), ye(P(Vfe), { key: 0 })) : (z(), ye(P(TN), { key: 1 }))
      ], 42, LOe)) : he("v-if", !0),
      O.pageCount > 1 ? (z(), X("li", {
        key: 3,
        class: Z([[
          P(r).is("active", O.currentPage === O.pageCount),
          P(r).is("disabled", O.disabled)
        ], "number"]),
        "aria-current": O.currentPage === O.pageCount,
        "aria-label": P(o)("el.pagination.currentPage", { pager: O.pageCount }),
        tabindex: P(g)
      }, Ke(O.pageCount), 11, IOe)) : he("v-if", !0)
    ], 42, EOe));
  }
});
var NOe = /* @__PURE__ */ Ze($Oe, [["__file", "pager.vue"]]);
const Ti = (n) => typeof n != "number", BOe = qe({
  pageSize: Number,
  defaultPageSize: Number,
  total: Number,
  pageCount: Number,
  pagerCount: {
    type: Number,
    validator: (n) => mt(n) && Math.trunc(n) === n && n > 4 && n < 22 && n % 2 === 1,
    default: 7
  },
  currentPage: Number,
  defaultCurrentPage: Number,
  layout: {
    type: String,
    default: ["prev", "pager", "next", "jumper", "->", "total"].join(", ")
  },
  pageSizes: {
    type: ke(Array),
    default: () => fd([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String,
    default: ""
  },
  prevText: {
    type: String,
    default: ""
  },
  prevIcon: {
    type: Vr,
    default: () => ZG
  },
  nextText: {
    type: String,
    default: ""
  },
  nextIcon: {
    type: Vr,
    default: () => J0
  },
  teleported: {
    type: Boolean,
    default: !0
  },
  small: Boolean,
  background: Boolean,
  disabled: Boolean,
  hideOnSinglePage: Boolean
}), VOe = {
  "update:current-page": (n) => mt(n),
  "update:page-size": (n) => mt(n),
  "size-change": (n) => mt(n),
  change: (n, e) => mt(n) && mt(e),
  "current-change": (n) => mt(n),
  "prev-click": (n) => mt(n),
  "next-click": (n) => mt(n)
}, B3 = "ElPagination";
var zOe = U({
  name: B3,
  props: BOe,
  emits: VOe,
  setup(n, { emit: e, slots: t }) {
    const { t: r } = Wi(), i = Ie("pagination"), o = xt().vnode.props || {}, s = "onUpdate:currentPage" in o || "onUpdate:current-page" in o || "onCurrentChange" in o, a = "onUpdate:pageSize" in o || "onUpdate:page-size" in o || "onSizeChange" in o, l = B(() => {
      if (Ti(n.total) && Ti(n.pageCount) || !Ti(n.currentPage) && !s)
        return !1;
      if (n.layout.includes("sizes")) {
        if (Ti(n.pageCount)) {
          if (!Ti(n.total) && !Ti(n.pageSize) && !a)
            return !1;
        } else if (!a)
          return !1;
      }
      return !0;
    }), u = F(Ti(n.defaultPageSize) ? 10 : n.defaultPageSize), c = F(Ti(n.defaultCurrentPage) ? 1 : n.defaultCurrentPage), h = B({
      get() {
        return Ti(n.pageSize) ? u.value : n.pageSize;
      },
      set(b) {
        Ti(n.pageSize) && (u.value = b), a && (e("update:page-size", b), e("size-change", b));
      }
    }), f = B(() => {
      let b = 0;
      return Ti(n.pageCount) ? Ti(n.total) || (b = Math.max(1, Math.ceil(n.total / h.value))) : b = n.pageCount, b;
    }), d = B({
      get() {
        return Ti(n.currentPage) ? c.value : n.currentPage;
      },
      set(b) {
        let O = b;
        b < 1 ? O = 1 : b > f.value && (O = f.value), Ti(n.currentPage) && (c.value = O), s && (e("update:current-page", O), e("current-change", O));
      }
    });
    de(f, (b) => {
      d.value > b && (d.value = b);
    }), de([d, h], (b) => {
      e("change", ...b);
    }, { flush: "post" });
    function p(b) {
      d.value = b;
    }
    function g(b) {
      h.value = b;
      const O = f.value;
      d.value > O && (d.value = O);
    }
    function v() {
      n.disabled || (d.value -= 1, e("prev-click", d.value));
    }
    function m() {
      n.disabled || (d.value += 1, e("next-click", d.value));
    }
    function y(b, O) {
      b && (b.props || (b.props = {}), b.props.class = [b.props.class, O].join(" "));
    }
    return Jt(S7, {
      pageCount: f,
      disabled: B(() => n.disabled),
      currentPage: d,
      changeEvent: p,
      handleSizeChange: g
    }), () => {
      var b, O;
      if (!l.value)
        return jt(B3, r("el.pagination.deprecationWarning")), null;
      if (!n.layout || n.hideOnSinglePage && f.value <= 1)
        return null;
      const w = [], x = [], S = nt("div", { class: i.e("rightwrapper") }, x), _ = {
        prev: nt(z1e, {
          disabled: n.disabled,
          currentPage: d.value,
          prevText: n.prevText,
          prevIcon: n.prevIcon,
          onClick: v
        }),
        jumper: nt(xOe, {
          size: n.small ? "small" : "default"
        }),
        pager: nt(NOe, {
          currentPage: d.value,
          pageCount: f.value,
          pagerCount: n.pagerCount,
          onChange: p,
          disabled: n.disabled
        }),
        next: nt(j1e, {
          disabled: n.disabled,
          currentPage: d.value,
          pageCount: f.value,
          nextText: n.nextText,
          nextIcon: n.nextIcon,
          onClick: m
        }),
        sizes: nt(mOe, {
          pageSize: h.value,
          pageSizes: n.pageSizes,
          popperClass: n.popperClass,
          disabled: n.disabled,
          teleported: n.teleported,
          size: n.small ? "small" : "default"
        }),
        slot: (O = (b = t == null ? void 0 : t.default) == null ? void 0 : b.call(t)) != null ? O : null,
        total: nt(TOe, { total: Ti(n.total) ? 0 : n.total })
      }, C = n.layout.split(",").map((T) => T.trim());
      let A = !1;
      return C.forEach((T) => {
        if (T === "->") {
          A = !0;
          return;
        }
        A ? x.push(_[T]) : w.push(_[T]);
      }), y(w[0], i.is("first")), y(w[w.length - 1], i.is("last")), A && x.length > 0 && (y(x[0], i.is("first")), y(x[x.length - 1], i.is("last")), w.push(S)), nt("div", {
        class: [
          i.b(),
          i.is("background", n.background),
          {
            [i.m("small")]: n.small
          }
        ]
      }, w);
    };
  }
});
const t4t = Bn(zOe), FOe = qe({
  trigger: Ny.trigger,
  placement: YC.placement,
  disabled: Ny.disabled,
  visible: To.visible,
  transition: To.transition,
  popperOptions: YC.popperOptions,
  tabindex: YC.tabindex,
  content: To.content,
  popperStyle: To.popperStyle,
  popperClass: To.popperClass,
  enterable: {
    ...To.enterable,
    default: !0
  },
  effect: {
    ...To.effect,
    default: "light"
  },
  teleported: To.teleported,
  title: String,
  width: {
    type: [String, Number],
    default: 150
  },
  offset: {
    type: Number,
    default: void 0
  },
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  },
  showArrow: {
    type: Boolean,
    default: !0
  },
  persistent: {
    type: Boolean,
    default: !0
  },
  "onUpdate:visible": {
    type: Function
  }
}), QOe = {
  "update:visible": (n) => xi(n),
  "before-enter": () => !0,
  "before-leave": () => !0,
  "after-enter": () => !0,
  "after-leave": () => !0
}, ZOe = "onUpdate:visible", WOe = U({
  name: "ElPopover"
}), GOe = /* @__PURE__ */ U({
  ...WOe,
  props: FOe,
  emits: QOe,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = B(() => r[ZOe]), o = Ie("popover"), s = F(), a = B(() => {
      var v;
      return (v = P(s)) == null ? void 0 : v.popperRef;
    }), l = B(() => [
      {
        width: Fo(r.width)
      },
      r.popperStyle
    ]), u = B(() => [o.b(), r.popperClass, { [o.m("plain")]: !!r.content }]), c = B(() => r.transition === `${o.namespace.value}-fade-in-linear`), h = () => {
      var v;
      (v = s.value) == null || v.hide();
    }, f = () => {
      t("before-enter");
    }, d = () => {
      t("before-leave");
    }, p = () => {
      t("after-enter");
    }, g = () => {
      t("update:visible", !1), t("after-leave");
    };
    return e({
      popperRef: a,
      hide: h
    }), (v, m) => (z(), ye(P(sb), ps({
      ref_key: "tooltipRef",
      ref: s
    }, v.$attrs, {
      trigger: v.trigger,
      placement: v.placement,
      disabled: v.disabled,
      visible: v.visible,
      transition: v.transition,
      "popper-options": v.popperOptions,
      tabindex: v.tabindex,
      content: v.content,
      offset: v.offset,
      "show-after": v.showAfter,
      "hide-after": v.hideAfter,
      "auto-close": v.autoClose,
      "show-arrow": v.showArrow,
      "aria-label": v.title,
      effect: v.effect,
      enterable: v.enterable,
      "popper-class": P(u),
      "popper-style": P(l),
      teleported: v.teleported,
      persistent: v.persistent,
      "gpu-acceleration": P(c),
      "onUpdate:visible": P(i),
      onBeforeShow: f,
      onBeforeHide: d,
      onShow: p,
      onHide: g
    }), {
      content: me(() => [
        v.title ? (z(), X("div", {
          key: 0,
          class: Z(P(o).e("title")),
          role: "title"
        }, Ke(v.title), 3)) : he("v-if", !0),
        Ce(v.$slots, "default", {}, () => [
          uo(Ke(v.content), 1)
        ])
      ]),
      default: me(() => [
        v.$slots.reference ? Ce(v.$slots, "reference", { key: 0 }) : he("v-if", !0)
      ]),
      _: 3
    }, 16, ["trigger", "placement", "disabled", "visible", "transition", "popper-options", "tabindex", "content", "offset", "show-after", "hide-after", "auto-close", "show-arrow", "aria-label", "effect", "enterable", "popper-class", "popper-style", "teleported", "persistent", "gpu-acceleration", "onUpdate:visible"]));
  }
});
var jOe = /* @__PURE__ */ Ze(GOe, [["__file", "popover.vue"]]);
const V3 = (n, e) => {
  const t = e.arg || e.value, r = t == null ? void 0 : t.popperRef;
  r && (r.triggerRef = n);
};
var HOe = {
  mounted(n, e) {
    V3(n, e);
  },
  updated(n, e) {
    V3(n, e);
  }
};
const qOe = "popover", YOe = Ype(HOe, qOe), n4t = Bn(jOe, {
  directive: YOe
}), XOe = qe({
  type: {
    type: String,
    default: "line",
    values: ["line", "circle", "dashboard"]
  },
  percentage: {
    type: Number,
    default: 0,
    validator: (n) => n >= 0 && n <= 100
  },
  status: {
    type: String,
    default: "",
    values: ["", "success", "exception", "warning"]
  },
  indeterminate: {
    type: Boolean,
    default: !1
  },
  duration: {
    type: Number,
    default: 3
  },
  strokeWidth: {
    type: Number,
    default: 6
  },
  strokeLinecap: {
    type: ke(String),
    default: "round"
  },
  textInside: {
    type: Boolean,
    default: !1
  },
  width: {
    type: Number,
    default: 126
  },
  showText: {
    type: Boolean,
    default: !0
  },
  color: {
    type: ke([
      String,
      Array,
      Function
    ]),
    default: ""
  },
  striped: Boolean,
  stripedFlow: Boolean,
  format: {
    type: ke(Function),
    default: (n) => `${n}%`
  }
}), UOe = ["aria-valuenow"], KOe = { viewBox: "0 0 100 100" }, JOe = ["d", "stroke", "stroke-linecap", "stroke-width"], ewe = ["d", "stroke", "opacity", "stroke-linecap", "stroke-width"], twe = { key: 0 }, nwe = U({
  name: "ElProgress"
}), rwe = /* @__PURE__ */ U({
  ...nwe,
  props: XOe,
  setup(n) {
    const e = n, t = {
      success: "#13ce66",
      exception: "#ff4949",
      warning: "#e6a23c",
      default: "#20a0ff"
    }, r = Ie("progress"), i = B(() => ({
      width: `${e.percentage}%`,
      animationDuration: `${e.duration}s`,
      backgroundColor: y(e.percentage)
    })), o = B(() => (e.strokeWidth / e.width * 100).toFixed(1)), s = B(() => ["circle", "dashboard"].includes(e.type) ? Number.parseInt(`${50 - Number.parseFloat(o.value) / 2}`, 10) : 0), a = B(() => {
      const b = s.value, O = e.type === "dashboard";
      return `
          M 50 50
          m 0 ${O ? "" : "-"}${b}
          a ${b} ${b} 0 1 1 0 ${O ? "-" : ""}${b * 2}
          a ${b} ${b} 0 1 1 0 ${O ? "" : "-"}${b * 2}
          `;
    }), l = B(() => 2 * Math.PI * s.value), u = B(() => e.type === "dashboard" ? 0.75 : 1), c = B(() => `${-1 * l.value * (1 - u.value) / 2}px`), h = B(() => ({
      strokeDasharray: `${l.value * u.value}px, ${l.value}px`,
      strokeDashoffset: c.value
    })), f = B(() => ({
      strokeDasharray: `${l.value * u.value * (e.percentage / 100)}px, ${l.value}px`,
      strokeDashoffset: c.value,
      transition: "stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"
    })), d = B(() => {
      let b;
      return e.color ? b = y(e.percentage) : b = t[e.status] || t.default, b;
    }), p = B(() => e.status === "warning" ? DD : e.type === "line" ? e.status === "success" ? GG : qS : e.status === "success" ? kfe : Oc), g = B(() => e.type === "line" ? 12 + e.strokeWidth * 0.4 : e.width * 0.111111 + 2), v = B(() => e.format(e.percentage));
    function m(b) {
      const O = 100 / b.length;
      return b.map((x, S) => qt(x) ? {
        color: x,
        percentage: (S + 1) * O
      } : x).sort((x, S) => x.percentage - S.percentage);
    }
    const y = (b) => {
      var O;
      const { color: w } = e;
      if (wn(w))
        return w(b);
      if (qt(w))
        return w;
      {
        const x = m(w);
        for (const S of x)
          if (S.percentage > b)
            return S.color;
        return (O = x[x.length - 1]) == null ? void 0 : O.color;
      }
    };
    return (b, O) => (z(), X("div", {
      class: Z([
        P(r).b(),
        P(r).m(b.type),
        P(r).is(b.status),
        {
          [P(r).m("without-text")]: !b.showText,
          [P(r).m("text-inside")]: b.textInside
        }
      ]),
      role: "progressbar",
      "aria-valuenow": b.percentage,
      "aria-valuemin": "0",
      "aria-valuemax": "100"
    }, [
      b.type === "line" ? (z(), X("div", {
        key: 0,
        class: Z(P(r).b("bar"))
      }, [
        J("div", {
          class: Z(P(r).be("bar", "outer")),
          style: pt({ height: `${b.strokeWidth}px` })
        }, [
          J("div", {
            class: Z([
              P(r).be("bar", "inner"),
              { [P(r).bem("bar", "inner", "indeterminate")]: b.indeterminate },
              { [P(r).bem("bar", "inner", "striped")]: b.striped },
              { [P(r).bem("bar", "inner", "striped-flow")]: b.stripedFlow }
            ]),
            style: pt(P(i))
          }, [
            (b.showText || b.$slots.default) && b.textInside ? (z(), X("div", {
              key: 0,
              class: Z(P(r).be("bar", "innerText"))
            }, [
              Ce(b.$slots, "default", { percentage: b.percentage }, () => [
                J("span", null, Ke(P(v)), 1)
              ])
            ], 2)) : he("v-if", !0)
          ], 6)
        ], 6)
      ], 2)) : (z(), X("div", {
        key: 1,
        class: Z(P(r).b("circle")),
        style: pt({ height: `${b.width}px`, width: `${b.width}px` })
      }, [
        (z(), X("svg", KOe, [
          J("path", {
            class: Z(P(r).be("circle", "track")),
            d: P(a),
            stroke: `var(${P(r).cssVarName("fill-color-light")}, #e5e9f2)`,
            "stroke-linecap": b.strokeLinecap,
            "stroke-width": P(o),
            fill: "none",
            style: pt(P(h))
          }, null, 14, JOe),
          J("path", {
            class: Z(P(r).be("circle", "path")),
            d: P(a),
            stroke: P(d),
            fill: "none",
            opacity: b.percentage ? 1 : 0,
            "stroke-linecap": b.strokeLinecap,
            "stroke-width": P(o),
            style: pt(P(f))
          }, null, 14, ewe)
        ]))
      ], 6)),
      (b.showText || b.$slots.default) && !b.textInside ? (z(), X("div", {
        key: 2,
        class: Z(P(r).e("text")),
        style: pt({ fontSize: `${P(g)}px` })
      }, [
        Ce(b.$slots, "default", { percentage: b.percentage }, () => [
          b.status ? (z(), ye(P(Dt), { key: 1 }, {
            default: me(() => [
              (z(), ye(cn(P(p))))
            ]),
            _: 1
          })) : (z(), X("span", twe, Ke(P(v)), 1))
        ])
      ], 6)) : he("v-if", !0)
    ], 10, UOe));
  }
});
var iwe = /* @__PURE__ */ Ze(rwe, [["__file", "progress.vue"]]);
const r4t = Bn(iwe), owe = qe({
  modelValue: {
    type: [Boolean, String, Number],
    default: !1
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  loading: {
    type: Boolean,
    default: !1
  },
  size: {
    type: String,
    validator: lj
  },
  width: {
    type: [String, Number],
    default: ""
  },
  inlinePrompt: {
    type: Boolean,
    default: !1
  },
  inactiveActionIcon: {
    type: Vr
  },
  activeActionIcon: {
    type: Vr
  },
  activeIcon: {
    type: Vr
  },
  inactiveIcon: {
    type: Vr
  },
  activeText: {
    type: String,
    default: ""
  },
  inactiveText: {
    type: String,
    default: ""
  },
  activeValue: {
    type: [Boolean, String, Number],
    default: !0
  },
  inactiveValue: {
    type: [Boolean, String, Number],
    default: !1
  },
  activeColor: {
    type: String,
    default: ""
  },
  inactiveColor: {
    type: String,
    default: ""
  },
  borderColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  beforeChange: {
    type: ke(Function)
  },
  id: String,
  tabindex: {
    type: [String, Number]
  },
  value: {
    type: [Boolean, String, Number],
    default: !1
  },
  label: {
    type: String,
    default: void 0
  }
}), swe = {
  [Vt]: (n) => xi(n) || qt(n) || mt(n),
  [ia]: (n) => xi(n) || qt(n) || mt(n),
  [wf]: (n) => xi(n) || qt(n) || mt(n)
}, awe = ["onClick"], lwe = ["id", "aria-checked", "aria-disabled", "aria-label", "name", "true-value", "false-value", "disabled", "tabindex", "onKeydown"], uwe = ["aria-hidden"], cwe = ["aria-hidden"], hwe = ["aria-hidden"], qO = "ElSwitch", fwe = U({
  name: qO
}), dwe = /* @__PURE__ */ U({
  ...fwe,
  props: owe,
  emits: swe,
  setup(n, { expose: e, emit: t }) {
    const r = n, i = xt(), { formItem: o } = yl(), s = Qo(), a = Ie("switch");
    ((_) => {
      _.forEach((C) => {
        zf({
          from: C[0],
          replacement: C[1],
          scope: qO,
          version: "2.3.0",
          ref: "https://element-plus.org/en-US/component/switch.html#attributes",
          type: "Attribute"
        }, B(() => {
          var A;
          return !!((A = i.vnode.props) != null && A[C[2]]);
        }));
      });
    })([
      ['"value"', '"model-value" or "v-model"', "value"],
      ['"active-color"', "CSS var `--el-switch-on-color`", "activeColor"],
      ['"inactive-color"', "CSS var `--el-switch-off-color`", "inactiveColor"],
      ['"border-color"', "CSS var `--el-switch-border-color`", "borderColor"]
    ]);
    const { inputId: u } = dd(r, {
      formItemContext: o
    }), c = Uc(B(() => r.loading)), h = F(r.modelValue !== !1), f = F(), d = F(), p = B(() => [
      a.b(),
      a.m(s.value),
      a.is("disabled", c.value),
      a.is("checked", b.value)
    ]), g = B(() => [
      a.e("label"),
      a.em("label", "left"),
      a.is("active", !b.value)
    ]), v = B(() => [
      a.e("label"),
      a.em("label", "right"),
      a.is("active", b.value)
    ]), m = B(() => ({
      width: Fo(r.width)
    }));
    de(() => r.modelValue, () => {
      h.value = !0;
    }), de(() => r.value, () => {
      h.value = !1;
    });
    const y = B(() => h.value ? r.modelValue : r.value), b = B(() => y.value === r.activeValue);
    [r.activeValue, r.inactiveValue].includes(y.value) || (t(Vt, r.inactiveValue), t(ia, r.inactiveValue), t(wf, r.inactiveValue)), de(b, (_) => {
      var C;
      f.value.checked = _, r.validateEvent && ((C = o == null ? void 0 : o.validate) == null || C.call(o, "change").catch((A) => jt(A)));
    });
    const O = () => {
      const _ = b.value ? r.inactiveValue : r.activeValue;
      t(Vt, _), t(ia, _), t(wf, _), ut(() => {
        f.value.checked = b.value;
      });
    }, w = () => {
      if (c.value)
        return;
      const { beforeChange: _ } = r;
      if (!_) {
        O();
        return;
      }
      const C = _();
      [
        jN(C),
        xi(C)
      ].includes(!0) || du(qO, "beforeChange must return type `Promise<boolean>` or `boolean`"), jN(C) ? C.then((T) => {
        T && O();
      }).catch((T) => {
        jt(qO, `some error occurred: ${T}`);
      }) : C && O();
    }, x = B(() => a.cssVarBlock({
      ...r.activeColor ? { "on-color": r.activeColor } : null,
      ...r.inactiveColor ? { "off-color": r.inactiveColor } : null,
      ...r.borderColor ? { "border-color": r.borderColor } : null
    })), S = () => {
      var _, C;
      (C = (_ = f.value) == null ? void 0 : _.focus) == null || C.call(_);
    };
    return dt(() => {
      f.value.checked = b.value;
    }), e({
      focus: S,
      checked: b
    }), (_, C) => (z(), X("div", {
      class: Z(P(p)),
      style: pt(P(x)),
      onClick: en(w, ["prevent"])
    }, [
      J("input", {
        id: P(u),
        ref_key: "input",
        ref: f,
        class: Z(P(a).e("input")),
        type: "checkbox",
        role: "switch",
        "aria-checked": P(b),
        "aria-disabled": P(c),
        "aria-label": _.label,
        name: _.name,
        "true-value": _.activeValue,
        "false-value": _.inactiveValue,
        disabled: P(c),
        tabindex: _.tabindex,
        onChange: O,
        onKeydown: Nr(w, ["enter"])
      }, null, 42, lwe),
      !_.inlinePrompt && (_.inactiveIcon || _.inactiveText) ? (z(), X("span", {
        key: 0,
        class: Z(P(g))
      }, [
        _.inactiveIcon ? (z(), ye(P(Dt), { key: 0 }, {
          default: me(() => [
            (z(), ye(cn(_.inactiveIcon)))
          ]),
          _: 1
        })) : he("v-if", !0),
        !_.inactiveIcon && _.inactiveText ? (z(), X("span", {
          key: 1,
          "aria-hidden": P(b)
        }, Ke(_.inactiveText), 9, uwe)) : he("v-if", !0)
      ], 2)) : he("v-if", !0),
      J("span", {
        ref_key: "core",
        ref: d,
        class: Z(P(a).e("core")),
        style: pt(P(m))
      }, [
        _.inlinePrompt ? (z(), X("div", {
          key: 0,
          class: Z(P(a).e("inner"))
        }, [
          _.activeIcon || _.inactiveIcon ? (z(), ye(P(Dt), {
            key: 0,
            class: Z(P(a).is("icon"))
          }, {
            default: me(() => [
              (z(), ye(cn(P(b) ? _.activeIcon : _.inactiveIcon)))
            ]),
            _: 1
          }, 8, ["class"])) : _.activeText || _.inactiveText ? (z(), X("span", {
            key: 1,
            class: Z(P(a).is("text")),
            "aria-hidden": !P(b)
          }, Ke(P(b) ? _.activeText : _.inactiveText), 11, cwe)) : he("v-if", !0)
        ], 2)) : he("v-if", !0),
        J("div", {
          class: Z(P(a).e("action"))
        }, [
          _.loading ? (z(), ye(P(Dt), {
            key: 0,
            class: Z(P(a).is("loading"))
          }, {
            default: me(() => [
              pe(P(YS))
            ]),
            _: 1
          }, 8, ["class"])) : P(b) ? Ce(_.$slots, "active-action", { key: 1 }, () => [
            _.activeActionIcon ? (z(), ye(P(Dt), { key: 0 }, {
              default: me(() => [
                (z(), ye(cn(_.activeActionIcon)))
              ]),
              _: 1
            })) : he("v-if", !0)
          ]) : P(b) ? he("v-if", !0) : Ce(_.$slots, "inactive-action", { key: 2 }, () => [
            _.inactiveActionIcon ? (z(), ye(P(Dt), { key: 0 }, {
              default: me(() => [
                (z(), ye(cn(_.inactiveActionIcon)))
              ]),
              _: 1
            })) : he("v-if", !0)
          ])
        ], 2)
      ], 6),
      !_.inlinePrompt && (_.activeIcon || _.activeText) ? (z(), X("span", {
        key: 1,
        class: Z(P(v))
      }, [
        _.activeIcon ? (z(), ye(P(Dt), { key: 0 }, {
          default: me(() => [
            (z(), ye(cn(_.activeIcon)))
          ]),
          _: 1
        })) : he("v-if", !0),
        !_.activeIcon && _.activeText ? (z(), X("span", {
          key: 1,
          "aria-hidden": !P(b)
        }, Ke(_.activeText), 9, hwe)) : he("v-if", !0)
      ], 2)) : he("v-if", !0)
    ], 14, awe));
  }
});
var pwe = /* @__PURE__ */ Ze(dwe, [["__file", "switch.vue"]]);
const i4t = Bn(pwe), XC = function(n) {
  var e;
  return (e = n.target) == null ? void 0 : e.closest("td");
}, gwe = function(n, e, t, r, i) {
  if (!e && !r && (!i || Array.isArray(i) && !i.length))
    return n;
  typeof t == "string" ? t = t === "descending" ? -1 : 1 : t = t && t < 0 ? -1 : 1;
  const o = r ? null : function(a, l) {
    return i ? (Array.isArray(i) || (i = [i]), i.map((u) => typeof u == "string" ? as(a, u) : u(a, l, n))) : (e !== "$key" && ti(a) && "$value" in a && (a = a.$value), [ti(a) ? as(a, e) : a]);
  }, s = function(a, l) {
    if (r)
      return r(a.value, l.value);
    for (let u = 0, c = a.key.length; u < c; u++) {
      if (a.key[u] < l.key[u])
        return -1;
      if (a.key[u] > l.key[u])
        return 1;
    }
    return 0;
  };
  return n.map((a, l) => ({
    value: a,
    index: l,
    key: o ? o(a, l) : null
  })).sort((a, l) => {
    let u = s(a, l);
    return u || (u = a.index - l.index), u * +t;
  }).map((a) => a.value);
}, A7 = function(n, e) {
  let t = null;
  return n.columns.forEach((r) => {
    r.id === e && (t = r);
  }), t;
}, vwe = function(n, e) {
  let t = null;
  for (let r = 0; r < n.columns.length; r++) {
    const i = n.columns[r];
    if (i.columnKey === e) {
      t = i;
      break;
    }
  }
  return t || du("ElTable", `No column matching with column-key: ${e}`), t;
}, z3 = function(n, e, t) {
  const r = (e.className || "").match(new RegExp(`${t}-table_[^\\s]+`, "gm"));
  return r ? A7(n, r[0]) : null;
}, Kr = (n, e) => {
  if (!n)
    throw new Error("Row is required when get row identity");
  if (typeof e == "string") {
    if (!e.includes("."))
      return `${n[e]}`;
    const t = e.split(".");
    let r = n;
    for (const i of t)
      r = r[i];
    return `${r}`;
  } else if (typeof e == "function")
    return e.call(null, n);
}, nf = function(n, e) {
  const t = {};
  return (n || []).forEach((r, i) => {
    t[Kr(r, e)] = { row: r, index: i };
  }), t;
};
function mwe(n, e) {
  const t = {};
  let r;
  for (r in n)
    t[r] = n[r];
  for (r in e)
    if (na(e, r)) {
      const i = e[r];
      typeof i < "u" && (t[r] = i);
    }
  return t;
}
function iL(n) {
  return n === "" || n !== void 0 && (n = Number.parseInt(n, 10), Number.isNaN(n) && (n = "")), n;
}
function T7(n) {
  return n === "" || n !== void 0 && (n = iL(n), Number.isNaN(n) && (n = 80)), n;
}
function ywe(n) {
  return typeof n == "number" ? n : typeof n == "string" ? /^\d+(?:px)?$/.test(n) ? Number.parseInt(n, 10) : n : null;
}
function bwe(...n) {
  return n.length === 0 ? (e) => e : n.length === 1 ? n[0] : n.reduce((e, t) => (...r) => e(t(...r)));
}
function Hm(n, e, t) {
  let r = !1;
  const i = n.indexOf(e), o = i !== -1, s = (a) => {
    a === "add" ? n.push(e) : n.splice(i, 1), r = !0, Gn(e.children) && e.children.forEach((l) => {
      Hm(n, l, t ?? !o);
    });
  };
  return xi(t) ? t && !o ? s("add") : !t && o && s("remove") : s(o ? "remove" : "add"), r;
}
function Owe(n, e, t = "children", r = "hasChildren") {
  const i = (s) => !(Array.isArray(s) && s.length);
  function o(s, a, l) {
    e(s, a, l), a.forEach((u) => {
      if (u[r]) {
        e(u, null, l + 1);
        return;
      }
      const c = u[t];
      i(c) || o(u, c, l + 1);
    });
  }
  n.forEach((s) => {
    if (s[r]) {
      e(s, null, 0);
      return;
    }
    const a = s[t];
    i(a) || o(s, a, 0);
  });
}
let Xo = null;
function wwe(n, e, t, r) {
  if ((Xo == null ? void 0 : Xo.trigger) === t)
    return;
  Xo == null || Xo();
  const i = r == null ? void 0 : r.refs.tableWrapper, o = i == null ? void 0 : i.dataset.prefix, s = {
    strategy: "fixed",
    ...n.popperOptions
  }, a = pe(sb, {
    content: e,
    virtualTriggering: !0,
    virtualRef: t,
    appendTo: i,
    placement: "top",
    transition: "none",
    offset: 0,
    hideAfter: 0,
    ...n,
    popperOptions: s,
    onHide: () => {
      Xo == null || Xo();
    }
  });
  a.appContext = { ...r.appContext, ...r };
  const l = document.createElement("div");
  bc(a, l), a.component.exposed.onOpen();
  const u = i == null ? void 0 : i.querySelector(`.${o}-scrollbar__wrap`);
  Xo = () => {
    bc(null, l), u == null || u.removeEventListener("scroll", Xo), Xo = null;
  }, Xo.trigger = t, u == null || u.addEventListener("scroll", Xo);
}
function P7(n) {
  return n.children ? Dhe(n.children, P7) : [n];
}
function F3(n, e) {
  return n + e.colSpan;
}
const E7 = (n, e, t, r) => {
  let i = 0, o = n;
  const s = t.states.columns.value;
  if (r) {
    const l = P7(r[n]);
    i = s.slice(0, s.indexOf(l[0])).reduce(F3, 0), o = i + l.reduce(F3, 0) - 1;
  } else
    i = n;
  let a;
  switch (e) {
    case "left":
      o < t.states.fixedLeafColumnsLength.value && (a = "left");
      break;
    case "right":
      i >= s.length - t.states.rightFixedLeafColumnsLength.value && (a = "right");
      break;
    default:
      o < t.states.fixedLeafColumnsLength.value ? a = "left" : i >= s.length - t.states.rightFixedLeafColumnsLength.value && (a = "right");
  }
  return a ? {
    direction: a,
    start: i,
    after: o
  } : {};
}, oL = (n, e, t, r, i, o = 0) => {
  const s = [], { direction: a, start: l, after: u } = E7(e, t, r, i);
  if (a) {
    const c = a === "left";
    s.push(`${n}-fixed-column--${a}`), c && u + o === r.states.fixedLeafColumnsLength.value - 1 ? s.push("is-last-column") : !c && l - o === r.states.columns.value.length - r.states.rightFixedLeafColumnsLength.value && s.push("is-first-column");
  }
  return s;
};
function Q3(n, e) {
  return n + (e.realWidth === null || Number.isNaN(e.realWidth) ? Number(e.width) : e.realWidth);
}
const sL = (n, e, t, r) => {
  const {
    direction: i,
    start: o = 0,
    after: s = 0
  } = E7(n, e, t, r);
  if (!i)
    return;
  const a = {}, l = i === "left", u = t.states.columns.value;
  return l ? a.left = u.slice(0, o).reduce(Q3, 0) : a.right = u.slice(s + 1).reverse().reduce(Q3, 0), a;
}, ig = (n, e) => {
  n && (Number.isNaN(n[e]) || (n[e] = `${n[e]}px`));
};
function xwe(n) {
  const e = xt(), t = F(!1), r = F([]);
  return {
    updateExpandRows: () => {
      const l = n.data.value || [], u = n.rowKey.value;
      if (t.value)
        r.value = l.slice();
      else if (u) {
        const c = nf(r.value, u);
        r.value = l.reduce((h, f) => {
          const d = Kr(f, u);
          return c[d] && h.push(f), h;
        }, []);
      } else
        r.value = [];
    },
    toggleRowExpansion: (l, u) => {
      Hm(r.value, l, u) && e.emit("expand-change", l, r.value.slice());
    },
    setExpandRowKeys: (l) => {
      e.store.assertRowKey();
      const u = n.data.value || [], c = n.rowKey.value, h = nf(u, c);
      r.value = l.reduce((f, d) => {
        const p = h[d];
        return p && f.push(p.row), f;
      }, []);
    },
    isRowExpanded: (l) => {
      const u = n.rowKey.value;
      return u ? !!nf(r.value, u)[Kr(l, u)] : r.value.includes(l);
    },
    states: {
      expandRows: r,
      defaultExpandAll: t
    }
  };
}
function Swe(n) {
  const e = xt(), t = F(null), r = F(null), i = (u) => {
    e.store.assertRowKey(), t.value = u, s(u);
  }, o = () => {
    t.value = null;
  }, s = (u) => {
    const { data: c, rowKey: h } = n;
    let f = null;
    h.value && (f = (P(c) || []).find((d) => Kr(d, h.value) === u)), r.value = f, e.emit("current-change", r.value, null);
  };
  return {
    setCurrentRowKey: i,
    restoreCurrentRowKey: o,
    setCurrentRowByKey: s,
    updateCurrentRow: (u) => {
      const c = r.value;
      if (u && u !== c) {
        r.value = u, e.emit("current-change", r.value, c);
        return;
      }
      !u && c && (r.value = null, e.emit("current-change", null, c));
    },
    updateCurrentRowData: () => {
      const u = n.rowKey.value, c = n.data.value || [], h = r.value;
      if (!c.includes(h) && h) {
        if (u) {
          const f = Kr(h, u);
          s(f);
        } else
          r.value = null;
        r.value === null && e.emit("current-change", null, h);
      } else
        t.value && (s(t.value), o());
    },
    states: {
      _currentRowKey: t,
      currentRow: r
    }
  };
}
function _we(n) {
  const e = F([]), t = F({}), r = F(16), i = F(!1), o = F({}), s = F("hasChildren"), a = F("children"), l = xt(), u = B(() => {
    if (!n.rowKey.value)
      return {};
    const m = n.data.value || [];
    return h(m);
  }), c = B(() => {
    const m = n.rowKey.value, y = Object.keys(o.value), b = {};
    return y.length && y.forEach((O) => {
      if (o.value[O].length) {
        const w = { children: [] };
        o.value[O].forEach((x) => {
          const S = Kr(x, m);
          w.children.push(S), x[s.value] && !b[S] && (b[S] = { children: [] });
        }), b[O] = w;
      }
    }), b;
  }), h = (m) => {
    const y = n.rowKey.value, b = {};
    return Owe(m, (O, w, x) => {
      const S = Kr(O, y);
      Array.isArray(w) ? b[S] = {
        children: w.map((_) => Kr(_, y)),
        level: x
      } : i.value && (b[S] = {
        children: [],
        lazy: !0,
        level: x
      });
    }, a.value, s.value), b;
  }, f = (m = !1, y = ((b) => (b = l.store) == null ? void 0 : b.states.defaultExpandAll.value)()) => {
    var b;
    const O = u.value, w = c.value, x = Object.keys(O), S = {};
    if (x.length) {
      const _ = P(t), C = [], A = (k, L) => {
        if (m)
          return e.value ? y || e.value.includes(L) : !!(y || k != null && k.expanded);
        {
          const D = y || e.value && e.value.includes(L);
          return !!(k != null && k.expanded || D);
        }
      };
      x.forEach((k) => {
        const L = _[k], D = { ...O[k] };
        if (D.expanded = A(L, k), D.lazy) {
          const { loaded: E = !1, loading: M = !1 } = L || {};
          D.loaded = !!E, D.loading = !!M, C.push(k);
        }
        S[k] = D;
      });
      const T = Object.keys(w);
      i.value && T.length && C.length && T.forEach((k) => {
        const L = _[k], D = w[k].children;
        if (C.includes(k)) {
          if (S[k].children.length !== 0)
            throw new Error("[ElTable]children must be an empty array.");
          S[k].children = D;
        } else {
          const { loaded: E = !1, loading: M = !1 } = L || {};
          S[k] = {
            lazy: !0,
            loaded: !!E,
            loading: !!M,
            expanded: A(L, k),
            children: D,
            level: ""
          };
        }
      });
    }
    t.value = S, (b = l.store) == null || b.updateTableScrollY();
  };
  de(() => e.value, () => {
    f(!0);
  }), de(() => u.value, () => {
    f();
  }), de(() => c.value, () => {
    f();
  });
  const d = (m) => {
    e.value = m, f();
  }, p = (m, y) => {
    l.store.assertRowKey();
    const b = n.rowKey.value, O = Kr(m, b), w = O && t.value[O];
    if (O && w && "expanded" in w) {
      const x = w.expanded;
      y = typeof y > "u" ? !w.expanded : y, t.value[O].expanded = y, x !== y && l.emit("expand-change", m, y), l.store.updateTableScrollY();
    }
  }, g = (m) => {
    l.store.assertRowKey();
    const y = n.rowKey.value, b = Kr(m, y), O = t.value[b];
    i.value && O && "loaded" in O && !O.loaded ? v(m, b, O) : p(m, void 0);
  }, v = (m, y, b) => {
    const { load: O } = l.props;
    O && !t.value[y].loaded && (t.value[y].loading = !0, O(m, b, (w) => {
      if (!Array.isArray(w))
        throw new TypeError("[ElTable] data must be an array");
      t.value[y].loading = !1, t.value[y].loaded = !0, t.value[y].expanded = !0, w.length && (o.value[y] = w), l.emit("expand-change", m, !0);
    }));
  };
  return {
    loadData: v,
    loadOrToggle: g,
    toggleTreeExpansion: p,
    updateTreeExpandKeys: d,
    updateTreeData: f,
    normalize: h,
    states: {
      expandRowKeys: e,
      treeData: t,
      indent: r,
      lazy: i,
      lazyTreeNodeMap: o,
      lazyColumnIdentifier: s,
      childrenColumnName: a
    }
  };
}
const Cwe = (n, e) => {
  const t = e.sortingColumn;
  return !t || typeof t.sortable == "string" ? n : gwe(n, e.sortProp, e.sortOrder, t.sortMethod, t.sortBy);
}, YO = (n) => {
  const e = [];
  return n.forEach((t) => {
    t.children && t.children.length > 0 ? e.push.apply(e, YO(t.children)) : e.push(t);
  }), e;
};
function Awe() {
  var n;
  const e = xt(), { size: t } = jc((n = e.proxy) == null ? void 0 : n.$props), r = F(null), i = F([]), o = F([]), s = F(!1), a = F([]), l = F([]), u = F([]), c = F([]), h = F([]), f = F([]), d = F([]), p = F([]), g = [], v = F(0), m = F(0), y = F(0), b = F(!1), O = F([]), w = F(!1), x = F(!1), S = F(null), _ = F({}), C = F(null), A = F(null), T = F(null), k = F(null), L = F(null);
  de(i, () => e.state && R(!1), {
    deep: !0
  });
  const D = () => {
    if (!r.value)
      throw new Error("[ElTable] prop row-key is required");
  }, E = (We) => {
    var st;
    (st = We.children) == null || st.forEach(($t) => {
      $t.fixed = We.fixed, E($t);
    });
  }, M = () => {
    a.value.forEach((sn) => {
      E(sn);
    }), c.value = a.value.filter((sn) => sn.fixed === !0 || sn.fixed === "left"), h.value = a.value.filter((sn) => sn.fixed === "right"), c.value.length > 0 && a.value[0] && a.value[0].type === "selection" && !a.value[0].fixed && (a.value[0].fixed = !0, c.value.unshift(a.value[0]));
    const We = a.value.filter((sn) => !sn.fixed);
    l.value = [].concat(c.value).concat(We).concat(h.value);
    const st = YO(We), $t = YO(c.value), Pt = YO(h.value);
    v.value = st.length, m.value = $t.length, y.value = Pt.length, u.value = [].concat($t).concat(st).concat(Pt), s.value = c.value.length > 0 || h.value.length > 0;
  }, R = (We, st = !1) => {
    We && M(), st ? e.state.doLayout() : e.state.debouncedUpdateLayout();
  }, N = (We) => O.value.includes(We), $ = () => {
    b.value = !1, O.value.length && (O.value = [], e.emit("selection-change", []));
  }, V = () => {
    let We;
    if (r.value) {
      We = [];
      const st = nf(O.value, r.value), $t = nf(i.value, r.value);
      for (const Pt in st)
        na(st, Pt) && !$t[Pt] && We.push(st[Pt].row);
    } else
      We = O.value.filter((st) => !i.value.includes(st));
    if (We.length) {
      const st = O.value.filter(($t) => !We.includes($t));
      O.value = st, e.emit("selection-change", st.slice());
    }
  }, H = () => (O.value || []).slice(), G = (We, st = void 0, $t = !0) => {
    if (Hm(O.value, We, st)) {
      const sn = (O.value || []).slice();
      $t && e.emit("select", sn, We), e.emit("selection-change", sn);
    }
  }, q = () => {
    var We, st;
    const $t = x.value ? !b.value : !(b.value || O.value.length);
    b.value = $t;
    let Pt = !1, sn = 0;
    const Dr = (st = (We = e == null ? void 0 : e.store) == null ? void 0 : We.states) == null ? void 0 : st.rowKey.value;
    i.value.forEach((Hi, Ou) => {
      const Ds = Ou + sn;
      S.value ? S.value.call(null, Hi, Ds) && Hm(O.value, Hi, $t) && (Pt = !0) : Hm(O.value, Hi, $t) && (Pt = !0), sn += se(Kr(Hi, Dr));
    }), Pt && e.emit("selection-change", O.value ? O.value.slice() : []), e.emit("select-all", O.value);
  }, Y = () => {
    const We = nf(O.value, r.value);
    i.value.forEach((st) => {
      const $t = Kr(st, r.value), Pt = We[$t];
      Pt && (O.value[Pt.index] = st);
    });
  }, ie = () => {
    var We, st, $t;
    if (((We = i.value) == null ? void 0 : We.length) === 0) {
      b.value = !1;
      return;
    }
    let Pt;
    r.value && (Pt = nf(O.value, r.value));
    const sn = function(Ds) {
      return Pt ? !!Pt[Kr(Ds, r.value)] : O.value.includes(Ds);
    };
    let Dr = !0, Hi = 0, Ou = 0;
    for (let Ds = 0, Ad = (i.value || []).length; Ds < Ad; Ds++) {
      const kC = ($t = (st = e == null ? void 0 : e.store) == null ? void 0 : st.states) == null ? void 0 : $t.rowKey.value, MC = Ds + Ou, Td = i.value[Ds], DC = S.value && S.value.call(null, Td, MC);
      if (sn(Td))
        Hi++;
      else if (!S.value || DC) {
        Dr = !1;
        break;
      }
      Ou += se(Kr(Td, kC));
    }
    Hi === 0 && (Dr = !1), b.value = Dr;
  }, se = (We) => {
    var st;
    if (!e || !e.store)
      return 0;
    const { treeData: $t } = e.store.states;
    let Pt = 0;
    const sn = (st = $t.value[We]) == null ? void 0 : st.children;
    return sn && (Pt += sn.length, sn.forEach((Dr) => {
      Pt += se(Dr);
    })), Pt;
  }, K = (We, st) => {
    Array.isArray(We) || (We = [We]);
    const $t = {};
    return We.forEach((Pt) => {
      _.value[Pt.id] = st, $t[Pt.columnKey || Pt.id] = st;
    }), $t;
  }, re = (We, st, $t) => {
    A.value && A.value !== We && (A.value.order = null), A.value = We, T.value = st, k.value = $t;
  }, ge = () => {
    let We = P(o);
    Object.keys(_.value).forEach((st) => {
      const $t = _.value[st];
      if (!$t || $t.length === 0)
        return;
      const Pt = A7({
        columns: u.value
      }, st);
      Pt && Pt.filterMethod && (We = We.filter((sn) => $t.some((Dr) => Pt.filterMethod.call(null, Dr, sn, Pt))));
    }), C.value = We;
  }, ne = () => {
    i.value = Cwe(C.value, {
      sortingColumn: A.value,
      sortProp: T.value,
      sortOrder: k.value
    });
  }, ue = (We = void 0) => {
    We && We.filter || ge(), ne();
  }, xe = (We) => {
    const { tableHeaderRef: st } = e.refs;
    if (!st)
      return;
    const $t = Object.assign({}, st.filterPanels), Pt = Object.keys($t);
    if (Pt.length)
      if (typeof We == "string" && (We = [We]), Array.isArray(We)) {
        const sn = We.map((Dr) => vwe({
          columns: u.value
        }, Dr));
        Pt.forEach((Dr) => {
          const Hi = sn.find((Ou) => Ou.id === Dr);
          Hi && (Hi.filteredValue = []);
        }), e.store.commit("filterChange", {
          column: sn,
          values: [],
          silent: !0,
          multi: !0
        });
      } else
        Pt.forEach((sn) => {
          const Dr = u.value.find((Hi) => Hi.id === sn);
          Dr && (Dr.filteredValue = []);
        }), _.value = {}, e.store.commit("filterChange", {
          column: {},
          values: [],
          silent: !0
        });
  }, gt = () => {
    A.value && (re(null, null, null), e.store.commit("changeSortCondition", {
      silent: !0
    }));
  }, {
    setExpandRowKeys: He,
    toggleRowExpansion: It,
    updateExpandRows: Rt,
    states: pn,
    isRowExpanded: Xn
  } = xwe({
    data: i,
    rowKey: r
  }), {
    updateTreeExpandKeys: Dn,
    toggleTreeExpansion: yr,
    updateTreeData: ur,
    loadOrToggle: vo,
    states: mo
  } = _we({
    data: i,
    rowKey: r
  }), {
    updateCurrentRowData: ji,
    updateCurrentRow: ve,
    setCurrentRowKey: yt,
    states: Ln
  } = Swe({
    data: i,
    rowKey: r
  });
  return {
    assertRowKey: D,
    updateColumns: M,
    scheduleLayout: R,
    isSelected: N,
    clearSelection: $,
    cleanSelection: V,
    getSelectionRows: H,
    toggleRowSelection: G,
    _toggleAllSelection: q,
    toggleAllSelection: null,
    updateSelectionByRowKey: Y,
    updateAllSelected: ie,
    updateFilters: K,
    updateCurrentRow: ve,
    updateSort: re,
    execFilter: ge,
    execSort: ne,
    execQuery: ue,
    clearFilter: xe,
    clearSort: gt,
    toggleRowExpansion: It,
    setExpandRowKeysAdapter: (We) => {
      He(We), Dn(We);
    },
    setCurrentRowKey: yt,
    toggleRowExpansionAdapter: (We, st) => {
      u.value.some(({ type: Pt }) => Pt === "expand") ? It(We, st) : yr(We, st);
    },
    isRowExpanded: Xn,
    updateExpandRows: Rt,
    updateCurrentRowData: ji,
    loadOrToggle: vo,
    updateTreeData: ur,
    states: {
      tableSize: t,
      rowKey: r,
      data: i,
      _data: o,
      isComplex: s,
      _columns: a,
      originColumns: l,
      columns: u,
      fixedColumns: c,
      rightFixedColumns: h,
      leafColumns: f,
      fixedLeafColumns: d,
      rightFixedLeafColumns: p,
      updateOrderFns: g,
      leafColumnsLength: v,
      fixedLeafColumnsLength: m,
      rightFixedLeafColumnsLength: y,
      isAllSelected: b,
      selection: O,
      reserveSelection: w,
      selectOnIndeterminate: x,
      selectable: S,
      filters: _,
      filteredData: C,
      sortingColumn: A,
      sortProp: T,
      sortOrder: k,
      hoverRow: L,
      ...pn,
      ...mo,
      ...Ln
    }
  };
}
function UP(n, e) {
  return n.map((t) => {
    var r;
    return t.id === e.id ? e : ((r = t.children) != null && r.length && (t.children = UP(t.children, e)), t);
  });
}
function KP(n) {
  n.forEach((e) => {
    var t, r;
    e.no = (t = e.getColumnIndex) == null ? void 0 : t.call(e), (r = e.children) != null && r.length && KP(e.children);
  }), n.sort((e, t) => e.no - t.no);
}
function Twe() {
  const n = xt(), e = Awe();
  return {
    ns: Ie("table"),
    ...e,
    mutations: {
      setData(s, a) {
        const l = P(s._data) !== a;
        s.data.value = a, s._data.value = a, n.store.execQuery(), n.store.updateCurrentRowData(), n.store.updateExpandRows(), n.store.updateTreeData(n.store.states.defaultExpandAll.value), P(s.reserveSelection) ? (n.store.assertRowKey(), n.store.updateSelectionByRowKey()) : l ? n.store.clearSelection() : n.store.cleanSelection(), n.store.updateAllSelected(), n.$ready && n.store.scheduleLayout();
      },
      insertColumn(s, a, l, u) {
        const c = P(s._columns);
        let h = [];
        l ? (l && !l.children && (l.children = []), l.children.push(a), h = UP(c, l)) : (c.push(a), h = c), KP(h), s._columns.value = h, s.updateOrderFns.push(u), a.type === "selection" && (s.selectable.value = a.selectable, s.reserveSelection.value = a.reserveSelection), n.$ready && (n.store.updateColumns(), n.store.scheduleLayout());
      },
      updateColumnOrder(s, a) {
        var l;
        ((l = a.getColumnIndex) == null ? void 0 : l.call(a)) !== a.no && (KP(s._columns.value), n.$ready && n.store.updateColumns());
      },
      removeColumn(s, a, l, u) {
        const c = P(s._columns) || [];
        if (l)
          l.children.splice(l.children.findIndex((f) => f.id === a.id), 1), ut(() => {
            var f;
            ((f = l.children) == null ? void 0 : f.length) === 0 && delete l.children;
          }), s._columns.value = UP(c, l);
        else {
          const f = c.indexOf(a);
          f > -1 && (c.splice(f, 1), s._columns.value = c);
        }
        const h = s.updateOrderFns.indexOf(u);
        h > -1 && s.updateOrderFns.splice(h, 1), n.$ready && (n.store.updateColumns(), n.store.scheduleLayout());
      },
      sort(s, a) {
        const { prop: l, order: u, init: c } = a;
        if (l) {
          const h = P(s.columns).find((f) => f.property === l);
          h && (h.order = u, n.store.updateSort(h, l, u), n.store.commit("changeSortCondition", { init: c }));
        }
      },
      changeSortCondition(s, a) {
        const { sortingColumn: l, sortProp: u, sortOrder: c } = s, h = P(l), f = P(u), d = P(c);
        d === null && (s.sortingColumn.value = null, s.sortProp.value = null);
        const p = { filter: !0 };
        n.store.execQuery(p), (!a || !(a.silent || a.init)) && n.emit("sort-change", {
          column: h,
          prop: f,
          order: d
        }), n.store.updateTableScrollY();
      },
      filterChange(s, a) {
        const { column: l, values: u, silent: c } = a, h = n.store.updateFilters(l, u);
        n.store.execQuery(), c || n.emit("filter-change", h), n.store.updateTableScrollY();
      },
      toggleAllSelection() {
        n.store.toggleAllSelection();
      },
      rowSelectedChanged(s, a) {
        n.store.toggleRowSelection(a), n.store.updateAllSelected();
      },
      setHoverRow(s, a) {
        s.hoverRow.value = a;
      },
      setCurrentRow(s, a) {
        n.store.updateCurrentRow(a);
      }
    },
    commit: function(s, ...a) {
      const l = n.store.mutations;
      if (l[s])
        l[s].apply(n, [n.store.states].concat(a));
      else
        throw new Error(`Action not found: ${s}`);
    },
    updateTableScrollY: function() {
      ut(() => n.layout.updateScrollY.apply(n.layout));
    }
  };
}
const qm = {
  rowKey: "rowKey",
  defaultExpandAll: "defaultExpandAll",
  selectOnIndeterminate: "selectOnIndeterminate",
  indent: "indent",
  lazy: "lazy",
  data: "data",
  "treeProps.hasChildren": {
    key: "lazyColumnIdentifier",
    default: "hasChildren"
  },
  "treeProps.children": {
    key: "childrenColumnName",
    default: "children"
  }
};
function Pwe(n, e) {
  if (!n)
    throw new Error("Table is required.");
  const t = Twe();
  return t.toggleAllSelection = Vf(t._toggleAllSelection, 10), Object.keys(qm).forEach((r) => {
    k7(M7(e, r), r, t);
  }), Ewe(t, e), t;
}
function Ewe(n, e) {
  Object.keys(qm).forEach((t) => {
    de(() => M7(e, t), (r) => {
      k7(r, t, n);
    });
  });
}
function k7(n, e, t) {
  let r = n, i = qm[e];
  typeof qm[e] == "object" && (i = i.key, r = r || qm[e].default), t.states[i].value = r;
}
function M7(n, e) {
  if (e.includes(".")) {
    const t = e.split(".");
    let r = n;
    return t.forEach((i) => {
      r = r[i];
    }), r;
  } else
    return n[e];
}
class kwe {
  constructor(e) {
    this.observers = [], this.table = null, this.store = null, this.columns = [], this.fit = !0, this.showHeader = !0, this.height = F(null), this.scrollX = F(!1), this.scrollY = F(!1), this.bodyWidth = F(null), this.fixedWidth = F(null), this.rightFixedWidth = F(null), this.gutterWidth = 0;
    for (const t in e)
      na(e, t) && (ol(this[t]) ? this[t].value = e[t] : this[t] = e[t]);
    if (!this.table)
      throw new Error("Table is required for Table Layout");
    if (!this.store)
      throw new Error("Store is required for Table Layout");
  }
  updateScrollY() {
    if (this.height.value === null)
      return !1;
    const t = this.table.refs.scrollBarRef;
    if (this.table.vnode.el && (t != null && t.wrapRef)) {
      let r = !0;
      const i = this.scrollY.value;
      return r = t.wrapRef.scrollHeight > t.wrapRef.clientHeight, this.scrollY.value = r, i !== r;
    }
    return !1;
  }
  setHeight(e, t = "height") {
    if (!Ht)
      return;
    const r = this.table.vnode.el;
    if (e = ywe(e), this.height.value = Number(e), !r && (e || e === 0))
      return ut(() => this.setHeight(e, t));
    typeof e == "number" ? (r.style[t] = `${e}px`, this.updateElsHeight()) : typeof e == "string" && (r.style[t] = e, this.updateElsHeight());
  }
  setMaxHeight(e) {
    this.setHeight(e, "max-height");
  }
  getFlattenColumns() {
    const e = [];
    return this.table.store.states.columns.value.forEach((r) => {
      r.isColumnGroup ? e.push.apply(e, r.columns) : e.push(r);
    }), e;
  }
  updateElsHeight() {
    this.updateScrollY(), this.notifyObservers("scrollable");
  }
  headerDisplayNone(e) {
    if (!e)
      return !0;
    let t = e;
    for (; t.tagName !== "DIV"; ) {
      if (getComputedStyle(t).display === "none")
        return !0;
      t = t.parentElement;
    }
    return !1;
  }
  updateColumnsWidth() {
    if (!Ht)
      return;
    const e = this.fit, t = this.table.vnode.el.clientWidth;
    let r = 0;
    const i = this.getFlattenColumns(), o = i.filter((l) => typeof l.width != "number");
    if (i.forEach((l) => {
      typeof l.width == "number" && l.realWidth && (l.realWidth = null);
    }), o.length > 0 && e) {
      if (i.forEach((l) => {
        r += Number(l.width || l.minWidth || 80);
      }), r <= t) {
        this.scrollX.value = !1;
        const l = t - r;
        if (o.length === 1)
          o[0].realWidth = Number(o[0].minWidth || 80) + l;
        else {
          const u = o.reduce((f, d) => f + Number(d.minWidth || 80), 0), c = l / u;
          let h = 0;
          o.forEach((f, d) => {
            if (d === 0)
              return;
            const p = Math.floor(Number(f.minWidth || 80) * c);
            h += p, f.realWidth = Number(f.minWidth || 80) + p;
          }), o[0].realWidth = Number(o[0].minWidth || 80) + l - h;
        }
      } else
        this.scrollX.value = !0, o.forEach((l) => {
          l.realWidth = Number(l.minWidth);
        });
      this.bodyWidth.value = Math.max(r, t), this.table.state.resizeState.value.width = this.bodyWidth.value;
    } else
      i.forEach((l) => {
        !l.width && !l.minWidth ? l.realWidth = 80 : l.realWidth = Number(l.width || l.minWidth), r += l.realWidth;
      }), this.scrollX.value = r > t, this.bodyWidth.value = r;
    const s = this.store.states.fixedColumns.value;
    if (s.length > 0) {
      let l = 0;
      s.forEach((u) => {
        l += Number(u.realWidth || u.width);
      }), this.fixedWidth.value = l;
    }
    const a = this.store.states.rightFixedColumns.value;
    if (a.length > 0) {
      let l = 0;
      a.forEach((u) => {
        l += Number(u.realWidth || u.width);
      }), this.rightFixedWidth.value = l;
    }
    this.notifyObservers("columns");
  }
  addObserver(e) {
    this.observers.push(e);
  }
  removeObserver(e) {
    const t = this.observers.indexOf(e);
    t !== -1 && this.observers.splice(t, 1);
  }
  notifyObservers(e) {
    this.observers.forEach((r) => {
      var i, o;
      switch (e) {
        case "columns":
          (i = r.state) == null || i.onColumnsChange(this);
          break;
        case "scrollable":
          (o = r.state) == null || o.onScrollableChange(this);
          break;
        default:
          throw new Error(`Table Layout don't have event ${e}.`);
      }
    });
  }
}
const { CheckboxGroup: Mwe } = rg, Dwe = U({
  name: "ElTableFilterPanel",
  components: {
    ElCheckbox: rg,
    ElCheckboxGroup: Mwe,
    ElScrollbar: YD,
    ElTooltip: sb,
    ElIcon: Dt,
    ArrowDown: HS,
    ArrowUp: WG
  },
  directives: { ClickOutside: eL },
  props: {
    placement: {
      type: String,
      default: "bottom-start"
    },
    store: {
      type: Object
    },
    column: {
      type: Object
    },
    upDataColumn: {
      type: Function
    }
  },
  setup(n) {
    const e = xt(), { t } = Wi(), r = Ie("table-filter"), i = e == null ? void 0 : e.parent;
    i.filterPanels.value[n.column.id] || (i.filterPanels.value[n.column.id] = e);
    const o = F(!1), s = F(null), a = B(() => n.column && n.column.filters), l = B(() => n.column.filterClassName ? `${r.b()} ${n.column.filterClassName}` : r.b()), u = B({
      get: () => {
        var w;
        return (((w = n.column) == null ? void 0 : w.filteredValue) || [])[0];
      },
      set: (w) => {
        c.value && (typeof w < "u" && w !== null ? c.value.splice(0, 1, w) : c.value.splice(0, 1));
      }
    }), c = B({
      get() {
        return n.column ? n.column.filteredValue || [] : [];
      },
      set(w) {
        n.column && n.upDataColumn("filteredValue", w);
      }
    }), h = B(() => n.column ? n.column.filterMultiple : !0), f = (w) => w.value === u.value, d = () => {
      o.value = !1;
    }, p = (w) => {
      w.stopPropagation(), o.value = !o.value;
    }, g = () => {
      o.value = !1;
    }, v = () => {
      b(c.value), d();
    }, m = () => {
      c.value = [], b(c.value), d();
    }, y = (w) => {
      u.value = w, b(typeof w < "u" && w !== null ? c.value : []), d();
    }, b = (w) => {
      n.store.commit("filterChange", {
        column: n.column,
        values: w
      }), n.store.updateAllSelected();
    };
    de(o, (w) => {
      n.column && n.upDataColumn("filterOpened", w);
    }, {
      immediate: !0
    });
    const O = B(() => {
      var w, x;
      return (x = (w = s.value) == null ? void 0 : w.popperRef) == null ? void 0 : x.contentRef;
    });
    return {
      tooltipVisible: o,
      multiple: h,
      filterClassName: l,
      filteredValue: c,
      filterValue: u,
      filters: a,
      handleConfirm: v,
      handleReset: m,
      handleSelect: y,
      isActive: f,
      t,
      ns: r,
      showFilterPanel: p,
      hideFilterPanel: g,
      popperPaneRef: O,
      tooltip: s
    };
  }
}), Lwe = { key: 0 }, Iwe = ["disabled"], Rwe = ["label", "onClick"];
function $we(n, e, t, r, i, o) {
  const s = Tn("el-checkbox"), a = Tn("el-checkbox-group"), l = Tn("el-scrollbar"), u = Tn("arrow-up"), c = Tn("arrow-down"), h = Tn("el-icon"), f = Tn("el-tooltip"), d = yD("click-outside");
  return z(), ye(f, {
    ref: "tooltip",
    visible: n.tooltipVisible,
    offset: 0,
    placement: n.placement,
    "show-arrow": !1,
    "stop-popper-mouse-event": !1,
    teleported: "",
    effect: "light",
    pure: "",
    "popper-class": n.filterClassName,
    persistent: ""
  }, {
    content: me(() => [
      n.multiple ? (z(), X("div", Lwe, [
        J("div", {
          class: Z(n.ns.e("content"))
        }, [
          pe(l, {
            "wrap-class": n.ns.e("wrap")
          }, {
            default: me(() => [
              pe(a, {
                modelValue: n.filteredValue,
                "onUpdate:modelValue": e[0] || (e[0] = (p) => n.filteredValue = p),
                class: Z(n.ns.e("checkbox-group"))
              }, {
                default: me(() => [
                  (z(!0), X(pr, null, Nf(n.filters, (p) => (z(), ye(s, {
                    key: p.value,
                    label: p.value
                  }, {
                    default: me(() => [
                      uo(Ke(p.text), 1)
                    ]),
                    _: 2
                  }, 1032, ["label"]))), 128))
                ]),
                _: 1
              }, 8, ["modelValue", "class"])
            ]),
            _: 1
          }, 8, ["wrap-class"])
        ], 2),
        J("div", {
          class: Z(n.ns.e("bottom"))
        }, [
          J("button", {
            class: Z({ [n.ns.is("disabled")]: n.filteredValue.length === 0 }),
            disabled: n.filteredValue.length === 0,
            type: "button",
            onClick: e[1] || (e[1] = (...p) => n.handleConfirm && n.handleConfirm(...p))
          }, Ke(n.t("el.table.confirmFilter")), 11, Iwe),
          J("button", {
            type: "button",
            onClick: e[2] || (e[2] = (...p) => n.handleReset && n.handleReset(...p))
          }, Ke(n.t("el.table.resetFilter")), 1)
        ], 2)
      ])) : (z(), X("ul", {
        key: 1,
        class: Z(n.ns.e("list"))
      }, [
        J("li", {
          class: Z([
            n.ns.e("list-item"),
            {
              [n.ns.is("active")]: n.filterValue === void 0 || n.filterValue === null
            }
          ]),
          onClick: e[3] || (e[3] = (p) => n.handleSelect(null))
        }, Ke(n.t("el.table.clearFilter")), 3),
        (z(!0), X(pr, null, Nf(n.filters, (p) => (z(), X("li", {
          key: p.value,
          class: Z([n.ns.e("list-item"), n.ns.is("active", n.isActive(p))]),
          label: p.value,
          onClick: (g) => n.handleSelect(p.value)
        }, Ke(p.text), 11, Rwe))), 128))
      ], 2))
    ]),
    default: me(() => [
      zt((z(), X("span", {
        class: Z([
          `${n.ns.namespace.value}-table__column-filter-trigger`,
          `${n.ns.namespace.value}-none-outline`
        ]),
        onClick: e[4] || (e[4] = (...p) => n.showFilterPanel && n.showFilterPanel(...p))
      }, [
        pe(h, null, {
          default: me(() => [
            n.column.filterOpened ? (z(), ye(u, { key: 0 })) : (z(), ye(c, { key: 1 }))
          ]),
          _: 1
        })
      ], 2)), [
        [d, n.hideFilterPanel, n.popperPaneRef]
      ])
    ]),
    _: 1
  }, 8, ["visible", "placement", "popper-class"]);
}
var Nwe = /* @__PURE__ */ Ze(Dwe, [["render", $we], ["__file", "filter-panel.vue"]]);
function D7(n) {
  const e = xt();
  mD(() => {
    t.value.addObserver(e);
  }), dt(() => {
    r(t.value), i(t.value);
  }), H0(() => {
    r(t.value), i(t.value);
  }), j0(() => {
    t.value.removeObserver(e);
  });
  const t = B(() => {
    const o = n.layout;
    if (!o)
      throw new Error("Can not find table layout.");
    return o;
  }), r = (o) => {
    var s;
    const a = ((s = n.vnode.el) == null ? void 0 : s.querySelectorAll("colgroup > col")) || [];
    if (!a.length)
      return;
    const l = o.getFlattenColumns(), u = {};
    l.forEach((c) => {
      u[c.id] = c;
    });
    for (let c = 0, h = a.length; c < h; c++) {
      const f = a[c], d = f.getAttribute("name"), p = u[d];
      p && f.setAttribute("width", p.realWidth || p.width);
    }
  }, i = (o) => {
    var s, a;
    const l = ((s = n.vnode.el) == null ? void 0 : s.querySelectorAll("colgroup > col[name=gutter]")) || [];
    for (let c = 0, h = l.length; c < h; c++)
      l[c].setAttribute("width", o.scrollY.value ? o.gutterWidth : "0");
    const u = ((a = n.vnode.el) == null ? void 0 : a.querySelectorAll("th.gutter")) || [];
    for (let c = 0, h = u.length; c < h; c++) {
      const f = u[c];
      f.style.width = o.scrollY.value ? `${o.gutterWidth}px` : "0", f.style.display = o.scrollY.value ? "" : "none";
    }
  };
  return {
    tableLayout: t.value,
    onColumnsChange: r,
    onScrollableChange: i
  };
}
const bl = Symbol("ElTable");
function Bwe(n, e) {
  const t = xt(), r = $e(bl), i = (g) => {
    g.stopPropagation();
  }, o = (g, v) => {
    !v.filters && v.sortable ? p(g, v, !1) : v.filterable && !v.sortable && i(g), r == null || r.emit("header-click", v, g);
  }, s = (g, v) => {
    r == null || r.emit("header-contextmenu", v, g);
  }, a = F(null), l = F(!1), u = F({}), c = (g, v) => {
    if (Ht && !(v.children && v.children.length > 0) && a.value && n.border) {
      l.value = !0;
      const m = r;
      e("set-drag-visible", !0);
      const b = (m == null ? void 0 : m.vnode.el).getBoundingClientRect().left, O = t.vnode.el.querySelector(`th.${v.id}`), w = O.getBoundingClientRect(), x = w.left - b + 30;
      Iy(O, "noclick"), u.value = {
        startMouseLeft: g.clientX,
        startLeft: w.right - b,
        startColumnLeft: w.left - b,
        tableLeft: b
      };
      const S = m == null ? void 0 : m.refs.resizeProxy;
      S.style.left = `${u.value.startLeft}px`, document.onselectstart = function() {
        return !1;
      }, document.ondragstart = function() {
        return !1;
      };
      const _ = (A) => {
        const T = A.clientX - u.value.startMouseLeft, k = u.value.startLeft + T;
        S.style.left = `${Math.max(x, k)}px`;
      }, C = () => {
        if (l.value) {
          const { startColumnLeft: A, startLeft: T } = u.value, L = Number.parseInt(S.style.left, 10) - A;
          v.width = v.realWidth = L, m == null || m.emit("header-dragend", v.width, T - A, v, g), requestAnimationFrame(() => {
            n.store.scheduleLayout(!1, !0);
          }), document.body.style.cursor = "", l.value = !1, a.value = null, u.value = {}, e("set-drag-visible", !1);
        }
        document.removeEventListener("mousemove", _), document.removeEventListener("mouseup", C), document.onselectstart = null, document.ondragstart = null, setTimeout(() => {
          Xp(O, "noclick");
        }, 0);
      };
      document.addEventListener("mousemove", _), document.addEventListener("mouseup", C);
    }
  }, h = (g, v) => {
    if (v.children && v.children.length > 0)
      return;
    const m = g.target;
    if (!ra(m))
      return;
    const y = m == null ? void 0 : m.closest("th");
    if (!(!v || !v.resizable) && !l.value && n.border) {
      const b = y.getBoundingClientRect(), O = document.body.style;
      b.width > 12 && b.right - g.pageX < 8 ? (O.cursor = "col-resize", _p(y, "is-sortable") && (y.style.cursor = "col-resize"), a.value = v) : l.value || (O.cursor = "", _p(y, "is-sortable") && (y.style.cursor = "pointer"), a.value = null);
    }
  }, f = () => {
    Ht && (document.body.style.cursor = "");
  }, d = ({ order: g, sortOrders: v }) => {
    if (g === "")
      return v[0];
    const m = v.indexOf(g || null);
    return v[m > v.length - 2 ? 0 : m + 1];
  }, p = (g, v, m) => {
    var y;
    g.stopPropagation();
    const b = v.order === m ? null : m || d(v), O = (y = g.target) == null ? void 0 : y.closest("th");
    if (O && _p(O, "noclick")) {
      Xp(O, "noclick");
      return;
    }
    if (!v.sortable)
      return;
    const w = n.store.states;
    let x = w.sortProp.value, S;
    const _ = w.sortingColumn.value;
    (_ !== v || _ === v && _.order === null) && (_ && (_.order = null), w.sortingColumn.value = v, x = v.property), b ? S = v.order = b : S = v.order = null, w.sortProp.value = x, w.sortOrder.value = S, r == null || r.store.commit("changeSortCondition");
  };
  return {
    handleHeaderClick: o,
    handleHeaderContextMenu: s,
    handleMouseDown: c,
    handleMouseMove: h,
    handleMouseOut: f,
    handleSortClick: p,
    handleFilterClick: i
  };
}
function Vwe(n) {
  const e = $e(bl), t = Ie("table");
  return {
    getHeaderRowStyle: (a) => {
      const l = e == null ? void 0 : e.props.headerRowStyle;
      return typeof l == "function" ? l.call(null, { rowIndex: a }) : l;
    },
    getHeaderRowClass: (a) => {
      const l = [], u = e == null ? void 0 : e.props.headerRowClassName;
      return typeof u == "string" ? l.push(u) : typeof u == "function" && l.push(u.call(null, { rowIndex: a })), l.join(" ");
    },
    getHeaderCellStyle: (a, l, u, c) => {
      var h;
      let f = (h = e == null ? void 0 : e.props.headerCellStyle) != null ? h : {};
      typeof f == "function" && (f = f.call(null, {
        rowIndex: a,
        columnIndex: l,
        row: u,
        column: c
      }));
      const d = sL(l, c.fixed, n.store, u);
      return ig(d, "left"), ig(d, "right"), Object.assign({}, f, d);
    },
    getHeaderCellClass: (a, l, u, c) => {
      const h = oL(t.b(), l, c.fixed, n.store, u), f = [
        c.id,
        c.order,
        c.headerAlign,
        c.className,
        c.labelClassName,
        ...h
      ];
      c.children || f.push("is-leaf"), c.sortable && f.push("is-sortable");
      const d = e == null ? void 0 : e.props.headerCellClassName;
      return typeof d == "string" ? f.push(d) : typeof d == "function" && f.push(d.call(null, {
        rowIndex: a,
        columnIndex: l,
        row: u,
        column: c
      })), f.push(t.e("cell")), f.filter((p) => !!p).join(" ");
    }
  };
}
const L7 = (n) => {
  const e = [];
  return n.forEach((t) => {
    t.children ? (e.push(t), e.push.apply(e, L7(t.children))) : e.push(t);
  }), e;
}, zwe = (n) => {
  let e = 1;
  const t = (o, s) => {
    if (s && (o.level = s.level + 1, e < o.level && (e = o.level)), o.children) {
      let a = 0;
      o.children.forEach((l) => {
        t(l, o), a += l.colSpan;
      }), o.colSpan = a;
    } else
      o.colSpan = 1;
  };
  n.forEach((o) => {
    o.level = 1, t(o, void 0);
  });
  const r = [];
  for (let o = 0; o < e; o++)
    r.push([]);
  return L7(n).forEach((o) => {
    o.children ? (o.rowSpan = 1, o.children.forEach((s) => s.isSubColumn = !0)) : o.rowSpan = e - o.level + 1, r[o.level - 1].push(o);
  }), r;
};
function Fwe(n) {
  const e = $e(bl), t = B(() => zwe(n.store.states.originColumns.value));
  return {
    isGroup: B(() => {
      const o = t.value.length > 1;
      return o && e && (e.state.isGroup.value = !0), o;
    }),
    toggleAllSelection: (o) => {
      o.stopPropagation(), e == null || e.store.commit("toggleAllSelection");
    },
    columnRows: t
  };
}
var Qwe = U({
  name: "ElTableHeader",
  components: {
    ElCheckbox: rg
  },
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: !0,
      type: Object
    },
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => ({
        prop: "",
        order: ""
      })
    }
  },
  setup(n, { emit: e }) {
    const t = xt(), r = $e(bl), i = Ie("table"), o = F({}), { onColumnsChange: s, onScrollableChange: a } = D7(r);
    dt(async () => {
      await ut(), await ut();
      const { prop: x, order: S } = n.defaultSort;
      r == null || r.store.commit("sort", { prop: x, order: S, init: !0 });
    });
    const {
      handleHeaderClick: l,
      handleHeaderContextMenu: u,
      handleMouseDown: c,
      handleMouseMove: h,
      handleMouseOut: f,
      handleSortClick: d,
      handleFilterClick: p
    } = Bwe(n, e), {
      getHeaderRowStyle: g,
      getHeaderRowClass: v,
      getHeaderCellStyle: m,
      getHeaderCellClass: y
    } = Vwe(n), { isGroup: b, toggleAllSelection: O, columnRows: w } = Fwe(n);
    return t.state = {
      onColumnsChange: s,
      onScrollableChange: a
    }, t.filterPanels = o, {
      ns: i,
      filterPanels: o,
      onColumnsChange: s,
      onScrollableChange: a,
      columnRows: w,
      getHeaderRowClass: v,
      getHeaderRowStyle: g,
      getHeaderCellClass: y,
      getHeaderCellStyle: m,
      handleHeaderClick: l,
      handleHeaderContextMenu: u,
      handleMouseDown: c,
      handleMouseMove: h,
      handleMouseOut: f,
      handleSortClick: d,
      handleFilterClick: p,
      isGroup: b,
      toggleAllSelection: O
    };
  },
  render() {
    const {
      ns: n,
      isGroup: e,
      columnRows: t,
      getHeaderCellStyle: r,
      getHeaderCellClass: i,
      getHeaderRowClass: o,
      getHeaderRowStyle: s,
      handleHeaderClick: a,
      handleHeaderContextMenu: l,
      handleMouseDown: u,
      handleMouseMove: c,
      handleSortClick: h,
      handleMouseOut: f,
      store: d,
      $parent: p
    } = this;
    let g = 1;
    return nt("thead", {
      class: { [n.is("group")]: e }
    }, t.map((v, m) => nt("tr", {
      class: o(m),
      key: m,
      style: s(m)
    }, v.map((y, b) => (y.rowSpan > g && (g = y.rowSpan), nt("th", {
      class: i(m, b, v, y),
      colspan: y.colSpan,
      key: `${y.id}-thead`,
      rowspan: y.rowSpan,
      style: r(m, b, v, y),
      onClick: (O) => a(O, y),
      onContextmenu: (O) => l(O, y),
      onMousedown: (O) => u(O, y),
      onMousemove: (O) => c(O, y),
      onMouseout: f
    }, [
      nt("div", {
        class: [
          "cell",
          y.filteredValue && y.filteredValue.length > 0 ? "highlight" : ""
        ]
      }, [
        y.renderHeader ? y.renderHeader({
          column: y,
          $index: b,
          store: d,
          _self: p
        }) : y.label,
        y.sortable && nt("span", {
          onClick: (O) => h(O, y),
          class: "caret-wrapper"
        }, [
          nt("i", {
            onClick: (O) => h(O, y, "ascending"),
            class: "sort-caret ascending"
          }),
          nt("i", {
            onClick: (O) => h(O, y, "descending"),
            class: "sort-caret descending"
          })
        ]),
        y.filterable && nt(Nwe, {
          store: d,
          placement: y.filterPlacement || "bottom-start",
          column: y,
          upDataColumn: (O, w) => {
            y[O] = w;
          }
        })
      ])
    ]))))));
  }
});
function Zwe(n) {
  const e = $e(bl), t = F(""), r = F(nt("div")), i = (p, g, v) => {
    var m;
    const y = e, b = XC(p);
    let O;
    const w = (m = y == null ? void 0 : y.vnode.el) == null ? void 0 : m.dataset.prefix;
    b && (O = z3({
      columns: n.store.states.columns.value
    }, b, w), O && (y == null || y.emit(`cell-${v}`, g, O, b, p))), y == null || y.emit(`row-${v}`, g, O, p);
  }, o = (p, g) => {
    i(p, g, "dblclick");
  }, s = (p, g) => {
    n.store.commit("setCurrentRow", g), i(p, g, "click");
  }, a = (p, g) => {
    i(p, g, "contextmenu");
  }, l = Vf((p) => {
    n.store.commit("setHoverRow", p);
  }, 30), u = Vf(() => {
    n.store.commit("setHoverRow", null);
  }, 30), c = (p) => {
    const g = window.getComputedStyle(p, null), v = Number.parseInt(g.paddingLeft, 10) || 0, m = Number.parseInt(g.paddingRight, 10) || 0, y = Number.parseInt(g.paddingTop, 10) || 0, b = Number.parseInt(g.paddingBottom, 10) || 0;
    return {
      left: v,
      right: m,
      top: y,
      bottom: b
    };
  }, h = (p, g, v) => {
    let m = g.target.parentNode;
    for (; p > 1 && (m = m == null ? void 0 : m.nextSibling, !(!m || m.nodeName !== "TR")); )
      v(m, "hover-row hover-fixed-row"), p--;
  };
  return {
    handleDoubleClick: o,
    handleClick: s,
    handleContextMenu: a,
    handleMouseEnter: l,
    handleMouseLeave: u,
    handleCellMouseEnter: (p, g, v) => {
      var m;
      const y = e, b = XC(p), O = (m = y == null ? void 0 : y.vnode.el) == null ? void 0 : m.dataset.prefix;
      if (b) {
        const R = z3({
          columns: n.store.states.columns.value
        }, b, O);
        b.rowSpan > 1 && h(b.rowSpan, p, Iy);
        const N = y.hoverState = { cell: b, column: R, row: g };
        y == null || y.emit("cell-mouse-enter", N.row, N.column, N.cell, p);
      }
      if (!v)
        return;
      const w = p.target.querySelector(".cell");
      if (!(_p(w, `${O}-tooltip`) && w.childNodes.length))
        return;
      const x = document.createRange();
      x.setStart(w, 0), x.setEnd(w, w.childNodes.length);
      let S = x.getBoundingClientRect().width, _ = x.getBoundingClientRect().height;
      S - Math.floor(S) < 1e-3 && (S = Math.floor(S)), _ - Math.floor(_) < 1e-3 && (_ = Math.floor(_));
      const { top: T, left: k, right: L, bottom: D } = c(w), E = k + L, M = T + D;
      (S + E > w.offsetWidth || _ + M > w.offsetHeight || w.scrollWidth > w.offsetWidth) && wwe(v, b.innerText || b.textContent, b, y);
    },
    handleCellMouseLeave: (p) => {
      const g = XC(p);
      if (!g)
        return;
      g.rowSpan > 1 && h(g.rowSpan, p, Xp);
      const v = e == null ? void 0 : e.hoverState;
      e == null || e.emit("cell-mouse-leave", v == null ? void 0 : v.row, v == null ? void 0 : v.column, v == null ? void 0 : v.cell, p);
    },
    tooltipContent: t,
    tooltipTrigger: r
  };
}
function Wwe(n) {
  const e = $e(bl), t = Ie("table");
  return {
    getRowStyle: (u, c) => {
      const h = e == null ? void 0 : e.props.rowStyle;
      return typeof h == "function" ? h.call(null, {
        row: u,
        rowIndex: c
      }) : h || null;
    },
    getRowClass: (u, c) => {
      const h = [t.e("row")];
      e != null && e.props.highlightCurrentRow && u === n.store.states.currentRow.value && h.push("current-row"), n.stripe && c % 2 === 1 && h.push(t.em("row", "striped"));
      const f = e == null ? void 0 : e.props.rowClassName;
      return typeof f == "string" ? h.push(f) : typeof f == "function" && h.push(f.call(null, {
        row: u,
        rowIndex: c
      })), h;
    },
    getCellStyle: (u, c, h, f) => {
      const d = e == null ? void 0 : e.props.cellStyle;
      let p = d ?? {};
      typeof d == "function" && (p = d.call(null, {
        rowIndex: u,
        columnIndex: c,
        row: h,
        column: f
      }));
      const g = sL(c, n == null ? void 0 : n.fixed, n.store);
      return ig(g, "left"), ig(g, "right"), Object.assign({}, p, g);
    },
    getCellClass: (u, c, h, f, d) => {
      const p = oL(t.b(), c, n == null ? void 0 : n.fixed, n.store, void 0, d), g = [f.id, f.align, f.className, ...p], v = e == null ? void 0 : e.props.cellClassName;
      return typeof v == "string" ? g.push(v) : typeof v == "function" && g.push(v.call(null, {
        rowIndex: u,
        columnIndex: c,
        row: h,
        column: f
      })), g.push(t.e("cell")), g.filter((m) => !!m).join(" ");
    },
    getSpan: (u, c, h, f) => {
      let d = 1, p = 1;
      const g = e == null ? void 0 : e.props.spanMethod;
      if (typeof g == "function") {
        const v = g({
          row: u,
          column: c,
          rowIndex: h,
          columnIndex: f
        });
        Array.isArray(v) ? (d = v[0], p = v[1]) : typeof v == "object" && (d = v.rowspan, p = v.colspan);
      }
      return { rowspan: d, colspan: p };
    },
    getColspanRealWidth: (u, c, h) => {
      if (c < 1)
        return u[h].realWidth;
      const f = u.map(({ realWidth: d, width: p }) => d || p).slice(h, h + c);
      return Number(f.reduce((d, p) => Number(d) + Number(p), -1));
    }
  };
}
function Gwe(n) {
  const e = $e(bl), t = Ie("table"), {
    handleDoubleClick: r,
    handleClick: i,
    handleContextMenu: o,
    handleMouseEnter: s,
    handleMouseLeave: a,
    handleCellMouseEnter: l,
    handleCellMouseLeave: u,
    tooltipContent: c,
    tooltipTrigger: h
  } = Zwe(n), {
    getRowStyle: f,
    getRowClass: d,
    getCellStyle: p,
    getCellClass: g,
    getSpan: v,
    getColspanRealWidth: m
  } = Wwe(n), y = B(() => n.store.states.columns.value.findIndex(({ type: S }) => S === "default")), b = (S, _) => {
    const C = e.props.rowKey;
    return C ? Kr(S, C) : _;
  }, O = (S, _, C, A = !1) => {
    const { tooltipEffect: T, tooltipOptions: k, store: L } = n, { indent: D, columns: E } = L.states, M = d(S, _);
    let R = !0;
    return C && (M.push(t.em("row", `level-${C.level}`)), R = C.display), nt("tr", {
      style: [R ? null : {
        display: "none"
      }, f(S, _)],
      class: M,
      key: b(S, _),
      onDblclick: ($) => r($, S),
      onClick: ($) => i($, S),
      onContextmenu: ($) => o($, S),
      onMouseenter: () => s(_),
      onMouseleave: a
    }, E.value.map(($, V) => {
      const { rowspan: H, colspan: G } = v(S, $, _, V);
      if (!H || !G)
        return null;
      const q = Object.assign({}, $);
      q.realWidth = m(E.value, G, V);
      const Y = {
        store: n.store,
        _self: n.context || e,
        column: q,
        row: S,
        $index: _,
        cellIndex: V,
        expanded: A
      };
      V === y.value && C && (Y.treeNode = {
        indent: C.level * D.value,
        level: C.level
      }, typeof C.expanded == "boolean" && (Y.treeNode.expanded = C.expanded, "loading" in C && (Y.treeNode.loading = C.loading), "noLazyChildren" in C && (Y.treeNode.noLazyChildren = C.noLazyChildren)));
      const ie = `${_},${V}`, se = q.columnKey || q.rawColumnKey || "", K = w(V, $, Y), re = $.showOverflowTooltip && jn({
        effect: T
      }, k, $.showOverflowTooltip);
      return nt("td", {
        style: p(_, V, S, $),
        class: g(_, V, S, $, G - 1),
        key: `${se}${ie}`,
        rowspan: H,
        colspan: G,
        onMouseenter: (ge) => l(ge, S, re),
        onMouseleave: u
      }, [K]);
    }));
  }, w = (S, _, C) => _.renderCell(C);
  return {
    wrappedRowRender: (S, _) => {
      const C = n.store, { isRowExpanded: A, assertRowKey: T } = C, { treeData: k, lazyTreeNodeMap: L, childrenColumnName: D, rowKey: E } = C.states, M = C.states.columns.value;
      if (M.some(({ type: N }) => N === "expand")) {
        const N = A(S), $ = O(S, _, void 0, N), V = e.renderExpanded;
        return N ? V ? [
          [
            $,
            nt("tr", {
              key: `expanded-row__${$.key}`
            }, [
              nt("td", {
                colspan: M.length,
                class: `${t.e("cell")} ${t.e("expanded-cell")}`
              }, [V({ row: S, $index: _, store: C, expanded: N })])
            ])
          ]
        ] : (console.error("[Element Error]renderExpanded is required."), $) : [[$]];
      } else if (Object.keys(k.value).length) {
        T();
        const N = Kr(S, E.value);
        let $ = k.value[N], V = null;
        $ && (V = {
          expanded: $.expanded,
          level: $.level,
          display: !0
        }, typeof $.lazy == "boolean" && (typeof $.loaded == "boolean" && $.loaded && (V.noLazyChildren = !($.children && $.children.length)), V.loading = $.loading));
        const H = [O(S, _, V)];
        if ($) {
          let G = 0;
          const q = (ie, se) => {
            ie && ie.length && se && ie.forEach((K) => {
              const re = {
                display: se.display && se.expanded,
                level: se.level + 1,
                expanded: !1,
                noLazyChildren: !1,
                loading: !1
              }, ge = Kr(K, E.value);
              if (ge == null)
                throw new Error("For nested data item, row-key is required.");
              if ($ = { ...k.value[ge] }, $ && (re.expanded = $.expanded, $.level = $.level || re.level, $.display = !!($.expanded && re.display), typeof $.lazy == "boolean" && (typeof $.loaded == "boolean" && $.loaded && (re.noLazyChildren = !($.children && $.children.length)), re.loading = $.loading)), G++, H.push(O(K, _ + G, re)), $) {
                const ne = L.value[ge] || K[D.value];
                q(ne, $);
              }
            });
          };
          $.display = !0;
          const Y = L.value[N] || S[D.value];
          q(Y, $);
        }
        return H;
      } else
        return O(S, _, void 0);
    },
    tooltipContent: c,
    tooltipTrigger: h
  };
}
const jwe = {
  store: {
    required: !0,
    type: Object
  },
  stripe: Boolean,
  tooltipEffect: String,
  tooltipOptions: {
    type: Object
  },
  context: {
    default: () => ({}),
    type: Object
  },
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  fixed: {
    type: String,
    default: ""
  },
  highlight: Boolean
};
var Hwe = U({
  name: "ElTableBody",
  props: jwe,
  setup(n) {
    const e = xt(), t = $e(bl), r = Ie("table"), { wrappedRowRender: i, tooltipContent: o, tooltipTrigger: s } = Gwe(n), { onColumnsChange: a, onScrollableChange: l } = D7(t), u = [];
    return de(n.store.states.hoverRow, (c, h) => {
      var f;
      const d = e == null ? void 0 : e.vnode.el, p = Array.from((d == null ? void 0 : d.children) || []).filter((m) => m == null ? void 0 : m.classList.contains(`${r.e("row")}`));
      let g = c;
      const v = (f = p[g]) == null ? void 0 : f.childNodes;
      v != null && v.length ? Array.from(v).reduce((y, b, O) => {
        var w, x;
        const S = ((w = v[O - 1]) == null ? void 0 : w.colSpan) > 1, _ = ((x = v[O + 1]) == null ? void 0 : x.colSpan) > 1;
        return b.nodeName !== "TD" && !S && !_ && y.push(O), y;
      }, []).forEach((y) => {
        for (var b; g > 0; ) {
          const O = (b = p[g - 1]) == null ? void 0 : b.childNodes;
          if (O[y] && O[y].nodeName === "TD") {
            Iy(O[y], "hover-cell"), u.push(O[y]);
            break;
          }
          g--;
        }
      }) : (u.forEach((m) => Xp(m, "hover-cell")), u.length = 0), !(!n.store.states.isComplex.value || !Ht) && Upe(() => {
        const m = p[h], y = p[c];
        m && !m.classList.contains("hover-fixed-row") && Xp(m, "hover-row"), y && Iy(y, "hover-row");
      });
    }), j0(() => {
      var c;
      (c = Xo) == null || c();
    }), {
      ns: r,
      onColumnsChange: a,
      onScrollableChange: l,
      wrappedRowRender: i,
      tooltipContent: o,
      tooltipTrigger: s
    };
  },
  render() {
    const { wrappedRowRender: n, store: e } = this, t = e.states.data.value || [];
    return nt("tbody", { tabIndex: -1 }, [
      t.reduce((r, i) => r.concat(n(i, r.length)), [])
    ]);
  }
});
function qwe() {
  const n = $e(bl), e = n == null ? void 0 : n.store, t = B(() => e.states.fixedLeafColumnsLength.value), r = B(() => e.states.rightFixedColumns.value.length), i = B(() => e.states.columns.value.length), o = B(() => e.states.fixedColumns.value.length), s = B(() => e.states.rightFixedColumns.value.length);
  return {
    leftFixedLeafCount: t,
    rightFixedLeafCount: r,
    columnsCount: i,
    leftFixedCount: o,
    rightFixedCount: s,
    columns: e.states.columns
  };
}
function Ywe(n) {
  const { columns: e } = qwe(), t = Ie("table");
  return {
    getCellClasses: (o, s) => {
      const a = o[s], l = [
        t.e("cell"),
        a.id,
        a.align,
        a.labelClassName,
        ...oL(t.b(), s, a.fixed, n.store)
      ];
      return a.className && l.push(a.className), a.children || l.push(t.is("leaf")), l;
    },
    getCellStyles: (o, s) => {
      const a = sL(s, o.fixed, n.store);
      return ig(a, "left"), ig(a, "right"), a;
    },
    columns: e
  };
}
var Xwe = U({
  name: "ElTableFooter",
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: !0,
      type: Object
    },
    summaryMethod: Function,
    sumText: String,
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => ({
        prop: "",
        order: ""
      })
    }
  },
  setup(n) {
    const { getCellClasses: e, getCellStyles: t, columns: r } = Ywe(n);
    return {
      ns: Ie("table"),
      getCellClasses: e,
      getCellStyles: t,
      columns: r
    };
  },
  render() {
    const { columns: n, getCellStyles: e, getCellClasses: t, summaryMethod: r, sumText: i } = this, o = this.store.states.data.value;
    let s = [];
    return r ? s = r({
      columns: n,
      data: o
    }) : n.forEach((a, l) => {
      if (l === 0) {
        s[l] = i;
        return;
      }
      const u = o.map((d) => Number(d[a.property])), c = [];
      let h = !0;
      u.forEach((d) => {
        if (!Number.isNaN(+d)) {
          h = !1;
          const p = `${d}`.split(".")[1];
          c.push(p ? p.length : 0);
        }
      });
      const f = Math.max.apply(null, c);
      h ? s[l] = "" : s[l] = u.reduce((d, p) => {
        const g = Number(p);
        return Number.isNaN(+g) ? d : Number.parseFloat((d + p).toFixed(Math.min(f, 20)));
      }, 0);
    }), nt(nt("tfoot", [
      nt("tr", {}, [
        ...n.map((a, l) => nt("td", {
          key: l,
          colspan: a.colSpan,
          rowspan: a.rowSpan,
          class: t(n, l),
          style: e(a, l)
        }, [
          nt("div", {
            class: ["cell", a.labelClassName]
          }, [s[l]])
        ]))
      ])
    ]));
  }
});
function Uwe(n) {
  return {
    setCurrentRow: (c) => {
      n.commit("setCurrentRow", c);
    },
    getSelectionRows: () => n.getSelectionRows(),
    toggleRowSelection: (c, h) => {
      n.toggleRowSelection(c, h, !1), n.updateAllSelected();
    },
    clearSelection: () => {
      n.clearSelection();
    },
    clearFilter: (c) => {
      n.clearFilter(c);
    },
    toggleAllSelection: () => {
      n.commit("toggleAllSelection");
    },
    toggleRowExpansion: (c, h) => {
      n.toggleRowExpansionAdapter(c, h);
    },
    clearSort: () => {
      n.clearSort();
    },
    sort: (c, h) => {
      n.commit("sort", { prop: c, order: h });
    }
  };
}
function Kwe(n, e, t, r) {
  const i = F(!1), o = F(null), s = F(!1), a = ($) => {
    s.value = $;
  }, l = F({
    width: null,
    height: null,
    headerHeight: null
  }), u = F(!1), c = {
    display: "inline-block",
    verticalAlign: "middle"
  }, h = F(), f = F(0), d = F(0), p = F(0), g = F(0), v = F(0);
  Ua(() => {
    e.setHeight(n.height);
  }), Ua(() => {
    e.setMaxHeight(n.maxHeight);
  }), de(() => [n.currentRowKey, t.states.rowKey], ([$, V]) => {
    !P(V) || !P($) || t.setCurrentRowKey(`${$}`);
  }, {
    immediate: !0
  }), de(() => n.data, ($) => {
    r.store.commit("setData", $);
  }, {
    immediate: !0,
    deep: !0
  }), Ua(() => {
    n.expandRowKeys && t.setExpandRowKeysAdapter(n.expandRowKeys);
  });
  const m = () => {
    r.store.commit("setHoverRow", null), r.hoverState && (r.hoverState = null);
  }, y = ($, V) => {
    const { pixelX: H, pixelY: G } = V;
    Math.abs(H) >= Math.abs(G) && (r.refs.bodyWrapper.scrollLeft += V.pixelX / 5);
  }, b = B(() => n.height || n.maxHeight || t.states.fixedColumns.value.length > 0 || t.states.rightFixedColumns.value.length > 0), O = B(() => ({
    width: e.bodyWidth.value ? `${e.bodyWidth.value}px` : ""
  })), w = () => {
    b.value && e.updateElsHeight(), e.updateColumnsWidth(), requestAnimationFrame(C);
  };
  dt(async () => {
    await ut(), t.updateColumns(), A(), requestAnimationFrame(w);
    const $ = r.vnode.el, V = r.refs.headerWrapper;
    n.flexible && $ && $.parentElement && ($.parentElement.style.minWidth = "0"), l.value = {
      width: h.value = $.offsetWidth,
      height: $.offsetHeight,
      headerHeight: n.showHeader && V ? V.offsetHeight : null
    }, t.states.columns.value.forEach((H) => {
      H.filteredValue && H.filteredValue.length && r.store.commit("filterChange", {
        column: H,
        values: H.filteredValue,
        silent: !0
      });
    }), r.$ready = !0;
  });
  const x = ($, V) => {
    if (!$)
      return;
    const H = Array.from($.classList).filter((G) => !G.startsWith("is-scrolling-"));
    H.push(e.scrollX.value ? V : "is-scrolling-none"), $.className = H.join(" ");
  }, S = ($) => {
    const { tableWrapper: V } = r.refs;
    x(V, $);
  }, _ = ($) => {
    const { tableWrapper: V } = r.refs;
    return !!(V && V.classList.contains($));
  }, C = function() {
    if (!r.refs.scrollBarRef)
      return;
    if (!e.scrollX.value) {
      const se = "is-scrolling-none";
      _(se) || S(se);
      return;
    }
    const $ = r.refs.scrollBarRef.wrapRef;
    if (!$)
      return;
    const { scrollLeft: V, offsetWidth: H, scrollWidth: G } = $, { headerWrapper: q, footerWrapper: Y } = r.refs;
    q && (q.scrollLeft = V), Y && (Y.scrollLeft = V);
    const ie = G - H - 1;
    V >= ie ? S("is-scrolling-right") : S(V === 0 ? "is-scrolling-left" : "is-scrolling-middle");
  }, A = () => {
    r.refs.scrollBarRef && (r.refs.scrollBarRef.wrapRef && co(r.refs.scrollBarRef.wrapRef, "scroll", C, {
      passive: !0
    }), n.fit ? Ri(r.vnode.el, T) : co(window, "resize", T), Ri(r.refs.bodyWrapper, () => {
      var $, V;
      T(), (V = ($ = r.refs) == null ? void 0 : $.scrollBarRef) == null || V.update();
    }));
  }, T = () => {
    var $, V, H, G;
    const q = r.vnode.el;
    if (!r.$ready || !q)
      return;
    let Y = !1;
    const {
      width: ie,
      height: se,
      headerHeight: K
    } = l.value, re = h.value = q.offsetWidth;
    ie !== re && (Y = !0);
    const ge = q.offsetHeight;
    (n.height || b.value) && se !== ge && (Y = !0);
    const ne = n.tableLayout === "fixed" ? r.refs.headerWrapper : ($ = r.refs.tableHeaderRef) == null ? void 0 : $.$el;
    n.showHeader && (ne == null ? void 0 : ne.offsetHeight) !== K && (Y = !0), f.value = ((V = r.refs.tableWrapper) == null ? void 0 : V.scrollHeight) || 0, p.value = (ne == null ? void 0 : ne.scrollHeight) || 0, g.value = ((H = r.refs.footerWrapper) == null ? void 0 : H.offsetHeight) || 0, v.value = ((G = r.refs.appendWrapper) == null ? void 0 : G.offsetHeight) || 0, d.value = f.value - p.value - g.value - v.value, Y && (l.value = {
      width: re,
      height: ge,
      headerHeight: n.showHeader && (ne == null ? void 0 : ne.offsetHeight) || 0
    }, w());
  }, k = Qo(), L = B(() => {
    const { bodyWidth: $, scrollY: V, gutterWidth: H } = e;
    return $.value ? `${$.value - (V.value ? H : 0)}px` : "";
  }), D = B(() => n.maxHeight ? "fixed" : n.tableLayout), E = B(() => {
    if (n.data && n.data.length)
      return null;
    let $ = "100%";
    n.height && d.value && ($ = `${d.value}px`);
    const V = h.value;
    return {
      width: V ? `${V}px` : "",
      height: $
    };
  }), M = B(() => n.height ? {
    height: Number.isNaN(Number(n.height)) ? n.height : `${n.height}px`
  } : n.maxHeight ? {
    maxHeight: Number.isNaN(Number(n.maxHeight)) ? n.maxHeight : `${n.maxHeight}px`
  } : {}), R = B(() => n.height ? {
    height: "100%"
  } : n.maxHeight ? Number.isNaN(Number(n.maxHeight)) ? {
    maxHeight: `calc(${n.maxHeight} - ${p.value + g.value}px)`
  } : {
    maxHeight: `${n.maxHeight - p.value - g.value}px`
  } : {});
  return {
    isHidden: i,
    renderExpanded: o,
    setDragVisible: a,
    isGroup: u,
    handleMouseLeave: m,
    handleHeaderFooterMousewheel: y,
    tableSize: k,
    emptyBlockStyle: E,
    handleFixedMousewheel: ($, V) => {
      const H = r.refs.bodyWrapper;
      if (Math.abs(V.spinY) > 0) {
        const G = H.scrollTop;
        V.pixelY < 0 && G !== 0 && $.preventDefault(), V.pixelY > 0 && H.scrollHeight - H.clientHeight > G && $.preventDefault(), H.scrollTop += Math.ceil(V.pixelY / 5);
      } else
        H.scrollLeft += Math.ceil(V.pixelX / 5);
    },
    resizeProxyVisible: s,
    bodyWidth: L,
    resizeState: l,
    doLayout: w,
    tableBodyStyles: O,
    tableLayout: D,
    scrollbarViewStyle: c,
    tableInnerStyle: M,
    scrollbarStyle: R
  };
}
function Jwe(n) {
  const e = F(), t = () => {
    const i = n.vnode.el.querySelector(".hidden-columns"), o = { childList: !0, subtree: !0 }, s = n.store.states.updateOrderFns;
    e.value = new MutationObserver(() => {
      s.forEach((a) => a());
    }), e.value.observe(i, o);
  };
  dt(() => {
    t();
  }), j0(() => {
    var r;
    (r = e.value) == null || r.disconnect();
  });
}
var exe = {
  data: {
    type: Array,
    default: () => []
  },
  size: pa,
  width: [String, Number],
  height: [String, Number],
  maxHeight: [String, Number],
  fit: {
    type: Boolean,
    default: !0
  },
  stripe: Boolean,
  border: Boolean,
  rowKey: [String, Function],
  showHeader: {
    type: Boolean,
    default: !0
  },
  showSummary: Boolean,
  sumText: String,
  summaryMethod: Function,
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  cellClassName: [String, Function],
  cellStyle: [Object, Function],
  headerRowClassName: [String, Function],
  headerRowStyle: [Object, Function],
  headerCellClassName: [String, Function],
  headerCellStyle: [Object, Function],
  highlightCurrentRow: Boolean,
  currentRowKey: [String, Number],
  emptyText: String,
  expandRowKeys: Array,
  defaultExpandAll: Boolean,
  defaultSort: Object,
  tooltipEffect: String,
  tooltipOptions: Object,
  spanMethod: Function,
  selectOnIndeterminate: {
    type: Boolean,
    default: !0
  },
  indent: {
    type: Number,
    default: 16
  },
  treeProps: {
    type: Object,
    default: () => ({
      hasChildren: "hasChildren",
      children: "children"
    })
  },
  lazy: Boolean,
  load: Function,
  style: {
    type: Object,
    default: () => ({})
  },
  className: {
    type: String,
    default: ""
  },
  tableLayout: {
    type: String,
    default: "fixed"
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: !1
  },
  flexible: Boolean,
  showOverflowTooltip: [Boolean, Object]
};
function I7(n) {
  const e = n.tableLayout === "auto";
  let t = n.columns || [];
  e && t.every((i) => i.width === void 0) && (t = []);
  const r = (i) => {
    const o = {
      key: `${n.tableLayout}_${i.id}`,
      style: {},
      name: void 0
    };
    return e ? o.style = {
      width: `${i.width}px`
    } : o.name = i.id, o;
  };
  return nt("colgroup", {}, t.map((i) => nt("col", r(i))));
}
I7.props = ["columns", "tableLayout"];
const txe = () => {
  const n = F(), e = (o, s) => {
    const a = n.value;
    a && a.scrollTo(o, s);
  }, t = (o, s) => {
    const a = n.value;
    a && mt(s) && ["Top", "Left"].includes(o) && a[`setScroll${o}`](s);
  };
  return {
    scrollBarRef: n,
    scrollTo: e,
    setScrollTop: (o) => t("Top", o),
    setScrollLeft: (o) => t("Left", o)
  };
};
let nxe = 1;
const rxe = U({
  name: "ElTable",
  directives: {
    Mousewheel: g0e
  },
  components: {
    TableHeader: Qwe,
    TableBody: Hwe,
    TableFooter: Xwe,
    ElScrollbar: YD,
    hColgroup: I7
  },
  props: exe,
  emits: [
    "select",
    "select-all",
    "selection-change",
    "cell-mouse-enter",
    "cell-mouse-leave",
    "cell-contextmenu",
    "cell-click",
    "cell-dblclick",
    "row-click",
    "row-contextmenu",
    "row-dblclick",
    "header-click",
    "header-contextmenu",
    "sort-change",
    "filter-change",
    "current-change",
    "header-dragend",
    "expand-change"
  ],
  setup(n) {
    const { t: e } = Wi(), t = Ie("table"), r = xt();
    Jt(bl, r);
    const i = Pwe(r, n);
    r.store = i;
    const o = new kwe({
      store: r.store,
      table: r,
      fit: n.fit,
      showHeader: n.showHeader
    });
    r.layout = o;
    const s = B(() => (i.states.data.value || []).length === 0), {
      setCurrentRow: a,
      getSelectionRows: l,
      toggleRowSelection: u,
      clearSelection: c,
      clearFilter: h,
      toggleAllSelection: f,
      toggleRowExpansion: d,
      clearSort: p,
      sort: g
    } = Uwe(i), {
      isHidden: v,
      renderExpanded: m,
      setDragVisible: y,
      isGroup: b,
      handleMouseLeave: O,
      handleHeaderFooterMousewheel: w,
      tableSize: x,
      emptyBlockStyle: S,
      handleFixedMousewheel: _,
      resizeProxyVisible: C,
      bodyWidth: A,
      resizeState: T,
      doLayout: k,
      tableBodyStyles: L,
      tableLayout: D,
      scrollbarViewStyle: E,
      tableInnerStyle: M,
      scrollbarStyle: R
    } = Kwe(n, o, i, r), { scrollBarRef: N, scrollTo: $, setScrollLeft: V, setScrollTop: H } = txe(), G = Vf(k, 50), q = `${t.namespace.value}-table_${nxe++}`;
    r.tableId = q, r.state = {
      isGroup: b,
      resizeState: T,
      doLayout: k,
      debouncedUpdateLayout: G
    };
    const Y = B(() => n.sumText || e("el.table.sumText")), ie = B(() => n.emptyText || e("el.table.emptyText"));
    return Jwe(r), {
      ns: t,
      layout: o,
      store: i,
      handleHeaderFooterMousewheel: w,
      handleMouseLeave: O,
      tableId: q,
      tableSize: x,
      isHidden: v,
      isEmpty: s,
      renderExpanded: m,
      resizeProxyVisible: C,
      resizeState: T,
      isGroup: b,
      bodyWidth: A,
      tableBodyStyles: L,
      emptyBlockStyle: S,
      debouncedUpdateLayout: G,
      handleFixedMousewheel: _,
      setCurrentRow: a,
      getSelectionRows: l,
      toggleRowSelection: u,
      clearSelection: c,
      clearFilter: h,
      toggleAllSelection: f,
      toggleRowExpansion: d,
      clearSort: p,
      doLayout: k,
      sort: g,
      t: e,
      setDragVisible: y,
      context: r,
      computedSumText: Y,
      computedEmptyText: ie,
      tableLayout: D,
      scrollbarViewStyle: E,
      tableInnerStyle: M,
      scrollbarStyle: R,
      scrollBarRef: N,
      scrollTo: $,
      setScrollLeft: V,
      setScrollTop: H
    };
  }
}), ixe = ["data-prefix"], oxe = {
  ref: "hiddenColumns",
  class: "hidden-columns"
};
function sxe(n, e, t, r, i, o) {
  const s = Tn("hColgroup"), a = Tn("table-header"), l = Tn("table-body"), u = Tn("table-footer"), c = Tn("el-scrollbar"), h = yD("mousewheel");
  return z(), X("div", {
    ref: "tableWrapper",
    class: Z([
      {
        [n.ns.m("fit")]: n.fit,
        [n.ns.m("striped")]: n.stripe,
        [n.ns.m("border")]: n.border || n.isGroup,
        [n.ns.m("hidden")]: n.isHidden,
        [n.ns.m("group")]: n.isGroup,
        [n.ns.m("fluid-height")]: n.maxHeight,
        [n.ns.m("scrollable-x")]: n.layout.scrollX.value,
        [n.ns.m("scrollable-y")]: n.layout.scrollY.value,
        [n.ns.m("enable-row-hover")]: !n.store.states.isComplex.value,
        [n.ns.m("enable-row-transition")]: (n.store.states.data.value || []).length !== 0 && (n.store.states.data.value || []).length < 100,
        "has-footer": n.showSummary
      },
      n.ns.m(n.tableSize),
      n.className,
      n.ns.b(),
      n.ns.m(`layout-${n.tableLayout}`)
    ]),
    style: pt(n.style),
    "data-prefix": n.ns.namespace.value,
    onMouseleave: e[0] || (e[0] = (...f) => n.handleMouseLeave && n.handleMouseLeave(...f))
  }, [
    J("div", {
      class: Z(n.ns.e("inner-wrapper")),
      style: pt(n.tableInnerStyle)
    }, [
      J("div", oxe, [
        Ce(n.$slots, "default")
      ], 512),
      n.showHeader && n.tableLayout === "fixed" ? zt((z(), X("div", {
        key: 0,
        ref: "headerWrapper",
        class: Z(n.ns.e("header-wrapper"))
      }, [
        J("table", {
          ref: "tableHeader",
          class: Z(n.ns.e("header")),
          style: pt(n.tableBodyStyles),
          border: "0",
          cellpadding: "0",
          cellspacing: "0"
        }, [
          pe(s, {
            columns: n.store.states.columns.value,
            "table-layout": n.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          pe(a, {
            ref: "tableHeaderRef",
            border: n.border,
            "default-sort": n.defaultSort,
            store: n.store,
            onSetDragVisible: n.setDragVisible
          }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])
        ], 6)
      ], 2)), [
        [h, n.handleHeaderFooterMousewheel]
      ]) : he("v-if", !0),
      J("div", {
        ref: "bodyWrapper",
        class: Z(n.ns.e("body-wrapper"))
      }, [
        pe(c, {
          ref: "scrollBarRef",
          "view-style": n.scrollbarViewStyle,
          "wrap-style": n.scrollbarStyle,
          always: n.scrollbarAlwaysOn
        }, {
          default: me(() => [
            J("table", {
              ref: "tableBody",
              class: Z(n.ns.e("body")),
              cellspacing: "0",
              cellpadding: "0",
              border: "0",
              style: pt({
                width: n.bodyWidth,
                tableLayout: n.tableLayout
              })
            }, [
              pe(s, {
                columns: n.store.states.columns.value,
                "table-layout": n.tableLayout
              }, null, 8, ["columns", "table-layout"]),
              n.showHeader && n.tableLayout === "auto" ? (z(), ye(a, {
                key: 0,
                ref: "tableHeaderRef",
                class: Z(n.ns.e("body-header")),
                border: n.border,
                "default-sort": n.defaultSort,
                store: n.store,
                onSetDragVisible: n.setDragVisible
              }, null, 8, ["class", "border", "default-sort", "store", "onSetDragVisible"])) : he("v-if", !0),
              pe(l, {
                context: n.context,
                highlight: n.highlightCurrentRow,
                "row-class-name": n.rowClassName,
                "tooltip-effect": n.tooltipEffect,
                "tooltip-options": n.tooltipOptions,
                "row-style": n.rowStyle,
                store: n.store,
                stripe: n.stripe
              }, null, 8, ["context", "highlight", "row-class-name", "tooltip-effect", "tooltip-options", "row-style", "store", "stripe"]),
              n.showSummary && n.tableLayout === "auto" ? (z(), ye(u, {
                key: 1,
                class: Z(n.ns.e("body-footer")),
                border: n.border,
                "default-sort": n.defaultSort,
                store: n.store,
                "sum-text": n.computedSumText,
                "summary-method": n.summaryMethod
              }, null, 8, ["class", "border", "default-sort", "store", "sum-text", "summary-method"])) : he("v-if", !0)
            ], 6),
            n.isEmpty ? (z(), X("div", {
              key: 0,
              ref: "emptyBlock",
              style: pt(n.emptyBlockStyle),
              class: Z(n.ns.e("empty-block"))
            }, [
              J("span", {
                class: Z(n.ns.e("empty-text"))
              }, [
                Ce(n.$slots, "empty", {}, () => [
                  uo(Ke(n.computedEmptyText), 1)
                ])
              ], 2)
            ], 6)) : he("v-if", !0),
            n.$slots.append ? (z(), X("div", {
              key: 1,
              ref: "appendWrapper",
              class: Z(n.ns.e("append-wrapper"))
            }, [
              Ce(n.$slots, "append")
            ], 2)) : he("v-if", !0)
          ]),
          _: 3
        }, 8, ["view-style", "wrap-style", "always"])
      ], 2),
      n.showSummary && n.tableLayout === "fixed" ? zt((z(), X("div", {
        key: 1,
        ref: "footerWrapper",
        class: Z(n.ns.e("footer-wrapper"))
      }, [
        J("table", {
          class: Z(n.ns.e("footer")),
          cellspacing: "0",
          cellpadding: "0",
          border: "0",
          style: pt(n.tableBodyStyles)
        }, [
          pe(s, {
            columns: n.store.states.columns.value,
            "table-layout": n.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          pe(u, {
            border: n.border,
            "default-sort": n.defaultSort,
            store: n.store,
            "sum-text": n.computedSumText,
            "summary-method": n.summaryMethod
          }, null, 8, ["border", "default-sort", "store", "sum-text", "summary-method"])
        ], 6)
      ], 2)), [
        [rr, !n.isEmpty],
        [h, n.handleHeaderFooterMousewheel]
      ]) : he("v-if", !0),
      n.border || n.isGroup ? (z(), X("div", {
        key: 2,
        class: Z(n.ns.e("border-left-patch"))
      }, null, 2)) : he("v-if", !0)
    ], 6),
    zt(J("div", {
      ref: "resizeProxy",
      class: Z(n.ns.e("column-resize-proxy"))
    }, null, 2), [
      [rr, n.resizeProxyVisible]
    ])
  ], 46, ixe);
}
var axe = /* @__PURE__ */ Ze(rxe, [["render", sxe], ["__file", "table.vue"]]);
const lxe = {
  selection: "table-column--selection",
  expand: "table__expand-column"
}, uxe = {
  default: {
    order: ""
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  }
}, cxe = (n) => lxe[n] || "", hxe = {
  selection: {
    renderHeader({ store: n, column: e }) {
      function t() {
        return n.states.data.value && n.states.data.value.length === 0;
      }
      return nt(rg, {
        disabled: t(),
        size: n.states.tableSize.value,
        indeterminate: n.states.selection.value.length > 0 && !n.states.isAllSelected.value,
        "onUpdate:modelValue": n.toggleAllSelection,
        modelValue: n.states.isAllSelected.value,
        ariaLabel: e.label
      });
    },
    renderCell({
      row: n,
      column: e,
      store: t,
      $index: r
    }) {
      return nt(rg, {
        disabled: e.selectable ? !e.selectable.call(null, n, r) : !1,
        size: t.states.tableSize.value,
        onChange: () => {
          t.commit("rowSelectedChanged", n);
        },
        onClick: (i) => i.stopPropagation(),
        modelValue: t.isSelected(n),
        ariaLabel: e.label
      });
    },
    sortable: !1,
    resizable: !1
  },
  index: {
    renderHeader({ column: n }) {
      return n.label || "#";
    },
    renderCell({
      column: n,
      $index: e
    }) {
      let t = e + 1;
      const r = n.index;
      return typeof r == "number" ? t = e + r : typeof r == "function" && (t = r(e)), nt("div", {}, [t]);
    },
    sortable: !1
  },
  expand: {
    renderHeader({ column: n }) {
      return n.label || "";
    },
    renderCell({
      row: n,
      store: e,
      expanded: t
    }) {
      const { ns: r } = e, i = [r.e("expand-icon")];
      return t && i.push(r.em("expand-icon", "expanded")), nt("div", {
        class: i,
        onClick: function(s) {
          s.stopPropagation(), e.toggleRowExpansion(n);
        }
      }, {
        default: () => [
          nt(Dt, null, {
            default: () => [nt(J0)]
          })
        ]
      });
    },
    sortable: !1,
    resizable: !1
  }
};
function fxe({
  row: n,
  column: e,
  $index: t
}) {
  var r;
  const i = e.property, o = i && BO(n, i).value;
  return e && e.formatter ? e.formatter(n, e, o, t) : ((r = o == null ? void 0 : o.toString) == null ? void 0 : r.call(o)) || "";
}
function dxe({
  row: n,
  treeNode: e,
  store: t
}, r = !1) {
  const { ns: i } = t;
  if (!e)
    return r ? [
      nt("span", {
        class: i.e("placeholder")
      })
    ] : null;
  const o = [], s = function(a) {
    a.stopPropagation(), !e.loading && t.loadOrToggle(n);
  };
  if (e.indent && o.push(nt("span", {
    class: i.e("indent"),
    style: { "padding-left": `${e.indent}px` }
  })), typeof e.expanded == "boolean" && !e.noLazyChildren) {
    const a = [
      i.e("expand-icon"),
      e.expanded ? i.em("expand-icon", "expanded") : ""
    ];
    let l = J0;
    e.loading && (l = YS), o.push(nt("div", {
      class: a,
      onClick: s
    }, {
      default: () => [
        nt(Dt, { class: { [i.is("loading")]: e.loading } }, {
          default: () => [nt(l)]
        })
      ]
    }));
  } else
    o.push(nt("span", {
      class: i.e("placeholder")
    }));
  return o;
}
function Z3(n, e) {
  return n.reduce((t, r) => (t[r] = r, t), e);
}
function pxe(n, e) {
  const t = xt();
  return {
    registerComplexWatchers: () => {
      const o = ["fixed"], s = {
        realWidth: "width",
        realMinWidth: "minWidth"
      }, a = Z3(o, s);
      Object.keys(a).forEach((l) => {
        const u = s[l];
        na(e, u) && de(() => e[u], (c) => {
          let h = c;
          u === "width" && l === "realWidth" && (h = iL(c)), u === "minWidth" && l === "realMinWidth" && (h = T7(c)), t.columnConfig.value[u] = h, t.columnConfig.value[l] = h;
          const f = u === "fixed";
          n.value.store.scheduleLayout(f);
        });
      });
    },
    registerNormalWatchers: () => {
      const o = [
        "label",
        "filters",
        "filterMultiple",
        "filteredValue",
        "sortable",
        "index",
        "formatter",
        "className",
        "labelClassName",
        "filterClassName",
        "showOverflowTooltip"
      ], s = {
        property: "prop",
        align: "realAlign",
        headerAlign: "realHeaderAlign"
      }, a = Z3(o, s);
      Object.keys(a).forEach((l) => {
        const u = s[l];
        na(e, u) && de(() => e[u], (c) => {
          t.columnConfig.value[l] = c;
        });
      });
    }
  };
}
function gxe(n, e, t) {
  const r = xt(), i = F(""), o = F(!1), s = F(), a = F(), l = Ie("table");
  Ua(() => {
    s.value = n.align ? `is-${n.align}` : null, s.value;
  }), Ua(() => {
    a.value = n.headerAlign ? `is-${n.headerAlign}` : s.value, a.value;
  });
  const u = B(() => {
    let O = r.vnode.vParent || r.parent;
    for (; O && !O.tableId && !O.columnId; )
      O = O.vnode.vParent || O.parent;
    return O;
  }), c = B(() => {
    const { store: O } = r.parent;
    if (!O)
      return !1;
    const { treeData: w } = O.states, x = w.value;
    return x && Object.keys(x).length > 0;
  }), h = F(iL(n.width)), f = F(T7(n.minWidth)), d = (O) => (h.value && (O.width = h.value), f.value && (O.minWidth = f.value), !h.value && f.value && (O.width = void 0), O.minWidth || (O.minWidth = 80), O.realWidth = Number(O.width === void 0 ? O.minWidth : O.width), O), p = (O) => {
    const w = O.type, x = hxe[w] || {};
    Object.keys(x).forEach((_) => {
      const C = x[_];
      _ !== "className" && C !== void 0 && (O[_] = C);
    });
    const S = cxe(w);
    if (S) {
      const _ = `${P(l.namespace)}-${S}`;
      O.className = O.className ? `${O.className} ${_}` : _;
    }
    return O;
  }, g = (O) => {
    Array.isArray(O) ? O.forEach((x) => w(x)) : w(O);
    function w(x) {
      var S;
      ((S = x == null ? void 0 : x.type) == null ? void 0 : S.name) === "ElTableColumn" && (x.vParent = r);
    }
  };
  return {
    columnId: i,
    realAlign: s,
    isSubColumn: o,
    realHeaderAlign: a,
    columnOrTableParent: u,
    setColumnWidth: d,
    setColumnForcedProps: p,
    setColumnRenders: (O) => {
      n.renderHeader ? jt("TableColumn", "Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.") : O.type !== "selection" && (O.renderHeader = (x) => (r.columnConfig.value.label, Ce(e, "header", x, () => [O.label])));
      let w = O.renderCell;
      return O.type === "expand" ? (O.renderCell = (x) => nt("div", {
        class: "cell"
      }, [w(x)]), t.value.renderExpanded = (x) => e.default ? e.default(x) : e.default) : (w = w || fxe, O.renderCell = (x) => {
        let S = null;
        if (e.default) {
          const L = e.default(x);
          S = L.some((D) => D.type !== _W) ? L : w(x);
        } else
          S = w(x);
        const { columns: _ } = t.value.store.states, C = _.value.findIndex((L) => L.type === "default"), A = c.value && x.cellIndex === C, T = dxe(x, A), k = {
          class: "cell",
          style: {}
        };
        return O.showOverflowTooltip && (k.class = `${k.class} ${P(l.namespace)}-tooltip`, k.style = {
          width: `${(x.column.realWidth || Number(x.column.width)) - 1}px`
        }), g(S), nt("div", k, [T, S]);
      }), O;
    },
    getPropsData: (...O) => O.reduce((w, x) => (Array.isArray(x) && x.forEach((S) => {
      w[S] = n[S];
    }), w), {}),
    getColumnElIndex: (O, w) => Array.prototype.indexOf.call(O, w),
    updateColumnOrder: () => {
      t.value.store.commit("updateColumnOrder", r.columnConfig.value);
    }
  };
}
var vxe = {
  type: {
    type: String,
    default: "default"
  },
  label: String,
  className: String,
  labelClassName: String,
  property: String,
  prop: String,
  width: {
    type: [String, Number],
    default: ""
  },
  minWidth: {
    type: [String, Number],
    default: ""
  },
  renderHeader: Function,
  sortable: {
    type: [Boolean, String],
    default: !1
  },
  sortMethod: Function,
  sortBy: [String, Function, Array],
  resizable: {
    type: Boolean,
    default: !0
  },
  columnKey: String,
  align: String,
  headerAlign: String,
  showOverflowTooltip: {
    type: [Boolean, Object],
    default: void 0
  },
  fixed: [Boolean, String],
  formatter: Function,
  selectable: Function,
  reserveSelection: Boolean,
  filterMethod: Function,
  filteredValue: Array,
  filters: Array,
  filterPlacement: String,
  filterMultiple: {
    type: Boolean,
    default: !0
  },
  filterClassName: String,
  index: [Number, Function],
  sortOrders: {
    type: Array,
    default: () => ["ascending", "descending", null],
    validator: (n) => n.every((e) => ["ascending", "descending", null].includes(e))
  }
};
let mxe = 1;
var R7 = U({
  name: "ElTableColumn",
  components: {
    ElCheckbox: rg
  },
  props: vxe,
  setup(n, { slots: e }) {
    const t = xt(), r = F({}), i = B(() => {
      let b = t.parent;
      for (; b && !b.tableId; )
        b = b.parent;
      return b;
    }), { registerNormalWatchers: o, registerComplexWatchers: s } = pxe(i, n), {
      columnId: a,
      isSubColumn: l,
      realHeaderAlign: u,
      columnOrTableParent: c,
      setColumnWidth: h,
      setColumnForcedProps: f,
      setColumnRenders: d,
      getPropsData: p,
      getColumnElIndex: g,
      realAlign: v,
      updateColumnOrder: m
    } = gxe(n, e, i), y = c.value;
    a.value = `${y.tableId || y.columnId}_column_${mxe++}`, mD(() => {
      l.value = i.value !== y;
      const b = n.type || "default", O = n.sortable === "" ? !0 : n.sortable, w = Io(n.showOverflowTooltip) ? y.props.showOverflowTooltip : n.showOverflowTooltip, x = {
        ...uxe[b],
        id: a.value,
        type: b,
        property: n.prop || n.property,
        align: v,
        headerAlign: u,
        showOverflowTooltip: w,
        filterable: n.filters || n.filterMethod,
        filteredValue: [],
        filterPlacement: "",
        filterClassName: "",
        isColumnGroup: !1,
        isSubColumn: !1,
        filterOpened: !1,
        sortable: O,
        index: n.index,
        rawColumnKey: t.vnode.key
      };
      let T = p([
        "columnKey",
        "label",
        "className",
        "labelClassName",
        "type",
        "renderHeader",
        "formatter",
        "fixed",
        "resizable"
      ], ["sortMethod", "sortBy", "sortOrders"], ["selectable", "reserveSelection"], [
        "filterMethod",
        "filters",
        "filterMultiple",
        "filterOpened",
        "filteredValue",
        "filterPlacement",
        "filterClassName"
      ]);
      T = mwe(x, T), T = bwe(d, h, f)(T), r.value = T, o(), s();
    }), dt(() => {
      var b;
      const O = c.value, w = l.value ? O.vnode.el.children : (b = O.refs.hiddenColumns) == null ? void 0 : b.children, x = () => g(w || [], t.vnode.el);
      r.value.getColumnIndex = x, x() > -1 && i.value.store.commit("insertColumn", r.value, l.value ? O.columnConfig.value : null, m);
    }), hi(() => {
      i.value.store.commit("removeColumn", r.value, l.value ? y.columnConfig.value : null, m);
    }), t.columnId = a.value, t.columnConfig = r;
  },
  render() {
    var n, e, t;
    try {
      const r = (e = (n = this.$slots).default) == null ? void 0 : e.call(n, {
        row: {},
        column: {},
        $index: -1
      }), i = [];
      if (Array.isArray(r))
        for (const s of r)
          ((t = s.type) == null ? void 0 : t.name) === "ElTableColumn" || s.shapeFlag & 2 ? i.push(s) : s.type === pr && Array.isArray(s.children) && s.children.forEach((a) => {
            (a == null ? void 0 : a.patchFlag) !== 1024 && !qt(a == null ? void 0 : a.children) && i.push(a);
          });
      return nt("div", i);
    } catch {
      return nt("div", []);
    }
  }
});
const o4t = Bn(axe, {
  TableColumn: R7
}), s4t = fa(R7), i_ = Symbol("tabsRootContextKey"), yxe = qe({
  tabs: {
    type: ke(Array),
    default: () => fd([])
  }
}), $7 = "ElTabBar", bxe = U({
  name: $7
}), Oxe = /* @__PURE__ */ U({
  ...bxe,
  props: yxe,
  setup(n, { expose: e }) {
    const t = n, r = xt(), i = $e(i_);
    i || du($7, "<el-tabs><el-tab-bar /></el-tabs>");
    const o = Ie("tabs"), s = F(), a = F(), l = () => {
      let c = 0, h = 0;
      const f = ["top", "bottom"].includes(i.props.tabPosition) ? "width" : "height", d = f === "width" ? "x" : "y", p = d === "x" ? "left" : "top";
      return t.tabs.every((g) => {
        var v, m;
        const y = (m = (v = r.parent) == null ? void 0 : v.refs) == null ? void 0 : m[`tab-${g.uid}`];
        if (!y)
          return !1;
        if (!g.active)
          return !0;
        c = y[`offset${Hu(p)}`], h = y[`client${Hu(f)}`];
        const b = window.getComputedStyle(y);
        return f === "width" && (t.tabs.length > 1 && (h -= Number.parseFloat(b.paddingLeft) + Number.parseFloat(b.paddingRight)), c += Number.parseFloat(b.paddingLeft)), !1;
      }), {
        [f]: `${h}px`,
        transform: `translate${Hu(d)}(${c}px)`
      };
    }, u = () => a.value = l();
    return de(() => t.tabs, async () => {
      await ut(), u();
    }, { immediate: !0 }), Ri(s, () => u()), e({
      ref: s,
      update: u
    }), (c, h) => (z(), X("div", {
      ref_key: "barRef",
      ref: s,
      class: Z([P(o).e("active-bar"), P(o).is(P(i).props.tabPosition)]),
      style: pt(a.value)
    }, null, 6));
  }
});
var wxe = /* @__PURE__ */ Ze(Oxe, [["__file", "tab-bar.vue"]]);
const xxe = qe({
  panes: {
    type: ke(Array),
    default: () => fd([])
  },
  currentName: {
    type: [String, Number],
    default: ""
  },
  editable: Boolean,
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  stretch: Boolean
}), Sxe = {
  tabClick: (n, e, t) => t instanceof Event,
  tabRemove: (n, e) => e instanceof Event
}, W3 = "ElTabNav", _xe = U({
  name: W3,
  props: xxe,
  emits: Sxe,
  setup(n, {
    expose: e,
    emit: t
  }) {
    const r = xt(), i = $e(i_);
    i || du(W3, "<el-tabs><tab-nav /></el-tabs>");
    const o = Ie("tabs"), s = bpe(), a = Dpe(), l = F(), u = F(), c = F(), h = F(), f = F(!1), d = F(0), p = F(!1), g = F(!0), v = B(() => ["top", "bottom"].includes(i.props.tabPosition) ? "width" : "height"), m = B(() => ({
      transform: `translate${v.value === "width" ? "X" : "Y"}(-${d.value}px)`
    })), y = () => {
      if (!l.value)
        return;
      const C = l.value[`offset${Hu(v.value)}`], A = d.value;
      if (!A)
        return;
      const T = A > C ? A - C : 0;
      d.value = T;
    }, b = () => {
      if (!l.value || !u.value)
        return;
      const C = u.value[`offset${Hu(v.value)}`], A = l.value[`offset${Hu(v.value)}`], T = d.value;
      if (C - T <= A)
        return;
      const k = C - T > A * 2 ? T + A : C - A;
      d.value = k;
    }, O = async () => {
      const C = u.value;
      if (!f.value || !c.value || !l.value || !C)
        return;
      await ut();
      const A = c.value.querySelector(".is-active");
      if (!A)
        return;
      const T = l.value, k = ["top", "bottom"].includes(i.props.tabPosition), L = A.getBoundingClientRect(), D = T.getBoundingClientRect(), E = k ? C.offsetWidth - D.width : C.offsetHeight - D.height, M = d.value;
      let R = M;
      k ? (L.left < D.left && (R = M - (D.left - L.left)), L.right > D.right && (R = M + L.right - D.right)) : (L.top < D.top && (R = M - (D.top - L.top)), L.bottom > D.bottom && (R = M + (L.bottom - D.bottom))), R = Math.max(R, 0), d.value = Math.min(R, E);
    }, w = () => {
      var C;
      if (!u.value || !l.value)
        return;
      n.stretch && ((C = h.value) == null || C.update());
      const A = u.value[`offset${Hu(v.value)}`], T = l.value[`offset${Hu(v.value)}`], k = d.value;
      T < A ? (f.value = f.value || {}, f.value.prev = k, f.value.next = k + T < A, A - k < T && (d.value = A - T)) : (f.value = !1, k > 0 && (d.value = 0));
    }, x = (C) => {
      const A = C.code, {
        up: T,
        down: k,
        left: L,
        right: D
      } = ii;
      if (![T, k, L, D].includes(A))
        return;
      const E = Array.from(C.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)")), M = E.indexOf(C.target);
      let R;
      A === L || A === T ? M === 0 ? R = E.length - 1 : R = M - 1 : M < E.length - 1 ? R = M + 1 : R = 0, E[R].focus({
        preventScroll: !0
      }), E[R].click(), S();
    }, S = () => {
      g.value && (p.value = !0);
    }, _ = () => p.value = !1;
    return de(s, (C) => {
      C === "hidden" ? g.value = !1 : C === "visible" && setTimeout(() => g.value = !0, 50);
    }), de(a, (C) => {
      C ? setTimeout(() => g.value = !0, 50) : g.value = !1;
    }), Ri(c, w), dt(() => setTimeout(() => O(), 0)), H0(() => w()), e({
      scrollToActiveTab: O,
      removeFocus: _
    }), de(() => n.panes, () => r.update(), {
      flush: "post",
      deep: !0
    }), () => {
      const C = f.value ? [pe("span", {
        class: [o.e("nav-prev"), o.is("disabled", !f.value.prev)],
        onClick: y
      }, [pe(Dt, null, {
        default: () => [pe(ZG, null, null)]
      })]), pe("span", {
        class: [o.e("nav-next"), o.is("disabled", !f.value.next)],
        onClick: b
      }, [pe(Dt, null, {
        default: () => [pe(J0, null, null)]
      })])] : null, A = n.panes.map((T, k) => {
        var L, D, E, M;
        const R = T.uid, N = T.props.disabled, $ = (D = (L = T.props.name) != null ? L : T.index) != null ? D : `${k}`, V = !N && (T.isClosable || n.editable);
        T.index = `${k}`;
        const H = V ? pe(Dt, {
          class: "is-icon-close",
          onClick: (Y) => t("tabRemove", T, Y)
        }, {
          default: () => [pe(Oc, null, null)]
        }) : null, G = ((M = (E = T.slots).label) == null ? void 0 : M.call(E)) || T.props.label, q = !N && T.active ? 0 : -1;
        return pe("div", {
          ref: `tab-${R}`,
          class: [o.e("item"), o.is(i.props.tabPosition), o.is("active", T.active), o.is("disabled", N), o.is("closable", V), o.is("focus", p.value)],
          id: `tab-${$}`,
          key: `tab-${R}`,
          "aria-controls": `pane-${$}`,
          role: "tab",
          "aria-selected": T.active,
          tabindex: q,
          onFocus: () => S(),
          onBlur: () => _(),
          onClick: (Y) => {
            _(), t("tabClick", T, $, Y);
          },
          onKeydown: (Y) => {
            V && (Y.code === ii.delete || Y.code === ii.backspace) && t("tabRemove", T, Y);
          }
        }, [G, H]);
      });
      return pe("div", {
        ref: c,
        class: [o.e("nav-wrap"), o.is("scrollable", !!f.value), o.is(i.props.tabPosition)]
      }, [C, pe("div", {
        class: o.e("nav-scroll"),
        ref: l
      }, [pe("div", {
        class: [o.e("nav"), o.is(i.props.tabPosition), o.is("stretch", n.stretch && ["top", "bottom"].includes(i.props.tabPosition))],
        ref: u,
        style: m.value,
        role: "tablist",
        onKeydown: x
      }, [n.type ? null : pe(wxe, {
        ref: h,
        tabs: [...n.panes]
      }, null), A])])]);
    };
  }
}), Cxe = qe({
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  activeName: {
    type: [String, Number]
  },
  closable: Boolean,
  addable: Boolean,
  modelValue: {
    type: [String, Number]
  },
  editable: Boolean,
  tabPosition: {
    type: String,
    values: ["top", "right", "bottom", "left"],
    default: "top"
  },
  beforeLeave: {
    type: ke(Function),
    default: () => !0
  },
  stretch: Boolean
}), UC = (n) => qt(n) || mt(n), Axe = {
  [Vt]: (n) => UC(n),
  tabClick: (n, e) => e instanceof Event,
  tabChange: (n) => UC(n),
  edit: (n, e) => ["remove", "add"].includes(e),
  tabRemove: (n) => UC(n),
  tabAdd: () => !0
}, Txe = U({
  name: "ElTabs",
  props: Cxe,
  emits: Axe,
  setup(n, {
    emit: e,
    slots: t,
    expose: r
  }) {
    var i, o;
    const s = Ie("tabs"), {
      children: a,
      addChild: l,
      removeChild: u
    } = $ve(xt(), "ElTabPane"), c = F(), h = F((o = (i = n.modelValue) != null ? i : n.activeName) != null ? o : "0"), f = async (v, m = !1) => {
      var y, b, O;
      if (!(h.value === v || Io(v)))
        try {
          await ((y = n.beforeLeave) == null ? void 0 : y.call(n, v, h.value)) !== !1 && (h.value = v, m && (e(Vt, v), e("tabChange", v)), (O = (b = c.value) == null ? void 0 : b.removeFocus) == null || O.call(b));
        } catch {
        }
    }, d = (v, m, y) => {
      v.props.disabled || (f(m, !0), e("tabClick", v, y));
    }, p = (v, m) => {
      v.props.disabled || Io(v.props.name) || (m.stopPropagation(), e("edit", v.props.name, "remove"), e("tabRemove", v.props.name));
    }, g = () => {
      e("edit", void 0, "add"), e("tabAdd");
    };
    return zf({
      from: '"activeName"',
      replacement: '"model-value" or "v-model"',
      scope: "ElTabs",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#attributes",
      type: "Attribute"
    }, B(() => !!n.activeName)), zf({
      from: '"addIcon"',
      replacement: '"add-icon"',
      scope: "ElTabs",
      version: "2.6.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#slots",
      type: "Slot"
    }, B(() => !!t.addIcon)), de(() => n.activeName, (v) => f(v)), de(() => n.modelValue, (v) => f(v)), de(h, async () => {
      var v;
      await ut(), (v = c.value) == null || v.scrollToActiveTab();
    }), Jt(i_, {
      props: n,
      currentName: h,
      registerPane: l,
      unregisterPane: u
    }), r({
      currentName: h
    }), () => {
      const v = t["add-icon"] || t.addIcon, m = v && t.addIcon, y = n.editable || n.addable ? pe("span", {
        class: s.e("new-tab"),
        tabindex: "0",
        onClick: g,
        onKeydown: (w) => {
          w.code === ii.enter && g();
        }
      }, [v ? Ce(t, m ? "addIcon" : "add-icon") : pe(Dt, {
        class: s.is("icon-plus")
      }, {
        default: () => [pe(qG, null, null)]
      })]) : null, b = pe("div", {
        class: [s.e("header"), s.is(n.tabPosition)]
      }, [y, pe(_xe, {
        ref: c,
        currentName: h.value,
        editable: n.editable,
        type: n.type,
        panes: a.value,
        stretch: n.stretch,
        onTabClick: d,
        onTabRemove: p
      }, null)]), O = pe("div", {
        class: s.e("content")
      }, [Ce(t, "default")]);
      return pe("div", {
        class: [s.b(), s.m(n.tabPosition), {
          [s.m("card")]: n.type === "card",
          [s.m("border-card")]: n.type === "border-card"
        }]
      }, [...n.tabPosition !== "bottom" ? [b, O] : [O, b]]);
    };
  }
}), Pxe = qe({
  label: {
    type: String,
    default: ""
  },
  name: {
    type: [String, Number]
  },
  closable: Boolean,
  disabled: Boolean,
  lazy: Boolean
}), Exe = ["id", "aria-hidden", "aria-labelledby"], N7 = "ElTabPane", kxe = U({
  name: N7
}), Mxe = /* @__PURE__ */ U({
  ...kxe,
  props: Pxe,
  setup(n) {
    const e = n, t = xt(), r = Hc(), i = $e(i_);
    i || du(N7, "usage: <el-tabs><el-tab-pane /></el-tabs/>");
    const o = Ie("tab-pane"), s = F(), a = B(() => e.closable || i.props.closable), l = $N(() => {
      var d;
      return i.currentName.value === ((d = e.name) != null ? d : s.value);
    }), u = F(l.value), c = B(() => {
      var d;
      return (d = e.name) != null ? d : s.value;
    }), h = $N(() => !e.lazy || u.value || l.value);
    de(l, (d) => {
      d && (u.value = !0);
    });
    const f = Si({
      uid: t.uid,
      slots: r,
      props: e,
      paneName: c,
      active: l,
      index: s,
      isClosable: a
    });
    return dt(() => {
      i.registerPane(f);
    }), j0(() => {
      i.unregisterPane(f.uid);
    }), (d, p) => P(h) ? zt((z(), X("div", {
      key: 0,
      id: `pane-${P(c)}`,
      class: Z(P(o).b()),
      role: "tabpanel",
      "aria-hidden": !P(l),
      "aria-labelledby": `tab-${P(c)}`
    }, [
      Ce(d.$slots, "default")
    ], 10, Exe)), [
      [rr, P(l)]
    ]) : he("v-if", !0);
  }
});
var B7 = /* @__PURE__ */ Ze(Mxe, [["__file", "tab-pane.vue"]]);
const a4t = Bn(Txe, {
  TabPane: B7
}), l4t = fa(B7), V7 = ["success", "info", "warning", "error"], Ui = fd({
  customClass: "",
  center: !1,
  dangerouslyUseHTMLString: !1,
  duration: 3e3,
  icon: void 0,
  id: "",
  message: "",
  onClose: void 0,
  showClose: !1,
  type: "info",
  offset: 16,
  zIndex: 0,
  grouping: !1,
  repeatNum: 1,
  appendTo: Ht ? document.body : void 0
}), Dxe = qe({
  customClass: {
    type: String,
    default: Ui.customClass
  },
  center: {
    type: Boolean,
    default: Ui.center
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: Ui.dangerouslyUseHTMLString
  },
  duration: {
    type: Number,
    default: Ui.duration
  },
  icon: {
    type: Vr,
    default: Ui.icon
  },
  id: {
    type: String,
    default: Ui.id
  },
  message: {
    type: ke([
      String,
      Object,
      Function
    ]),
    default: Ui.message
  },
  onClose: {
    type: ke(Function),
    required: !1
  },
  showClose: {
    type: Boolean,
    default: Ui.showClose
  },
  type: {
    type: String,
    values: V7,
    default: Ui.type
  },
  offset: {
    type: Number,
    default: Ui.offset
  },
  zIndex: {
    type: Number,
    default: Ui.zIndex
  },
  grouping: {
    type: Boolean,
    default: Ui.grouping
  },
  repeatNum: {
    type: Number,
    default: Ui.repeatNum
  }
}), Lxe = {
  destroy: () => !0
}, Hs = qie([]), Ixe = (n) => {
  const e = Hs.findIndex((i) => i.id === n), t = Hs[e];
  let r;
  return e > 0 && (r = Hs[e - 1]), { current: t, prev: r };
}, Rxe = (n) => {
  const { prev: e } = Ixe(n);
  return e ? e.vm.exposed.bottom.value : 0;
}, $xe = (n, e) => Hs.findIndex((r) => r.id === n) > 0 ? 20 : e, Nxe = ["id"], Bxe = ["innerHTML"], Vxe = U({
  name: "ElMessage"
}), zxe = /* @__PURE__ */ U({
  ...Vxe,
  props: Dxe,
  emits: Lxe,
  setup(n, { expose: e }) {
    const t = n, { Close: r } = oj, { ns: i, zIndex: o } = HD("message"), { currentZIndex: s, nextZIndex: a } = o, l = F(), u = F(!1), c = F(0);
    let h;
    const f = B(() => t.type ? t.type === "error" ? "danger" : t.type : "info"), d = B(() => {
      const S = t.type;
      return { [i.bm("icon", S)]: S && Up[S] };
    }), p = B(() => t.icon || Up[t.type] || ""), g = B(() => Rxe(t.id)), v = B(() => $xe(t.id, t.offset) + g.value), m = B(() => c.value + v.value), y = B(() => ({
      top: `${v.value}px`,
      zIndex: s.value
    }));
    function b() {
      t.duration !== 0 && ({ stop: h } = Qw(() => {
        w();
      }, t.duration));
    }
    function O() {
      h == null || h();
    }
    function w() {
      u.value = !1;
    }
    function x({ code: S }) {
      S === ii.esc && w();
    }
    return dt(() => {
      b(), a(), u.value = !0;
    }), de(() => t.repeatNum, () => {
      O(), b();
    }), co(document, "keydown", x), Ri(l, () => {
      c.value = l.value.getBoundingClientRect().height;
    }), e({
      visible: u,
      bottom: m,
      close: w
    }), (S, _) => (z(), ye(ml, {
      name: P(i).b("fade"),
      onBeforeLeave: S.onClose,
      onAfterLeave: _[0] || (_[0] = (C) => S.$emit("destroy")),
      persisted: ""
    }, {
      default: me(() => [
        zt(J("div", {
          id: S.id,
          ref_key: "messageRef",
          ref: l,
          class: Z([
            P(i).b(),
            { [P(i).m(S.type)]: S.type },
            P(i).is("center", S.center),
            P(i).is("closable", S.showClose),
            S.customClass
          ]),
          style: pt(P(y)),
          role: "alert",
          onMouseenter: O,
          onMouseleave: b
        }, [
          S.repeatNum > 1 ? (z(), ye(P(Lye), {
            key: 0,
            value: S.repeatNum,
            type: P(f),
            class: Z(P(i).e("badge"))
          }, null, 8, ["value", "type", "class"])) : he("v-if", !0),
          P(p) ? (z(), ye(P(Dt), {
            key: 1,
            class: Z([P(i).e("icon"), P(d)])
          }, {
            default: me(() => [
              (z(), ye(cn(P(p))))
            ]),
            _: 1
          }, 8, ["class"])) : he("v-if", !0),
          Ce(S.$slots, "default", {}, () => [
            S.dangerouslyUseHTMLString ? (z(), X(pr, { key: 1 }, [
              he(" Caution here, message could've been compromised, never use user's input as message "),
              J("p", {
                class: Z(P(i).e("content")),
                innerHTML: S.message
              }, null, 10, Bxe)
            ], 2112)) : (z(), X("p", {
              key: 0,
              class: Z(P(i).e("content"))
            }, Ke(S.message), 3))
          ]),
          S.showClose ? (z(), ye(P(Dt), {
            key: 2,
            class: Z(P(i).e("closeBtn")),
            onClick: en(w, ["stop"])
          }, {
            default: me(() => [
              pe(P(r))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : he("v-if", !0)
        ], 46, Nxe), [
          [rr, u.value]
        ])
      ]),
      _: 3
    }, 8, ["name", "onBeforeLeave"]));
  }
});
var Fxe = /* @__PURE__ */ Ze(zxe, [["__file", "message.vue"]]);
let Qxe = 1;
const z7 = (n) => {
  const e = !n || qt(n) || il(n) || wn(n) ? { message: n } : n, t = {
    ...Ui,
    ...e
  };
  if (!t.appendTo)
    t.appendTo = document.body;
  else if (qt(t.appendTo)) {
    let r = document.querySelector(t.appendTo);
    ra(r) || (jt("ElMessage", "the appendTo option is not an HTMLElement. Falling back to document.body."), r = document.body), t.appendTo = r;
  }
  return t;
}, Zxe = (n) => {
  const e = Hs.indexOf(n);
  if (e === -1)
    return;
  Hs.splice(e, 1);
  const { handler: t } = n;
  t.close();
}, Wxe = ({ appendTo: n, ...e }, t) => {
  const r = `message_${Qxe++}`, i = e.onClose, o = document.createElement("div"), s = {
    ...e,
    id: r,
    onClose: () => {
      i == null || i(), Zxe(c);
    },
    onDestroy: () => {
      bc(null, o);
    }
  }, a = pe(Fxe, s, wn(s.message) || il(s.message) ? {
    default: wn(s.message) ? s.message : () => s.message
  } : null);
  a.appContext = t || og._context, bc(a, o), n.appendChild(o.firstElementChild);
  const l = a.component, c = {
    id: r,
    vnode: a,
    vm: l,
    handler: {
      close: () => {
        l.exposed.visible.value = !1;
      }
    },
    props: a.component.props
  };
  return c;
}, og = (n = {}, e) => {
  if (!Ht)
    return { close: () => {
    } };
  if (mt(NP.max) && Hs.length >= NP.max)
    return { close: () => {
    } };
  const t = z7(n);
  if (t.grouping && Hs.length) {
    const i = Hs.find(({ vnode: o }) => {
      var s;
      return ((s = o.props) == null ? void 0 : s.message) === t.message;
    });
    if (i)
      return i.props.repeatNum += 1, i.props.type = t.type, i.handler;
  }
  const r = Wxe(t, e);
  return Hs.push(r), r.handler;
};
V7.forEach((n) => {
  og[n] = (e = {}, t) => {
    const r = z7(e);
    return og({ ...r, type: n }, t);
  };
});
function Gxe(n) {
  for (const e of Hs)
    (!n || n === e.props.type) && e.handler.close();
}
og.closeAll = Gxe;
og._context = null;
const u4t = aj(og, "$message"), jxe = U({
  name: "ElMessageBox",
  directives: {
    TrapFocus: l0e
  },
  components: {
    ElButton: FP,
    ElFocusTrap: n_,
    ElInput: ob,
    ElOverlay: tL,
    ElIcon: Dt,
    ...oj
  },
  inheritAttrs: !1,
  props: {
    buttonSize: {
      type: String,
      validator: lj
    },
    modal: {
      type: Boolean,
      default: !0
    },
    lockScroll: {
      type: Boolean,
      default: !0
    },
    showClose: {
      type: Boolean,
      default: !0
    },
    closeOnClickModal: {
      type: Boolean,
      default: !0
    },
    closeOnPressEscape: {
      type: Boolean,
      default: !0
    },
    closeOnHashChange: {
      type: Boolean,
      default: !0
    },
    center: Boolean,
    draggable: Boolean,
    overflow: Boolean,
    roundButton: {
      default: !1,
      type: Boolean
    },
    container: {
      type: String,
      default: "body"
    },
    boxType: {
      type: String,
      default: ""
    }
  },
  emits: ["vanish", "action"],
  setup(n, { emit: e }) {
    const {
      locale: t,
      zIndex: r,
      ns: i,
      size: o
    } = HD("message-box", B(() => n.buttonSize)), { t: s } = t, { nextZIndex: a } = r, l = F(!1), u = Si({
      autofocus: !0,
      beforeClose: null,
      callback: null,
      cancelButtonText: "",
      cancelButtonClass: "",
      confirmButtonText: "",
      confirmButtonClass: "",
      customClass: "",
      customStyle: {},
      dangerouslyUseHTMLString: !1,
      distinguishCancelAndClose: !1,
      icon: "",
      inputPattern: null,
      inputPlaceholder: "",
      inputType: "text",
      inputValue: null,
      inputValidator: null,
      inputErrorMessage: "",
      message: null,
      modalFade: !0,
      modalClass: "",
      showCancelButton: !1,
      showConfirmButton: !0,
      type: "",
      title: void 0,
      showInput: !1,
      action: "",
      confirmButtonLoading: !1,
      cancelButtonLoading: !1,
      confirmButtonDisabled: !1,
      editorErrorMessage: "",
      validateError: !1,
      zIndex: a()
    }), c = B(() => {
      const M = u.type;
      return { [i.bm("icon", M)]: M && Up[M] };
    }), h = ll(), f = ll(), d = B(() => u.icon || Up[u.type] || ""), p = B(() => !!u.message), g = F(), v = F(), m = F(), y = F(), b = F(), O = B(() => u.confirmButtonClass);
    de(() => u.inputValue, async (M) => {
      await ut(), n.boxType === "prompt" && M !== null && k();
    }, { immediate: !0 }), de(() => l.value, (M) => {
      var R, N;
      M && (n.boxType !== "prompt" && (u.autofocus ? m.value = (N = (R = b.value) == null ? void 0 : R.$el) != null ? N : g.value : m.value = g.value), u.zIndex = a()), n.boxType === "prompt" && (M ? ut().then(() => {
        var $;
        y.value && y.value.$el && (u.autofocus ? m.value = ($ = L()) != null ? $ : g.value : m.value = g.value);
      }) : (u.editorErrorMessage = "", u.validateError = !1));
    });
    const w = B(() => n.draggable), x = B(() => n.overflow);
    cj(g, v, w, x), dt(async () => {
      await ut(), n.closeOnHashChange && window.addEventListener("hashchange", S);
    }), hi(() => {
      n.closeOnHashChange && window.removeEventListener("hashchange", S);
    });
    function S() {
      l.value && (l.value = !1, ut(() => {
        u.action && e("action", u.action);
      }));
    }
    const _ = () => {
      n.closeOnClickModal && T(u.distinguishCancelAndClose ? "close" : "cancel");
    }, C = ZD(_), A = (M) => {
      if (u.inputType !== "textarea")
        return M.preventDefault(), T("confirm");
    }, T = (M) => {
      var R;
      n.boxType === "prompt" && M === "confirm" && !k() || (u.action = M, u.beforeClose ? (R = u.beforeClose) == null || R.call(u, M, u, S) : S());
    }, k = () => {
      if (n.boxType === "prompt") {
        const M = u.inputPattern;
        if (M && !M.test(u.inputValue || ""))
          return u.editorErrorMessage = u.inputErrorMessage || s("el.messagebox.error"), u.validateError = !0, !1;
        const R = u.inputValidator;
        if (typeof R == "function") {
          const N = R(u.inputValue);
          if (N === !1)
            return u.editorErrorMessage = u.inputErrorMessage || s("el.messagebox.error"), u.validateError = !0, !1;
          if (typeof N == "string")
            return u.editorErrorMessage = N, u.validateError = !0, !1;
        }
      }
      return u.editorErrorMessage = "", u.validateError = !1, !0;
    }, L = () => {
      const M = y.value.$refs;
      return M.input || M.textarea;
    }, D = () => {
      T("close");
    }, E = () => {
      n.closeOnPressEscape && D();
    };
    return n.lockScroll && mj(l), {
      ...jc(u),
      ns: i,
      overlayEvent: C,
      visible: l,
      hasMessage: p,
      typeClass: c,
      contentId: h,
      inputId: f,
      btnSize: o,
      iconComponent: d,
      confirmButtonClasses: O,
      rootRef: g,
      focusStartRef: m,
      headerRef: v,
      inputRef: y,
      confirmRef: b,
      doClose: S,
      handleClose: D,
      onCloseRequested: E,
      handleWrapperClick: _,
      handleInputEnter: A,
      handleAction: T,
      t: s
    };
  }
}), Hxe = ["aria-label", "aria-describedby"], qxe = ["aria-label"], Yxe = ["id"];
function Xxe(n, e, t, r, i, o) {
  const s = Tn("el-icon"), a = Tn("close"), l = Tn("el-input"), u = Tn("el-button"), c = Tn("el-focus-trap"), h = Tn("el-overlay");
  return z(), ye(ml, {
    name: "fade-in-linear",
    onAfterLeave: e[11] || (e[11] = (f) => n.$emit("vanish")),
    persisted: ""
  }, {
    default: me(() => [
      zt(pe(h, {
        "z-index": n.zIndex,
        "overlay-class": [n.ns.is("message-box"), n.modalClass],
        mask: n.modal
      }, {
        default: me(() => [
          J("div", {
            role: "dialog",
            "aria-label": n.title,
            "aria-modal": "true",
            "aria-describedby": n.showInput ? void 0 : n.contentId,
            class: Z(`${n.ns.namespace.value}-overlay-message-box`),
            onClick: e[8] || (e[8] = (...f) => n.overlayEvent.onClick && n.overlayEvent.onClick(...f)),
            onMousedown: e[9] || (e[9] = (...f) => n.overlayEvent.onMousedown && n.overlayEvent.onMousedown(...f)),
            onMouseup: e[10] || (e[10] = (...f) => n.overlayEvent.onMouseup && n.overlayEvent.onMouseup(...f))
          }, [
            pe(c, {
              loop: "",
              trapped: n.visible,
              "focus-trap-el": n.rootRef,
              "focus-start-el": n.focusStartRef,
              onReleaseRequested: n.onCloseRequested
            }, {
              default: me(() => [
                J("div", {
                  ref: "rootRef",
                  class: Z([
                    n.ns.b(),
                    n.customClass,
                    n.ns.is("draggable", n.draggable),
                    { [n.ns.m("center")]: n.center }
                  ]),
                  style: pt(n.customStyle),
                  tabindex: "-1",
                  onClick: e[7] || (e[7] = en(() => {
                  }, ["stop"]))
                }, [
                  n.title !== null && n.title !== void 0 ? (z(), X("div", {
                    key: 0,
                    ref: "headerRef",
                    class: Z([n.ns.e("header"), { "show-close": n.showClose }])
                  }, [
                    J("div", {
                      class: Z(n.ns.e("title"))
                    }, [
                      n.iconComponent && n.center ? (z(), ye(s, {
                        key: 0,
                        class: Z([n.ns.e("status"), n.typeClass])
                      }, {
                        default: me(() => [
                          (z(), ye(cn(n.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : he("v-if", !0),
                      J("span", null, Ke(n.title), 1)
                    ], 2),
                    n.showClose ? (z(), X("button", {
                      key: 0,
                      type: "button",
                      class: Z(n.ns.e("headerbtn")),
                      "aria-label": n.t("el.messagebox.close"),
                      onClick: e[0] || (e[0] = (f) => n.handleAction(n.distinguishCancelAndClose ? "close" : "cancel")),
                      onKeydown: e[1] || (e[1] = Nr(en((f) => n.handleAction(n.distinguishCancelAndClose ? "close" : "cancel"), ["prevent"]), ["enter"]))
                    }, [
                      pe(s, {
                        class: Z(n.ns.e("close"))
                      }, {
                        default: me(() => [
                          pe(a)
                        ]),
                        _: 1
                      }, 8, ["class"])
                    ], 42, qxe)) : he("v-if", !0)
                  ], 2)) : he("v-if", !0),
                  J("div", {
                    id: n.contentId,
                    class: Z(n.ns.e("content"))
                  }, [
                    J("div", {
                      class: Z(n.ns.e("container"))
                    }, [
                      n.iconComponent && !n.center && n.hasMessage ? (z(), ye(s, {
                        key: 0,
                        class: Z([n.ns.e("status"), n.typeClass])
                      }, {
                        default: me(() => [
                          (z(), ye(cn(n.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : he("v-if", !0),
                      n.hasMessage ? (z(), X("div", {
                        key: 1,
                        class: Z(n.ns.e("message"))
                      }, [
                        Ce(n.$slots, "default", {}, () => [
                          n.dangerouslyUseHTMLString ? (z(), ye(cn(n.showInput ? "label" : "p"), {
                            key: 1,
                            for: n.showInput ? n.inputId : void 0,
                            innerHTML: n.message
                          }, null, 8, ["for", "innerHTML"])) : (z(), ye(cn(n.showInput ? "label" : "p"), {
                            key: 0,
                            for: n.showInput ? n.inputId : void 0
                          }, {
                            default: me(() => [
                              uo(Ke(n.dangerouslyUseHTMLString ? "" : n.message), 1)
                            ]),
                            _: 1
                          }, 8, ["for"]))
                        ])
                      ], 2)) : he("v-if", !0)
                    ], 2),
                    zt(J("div", {
                      class: Z(n.ns.e("input"))
                    }, [
                      pe(l, {
                        id: n.inputId,
                        ref: "inputRef",
                        modelValue: n.inputValue,
                        "onUpdate:modelValue": e[2] || (e[2] = (f) => n.inputValue = f),
                        type: n.inputType,
                        placeholder: n.inputPlaceholder,
                        "aria-invalid": n.validateError,
                        class: Z({ invalid: n.validateError }),
                        onKeydown: Nr(n.handleInputEnter, ["enter"])
                      }, null, 8, ["id", "modelValue", "type", "placeholder", "aria-invalid", "class", "onKeydown"]),
                      J("div", {
                        class: Z(n.ns.e("errormsg")),
                        style: pt({
                          visibility: n.editorErrorMessage ? "visible" : "hidden"
                        })
                      }, Ke(n.editorErrorMessage), 7)
                    ], 2), [
                      [rr, n.showInput]
                    ])
                  ], 10, Yxe),
                  J("div", {
                    class: Z(n.ns.e("btns"))
                  }, [
                    n.showCancelButton ? (z(), ye(u, {
                      key: 0,
                      loading: n.cancelButtonLoading,
                      class: Z([n.cancelButtonClass]),
                      round: n.roundButton,
                      size: n.btnSize,
                      onClick: e[3] || (e[3] = (f) => n.handleAction("cancel")),
                      onKeydown: e[4] || (e[4] = Nr(en((f) => n.handleAction("cancel"), ["prevent"]), ["enter"]))
                    }, {
                      default: me(() => [
                        uo(Ke(n.cancelButtonText || n.t("el.messagebox.cancel")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "size"])) : he("v-if", !0),
                    zt(pe(u, {
                      ref: "confirmRef",
                      type: "primary",
                      loading: n.confirmButtonLoading,
                      class: Z([n.confirmButtonClasses]),
                      round: n.roundButton,
                      disabled: n.confirmButtonDisabled,
                      size: n.btnSize,
                      onClick: e[5] || (e[5] = (f) => n.handleAction("confirm")),
                      onKeydown: e[6] || (e[6] = Nr(en((f) => n.handleAction("confirm"), ["prevent"]), ["enter"]))
                    }, {
                      default: me(() => [
                        uo(Ke(n.confirmButtonText || n.t("el.messagebox.confirm")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "disabled", "size"]), [
                      [rr, n.showConfirmButton]
                    ])
                  ], 2)
                ], 6)
              ]),
              _: 3
            }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])
          ], 42, Hxe)
        ]),
        _: 3
      }, 8, ["z-index", "overlay-class", "mask"]), [
        [rr, n.visible]
      ])
    ]),
    _: 3
  });
}
var Uxe = /* @__PURE__ */ Ze(jxe, [["render", Xxe], ["__file", "index.vue"]]);
const Vy = /* @__PURE__ */ new Map(), Kxe = (n) => {
  let e = document.body;
  return n.appendTo && (qt(n.appendTo) && (e = document.querySelector(n.appendTo)), ra(n.appendTo) && (e = n.appendTo), ra(e) || (jt("ElMessageBox", "the appendTo option is not an HTMLElement. Falling back to document.body."), e = document.body)), e;
}, Jxe = (n, e, t = null) => {
  const r = pe(Uxe, n, wn(n.message) || il(n.message) ? {
    default: wn(n.message) ? n.message : () => n.message
  } : null);
  return r.appContext = t, bc(r, e), Kxe(n).appendChild(e.firstElementChild), r.component;
}, eSe = () => document.createElement("div"), tSe = (n, e) => {
  const t = eSe();
  n.onVanish = () => {
    bc(null, t), Vy.delete(i);
  }, n.onAction = (o) => {
    const s = Vy.get(i);
    let a;
    n.showInput ? a = { value: i.inputValue, action: o } : a = o, n.callback ? n.callback(a, r.proxy) : o === "cancel" || o === "close" ? n.distinguishCancelAndClose && o !== "cancel" ? s.reject("close") : s.reject("cancel") : s.resolve(a);
  };
  const r = Jxe(n, t, e), i = r.proxy;
  for (const o in n)
    na(n, o) && !na(i.$props, o) && (i[o] = n[o]);
  return i.visible = !0, i;
};
function Xg(n, e = null) {
  if (!Ht)
    return Promise.reject();
  let t;
  return qt(n) || il(n) ? n = {
    message: n
  } : t = n.callback, new Promise((r, i) => {
    const o = tSe(n, e ?? Xg._context);
    Vy.set(o, {
      options: n,
      callback: t,
      resolve: r,
      reject: i
    });
  });
}
const nSe = ["alert", "confirm", "prompt"], rSe = {
  alert: { closeOnPressEscape: !1, closeOnClickModal: !1 },
  confirm: { showCancelButton: !0 },
  prompt: { showCancelButton: !0, showInput: !0 }
};
nSe.forEach((n) => {
  Xg[n] = iSe(n);
});
function iSe(n) {
  return (e, t, r, i) => {
    let o = "";
    return ti(t) ? (r = t, o = "") : Io(t) ? o = "" : o = t, Xg(Object.assign({
      title: o,
      message: e,
      type: "",
      ...rSe[n]
    }, r, {
      boxType: n
    }), i);
  };
}
Xg.close = () => {
  Vy.forEach((n, e) => {
    e.doClose();
  }), Vy.clear();
};
Xg._context = null;
const Iu = Xg;
Iu.install = (n) => {
  Iu._context = n._context, n.config.globalProperties.$msgbox = Iu, n.config.globalProperties.$messageBox = Iu, n.config.globalProperties.$alert = Iu.alert, n.config.globalProperties.$confirm = Iu.confirm, n.config.globalProperties.$prompt = Iu.prompt;
};
const c4t = Iu, F7 = [
  "success",
  "info",
  "warning",
  "error"
], oSe = qe({
  customClass: {
    type: String,
    default: ""
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: !1
  },
  duration: {
    type: Number,
    default: 4500
  },
  icon: {
    type: Vr
  },
  id: {
    type: String,
    default: ""
  },
  message: {
    type: ke([String, Object]),
    default: ""
  },
  offset: {
    type: Number,
    default: 0
  },
  onClick: {
    type: ke(Function),
    default: () => {
    }
  },
  onClose: {
    type: ke(Function),
    required: !0
  },
  position: {
    type: String,
    values: ["top-right", "top-left", "bottom-right", "bottom-left"],
    default: "top-right"
  },
  showClose: {
    type: Boolean,
    default: !0
  },
  title: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    values: [...F7, ""],
    default: ""
  },
  zIndex: Number
}), sSe = {
  destroy: () => !0
}, aSe = ["id"], lSe = ["textContent"], uSe = { key: 0 }, cSe = ["innerHTML"], hSe = U({
  name: "ElNotification"
}), fSe = /* @__PURE__ */ U({
  ...hSe,
  props: oSe,
  emits: sSe,
  setup(n, { expose: e }) {
    const t = n, { ns: r, zIndex: i } = HD("notification"), { nextZIndex: o, currentZIndex: s } = i, { Close: a } = ij, l = F(!1);
    let u;
    const c = B(() => {
      const b = t.type;
      return b && Up[t.type] ? r.m(b) : "";
    }), h = B(() => t.type && Up[t.type] || t.icon), f = B(() => t.position.endsWith("right") ? "right" : "left"), d = B(() => t.position.startsWith("top") ? "top" : "bottom"), p = B(() => {
      var b;
      return {
        [d.value]: `${t.offset}px`,
        zIndex: (b = t.zIndex) != null ? b : s.value
      };
    });
    function g() {
      t.duration > 0 && ({ stop: u } = Qw(() => {
        l.value && m();
      }, t.duration));
    }
    function v() {
      u == null || u();
    }
    function m() {
      l.value = !1;
    }
    function y({ code: b }) {
      b === ii.delete || b === ii.backspace ? v() : b === ii.esc ? l.value && m() : g();
    }
    return dt(() => {
      g(), o(), l.value = !0;
    }), co(document, "keydown", y), e({
      visible: l,
      close: m
    }), (b, O) => (z(), ye(ml, {
      name: P(r).b("fade"),
      onBeforeLeave: b.onClose,
      onAfterLeave: O[1] || (O[1] = (w) => b.$emit("destroy")),
      persisted: ""
    }, {
      default: me(() => [
        zt(J("div", {
          id: b.id,
          class: Z([P(r).b(), b.customClass, P(f)]),
          style: pt(P(p)),
          role: "alert",
          onMouseenter: v,
          onMouseleave: g,
          onClick: O[0] || (O[0] = (...w) => b.onClick && b.onClick(...w))
        }, [
          P(h) ? (z(), ye(P(Dt), {
            key: 0,
            class: Z([P(r).e("icon"), P(c)])
          }, {
            default: me(() => [
              (z(), ye(cn(P(h))))
            ]),
            _: 1
          }, 8, ["class"])) : he("v-if", !0),
          J("div", {
            class: Z(P(r).e("group"))
          }, [
            J("h2", {
              class: Z(P(r).e("title")),
              textContent: Ke(b.title)
            }, null, 10, lSe),
            zt(J("div", {
              class: Z(P(r).e("content")),
              style: pt(b.title ? void 0 : { margin: 0 })
            }, [
              Ce(b.$slots, "default", {}, () => [
                b.dangerouslyUseHTMLString ? (z(), X(pr, { key: 1 }, [
                  he(" Caution here, message could've been compromised, never use user's input as message "),
                  J("p", { innerHTML: b.message }, null, 8, cSe)
                ], 2112)) : (z(), X("p", uSe, Ke(b.message), 1))
              ])
            ], 6), [
              [rr, b.message]
            ]),
            b.showClose ? (z(), ye(P(Dt), {
              key: 0,
              class: Z(P(r).e("closeBtn")),
              onClick: en(m, ["stop"])
            }, {
              default: me(() => [
                pe(P(a))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : he("v-if", !0)
          ], 2)
        ], 46, aSe), [
          [rr, l.value]
        ])
      ]),
      _: 3
    }, 8, ["name", "onBeforeLeave"]));
  }
});
var dSe = /* @__PURE__ */ Ze(fSe, [["__file", "notification.vue"]]);
const Gw = {
  "top-left": [],
  "top-right": [],
  "bottom-left": [],
  "bottom-right": []
}, JP = 16;
let pSe = 1;
const sg = function(n = {}, e = null) {
  if (!Ht)
    return { close: () => {
    } };
  (typeof n == "string" || il(n)) && (n = { message: n });
  const t = n.position || "top-right";
  let r = n.offset || 0;
  Gw[t].forEach(({ vm: c }) => {
    var h;
    r += (((h = c.el) == null ? void 0 : h.offsetHeight) || 0) + JP;
  }), r += JP;
  const i = `notification_${pSe++}`, o = n.onClose, s = {
    ...n,
    offset: r,
    id: i,
    onClose: () => {
      gSe(i, t, o);
    }
  };
  let a = document.body;
  ra(n.appendTo) ? a = n.appendTo : qt(n.appendTo) && (a = document.querySelector(n.appendTo)), ra(a) || (jt("ElNotification", "the appendTo option is not an HTMLElement. Falling back to document.body."), a = document.body);
  const l = document.createElement("div"), u = pe(dSe, s, il(s.message) ? {
    default: () => s.message
  } : null);
  return u.appContext = e ?? sg._context, u.props.onDestroy = () => {
    bc(null, l);
  }, bc(u, l), Gw[t].push({ vm: u }), a.appendChild(l.firstElementChild), {
    close: () => {
      u.component.exposed.visible.value = !1;
    }
  };
};
F7.forEach((n) => {
  sg[n] = (e = {}) => ((typeof e == "string" || il(e)) && (e = {
    message: e
  }), sg({
    ...e,
    type: n
  }));
});
function gSe(n, e, t) {
  const r = Gw[e], i = r.findIndex(({ vm: u }) => {
    var c;
    return ((c = u.component) == null ? void 0 : c.props.id) === n;
  });
  if (i === -1)
    return;
  const { vm: o } = r[i];
  if (!o)
    return;
  t == null || t(o);
  const s = o.el.offsetHeight, a = e.split("-")[0];
  r.splice(i, 1);
  const l = r.length;
  if (!(l < 1))
    for (let u = i; u < l; u++) {
      const { el: c, component: h } = r[u].vm, f = Number.parseInt(c.style[a], 10) - s - JP;
      h.props.offset = f;
    }
}
function vSe() {
  for (const n of Object.values(Gw))
    n.forEach(({ vm: e }) => {
      e.component.exposed.visible.value = !1;
    });
}
sg.closeAll = vSe;
sg._context = null;
const h4t = aj(sg, "$notify");
function aL(n) {
  return xW() ? (vD(n), !0) : !1;
}
function mSe(n, e) {
  if (typeof Symbol < "u") {
    const t = { ...n };
    return Object.defineProperty(t, Symbol.iterator, {
      enumerable: !1,
      value() {
        let r = 0;
        return {
          next: () => ({
            value: e[r++],
            done: r > e.length
          })
        };
      }
    }), t;
  } else
    return Object.assign([...e], n);
}
function Eo(n) {
  return typeof n == "function" ? n() : P(n);
}
const lL = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const ySe = Object.prototype.toString, bSe = (n) => ySe.call(n) === "[object Object]", Qf = () => {
};
function uL(n, e) {
  function t(...r) {
    return new Promise((i, o) => {
      Promise.resolve(n(() => e.apply(this, r), { fn: e, thisArg: this, args: r })).then(i).catch(o);
    });
  }
  return t;
}
const OSe = (n) => n();
function Q7(n, e = {}) {
  let t, r, i = Qf;
  const o = (a) => {
    clearTimeout(a), i(), i = Qf;
  };
  return (a) => {
    const l = Eo(n), u = Eo(e.maxWait);
    return t && o(t), l <= 0 || u !== void 0 && u <= 0 ? (r && (o(r), r = null), Promise.resolve(a())) : new Promise((c, h) => {
      i = e.rejectOnCancel ? h : c, u && !r && (r = setTimeout(() => {
        t && o(t), r = null, c(a());
      }, u)), t = setTimeout(() => {
        r && o(r), r = null, c(a());
      }, l);
    });
  };
}
function wSe(...n) {
  let e = 0, t, r = !0, i = Qf, o, s, a, l, u;
  !ol(n[0]) && typeof n[0] == "object" ? { delay: s, trailing: a = !0, leading: l = !0, rejectOnCancel: u = !1 } = n[0] : [s, a = !0, l = !0, u = !1] = n;
  const c = () => {
    t && (clearTimeout(t), t = void 0, i(), i = Qf);
  };
  return (f) => {
    const d = Eo(s), p = Date.now() - e, g = () => o = f();
    return c(), d <= 0 ? (e = Date.now(), g()) : (p > d && (l || !r) ? (e = Date.now(), g()) : a && (o = new Promise((v, m) => {
      i = u ? m : v, t = setTimeout(() => {
        e = Date.now(), r = !0, v(g()), c();
      }, Math.max(0, d - p));
    })), !l && !t && (t = setTimeout(() => r = !0, d)), r = !1, o);
  };
}
function xSe(n) {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}
const SSe = /-(\w)/g, _Se = xSe((n) => n.replace(SSe, (e, t) => t ? t.toUpperCase() : ""));
function CSe(n) {
  let e;
  function t() {
    return e || (e = n()), e;
  }
  return t.reset = async () => {
    const r = e;
    e = void 0, r && await r;
  }, t;
}
function ASe(n) {
  return n || xt();
}
function Z7(n, e = 200, t = {}) {
  return uL(
    Q7(e, t),
    n
  );
}
function f4t(n, e = 200, t = {}) {
  const r = F(n.value), i = Z7(() => {
    r.value = n.value;
  }, e, t);
  return de(n, () => i()), r;
}
function TSe(n, e = 200, t = !1, r = !0, i = !1) {
  return uL(
    wSe(e, t, r, i),
    n
  );
}
function PSe(n, e, t = {}) {
  const {
    eventFilter: r = OSe,
    ...i
  } = t;
  return de(
    n,
    uL(
      r,
      e
    ),
    i
  );
}
function W7(n, e = !0, t) {
  ASe() ? dt(n, t) : e ? n() : ut(n);
}
function ESe(n, e, t = {}) {
  const {
    immediate: r = !0
  } = t, i = F(!1);
  let o = null;
  function s() {
    o && (clearTimeout(o), o = null);
  }
  function a() {
    i.value = !1, s();
  }
  function l(...u) {
    s(), i.value = !0, o = setTimeout(() => {
      i.value = !1, o = null, n(...u);
    }, Eo(e));
  }
  return r && (i.value = !0, lL && l()), aL(a), {
    isPending: $S(i),
    start: l,
    stop: a
  };
}
function d4t(n, e, t = {}) {
  const {
    debounce: r = 0,
    maxWait: i = void 0,
    ...o
  } = t;
  return PSe(
    n,
    e,
    {
      ...o,
      eventFilter: Q7(r, { maxWait: i })
    }
  );
}
function p4t(n = {}) {
  const {
    inheritAttrs: e = !0
  } = n, t = lo(), r = /* @__PURE__ */ U({
    setup(o, { slots: s }) {
      return () => {
        t.value = s.default;
      };
    }
  }), i = /* @__PURE__ */ U({
    inheritAttrs: e,
    setup(o, { attrs: s, slots: a }) {
      return () => {
        var l;
        if (!t.value && process.env.NODE_ENV !== "production")
          throw new Error("[VueUse] Failed to find the definition of reusable template");
        const u = (l = t.value) == null ? void 0 : l.call(t, { ...kSe(s), $slots: a });
        return e && (u == null ? void 0 : u.length) === 1 ? u[0] : u;
      };
    }
  });
  return mSe(
    { define: r, reuse: i },
    [r, i]
  );
}
function kSe(n) {
  const e = {};
  for (const t in n)
    e[_Se(t)] = n[t];
  return e;
}
function Ku(n) {
  var e;
  const t = Eo(n);
  return (e = t == null ? void 0 : t.$el) != null ? e : t;
}
const o_ = lL ? window : void 0, G7 = lL ? window.navigator : void 0;
function jw(...n) {
  let e, t, r, i;
  if (typeof n[0] == "string" || Array.isArray(n[0]) ? ([t, r, i] = n, e = o_) : [e, t, r, i] = n, !e)
    return Qf;
  Array.isArray(t) || (t = [t]), Array.isArray(r) || (r = [r]);
  const o = [], s = () => {
    o.forEach((c) => c()), o.length = 0;
  }, a = (c, h, f, d) => (c.addEventListener(h, f, d), () => c.removeEventListener(h, f, d)), l = de(
    () => [Ku(e), Eo(i)],
    ([c, h]) => {
      if (s(), !c)
        return;
      const f = bSe(h) ? { ...h } : h;
      o.push(
        ...t.flatMap((d) => r.map((p) => a(c, d, p, f)))
      );
    },
    { immediate: !0, flush: "post" }
  ), u = () => {
    l(), s();
  };
  return aL(u), u;
}
function MSe() {
  const n = F(!1), e = xt();
  return e && dt(() => {
    n.value = !0;
  }, e), n;
}
function cL(n) {
  const e = MSe();
  return B(() => (e.value, !!n()));
}
function G3(n, e = {}) {
  const {
    controls: t = !1,
    navigator: r = G7
  } = e, i = cL(() => r && "permissions" in r);
  let o;
  const s = typeof n == "string" ? { name: n } : n, a = F(), l = () => {
    o && (a.value = o.state);
  }, u = CSe(async () => {
    if (i.value) {
      if (!o)
        try {
          o = await r.permissions.query(s), jw(o, "change", l), l();
        } catch {
          a.value = "prompt";
        }
      return o;
    }
  });
  return u(), t ? {
    state: a,
    isSupported: i,
    query: u
  } : a;
}
function g4t(n = {}) {
  const {
    navigator: e = G7,
    read: t = !1,
    source: r,
    copiedDuring: i = 1500,
    legacy: o = !1
  } = n, s = cL(() => e && "clipboard" in e), a = G3("clipboard-read"), l = G3("clipboard-write"), u = B(() => s.value || o), c = F(""), h = F(!1), f = ESe(() => h.value = !1, i);
  function d() {
    s.value && a.value !== "denied" ? e.clipboard.readText().then((m) => {
      c.value = m;
    }) : c.value = v();
  }
  u.value && t && jw(["copy", "cut"], d);
  async function p(m = Eo(r)) {
    u.value && m != null && (s.value && l.value !== "denied" ? await e.clipboard.writeText(m) : g(m), c.value = m, h.value = !0, f.start());
  }
  function g(m) {
    const y = document.createElement("textarea");
    y.value = m ?? "", y.style.position = "absolute", y.style.opacity = "0", document.body.appendChild(y), y.select(), document.execCommand("copy"), y.remove();
  }
  function v() {
    var m, y, b;
    return (b = (y = (m = document == null ? void 0 : document.getSelection) == null ? void 0 : m.call(document)) == null ? void 0 : y.toString()) != null ? b : "";
  }
  return {
    isSupported: u,
    text: c,
    copied: h,
    copy: p
  };
}
function DSe(n, e, t = {}) {
  const { window: r = o_, ...i } = t;
  let o;
  const s = cL(() => r && "ResizeObserver" in r), a = () => {
    o && (o.disconnect(), o = void 0);
  }, l = B(() => Array.isArray(n) ? n.map((h) => Ku(h)) : [Ku(n)]), u = de(
    l,
    (h) => {
      if (a(), s.value && r) {
        o = new ResizeObserver(e);
        for (const f of h)
          f && o.observe(f, i);
      }
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    a(), u();
  };
  return aL(c), {
    isSupported: s,
    stop: c
  };
}
function v4t(n, e = { width: 0, height: 0 }, t = {}) {
  const { window: r = o_, box: i = "content-box" } = t, o = B(() => {
    var h, f;
    return (f = (h = Ku(n)) == null ? void 0 : h.namespaceURI) == null ? void 0 : f.includes("svg");
  }), s = F(e.width), a = F(e.height), { stop: l } = DSe(
    n,
    ([h]) => {
      const f = i === "border-box" ? h.borderBoxSize : i === "content-box" ? h.contentBoxSize : h.devicePixelContentBoxSize;
      if (r && o.value) {
        const d = Ku(n);
        if (d) {
          const p = r.getComputedStyle(d);
          s.value = Number.parseFloat(p.width), a.value = Number.parseFloat(p.height);
        }
      } else if (f) {
        const d = Array.isArray(f) ? f : [f];
        s.value = d.reduce((p, { inlineSize: g }) => p + g, 0), a.value = d.reduce((p, { blockSize: g }) => p + g, 0);
      } else
        s.value = h.contentRect.width, a.value = h.contentRect.height;
    },
    t
  );
  W7(() => {
    const h = Ku(n);
    h && (s.value = "offsetWidth" in h ? h.offsetWidth : e.width, a.value = "offsetHeight" in h ? h.offsetHeight : e.height);
  });
  const u = de(
    () => Ku(n),
    (h) => {
      s.value = h ? e.width : 0, a.value = h ? e.height : 0;
    }
  );
  function c() {
    l(), u();
  }
  return {
    width: s,
    height: a,
    stop: c
  };
}
const j3 = 1;
function m4t(n, e = {}) {
  const {
    throttle: t = 0,
    idle: r = 200,
    onStop: i = Qf,
    onScroll: o = Qf,
    offset: s = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
    eventListenerOptions: a = {
      capture: !1,
      passive: !0
    },
    behavior: l = "auto",
    window: u = o_,
    onError: c = (S) => {
      console.error(S);
    }
  } = e, h = F(0), f = F(0), d = B({
    get() {
      return h.value;
    },
    set(S) {
      g(S, void 0);
    }
  }), p = B({
    get() {
      return f.value;
    },
    set(S) {
      g(void 0, S);
    }
  });
  function g(S, _) {
    var C, A, T;
    if (!u)
      return;
    const k = Eo(n);
    k && ((T = k instanceof Document ? u.document.body : k) == null || T.scrollTo({
      top: (C = Eo(_)) != null ? C : p.value,
      left: (A = Eo(S)) != null ? A : d.value,
      behavior: Eo(l)
    }));
  }
  const v = F(!1), m = Si({
    left: !0,
    right: !1,
    top: !0,
    bottom: !1
  }), y = Si({
    left: !1,
    right: !1,
    top: !1,
    bottom: !1
  }), b = (S) => {
    v.value && (v.value = !1, y.left = !1, y.right = !1, y.top = !1, y.bottom = !1, i(S));
  }, O = Z7(b, t + r), w = (S) => {
    var _;
    if (!u)
      return;
    const C = ((_ = S == null ? void 0 : S.document) == null ? void 0 : _.documentElement) || (S == null ? void 0 : S.documentElement) || Ku(S), { display: A, flexDirection: T } = getComputedStyle(C), k = C.scrollLeft;
    y.left = k < h.value, y.right = k > h.value;
    const L = Math.abs(k) <= (s.left || 0), D = Math.abs(k) + C.clientWidth >= C.scrollWidth - (s.right || 0) - j3;
    A === "flex" && T === "row-reverse" ? (m.left = D, m.right = L) : (m.left = L, m.right = D), h.value = k;
    let E = C.scrollTop;
    S === u.document && !E && (E = u.document.body.scrollTop), y.top = E < f.value, y.bottom = E > f.value;
    const M = Math.abs(E) <= (s.top || 0), R = Math.abs(E) + C.clientHeight >= C.scrollHeight - (s.bottom || 0) - j3;
    A === "flex" && T === "column-reverse" ? (m.top = R, m.bottom = M) : (m.top = M, m.bottom = R), f.value = E;
  }, x = (S) => {
    var _;
    if (!u)
      return;
    const C = (_ = S.target.documentElement) != null ? _ : S.target;
    w(C), v.value = !0, O(S), o(S);
  };
  return jw(
    n,
    "scroll",
    t ? TSe(x, t, !0, !1) : x,
    a
  ), W7(() => {
    try {
      const S = Eo(n);
      if (!S)
        return;
      w(S);
    } catch (S) {
      c(S);
    }
  }), jw(
    n,
    "scrollend",
    b,
    a
  ), {
    x: d,
    y: p,
    isScrolling: v,
    arrivedState: m,
    directions: y,
    measure() {
      const S = Eo(n);
      u && S && w(S);
    }
  };
}
var j7 = { exports: {} };
/*!
 * clipboard.js v2.0.11
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
(function(n, e) {
  (function(r, i) {
    n.exports = i();
  })(i0e, function() {
    return (
      /******/
      function() {
        var t = {
          /***/
          686: (
            /***/
            function(o, s, a) {
              a.d(s, {
                default: function() {
                  return (
                    /* binding */
                    H
                  );
                }
              });
              var l = a(279), u = /* @__PURE__ */ a.n(l), c = a(370), h = /* @__PURE__ */ a.n(c), f = a(817), d = /* @__PURE__ */ a.n(f);
              function p(G) {
                try {
                  return document.execCommand(G);
                } catch {
                  return !1;
                }
              }
              var g = function(q) {
                var Y = d()(q);
                return p("cut"), Y;
              }, v = g;
              function m(G) {
                var q = document.documentElement.getAttribute("dir") === "rtl", Y = document.createElement("textarea");
                Y.style.fontSize = "12pt", Y.style.border = "0", Y.style.padding = "0", Y.style.margin = "0", Y.style.position = "absolute", Y.style[q ? "right" : "left"] = "-9999px";
                var ie = window.pageYOffset || document.documentElement.scrollTop;
                return Y.style.top = "".concat(ie, "px"), Y.setAttribute("readonly", ""), Y.value = G, Y;
              }
              var y = function(q, Y) {
                var ie = m(q);
                Y.container.appendChild(ie);
                var se = d()(ie);
                return p("copy"), ie.remove(), se;
              }, b = function(q) {
                var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                  container: document.body
                }, ie = "";
                return typeof q == "string" ? ie = y(q, Y) : q instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(q == null ? void 0 : q.type) ? ie = y(q.value, Y) : (ie = d()(q), p("copy")), ie;
              }, O = b;
              function w(G) {
                "@babel/helpers - typeof";
                return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? w = function(Y) {
                  return typeof Y;
                } : w = function(Y) {
                  return Y && typeof Symbol == "function" && Y.constructor === Symbol && Y !== Symbol.prototype ? "symbol" : typeof Y;
                }, w(G);
              }
              var x = function() {
                var q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Y = q.action, ie = Y === void 0 ? "copy" : Y, se = q.container, K = q.target, re = q.text;
                if (ie !== "copy" && ie !== "cut")
                  throw new Error('Invalid "action" value, use either "copy" or "cut"');
                if (K !== void 0)
                  if (K && w(K) === "object" && K.nodeType === 1) {
                    if (ie === "copy" && K.hasAttribute("disabled"))
                      throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                    if (ie === "cut" && (K.hasAttribute("readonly") || K.hasAttribute("disabled")))
                      throw new Error(`Invalid "target" attribute. You can't cut text from elements with "readonly" or "disabled" attributes`);
                  } else
                    throw new Error('Invalid "target" value, use a valid Element');
                if (re)
                  return O(re, {
                    container: se
                  });
                if (K)
                  return ie === "cut" ? v(K) : O(K, {
                    container: se
                  });
              }, S = x;
              function _(G) {
                "@babel/helpers - typeof";
                return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? _ = function(Y) {
                  return typeof Y;
                } : _ = function(Y) {
                  return Y && typeof Symbol == "function" && Y.constructor === Symbol && Y !== Symbol.prototype ? "symbol" : typeof Y;
                }, _(G);
              }
              function C(G, q) {
                if (!(G instanceof q))
                  throw new TypeError("Cannot call a class as a function");
              }
              function A(G, q) {
                for (var Y = 0; Y < q.length; Y++) {
                  var ie = q[Y];
                  ie.enumerable = ie.enumerable || !1, ie.configurable = !0, "value" in ie && (ie.writable = !0), Object.defineProperty(G, ie.key, ie);
                }
              }
              function T(G, q, Y) {
                return q && A(G.prototype, q), Y && A(G, Y), G;
              }
              function k(G, q) {
                if (typeof q != "function" && q !== null)
                  throw new TypeError("Super expression must either be null or a function");
                G.prototype = Object.create(q && q.prototype, { constructor: { value: G, writable: !0, configurable: !0 } }), q && L(G, q);
              }
              function L(G, q) {
                return L = Object.setPrototypeOf || function(ie, se) {
                  return ie.__proto__ = se, ie;
                }, L(G, q);
              }
              function D(G) {
                var q = R();
                return function() {
                  var ie = N(G), se;
                  if (q) {
                    var K = N(this).constructor;
                    se = Reflect.construct(ie, arguments, K);
                  } else
                    se = ie.apply(this, arguments);
                  return E(this, se);
                };
              }
              function E(G, q) {
                return q && (_(q) === "object" || typeof q == "function") ? q : M(G);
              }
              function M(G) {
                if (G === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return G;
              }
              function R() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function N(G) {
                return N = Object.setPrototypeOf ? Object.getPrototypeOf : function(Y) {
                  return Y.__proto__ || Object.getPrototypeOf(Y);
                }, N(G);
              }
              function $(G, q) {
                var Y = "data-clipboard-".concat(G);
                if (q.hasAttribute(Y))
                  return q.getAttribute(Y);
              }
              var V = /* @__PURE__ */ function(G) {
                k(Y, G);
                var q = D(Y);
                function Y(ie, se) {
                  var K;
                  return C(this, Y), K = q.call(this), K.resolveOptions(se), K.listenClick(ie), K;
                }
                return T(Y, [{
                  key: "resolveOptions",
                  value: function() {
                    var se = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    this.action = typeof se.action == "function" ? se.action : this.defaultAction, this.target = typeof se.target == "function" ? se.target : this.defaultTarget, this.text = typeof se.text == "function" ? se.text : this.defaultText, this.container = _(se.container) === "object" ? se.container : document.body;
                  }
                  /**
                   * Adds a click event listener to the passed trigger.
                   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
                   */
                }, {
                  key: "listenClick",
                  value: function(se) {
                    var K = this;
                    this.listener = h()(se, "click", function(re) {
                      return K.onClick(re);
                    });
                  }
                  /**
                   * Defines a new `ClipboardAction` on each click event.
                   * @param {Event} e
                   */
                }, {
                  key: "onClick",
                  value: function(se) {
                    var K = se.delegateTarget || se.currentTarget, re = this.action(K) || "copy", ge = S({
                      action: re,
                      container: this.container,
                      target: this.target(K),
                      text: this.text(K)
                    });
                    this.emit(ge ? "success" : "error", {
                      action: re,
                      text: ge,
                      trigger: K,
                      clearSelection: function() {
                        K && K.focus(), window.getSelection().removeAllRanges();
                      }
                    });
                  }
                  /**
                   * Default `action` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultAction",
                  value: function(se) {
                    return $("action", se);
                  }
                  /**
                   * Default `target` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultTarget",
                  value: function(se) {
                    var K = $("target", se);
                    if (K)
                      return document.querySelector(K);
                  }
                  /**
                   * Allow fire programmatically a copy action
                   * @param {String|HTMLElement} target
                   * @param {Object} options
                   * @returns Text copied.
                   */
                }, {
                  key: "defaultText",
                  /**
                   * Default `text` lookup function.
                   * @param {Element} trigger
                   */
                  value: function(se) {
                    return $("text", se);
                  }
                  /**
                   * Destroy lifecycle.
                   */
                }, {
                  key: "destroy",
                  value: function() {
                    this.listener.destroy();
                  }
                }], [{
                  key: "copy",
                  value: function(se) {
                    var K = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      container: document.body
                    };
                    return O(se, K);
                  }
                  /**
                   * Allow fire programmatically a cut action
                   * @param {String|HTMLElement} target
                   * @returns Text cutted.
                   */
                }, {
                  key: "cut",
                  value: function(se) {
                    return v(se);
                  }
                  /**
                   * Returns the support of the given action, or all actions if no action is
                   * given.
                   * @param {String} [action]
                   */
                }, {
                  key: "isSupported",
                  value: function() {
                    var se = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ["copy", "cut"], K = typeof se == "string" ? [se] : se, re = !!document.queryCommandSupported;
                    return K.forEach(function(ge) {
                      re = re && !!document.queryCommandSupported(ge);
                    }), re;
                  }
                }]), Y;
              }(u()), H = V;
            }
          ),
          /***/
          828: (
            /***/
            function(o) {
              var s = 9;
              if (typeof Element < "u" && !Element.prototype.matches) {
                var a = Element.prototype;
                a.matches = a.matchesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector || a.webkitMatchesSelector;
              }
              function l(u, c) {
                for (; u && u.nodeType !== s; ) {
                  if (typeof u.matches == "function" && u.matches(c))
                    return u;
                  u = u.parentNode;
                }
              }
              o.exports = l;
            }
          ),
          /***/
          438: (
            /***/
            function(o, s, a) {
              var l = a(828);
              function u(f, d, p, g, v) {
                var m = h.apply(this, arguments);
                return f.addEventListener(p, m, v), {
                  destroy: function() {
                    f.removeEventListener(p, m, v);
                  }
                };
              }
              function c(f, d, p, g, v) {
                return typeof f.addEventListener == "function" ? u.apply(null, arguments) : typeof p == "function" ? u.bind(null, document).apply(null, arguments) : (typeof f == "string" && (f = document.querySelectorAll(f)), Array.prototype.map.call(f, function(m) {
                  return u(m, d, p, g, v);
                }));
              }
              function h(f, d, p, g) {
                return function(v) {
                  v.delegateTarget = l(v.target, d), v.delegateTarget && g.call(f, v);
                };
              }
              o.exports = c;
            }
          ),
          /***/
          879: (
            /***/
            function(o, s) {
              s.node = function(a) {
                return a !== void 0 && a instanceof HTMLElement && a.nodeType === 1;
              }, s.nodeList = function(a) {
                var l = Object.prototype.toString.call(a);
                return a !== void 0 && (l === "[object NodeList]" || l === "[object HTMLCollection]") && "length" in a && (a.length === 0 || s.node(a[0]));
              }, s.string = function(a) {
                return typeof a == "string" || a instanceof String;
              }, s.fn = function(a) {
                var l = Object.prototype.toString.call(a);
                return l === "[object Function]";
              };
            }
          ),
          /***/
          370: (
            /***/
            function(o, s, a) {
              var l = a(879), u = a(438);
              function c(p, g, v) {
                if (!p && !g && !v)
                  throw new Error("Missing required arguments");
                if (!l.string(g))
                  throw new TypeError("Second argument must be a String");
                if (!l.fn(v))
                  throw new TypeError("Third argument must be a Function");
                if (l.node(p))
                  return h(p, g, v);
                if (l.nodeList(p))
                  return f(p, g, v);
                if (l.string(p))
                  return d(p, g, v);
                throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
              }
              function h(p, g, v) {
                return p.addEventListener(g, v), {
                  destroy: function() {
                    p.removeEventListener(g, v);
                  }
                };
              }
              function f(p, g, v) {
                return Array.prototype.forEach.call(p, function(m) {
                  m.addEventListener(g, v);
                }), {
                  destroy: function() {
                    Array.prototype.forEach.call(p, function(m) {
                      m.removeEventListener(g, v);
                    });
                  }
                };
              }
              function d(p, g, v) {
                return u(document.body, p, g, v);
              }
              o.exports = c;
            }
          ),
          /***/
          817: (
            /***/
            function(o) {
              function s(a) {
                var l;
                if (a.nodeName === "SELECT")
                  a.focus(), l = a.value;
                else if (a.nodeName === "INPUT" || a.nodeName === "TEXTAREA") {
                  var u = a.hasAttribute("readonly");
                  u || a.setAttribute("readonly", ""), a.select(), a.setSelectionRange(0, a.value.length), u || a.removeAttribute("readonly"), l = a.value;
                } else {
                  a.hasAttribute("contenteditable") && a.focus();
                  var c = window.getSelection(), h = document.createRange();
                  h.selectNodeContents(a), c.removeAllRanges(), c.addRange(h), l = c.toString();
                }
                return l;
              }
              o.exports = s;
            }
          ),
          /***/
          279: (
            /***/
            function(o) {
              function s() {
              }
              s.prototype = {
                on: function(a, l, u) {
                  var c = this.e || (this.e = {});
                  return (c[a] || (c[a] = [])).push({
                    fn: l,
                    ctx: u
                  }), this;
                },
                once: function(a, l, u) {
                  var c = this;
                  function h() {
                    c.off(a, h), l.apply(u, arguments);
                  }
                  return h._ = l, this.on(a, h, u);
                },
                emit: function(a) {
                  var l = [].slice.call(arguments, 1), u = ((this.e || (this.e = {}))[a] || []).slice(), c = 0, h = u.length;
                  for (c; c < h; c++)
                    u[c].fn.apply(u[c].ctx, l);
                  return this;
                },
                off: function(a, l) {
                  var u = this.e || (this.e = {}), c = u[a], h = [];
                  if (c && l)
                    for (var f = 0, d = c.length; f < d; f++)
                      c[f].fn !== l && c[f].fn._ !== l && h.push(c[f]);
                  return h.length ? u[a] = h : delete u[a], this;
                }
              }, o.exports = s, o.exports.TinyEmitter = s;
            }
          )
          /******/
        }, r = {};
        function i(o) {
          if (r[o])
            return r[o].exports;
          var s = r[o] = {
            /******/
            // no module.id needed
            /******/
            // no module.loaded needed
            /******/
            exports: {}
            /******/
          };
          return t[o](s, s.exports, i), s.exports;
        }
        return function() {
          i.n = function(o) {
            var s = o && o.__esModule ? (
              /******/
              function() {
                return o.default;
              }
            ) : (
              /******/
              function() {
                return o;
              }
            );
            return i.d(s, { a: s }), s;
          };
        }(), function() {
          i.d = function(o, s) {
            for (var a in s)
              i.o(s, a) && !i.o(o, a) && Object.defineProperty(o, a, { enumerable: !0, get: s[a] });
          };
        }(), function() {
          i.o = function(o, s) {
            return Object.prototype.hasOwnProperty.call(o, s);
          };
        }(), i(686);
      }().default
    );
  });
})(j7);
var LSe = j7.exports;
const y4t = /* @__PURE__ */ ab(LSe);
typeof window == "object" && window.NodeList && !NodeList.prototype.forEach && (NodeList.prototype.forEach = Array.prototype.forEach);
typeof window < "u" && function(n) {
  n.forEach((e) => {
    Object.prototype.hasOwnProperty.call(e, "append") || Object.defineProperty(e, "append", {
      configurable: !0,
      enumerable: !0,
      writable: !0,
      value(...t) {
        const r = document.createDocumentFragment();
        t.forEach((i) => {
          const o = i instanceof Node;
          r.appendChild(o ? i : document.createTextNode(String(i)));
        }), this.appendChild(r);
      }
    });
  });
}([Element.prototype, Document.prototype, DocumentFragment.prototype]);
class Ul {
  get disposed() {
    return this._disposed === !0;
  }
  dispose() {
    this._disposed = !0;
  }
}
(function(n) {
  function e() {
    return (t, r, i) => {
      const o = i.value, s = t.__proto__;
      i.value = function(...a) {
        this.disposed || (o.call(this, ...a), s.dispose.call(this));
      };
    };
  }
  n.dispose = e;
})(Ul || (Ul = {}));
class H3 {
  constructor() {
    this.isDisposed = !1, this.items = /* @__PURE__ */ new Set();
  }
  /**
   * Test whether the set has been disposed.
   */
  get disposed() {
    return this.isDisposed;
  }
  /**
   * Dispose of the set and the items it contains.
   *
   * #### Notes
   * Items are disposed in the order they are added to the set.
   */
  dispose() {
    this.isDisposed || (this.isDisposed = !0, this.items.forEach((e) => {
      e.dispose();
    }), this.items.clear());
  }
  /**
   * Test whether the set contains a specific item.
   *
   * @param item - The item of interest.
   *
   * @returns `true` if the set contains the item, `false` otherwise.
   */
  contains(e) {
    return this.items.has(e);
  }
  /**
   * Add a disposable item to the set.
   *
   * @param item - The item to add to the set.
   *
   * #### Notes
   * If the item is already contained in the set, this is a no-op.
   */
  add(e) {
    this.items.add(e);
  }
  /**
   * Remove a disposable item from the set.
   *
   * @param item - The item to remove from the set.
   *
   * #### Notes
   * If the item is not contained in the set, this is a no-op.
   */
  remove(e) {
    this.items.delete(e);
  }
  /**
   * Remove all items from the set.
   */
  clear() {
    this.items.clear();
  }
}
(function(n) {
  function e(t) {
    const r = new n();
    return t.forEach((i) => {
      r.add(i);
    }), r;
  }
  n.from = e;
})(H3 || (H3 = {}));
function H7(n, e, t) {
  if (t)
    switch (t.length) {
      case 0:
        return n.call(e);
      case 1:
        return n.call(e, t[0]);
      case 2:
        return n.call(e, t[0], t[1]);
      case 3:
        return n.call(e, t[0], t[1], t[2]);
      case 4:
        return n.call(e, t[0], t[1], t[2], t[3]);
      case 5:
        return n.call(e, t[0], t[1], t[2], t[3], t[4]);
      case 6:
        return n.call(e, t[0], t[1], t[2], t[3], t[4], t[5]);
      default:
        return n.apply(e, t);
    }
  return n.call(e);
}
function Ue(n, e, ...t) {
  return H7(n, e, t);
}
function ISe(n) {
  return typeof n == "object" && n.then && typeof n.then == "function";
}
function eE(n) {
  return n != null && (n instanceof Promise || ISe(n));
}
function hL(...n) {
  const e = [];
  if (n.forEach((r) => {
    Array.isArray(r) ? e.push(...r) : e.push(r);
  }), e.some((r) => eE(r))) {
    const r = e.map((i) => eE(i) ? i : Promise.resolve(i !== !1));
    return Promise.all(r).then((i) => i.reduce((o, s) => s !== !1 && o, !0));
  }
  return e.every((r) => r !== !1);
}
function RSe(...n) {
  const e = hL(n);
  return typeof e == "boolean" ? Promise.resolve(e) : e;
}
function KC(n, e) {
  const t = [];
  for (let r = 0; r < n.length; r += 2) {
    const i = n[r], o = n[r + 1], s = Array.isArray(e) ? e : [e], a = H7(i, o, s);
    t.push(a);
  }
  return hL(t);
}
class $Se {
  constructor() {
    this.listeners = {};
  }
  on(e, t, r) {
    return t == null ? this : (this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t, r), this);
  }
  once(e, t, r) {
    const i = (...o) => (this.off(e, i), KC([t, r], o));
    return this.on(e, i, this);
  }
  off(e, t, r) {
    if (!(e || t || r))
      return this.listeners = {}, this;
    const i = this.listeners;
    return (e ? [e] : Object.keys(i)).forEach((s) => {
      const a = i[s];
      if (a) {
        if (!(t || r)) {
          delete i[s];
          return;
        }
        for (let l = a.length - 2; l >= 0; l -= 2)
          t && a[l] !== t || r && a[l + 1] !== r || a.splice(l, 2);
      }
    }), this;
  }
  trigger(e, ...t) {
    let r = !0;
    if (e !== "*") {
      const o = this.listeners[e];
      o != null && (r = KC([...o], t));
    }
    const i = this.listeners["*"];
    return i != null ? hL([
      r,
      KC([...i], [e, ...t])
    ]) : r;
  }
  emit(e, ...t) {
    return this.trigger(e, ...t);
  }
}
function NSe(n, ...e) {
  e.forEach((t) => {
    Object.getOwnPropertyNames(t.prototype).forEach((r) => {
      r !== "constructor" && Object.defineProperty(n.prototype, r, Object.getOwnPropertyDescriptor(t.prototype, r));
    });
  });
}
const BSe = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, e) {
  n.__proto__ = e;
} || function(n, e) {
  for (const t in e)
    Object.prototype.hasOwnProperty.call(e, t) && (n[t] = e[t]);
};
function VSe(n, e) {
  BSe(n, e);
  function t() {
    this.constructor = n;
  }
  n.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
}
class zSe {
}
const FSe = /^\s*class\s+/.test(`${zSe}`) || /^\s*class\s*\{/.test(`${class {
}}`);
function fL(n, e) {
  let t;
  return FSe ? t = class extends e {
  } : (t = function() {
    return e.apply(this, arguments);
  }, VSe(t, e)), Object.defineProperty(t, "name", { value: n }), t;
}
function q3(n) {
  return n === "__proto__";
}
function dL(n, e, t = "/") {
  let r;
  const i = Array.isArray(e) ? e : e.split(t);
  if (i.length)
    for (r = n; i.length; ) {
      const o = i.shift();
      if (Object(r) === r && o && o in r)
        r = r[o];
      else
        return;
    }
  return r;
}
function Ug(n, e, t, r = "/") {
  const i = Array.isArray(e) ? e : e.split(r), o = i.pop();
  if (o && !q3(o)) {
    let s = n;
    i.forEach((a) => {
      q3(a) || (s[a] == null && (s[a] = {}), s = s[a]);
    }), s[o] = t;
  }
  return n;
}
function Y3(n, e, t = "/") {
  const r = Array.isArray(e) ? e.slice() : e.split(t), i = r.pop();
  if (i)
    if (r.length > 0) {
      const o = dL(n, r);
      o && delete o[i];
    } else
      delete n[i];
  return n;
}
var QSe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Fn extends $Se {
  dispose() {
    this.off();
  }
}
QSe([
  Ul.dispose()
], Fn.prototype, "dispose", null);
(function(n) {
  n.dispose = Ul.dispose;
})(Fn || (Fn = {}));
NSe(Fn, Ul);
const q7 = (n) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}, Y7 = q7((n) => n.replace(/\B([A-Z])/g, "-$1").toLowerCase()), pL = q7((n) => bfe(WS(n)).replace(/ /g, ""));
function JC(n) {
  let e = 2166136261, t = !1, r = n;
  for (let i = 0, o = r.length; i < o; i += 1) {
    let s = r.charCodeAt(i);
    s > 127 && !t && (r = unescape(encodeURIComponent(r)), s = r.charCodeAt(i), t = !0), e ^= s, e += (e << 1) + (e << 4) + (e << 7) + (e << 8) + (e << 24);
  }
  return e >>> 0;
}
function Hw() {
  let n = "";
  const e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
  for (let t = 0, r = e.length; t < r; t += 1) {
    const i = e[t], o = Math.random() * 16 | 0, s = i === "x" ? o : i === "y" ? o & 3 | 8 : i;
    n += s.toString(16);
  }
  return n;
}
function ZSe(n, e, t) {
  const r = Math.min(2, Math.floor(n.length * 0.34));
  let i = Math.floor(n.length * 0.4) + 1, o, s = !1;
  const a = n.toLowerCase();
  for (const l of e) {
    const u = t(l);
    if (u !== void 0 && Math.abs(u.length - a.length) <= r) {
      const c = u.toLowerCase();
      if (c === a) {
        if (u === n)
          continue;
        return l;
      }
      if (s || u.length < 3)
        continue;
      const h = WSe(a, c, i - 1);
      if (h === void 0)
        continue;
      h < 3 ? (s = !0, o = l) : (i = h, o = l);
    }
  }
  return o;
}
function WSe(n, e, t) {
  let r = new Array(e.length + 1), i = new Array(e.length + 1);
  const o = t + 1;
  for (let a = 0; a <= e.length; a += 1)
    r[a] = a;
  for (let a = 1; a <= n.length; a += 1) {
    const l = n.charCodeAt(a - 1), u = a > t ? a - t : 1, c = e.length > t + a ? t + a : e.length;
    i[0] = a;
    let h = a;
    for (let d = 1; d < u; d += 1)
      i[d] = o;
    for (let d = u; d <= c; d += 1) {
      const p = l === e.charCodeAt(d - 1) ? r[d - 1] : Math.min(
        /* delete */
        r[d] + 1,
        /* insert */
        i[d - 1] + 1,
        /* substitute */
        r[d - 1] + 2
      );
      i[d] = p, h = Math.min(h, p);
    }
    for (let d = c + 1; d <= e.length; d += 1)
      i[d] = o;
    if (h > t)
      return;
    const f = r;
    r = i, i = f;
  }
  const s = r[e.length];
  return s > t ? void 0 : s;
}
function Kl(n) {
  return typeof n == "string" && n.slice(-1) === "%";
}
function Ks(n, e) {
  if (n == null)
    return 0;
  let t;
  if (typeof n == "string") {
    if (t = parseFloat(n), Kl(n) && (t /= 100, Number.isFinite(t)))
      return t * e;
  } else
    t = n;
  return Number.isFinite(t) ? t > 0 && t < 1 ? t * e : t : 0;
}
function Zf(n) {
  if (typeof n == "object") {
    let t = 0, r = 0, i = 0, o = 0;
    return n.vertical != null && Number.isFinite(n.vertical) && (r = o = n.vertical), n.horizontal != null && Number.isFinite(n.horizontal) && (i = t = n.horizontal), n.left != null && Number.isFinite(n.left) && (t = n.left), n.top != null && Number.isFinite(n.top) && (r = n.top), n.right != null && Number.isFinite(n.right) && (i = n.right), n.bottom != null && Number.isFinite(n.bottom) && (o = n.bottom), { top: r, right: i, bottom: o, left: t };
  }
  let e = 0;
  return n != null && Number.isFinite(n) && (e = n), { top: e, right: e, bottom: e, left: e };
}
let gL = !1, X7 = !1, U7 = !1, K7 = !1, J7 = !1, eH = !1, tH = !1, nH = !1, rH = !1, iH = !1, oH = !1, sH = !1, aH = !1, lH = !1, uH = !1, cH = !1;
if (typeof navigator == "object") {
  const n = navigator.userAgent;
  gL = n.indexOf("Macintosh") >= 0, X7 = !!n.match(/(iPad|iPhone|iPod)/g), U7 = n.indexOf("Windows") >= 0, K7 = n.indexOf("MSIE") >= 0, J7 = !!n.match(/Trident\/7\./), eH = !!n.match(/Edge\//), tH = n.indexOf("Mozilla/") >= 0 && n.indexOf("MSIE") < 0 && n.indexOf("Edge/") < 0, rH = n.indexOf("Chrome/") >= 0 && n.indexOf("Edge/") < 0, iH = n.indexOf("Opera/") >= 0 || n.indexOf("OPR/") >= 0, oH = n.indexOf("Firefox/") >= 0, sH = n.indexOf("AppleWebKit/") >= 0 && n.indexOf("Chrome/") < 0 && n.indexOf("Edge/") < 0, typeof document == "object" && (cH = !document.createElementNS || `${document.createElementNS("http://www.w3.org/2000/svg", "foreignObject")}` != "[object SVGForeignObjectElement]" || n.indexOf("Opera/") >= 0);
}
typeof window == "object" && (nH = window.chrome != null && window.chrome.app != null && window.chrome.app.runtime != null, lH = window.PointerEvent != null && !gL);
if (typeof document == "object") {
  aH = "ontouchstart" in document.documentElement;
  try {
    const n = Object.defineProperty({}, "passive", {
      get() {
        uH = !0;
      }
    }), e = document.createElement("div");
    e.addEventListener && e.addEventListener("click", () => {
    }, n);
  } catch {
  }
}
var wc;
(function(n) {
  n.IS_MAC = gL, n.IS_IOS = X7, n.IS_WINDOWS = U7, n.IS_IE = K7, n.IS_IE11 = J7, n.IS_EDGE = eH, n.IS_NETSCAPE = tH, n.IS_CHROME_APP = nH, n.IS_CHROME = rH, n.IS_OPERA = iH, n.IS_FIREFOX = oH, n.IS_SAFARI = sH, n.SUPPORT_TOUCH = aH, n.SUPPORT_POINTER = lH, n.SUPPORT_PASSIVE = uH, n.NO_FOREIGNOBJECT = cH, n.SUPPORT_FOREIGNOBJECT = !n.NO_FOREIGNOBJECT;
})(wc || (wc = {}));
(function(n) {
  function e() {
    const o = window.module;
    return o != null && o.hot != null && o.hot.status != null ? o.hot.status() : "unkonwn";
  }
  n.getHMRStatus = e;
  function t() {
    return e() === "apply";
  }
  n.isApplyingHMR = t;
  const r = {
    select: "input",
    change: "input",
    submit: "form",
    reset: "form",
    error: "img",
    load: "img",
    abort: "img"
  };
  function i(o) {
    const s = document.createElement(r[o] || "div"), a = `on${o}`;
    let l = a in s;
    return l || (s.setAttribute(a, "return;"), l = typeof s[a] == "function"), l;
  }
  n.isEventSupported = i;
})(wc || (wc = {}));
const vL = /[\t\r\n\f]/g, mL = /\S+/g, ag = (n) => ` ${n} `;
function lg(n) {
  return n && n.getAttribute && n.getAttribute("class") || "";
}
function Kg(n, e) {
  if (n == null || e == null)
    return !1;
  const t = ag(lg(n)), r = ag(e);
  return n.nodeType === 1 ? t.replace(vL, " ").includes(r) : !1;
}
function rt(n, e) {
  if (!(n == null || e == null)) {
    if (typeof e == "function")
      return rt(n, e(lg(n)));
    if (typeof e == "string" && n.nodeType === 1) {
      const t = e.match(mL) || [], r = ag(lg(n)).replace(vL, " ");
      let i = t.reduce((o, s) => o.indexOf(ag(s)) < 0 ? `${o}${s} ` : o, r);
      i = i.trim(), r !== i && n.setAttribute("class", i);
    }
  }
}
function hr(n, e) {
  if (n != null) {
    if (typeof e == "function")
      return hr(n, e(lg(n)));
    if ((!e || typeof e == "string") && n.nodeType === 1) {
      const t = (e || "").match(mL) || [], r = ag(lg(n)).replace(vL, " ");
      let i = t.reduce((o, s) => {
        const a = ag(s);
        return o.indexOf(a) > -1 ? o.replace(a, " ") : o;
      }, r);
      i = e ? i.trim() : "", r !== i && n.setAttribute("class", i);
    }
  }
}
function Ym(n, e, t) {
  if (!(n == null || e == null)) {
    if (t != null && typeof e == "string") {
      t ? rt(n, e) : hr(n, e);
      return;
    }
    if (typeof e == "function")
      return Ym(n, e(lg(n), t), t);
    typeof e == "string" && (e.match(mL) || []).forEach((i) => {
      Kg(n, i) ? hr(n, i) : rt(n, i);
    });
  }
}
let X3 = 0;
function GSe() {
  return X3 += 1, `v${X3}`;
}
function yL(n) {
  return (n.id == null || n.id === "") && (n.id = GSe()), n.id;
}
function xc(n) {
  return n == null ? !1 : typeof n.getScreenCTM == "function" && n instanceof SVGElement;
}
const Br = {
  svg: "http://www.w3.org/2000/svg",
  xmlns: "http://www.w3.org/2000/xmlns/",
  xml: "http://www.w3.org/XML/1998/namespace",
  xlink: "http://www.w3.org/1999/xlink",
  xhtml: "http://www.w3.org/1999/xhtml"
}, U3 = "1.1";
function K3(n, e = document) {
  return e.createElement(n);
}
function bL(n, e = Br.xhtml, t = document) {
  return t.createElementNS(e, n);
}
function ga(n, e = document) {
  return bL(n, Br.svg, e);
}
function qw(n) {
  if (n) {
    const t = `<svg xmlns="${Br.svg}" xmlns:xlink="${Br.xlink}" version="${U3}">${n}</svg>`, { documentElement: r } = jSe(t, { async: !1 });
    return r;
  }
  const e = document.createElementNS(Br.svg, "svg");
  return e.setAttributeNS(Br.xmlns, "xmlns:xlink", Br.xlink), e.setAttribute("version", U3), e;
}
function jSe(n, e = {}) {
  let t;
  try {
    const r = new DOMParser();
    if (e.async != null) {
      const i = r;
      i.async = e.async;
    }
    t = r.parseFromString(n, e.mimeType || "text/xml");
  } catch {
    t = void 0;
  }
  if (!t || t.getElementsByTagName("parsererror").length)
    throw new Error(`Invalid XML: ${n}`);
  return t;
}
function HSe(n, e = !0) {
  const t = n.nodeName;
  return e ? t.toLowerCase() : t.toUpperCase();
}
function OL(n) {
  let e = 0, t = n.previousSibling;
  for (; t; )
    t.nodeType === 1 && (e += 1), t = t.previousSibling;
  return e;
}
function qSe(n, e) {
  return n.querySelectorAll(e);
}
function YSe(n, e) {
  return n.querySelector(e);
}
function hH(n, e, t) {
  const r = n.ownerSVGElement;
  let i = n.parentNode;
  for (; i && i !== t && i !== r; ) {
    if (Kg(i, e))
      return i;
    i = i.parentNode;
  }
  return null;
}
function fH(n, e) {
  const t = e && e.parentNode;
  return n === t || !!(t && t.nodeType === 1 && n.compareDocumentPosition(t) & 16);
}
function Ja(n) {
  n && (Array.isArray(n) ? n : [n]).forEach((t) => {
    t.parentNode && t.parentNode.removeChild(t);
  });
}
function lb(n) {
  for (; n.firstChild; )
    n.removeChild(n.firstChild);
}
function Kc(n, e) {
  (Array.isArray(e) ? e : [e]).forEach((r) => {
    r != null && n.appendChild(r);
  });
}
function dH(n, e) {
  const t = n.firstChild;
  return t ? wL(t, e) : Kc(n, e);
}
function wL(n, e) {
  const t = n.parentNode;
  t && (Array.isArray(e) ? e : [e]).forEach((i) => {
    i != null && t.insertBefore(i, n);
  });
}
function Xm(n, e) {
  e != null && e.appendChild(n);
}
function J3(n) {
  try {
    return n instanceof HTMLElement;
  } catch {
    return typeof n == "object" && n.nodeType === 1 && typeof n.style == "object" && typeof n.ownerDocument == "object";
  }
}
function XSe(n, e) {
  const t = [];
  let r = n.firstChild;
  for (; r; r = r.nextSibling)
    r.nodeType === 1 && (!e || Kg(r, e)) && t.push(r);
  return t;
}
const pH = [
  "viewBox",
  "attributeName",
  "attributeType",
  "repeatCount",
  "textLength",
  "lengthAdjust",
  "gradientUnits"
];
function USe(n, e) {
  return n.getAttribute(e);
}
function xL(n, e) {
  const t = vH(e);
  t.ns ? n.hasAttributeNS(t.ns, t.local) && n.removeAttributeNS(t.ns, t.local) : n.hasAttribute(e) && n.removeAttribute(e);
}
function SL(n, e, t) {
  if (t == null)
    return xL(n, e);
  const r = vH(e);
  r.ns && typeof t == "string" ? n.setAttributeNS(r.ns, e, t) : e === "id" ? n.id = `${t}` : n.setAttribute(e, `${t}`);
}
function gH(n, e) {
  Object.keys(e).forEach((t) => {
    SL(n, t, e[t]);
  });
}
function Qt(n, e, t) {
  if (e == null) {
    const r = n.attributes, i = {};
    for (let o = 0; o < r.length; o += 1)
      i[r[o].name] = r[o].value;
    return i;
  }
  if (typeof e == "string" && t === void 0)
    return n.getAttribute(e);
  typeof e == "object" ? gH(n, e) : SL(n, e, t);
}
function vH(n) {
  if (n.indexOf(":") !== -1) {
    const e = n.split(":");
    return {
      ns: Br[e[0]],
      local: e[1]
    };
  }
  return {
    ns: null,
    local: n
  };
}
function zy(n) {
  const e = {};
  return Object.keys(n).forEach((t) => {
    const r = pH.includes(t) ? t : Y7(t);
    e[r] = n[t];
  }), e;
}
function e1(n) {
  const e = {};
  return n.split(";").forEach((r) => {
    const i = r.trim();
    if (i) {
      const o = i.split("=");
      o.length && (e[o[0].trim()] = o[1] ? o[1].trim() : "");
    }
  }), e;
}
function tE(n, e) {
  return Object.keys(e).forEach((t) => {
    if (t === "class")
      n[t] = n[t] ? `${n[t]} ${e[t]}` : e[t];
    else if (t === "style") {
      const r = typeof n[t] == "object", i = typeof e[t] == "object";
      let o, s;
      r && i ? (o = n[t], s = e[t]) : r ? (o = n[t], s = e1(e[t])) : i ? (o = e1(n[t]), s = e[t]) : (o = e1(n[t]), s = e1(e[t])), n[t] = tE(o, s);
    } else
      n[t] = e[t];
  }), n;
}
function KSe(n, e, t = {}) {
  const r = t.offset || 0, i = [], o = [];
  let s, a, l = null;
  for (let u = 0; u < n.length; u += 1) {
    s = o[u] = n[u];
    for (let c = 0, h = e.length; c < h; c += 1) {
      const f = e[c], d = f.start + r, p = f.end + r;
      u >= d && u < p && (typeof s == "string" ? s = o[u] = {
        t: n[u],
        attrs: f.attrs
      } : s.attrs = tE(tE({}, s.attrs), f.attrs), t.includeAnnotationIndices && (s.annotations == null && (s.annotations = []), s.annotations.push(c)));
    }
    a = o[u - 1], a ? Hn(s) && Hn(a) ? (l = l, JSON.stringify(s.attrs) === JSON.stringify(a.attrs) ? l.t += s.t : (i.push(l), l = s)) : Hn(s) || Hn(a) ? (l = l, i.push(l), l = s) : l = (l || "") + s : l = s;
  }
  return l != null && i.push(l), i;
}
function JSe(n) {
  return n.replace(/ /g, " ");
}
var e5;
(function(n) {
  function e(u) {
    const c = "data:";
    return u.substr(0, c.length) === c;
  }
  n.isDataUrl = e;
  function t(u, c) {
    if (!u || e(u)) {
      setTimeout(() => c(null, u));
      return;
    }
    const h = () => {
      c(new Error(`Failed to load image: ${u}`));
    }, f = window.FileReader ? (
      // chrome, IE10+
      (p) => {
        if (p.status === 200) {
          const g = new FileReader();
          g.onload = (v) => {
            const m = v.target.result;
            c(null, m);
          }, g.onerror = h, g.readAsDataURL(p.response);
        } else
          h();
      }
    ) : (p) => {
      const g = (v) => {
        const y = [];
        for (let b = 0; b < v.length; b += 32768)
          y.push(String.fromCharCode.apply(null, v.subarray(b, b + 32768)));
        return y.join("");
      };
      if (p.status === 200) {
        let v = u.split(".").pop() || "png";
        v === "svg" && (v = "svg+xml");
        const m = `data:image/${v};base64,`, y = new Uint8Array(p.response), b = m + btoa(g(y));
        c(null, b);
      } else
        h();
    }, d = new XMLHttpRequest();
    d.responseType = window.FileReader ? "blob" : "arraybuffer", d.open("GET", u, !0), d.addEventListener("error", h), d.addEventListener("load", () => f(d)), d.send();
  }
  n.imageToDataUri = t;
  function r(u) {
    let c = u.replace(/\s/g, "");
    c = decodeURIComponent(c);
    const h = c.indexOf(","), f = c.slice(0, h), d = f.split(":")[1].split(";")[0], p = c.slice(h + 1);
    let g;
    f.indexOf("base64") >= 0 ? g = atob(p) : g = unescape(encodeURIComponent(p));
    const v = new Uint8Array(g.length);
    for (let m = 0; m < g.length; m += 1)
      v[m] = g.charCodeAt(m);
    return new Blob([v], { type: d });
  }
  n.dataUriToBlob = r;
  function i(u, c) {
    const h = window.navigator.msSaveBlob;
    if (h)
      h(u, c);
    else {
      const f = window.URL.createObjectURL(u), d = document.createElement("a");
      d.href = f, d.download = c, document.body.appendChild(d), d.click(), document.body.removeChild(d), window.URL.revokeObjectURL(f);
    }
  }
  n.downloadBlob = i;
  function o(u, c) {
    const h = r(u);
    i(h, c);
  }
  n.downloadDataUri = o;
  function s(u) {
    const c = u.match(/<svg[^>]*viewBox\s*=\s*(["']?)(.+?)\1[^>]*>/i);
    return c && c[2] ? c[2].replace(/\s+/, " ").split(" ") : null;
  }
  function a(u) {
    const c = parseFloat(u);
    return Number.isNaN(c) ? null : c;
  }
  function l(u, c = {}) {
    let h = null;
    const f = (b) => (h == null && (h = s(u)), h != null ? a(h[b]) : null), d = (b) => {
      const O = u.match(b);
      return O && O[2] ? a(O[2]) : null;
    };
    let p = c.width;
    if (p == null && (p = d(/<svg[^>]*width\s*=\s*(["']?)(.+?)\1[^>]*>/i)), p == null && (p = f(2)), p == null)
      throw new Error("Can not parse width from svg string");
    let g = c.height;
    if (g == null && (g = d(/<svg[^>]*height\s*=\s*(["']?)(.+?)\1[^>]*>/i)), g == null && (g = f(3)), g == null)
      throw new Error("Can not parse height from svg string");
    return `data:image/svg+xml,${encodeURIComponent(u).replace(/'/g, "%27").replace(/"/g, "%22")}`;
  }
  n.svgToDataUrl = l;
})(e5 || (e5 = {}));
let Wh;
const e_e = {
  px(n) {
    return n;
  },
  mm(n) {
    return Wh * n;
  },
  cm(n) {
    return Wh * n * 10;
  },
  in(n) {
    return Wh * n * 25.4;
  },
  pt(n) {
    return Wh * (25.4 * n / 72);
  },
  pc(n) {
    return Wh * (25.4 * n / 6);
  }
};
var t5;
(function(n) {
  function e(r, i, o) {
    const s = document.createElement("div"), a = s.style;
    a.display = "inline-block", a.position = "absolute", a.left = "-15000px", a.top = "-15000px", a.width = r + (o || "px"), a.height = i + (o || "px"), document.body.appendChild(s);
    const l = s.getBoundingClientRect(), u = {
      width: l.width || 0,
      height: l.height || 0
    };
    return document.body.removeChild(s), u;
  }
  n.measure = e;
  function t(r, i) {
    Wh == null && (Wh = e("1", "1", "mm").width);
    const o = i ? e_e[i] : null;
    return o ? o(r) : r;
  }
  n.toPx = t;
})(t5 || (t5 = {}));
const t_e = /-(.)/g;
function n_e(n) {
  return n.replace(t_e, (e, t) => t.toUpperCase());
}
const e2 = {}, n5 = ["webkit", "ms", "moz", "o"], mH = typeof document < "u" ? document.createElement("div").style : {};
function r_e(n) {
  for (let e = 0; e < n5.length; e += 1) {
    const t = n5[e] + n;
    if (t in mH)
      return t;
  }
  return null;
}
function i_e(n) {
  const e = n_e(n);
  if (e2[e] == null) {
    const t = e.charAt(0).toUpperCase() + e.slice(1);
    e2[e] = e in mH ? e : r_e(t);
  }
  return e2[e];
}
function r5(n, e) {
  const t = n.ownerDocument && n.ownerDocument.defaultView && n.ownerDocument.defaultView.opener ? n.ownerDocument.defaultView.getComputedStyle(n, null) : window.getComputedStyle(n, null);
  return t && e ? t.getPropertyValue(e) || t[e] : t;
}
const o_e = {
  animationIterationCount: !0,
  columnCount: !0,
  flexGrow: !0,
  flexShrink: !0,
  fontWeight: !0,
  gridArea: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnStart: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowStart: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  widows: !0,
  zIndex: !0
};
function s_e(n) {
  return /^--/.test(n);
}
function a_e(n, e, t) {
  const r = window.getComputedStyle(n, null);
  return t ? r.getPropertyValue(e) || void 0 : r[e] || n.style[e];
}
function l_e(n, e) {
  return !o_e[n] && typeof e == "number" ? `${e}px` : e;
}
function xr(n, e, t) {
  if (typeof e == "string") {
    const r = s_e(e);
    if (r || (e = i_e(e)), t === void 0)
      return a_e(n, e, r);
    r || (t = l_e(e, t));
    const i = n.style;
    r ? i.setProperty(e, t) : i[e] = t;
    return;
  }
  for (const r in e)
    xr(n, r, e[r]);
}
const Yw = /* @__PURE__ */ new WeakMap();
function i5(n, e) {
  const t = WS(e), r = Yw.get(n);
  if (r)
    return r[t];
}
function u_e(n, e, t) {
  const r = WS(e), i = Yw.get(n);
  i ? i[r] = t : Yw.set(n, {
    [r]: t
  });
}
function Wf(n, e, t) {
  if (!e) {
    const r = {};
    return Object.keys(Yw).forEach((i) => {
      r[i] = i5(n, i);
    }), r;
  }
  if (typeof e == "string") {
    if (t === void 0)
      return i5(n, e);
    u_e(n, e, t);
    return;
  }
  for (const r in e)
    Wf(n, r, e[r]);
}
class lt {
  get [Symbol.toStringTag]() {
    return lt.toStringTag;
  }
  get type() {
    return this.node.nodeName;
  }
  get id() {
    return this.node.id;
  }
  set id(e) {
    this.node.id = e;
  }
  constructor(e, t, r) {
    if (!e)
      throw new TypeError("Invalid element to create vector");
    let i;
    if (lt.isVector(e))
      i = e.node;
    else if (typeof e == "string")
      if (e.toLowerCase() === "svg")
        i = qw();
      else if (e[0] === "<") {
        const o = qw(e);
        i = document.importNode(o.firstChild, !0);
      } else
        i = document.createElementNS(Br.svg, e);
    else
      i = e;
    this.node = i, t && this.setAttributes(t), r && this.append(r);
  }
  transform(e, t) {
    return e == null ? ug(this.node) : (ug(this.node, e, t), this);
  }
  translate(e, t = 0, r = {}) {
    return e == null ? s5(this.node) : (s5(this.node, e, t, r), this);
  }
  rotate(e, t, r, i = {}) {
    return e == null ? iE(this.node) : (iE(this.node, e, t, r, i), this);
  }
  scale(e, t) {
    return e == null ? oE(this.node) : (oE(this.node, e, t), this);
  }
  /**
   * Returns an SVGMatrix that specifies the transformation necessary
   * to convert this coordinate system into `target` coordinate system.
   */
  getTransformToElement(e) {
    const t = lt.toNode(e);
    return Km(this.node, t);
  }
  removeAttribute(e) {
    return xL(this.node, e), this;
  }
  getAttribute(e) {
    return USe(this.node, e);
  }
  setAttribute(e, t) {
    return SL(this.node, e, t), this;
  }
  setAttributes(e) {
    return gH(this.node, e), this;
  }
  attr(e, t) {
    return e == null ? Qt(this.node) : typeof e == "string" && t === void 0 ? Qt(this.node, e) : (typeof e == "object" ? Qt(this.node, e) : Qt(this.node, e, t), this);
  }
  svg() {
    return this.node instanceof SVGSVGElement ? this : lt.create(this.node.ownerSVGElement);
  }
  defs() {
    const e = this.svg() || this, t = e.node.getElementsByTagName("defs")[0];
    return t ? lt.create(t) : lt.create("defs").appendTo(e);
  }
  text(e, t = {}) {
    return bH(this.node, e, t), this;
  }
  tagName() {
    return HSe(this.node);
  }
  clone() {
    return lt.create(this.node.cloneNode(!0));
  }
  remove() {
    return Ja(this.node), this;
  }
  empty() {
    return lb(this.node), this;
  }
  append(e) {
    return Kc(this.node, lt.toNodes(e)), this;
  }
  appendTo(e) {
    return Xm(this.node, lt.isVector(e) ? e.node : e), this;
  }
  prepend(e) {
    return dH(this.node, lt.toNodes(e)), this;
  }
  before(e) {
    return wL(this.node, lt.toNodes(e)), this;
  }
  replace(e) {
    return this.node.parentNode && this.node.parentNode.replaceChild(lt.toNode(e), this.node), lt.create(e);
  }
  first() {
    return this.node.firstChild ? lt.create(this.node.firstChild) : null;
  }
  last() {
    return this.node.lastChild ? lt.create(this.node.lastChild) : null;
  }
  get(e) {
    const t = this.node.childNodes[e];
    return t ? lt.create(t) : null;
  }
  indexOf(e) {
    return Array.prototype.slice.call(this.node.childNodes).indexOf(lt.toNode(e));
  }
  find(e) {
    const t = [], r = qSe(this.node, e);
    if (r)
      for (let i = 0, o = r.length; i < o; i += 1)
        t.push(lt.create(r[i]));
    return t;
  }
  findOne(e) {
    const t = YSe(this.node, e);
    return t ? lt.create(t) : null;
  }
  findParentByClass(e, t) {
    const r = hH(this.node, e, t);
    return r ? lt.create(r) : null;
  }
  matches(e) {
    const t = this.node;
    this.node.matches;
    const r = t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector || null;
    return r && r.call(t, e);
  }
  contains(e) {
    return fH(this.node, lt.isVector(e) ? e.node : e);
  }
  wrap(e) {
    const t = lt.create(e), r = this.node.parentNode;
    return r != null && r.insertBefore(t.node, this.node), t.append(this);
  }
  parent(e) {
    let t = this;
    if (t.node.parentNode == null)
      return null;
    if (t = lt.create(t.node.parentNode), e == null)
      return t;
    do
      if (typeof e == "string" ? t.matches(e) : t instanceof e)
        return t;
    while (t = lt.create(t.node.parentNode));
    return t;
  }
  children() {
    const e = this.node.childNodes, t = [];
    for (let r = 0; r < e.length; r += 1)
      e[r].nodeType === 1 && t.push(lt.create(e[r]));
    return t;
  }
  eachChild(e, t) {
    const r = this.children();
    for (let i = 0, o = r.length; i < o; i += 1)
      e.call(r[i], r[i], i, r), t && r[i].eachChild(e, t);
    return this;
  }
  index() {
    return OL(this.node);
  }
  hasClass(e) {
    return Kg(this.node, e);
  }
  addClass(e) {
    return rt(this.node, e), this;
  }
  removeClass(e) {
    return hr(this.node, e), this;
  }
  toggleClass(e, t) {
    return Ym(this.node, e, t), this;
  }
  toLocalPoint(e, t) {
    return E_e(this.node, e, t);
  }
  /**
   * Samples the underlying SVG element (it currently works only on
   * paths - where it is most useful anyway). Returns an array of objects
   * of the form `{ x: Number, y: Number, distance: Number }`. Each of these
   * objects represent a point on the path. This basically creates a discrete
   * representation of the path (which is possible a curve). The sampling
   * interval defines the accuracy of the sampling. In other words, we travel
   * from the beginning of the path to the end by interval distance (on the
   * path, not between the resulting points) and collect the discrete points
   * on the path. This is very useful in many situations. For example, SVG
   * does not provide a built-in mechanism to find intersections between two
   * paths. Using sampling, we can just generate bunch of points for each of
   * the path and find the closest ones from each set.
   */
  sample(e = 1) {
    return this.node instanceof SVGPathElement ? d_e(this.node, e) : [];
  }
  toPath() {
    return lt.create(O_e(this.node));
  }
  toPathData() {
    return SH(this.node);
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(s) {
    if (s == null)
      return !1;
    if (s instanceof n)
      return !0;
    const a = s[Symbol.toStringTag], l = s;
    return (a == null || a === n.toStringTag) && l.node instanceof SVGElement && typeof l.sample == "function" && typeof l.toPath == "function";
  }
  n.isVector = e;
  function t(s, a, l) {
    return new n(s, a, l);
  }
  n.create = t;
  function r(s) {
    if (s[0] === "<") {
      const a = qw(s), l = [];
      for (let u = 0, c = a.childNodes.length; u < c; u += 1) {
        const h = a.childNodes[u];
        l.push(t(document.importNode(h, !0)));
      }
      return l;
    }
    return [t(s)];
  }
  n.createVectors = r;
  function i(s) {
    return e(s) ? s.node : s;
  }
  n.toNode = i;
  function o(s) {
    return Array.isArray(s) ? s.map((a) => i(a)) : [i(s)];
  }
  n.toNodes = o;
})(lt || (lt = {}));
function c_e(n, e) {
  const t = lt.create(e), r = lt.create("textPath"), i = n.d;
  if (i && n["xlink:href"] === void 0) {
    const o = lt.create("path").attr("d", i).appendTo(t.defs());
    r.attr("xlink:href", `#${o.id}`);
  }
  return typeof n == "object" && r.attr(n), r.node;
}
function h_e(n, e, t) {
  const r = t.eol, i = t.baseSize, o = t.lineHeight;
  let s = 0, a;
  const l = {}, u = e.length - 1;
  for (let c = 0; c <= u; c += 1) {
    let h = e[c], f = null;
    if (typeof h == "object") {
      const d = h.attrs, p = lt.create("tspan", d);
      a = p.node;
      let g = h.t;
      r && c === u && (g += r), a.textContent = g;
      const v = d.class;
      v && p.addClass(v), t.includeAnnotationIndices && p.attr("annotations", h.annotations.join(",")), f = parseFloat(d["font-size"]), f === void 0 && (f = i), f && f > s && (s = f);
    } else
      r && c === u && (h += r), a = document.createTextNode(h || " "), i && i > s && (s = i);
    n.appendChild(a);
  }
  return s && (l.maxFontSize = s), o ? l.lineHeight = o : s && (l.lineHeight = s * 1.2), l;
}
const yH = /em$/;
function t1(n, e) {
  const t = parseFloat(n);
  return yH.test(n) ? t * e : t;
}
function f_e(n, e, t, r) {
  if (!Array.isArray(e))
    return 0;
  const i = e.length;
  if (!i)
    return 0;
  let o = e[0];
  const s = t1(o.maxFontSize, t) || t;
  let a = 0;
  const l = t1(r, t);
  for (let h = 1; h < i; h += 1) {
    o = e[h];
    const f = t1(o.lineHeight, t) || l;
    a += f;
  }
  const u = t1(o.maxFontSize, t) || t;
  let c;
  switch (n) {
    case "middle":
      c = s / 2 - 0.15 * u - a / 2;
      break;
    case "bottom":
      c = -(0.25 * u) - a;
      break;
    case "top":
    default:
      c = 0.8 * s;
      break;
  }
  return c;
}
function bH(n, e, t = {}) {
  e = JSe(e);
  const r = t.eol;
  let i = t.textPath;
  const o = t.textVerticalAnchor, s = o === "middle" || o === "bottom" || o === "top";
  let a = t.x;
  a === void 0 && (a = n.getAttribute("x") || 0);
  const l = t.includeAnnotationIndices;
  let u = t.annotations;
  u && !Array.isArray(u) && (u = [u]);
  const c = t.lineHeight, h = c === "auto", f = h ? "1.5em" : c || "1em";
  let d = !0;
  const p = n.childNodes;
  if (p.length === 1) {
    const C = p[0];
    C && C.tagName.toUpperCase() === "TITLE" && (d = !1);
  }
  d && lb(n), Qt(n, {
    // Preserve spaces, do not consecutive spaces to get collapsed to one.
    "xml:space": "preserve",
    // An empty text gets rendered into the DOM in webkit-based browsers.
    // In order to unify this behaviour across all browsers
    // we rather hide the text element when it's empty.
    display: e || t.displayEmpty ? null : "none"
  });
  const g = Qt(n, "font-size");
  let v = parseFloat(g);
  v || (v = 16, (s || u) && !g && Qt(n, "font-size", `${v}`));
  let m;
  i ? (typeof i == "string" && (i = { d: i }), m = c_e(i, n)) : m = document.createDocumentFragment();
  let y, b = 0, O;
  const w = e.split(`
`), x = [], S = w.length - 1;
  for (let C = 0; C <= S; C += 1) {
    y = f;
    let A = "v-line";
    const T = ga("tspan");
    let k, L = w[C];
    if (L)
      if (u) {
        const D = KSe(L, u, {
          offset: -b,
          includeAnnotationIndices: l
        });
        k = h_e(T, D, {
          eol: C !== S && r,
          baseSize: v,
          lineHeight: h ? null : f,
          includeAnnotationIndices: l
        });
        const E = k.lineHeight;
        E && h && C !== 0 && (y = E), C === 0 && (O = k.maxFontSize * 0.8);
      } else
        r && C !== S && (L += r), T.textContent = L;
    else {
      T.textContent = "-", A += " v-empty-line";
      const D = T.style;
      D.fillOpacity = 0, D.strokeOpacity = 0, u && (k = {});
    }
    k && x.push(k), C > 0 && T.setAttribute("dy", y), (C > 0 || i) && T.setAttribute("x", a), T.className.baseVal = A, m.appendChild(T), b += L.length + 1;
  }
  if (s)
    if (u)
      y = f_e(o, x, v, f);
    else if (o === "top")
      y = "0.8em";
    else {
      let C;
      switch (S > 0 ? (C = parseFloat(f) || 1, C *= S, yH.test(f) || (C /= v)) : C = 0, o) {
        case "middle":
          y = `${0.3 - C / 2}em`;
          break;
        case "bottom":
          y = `${-C - 0.3}em`;
          break;
      }
    }
  else
    o === 0 ? y = "0em" : o ? y = o : (y = 0, n.getAttribute("y") == null && n.setAttribute("y", `${O || "0.8em"}`));
  m.firstChild.setAttribute("dy", y), n.appendChild(m);
}
function Um(n, e = {}) {
  const t = document.createElement("canvas").getContext("2d");
  if (!n)
    return { width: 0 };
  const r = [], i = e["font-size"] ? `${parseFloat(e["font-size"])}px` : "14px";
  return r.push(e["font-style"] || "normal"), r.push(e["font-variant"] || "normal"), r.push(e["font-weight"] || 400), r.push(i), r.push(e["font-family"] || "sans-serif"), t.font = r.join(" "), t.measureText(n);
}
function o5(n, e, t, r = {}) {
  if (e >= t)
    return [n, ""];
  const i = n.length, o = {};
  let s = Math.round(e / t * i - 1);
  for (s < 0 && (s = 0); s >= 0 && s < i; ) {
    const a = n.slice(0, s), l = o[a] || Um(a, r).width, u = n.slice(0, s + 1), c = o[u] || Um(u, r).width;
    if (o[a] = l, o[u] = c, l > e)
      s -= 1;
    else if (c <= e)
      s += 1;
    else
      break;
  }
  return [n.slice(0, s), n.slice(s)];
}
function OH(n, e, t = {}, r = {}) {
  const i = e.width, o = e.height, s = r.eol || `
`, a = t.fontSize || 14, l = t.lineHeight ? parseFloat(t.lineHeight) : Math.ceil(a * 1.4), u = Math.floor(o / l);
  if (n.indexOf(s) > -1) {
    const v = Hw(), m = [];
    return n.split(s).map((y) => {
      const b = OH(y, Object.assign(Object.assign({}, e), { height: Number.MAX_SAFE_INTEGER }), t, Object.assign(Object.assign({}, r), { eol: v }));
      b && m.push(...b.split(v));
    }), m.slice(0, u).join(s);
  }
  const { width: c } = Um(n, t);
  if (c < i)
    return n;
  const h = [];
  let f = n, d = c, p = r.ellipsis, g = 0;
  p && (typeof p != "string" && (p = "…"), g = Um(p, t).width);
  for (let v = 0; v < u; v += 1)
    if (d > i)
      if (v === u - 1) {
        const [y] = o5(f, i - g, d, t);
        h.push(p ? `${y}${p}` : y);
      } else {
        const [y, b] = o5(f, i, d, t);
        h.push(y), f = b, d = Um(f, t).width;
      }
    else {
      h.push(f);
      break;
    }
  return h.join(s);
}
const nE = 0.551784;
function Yr(n, e, t = NaN) {
  const r = n.getAttribute(e);
  if (r == null)
    return t;
  const i = parseFloat(r);
  return Number.isNaN(i) ? t : i;
}
function d_e(n, e = 1) {
  const t = n.getTotalLength(), r = [];
  let i = 0, o;
  for (; i < t; )
    o = n.getPointAtLength(i), r.push({ distance: i, x: o.x, y: o.y }), i += e;
  return r;
}
function p_e(n) {
  return [
    "M",
    Yr(n, "x1"),
    Yr(n, "y1"),
    "L",
    Yr(n, "x2"),
    Yr(n, "y2")
  ].join(" ");
}
function g_e(n) {
  const e = Xw(n);
  return e.length === 0 ? null : `${wH(e)} Z`;
}
function v_e(n) {
  const e = Xw(n);
  return e.length === 0 ? null : wH(e);
}
function wH(n) {
  return `M ${n.map((t) => `${t.x} ${t.y}`).join(" L")}`;
}
function Xw(n) {
  const e = [], t = n.points;
  if (t)
    for (let r = 0, i = t.numberOfItems; r < i; r += 1)
      e.push(t.getItem(r));
  return e;
}
function m_e(n) {
  const e = Yr(n, "cx", 0), t = Yr(n, "cy", 0), r = Yr(n, "r"), i = r * nE;
  return [
    "M",
    e,
    t - r,
    "C",
    e + i,
    t - r,
    e + r,
    t - i,
    e + r,
    t,
    "C",
    e + r,
    t + i,
    e + i,
    t + r,
    e,
    t + r,
    "C",
    e - i,
    t + r,
    e - r,
    t + i,
    e - r,
    t,
    "C",
    e - r,
    t - i,
    e - i,
    t - r,
    e,
    t - r,
    "Z"
  ].join(" ");
}
function y_e(n) {
  const e = Yr(n, "cx", 0), t = Yr(n, "cy", 0), r = Yr(n, "rx"), i = Yr(n, "ry") || r, o = r * nE, s = i * nE;
  return [
    "M",
    e,
    t - i,
    "C",
    e + o,
    t - i,
    e + r,
    t - s,
    e + r,
    t,
    "C",
    e + r,
    t + s,
    e + o,
    t + i,
    e,
    t + i,
    "C",
    e - o,
    t + i,
    e - r,
    t + s,
    e - r,
    t,
    "C",
    e - r,
    t - s,
    e - o,
    t - i,
    e,
    t - i,
    "Z"
  ].join(" ");
}
function b_e(n) {
  return xH({
    x: Yr(n, "x", 0),
    y: Yr(n, "y", 0),
    width: Yr(n, "width", 0),
    height: Yr(n, "height", 0),
    rx: Yr(n, "rx", 0),
    ry: Yr(n, "ry", 0)
  });
}
function xH(n) {
  let e;
  const t = n.x, r = n.y, i = n.width, o = n.height, s = Math.min(n.rx || n["top-rx"] || 0, i / 2), a = Math.min(n.rx || n["bottom-rx"] || 0, i / 2), l = Math.min(n.ry || n["top-ry"] || 0, o / 2), u = Math.min(n.ry || n["bottom-ry"] || 0, o / 2);
  return s || a || l || u ? e = [
    "M",
    t,
    r + l,
    "v",
    o - l - u,
    "a",
    a,
    u,
    0,
    0,
    0,
    a,
    u,
    "h",
    i - 2 * a,
    "a",
    a,
    u,
    0,
    0,
    0,
    a,
    -u,
    "v",
    -(o - u - l),
    "a",
    s,
    l,
    0,
    0,
    0,
    -s,
    -l,
    "h",
    -(i - 2 * s),
    "a",
    s,
    l,
    0,
    0,
    0,
    -s,
    l,
    "Z"
  ] : e = ["M", t, r, "H", t + i, "V", r + o, "H", t, "V", r, "Z"], e.join(" ");
}
function O_e(n) {
  const e = ga("path");
  Qt(e, Qt(n));
  const t = SH(n);
  return t && e.setAttribute("d", t), e;
}
function SH(n) {
  const e = n.tagName.toLowerCase();
  switch (e) {
    case "path":
      return n.getAttribute("d");
    case "line":
      return p_e(n);
    case "polygon":
      return g_e(n);
    case "polyline":
      return v_e(n);
    case "ellipse":
      return y_e(n);
    case "circle":
      return m_e(n);
    case "rect":
      return b_e(n);
  }
  throw new Error(`"${e}" cannot be converted to svg path element.`);
}
const w_e = /(\w+)\(([^,)]+),?([^)]+)?\)/gi, _H = /[ ,]+/, x_e = /^(\w+)\((.*)\)/;
function S_e(n, e) {
  const r = ga("svg").createSVGPoint();
  return r.x = n, r.y = e, r;
}
function Qr(n) {
  const t = ga("svg").createSVGMatrix();
  if (n != null) {
    const r = n, i = t;
    for (const o in r)
      i[o] = r[o];
  }
  return t;
}
function vm(n) {
  const e = ga("svg");
  return n != null ? (n instanceof DOMMatrix || (n = Qr(n)), e.createSVGTransformFromMatrix(n)) : e.createSVGTransform();
}
function Fy(n) {
  let e = Qr();
  const t = n != null && n.match(w_e);
  if (!t)
    return e;
  for (let r = 0, i = t.length; r < i; r += 1) {
    const s = t[r].match(x_e);
    if (s) {
      let a, l, u, c, h, f = Qr();
      const d = s[2].split(_H);
      switch (s[1].toLowerCase()) {
        case "scale":
          a = parseFloat(d[0]), l = d[1] === void 0 ? a : parseFloat(d[1]), f = f.scaleNonUniform(a, l);
          break;
        case "translate":
          u = parseFloat(d[0]), c = parseFloat(d[1]), f = f.translate(u, c);
          break;
        case "rotate":
          h = parseFloat(d[0]), u = parseFloat(d[1]) || 0, c = parseFloat(d[2]) || 0, u !== 0 || c !== 0 ? f = f.translate(u, c).rotate(h).translate(-u, -c) : f = f.rotate(h);
          break;
        case "skewx":
          h = parseFloat(d[0]), f = f.skewX(h);
          break;
        case "skewy":
          h = parseFloat(d[0]), f = f.skewY(h);
          break;
        case "matrix":
          f.a = parseFloat(d[0]), f.b = parseFloat(d[1]), f.c = parseFloat(d[2]), f.d = parseFloat(d[3]), f.e = parseFloat(d[4]), f.f = parseFloat(d[5]);
          break;
        default:
          continue;
      }
      e = e.multiply(f);
    }
  }
  return e;
}
function Jg(n) {
  const e = n || {}, t = e.a != null ? e.a : 1, r = e.b != null ? e.b : 0, i = e.c != null ? e.c : 0, o = e.d != null ? e.d : 1, s = e.e != null ? e.e : 0, a = e.f != null ? e.f : 0;
  return `matrix(${t},${r},${i},${o},${s},${a})`;
}
function s_(n) {
  let e, t, r;
  if (n) {
    const o = _H;
    if (n.trim().indexOf("matrix") >= 0) {
      const s = Fy(n), a = __e(s);
      e = [a.translateX, a.translateY], t = [a.rotation], r = [a.scaleX, a.scaleY];
      const l = [];
      (e[0] !== 0 || e[1] !== 0) && l.push(`translate(${e.join(",")})`), (r[0] !== 1 || r[1] !== 1) && l.push(`scale(${r.join(",")})`), t[0] !== 0 && l.push(`rotate(${t[0]})`), n = l.join(" ");
    } else {
      const s = n.match(/translate\((.*?)\)/);
      s && (e = s[1].split(o));
      const a = n.match(/rotate\((.*?)\)/);
      a && (t = a[1].split(o));
      const l = n.match(/scale\((.*?)\)/);
      l && (r = l[1].split(o));
    }
  }
  const i = r && r[0] ? parseFloat(r[0]) : 1;
  return {
    raw: n || "",
    translation: {
      tx: e && e[0] ? parseInt(e[0], 10) : 0,
      ty: e && e[1] ? parseInt(e[1], 10) : 0
    },
    rotation: {
      angle: t && t[0] ? parseInt(t[0], 10) : 0,
      cx: t && t[1] ? parseInt(t[1], 10) : void 0,
      cy: t && t[2] ? parseInt(t[2], 10) : void 0
    },
    scale: {
      sx: i,
      sy: r && r[1] ? parseFloat(r[1]) : i
    }
  };
}
function rE(n, e) {
  const t = e.x * n.a + e.y * n.c + 0, r = e.x * n.b + e.y * n.d + 0;
  return { x: t, y: r };
}
function __e(n) {
  const e = rE(n, { x: 0, y: 1 }), t = rE(n, { x: 1, y: 0 }), r = 180 / Math.PI * Math.atan2(e.y, e.x) - 90, i = 180 / Math.PI * Math.atan2(t.y, t.x);
  return {
    skewX: r,
    skewY: i,
    translateX: n.e,
    translateY: n.f,
    scaleX: Math.sqrt(n.a * n.a + n.b * n.b),
    scaleY: Math.sqrt(n.c * n.c + n.d * n.d),
    rotation: r
  };
}
function C_e(n) {
  let e, t, r, i;
  return n ? (e = n.a == null ? 1 : n.a, i = n.d == null ? 1 : n.d, t = n.b, r = n.c) : e = i = 1, {
    sx: t ? Math.sqrt(e * e + t * t) : e,
    sy: r ? Math.sqrt(r * r + i * i) : i
  };
}
function A_e(n) {
  let e = { x: 0, y: 1 };
  n && (e = rE(n, e));
  const t = 180 * Math.atan2(e.y, e.x) / Math.PI % 360 - 90;
  return {
    angle: t % 360 + (t < 0 ? 360 : 0)
  };
}
function T_e(n) {
  return {
    tx: n && n.e || 0,
    ty: n && n.f || 0
  };
}
function ug(n, e, t = {}) {
  if (e == null)
    return Fy(Qt(n, "transform"));
  if (t.absolute) {
    n.setAttribute("transform", Jg(e));
    return;
  }
  const r = n.transform, i = vm(e);
  r.baseVal.appendItem(i);
}
function s5(n, e, t = 0, r = {}) {
  let i = Qt(n, "transform");
  const o = s_(i);
  if (e == null)
    return o.translation;
  i = o.raw, i = i.replace(/translate\([^)]*\)/g, "").trim();
  const s = r.absolute ? e : o.translation.tx + e, a = r.absolute ? t : o.translation.ty + t, l = `translate(${s},${a})`;
  n.setAttribute("transform", `${l} ${i}`.trim());
}
function iE(n, e, t, r, i = {}) {
  let o = Qt(n, "transform");
  const s = s_(o);
  if (e == null)
    return s.rotation;
  o = s.raw, o = o.replace(/rotate\([^)]*\)/g, "").trim(), e %= 360;
  const a = i.absolute ? e : s.rotation.angle + e, l = t != null && r != null ? `,${t},${r}` : "", u = `rotate(${a}${l})`;
  n.setAttribute("transform", `${o} ${u}`.trim());
}
function oE(n, e, t) {
  let r = Qt(n, "transform");
  const i = s_(r);
  if (e == null)
    return i.scale;
  t = t ?? e, r = i.raw, r = r.replace(/scale\([^)]*\)/g, "").trim();
  const o = `scale(${e},${t})`;
  n.setAttribute("transform", `${r} ${o}`.trim());
}
function Km(n, e) {
  if (xc(e) && xc(n)) {
    const t = e.getScreenCTM(), r = n.getScreenCTM();
    if (t && r)
      return t.inverse().multiply(r);
  }
  return Qr();
}
function P_e(n, e) {
  let t = Qr();
  if (xc(e) && xc(n)) {
    let r = n;
    const i = [];
    for (; r && r !== e; ) {
      const o = r.getAttribute("transform") || null, s = Fy(o);
      i.push(s), r = r.parentNode;
    }
    i.reverse().forEach((o) => {
      t = t.multiply(o);
    });
  }
  return t;
}
function E_e(n, e, t) {
  const r = n instanceof SVGSVGElement ? n : n.ownerSVGElement, i = r.createSVGPoint();
  i.x = e, i.y = t;
  try {
    const o = r.getScreenCTM(), s = i.matrixTransform(o.inverse()), a = Km(n, r).inverse();
    return s.matrixTransform(a);
  } catch {
    return i;
  }
}
var is;
(function(n) {
  const e = {};
  function t(o) {
    return e[o] || {};
  }
  n.get = t;
  function r(o, s) {
    e[o] = s;
  }
  n.register = r;
  function i(o) {
    delete e[o];
  }
  n.unregister = i;
})(is || (is = {}));
var rf;
(function(n) {
  const e = /* @__PURE__ */ new WeakMap();
  function t(o) {
    return e.has(o) || e.set(o, { events: /* @__PURE__ */ Object.create(null) }), e.get(o);
  }
  n.ensure = t;
  function r(o) {
    return e.get(o);
  }
  n.get = r;
  function i(o) {
    return e.delete(o);
  }
  n.remove = i;
})(rf || (rf = {}));
var vt;
(function(n) {
  n.returnTrue = () => !0, n.returnFalse = () => !1;
  function e(i) {
    i.stopPropagation();
  }
  n.stopPropagationCallback = e;
  function t(i, o, s) {
    i.addEventListener != null && i.addEventListener(o, s);
  }
  n.addEventListener = t;
  function r(i, o, s) {
    i.removeEventListener != null && i.removeEventListener(o, s);
  }
  n.removeEventListener = r;
})(vt || (vt = {}));
(function(n) {
  const e = /[^\x20\t\r\n\f]+/g, t = /^([^.]*)(?:\.(.+)|)/;
  function r(a) {
    return (a || "").match(e) || [""];
  }
  n.splitType = r;
  function i(a) {
    const l = t.exec(a) || [];
    return {
      originType: l[1] ? l[1].trim() : l[1],
      namespaces: l[2] ? l[2].split(".").map((u) => u.trim()).sort() : []
    };
  }
  n.normalizeType = i;
  function o(a) {
    return a.nodeType === 1 || a.nodeType === 9 || !+a.nodeType;
  }
  n.isValidTarget = o;
  function s(a, l) {
    if (l) {
      const u = a;
      return u.querySelector != null && u.querySelector(l) != null;
    }
    return !0;
  }
  n.isValidSelector = s;
})(vt || (vt = {}));
(function(n) {
  let e = 0;
  const t = /* @__PURE__ */ new WeakMap();
  function r(a) {
    return t.has(a) || (t.set(a, e), e += 1), t.get(a);
  }
  n.ensureHandlerId = r;
  function i(a) {
    return t.get(a);
  }
  n.getHandlerId = i;
  function o(a) {
    return t.delete(a);
  }
  n.removeHandlerId = o;
  function s(a, l) {
    return t.set(a, l);
  }
  n.setHandlerId = s;
})(vt || (vt = {}));
(function(n) {
  function e(t, r) {
    const i = [], o = rf.get(t), s = o && o.events && o.events[r.type], a = s && s.handlers || [], l = s ? s.delegateCount : 0;
    if (l > 0 && // Support: Firefox <=42 - 66+
    // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
    // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
    // Support: IE 11+
    // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
    !(r.type === "click" && typeof r.button == "number" && r.button >= 1)) {
      for (let u = r.target; u !== t; u = u.parentNode || t)
        if (u.nodeType === 1 && !(r.type === "click" && u.disabled === !0)) {
          const c = [], h = {};
          for (let f = 0; f < l; f += 1) {
            const d = a[f], p = d.selector;
            if (p != null && h[p] == null) {
              const g = t, v = [];
              g.querySelectorAll(p).forEach((m) => {
                v.push(m);
              }), h[p] = v.includes(u);
            }
            h[p] && c.push(d);
          }
          c.length && i.push({ elem: u, handlers: c });
        }
    }
    return l < a.length && i.push({ elem: t, handlers: a.slice(l) }), i;
  }
  n.getHandlerQueue = e;
})(vt || (vt = {}));
(function(n) {
  function e(t) {
    return t != null && t === t.window;
  }
  n.isWindow = e;
})(vt || (vt = {}));
(function(n) {
  function e(t, r) {
    const i = t.nodeType === 9 ? t.documentElement : t, o = r && r.parentNode;
    return t === o || !!(o && o.nodeType === 1 && // Support: IE 9 - 11+
    // IE doesn't have `contains` on SVG.
    (i.contains ? i.contains(o) : t.compareDocumentPosition && t.compareDocumentPosition(o) & 16));
  }
  n.contains = e;
})(vt || (vt = {}));
class el {
  constructor(e, t) {
    this.isDefaultPrevented = vt.returnFalse, this.isPropagationStopped = vt.returnFalse, this.isImmediatePropagationStopped = vt.returnFalse, this.isSimulated = !1, this.preventDefault = () => {
      const r = this.originalEvent;
      this.isDefaultPrevented = vt.returnTrue, r && !this.isSimulated && r.preventDefault();
    }, this.stopPropagation = () => {
      const r = this.originalEvent;
      this.isPropagationStopped = vt.returnTrue, r && !this.isSimulated && r.stopPropagation();
    }, this.stopImmediatePropagation = () => {
      const r = this.originalEvent;
      this.isImmediatePropagationStopped = vt.returnTrue, r && !this.isSimulated && r.stopImmediatePropagation(), this.stopPropagation();
    }, typeof e == "string" ? this.type = e : e.type && (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented ? vt.returnTrue : vt.returnFalse, this.target = e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget, this.timeStamp = e.timeStamp), t && Object.assign(this, t), this.timeStamp || (this.timeStamp = Date.now());
  }
}
(function(n) {
  function e(t) {
    return t instanceof n ? t : new n(t);
  }
  n.create = e;
})(el || (el = {}));
(function(n) {
  function e(t, r) {
    Object.defineProperty(n.prototype, t, {
      enumerable: !0,
      configurable: !0,
      get: typeof r == "function" ? (
        // eslint-disable-next-line
        function() {
          if (this.originalEvent)
            return r(this.originalEvent);
        }
      ) : (
        // eslint-disable-next-line
        function() {
          if (this.originalEvent)
            return this.originalEvent[t];
        }
      ),
      set(i) {
        Object.defineProperty(this, t, {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: i
        });
      }
    });
  }
  n.addProperty = e;
})(el || (el = {}));
(function(n) {
  const e = {
    bubbles: !0,
    cancelable: !0,
    eventPhase: !0,
    detail: !0,
    view: !0,
    button: !0,
    buttons: !0,
    clientX: !0,
    clientY: !0,
    offsetX: !0,
    offsetY: !0,
    pageX: !0,
    pageY: !0,
    screenX: !0,
    screenY: !0,
    toElement: !0,
    pointerId: !0,
    pointerType: !0,
    char: !0,
    code: !0,
    charCode: !0,
    key: !0,
    keyCode: !0,
    touches: !0,
    changedTouches: !0,
    targetTouches: !0,
    which: !0,
    altKey: !0,
    ctrlKey: !0,
    metaKey: !0,
    shiftKey: !0
  };
  Object.keys(e).forEach((t) => n.addProperty(t, e[t]));
})(el || (el = {}));
(function(n) {
  is.register("load", {
    noBubble: !0
  });
})();
(function(n) {
  is.register("beforeunload", {
    postDispatch(e, t) {
      t.result !== void 0 && t.originalEvent && (t.originalEvent.returnValue = t.result);
    }
  });
})();
(function(n) {
  is.register("mouseenter", {
    delegateType: "mouseover",
    bindType: "mouseover",
    handle(e, t) {
      let r;
      const i = t.relatedTarget, o = t.handleObj;
      return (!i || i !== e && !vt.contains(e, i)) && (t.type = o.originType, r = o.handler.call(e, t), t.type = "mouseover"), r;
    }
  }), is.register("mouseleave", {
    delegateType: "mouseout",
    bindType: "mouseout",
    handle(e, t) {
      let r;
      const i = t.relatedTarget, o = t.handleObj;
      return (!i || i !== e && !vt.contains(e, i)) && (t.type = o.originType, r = o.handler.call(e, t), t.type = "mouseout"), r;
    }
  });
})();
var k_e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
}, Qy;
(function(n) {
  let e;
  function t(s, a, l, u, c) {
    if (!vt.isValidTarget(s))
      return;
    let h;
    if (typeof l != "function") {
      const { handler: g, selector: v } = l, m = k_e(l, ["handler", "selector"]);
      l = g, c = v, h = m;
    }
    const f = rf.ensure(s);
    let d = f.handler;
    d == null && (d = f.handler = function(g, ...v) {
      return e !== g.type ? i(s, g, ...v) : void 0;
    });
    const p = vt.ensureHandlerId(l);
    vt.splitType(a).forEach((g) => {
      const { originType: v, namespaces: m } = vt.normalizeType(g);
      if (!v)
        return;
      let y = v, b = is.get(y);
      y = (c ? b.delegateType : b.bindType) || y, b = is.get(y);
      const O = Object.assign({
        type: y,
        originType: v,
        data: u,
        selector: c,
        guid: p,
        handler: l,
        namespace: m.join(".")
      }, h), w = f.events;
      let x = w[y];
      x || (x = w[y] = { handlers: [], delegateCount: 0 }, (!b.setup || b.setup(s, u, m, d) === !1) && vt.addEventListener(s, y, d)), b.add && (vt.removeHandlerId(O.handler), b.add(s, O), vt.setHandlerId(O.handler, p)), c ? (x.handlers.splice(x.delegateCount, 0, O), x.delegateCount += 1) : x.handlers.push(O);
    });
  }
  n.on = t;
  function r(s, a, l, u, c) {
    const h = rf.get(s);
    if (!h)
      return;
    const f = h.events;
    f && (vt.splitType(a).forEach((d) => {
      const { originType: p, namespaces: g } = vt.normalizeType(d);
      if (!p) {
        Object.keys(f).forEach((w) => {
          r(s, w + d, l, u, !0);
        });
        return;
      }
      let v = p;
      const m = is.get(v);
      v = (u ? m.delegateType : m.bindType) || v;
      const y = f[v];
      if (!y)
        return;
      const b = g.length > 0 ? new RegExp(`(^|\\.)${g.join("\\.(?:.*\\.|)")}(\\.|$)`) : null, O = y.handlers.length;
      for (let w = y.handlers.length - 1; w >= 0; w -= 1) {
        const x = y.handlers[w];
        (c || p === x.originType) && (!l || vt.getHandlerId(l) === x.guid) && (b == null || x.namespace && b.test(x.namespace)) && (u == null || u === x.selector || u === "**" && x.selector) && (y.handlers.splice(w, 1), x.selector && (y.delegateCount -= 1), m.remove && m.remove(s, x));
      }
      O && y.handlers.length === 0 && ((!m.teardown || m.teardown(s, g, h.handler) === !1) && vt.removeEventListener(s, v, h.handler), delete f[v]);
    }), Object.keys(f).length === 0 && rf.remove(s));
  }
  n.off = r;
  function i(s, a, ...l) {
    const u = el.create(a);
    u.delegateTarget = s;
    const c = is.get(u.type);
    if (c.preDispatch && c.preDispatch(s, u) === !1)
      return;
    const h = vt.getHandlerQueue(s, u);
    for (let f = 0, d = h.length; f < d && !u.isPropagationStopped(); f += 1) {
      const p = h[f];
      u.currentTarget = p.elem;
      for (let g = 0, v = p.handlers.length; g < v && !u.isImmediatePropagationStopped(); g += 1) {
        const m = p.handlers[g];
        if (u.rnamespace == null || m.namespace && u.rnamespace.test(m.namespace)) {
          u.handleObj = m, u.data = m.data;
          const y = is.get(m.originType).handle, b = y ? y(p.elem, u, ...l) : m.handler.call(p.elem, u, ...l);
          b !== void 0 && (u.result = b, b === !1 && (u.preventDefault(), u.stopPropagation()));
        }
      }
    }
    return c.postDispatch && c.postDispatch(s, u), u.result;
  }
  n.dispatch = i;
  function o(s, a, l, u) {
    let c = s, h = typeof s == "string" ? s : s.type, f = typeof s == "string" || c.namespace == null ? [] : c.namespace.split(".");
    const d = l;
    if (d.nodeType === 3 || d.nodeType === 8)
      return;
    h.indexOf(".") > -1 && (f = h.split("."), h = f.shift(), f.sort());
    const p = h.indexOf(":") < 0 && `on${h}`;
    c = s instanceof el ? s : new el(h, typeof s == "object" ? s : null), c.namespace = f.join("."), c.rnamespace = c.namespace ? new RegExp(`(^|\\.)${f.join("\\.(?:.*\\.|)")}(\\.|$)`) : null, c.result = void 0, c.target || (c.target = d);
    const g = [c];
    Array.isArray(a) ? g.push(...a) : g.push(a);
    const v = is.get(h);
    if (!u && v.trigger && v.trigger(d, c, a) === !1)
      return;
    let m;
    const y = [d];
    if (!u && !v.noBubble && !vt.isWindow(d)) {
      m = v.delegateType || h;
      let O = d, w = d.parentNode;
      for (; w != null; )
        y.push(w), O = w, w = w.parentNode;
      const x = d.ownerDocument || document;
      if (O === x) {
        const S = O.defaultView || O.parentWindow || window;
        y.push(S);
      }
    }
    let b = d;
    for (let O = 0, w = y.length; O < w && !c.isPropagationStopped(); O += 1) {
      const x = y[O];
      b = x, c.type = O > 1 ? m : v.bindType || h;
      const S = rf.get(x);
      S && S.events[c.type] && S.handler && S.handler.call(x, ...g);
      const _ = p && x[p] || null;
      _ && vt.isValidTarget(x) && (c.result = _.call(x, ...g), c.result === !1 && c.preventDefault());
    }
    if (c.type = h, !u && !c.isDefaultPrevented()) {
      const O = v.preventDefault;
      if ((O == null || O(y.pop(), c, a) === !1) && vt.isValidTarget(d) && p && typeof d[h] == "function" && !vt.isWindow(d)) {
        const w = d[p];
        w && (d[p] = null), e = h, c.isPropagationStopped() && b.addEventListener(h, vt.stopPropagationCallback), d[h](), c.isPropagationStopped() && b.removeEventListener(h, vt.stopPropagationCallback), e = void 0, w && (d[p] = w);
      }
    }
    return c.result;
  }
  n.trigger = o;
})(Qy || (Qy = {}));
var qr;
(function(n) {
  function e(o, s, a, l, u) {
    return Jm.on(o, s, a, l, u), o;
  }
  n.on = e;
  function t(o, s, a, l, u) {
    return Jm.on(o, s, a, l, u, !0), o;
  }
  n.once = t;
  function r(o, s, a, l) {
    return Jm.off(o, s, a, l), o;
  }
  n.off = r;
  function i(o, s, a, l) {
    return Qy.trigger(s, a, o, l), o;
  }
  n.trigger = i;
})(qr || (qr = {}));
var Jm;
(function(n) {
  function e(r, i, o, s, a, l) {
    if (typeof i == "object") {
      typeof o != "string" && (s = s || o, o = void 0), Object.keys(i).forEach((u) => e(r, u, o, s, i[u], l));
      return;
    }
    if (s == null && a == null ? (a = o, s = o = void 0) : a == null && (typeof o == "string" ? (a = s, s = void 0) : (a = s, s = o, o = void 0)), a === !1)
      a = vt.returnFalse;
    else if (!a)
      return;
    if (l) {
      const u = a;
      a = function(c, ...h) {
        return n.off(r, c), u.call(this, c, ...h);
      }, vt.setHandlerId(a, vt.ensureHandlerId(u));
    }
    Qy.on(r, i, a, s, o);
  }
  n.on = e;
  function t(r, i, o, s) {
    const a = i;
    if (a && a.preventDefault != null && a.handleObj != null) {
      const l = a.handleObj;
      t(a.delegateTarget, l.namespace ? `${l.originType}.${l.namespace}` : l.originType, l.selector, l.handler);
      return;
    }
    if (typeof i == "object") {
      const l = i;
      Object.keys(l).forEach((u) => t(r, u, o, l[u]));
      return;
    }
    (o === !1 || typeof o == "function") && (s = o, o = void 0), s === !1 && (s = vt.returnFalse), Qy.off(r, i, s, o);
  }
  n.off = t;
})(Jm || (Jm = {}));
class CH {
  constructor(e, t, r) {
    this.animationFrameId = 0, this.deltaX = 0, this.deltaY = 0, this.eventName = wc.isEventSupported("wheel") ? "wheel" : "mousewheel", this.target = e, this.onWheelCallback = t, this.onWheelGuard = r, this.onWheel = this.onWheel.bind(this), this.didWheel = this.didWheel.bind(this);
  }
  enable() {
    this.target.addEventListener(this.eventName, this.onWheel, {
      passive: !1
    });
  }
  disable() {
    this.target.removeEventListener(this.eventName, this.onWheel);
  }
  onWheel(e) {
    if (this.onWheelGuard != null && !this.onWheelGuard(e))
      return;
    this.deltaX += e.deltaX, this.deltaY += e.deltaY, e.preventDefault();
    let t;
    (this.deltaX !== 0 || this.deltaY !== 0) && (e.stopPropagation(), t = !0), t === !0 && this.animationFrameId === 0 && (this.animationFrameId = requestAnimationFrame(() => {
      this.didWheel(e);
    }));
  }
  didWheel(e) {
    this.animationFrameId = 0, this.onWheelCallback(e, this.deltaX, this.deltaY), this.deltaX = 0, this.deltaY = 0;
  }
}
function sE(n) {
  const e = n.getBoundingClientRect(), t = n.ownerDocument.defaultView;
  return {
    top: e.top + t.pageYOffset,
    left: e.left + t.pageXOffset
  };
}
function M_e(n) {
  return n.getBoundingClientRect().width;
}
function D_e(n) {
  return n.getBoundingClientRect().height;
}
function AH(n, e = 60) {
  let t = null;
  return (...r) => {
    t && clearTimeout(t), t = window.setTimeout(() => {
      n.apply(this, r);
    }, e);
  };
}
function L_e(n) {
  let e = null, t = [];
  const r = () => {
    if (getComputedStyle(n).position === "static") {
      const u = n.style;
      u.position = "relative";
    }
    const l = document.createElement("object");
    return l.onload = () => {
      l.contentDocument.defaultView.addEventListener("resize", i), i();
    }, l.style.display = "block", l.style.position = "absolute", l.style.top = "0", l.style.left = "0", l.style.height = "100%", l.style.width = "100%", l.style.overflow = "hidden", l.style.pointerEvents = "none", l.style.zIndex = "-1", l.style.opacity = "0", l.setAttribute("tabindex", "-1"), l.type = "text/html", n.appendChild(l), l.data = "about:blank", l;
  }, i = AH(() => {
    t.forEach((l) => l(n));
  }), o = (l) => {
    e || (e = r()), t.indexOf(l) === -1 && t.push(l);
  }, s = () => {
    e && e.parentNode && (e.contentDocument && e.contentDocument.defaultView.removeEventListener("resize", i), e.parentNode.removeChild(e), e = null, t = []);
  };
  return {
    element: n,
    bind: o,
    destroy: s,
    unbind: (l) => {
      const u = t.indexOf(l);
      u !== -1 && t.splice(u, 1), t.length === 0 && e && s();
    }
  };
}
function I_e(n) {
  let e = null, t = [];
  const r = AH(() => {
    t.forEach((l) => {
      l(n);
    });
  }), i = () => {
    const l = new ResizeObserver(r);
    return l.observe(n), r(), l;
  }, o = (l) => {
    e || (e = i()), t.indexOf(l) === -1 && t.push(l);
  }, s = () => {
    e && (e.disconnect(), t = [], e = null);
  };
  return {
    element: n,
    bind: o,
    destroy: s,
    unbind: (l) => {
      const u = t.indexOf(l);
      u !== -1 && t.splice(u, 1), t.length === 0 && e && s();
    }
  };
}
const R_e = typeof ResizeObserver < "u" ? I_e : L_e;
var Uw;
(function(n) {
  const e = /* @__PURE__ */ new WeakMap();
  function t(i) {
    let o = e.get(i);
    return o || (o = R_e(i), e.set(i, o), o);
  }
  function r(i) {
    i.destroy(), e.delete(i.element);
  }
  n.bind = (i, o) => {
    const s = t(i);
    return s.bind(o), () => s.unbind(o);
  }, n.clear = (i) => {
    const o = t(i);
    r(o);
  };
})(Uw || (Uw = {}));
class Zy {
  constructor(e = {}) {
    this.comparator = e.comparator || Zy.defaultComparator, this.index = {}, this.data = e.data || [], this.heapify();
  }
  /**
   * Returns `true` if the priority queue is empty, `false` otherwise.
   */
  isEmpty() {
    return this.data.length === 0;
  }
  /**
   * Inserts a value with priority to the queue. Optionally pass a unique
   * id of this item. Passing unique IDs for each item you insert allows
   * you to use the `updatePriority()` operation.
   * @param priority
   * @param value
   * @param id
   */
  insert(e, t, r) {
    const i = { priority: e, value: t }, o = this.data.length;
    return r && (i.id = r, this.index[r] = o), this.data.push(i), this.bubbleUp(o), this;
  }
  /**
   * Returns the value of an item with the highest priority.
   */
  peek() {
    return this.data[0] ? this.data[0].value : null;
  }
  /**
   * Returns the highest priority in the queue.
   */
  peekPriority() {
    return this.data[0] ? this.data[0].priority : null;
  }
  updatePriority(e, t) {
    const r = this.index[e];
    if (typeof r > "u")
      throw new Error(`Node with id '${e}' was not found in the heap.`);
    const i = this.data, o = i[r].priority, s = this.comparator(t, o);
    s < 0 ? (i[r].priority = t, this.bubbleUp(r)) : s > 0 && (i[r].priority = t, this.bubbleDown(r));
  }
  /**
   * Removes the item with the highest priority from the queue
   *
   * @returns The value of the removed item.
   */
  remove() {
    const e = this.data, t = e[0], r = e.pop();
    return t.id && delete this.index[t.id], e.length > 0 && (e[0] = r, r.id && (this.index[r.id] = 0), this.bubbleDown(0)), t ? t.value : null;
  }
  heapify() {
    for (let e = 0; e < this.data.length; e += 1)
      this.bubbleUp(e);
  }
  bubbleUp(e) {
    const t = this.data;
    let r, i, o = e;
    for (; o > 0 && (i = o - 1 >>> 1, this.comparator(t[o].priority, t[i].priority) < 0); ) {
      r = t[i], t[i] = t[o];
      let s = t[o].id;
      s != null && (this.index[s] = i), t[o] = r, s = t[o].id, s != null && (this.index[s] = o), o = i;
    }
  }
  bubbleDown(e) {
    const t = this.data, r = t.length - 1;
    let i = e;
    for (; ; ) {
      const o = (i << 1) + 1, s = o + 1;
      let a = i;
      if (o <= r && this.comparator(t[o].priority, t[a].priority) < 0 && (a = o), s <= r && this.comparator(t[s].priority, t[a].priority) < 0 && (a = s), a !== i) {
        const l = t[a];
        t[a] = t[i];
        let u = t[i].id;
        u != null && (this.index[u] = a), t[i] = l, u = t[i].id, u != null && (this.index[u] = i), i = a;
      } else
        break;
    }
  }
}
(function(n) {
  n.defaultComparator = (e, t) => e - t;
})(Zy || (Zy = {}));
var aE;
(function(n) {
  function e(t, r, i = (o, s) => 1) {
    const o = {}, s = {}, a = {}, l = new Zy();
    for (o[r] = 0, Object.keys(t).forEach((u) => {
      u !== r && (o[u] = 1 / 0), l.insert(o[u], u, u);
    }); !l.isEmpty(); ) {
      const u = l.remove();
      a[u] = !0;
      const c = t[u] || [];
      for (let h = 0; h < c.length; h += 1) {
        const f = c[h];
        if (!a[f]) {
          const d = o[u] + i(u, f);
          d < o[f] && (o[f] = d, s[f] = u, l.updatePriority(f, d));
        }
      }
    }
    return s;
  }
  n.run = e;
})(aE || (aE = {}));
class Vl {
  constructor(e, t, r, i) {
    if (e == null)
      return this.set(255, 255, 255, 1);
    if (typeof e == "number")
      return this.set(e, t, r, i);
    if (typeof e == "string")
      return Vl.fromString(e) || this;
    if (Array.isArray(e))
      return this.set(e);
    this.set(e.r, e.g, e.b, e.a == null ? 1 : e.a);
  }
  blend(e, t, r) {
    this.set(e.r + (t.r - e.r) * r, e.g + (t.g - e.g) * r, e.b + (t.b - e.b) * r, e.a + (t.a - e.a) * r);
  }
  lighten(e) {
    const t = Vl.lighten(this.toArray(), e);
    this.r = t[0], this.g = t[1], this.b = t[2], this.a = t[3];
  }
  darken(e) {
    this.lighten(-e);
  }
  set(e, t, r, i) {
    const o = Array.isArray(e) ? e[0] : e, s = Array.isArray(e) ? e[1] : t, a = Array.isArray(e) ? e[2] : r, l = Array.isArray(e) ? e[3] : i;
    return this.r = Math.round(so(o, 0, 255)), this.g = Math.round(so(s, 0, 255)), this.b = Math.round(so(a, 0, 255)), this.a = l == null ? 1 : so(l, 0, 1), this;
  }
  toHex() {
    return `#${["r", "g", "b"].map((t) => {
      const r = this[t].toString(16);
      return r.length < 2 ? `0${r}` : r;
    }).join("")}`;
  }
  toRGBA() {
    return this.toArray();
  }
  toHSLA() {
    return Vl.rgba2hsla(this.r, this.g, this.b, this.a);
  }
  toCSS(e) {
    const t = `${this.r},${this.g},${this.b},`;
    return e ? `rgb(${t})` : `rgba(${t},${this.a})`;
  }
  toGrey() {
    return Vl.makeGrey(Math.round((this.r + this.g + this.b) / 3), this.a);
  }
  toArray() {
    return [this.r, this.g, this.b, this.a];
  }
  toString() {
    return this.toCSS();
  }
}
(function(n) {
  function e(b) {
    return new n(b);
  }
  n.fromArray = e;
  function t(b) {
    return new n([...p(b), 1]);
  }
  n.fromHex = t;
  function r(b) {
    const O = b.toLowerCase().match(/^rgba?\(([\s.,0-9]+)\)/);
    if (O) {
      const w = O[1].split(/\s*,\s*/).map((x) => parseInt(x, 10));
      return new n(w);
    }
    return null;
  }
  n.fromRGBA = r;
  function i(b, O, w) {
    w < 0 && ++w, w > 1 && --w;
    const x = 6 * w;
    return x < 1 ? b + (O - b) * x : 2 * w < 1 ? O : 3 * w < 2 ? b + (O - b) * (2 / 3 - w) * 6 : b;
  }
  function o(b) {
    const O = b.toLowerCase().match(/^hsla?\(([\s.,0-9]+)\)/);
    if (O) {
      const w = O[2].split(/\s*,\s*/), x = (parseFloat(w[0]) % 360 + 360) % 360 / 360, S = parseFloat(w[1]) / 100, _ = parseFloat(w[2]) / 100, C = w[3] == null ? 1 : parseInt(w[3], 10);
      return new n(u(x, S, _, C));
    }
    return null;
  }
  n.fromHSLA = o;
  function s(b) {
    if (b.startsWith("#"))
      return t(b);
    if (b.startsWith("rgb"))
      return r(b);
    const O = n.named[b];
    return O ? t(O) : o(b);
  }
  n.fromString = s;
  function a(b, O) {
    return n.fromArray([b, b, b, O]);
  }
  n.makeGrey = a;
  function l(b, O, w, x) {
    const S = Array.isArray(b) ? b[0] : b, _ = Array.isArray(b) ? b[1] : O, C = Array.isArray(b) ? b[2] : w, A = Array.isArray(b) ? b[3] : x, T = Math.max(S, _, C), k = Math.min(S, _, C), L = (T + k) / 2;
    let D = 0, E = 0;
    if (k !== T) {
      const M = T - k;
      switch (E = L > 0.5 ? M / (2 - T - k) : M / (T + k), T) {
        case S:
          D = (_ - C) / M + (_ < C ? 6 : 0);
          break;
        case _:
          D = (C - S) / M + 2;
          break;
        case C:
          D = (S - _) / M + 4;
          break;
      }
      D /= 6;
    }
    return [D, E, L, A ?? 1];
  }
  n.rgba2hsla = l;
  function u(b, O, w, x) {
    const S = Array.isArray(b) ? b[0] : b, _ = Array.isArray(b) ? b[1] : O, C = Array.isArray(b) ? b[2] : w, A = Array.isArray(b) ? b[3] : x, T = C <= 0.5 ? C * (_ + 1) : C + _ - C * _, k = 2 * C - T;
    return [
      i(k, T, S + 1 / 3) * 256,
      i(k, T, S) * 256,
      i(k, T, S - 1 / 3) * 256,
      A ?? 1
    ];
  }
  n.hsla2rgba = u;
  function c(b) {
    return new n(Math.round(Math.random() * 256), Math.round(Math.random() * 256), Math.round(Math.random() * 256), b ? void 0 : parseFloat(Math.random().toFixed(2)));
  }
  n.random = c;
  function h() {
    const b = "0123456789ABCDEF";
    let O = "#";
    for (let w = 0; w < 6; w += 1)
      O += b[Math.floor(Math.random() * 16)];
    return O;
  }
  n.randomHex = h;
  function f(b) {
    return c(b).toString();
  }
  n.randomRGBA = f;
  function d(b, O) {
    if (typeof b == "string") {
      const C = b[0] === "#", [A, T, k] = p(b);
      return O ? A * 0.299 + T * 0.587 + k * 0.114 > 186 ? "#000000" : "#ffffff" : `${C ? "#" : ""}${g(255 - A, 255 - T, 255 - k)}`;
    }
    const w = b[0], x = b[1], S = b[2], _ = b[3];
    return O ? w * 0.299 + x * 0.587 + S * 0.114 > 186 ? [0, 0, 0, _] : [255, 255, 255, _] : [255 - w, 255 - x, 255 - S, _];
  }
  n.invert = d;
  function p(b) {
    const O = b.indexOf("#") === 0 ? b : `#${b}`;
    let w = +`0x${O.substr(1)}`;
    if (!(O.length === 4 || O.length === 7) || Number.isNaN(w))
      throw new Error("Invalid hex color.");
    const x = O.length === 4 ? 4 : 8, S = (1 << x) - 1, _ = ["b", "g", "r"].map(() => {
      const C = w & S;
      return w >>= x, x === 4 ? 17 * C : C;
    });
    return [_[2], _[1], _[0]];
  }
  function g(b, O, w) {
    const x = (S) => S.length < 2 ? `0${S}` : S;
    return `${x(b.toString(16))}${x(O.toString(16))}${x(w.toString(16))}`;
  }
  function v(b, O) {
    return y(b, O);
  }
  n.lighten = v;
  function m(b, O) {
    return y(b, -O);
  }
  n.darken = m;
  function y(b, O) {
    if (typeof b == "string") {
      const S = b[0] === "#", _ = parseInt(S ? b.substr(1) : b, 16), C = so((_ >> 16) + O, 0, 255), A = so((_ >> 8 & 255) + O, 0, 255), T = so((_ & 255) + O, 0, 255);
      return `${S ? "#" : ""}${(T | A << 8 | C << 16).toString(16)}`;
    }
    const w = g(b[0], b[1], b[2]), x = p(y(w, O));
    return [x[0], x[1], x[2], b[3]];
  }
})(Vl || (Vl = {}));
(function(n) {
  n.named = {
    aliceblue: "#f0f8ff",
    antiquewhite: "#faebd7",
    aqua: "#00ffff",
    aquamarine: "#7fffd4",
    azure: "#f0ffff",
    beige: "#f5f5dc",
    bisque: "#ffe4c4",
    black: "#000000",
    blanchedalmond: "#ffebcd",
    blue: "#0000ff",
    blueviolet: "#8a2be2",
    brown: "#a52a2a",
    burlywood: "#deb887",
    burntsienna: "#ea7e5d",
    cadetblue: "#5f9ea0",
    chartreuse: "#7fff00",
    chocolate: "#d2691e",
    coral: "#ff7f50",
    cornflowerblue: "#6495ed",
    cornsilk: "#fff8dc",
    crimson: "#dc143c",
    cyan: "#00ffff",
    darkblue: "#00008b",
    darkcyan: "#008b8b",
    darkgoldenrod: "#b8860b",
    darkgray: "#a9a9a9",
    darkgreen: "#006400",
    darkgrey: "#a9a9a9",
    darkkhaki: "#bdb76b",
    darkmagenta: "#8b008b",
    darkolivegreen: "#556b2f",
    darkorange: "#ff8c00",
    darkorchid: "#9932cc",
    darkred: "#8b0000",
    darksalmon: "#e9967a",
    darkseagreen: "#8fbc8f",
    darkslateblue: "#483d8b",
    darkslategray: "#2f4f4f",
    darkslategrey: "#2f4f4f",
    darkturquoise: "#00ced1",
    darkviolet: "#9400d3",
    deeppink: "#ff1493",
    deepskyblue: "#00bfff",
    dimgray: "#696969",
    dimgrey: "#696969",
    dodgerblue: "#1e90ff",
    firebrick: "#b22222",
    floralwhite: "#fffaf0",
    forestgreen: "#228b22",
    fuchsia: "#ff00ff",
    gainsboro: "#dcdcdc",
    ghostwhite: "#f8f8ff",
    gold: "#ffd700",
    goldenrod: "#daa520",
    gray: "#808080",
    green: "#008000",
    greenyellow: "#adff2f",
    grey: "#808080",
    honeydew: "#f0fff0",
    hotpink: "#ff69b4",
    indianred: "#cd5c5c",
    indigo: "#4b0082",
    ivory: "#fffff0",
    khaki: "#f0e68c",
    lavender: "#e6e6fa",
    lavenderblush: "#fff0f5",
    lawngreen: "#7cfc00",
    lemonchiffon: "#fffacd",
    lightblue: "#add8e6",
    lightcoral: "#f08080",
    lightcyan: "#e0ffff",
    lightgoldenrodyellow: "#fafad2",
    lightgray: "#d3d3d3",
    lightgreen: "#90ee90",
    lightgrey: "#d3d3d3",
    lightpink: "#ffb6c1",
    lightsalmon: "#ffa07a",
    lightseagreen: "#20b2aa",
    lightskyblue: "#87cefa",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    lightsteelblue: "#b0c4de",
    lightyellow: "#ffffe0",
    lime: "#00ff00",
    limegreen: "#32cd32",
    linen: "#faf0e6",
    magenta: "#ff00ff",
    maroon: "#800000",
    mediumaquamarine: "#66cdaa",
    mediumblue: "#0000cd",
    mediumorchid: "#ba55d3",
    mediumpurple: "#9370db",
    mediumseagreen: "#3cb371",
    mediumslateblue: "#7b68ee",
    mediumspringgreen: "#00fa9a",
    mediumturquoise: "#48d1cc",
    mediumvioletred: "#c71585",
    midnightblue: "#191970",
    mintcream: "#f5fffa",
    mistyrose: "#ffe4e1",
    moccasin: "#ffe4b5",
    navajowhite: "#ffdead",
    navy: "#000080",
    oldlace: "#fdf5e6",
    olive: "#808000",
    olivedrab: "#6b8e23",
    orange: "#ffa500",
    orangered: "#ff4500",
    orchid: "#da70d6",
    palegoldenrod: "#eee8aa",
    palegreen: "#98fb98",
    paleturquoise: "#afeeee",
    palevioletred: "#db7093",
    papayawhip: "#ffefd5",
    peachpuff: "#ffdab9",
    peru: "#cd853f",
    pink: "#ffc0cb",
    plum: "#dda0dd",
    powderblue: "#b0e0e6",
    purple: "#800080",
    rebeccapurple: "#663399",
    red: "#ff0000",
    rosybrown: "#bc8f8f",
    royalblue: "#4169e1",
    saddlebrown: "#8b4513",
    salmon: "#fa8072",
    sandybrown: "#f4a460",
    seagreen: "#2e8b57",
    seashell: "#fff5ee",
    sienna: "#a0522d",
    silver: "#c0c0c0",
    skyblue: "#87ceeb",
    slateblue: "#6a5acd",
    slategray: "#708090",
    slategrey: "#708090",
    snow: "#fffafa",
    springgreen: "#00ff7f",
    steelblue: "#4682b4",
    tan: "#d2b48c",
    teal: "#008080",
    thistle: "#d8bfd8",
    tomato: "#ff6347",
    turquoise: "#40e0d0",
    violet: "#ee82ee",
    wheat: "#f5deb3",
    white: "#ffffff",
    whitesmoke: "#f5f5f5",
    yellow: "#ffff00",
    yellowgreen: "#9acd32"
  };
})(Vl || (Vl = {}));
class lE {
  constructor() {
    this.clear();
  }
  clear() {
    this.map = /* @__PURE__ */ new WeakMap(), this.arr = [];
  }
  has(e) {
    return this.map.has(e);
  }
  get(e) {
    return this.map.get(e);
  }
  set(e, t) {
    this.map.set(e, t), this.arr.push(e);
  }
  delete(e) {
    const t = this.arr.indexOf(e);
    t >= 0 && this.arr.splice(t, 1);
    const r = this.map.get(e);
    return this.map.delete(e), r;
  }
  each(e) {
    this.arr.forEach((t) => {
      const r = this.map.get(t);
      e(r, t);
    });
  }
  dispose() {
    this.clear();
  }
}
var Sc;
(function(n) {
  function e(i) {
    const o = [], s = [];
    return Array.isArray(i) ? o.push(...i) : i.split("|").forEach((a) => {
      a.indexOf("&") === -1 ? o.push(a) : s.push(...a.split("&"));
    }), { or: o, and: s };
  }
  n.parse = e;
  function t(i, o) {
    if (i != null && o != null) {
      const s = e(i), a = e(o), l = s.or.sort(), u = a.or.sort(), c = s.and.sort(), h = a.and.sort(), f = (d, p) => d.length === p.length && (d.length === 0 || d.every((g, v) => g === p[v]));
      return f(l, u) && f(c, h);
    }
    return i == null && o == null;
  }
  n.equals = t;
  function r(i, o, s) {
    if (o == null || Array.isArray(o) && o.length === 0)
      return s ? i.altKey !== !0 && i.ctrlKey !== !0 && i.metaKey !== !0 && i.shiftKey !== !0 : !0;
    const { or: a, and: l } = e(o), u = (c) => {
      const h = `${c.toLowerCase()}Key`;
      return i[h] === !0;
    };
    return a.some((c) => u(c)) && l.every((c) => u(c));
  }
  n.isMatch = r;
})(Sc || (Sc = {}));
var Gf;
(function(n) {
  n.linear = (e) => e, n.quad = (e) => e * e, n.cubic = (e) => e * e * e, n.inout = (e) => {
    if (e <= 0)
      return 0;
    if (e >= 1)
      return 1;
    const t = e * e, r = t * e;
    return 4 * (e < 0.5 ? r : 3 * (e - t) + r - 0.75);
  }, n.exponential = (e) => Math.pow(2, 10 * (e - 1)), n.bounce = (e) => {
    for (let t = 0, r = 1; ; t += r, r /= 2)
      if (e >= (7 - 4 * t) / 11) {
        const i = (11 - 6 * t - 11 * e) / 4;
        return -i * i + r * r;
      }
  };
})(Gf || (Gf = {}));
(function(n) {
  n.decorators = {
    reverse(e) {
      return (t) => 1 - e(1 - t);
    },
    reflect(e) {
      return (t) => 0.5 * (t < 0.5 ? e(2 * t) : 2 - e(2 - 2 * t));
    },
    clamp(e, t = 0, r = 1) {
      return (i) => {
        const o = e(i);
        return o < t ? t : o > r ? r : o;
      };
    },
    back(e = 1.70158) {
      return (t) => t * t * ((e + 1) * t - e);
    },
    elastic(e = 1.5) {
      return (t) => Math.pow(2, 10 * (t - 1)) * Math.cos(20 * Math.PI * e / 3 * t);
    }
  };
})(Gf || (Gf = {}));
(function(n) {
  function e(E) {
    return -1 * Math.cos(E * (Math.PI / 2)) + 1;
  }
  n.easeInSine = e;
  function t(E) {
    return Math.sin(E * (Math.PI / 2));
  }
  n.easeOutSine = t;
  function r(E) {
    return -0.5 * (Math.cos(Math.PI * E) - 1);
  }
  n.easeInOutSine = r;
  function i(E) {
    return E * E;
  }
  n.easeInQuad = i;
  function o(E) {
    return E * (2 - E);
  }
  n.easeOutQuad = o;
  function s(E) {
    return E < 0.5 ? 2 * E * E : -1 + (4 - 2 * E) * E;
  }
  n.easeInOutQuad = s;
  function a(E) {
    return E * E * E;
  }
  n.easeInCubic = a;
  function l(E) {
    const M = E - 1;
    return M * M * M + 1;
  }
  n.easeOutCubic = l;
  function u(E) {
    return E < 0.5 ? 4 * E * E * E : (E - 1) * (2 * E - 2) * (2 * E - 2) + 1;
  }
  n.easeInOutCubic = u;
  function c(E) {
    return E * E * E * E;
  }
  n.easeInQuart = c;
  function h(E) {
    const M = E - 1;
    return 1 - M * M * M * M;
  }
  n.easeOutQuart = h;
  function f(E) {
    const M = E - 1;
    return E < 0.5 ? 8 * E * E * E * E : 1 - 8 * M * M * M * M;
  }
  n.easeInOutQuart = f;
  function d(E) {
    return E * E * E * E * E;
  }
  n.easeInQuint = d;
  function p(E) {
    const M = E - 1;
    return 1 + M * M * M * M * M;
  }
  n.easeOutQuint = p;
  function g(E) {
    const M = E - 1;
    return E < 0.5 ? 16 * E * E * E * E * E : 1 + 16 * M * M * M * M * M;
  }
  n.easeInOutQuint = g;
  function v(E) {
    return E === 0 ? 0 : Math.pow(2, 10 * (E - 1));
  }
  n.easeInExpo = v;
  function m(E) {
    return E === 1 ? 1 : -Math.pow(2, -10 * E) + 1;
  }
  n.easeOutExpo = m;
  function y(E) {
    if (E === 0 || E === 1)
      return E;
    const M = E * 2, R = M - 1;
    return M < 1 ? 0.5 * Math.pow(2, 10 * R) : 0.5 * (-Math.pow(2, -10 * R) + 2);
  }
  n.easeInOutExpo = y;
  function b(E) {
    const M = E / 1;
    return -1 * (Math.sqrt(1 - M * E) - 1);
  }
  n.easeInCirc = b;
  function O(E) {
    const M = E - 1;
    return Math.sqrt(1 - M * M);
  }
  n.easeOutCirc = O;
  function w(E) {
    const M = E * 2, R = M - 2;
    return M < 1 ? -0.5 * (Math.sqrt(1 - M * M) - 1) : 0.5 * (Math.sqrt(1 - R * R) + 1);
  }
  n.easeInOutCirc = w;
  function x(E, M = 1.70158) {
    return E * E * ((M + 1) * E - M);
  }
  n.easeInBack = x;
  function S(E, M = 1.70158) {
    const R = E / 1 - 1;
    return R * R * ((M + 1) * R + M) + 1;
  }
  n.easeOutBack = S;
  function _(E, M = 1.70158) {
    const R = E * 2, N = R - 2, $ = M * 1.525;
    return R < 1 ? 0.5 * R * R * (($ + 1) * R - $) : 0.5 * (N * N * (($ + 1) * N + $) + 2);
  }
  n.easeInOutBack = _;
  function C(E, M = 0.7) {
    if (E === 0 || E === 1)
      return E;
    const N = E / 1 - 1, $ = 1 - M, V = $ / (2 * Math.PI) * Math.asin(1);
    return -(Math.pow(2, 10 * N) * // eslint-disable-line
    Math.sin((N - V) * (2 * Math.PI) / $));
  }
  n.easeInElastic = C;
  function A(E, M = 0.7) {
    const R = 1 - M, N = E * 2;
    if (E === 0 || E === 1)
      return E;
    const $ = R / (2 * Math.PI) * Math.asin(1);
    return Math.pow(2, -10 * N) * // eslint-disable-line
    Math.sin((N - $) * (2 * Math.PI) / R) + 1;
  }
  n.easeOutElastic = A;
  function T(E, M = 0.65) {
    const R = 1 - M;
    if (E === 0 || E === 1)
      return E;
    const N = E * 2, $ = N - 1, V = R / (2 * Math.PI) * Math.asin(1);
    return N < 1 ? -0.5 * (Math.pow(2, 10 * $) * // eslint-disable-line
    Math.sin(($ - V) * (2 * Math.PI) / R)) : Math.pow(2, -10 * $) * // eslint-disable-line
    Math.sin(($ - V) * (2 * Math.PI) / R) * 0.5 + 1;
  }
  n.easeInOutElastic = T;
  function k(E) {
    const M = E / 1;
    if (M < 1 / 2.75)
      return 7.5625 * M * M;
    if (M < 2 / 2.75) {
      const R = M - 0.5454545454545454;
      return 7.5625 * R * R + 0.75;
    }
    if (M < 2.5 / 2.75) {
      const R = M - 0.8181818181818182;
      return 7.5625 * R * R + 0.9375;
    }
    {
      const R = M - 0.9545454545454546;
      return 7.5625 * R * R + 0.984375;
    }
  }
  n.easeOutBounce = k;
  function L(E) {
    return 1 - k(1 - E);
  }
  n.easeInBounce = L;
  function D(E) {
    return E < 0.5 ? L(E * 2) * 0.5 : k(E * 2 - 1) * 0.5 + 0.5;
  }
  n.easeInOutBounce = D;
})(Gf || (Gf = {}));
var of;
(function(n) {
  n.number = (e, t) => {
    const r = t - e;
    return (i) => e + r * i;
  }, n.object = (e, t) => {
    const r = Object.keys(e);
    return (i) => {
      const o = {};
      for (let s = r.length - 1; s !== -1; s -= 1) {
        const a = r[s];
        o[a] = e[a] + (t[a] - e[a]) * i;
      }
      return o;
    };
  }, n.unit = (e, t) => {
    const r = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/, i = r.exec(e), o = r.exec(t), s = o ? o[1] : "", a = i ? +i[1] : 0, l = o ? +o[1] : 0, u = s.indexOf("."), c = u > 0 ? s[1].length - u - 1 : 0, h = l - a, f = i ? i[2] : "";
    return (d) => (a + h * d).toFixed(c) + f;
  }, n.color = (e, t) => {
    const r = parseInt(e.slice(1), 16), i = parseInt(t.slice(1), 16), o = r & 255, s = (i & 255) - o, a = r & 65280, l = (i & 65280) - a, u = r & 16711680, c = (i & 16711680) - u;
    return (h) => {
      const f = o + s * h & 255, d = a + l * h & 65280, p = u + c * h & 16711680;
      return `#${(1 << 24 | f | d | p).toString(16).slice(1)}`;
    };
  };
})(of || (of = {}));
const ey = [];
function a_(n, e) {
  const t = ey.find((r) => r.name === n);
  if (!(t && (t.loadTimes += 1, t.loadTimes > 1)) && !wc.isApplyingHMR()) {
    const r = document.createElement("style");
    r.setAttribute("type", "text/css"), r.textContent = e;
    const i = document.querySelector("head");
    i && i.insertBefore(r, i.firstChild), ey.push({
      name: n,
      loadTimes: 1,
      styleElement: r
    });
  }
}
function l_(n) {
  const e = ey.findIndex((t) => t.name === n);
  if (e > -1) {
    const t = ey[e];
    if (t.loadTimes -= 1, t.loadTimes > 0)
      return;
    let r = t.styleElement;
    r && r.parentNode && r.parentNode.removeChild(r), r = null, ey.splice(e, 1);
  }
}
var Wt;
(function(n) {
  function e(r) {
    return 180 * r / Math.PI % 360;
  }
  n.toDeg = e, n.toRad = function(r, i = !1) {
    return (i ? r : r % 360) * Math.PI / 180;
  };
  function t(r) {
    return r % 360 + (r < 0 ? 360 : 0);
  }
  n.normalize = t;
})(Wt || (Wt = {}));
var Xt;
(function(n) {
  function e(a, l = 0) {
    return Number.isInteger(a) ? a : +a.toFixed(l);
  }
  n.round = e;
  function t(a, l) {
    let u, c;
    if (l == null ? (c = a ?? 1, u = 0) : (c = l, u = a ?? 0), c < u) {
      const h = u;
      u = c, c = h;
    }
    return Math.floor(Math.random() * (c - u + 1) + u);
  }
  n.random = t;
  function r(a, l, u) {
    return Number.isNaN(a) ? NaN : Number.isNaN(l) || Number.isNaN(u) ? 0 : l < u ? a < l ? l : a > u ? u : a : a < u ? u : a > l ? l : a;
  }
  n.clamp = r;
  function i(a, l) {
    return l * Math.round(a / l);
  }
  n.snapToGrid = i;
  function o(a, l) {
    return l != null && a != null && l.x >= a.x && l.x <= a.x + a.width && l.y >= a.y && l.y <= a.y + a.height;
  }
  n.containsPoint = o;
  function s(a, l) {
    const u = a.x - l.x, c = a.y - l.y;
    return u * u + c * c;
  }
  n.squaredLength = s;
})(Xt || (Xt = {}));
class Jc {
  valueOf() {
    return this.toJSON();
  }
  toString() {
    return JSON.stringify(this.toJSON());
  }
}
let W = class rn extends Jc {
  constructor(e, t) {
    super(), this.x = e ?? 0, this.y = t ?? 0;
  }
  /**
   * Rounds the point to the given precision.
   */
  round(e = 0) {
    return this.x = Xt.round(this.x, e), this.y = Xt.round(this.y, e), this;
  }
  add(e, t) {
    const r = rn.create(e, t);
    return this.x += r.x, this.y += r.y, this;
  }
  update(e, t) {
    const r = rn.create(e, t);
    return this.x = r.x, this.y = r.y, this;
  }
  translate(e, t) {
    const r = rn.create(e, t);
    return this.x += r.x, this.y += r.y, this;
  }
  /**
   * Rotate the point by `degree` around `center`.
   */
  rotate(e, t) {
    const r = rn.rotate(this, e, t);
    return this.x = r.x, this.y = r.y, this;
  }
  /**
   * Scale point by `sx` and `sy` around the given `origin`. If origin is
   * not specified, the point is scaled around `0, 0`.
   */
  scale(e, t, r = new rn()) {
    const i = rn.create(r);
    return this.x = i.x + e * (this.x - i.x), this.y = i.y + t * (this.y - i.y), this;
  }
  /**
   * Chooses the point closest to this point from among `points`. If `points`
   * is an empty array, `null` is returned.
   */
  closest(e) {
    if (e.length === 1)
      return rn.create(e[0]);
    let t = null, r = 1 / 0;
    return e.forEach((i) => {
      const o = this.squaredDistance(i);
      o < r && (t = i, r = o);
    }), t ? rn.create(t) : null;
  }
  /**
   * Returns the distance between the point and another point `p`.
   */
  distance(e) {
    return Math.sqrt(this.squaredDistance(e));
  }
  /**
   * Returns the squared distance between the point and another point `p`.
   *
   * Useful for distance comparisons in which real distance is not necessary
   * (saves one `Math.sqrt()` operation).
   */
  squaredDistance(e) {
    const t = rn.create(e), r = this.x - t.x, i = this.y - t.y;
    return r * r + i * i;
  }
  manhattanDistance(e) {
    const t = rn.create(e);
    return Math.abs(t.x - this.x) + Math.abs(t.y - this.y);
  }
  /**
   * Returns the magnitude of the point vector.
   *
   * @see http://en.wikipedia.org/wiki/Magnitude_(mathematics)
   */
  magnitude() {
    return Math.sqrt(this.x * this.x + this.y * this.y) || 0.01;
  }
  /**
   * Returns the angle(in degrees) between vector from this point to `p` and
   * the x-axis.
   */
  theta(e = new rn()) {
    const t = rn.create(e), r = -(t.y - this.y), i = t.x - this.x;
    let o = Math.atan2(r, i);
    return o < 0 && (o = 2 * Math.PI + o), 180 * o / Math.PI;
  }
  /**
   * Returns the angle(in degrees) between vector from this point to `p1` and
   * the vector from this point to `p2`.
   *
   * The ordering of points `p1` and `p2` is important.
   *
   * The function returns a value between `0` and `180` when the angle (in the
   * direction from `p1` to `p2`) is clockwise, and a value between `180` and
   * `360` when the angle is counterclockwise.
   *
   * Returns `NaN` if either of the points `p1` and `p2` is equal with this point.
   */
  angleBetween(e, t) {
    if (this.equals(e) || this.equals(t))
      return NaN;
    let r = this.theta(t) - this.theta(e);
    return r < 0 && (r += 360), r;
  }
  /**
   * Returns the angle(in degrees) between the line from `(0,0)` and this point
   * and the line from `(0,0)` to `p`.
   *
   * The function returns a value between `0` and `180` when the angle (in the
   * direction from this point to `p`) is clockwise, and a value between `180`
   * and `360` when the angle is counterclockwise. Returns `NaN` if called from
   * point `(0,0)` or if `p` is `(0,0)`.
   */
  vectorAngle(e) {
    return new rn(0, 0).angleBetween(this, e);
  }
  /**
   * Converts rectangular to polar coordinates.
   */
  toPolar(e) {
    return this.update(rn.toPolar(this, e)), this;
  }
  /**
   * Returns the change in angle(in degrees) that is the result of moving the
   * point from its previous position to its current position.
   *
   * More specifically, this function computes the angle between the line from
   * the ref point to the previous position of this point(i.e. current position
   * `-dx`, `-dy`) and the line from the `ref` point to the current position of
   * this point.
   *
   * The function returns a positive value between `0` and `180` when the angle
   * (in the direction from previous position of this point to its current
   * position) is clockwise, and a negative value between `0` and `-180` when
   * the angle is counterclockwise.
   *
   * The function returns `0` if the previous and current positions of this
   * point are the same (i.e. both `dx` and `dy` are `0`).
   */
  changeInAngle(e, t, r = new rn()) {
    return this.clone().translate(-e, -t).theta(r) - this.theta(r);
  }
  /**
   * If the point lies outside the rectangle `rect`, adjust the point so that
   * it becomes the nearest point on the boundary of `rect`.
   */
  adhereToRect(e) {
    return Xt.containsPoint(e, this) || (this.x = Math.min(Math.max(this.x, e.x), e.x + e.width), this.y = Math.min(Math.max(this.y, e.y), e.y + e.height)), this;
  }
  /**
   * Returns the bearing(cardinal direction) between me and the given point.
   *
   * @see https://en.wikipedia.org/wiki/Cardinal_direction
   */
  bearing(e) {
    const t = rn.create(e), r = Wt.toRad(this.y), i = Wt.toRad(t.y), o = this.x, s = t.x, a = Wt.toRad(s - o), l = Math.sin(a) * Math.cos(i), u = Math.cos(r) * Math.sin(i) - Math.sin(r) * Math.cos(i) * Math.cos(a), c = Wt.toDeg(Math.atan2(l, u)), h = ["NE", "E", "SE", "S", "SW", "W", "NW", "N"];
    let f = c - 22.5;
    return f < 0 && (f += 360), f = parseInt(f / 45, 10), h[f];
  }
  /**
   * Returns the cross product of the vector from me to `p1` and the vector
   * from me to `p2`.
   *
   * The left-hand rule is used because the coordinate system is left-handed.
   */
  cross(e, t) {
    if (e != null && t != null) {
      const r = rn.create(e), i = rn.create(t);
      return (i.x - this.x) * (r.y - this.y) - (i.y - this.y) * (r.x - this.x);
    }
    return NaN;
  }
  /**
   * Returns the dot product of this point with given other point.
   */
  dot(e) {
    const t = rn.create(e);
    return this.x * t.x + this.y * t.y;
  }
  diff(e, t) {
    if (typeof e == "number")
      return new rn(this.x - e, this.y - t);
    const r = rn.create(e);
    return new rn(this.x - r.x, this.y - r.y);
  }
  /**
   * Returns an interpolation between me and point `p` for a parametert in
   * the closed interval `[0, 1]`.
   */
  lerp(e, t) {
    const r = rn.create(e);
    return new rn((1 - t) * this.x + t * r.x, (1 - t) * this.y + t * r.y);
  }
  /**
   * Normalize the point vector, scale the line segment between `(0, 0)`
   * and the point in order for it to have the given length. If length is
   * not specified, it is considered to be `1`; in that case, a unit vector
   * is computed.
   */
  normalize(e = 1) {
    const t = e / this.magnitude();
    return this.scale(t, t);
  }
  /**
   * Moves this point along the line starting from `ref` to this point by a
   * certain `distance`.
   */
  move(e, t) {
    const r = rn.create(e), i = Wt.toRad(r.theta(this));
    return this.translate(Math.cos(i) * t, -Math.sin(i) * t);
  }
  /**
   * Returns a point that is the reflection of me with the center of inversion
   * in `ref` point.
   */
  reflection(e) {
    return rn.create(e).move(this, this.distance(e));
  }
  snapToGrid(e, t) {
    return this.x = Xt.snapToGrid(this.x, e), this.y = Xt.snapToGrid(this.y, t ?? e), this;
  }
  equals(e) {
    const t = rn.create(e);
    return t != null && t.x === this.x && t.y === this.y;
  }
  clone() {
    return rn.clone(this);
  }
  /**
   * Returns the point as a simple JSON object. For example: `{ x: 0, y: 0 }`.
   */
  toJSON() {
    return rn.toJSON(this);
  }
  serialize() {
    return `${this.x} ${this.y}`;
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPoint = e;
})(W || (W = {}));
(function(n) {
  function e(r) {
    return r != null && typeof r == "object" && typeof r.x == "number" && typeof r.y == "number";
  }
  n.isPointLike = e;
  function t(r) {
    return r != null && Array.isArray(r) && r.length === 2 && typeof r[0] == "number" && typeof r[1] == "number";
  }
  n.isPointData = t;
})(W || (W = {}));
(function(n) {
  function e(h, f) {
    return h == null || typeof h == "number" ? new n(h, f) : t(h);
  }
  n.create = e;
  function t(h) {
    return n.isPoint(h) ? new n(h.x, h.y) : Array.isArray(h) ? new n(h[0], h[1]) : new n(h.x, h.y);
  }
  n.clone = t;
  function r(h) {
    return n.isPoint(h) ? { x: h.x, y: h.y } : Array.isArray(h) ? { x: h[0], y: h[1] } : { x: h.x, y: h.y };
  }
  n.toJSON = r;
  function i(h, f, d = new n()) {
    let p = Math.abs(h * Math.cos(f)), g = Math.abs(h * Math.sin(f));
    const v = t(d), m = Wt.normalize(Wt.toDeg(f));
    return m < 90 ? g = -g : m < 180 ? (p = -p, g = -g) : m < 270 && (p = -p), new n(v.x + p, v.y + g);
  }
  n.fromPolar = i;
  function o(h, f = new n()) {
    const d = t(h), p = t(f), g = d.x - p.x, v = d.y - p.y;
    return new n(
      Math.sqrt(g * g + v * v),
      // r
      Wt.toRad(p.theta(d))
    );
  }
  n.toPolar = o;
  function s(h, f) {
    return h === f ? !0 : h != null && f != null ? h.x === f.x && h.y === f.y : !1;
  }
  n.equals = s;
  function a(h, f) {
    if (h == null && f != null || h != null && f == null || h != null && f != null && h.length !== f.length)
      return !1;
    if (h != null && f != null) {
      for (let d = 0, p = h.length; d < p; d += 1)
        if (!s(h[d], f[d]))
          return !1;
    }
    return !0;
  }
  n.equalPoints = a;
  function l(h, f, d, p) {
    return new n(Xt.random(h, f), Xt.random(d, p));
  }
  n.random = l;
  function u(h, f, d) {
    const p = Wt.toRad(Wt.normalize(-f)), g = Math.sin(p), v = Math.cos(p);
    return c(h, v, g, d);
  }
  n.rotate = u;
  function c(h, f, d, p = new n()) {
    const g = t(h), v = t(p), m = g.x - v.x, y = g.y - v.y, b = m * f - y * d, O = y * f + m * d;
    return new n(b + v.x, O + v.y);
  }
  n.rotateEx = c;
})(W || (W = {}));
class Se extends Jc {
  get left() {
    return this.x;
  }
  get top() {
    return this.y;
  }
  get right() {
    return this.x + this.width;
  }
  get bottom() {
    return this.y + this.height;
  }
  get origin() {
    return new W(this.x, this.y);
  }
  get topLeft() {
    return new W(this.x, this.y);
  }
  get topCenter() {
    return new W(this.x + this.width / 2, this.y);
  }
  get topRight() {
    return new W(this.x + this.width, this.y);
  }
  get center() {
    return new W(this.x + this.width / 2, this.y + this.height / 2);
  }
  get bottomLeft() {
    return new W(this.x, this.y + this.height);
  }
  get bottomCenter() {
    return new W(this.x + this.width / 2, this.y + this.height);
  }
  get bottomRight() {
    return new W(this.x + this.width, this.y + this.height);
  }
  get corner() {
    return new W(this.x + this.width, this.y + this.height);
  }
  get rightMiddle() {
    return new W(this.x + this.width, this.y + this.height / 2);
  }
  get leftMiddle() {
    return new W(this.x, this.y + this.height / 2);
  }
  get topLine() {
    return new Ge(this.topLeft, this.topRight);
  }
  get rightLine() {
    return new Ge(this.topRight, this.bottomRight);
  }
  get bottomLine() {
    return new Ge(this.bottomLeft, this.bottomRight);
  }
  get leftLine() {
    return new Ge(this.topLeft, this.bottomLeft);
  }
  constructor(e, t, r, i) {
    super(), this.x = e ?? 0, this.y = t ?? 0, this.width = r ?? 0, this.height = i ?? 0;
  }
  getOrigin() {
    return this.origin;
  }
  getTopLeft() {
    return this.topLeft;
  }
  getTopCenter() {
    return this.topCenter;
  }
  getTopRight() {
    return this.topRight;
  }
  getCenter() {
    return this.center;
  }
  getCenterX() {
    return this.x + this.width / 2;
  }
  getCenterY() {
    return this.y + this.height / 2;
  }
  getBottomLeft() {
    return this.bottomLeft;
  }
  getBottomCenter() {
    return this.bottomCenter;
  }
  getBottomRight() {
    return this.bottomRight;
  }
  getCorner() {
    return this.corner;
  }
  getRightMiddle() {
    return this.rightMiddle;
  }
  getLeftMiddle() {
    return this.leftMiddle;
  }
  getTopLine() {
    return this.topLine;
  }
  getRightLine() {
    return this.rightLine;
  }
  getBottomLine() {
    return this.bottomLine;
  }
  getLeftLine() {
    return this.leftLine;
  }
  /**
   * Returns a rectangle that is the bounding box of the rectangle.
   *
   * If `angle` is specified, the bounding box calculation will take into
   * account the rotation of the rectangle by angle degrees around its center.
   */
  bbox(e) {
    if (!e)
      return this.clone();
    const t = Wt.toRad(e), r = Math.abs(Math.sin(t)), i = Math.abs(Math.cos(t)), o = this.width * i + this.height * r, s = this.width * r + this.height * i;
    return new Se(this.x + (this.width - o) / 2, this.y + (this.height - s) / 2, o, s);
  }
  round(e = 0) {
    return this.x = Xt.round(this.x, e), this.y = Xt.round(this.y, e), this.width = Xt.round(this.width, e), this.height = Xt.round(this.height, e), this;
  }
  add(e, t, r, i) {
    const o = Se.create(e, t, r, i), s = Math.min(this.x, o.x), a = Math.min(this.y, o.y), l = Math.max(this.x + this.width, o.x + o.width), u = Math.max(this.y + this.height, o.y + o.height);
    return this.x = s, this.y = a, this.width = l - s, this.height = u - a, this;
  }
  update(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return this.x = o.x, this.y = o.y, this.width = o.width, this.height = o.height, this;
  }
  inflate(e, t) {
    const r = e, i = t ?? e;
    return this.x -= r, this.y -= i, this.width += 2 * r, this.height += 2 * i, this;
  }
  snapToGrid(e, t) {
    const r = this.origin.snapToGrid(e, t), i = this.corner.snapToGrid(e, t);
    return this.x = r.x, this.y = r.y, this.width = i.x - r.x, this.height = i.y - r.y, this;
  }
  translate(e, t) {
    const r = W.create(e, t);
    return this.x += r.x, this.y += r.y, this;
  }
  scale(e, t, r = new W()) {
    const i = this.origin.scale(e, t, r);
    return this.x = i.x, this.y = i.y, this.width *= e, this.height *= t, this;
  }
  rotate(e, t = this.getCenter()) {
    if (e !== 0) {
      const r = Wt.toRad(e), i = Math.cos(r), o = Math.sin(r);
      let s = this.getOrigin(), a = this.getTopRight(), l = this.getBottomRight(), u = this.getBottomLeft();
      s = W.rotateEx(s, i, o, t), a = W.rotateEx(a, i, o, t), l = W.rotateEx(l, i, o, t), u = W.rotateEx(u, i, o, t);
      const c = new Se(s.x, s.y, 0, 0);
      c.add(a.x, a.y, 0, 0), c.add(l.x, l.y, 0, 0), c.add(u.x, u.y, 0, 0), this.update(c);
    }
    return this;
  }
  rotate90() {
    const e = (this.width - this.height) / 2;
    this.x += e, this.y -= e;
    const t = this.width;
    return this.width = this.height, this.height = t, this;
  }
  /**
   * Translates the rectangle by `rect.x` and `rect.y` and expand it by
   * `rect.width` and `rect.height`.
   */
  moveAndExpand(e) {
    const t = Se.clone(e);
    return this.x += t.x || 0, this.y += t.y || 0, this.width += t.width || 0, this.height += t.height || 0, this;
  }
  /**
   * Returns an object where `sx` and `sy` give the maximum scaling that can be
   * applied to the rectangle so that it would still fit into `limit`. If
   * `origin` is specified, the rectangle is scaled around it; otherwise, it is
   * scaled around its center.
   */
  getMaxScaleToFit(e, t = this.center) {
    const r = Se.clone(e), i = t.x, o = t.y;
    let s = 1 / 0, a = 1 / 0, l = 1 / 0, u = 1 / 0, c = 1 / 0, h = 1 / 0, f = 1 / 0, d = 1 / 0;
    const p = r.topLeft;
    p.x < i && (s = (this.x - i) / (p.x - i)), p.y < o && (c = (this.y - o) / (p.y - o));
    const g = r.bottomRight;
    g.x > i && (a = (this.x + this.width - i) / (g.x - i)), g.y > o && (h = (this.y + this.height - o) / (g.y - o));
    const v = r.topRight;
    v.x > i && (l = (this.x + this.width - i) / (v.x - i)), v.y < o && (f = (this.y - o) / (v.y - o));
    const m = r.bottomLeft;
    return m.x < i && (u = (this.x - i) / (m.x - i)), m.y > o && (d = (this.y + this.height - o) / (m.y - o)), {
      sx: Math.min(s, a, l, u),
      sy: Math.min(c, h, f, d)
    };
  }
  /**
   * Returns a number that specifies the maximum scaling that can be applied to
   * the rectangle along both axes so that it would still fit into `limit`. If
   * `origin` is specified, the rectangle is scaled around it; otherwise, it is
   * scaled around its center.
   */
  getMaxUniformScaleToFit(e, t = this.center) {
    const r = this.getMaxScaleToFit(e, t);
    return Math.min(r.sx, r.sy);
  }
  containsPoint(e, t) {
    return Xt.containsPoint(this, W.create(e, t));
  }
  containsRect(e, t, r, i) {
    const o = Se.create(e, t, r, i), s = this.x, a = this.y, l = this.width, u = this.height, c = o.x, h = o.y, f = o.width, d = o.height;
    return l === 0 || u === 0 || f === 0 || d === 0 ? !1 : c >= s && h >= a && c + f <= s + l && h + d <= a + u;
  }
  /**
   * Returns an array of the intersection points of the rectangle and the line.
   * Return `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = [
      this.topLine,
      this.rightLine,
      this.bottomLine,
      this.leftLine
    ], r = [], i = [];
    return t.forEach((o) => {
      const s = e.intersectsWithLine(o);
      s !== null && i.indexOf(s.toString()) < 0 && (r.push(s), i.push(s.toString()));
    }), r.length > 0 ? r : null;
  }
  /**
   * Returns the point on the boundary of the rectangle that is the intersection
   * of the rectangle with a line starting in the center the rectangle ending in
   * the point `p`.
   *
   * If `angle` is specified, the intersection will take into account the
   * rotation of the rectangle by `angle` degrees around its center.
   */
  intersectsWithLineFromCenterToPoint(e, t) {
    const r = W.clone(e), i = this.center;
    let o = null;
    t != null && t !== 0 && r.rotate(t, i);
    const s = [this.topLine, this.rightLine, this.bottomLine, this.leftLine], a = new Ge(i, r);
    for (let l = s.length - 1; l >= 0; l -= 1) {
      const u = s[l].intersectsWithLine(a);
      if (u !== null) {
        o = u;
        break;
      }
    }
    return o && t != null && t !== 0 && o.rotate(-t, i), o;
  }
  intersectsWithRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    if (!this.isIntersectWithRect(o))
      return null;
    const s = this.origin, a = this.corner, l = o.origin, u = o.corner, c = Math.max(s.x, l.x), h = Math.max(s.y, l.y);
    return new Se(c, h, Math.min(a.x, u.x) - c, Math.min(a.y, u.y) - h);
  }
  isIntersectWithRect(e, t, r, i) {
    const o = Se.create(e, t, r, i), s = this.origin, a = this.corner, l = o.origin, u = o.corner;
    return !(u.x <= s.x || u.y <= s.y || l.x >= a.x || l.y >= a.y);
  }
  /**
   * Normalize the rectangle, i.e. make it so that it has non-negative
   * width and height. If width is less than `0`, the function swaps left and
   * right corners and if height is less than `0`, the top and bottom corners
   * are swapped.
   */
  normalize() {
    let e = this.x, t = this.y, r = this.width, i = this.height;
    return this.width < 0 && (e = this.x + this.width, r = -this.width), this.height < 0 && (t = this.y + this.height, i = -this.height), this.x = e, this.y = t, this.width = r, this.height = i, this;
  }
  /**
   * Returns a rectangle that is a union of this rectangle and rectangle `rect`.
   */
  union(e) {
    const t = Se.clone(e), r = this.origin, i = this.corner, o = t.origin, s = t.corner, a = Math.min(r.x, o.x), l = Math.min(r.y, o.y), u = Math.max(i.x, s.x), c = Math.max(i.y, s.y);
    return new Se(a, l, u - a, c - l);
  }
  /**
   * Returns a string ("top", "left", "right" or "bottom") denoting the side of
   * the rectangle which is nearest to the point `p`.
   */
  getNearestSideToPoint(e) {
    const t = W.clone(e), r = t.x - this.x, i = this.x + this.width - t.x, o = t.y - this.y, s = this.y + this.height - t.y;
    let a = r, l = "left";
    return i < a && (a = i, l = "right"), o < a && (a = o, l = "top"), s < a && (l = "bottom"), l;
  }
  /**
   * Returns a point on the boundary of the rectangle nearest to the point `p`.
   */
  getNearestPointToPoint(e) {
    const t = W.clone(e);
    if (this.containsPoint(t)) {
      const r = this.getNearestSideToPoint(t);
      if (r === "left")
        return new W(this.x, t.y);
      if (r === "top")
        return new W(t.x, this.y);
      if (r === "right")
        return new W(this.x + this.width, t.y);
      if (r === "bottom")
        return new W(t.x, this.y + this.height);
    }
    return t.adhereToRect(this);
  }
  equals(e) {
    return e != null && e.x === this.x && e.y === this.y && e.width === this.width && e.height === this.height;
  }
  clone() {
    return new Se(this.x, this.y, this.width, this.height);
  }
  toJSON() {
    return { x: this.x, y: this.y, width: this.width, height: this.height };
  }
  serialize() {
    return `${this.x} ${this.y} ${this.width} ${this.height}`;
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isRectangle = e;
})(Se || (Se = {}));
(function(n) {
  function e(t) {
    return t != null && typeof t == "object" && typeof t.x == "number" && typeof t.y == "number" && typeof t.width == "number" && typeof t.height == "number";
  }
  n.isRectangleLike = e;
})(Se || (Se = {}));
(function(n) {
  function e(s, a, l, u) {
    return s == null || typeof s == "number" ? new n(s, a, l, u) : t(s);
  }
  n.create = e;
  function t(s) {
    return n.isRectangle(s) ? s.clone() : Array.isArray(s) ? new n(s[0], s[1], s[2], s[3]) : new n(s.x, s.y, s.width, s.height);
  }
  n.clone = t;
  function r(s) {
    return new n(s.x - s.a, s.y - s.b, 2 * s.a, 2 * s.b);
  }
  n.fromEllipse = r;
  function i(s) {
    return new n(0, 0, s.width, s.height);
  }
  n.fromSize = i;
  function o(s, a) {
    return new n(s.x, s.y, a.width, a.height);
  }
  n.fromPositionAndSize = o;
})(Se || (Se = {}));
let Ge = class $s extends Jc {
  get center() {
    return new W((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);
  }
  constructor(e, t, r, i) {
    super(), typeof e == "number" && typeof t == "number" ? (this.start = new W(e, t), this.end = new W(r, i)) : (this.start = W.create(e), this.end = W.create(t));
  }
  getCenter() {
    return this.center;
  }
  /**
   * Rounds the line to the given `precision`.
   */
  round(e = 0) {
    return this.start.round(e), this.end.round(e), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.start.translate(e, t), this.end.translate(e, t)) : (this.start.translate(e), this.end.translate(e)), this;
  }
  /**
   * Rotate the line by `angle` around `origin`.
   */
  rotate(e, t) {
    return this.start.rotate(e, t), this.end.rotate(e, t), this;
  }
  /**
   * Scale the line by `sx` and `sy` about the given `origin`. If origin is not
   * specified, the line is scaled around `0,0`.
   */
  scale(e, t, r) {
    return this.start.scale(e, t, r), this.end.scale(e, t, r), this;
  }
  /**
   * Returns the length of the line.
   */
  length() {
    return Math.sqrt(this.squaredLength());
  }
  /**
   * Useful for distance comparisons in which real length is not necessary
   * (saves one `Math.sqrt()` operation).
   */
  squaredLength() {
    const e = this.start.x - this.end.x, t = this.start.y - this.end.y;
    return e * e + t * t;
  }
  /**
   * Scale the line so that it has the requested length. The start point of
   * the line is preserved.
   */
  setLength(e) {
    const t = this.length();
    if (!t)
      return this;
    const r = e / t;
    return this.scale(r, r, this.start);
  }
  parallel(e) {
    const t = this.clone();
    if (!t.isDifferentiable())
      return t;
    const { start: r, end: i } = t, o = r.clone().rotate(270, i), s = i.clone().rotate(90, r);
    return r.move(s, e), i.move(o, e), t;
  }
  /**
   * Returns the vector of the line with length equal to length of the line.
   */
  vector() {
    return new W(this.end.x - this.start.x, this.end.y - this.start.y);
  }
  /**
   * Returns the angle of incline of the line.
   *
   * The function returns `NaN` if the start and end endpoints of the line
   * both lie at the same coordinates(it is impossible to determine the angle
   * of incline of a line that appears to be a point). The
   * `line.isDifferentiable()` function may be used in advance to determine
   * whether the angle of incline can be computed for a given line.
   */
  angle() {
    const e = new W(this.start.x + 1, this.start.y);
    return this.start.angleBetween(this.end, e);
  }
  /**
   * Returns a rectangle that is the bounding box of the line.
   */
  bbox() {
    const e = Math.min(this.start.x, this.end.x), t = Math.min(this.start.y, this.end.y), r = Math.max(this.start.x, this.end.x), i = Math.max(this.start.y, this.end.y);
    return new Se(e, t, r - e, i - t);
  }
  /**
   * Returns the bearing (cardinal direction) of the line.
   *
   * The return value is one of the following strings:
   * 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW' and 'N'.
   *
   * The function returns 'N' if the two endpoints of the line are coincident.
   */
  bearing() {
    return this.start.bearing(this.end);
  }
  /**
   * Returns the point on the line that lies closest to point `p`.
   */
  closestPoint(e) {
    return this.pointAt(this.closestPointNormalizedLength(e));
  }
  /**
   * Returns the length of the line up to the point that lies closest to point `p`.
   */
  closestPointLength(e) {
    return this.closestPointNormalizedLength(e) * this.length();
  }
  /**
   * Returns a line that is tangent to the line at the point that lies closest
   * to point `p`.
   */
  closestPointTangent(e) {
    return this.tangentAt(this.closestPointNormalizedLength(e));
  }
  /**
   * Returns the normalized length (distance from the start of the line / total
   * line length) of the line up to the point that lies closest to point.
   */
  closestPointNormalizedLength(e) {
    const t = this.vector().dot(new $s(this.start, e).vector()), r = Math.min(1, Math.max(0, t / this.squaredLength()));
    return Number.isNaN(r) ? 0 : r;
  }
  /**
   * Returns a point on the line that lies `rate` (normalized length) away from
   * the beginning of the line.
   */
  pointAt(e) {
    const t = this.start, r = this.end;
    return e <= 0 ? t.clone() : e >= 1 ? r.clone() : t.lerp(r, e);
  }
  /**
   * Returns a point on the line that lies length away from the beginning of
   * the line.
   */
  pointAtLength(e) {
    const t = this.start, r = this.end;
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const o = this.length();
    if (e >= o)
      return i ? r.clone() : t.clone();
    const s = (i ? e : o - e) / o;
    return this.pointAt(s);
  }
  /**
   * Divides the line into two lines at the point that lies `rate` (normalized
   * length) away from the beginning of the line.
   */
  divideAt(e) {
    const t = this.pointAt(e);
    return [
      new $s(this.start, t),
      new $s(t, this.end)
    ];
  }
  /**
   * Divides the line into two lines at the point that lies length away from
   * the beginning of the line.
   */
  divideAtLength(e) {
    const t = this.pointAtLength(e);
    return [
      new $s(this.start, t),
      new $s(t, this.end)
    ];
  }
  /**
   * Returns `true` if the point `p` lies on the line. Return `false` otherwise.
   */
  containsPoint(e) {
    const t = this.start, r = this.end;
    if (t.cross(e, r) !== 0)
      return !1;
    const i = this.length();
    return !(new $s(t, e).length() > i || new $s(e, r).length() > i);
  }
  intersect(e, t) {
    const r = e.intersectsWithLine(this, t);
    return r ? Array.isArray(r) ? r : [r] : null;
  }
  /**
   * Returns the intersection point of the line with another line. Returns
   * `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = new W(this.end.x - this.start.x, this.end.y - this.start.y), r = new W(e.end.x - e.start.x, e.end.y - e.start.y), i = t.x * r.y - t.y * r.x, o = new W(e.start.x - this.start.x, e.start.y - this.start.y), s = o.x * r.y - o.y * r.x, a = o.x * t.y - o.y * t.x;
    if (i === 0 || s * i < 0 || a * i < 0)
      return null;
    if (i > 0) {
      if (s > i || a > i)
        return null;
    } else if (s < i || a < i)
      return null;
    return new W(this.start.x + s * t.x / i, this.start.y + s * t.y / i);
  }
  /**
   * Returns `true` if a tangent line can be found for the line.
   *
   * Tangents cannot be found if both of the line endpoints are coincident
   * (the line appears to be a point).
   */
  isDifferentiable() {
    return !this.start.equals(this.end);
  }
  /**
   * Returns the perpendicular distance between the line and point. The
   * distance is positive if the point lies to the right of the line, negative
   * if the point lies to the left of the line, and `0` if the point lies on
   * the line.
   */
  pointOffset(e) {
    const t = W.clone(e), r = this.start, i = this.end;
    return ((i.x - r.x) * (t.y - r.y) - (i.y - r.y) * (t.x - r.x)) / this.length();
  }
  pointSquaredDistance(e, t) {
    const r = W.create(e, t);
    return this.closestPoint(r).squaredDistance(r);
  }
  pointDistance(e, t) {
    const r = W.create(e, t);
    return this.closestPoint(r).distance(r);
  }
  /**
   * Returns a line tangent to the line at point that lies `rate` (normalized
   * length) away from the beginning of the line.
   */
  tangentAt(e) {
    if (!this.isDifferentiable())
      return null;
    const t = this.start, r = this.end, i = this.pointAt(e), o = new $s(t, r);
    return o.translate(i.x - t.x, i.y - t.y), o;
  }
  /**
   * Returns a line tangent to the line at point that lies `length` away from
   * the beginning of the line.
   */
  tangentAtLength(e) {
    if (!this.isDifferentiable())
      return null;
    const t = this.start, r = this.end, i = this.pointAtLength(e), o = new $s(t, r);
    return o.translate(i.x - t.x, i.y - t.y), o;
  }
  relativeCcw(e, t) {
    const r = W.create(e, t);
    let i = r.x - this.start.x, o = r.y - this.start.y;
    const s = this.end.x - this.start.x, a = this.end.y - this.start.y;
    let l = i * a - o * s;
    return l === 0 && (l = i * s + o * a, l > 0 && (i -= s, o -= a, l = i * s + o * a, l < 0 && (l = 0))), l < 0 ? -1 : l > 0 ? 1 : 0;
  }
  /**
   * Return `true` if the line equals the other line.
   */
  equals(e) {
    return e != null && this.start.x === e.start.x && this.start.y === e.start.y && this.end.x === e.end.x && this.end.y === e.end.y;
  }
  /**
   * Returns another line which is a clone of the line.
   */
  clone() {
    return new $s(this.start, this.end);
  }
  toJSON() {
    return { start: this.start.toJSON(), end: this.end.toJSON() };
  }
  serialize() {
    return [this.start.serialize(), this.end.serialize()].join(" ");
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isLine = e;
})(Ge || (Ge = {}));
let _c = class uE extends Jc {
  get center() {
    return new W(this.x, this.y);
  }
  constructor(e, t, r, i) {
    super(), this.x = e ?? 0, this.y = t ?? 0, this.a = r ?? 0, this.b = i ?? 0;
  }
  /**
   * Returns a rectangle that is the bounding box of the ellipse.
   */
  bbox() {
    return Se.fromEllipse(this);
  }
  /**
   * Returns a point that is the center of the ellipse.
   */
  getCenter() {
    return this.center;
  }
  inflate(e, t) {
    const r = e, i = t ?? e;
    return this.a += 2 * r, this.b += 2 * i, this;
  }
  normalizedDistance(e, t) {
    const r = W.create(e, t), i = r.x - this.x, o = r.y - this.y, s = this.a, a = this.b;
    return i * i / (s * s) + o * o / (a * a);
  }
  containsPoint(e, t) {
    return this.normalizedDistance(e, t) <= 1;
  }
  /**
   * Returns an array of the intersection points of the ellipse and the line.
   * Returns `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = [], r = this.a, i = this.b, o = e.start, s = e.end, a = e.vector(), l = o.diff(new W(this.x, this.y)), u = new W(a.x / (r * r), a.y / (i * i)), c = new W(l.x / (r * r), l.y / (i * i)), h = a.dot(u), f = a.dot(c), d = l.dot(c) - 1, p = f * f - h * d;
    if (p < 0)
      return null;
    if (p > 0) {
      const g = Math.sqrt(p), v = (-f - g) / h, m = (-f + g) / h;
      if ((v < 0 || v > 1) && (m < 0 || m > 1))
        return null;
      v >= 0 && v <= 1 && t.push(o.lerp(s, v)), m >= 0 && m <= 1 && t.push(o.lerp(s, m));
    } else {
      const g = -f / h;
      if (g >= 0 && g <= 1)
        t.push(o.lerp(s, g));
      else
        return null;
    }
    return t;
  }
  /**
   * Returns the point on the boundary of the ellipse that is the
   * intersection of the ellipse with a line starting in the center
   * of the ellipse ending in the point `p`.
   *
   * If angle is specified, the intersection will take into account
   * the rotation of the ellipse by angle degrees around its center.
   */
  intersectsWithLineFromCenterToPoint(e, t = 0) {
    const r = W.clone(e);
    t && r.rotate(t, this.getCenter());
    const i = r.x - this.x, o = r.y - this.y;
    let s;
    if (i === 0)
      return s = this.bbox().getNearestPointToPoint(r), t ? s.rotate(-t, this.getCenter()) : s;
    const a = o / i, l = a * a, u = this.a * this.a, c = this.b * this.b;
    let h = Math.sqrt(1 / (1 / u + l / c));
    h = i < 0 ? -h : h;
    const f = a * h;
    return s = new W(this.x + h, this.y + f), t ? s.rotate(-t, this.getCenter()) : s;
  }
  /**
   * Returns the angle between the x-axis and the tangent from a point. It is
   * valid for points lying on the ellipse boundary only.
   */
  tangentTheta(e) {
    const t = W.clone(e), r = t.x, i = t.y, o = this.a, s = this.b, a = this.bbox().center, l = a.x, u = a.y, c = 30, h = r > a.x + o / 2, f = r < a.x - o / 2;
    let d, p;
    return h || f ? (p = r > a.x ? i - c : i + c, d = o * o / (r - l) - o * o * (i - u) * (p - u) / (s * s * (r - l)) + l) : (d = i > a.y ? r + c : r - c, p = s * s / (i - u) - s * s * (r - l) * (d - l) / (o * o * (i - u)) + u), new W(d, p).theta(t);
  }
  scale(e, t) {
    return this.a *= e, this.b *= t, this;
  }
  rotate(e, t) {
    const r = Se.fromEllipse(this);
    r.rotate(e, t);
    const i = uE.fromRect(r);
    return this.a = i.a, this.b = i.b, this.x = i.x, this.y = i.y, this;
  }
  translate(e, t) {
    const r = W.create(e, t);
    return this.x += r.x, this.y += r.y, this;
  }
  equals(e) {
    return e != null && e.x === this.x && e.y === this.y && e.a === this.a && e.b === this.b;
  }
  clone() {
    return new uE(this.x, this.y, this.a, this.b);
  }
  toJSON() {
    return { x: this.x, y: this.y, a: this.a, b: this.b };
  }
  serialize() {
    return `${this.x} ${this.y} ${this.a} ${this.b}`;
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isEllipse = e;
})(_c || (_c = {}));
(function(n) {
  function e(i, o, s, a) {
    return i == null || typeof i == "number" ? new n(i, o, s, a) : t(i);
  }
  n.create = e;
  function t(i) {
    return n.isEllipse(i) ? i.clone() : Array.isArray(i) ? new n(i[0], i[1], i[2], i[3]) : new n(i.x, i.y, i.a, i.b);
  }
  n.parse = t;
  function r(i) {
    const o = i.center;
    return new n(o.x, o.y, i.width / 2, i.height / 2);
  }
  n.fromRect = r;
})(_c || (_c = {}));
const $_e = new RegExp("^[\\s\\dLMCZz,.]*$");
function N_e(n) {
  return typeof n != "string" ? !1 : $_e.test(n);
}
function t2(n, e) {
  return (n % e + e) % e;
}
function B_e(n, e, t, r, i) {
  const o = [], s = n[n.length - 1], a = e != null && e > 0, l = e || 0;
  if (r && a) {
    n = n.slice();
    const h = n[0], f = new W(s.x + (h.x - s.x) / 2, s.y + (h.y - s.y) / 2);
    n.splice(0, 0, f);
  }
  let u = n[0], c = 1;
  for (t ? o.push("M", u.x, u.y) : o.push("L", u.x, u.y); c < (r ? n.length : n.length - 1); ) {
    let h = n[t2(c, n.length)], f = u.x - h.x, d = u.y - h.y;
    if (a && (f !== 0 || d !== 0) && (i == null || i.indexOf(c - 1) < 0)) {
      let p = Math.sqrt(f * f + d * d);
      const g = f * Math.min(l, p / 2) / p, v = d * Math.min(l, p / 2) / p, m = h.x + g, y = h.y + v;
      o.push("L", m, y);
      let b = n[t2(c + 1, n.length)];
      for (; c < n.length - 2 && Math.round(b.x - h.x) === 0 && Math.round(b.y - h.y) === 0; )
        b = n[t2(c + 2, n.length)], c += 1;
      f = b.x - h.x, d = b.y - h.y, p = Math.max(1, Math.sqrt(f * f + d * d));
      const O = f * Math.min(l, p / 2) / p, w = d * Math.min(l, p / 2) / p, x = h.x + O, S = h.y + w;
      o.push("Q", h.x, h.y, x, S), h = new W(x, S);
    } else
      o.push("L", h.x, h.y);
    u = h, c += 1;
  }
  return r ? o.push("Z") : o.push("L", s.x, s.y), o.map((h) => typeof h == "string" ? h : +h.toFixed(3)).join(" ");
}
function TH(n, e = {}) {
  const t = [];
  return n && n.length && n.forEach((r) => {
    Array.isArray(r) ? t.push({ x: r[0], y: r[1] }) : t.push({ x: r.x, y: r.y });
  }), B_e(t, e.round, e.initialMove == null || e.initialMove, e.close, e.exclude);
}
function Kw(n, e, t, r, i = 0, o = 0, s = 0, a, l) {
  if (t === 0 || r === 0)
    return [];
  a -= n, l -= e, t = Math.abs(t), r = Math.abs(r);
  const u = -a / 2, c = -l / 2, h = Math.cos(i * Math.PI / 180), f = Math.sin(i * Math.PI / 180), d = h * u + f * c, p = -1 * f * u + h * c, g = d * d, v = p * p, m = t * t, y = r * r, b = g / m + v / y;
  let O;
  if (b > 1)
    t = Math.sqrt(b) * t, r = Math.sqrt(b) * r, O = 0;
  else {
    let K = 1;
    o === s && (K = -1), O = K * Math.sqrt((m * y - m * v - y * g) / (m * v + y * g));
  }
  const w = O * t * p / r, x = -1 * O * r * d / t, S = h * w - f * x + a / 2, _ = f * w + h * x + l / 2;
  let C = Math.atan2((p - x) / r, (d - w) / t) - Math.atan2(0, 1), A = C >= 0 ? C : 2 * Math.PI + C;
  C = Math.atan2((-p - x) / r, (-d - w) / t) - Math.atan2((p - x) / r, (d - w) / t);
  let T = C >= 0 ? C : 2 * Math.PI + C;
  s === 0 && T > 0 ? T -= 2 * Math.PI : s !== 0 && T < 0 && (T += 2 * Math.PI);
  const k = T * 2 / Math.PI, L = Math.ceil(k < 0 ? -1 * k : k), D = T / L, E = 8 / 3 * Math.sin(D / 4) * Math.sin(D / 4) / Math.sin(D / 2), M = h * t, R = h * r, N = f * t, $ = f * r;
  let V = Math.cos(A), H = Math.sin(A), G = -E * (M * H + $ * V), q = -E * (N * H - R * V), Y = 0, ie = 0;
  const se = [];
  for (let K = 0; K < L; K += 1) {
    A += D, V = Math.cos(A), H = Math.sin(A), Y = M * V - $ * H + S, ie = N * V + R * H + _;
    const re = -E * (M * H + $ * V), ge = -E * (N * H - R * V), ne = K * 6;
    se[ne] = Number(G + n), se[ne + 1] = Number(q + e), se[ne + 2] = Number(Y - re + n), se[ne + 3] = Number(ie - ge + e), se[ne + 4] = Number(Y + n), se[ne + 5] = Number(ie + e), G = Y + re, q = ie + ge;
  }
  return se.map((K) => +K.toFixed(2));
}
function V_e(n, e, t, r, i = 0, o = 0, s = 0, a, l) {
  const u = [], c = Kw(n, e, t, r, i, o, s, a, l);
  if (c != null)
    for (let h = 0, f = c.length; h < f; h += 6)
      u.push("C", c[h], c[h + 1], c[h + 2], c[h + 3], c[h + 4], c[h + 5]);
  return u.join(" ");
}
let Oi = class mm extends Jc {
  get start() {
    return this.points[0] || null;
  }
  get end() {
    return this.points[this.points.length - 1] || null;
  }
  constructor(e) {
    if (super(), e != null) {
      if (typeof e == "string")
        return mm.parse(e);
      this.points = e.map((t) => W.create(t));
    } else
      this.points = [];
  }
  scale(e, t, r = new W()) {
    return this.points.forEach((i) => i.scale(e, t, r)), this;
  }
  rotate(e, t) {
    return this.points.forEach((r) => r.rotate(e, t)), this;
  }
  translate(e, t) {
    const r = W.create(e, t);
    return this.points.forEach((i) => i.translate(r.x, r.y)), this;
  }
  round(e = 0) {
    return this.points.forEach((t) => t.round(e)), this;
  }
  bbox() {
    if (this.points.length === 0)
      return new Se();
    let e = 1 / 0, t = -1 / 0, r = 1 / 0, i = -1 / 0;
    const o = this.points;
    for (let s = 0, a = o.length; s < a; s += 1) {
      const l = o[s], u = l.x, c = l.y;
      u < e && (e = u), u > t && (t = u), c < r && (r = c), c > i && (i = c);
    }
    return new Se(e, r, t - e, i - r);
  }
  closestPoint(e) {
    const t = this.closestPointLength(e);
    return this.pointAtLength(t);
  }
  closestPointLength(e) {
    const t = this.points, r = t.length;
    if (r === 0 || r === 1)
      return 0;
    let i = 0, o = 0, s = 1 / 0;
    for (let a = 0, l = r - 1; a < l; a += 1) {
      const u = new Ge(t[a], t[a + 1]), c = u.length(), h = u.closestPointNormalizedLength(e), d = u.pointAt(h).squaredDistance(e);
      d < s && (s = d, o = i + h * c), i += c;
    }
    return o;
  }
  closestPointNormalizedLength(e) {
    const t = this.length();
    return t === 0 ? 0 : this.closestPointLength(e) / t;
  }
  closestPointTangent(e) {
    const t = this.closestPointLength(e);
    return this.tangentAtLength(t);
  }
  containsPoint(e) {
    if (this.points.length === 0)
      return !1;
    const t = W.clone(e), r = t.x, i = t.y, o = this.points, s = o.length;
    let a = s - 1, l = 0;
    for (let u = 0; u < s; u += 1) {
      const c = o[a], h = o[u];
      if (t.equals(c))
        return !0;
      const f = new Ge(c, h);
      if (f.containsPoint(e))
        return !0;
      if (i <= c.y && i > h.y || i > c.y && i <= h.y) {
        const d = c.x - r > h.x - r ? c.x - r : h.x - r;
        if (d >= 0) {
          const p = new W(r + d, i), g = new Ge(e, p);
          f.intersectsWithLine(g) && (l += 1);
        }
      }
      a = u;
    }
    return l % 2 === 1;
  }
  intersectsWithLine(e) {
    const t = [];
    for (let r = 0, i = this.points.length - 1; r < i; r += 1) {
      const o = this.points[r], s = this.points[r + 1], a = e.intersectsWithLine(new Ge(o, s));
      a && t.push(a);
    }
    return t.length > 0 ? t : null;
  }
  isDifferentiable() {
    for (let e = 0, t = this.points.length - 1; e < t; e += 1) {
      const r = this.points[e], i = this.points[e + 1];
      if (new Ge(r, i).isDifferentiable())
        return !0;
    }
    return !1;
  }
  length() {
    let e = 0;
    for (let t = 0, r = this.points.length - 1; t < r; t += 1) {
      const i = this.points[t], o = this.points[t + 1];
      e += i.distance(o);
    }
    return e;
  }
  pointAt(e) {
    const t = this.points, r = t.length;
    if (r === 0)
      return null;
    if (r === 1 || e <= 0)
      return t[0].clone();
    if (e >= 1)
      return t[r - 1].clone();
    const o = this.length() * e;
    return this.pointAtLength(o);
  }
  pointAtLength(e) {
    const t = this.points, r = t.length;
    if (r === 0)
      return null;
    if (r === 1)
      return t[0].clone();
    let i = !0;
    e < 0 && (i = !1, e = -e);
    let o = 0;
    for (let a = 0, l = r - 1; a < l; a += 1) {
      const u = i ? a : l - 1 - a, c = t[u], h = t[u + 1], f = new Ge(c, h), d = c.distance(h);
      if (e <= o + d)
        return f.pointAtLength((i ? 1 : -1) * (e - o));
      o += d;
    }
    return (i ? t[r - 1] : t[0]).clone();
  }
  tangentAt(e) {
    const r = this.points.length;
    if (r === 0 || r === 1)
      return null;
    e < 0 && (e = 0), e > 1 && (e = 1);
    const o = this.length() * e;
    return this.tangentAtLength(o);
  }
  tangentAtLength(e) {
    const t = this.points, r = t.length;
    if (r === 0 || r === 1)
      return null;
    let i = !0;
    e < 0 && (i = !1, e = -e);
    let o, s = 0;
    for (let a = 0, l = r - 1; a < l; a += 1) {
      const u = i ? a : l - 1 - a, c = t[u], h = t[u + 1], f = new Ge(c, h), d = c.distance(h);
      if (f.isDifferentiable()) {
        if (e <= s + d)
          return f.tangentAtLength((i ? 1 : -1) * (e - s));
        o = f;
      }
      s += d;
    }
    if (o) {
      const a = i ? 1 : 0;
      return o.tangentAt(a);
    }
    return null;
  }
  simplify(e = {}) {
    const t = this.points;
    if (t.length < 3)
      return this;
    const r = e.threshold || 0;
    let i = 0;
    for (; t[i + 2]; ) {
      const o = i, s = i + 1, a = i + 2, l = t[o], u = t[s], c = t[a];
      new Ge(l, c).closestPoint(u).distance(u) <= r ? t.splice(s, 1) : i += 1;
    }
    return this;
  }
  toHull() {
    const e = this.points, t = e.length;
    if (t === 0)
      return new mm();
    let r = e[0];
    for (let f = 1; f < t; f += 1)
      (e[f].y < r.y || e[f].y === r.y && e[f].x > r.x) && (r = e[f]);
    const i = [];
    for (let f = 0; f < t; f += 1) {
      let d = r.theta(e[f]);
      d === 0 && (d = 360), i.push([e[f], f, d]);
    }
    if (i.sort((f, d) => {
      let p = f[2] - d[2];
      return p === 0 && (p = d[1] - f[1]), p;
    }), i.length > 2) {
      const f = i[i.length - 1];
      i.unshift(f);
    }
    const o = {}, s = [], a = (f) => `${f[0].toString()}@${f[1]}`;
    for (; i.length !== 0; ) {
      const f = i.pop(), d = f[0];
      if (o[a(f)])
        continue;
      let p = !1;
      for (; !p; )
        if (s.length < 2)
          s.push(f), p = !0;
        else {
          const g = s.pop(), v = g[0], m = s.pop(), y = m[0], b = y.cross(v, d);
          if (b < 0)
            s.push(m), s.push(g), s.push(f), p = !0;
          else if (b === 0) {
            const w = v.angleBetween(y, d);
            Math.abs(w - 180) < 1e-10 || v.equals(d) || y.equals(v) ? (o[a(g)] = v, s.push(m)) : Math.abs((w + 1) % 360 - 1) < 1e-10 && (s.push(m), i.push(g));
          } else
            o[a(g)] = v, s.push(m);
        }
    }
    s.length > 2 && s.pop();
    let l, u = -1;
    for (let f = 0, d = s.length; f < d; f += 1) {
      const p = s[f][1];
      (l === void 0 || p < l) && (l = p, u = f);
    }
    let c = [];
    if (u > 0) {
      const f = s.slice(u), d = s.slice(0, u);
      c = f.concat(d);
    } else
      c = s;
    const h = [];
    for (let f = 0, d = c.length; f < d; f += 1)
      h.push(c[f][0]);
    return new mm(h);
  }
  equals(e) {
    return e == null || e.points.length !== this.points.length ? !1 : e.points.every((t, r) => t.equals(this.points[r]));
  }
  clone() {
    return new mm(this.points.map((e) => e.clone()));
  }
  toJSON() {
    return this.points.map((e) => e.toJSON());
  }
  serialize() {
    return this.points.map((e) => `${e.serialize()}`).join(" ");
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPolyline = e;
})(Oi || (Oi = {}));
(function(n) {
  function e(t) {
    const r = t.trim();
    if (r === "")
      return new n();
    const i = [], o = r.split(/\s*,\s*|\s+/);
    for (let s = 0, a = o.length; s < a; s += 2)
      i.push({ x: +o[s], y: +o[s + 1] });
    return new n(i);
  }
  n.parse = e;
})(Oi || (Oi = {}));
class Wn extends Jc {
  constructor(e, t, r, i) {
    super(), this.PRECISION = 3, this.start = W.create(e), this.controlPoint1 = W.create(t), this.controlPoint2 = W.create(r), this.end = W.create(i);
  }
  bbox() {
    const e = this.start, t = this.controlPoint1, r = this.controlPoint2, i = this.end, o = e.x, s = e.y, a = t.x, l = t.y, u = r.x, c = r.y, h = i.x, f = i.y, d = [], p = [[], []];
    let g, v, m, y, b, O, w, x;
    for (let M = 0; M < 2; M += 1) {
      if (M === 0 ? (v = 6 * o - 12 * a + 6 * u, g = -3 * o + 9 * a - 9 * u + 3 * h, m = 3 * a - 3 * o) : (v = 6 * s - 12 * l + 6 * c, g = -3 * s + 9 * l - 9 * c + 3 * f, m = 3 * l - 3 * s), Math.abs(g) < 1e-12) {
        if (Math.abs(v) < 1e-12)
          continue;
        y = -m / v, y > 0 && y < 1 && d.push(y);
        continue;
      }
      w = v * v - 4 * m * g, x = Math.sqrt(w), !(w < 0) && (b = (-v + x) / (2 * g), b > 0 && b < 1 && d.push(b), O = (-v - x) / (2 * g), O > 0 && O < 1 && d.push(O));
    }
    let S, _, C, A = d.length;
    const T = A;
    for (; A; )
      A -= 1, y = d[A], C = 1 - y, S = C * C * C * o + 3 * C * C * y * a + 3 * C * y * y * u + y * y * y * h, p[0][A] = S, _ = C * C * C * s + 3 * C * C * y * l + 3 * C * y * y * c + y * y * y * f, p[1][A] = _;
    d[T] = 0, d[T + 1] = 1, p[0][T] = o, p[1][T] = s, p[0][T + 1] = h, p[1][T + 1] = f, d.length = T + 2, p[0].length = T + 2, p[1].length = T + 2;
    const k = Math.min.apply(null, p[0]), L = Math.min.apply(null, p[1]), D = Math.max.apply(null, p[0]), E = Math.max.apply(null, p[1]);
    return new Se(k, L, D - k, E - L);
  }
  closestPoint(e, t = {}) {
    return this.pointAtT(this.closestPointT(e, t));
  }
  closestPointLength(e, t = {}) {
    const r = this.getOptions(t);
    return this.lengthAtT(this.closestPointT(e, r), r);
  }
  closestPointNormalizedLength(e, t = {}) {
    const r = this.getOptions(t), i = this.closestPointLength(e, r);
    if (!i)
      return 0;
    const o = this.length(r);
    return o === 0 ? 0 : i / o;
  }
  closestPointT(e, t = {}) {
    const r = this.getPrecision(t), i = this.getDivisions(t), o = Math.pow(10, -r);
    let s = null, a = 0, l = 0, u = 0, c = 0, h = 0, f = null;
    const d = i.length;
    let p = d > 0 ? 1 / d : 0;
    for (i.forEach((g, v) => {
      const m = g.start.distance(e), y = g.end.distance(e), b = m + y;
      (f == null || b < f) && (s = g, a = v * p, l = (v + 1) * p, u = m, c = y, f = b, h = g.endpointDistance());
    }); ; ) {
      const g = u ? Math.abs(u - c) / u : 0, v = c != null ? Math.abs(u - c) / c : 0, m = g < o || v < o, y = u ? u < h * o : !0, b = c ? c < h * o : !0;
      if (m || (y || b))
        return u <= c ? a : l;
      const w = s.divide(0.5);
      p /= 2;
      const x = w[0].start.distance(e), S = w[0].end.distance(e), _ = x + S, C = w[1].start.distance(e), A = w[1].end.distance(e), T = C + A;
      _ <= T ? (s = w[0], l -= p, u = x, c = S) : (s = w[1], a += p, u = C, c = A);
    }
  }
  closestPointTangent(e, t = {}) {
    return this.tangentAtT(this.closestPointT(e, t));
  }
  containsPoint(e, t = {}) {
    return this.toPolyline(t).containsPoint(e);
  }
  divideAt(e, t = {}) {
    if (e <= 0)
      return this.divideAtT(0);
    if (e >= 1)
      return this.divideAtT(1);
    const r = this.tAt(e, t);
    return this.divideAtT(r);
  }
  divideAtLength(e, t = {}) {
    const r = this.tAtLength(e, t);
    return this.divideAtT(r);
  }
  divide(e) {
    return this.divideAtT(e);
  }
  divideAtT(e) {
    const t = this.start, r = this.controlPoint1, i = this.controlPoint2, o = this.end;
    if (e <= 0)
      return [
        new Wn(t, t, t, t),
        new Wn(t, r, i, o)
      ];
    if (e >= 1)
      return [
        new Wn(t, r, i, o),
        new Wn(o, o, o, o)
      ];
    const s = this.getSkeletonPoints(e), a = s.startControlPoint1, l = s.startControlPoint2, u = s.divider, c = s.dividerControlPoint1, h = s.dividerControlPoint2;
    return [
      new Wn(t, a, l, u),
      new Wn(u, c, h, o)
    ];
  }
  endpointDistance() {
    return this.start.distance(this.end);
  }
  getSkeletonPoints(e) {
    const t = this.start, r = this.controlPoint1, i = this.controlPoint2, o = this.end;
    if (e <= 0)
      return {
        startControlPoint1: t.clone(),
        startControlPoint2: t.clone(),
        divider: t.clone(),
        dividerControlPoint1: r.clone(),
        dividerControlPoint2: i.clone()
      };
    if (e >= 1)
      return {
        startControlPoint1: r.clone(),
        startControlPoint2: i.clone(),
        divider: o.clone(),
        dividerControlPoint1: o.clone(),
        dividerControlPoint2: o.clone()
      };
    const s = new Ge(t, r).pointAt(e), a = new Ge(r, i).pointAt(e), l = new Ge(i, o).pointAt(e), u = new Ge(s, a).pointAt(e), c = new Ge(a, l).pointAt(e), h = new Ge(u, c).pointAt(e);
    return {
      startControlPoint1: s,
      startControlPoint2: u,
      divider: h,
      dividerControlPoint1: c,
      dividerControlPoint2: l
    };
  }
  getSubdivisions(e = {}) {
    const t = this.getPrecision(e);
    let r = [
      new Wn(this.start, this.controlPoint1, this.controlPoint2, this.end)
    ];
    if (t === 0)
      return r;
    let i = this.endpointDistance();
    const o = Math.pow(10, -t);
    let s = 0;
    for (; ; ) {
      s += 1;
      const a = [];
      r.forEach((c) => {
        const h = c.divide(0.5);
        a.push(h[0], h[1]);
      });
      const l = a.reduce((c, h) => c + h.endpointDistance(), 0), u = l !== 0 ? (l - i) / l : 0;
      if (s > 1 && u < o)
        return a;
      r = a, i = l;
    }
  }
  length(e = {}) {
    return this.getDivisions(e).reduce((r, i) => r + i.endpointDistance(), 0);
  }
  lengthAtT(e, t = {}) {
    if (e <= 0)
      return 0;
    const r = t.precision === void 0 ? this.PRECISION : t.precision;
    return this.divide(e)[0].length({ precision: r });
  }
  pointAt(e, t = {}) {
    if (e <= 0)
      return this.start.clone();
    if (e >= 1)
      return this.end.clone();
    const r = this.tAt(e, t);
    return this.pointAtT(r);
  }
  pointAtLength(e, t = {}) {
    const r = this.tAtLength(e, t);
    return this.pointAtT(r);
  }
  pointAtT(e) {
    return e <= 0 ? this.start.clone() : e >= 1 ? this.end.clone() : this.getSkeletonPoints(e).divider;
  }
  isDifferentiable() {
    const e = this.start, t = this.controlPoint1, r = this.controlPoint2, i = this.end;
    return !(e.equals(t) && t.equals(r) && r.equals(i));
  }
  tangentAt(e, t = {}) {
    if (!this.isDifferentiable())
      return null;
    e < 0 ? e = 0 : e > 1 && (e = 1);
    const r = this.tAt(e, t);
    return this.tangentAtT(r);
  }
  tangentAtLength(e, t = {}) {
    if (!this.isDifferentiable())
      return null;
    const r = this.tAtLength(e, t);
    return this.tangentAtT(r);
  }
  tangentAtT(e) {
    if (!this.isDifferentiable())
      return null;
    e < 0 && (e = 0), e > 1 && (e = 1);
    const t = this.getSkeletonPoints(e), r = t.startControlPoint2, i = t.dividerControlPoint1, o = t.divider, s = new Ge(r, i);
    return s.translate(o.x - r.x, o.y - r.y), s;
  }
  getPrecision(e = {}) {
    return e.precision == null ? this.PRECISION : e.precision;
  }
  getDivisions(e = {}) {
    if (e.subdivisions != null)
      return e.subdivisions;
    const t = this.getPrecision(e);
    return this.getSubdivisions({ precision: t });
  }
  getOptions(e = {}) {
    const t = this.getPrecision(e), r = this.getDivisions(e);
    return { precision: t, subdivisions: r };
  }
  tAt(e, t = {}) {
    if (e <= 0)
      return 0;
    if (e >= 1)
      return 1;
    const r = this.getOptions(t), o = this.length(r) * e;
    return this.tAtLength(o, r);
  }
  tAtLength(e, t = {}) {
    let r = !0;
    e < 0 && (r = !1, e = -e);
    const i = this.getPrecision(t), o = this.getDivisions(t), s = { precision: i, subdivisions: o };
    let a = null, l, u, c = 0, h = 0, f = 0;
    const d = o.length;
    let p = d > 0 ? 1 / d : 0;
    for (let m = 0; m < d; m += 1) {
      const y = r ? m : d - 1 - m, b = o[m], O = b.endpointDistance();
      if (e <= f + O) {
        a = b, l = y * p, u = (y + 1) * p, c = r ? e - f : O + f - e, h = r ? O + f - e : e - f;
        break;
      }
      f += O;
    }
    if (a == null)
      return r ? 1 : 0;
    const g = this.length(s), v = Math.pow(10, -i);
    for (; ; ) {
      let m;
      if (m = g !== 0 ? c / g : 0, m < v)
        return l;
      if (m = g !== 0 ? h / g : 0, m < v)
        return u;
      let y, b;
      const O = a.divide(0.5);
      p /= 2;
      const w = O[0].endpointDistance(), x = O[1].endpointDistance();
      c <= w ? (a = O[0], u -= p, y = c, b = w - y) : (a = O[1], l += p, y = c - w, b = x - y), c = y, h = b;
    }
  }
  toPoints(e = {}) {
    const t = this.getDivisions(e), r = [t[0].start.clone()];
    return t.forEach((i) => r.push(i.end.clone())), r;
  }
  toPolyline(e = {}) {
    return new Oi(this.toPoints(e));
  }
  scale(e, t, r) {
    return this.start.scale(e, t, r), this.controlPoint1.scale(e, t, r), this.controlPoint2.scale(e, t, r), this.end.scale(e, t, r), this;
  }
  rotate(e, t) {
    return this.start.rotate(e, t), this.controlPoint1.rotate(e, t), this.controlPoint2.rotate(e, t), this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.start.translate(e, t), this.controlPoint1.translate(e, t), this.controlPoint2.translate(e, t), this.end.translate(e, t)) : (this.start.translate(e), this.controlPoint1.translate(e), this.controlPoint2.translate(e), this.end.translate(e)), this;
  }
  equals(e) {
    return e != null && this.start.equals(e.start) && this.controlPoint1.equals(e.controlPoint1) && this.controlPoint2.equals(e.controlPoint2) && this.end.equals(e.end);
  }
  clone() {
    return new Wn(this.start, this.controlPoint1, this.controlPoint2, this.end);
  }
  toJSON() {
    return {
      start: this.start.toJSON(),
      controlPoint1: this.controlPoint1.toJSON(),
      controlPoint2: this.controlPoint2.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    return [
      this.start.serialize(),
      this.controlPoint1.serialize(),
      this.controlPoint2.serialize(),
      this.end.serialize()
    ].join(" ");
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isCurve = e;
})(Wn || (Wn = {}));
(function(n) {
  function e(i) {
    const o = i.length, s = [], a = [];
    let l = 2;
    s[0] = i[0] / l;
    for (let u = 1; u < o; u += 1)
      a[u] = 1 / l, l = (u < o - 1 ? 4 : 3.5) - a[u], s[u] = (i[u] - s[u - 1]) / l;
    for (let u = 1; u < o; u += 1)
      s[o - u - 1] -= a[o - u] * s[o - u];
    return s;
  }
  function t(i) {
    const o = i.map((f) => W.clone(f)), s = [], a = [], l = o.length - 1;
    if (l === 1)
      return s[0] = new W((2 * o[0].x + o[1].x) / 3, (2 * o[0].y + o[1].y) / 3), a[0] = new W(2 * s[0].x - o[0].x, 2 * s[0].y - o[0].y), [s, a];
    const u = [];
    for (let f = 1; f < l - 1; f += 1)
      u[f] = 4 * o[f].x + 2 * o[f + 1].x;
    u[0] = o[0].x + 2 * o[1].x, u[l - 1] = (8 * o[l - 1].x + o[l].x) / 2;
    const c = e(u);
    for (let f = 1; f < l - 1; f += 1)
      u[f] = 4 * o[f].y + 2 * o[f + 1].y;
    u[0] = o[0].y + 2 * o[1].y, u[l - 1] = (8 * o[l - 1].y + o[l].y) / 2;
    const h = e(u);
    for (let f = 0; f < l; f += 1)
      s.push(new W(c[f], h[f])), f < l - 1 ? a.push(new W(2 * o[f + 1].x - c[f + 1], 2 * o[f + 1].y - h[f + 1])) : a.push(new W((o[l].x + c[l - 1]) / 2, (o[l].y + h[l - 1]) / 2));
    return [s, a];
  }
  function r(i) {
    if (i == null || Array.isArray(i) && i.length < 2)
      throw new Error("At least 2 points are required");
    const o = t(i), s = [];
    for (let a = 0, l = o[0].length; a < l; a += 1) {
      const u = new W(o[0][a].x, o[0][a].y), c = new W(o[1][a].x, o[1][a].y);
      s.push(new n(i[a], u, c, i[a + 1]));
    }
    return s;
  }
  n.throughPoints = r;
})(Wn || (Wn = {}));
class u_ extends Jc {
  constructor() {
    super(...arguments), this.isVisible = !0, this.isSegment = !0, this.isSubpathStart = !1;
  }
  get end() {
    return this.endPoint;
  }
  get start() {
    if (this.previousSegment == null)
      throw new Error("Missing previous segment. (This segment cannot be the first segment of a path, or segment has not yet been added to a path.)");
    return this.previousSegment.end;
  }
  closestPointT(e, t) {
    if (this.closestPointNormalizedLength)
      return this.closestPointNormalizedLength(e);
    throw new Error("Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.");
  }
  // eslint-disable-next-line
  lengthAtT(e, t) {
    if (e <= 0)
      return 0;
    const r = this.length();
    return e >= 1 ? r : r * e;
  }
  divideAtT(e) {
    if (this.divideAt)
      return this.divideAt(e);
    throw new Error("Neither `divideAtT` nor `divideAt` method is implemented.");
  }
  pointAtT(e) {
    if (this.pointAt)
      return this.pointAt(e);
    throw new Error("Neither `pointAtT` nor `pointAt` method is implemented.");
  }
  tangentAtT(e) {
    if (this.tangentAt)
      return this.tangentAt(e);
    throw new Error("Neither `tangentAtT` nor `tangentAt` method is implemented.");
  }
}
class yi extends u_ {
  constructor(e, t) {
    super(), Ge.isLine(e) ? this.endPoint = e.end.clone().round(2) : this.endPoint = W.create(e, t).round(2);
  }
  get type() {
    return "L";
  }
  get line() {
    return new Ge(this.start, this.end);
  }
  bbox() {
    return this.line.bbox();
  }
  closestPoint(e) {
    return this.line.closestPoint(e);
  }
  closestPointLength(e) {
    return this.line.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.line.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.line.closestPointTangent(e);
  }
  length() {
    return this.line.length();
  }
  divideAt(e) {
    const t = this.line.divideAt(e);
    return [new yi(t[0]), new yi(t[1])];
  }
  divideAtLength(e) {
    const t = this.line.divideAtLength(e);
    return [new yi(t[0]), new yi(t[1])];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.line.pointAt(e);
  }
  pointAtLength(e) {
    return this.line.pointAtLength(e);
  }
  tangentAt(e) {
    return this.line.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.line.tangentAtLength(e);
  }
  isDifferentiable() {
    return this.previousSegment == null ? !1 : !this.start.equals(this.end);
  }
  clone() {
    return new yi(this.end);
  }
  scale(e, t, r) {
    return this.end.scale(e, t, r), this;
  }
  rotate(e, t) {
    return this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.end.translate(e, t) : this.end.translate(e), this;
  }
  equals(e) {
    return this.type === e.type && this.start.equals(e.start) && this.end.equals(e.end);
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.end;
    return `${this.type} ${e.x} ${e.y}`;
  }
}
(function(n) {
  function e(...t) {
    const r = t.length, i = t[0];
    if (Ge.isLine(i))
      return new n(i);
    if (W.isPointLike(i))
      return r === 1 ? new n(i) : t.map((s) => new n(s));
    if (r === 2)
      return new n(+t[0], +t[1]);
    const o = [];
    for (let s = 0; s < r; s += 2) {
      const a = +t[s], l = +t[s + 1];
      o.push(new n(a, l));
    }
    return o;
  }
  n.create = e;
})(yi || (yi = {}));
class cg extends u_ {
  get end() {
    if (!this.subpathStartSegment)
      throw new Error("Missing subpath start segment. (This segment needs a subpath start segment (e.g. MoveTo), or segment has not yet been added to a path.)");
    return this.subpathStartSegment.end;
  }
  get type() {
    return "Z";
  }
  get line() {
    return new Ge(this.start, this.end);
  }
  bbox() {
    return this.line.bbox();
  }
  closestPoint(e) {
    return this.line.closestPoint(e);
  }
  closestPointLength(e) {
    return this.line.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.line.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.line.closestPointTangent(e);
  }
  length() {
    return this.line.length();
  }
  divideAt(e) {
    const t = this.line.divideAt(e);
    return [
      // do not actually cut into the segment, first divided part can stay as Z
      t[1].isDifferentiable() ? new yi(t[0]) : this.clone(),
      new yi(t[1])
    ];
  }
  divideAtLength(e) {
    const t = this.line.divideAtLength(e);
    return [
      t[1].isDifferentiable() ? new yi(t[0]) : this.clone(),
      new yi(t[1])
    ];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.line.pointAt(e);
  }
  pointAtLength(e) {
    return this.line.pointAtLength(e);
  }
  tangentAt(e) {
    return this.line.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.line.tangentAtLength(e);
  }
  isDifferentiable() {
    return !this.previousSegment || !this.subpathStartSegment ? !1 : !this.start.equals(this.end);
  }
  scale() {
    return this;
  }
  rotate() {
    return this;
  }
  translate() {
    return this;
  }
  equals(e) {
    return this.type === e.type && this.start.equals(e.start) && this.end.equals(e.end);
  }
  clone() {
    return new cg();
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    return this.type;
  }
}
(function(n) {
  function e() {
    return new n();
  }
  n.create = e;
})(cg || (cg = {}));
class hg extends u_ {
  constructor(e, t) {
    super(), this.isVisible = !1, this.isSubpathStart = !0, Ge.isLine(e) || Wn.isCurve(e) ? this.endPoint = e.end.clone().round(2) : this.endPoint = W.create(e, t).round(2);
  }
  get start() {
    throw new Error("Illegal access. Moveto segments should not need a start property.");
  }
  get type() {
    return "M";
  }
  bbox() {
    return null;
  }
  closestPoint() {
    return this.end.clone();
  }
  closestPointLength() {
    return 0;
  }
  closestPointNormalizedLength() {
    return 0;
  }
  closestPointT() {
    return 1;
  }
  closestPointTangent() {
    return null;
  }
  length() {
    return 0;
  }
  lengthAtT() {
    return 0;
  }
  divideAt() {
    return [this.clone(), this.clone()];
  }
  divideAtLength() {
    return [this.clone(), this.clone()];
  }
  getSubdivisions() {
    return [];
  }
  pointAt() {
    return this.end.clone();
  }
  pointAtLength() {
    return this.end.clone();
  }
  pointAtT() {
    return this.end.clone();
  }
  tangentAt() {
    return null;
  }
  tangentAtLength() {
    return null;
  }
  tangentAtT() {
    return null;
  }
  isDifferentiable() {
    return !1;
  }
  scale(e, t, r) {
    return this.end.scale(e, t, r), this;
  }
  rotate(e, t) {
    return this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.end.translate(e, t) : this.end.translate(e), this;
  }
  clone() {
    return new hg(this.end);
  }
  equals(e) {
    return this.type === e.type && this.end.equals(e.end);
  }
  toJSON() {
    return {
      type: this.type,
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.end;
    return `${this.type} ${e.x} ${e.y}`;
  }
}
(function(n) {
  function e(...t) {
    const r = t.length, i = t[0];
    if (Ge.isLine(i))
      return new n(i);
    if (Wn.isCurve(i))
      return new n(i);
    if (W.isPointLike(i)) {
      if (r === 1)
        return new n(i);
      const s = [];
      for (let a = 0; a < r; a += 1)
        a === 0 ? s.push(new n(t[a])) : s.push(new yi(t[a]));
      return s;
    }
    if (r === 2)
      return new n(+t[0], +t[1]);
    const o = [];
    for (let s = 0; s < r; s += 2) {
      const a = +t[s], l = +t[s + 1];
      s === 0 ? o.push(new n(a, l)) : o.push(new yi(a, l));
    }
    return o;
  }
  n.create = e;
})(hg || (hg = {}));
class rs extends u_ {
  constructor(e, t, r, i, o, s) {
    super(), Wn.isCurve(e) ? (this.controlPoint1 = e.controlPoint1.clone().round(2), this.controlPoint2 = e.controlPoint2.clone().round(2), this.endPoint = e.end.clone().round(2)) : typeof e == "number" ? (this.controlPoint1 = new W(e, t).round(2), this.controlPoint2 = new W(r, i).round(2), this.endPoint = new W(o, s).round(2)) : (this.controlPoint1 = W.create(e).round(2), this.controlPoint2 = W.create(t).round(2), this.endPoint = W.create(r).round(2));
  }
  get type() {
    return "C";
  }
  get curve() {
    return new Wn(this.start, this.controlPoint1, this.controlPoint2, this.end);
  }
  bbox() {
    return this.curve.bbox();
  }
  closestPoint(e) {
    return this.curve.closestPoint(e);
  }
  closestPointLength(e) {
    return this.curve.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.curve.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.curve.closestPointTangent(e);
  }
  length() {
    return this.curve.length();
  }
  divideAt(e, t = {}) {
    const r = this.curve.divideAt(e, t);
    return [new rs(r[0]), new rs(r[1])];
  }
  divideAtLength(e, t = {}) {
    const r = this.curve.divideAtLength(e, t);
    return [new rs(r[0]), new rs(r[1])];
  }
  divideAtT(e) {
    const t = this.curve.divideAtT(e);
    return [new rs(t[0]), new rs(t[1])];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.curve.pointAt(e);
  }
  pointAtLength(e) {
    return this.curve.pointAtLength(e);
  }
  tangentAt(e) {
    return this.curve.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.curve.tangentAtLength(e);
  }
  isDifferentiable() {
    if (!this.previousSegment)
      return !1;
    const e = this.start, t = this.controlPoint1, r = this.controlPoint2, i = this.end;
    return !(e.equals(t) && t.equals(r) && r.equals(i));
  }
  scale(e, t, r) {
    return this.controlPoint1.scale(e, t, r), this.controlPoint2.scale(e, t, r), this.end.scale(e, t, r), this;
  }
  rotate(e, t) {
    return this.controlPoint1.rotate(e, t), this.controlPoint2.rotate(e, t), this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.controlPoint1.translate(e, t), this.controlPoint2.translate(e, t), this.end.translate(e, t)) : (this.controlPoint1.translate(e), this.controlPoint2.translate(e), this.end.translate(e)), this;
  }
  equals(e) {
    return this.start.equals(e.start) && this.end.equals(e.end) && this.controlPoint1.equals(e.controlPoint1) && this.controlPoint2.equals(e.controlPoint2);
  }
  clone() {
    return new rs(this.controlPoint1, this.controlPoint2, this.end);
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      controlPoint1: this.controlPoint1.toJSON(),
      controlPoint2: this.controlPoint2.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.controlPoint1, t = this.controlPoint2, r = this.end;
    return [this.type, e.x, e.y, t.x, t.y, r.x, r.y].join(" ");
  }
}
(function(n) {
  function e(...t) {
    const r = t.length, i = t[0];
    if (Wn.isCurve(i))
      return new n(i);
    if (W.isPointLike(i)) {
      if (r === 3)
        return new n(t[0], t[1], t[2]);
      const s = [];
      for (let a = 0; a < r; a += 3)
        s.push(new n(t[a], t[a + 1], t[a + 2]));
      return s;
    }
    if (r === 6)
      return new n(t[0], t[1], t[2], t[3], t[4], t[5]);
    const o = [];
    for (let s = 0; s < r; s += 6)
      o.push(new n(t[s], t[s + 1], t[s + 2], t[s + 3], t[s + 4], t[s + 5]));
    return o;
  }
  n.create = e;
})(rs || (rs = {}));
function n1(n, e, t) {
  return {
    x: n * Math.cos(t) - e * Math.sin(t),
    y: n * Math.sin(t) + e * Math.cos(t)
  };
}
function a5(n, e, t, r, i, o) {
  const s = 0.3333333333333333, a = 2 / 3;
  return [
    s * n + a * t,
    s * e + a * r,
    s * i + a * t,
    s * o + a * r,
    i,
    o
  ];
}
function PH(n, e, t, r, i, o, s, a, l, u) {
  const c = Math.PI * 120 / 180, h = Math.PI / 180 * (+i || 0);
  let f = [], d, p, g, v, m;
  if (u)
    p = u[0], g = u[1], v = u[2], m = u[3];
  else {
    d = n1(n, e, -h), n = d.x, e = d.y, d = n1(a, l, -h), a = d.x, l = d.y;
    const D = (n - a) / 2, E = (e - l) / 2;
    let M = D * D / (t * t) + E * E / (r * r);
    M > 1 && (M = Math.sqrt(M), t = M * t, r = M * r);
    const R = t * t, N = r * r, $ = (o === s ? -1 : 1) * Math.sqrt(Math.abs((R * N - R * E * E - N * D * D) / (R * E * E + N * D * D)));
    v = $ * t * E / r + (n + a) / 2, m = $ * -r * D / t + (e + l) / 2, p = Math.asin((e - m) / r), g = Math.asin((l - m) / r), p = n < v ? Math.PI - p : p, g = a < v ? Math.PI - g : g, p < 0 && (p = Math.PI * 2 + p), g < 0 && (g = Math.PI * 2 + g), s && p > g && (p -= Math.PI * 2), !s && g > p && (g -= Math.PI * 2);
  }
  let y = g - p;
  if (Math.abs(y) > c) {
    const D = g, E = a, M = l;
    g = p + c * (s && g > p ? 1 : -1), a = v + t * Math.cos(g), l = m + r * Math.sin(g), f = PH(a, l, t, r, i, 0, s, E, M, [
      g,
      D,
      v,
      m
    ]);
  }
  y = g - p;
  const b = Math.cos(p), O = Math.sin(p), w = Math.cos(g), x = Math.sin(g), S = Math.tan(y / 4), _ = 4 / 3 * (t * S), C = 4 / 3 * (r * S), A = [n, e], T = [n + _ * O, e - C * b], k = [a + _ * x, l - C * w], L = [a, l];
  if (T[0] = 2 * A[0] - T[0], T[1] = 2 * A[1] - T[1], u)
    return [T, k, L].concat(f);
  {
    f = [T, k, L].concat(f).join().split(",");
    const D = [], E = f.length;
    for (let M = 0; M < E; M += 1)
      D[M] = M % 2 ? n1(+f[M - 1], +f[M], h).y : n1(+f[M], +f[M + 1], h).x;
    return D;
  }
}
function z_e(n) {
  if (!n)
    return null;
  const e = `	
\v\f\r   ᠎             　\u2028\u2029`, t = new RegExp(
    `([a-z])[${e},]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[${e}]*,?[${e}]*)+)`,
    // eslint-disable-line
    "ig"
  ), r = new RegExp(
    // eslint-disable-next-line
    `(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[${e}]*,?[${e}]*`,
    "ig"
  ), i = {
    a: 7,
    c: 6,
    h: 1,
    l: 2,
    m: 2,
    q: 4,
    s: 4,
    t: 2,
    v: 1,
    z: 0
  }, o = [];
  return n.replace(t, (s, a, l) => {
    const u = [];
    let c = a.toLowerCase();
    l.replace(r, (f, d) => (d && u.push(+d), f)), c === "m" && u.length > 2 && (o.push([a, ...u.splice(0, 2)]), c = "l", a = a === "m" ? "l" : "L");
    const h = i[c];
    for (; u.length >= h && (o.push([a, ...u.splice(0, h)]), !!h); )
      ;
    return s;
  }), o;
}
function F_e(n) {
  const e = z_e(n);
  if (!e || !e.length)
    return [["M", 0, 0]];
  let t = 0, r = 0, i = 0, o = 0;
  const s = [];
  for (let a = 0, l = e.length; a < l; a += 1) {
    const u = [];
    s.push(u);
    const c = e[a], h = c[0];
    if (h !== h.toUpperCase())
      switch (u[0] = h.toUpperCase(), u[0]) {
        case "A":
          u[1] = c[1], u[2] = c[2], u[3] = c[3], u[4] = c[4], u[5] = c[5], u[6] = +c[6] + t, u[7] = +c[7] + r;
          break;
        case "V":
          u[1] = +c[1] + r;
          break;
        case "H":
          u[1] = +c[1] + t;
          break;
        case "M":
          i = +c[1] + t, o = +c[2] + r;
          for (let f = 1, d = c.length; f < d; f += 1)
            u[f] = +c[f] + (f % 2 ? t : r);
          break;
        default:
          for (let f = 1, d = c.length; f < d; f += 1)
            u[f] = +c[f] + (f % 2 ? t : r);
          break;
      }
    else
      for (let f = 0, d = c.length; f < d; f += 1)
        u[f] = c[f];
    switch (u[0]) {
      case "Z":
        t = +i, r = +o;
        break;
      case "H":
        t = u[1];
        break;
      case "V":
        r = u[1];
        break;
      case "M":
        i = u[u.length - 2], o = u[u.length - 1], t = u[u.length - 2], r = u[u.length - 1];
        break;
      default:
        t = u[u.length - 2], r = u[u.length - 1];
        break;
    }
  }
  return s;
}
function Q_e(n) {
  const e = F_e(n), t = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };
  function r(l, u, c) {
    let h, f;
    if (!l)
      return ["C", u.x, u.y, u.x, u.y, u.x, u.y];
    switch (l[0] in { T: 1, Q: 1 } || (u.qx = null, u.qy = null), l[0]) {
      case "M":
        u.X = l[1], u.Y = l[2];
        break;
      case "A":
        return parseFloat(l[1]) === 0 || parseFloat(l[2]) === 0 ? ["L", l[6], l[7]] : ["C"].concat(PH.apply(0, [u.x, u.y].concat(l.slice(1))));
      case "S":
        return c === "C" || c === "S" ? (h = u.x * 2 - u.bx, f = u.y * 2 - u.by) : (h = u.x, f = u.y), ["C", h, f].concat(l.slice(1));
      case "T":
        return c === "Q" || c === "T" ? (u.qx = u.x * 2 - u.qx, u.qy = u.y * 2 - u.qy) : (u.qx = u.x, u.qy = u.y), ["C"].concat(a5(u.x, u.y, u.qx, u.qy, l[1], l[2]));
      case "Q":
        return u.qx = l[1], u.qy = l[2], ["C"].concat(a5(u.x, u.y, l[1], l[2], l[3], l[4]));
      case "H":
        return ["L"].concat(l[1], u.y);
      case "V":
        return ["L"].concat(u.x, l[1]);
    }
    return l;
  }
  function i(l, u) {
    if (l[u].length > 7) {
      l[u].shift();
      const c = l[u];
      for (; c.length; )
        o[u] = "A", u += 1, l.splice(u, 0, ["C"].concat(c.splice(0, 6)));
      l.splice(u, 1), a = e.length;
    }
  }
  const o = [];
  let s = "", a = e.length;
  for (let l = 0; l < a; l += 1) {
    let u = "";
    e[l] && (u = e[l][0]), u !== "C" && (o[l] = u, l > 0 && (s = o[l - 1])), e[l] = r(e[l], t, s), o[l] !== "A" && u === "C" && (o[l] = "C"), i(e, l);
    const c = e[l], h = c.length;
    t.x = c[h - 2], t.y = c[h - 1], t.bx = parseFloat(c[h - 4]) || t.x, t.by = parseFloat(c[h - 3]) || t.y;
  }
  return (!e[0][0] || e[0][0] !== "M") && e.unshift(["M", 0, 0]), e;
}
function Z_e(n) {
  return Q_e(n).map((e) => e.map((t) => typeof t == "string" ? t : Xt.round(t, 2))).join(",").split(",").join(" ");
}
let Et = class Ir extends Jc {
  constructor(e) {
    if (super(), this.PRECISION = 3, this.segments = [], Array.isArray(e))
      if (Ge.isLine(e[0]) || Wn.isCurve(e[0])) {
        let t = null;
        e.forEach((i, o) => {
          o === 0 && this.appendSegment(Ir.createSegment("M", i.start)), t != null && !t.end.equals(i.start) && this.appendSegment(Ir.createSegment("M", i.start)), Ge.isLine(i) ? this.appendSegment(Ir.createSegment("L", i.end)) : Wn.isCurve(i) && this.appendSegment(Ir.createSegment("C", i.controlPoint1, i.controlPoint2, i.end)), t = i;
        });
      } else
        e.forEach((r) => {
          r.isSegment && this.appendSegment(r);
        });
    else
      e != null && (Ge.isLine(e) ? (this.appendSegment(Ir.createSegment("M", e.start)), this.appendSegment(Ir.createSegment("L", e.end))) : Wn.isCurve(e) ? (this.appendSegment(Ir.createSegment("M", e.start)), this.appendSegment(Ir.createSegment("C", e.controlPoint1, e.controlPoint2, e.end))) : Oi.isPolyline(e) ? e.points && e.points.length && e.points.forEach((t, r) => {
        const i = r === 0 ? Ir.createSegment("M", t) : Ir.createSegment("L", t);
        this.appendSegment(i);
      }) : e.isSegment && this.appendSegment(e));
  }
  get start() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    for (let r = 0; r < t; r += 1) {
      const i = e[r];
      if (i.isVisible)
        return i.start;
    }
    return e[t - 1].end;
  }
  get end() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    for (let r = t - 1; r >= 0; r -= 1) {
      const i = e[r];
      if (i.isVisible)
        return i.end;
    }
    return e[t - 1].end;
  }
  moveTo(...e) {
    return this.appendSegment(hg.create.call(null, ...e));
  }
  lineTo(...e) {
    return this.appendSegment(yi.create.call(null, ...e));
  }
  curveTo(...e) {
    return this.appendSegment(rs.create.call(null, ...e));
  }
  arcTo(e, t, r, i, o, s, a) {
    const l = this.end || new W(), u = typeof s == "number" ? Kw(l.x, l.y, e, t, r, i, o, s, a) : Kw(l.x, l.y, e, t, r, i, o, s.x, s.y);
    if (u != null)
      for (let c = 0, h = u.length; c < h; c += 6)
        this.curveTo(u[c], u[c + 1], u[c + 2], u[c + 3], u[c + 4], u[c + 5]);
    return this;
  }
  quadTo(e, t, r, i) {
    const o = this.end || new W(), s = ["M", o.x, o.y];
    if (typeof e == "number")
      s.push("Q", e, t, r, i);
    else {
      const l = t;
      s.push("Q", e.x, e.y, l.x, l.y);
    }
    const a = Ir.parse(s.join(" "));
    return this.appendSegment(a.segments.slice(1)), this;
  }
  close() {
    return this.appendSegment(cg.create());
  }
  drawPoints(e, t = {}) {
    const r = TH(e, t), i = Ir.parse(r);
    i && i.segments && this.appendSegment(i.segments);
  }
  bbox() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    let r;
    for (let o = 0; o < t; o += 1) {
      const s = e[o];
      if (s.isVisible) {
        const a = s.bbox();
        a != null && (r = r ? r.union(a) : a);
      }
    }
    if (r != null)
      return r;
    const i = e[t - 1];
    return new Se(i.end.x, i.end.y, 0, 0);
  }
  appendSegment(e) {
    const t = this.segments.length;
    let r = t !== 0 ? this.segments[t - 1] : null, i;
    const o = null;
    if (Array.isArray(e))
      for (let s = 0, a = e.length; s < a; s += 1) {
        const l = e[s];
        i = this.prepareSegment(l, r, o), this.segments.push(i), r = i;
      }
    else
      e != null && e.isSegment && (i = this.prepareSegment(e, r, o), this.segments.push(i));
    return this;
  }
  insertSegment(e, t) {
    const r = this.segments.length;
    if (e < 0 && (e = r + e + 1), e > r || e < 0)
      throw new Error("Index out of range.");
    let i, o = null, s = null;
    if (r !== 0 && (e >= 1 ? (o = this.segments[e - 1], s = o.nextSegment) : (o = null, s = this.segments[0])), !Array.isArray(t))
      i = this.prepareSegment(t, o, s), this.segments.splice(e, 0, i);
    else
      for (let a = 0, l = t.length; a < l; a += 1) {
        const u = t[a];
        i = this.prepareSegment(u, o, s), this.segments.splice(e + a, 0, i), o = i;
      }
    return this;
  }
  removeSegment(e) {
    const t = this.fixIndex(e), r = this.segments.splice(t, 1)[0], i = r.previousSegment, o = r.nextSegment;
    return i && (i.nextSegment = o), o && (o.previousSegment = i), r.isSubpathStart && o && this.updateSubpathStartSegment(o), r;
  }
  replaceSegment(e, t) {
    const r = this.fixIndex(e);
    let i;
    const o = this.segments[r];
    let s = o.previousSegment;
    const a = o.nextSegment;
    let l = o.isSubpathStart;
    if (!Array.isArray(t))
      i = this.prepareSegment(t, s, a), this.segments.splice(r, 1, i), l && i.isSubpathStart && (l = !1);
    else {
      this.segments.splice(e, 1);
      for (let u = 0, c = t.length; u < c; u += 1) {
        const h = t[u];
        i = this.prepareSegment(h, s, a), this.segments.splice(e + u, 0, i), s = i, l && i.isSubpathStart && (l = !1);
      }
    }
    l && a && this.updateSubpathStartSegment(a);
  }
  getSegment(e) {
    const t = this.fixIndex(e);
    return this.segments[t];
  }
  fixIndex(e) {
    const t = this.segments.length;
    if (t === 0)
      throw new Error("Path has no segments.");
    let r = e;
    for (; r < 0; )
      r = t + r;
    if (r >= t || r < 0)
      throw new Error("Index out of range.");
    return r;
  }
  segmentAt(e, t = {}) {
    const r = this.segmentIndexAt(e, t);
    return r ? this.getSegment(r) : null;
  }
  segmentAtLength(e, t = {}) {
    const r = this.segmentIndexAtLength(e, t);
    return r ? this.getSegment(r) : null;
  }
  segmentIndexAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const r = Xt.clamp(e, 0, 1), i = this.getOptions(t), s = this.length(i) * r;
    return this.segmentIndexAtLength(s, i);
  }
  segmentIndexAtLength(e, t = {}) {
    const r = this.segments.length;
    if (r === 0)
      return null;
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const o = this.getPrecision(t), s = this.getSubdivisions(t);
    let a = 0, l = null;
    for (let u = 0; u < r; u += 1) {
      const c = i ? u : r - 1 - u, h = this.segments[c], f = s[c], d = h.length({ precision: o, subdivisions: f });
      if (h.isVisible) {
        if (e <= a + d)
          return c;
        l = c;
      }
      a += d;
    }
    return l;
  }
  getSegmentSubdivisions(e = {}) {
    const t = this.getPrecision(e), r = [];
    for (let i = 0, o = this.segments.length; i < o; i += 1) {
      const a = this.segments[i].getSubdivisions({ precision: t });
      r.push(a);
    }
    return r;
  }
  updateSubpathStartSegment(e) {
    let t = e.previousSegment, r = e;
    for (; r && !r.isSubpathStart; )
      t != null ? r.subpathStartSegment = t.subpathStartSegment : r.subpathStartSegment = null, t = r, r = r.nextSegment;
  }
  prepareSegment(e, t, r) {
    e.previousSegment = t, e.nextSegment = r, t != null && (t.nextSegment = e), r != null && (r.previousSegment = e);
    let i = e;
    return e.isSubpathStart && (e.subpathStartSegment = e, i = r), i != null && this.updateSubpathStartSegment(i), e;
  }
  closestPoint(e, t = {}) {
    const r = this.closestPointT(e, t);
    return r ? this.pointAtT(r) : null;
  }
  closestPointLength(e, t = {}) {
    const r = this.getOptions(t), i = this.closestPointT(e, r);
    return i ? this.lengthAtT(i, r) : 0;
  }
  closestPointNormalizedLength(e, t = {}) {
    const r = this.getOptions(t), i = this.closestPointLength(e, r);
    if (i === 0)
      return 0;
    const o = this.length(r);
    return o === 0 ? 0 : i / o;
  }
  closestPointT(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const r = this.getPrecision(t), i = this.getSubdivisions(t);
    let o, s = 1 / 0;
    for (let a = 0, l = this.segments.length; a < l; a += 1) {
      const u = this.segments[a], c = i[a];
      if (u.isVisible) {
        const h = u.closestPointT(e, {
          precision: r,
          subdivisions: c
        }), f = u.pointAtT(h), d = Xt.squaredLength(f, e);
        d < s && (o = { segmentIndex: a, value: h }, s = d);
      }
    }
    return o || { segmentIndex: this.segments.length - 1, value: 1 };
  }
  closestPointTangent(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const r = this.getPrecision(t), i = this.getSubdivisions(t);
    let o, s = 1 / 0;
    for (let a = 0, l = this.segments.length; a < l; a += 1) {
      const u = this.segments[a], c = i[a];
      if (u.isDifferentiable()) {
        const h = u.closestPointT(e, {
          precision: r,
          subdivisions: c
        }), f = u.pointAtT(h), d = Xt.squaredLength(f, e);
        d < s && (o = u.tangentAtT(h), s = d);
      }
    }
    return o || null;
  }
  containsPoint(e, t = {}) {
    const r = this.toPolylines(t);
    if (!r)
      return !1;
    let i = 0;
    for (let o = 0, s = r.length; o < s; o += 1)
      r[o].containsPoint(e) && (i += 1);
    return i % 2 === 1;
  }
  pointAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    if (e <= 0)
      return this.start.clone();
    if (e >= 1)
      return this.end.clone();
    const r = this.getOptions(t), o = this.length(r) * e;
    return this.pointAtLength(o, r);
  }
  pointAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    if (e === 0)
      return this.start.clone();
    let r = !0;
    e < 0 && (r = !1, e = -e);
    const i = this.getPrecision(t), o = this.getSubdivisions(t);
    let s, a = 0;
    for (let u = 0, c = this.segments.length; u < c; u += 1) {
      const h = r ? u : c - 1 - u, f = this.segments[h], d = o[h], p = f.length({
        precision: i,
        subdivisions: d
      });
      if (f.isVisible) {
        if (e <= a + p)
          return f.pointAtLength((r ? 1 : -1) * (e - a), {
            precision: i,
            subdivisions: d
          });
        s = f;
      }
      a += p;
    }
    return s ? r ? s.end : s.start : this.segments[this.segments.length - 1].end.clone();
  }
  pointAtT(e) {
    const t = this.segments, r = t.length;
    if (r === 0)
      return null;
    const i = e.segmentIndex;
    if (i < 0)
      return t[0].pointAtT(0);
    if (i >= r)
      return t[r - 1].pointAtT(1);
    const o = Xt.clamp(e.value, 0, 1);
    return t[i].pointAtT(o);
  }
  divideAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const r = Xt.clamp(e, 0, 1), i = this.getOptions(t), s = this.length(i) * r;
    return this.divideAtLength(s, i);
  }
  divideAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    let r = !0;
    e < 0 && (r = !1, e = -e);
    const i = this.getPrecision(t), o = this.getSubdivisions(t);
    let s = 0, a, l, u, c, h;
    for (let w = 0, x = this.segments.length; w < x; w += 1) {
      const S = r ? w : x - 1 - w, _ = this.getSegment(S), C = o[S], A = { precision: i, subdivisions: C }, T = _.length(A);
      if (_.isDifferentiable() && (u = _, c = S, e <= s + T)) {
        l = S, a = _.divideAtLength((r ? 1 : -1) * (e - s), A);
        break;
      }
      s += T;
    }
    if (!u)
      return null;
    a || (l = c, h = r ? 1 : 0, a = u.divideAtT(h));
    const f = this.clone(), d = l;
    f.replaceSegment(d, a);
    const p = d;
    let g = d + 1, v = d + 2;
    a[0].isDifferentiable() || (f.removeSegment(p), g -= 1, v -= 1);
    const m = f.getSegment(g).start;
    f.insertSegment(g, Ir.createSegment("M", m)), v += 1, a[1].isDifferentiable() || (f.removeSegment(v - 1), v -= 1);
    const y = v - p - 1;
    for (let w = v, x = f.segments.length; w < x; w += 1) {
      const S = this.getSegment(w - y), _ = f.getSegment(w);
      if (_.type === "Z" && !S.subpathStartSegment.end.equals(_.subpathStartSegment.end)) {
        const C = Ir.createSegment("L", S.end);
        f.replaceSegment(w, C);
      }
    }
    const b = new Ir(f.segments.slice(0, g)), O = new Ir(f.segments.slice(g));
    return [b, O];
  }
  intersectsWithLine(e, t = {}) {
    const r = this.toPolylines(t);
    if (r == null)
      return null;
    let i = null;
    for (let o = 0, s = r.length; o < s; o += 1) {
      const a = r[o], l = e.intersect(a);
      l && (i == null && (i = []), Array.isArray(l) ? i.push(...l) : i.push(l));
    }
    return i;
  }
  isDifferentiable() {
    for (let e = 0, t = this.segments.length; e < t; e += 1)
      if (this.segments[e].isDifferentiable())
        return !0;
    return !1;
  }
  isValid() {
    const e = this.segments;
    return e.length === 0 || e[0].type === "M";
  }
  length(e = {}) {
    if (this.segments.length === 0)
      return 0;
    const t = this.getSubdivisions(e);
    let r = 0;
    for (let i = 0, o = this.segments.length; i < o; i += 1) {
      const s = this.segments[i], a = t[i];
      r += s.length({ subdivisions: a });
    }
    return r;
  }
  lengthAtT(e, t = {}) {
    const r = this.segments.length;
    if (r === 0)
      return 0;
    let i = e.segmentIndex;
    if (i < 0)
      return 0;
    let o = Xt.clamp(e.value, 0, 1);
    i >= r && (i = r - 1, o = 1);
    const s = this.getPrecision(t), a = this.getSubdivisions(t);
    let l = 0;
    for (let h = 0; h < i; h += 1) {
      const f = this.segments[h], d = a[h];
      l += f.length({ precision: s, subdivisions: d });
    }
    const u = this.segments[i], c = a[i];
    return l += u.lengthAtT(o, { precision: s, subdivisions: c }), l;
  }
  tangentAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const r = Xt.clamp(e, 0, 1), i = this.getOptions(t), s = this.length(i) * r;
    return this.tangentAtLength(s, i);
  }
  tangentAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    let r = !0;
    e < 0 && (r = !1, e = -e);
    const i = this.getPrecision(t), o = this.getSubdivisions(t);
    let s, a = 0;
    for (let l = 0, u = this.segments.length; l < u; l += 1) {
      const c = r ? l : u - 1 - l, h = this.segments[c], f = o[c], d = h.length({ precision: i, subdivisions: f });
      if (h.isDifferentiable()) {
        if (e <= a + d)
          return h.tangentAtLength((r ? 1 : -1) * (e - a), {
            precision: i,
            subdivisions: f
          });
        s = h;
      }
      a += d;
    }
    if (s) {
      const l = r ? 1 : 0;
      return s.tangentAtT(l);
    }
    return null;
  }
  tangentAtT(e) {
    const t = this.segments.length;
    if (t === 0)
      return null;
    const r = e.segmentIndex;
    if (r < 0)
      return this.segments[0].tangentAtT(0);
    if (r >= t)
      return this.segments[t - 1].tangentAtT(1);
    const i = Xt.clamp(e.value, 0, 1);
    return this.segments[r].tangentAtT(i);
  }
  getPrecision(e = {}) {
    return e.precision == null ? this.PRECISION : e.precision;
  }
  getSubdivisions(e = {}) {
    if (e.segmentSubdivisions == null) {
      const t = this.getPrecision(e);
      return this.getSegmentSubdivisions({ precision: t });
    }
    return e.segmentSubdivisions;
  }
  getOptions(e = {}) {
    const t = this.getPrecision(e), r = this.getSubdivisions(e);
    return { precision: t, segmentSubdivisions: r };
  }
  toPoints(e = {}) {
    const t = this.segments, r = t.length;
    if (r === 0)
      return null;
    const i = this.getSubdivisions(e), o = [];
    let s = [];
    for (let a = 0; a < r; a += 1) {
      const l = t[a];
      if (l.isVisible) {
        const u = i[a];
        u.length > 0 ? u.forEach((c) => s.push(c.start)) : s.push(l.start);
      } else
        s.length > 0 && (s.push(t[a - 1].end), o.push(s), s = []);
    }
    return s.length > 0 && (s.push(this.end), o.push(s)), o;
  }
  toPolylines(e = {}) {
    const t = this.toPoints(e);
    return t ? t.map((r) => new Oi(r)) : null;
  }
  scale(e, t, r) {
    return this.segments.forEach((i) => i.scale(e, t, r)), this;
  }
  rotate(e, t) {
    return this.segments.forEach((r) => r.rotate(e, t)), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.segments.forEach((r) => r.translate(e, t)) : this.segments.forEach((r) => r.translate(e)), this;
  }
  clone() {
    const e = new Ir();
    return this.segments.forEach((t) => e.appendSegment(t.clone())), e;
  }
  equals(e) {
    if (e == null)
      return !1;
    const t = this.segments, r = e.segments, i = t.length;
    if (r.length !== i)
      return !1;
    for (let o = 0; o < i; o += 1) {
      const s = t[o], a = r[o];
      if (s.type !== a.type || !s.equals(a))
        return !1;
    }
    return !0;
  }
  toJSON() {
    return this.segments.map((e) => e.toJSON());
  }
  serialize() {
    if (!this.isValid())
      throw new Error("Invalid path segments.");
    return this.segments.map((e) => e.serialize()).join(" ");
  }
  toString() {
    return this.serialize();
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPath = e;
})(Et || (Et = {}));
(function(n) {
  function e(r) {
    if (!r)
      return new n();
    const i = new n(), o = /(?:[a-zA-Z] *)(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)? *,? *)|(?:-?\.\d+ *,? *))+|(?:[a-zA-Z] *)(?! |\d|-|\.)/g, s = n.normalize(r).match(o);
    if (s != null)
      for (let a = 0, l = s.length; a < l; a += 1) {
        const u = s[a], c = /(?:[a-zA-Z])|(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)?))|(?:(?:-?\.\d+))/g, h = u.match(c);
        if (h != null) {
          const f = h[0], d = h.slice(1).map((g) => +g), p = t.call(null, f, ...d);
          i.appendSegment(p);
        }
      }
    return i;
  }
  n.parse = e;
  function t(r, ...i) {
    if (r === "M")
      return hg.create.call(null, ...i);
    if (r === "L")
      return yi.create.call(null, ...i);
    if (r === "C")
      return rs.create.call(null, ...i);
    if (r === "z" || r === "Z")
      return cg.create();
    throw new Error(`Invalid path segment type "${r}"`);
  }
  n.createSegment = t;
})(Et || (Et = {}));
(function(n) {
  n.normalize = Z_e, n.isValid = N_e, n.drawArc = V_e, n.drawPoints = TH, n.arcToCurves = Kw;
})(Et || (Et = {}));
class or {
  constructor(e) {
    this.options = Object.assign({}, e), this.data = this.options.data || {}, this.register = this.register.bind(this), this.unregister = this.unregister.bind(this);
  }
  get names() {
    return Object.keys(this.data);
  }
  register(e, t, r = !1) {
    if (typeof e == "object") {
      Object.entries(e).forEach(([s, a]) => {
        this.register(s, a, t);
      });
      return;
    }
    this.exist(e) && !r && !wc.isApplyingHMR() && this.onDuplicated(e);
    const i = this.options.process, o = i ? Ue(i, this, e, t) : t;
    return this.data[e] = o, o;
  }
  unregister(e) {
    const t = e ? this.data[e] : null;
    return delete this.data[e], t;
  }
  get(e) {
    return e ? this.data[e] : null;
  }
  exist(e) {
    return e ? this.data[e] != null : !1;
  }
  onDuplicated(e) {
    try {
      throw this.options.onConflict && Ue(this.options.onConflict, this, e), new Error(`${Nw(this.options.type)} with name '${e}' already registered.`);
    } catch (t) {
      throw t;
    }
  }
  onNotFound(e, t) {
    throw new Error(this.getSpellingSuggestion(e, t));
  }
  getSpellingSuggestion(e, t) {
    const r = this.getSpellingSuggestionForName(e), i = t ? `${t} ${Hhe(this.options.type)}` : this.options.type;
    return (
      // eslint-disable-next-line
      `${Nw(i)} with name '${e}' does not exist.${r ? ` Did you mean '${r}'?` : ""}`
    );
  }
  getSpellingSuggestionForName(e) {
    return ZSe(e, Object.keys(this.data), (t) => t);
  }
}
(function(n) {
  function e(t) {
    return new n(t);
  }
  n.create = e;
})(or || (or = {}));
const W_e = {
  color: "#aaaaaa",
  thickness: 1,
  markup: "rect",
  update(n, e) {
    const t = e.thickness * e.sx, r = e.thickness * e.sy;
    Qt(n, {
      width: t,
      height: r,
      rx: t,
      ry: r,
      fill: e.color
    });
  }
}, G_e = {
  color: "#aaaaaa",
  thickness: 1,
  markup: "rect",
  update(n, e) {
    const t = e.sx <= 1 ? e.thickness * e.sx : e.thickness;
    Qt(n, {
      width: t,
      height: t,
      rx: t,
      ry: t,
      fill: e.color
    });
  }
}, j_e = {
  color: "rgba(224,224,224,1)",
  thickness: 1,
  markup: "path",
  update(n, e) {
    let t;
    const r = e.width, i = e.height, o = e.thickness;
    r - o >= 0 && i - o >= 0 ? t = ["M", r, 0, "H0 M0 0 V0", i].join(" ") : t = "M 0 0 0 0", Qt(n, {
      d: t,
      stroke: e.color,
      "stroke-width": e.thickness
    });
  }
}, H_e = [
  {
    color: "rgba(224,224,224,1)",
    thickness: 1,
    markup: "path",
    update(n, e) {
      let t;
      const r = e.width, i = e.height, o = e.thickness;
      r - o >= 0 && i - o >= 0 ? t = ["M", r, 0, "H0 M0 0 V0", i].join(" ") : t = "M 0 0 0 0", Qt(n, {
        d: t,
        stroke: e.color,
        "stroke-width": e.thickness
      });
    }
  },
  {
    color: "rgba(224,224,224,0.2)",
    thickness: 3,
    factor: 4,
    markup: "path",
    update(n, e) {
      let t;
      const r = e.factor || 1, i = e.width * r, o = e.height * r, s = e.thickness;
      i - s >= 0 && o - s >= 0 ? t = ["M", i, 0, "H0 M0 0 V0", o].join(" ") : t = "M 0 0 0 0", e.width = i, e.height = o, Qt(n, {
        d: t,
        stroke: e.color,
        "stroke-width": e.thickness
      });
    }
  }
], q_e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  dot: W_e,
  doubleMesh: H_e,
  fixedDot: G_e,
  mesh: j_e
}, Symbol.toStringTag, { value: "Module" }));
let Ju = class {
  constructor() {
    this.patterns = {}, this.root = lt.create(qw(), {
      width: "100%",
      height: "100%"
    }, [ga("defs")]).node;
  }
  add(e, t) {
    const r = this.root.childNodes[0];
    r && r.appendChild(t), this.patterns[e] = t, lt.create("rect", {
      width: "100%",
      height: "100%",
      fill: `url(#${e})`
    }).appendTo(this.root);
  }
  get(e) {
    return this.patterns[e];
  }
  has(e) {
    return this.patterns[e] != null;
  }
};
(function(n) {
  n.presets = q_e, n.registry = or.create({
    type: "grid"
  }), n.registry.register(n.presets, !0);
})(Ju || (Ju = {}));
const EH = function(n) {
  const e = document.createElement("canvas"), t = n.width, r = n.height;
  e.width = t * 2, e.height = r;
  const i = e.getContext("2d");
  return i.drawImage(n, 0, 0, t, r), i.translate(2 * t, 0), i.scale(-1, 1), i.drawImage(n, 0, 0, t, r), e;
}, kH = function(n) {
  const e = document.createElement("canvas"), t = n.width, r = n.height;
  e.width = t, e.height = r * 2;
  const i = e.getContext("2d");
  return i.drawImage(n, 0, 0, t, r), i.translate(0, 2 * r), i.scale(1, -1), i.drawImage(n, 0, 0, t, r), e;
}, MH = function(n) {
  const e = document.createElement("canvas"), t = n.width, r = n.height;
  e.width = 2 * t, e.height = 2 * r;
  const i = e.getContext("2d");
  return i.drawImage(n, 0, 0, t, r), i.setTransform(-1, 0, 0, -1, e.width, e.height), i.drawImage(n, 0, 0, t, r), i.setTransform(-1, 0, 0, 1, e.width, 0), i.drawImage(n, 0, 0, t, r), i.setTransform(1, 0, 0, -1, 0, e.height), i.drawImage(n, 0, 0, t, r), e;
}, Y_e = function(n, e) {
  const t = n.width, r = n.height, i = document.createElement("canvas");
  i.width = t * 3, i.height = r * 3;
  const o = i.getContext("2d"), s = e.angle != null ? -e.angle : -20, a = Wt.toRad(s), l = i.width / 4, u = i.height / 4;
  for (let c = 0; c < 4; c += 1)
    for (let h = 0; h < 4; h += 1)
      (c + h) % 2 > 0 && (o.setTransform(1, 0, 0, 1, (2 * c - 1) * l, (2 * h - 1) * u), o.rotate(a), o.drawImage(n, -t / 2, -r / 2, t, r));
  return i;
}, X_e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  flipX: EH,
  flipXY: MH,
  flipY: kH,
  watermark: Y_e
}, Symbol.toStringTag, { value: "Module" }));
var Wy;
(function(n) {
  n.presets = Object.assign({}, X_e), n.presets["flip-x"] = EH, n.presets["flip-y"] = kH, n.presets["flip-xy"] = MH, n.registry = or.create({
    type: "background pattern"
  }), n.registry.register(n.presets, !0);
})(Wy || (Wy = {}));
function _L(n, e) {
  return n ?? e;
}
function zr(n, e) {
  return n != null && Number.isFinite(n) ? n : e;
}
function U_e(n = {}) {
  const e = _L(n.color, "blue"), t = zr(n.width, 1), r = zr(n.margin, 2), i = zr(n.opacity, 1), o = r, s = r + t;
  return `
    <filter>
      <feFlood flood-color="${e}" flood-opacity="${i}" result="colored"/>
      <feMorphology in="SourceAlpha" result="morphedOuter" operator="dilate" radius="${s}" />
      <feMorphology in="SourceAlpha" result="morphedInner" operator="dilate" radius="${o}" />
      <feComposite result="morphedOuterColored" in="colored" in2="morphedOuter" operator="in"/>
      <feComposite operator="xor" in="morphedOuterColored" in2="morphedInner" result="outline"/>
      <feMerge>
        <feMergeNode in="outline"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  `.trim();
}
function K_e(n = {}) {
  const e = _L(n.color, "red"), t = zr(n.blur, 0), r = zr(n.width, 1), i = zr(n.opacity, 1);
  return `
      <filter>
        <feFlood flood-color="${e}" flood-opacity="${i}" result="colored"/>
        <feMorphology result="morphed" in="SourceGraphic" operator="dilate" radius="${r}"/>
        <feComposite result="composed" in="colored" in2="morphed" operator="in"/>
        <feGaussianBlur result="blured" in="composed" stdDeviation="${t}"/>
        <feBlend in="SourceGraphic" in2="blured" mode="normal"/>
      </filter>
    `.trim();
}
function J_e(n = {}) {
  const e = zr(n.x, 2);
  return `
    <filter>
      <feGaussianBlur stdDeviation="${n.y != null && Number.isFinite(n.y) ? [e, n.y] : e}"/>
    </filter>
  `.trim();
}
function eCe(n = {}) {
  const e = zr(n.dx, 0), t = zr(n.dy, 0), r = _L(n.color, "black"), i = zr(n.blur, 4), o = zr(n.opacity, 1);
  return "SVGFEDropShadowElement" in window ? `<filter>
         <feDropShadow stdDeviation="${i}" dx="${e}" dy="${t}" flood-color="${r}" flood-opacity="${o}" />
       </filter>`.trim() : `<filter>
         <feGaussianBlur in="SourceAlpha" stdDeviation="${i}" />
         <feOffset dx="${e}" dy="${t}" result="offsetblur" />
         <feFlood flood-color="${r}" />
         <feComposite in2="offsetblur" operator="in" />
         <feComponentTransfer>
           <feFuncA type="linear" slope="${o}" />
         </feComponentTransfer>
         <feMerge>
           <feMergeNode/>
           <feMergeNode in="SourceGraphic"/>
         </feMerge>
       </filter>`.trim();
}
function tCe(n = {}) {
  const e = zr(n.amount, 1), t = 0.2126 + 0.7874 * (1 - e), r = 0.7152 - 0.7152 * (1 - e), i = 0.0722 - 0.0722 * (1 - e), o = 0.2126 - 0.2126 * (1 - e), s = 0.7152 + 0.2848 * (1 - e), a = 0.0722 - 0.0722 * (1 - e), l = 0.2126 - 0.2126 * (1 - e), u = 0.0722 + 0.9278 * (1 - e);
  return `
    <filter>
      <feColorMatrix type="matrix" values="${t} ${r} ${i} 0 0 ${o} ${s} ${a} 0 0 ${l} ${r} ${u} 0 0 0 0 0 1 0"/>
    </filter>
  `.trim();
}
function nCe(n = {}) {
  const e = zr(n.amount, 1), t = 0.393 + 0.607 * (1 - e), r = 0.769 - 0.769 * (1 - e), i = 0.189 - 0.189 * (1 - e), o = 0.349 - 0.349 * (1 - e), s = 0.686 + 0.314 * (1 - e), a = 0.168 - 0.168 * (1 - e), l = 0.272 - 0.272 * (1 - e), u = 0.534 - 0.534 * (1 - e), c = 0.131 + 0.869 * (1 - e);
  return `
      <filter>
        <feColorMatrix type="matrix" values="${t} ${r} ${i} 0 0 ${o} ${s} ${a} 0 0 ${l} ${u} ${c} 0 0 0 0 0 1 0"/>
      </filter>
    `.trim();
}
function rCe(n = {}) {
  return `
      <filter>
        <feColorMatrix type="saturate" values="${1 - zr(n.amount, 1)}"/>
      </filter>
    `.trim();
}
function iCe(n = {}) {
  return `
      <filter>
        <feColorMatrix type="hueRotate" values="${zr(n.angle, 0)}"/>
      </filter>
    `.trim();
}
function oCe(n = {}) {
  const e = zr(n.amount, 1), t = 1 - e;
  return `
      <filter>
        <feComponentTransfer>
          <feFuncR type="table" tableValues="${e} ${t}"/>
          <feFuncG type="table" tableValues="${e} ${t}"/>
          <feFuncB type="table" tableValues="${e} ${t}"/>
        </feComponentTransfer>
      </filter>
    `.trim();
}
function sCe(n = {}) {
  const e = zr(n.amount, 1);
  return `
    <filter>
      <feComponentTransfer>
        <feFuncR type="linear" slope="${e}"/>
        <feFuncG type="linear" slope="${e}"/>
        <feFuncB type="linear" slope="${e}"/>
      </feComponentTransfer>
    </filter>
  `.trim();
}
function aCe(n = {}) {
  const e = zr(n.amount, 1), t = 0.5 - e / 2;
  return `
    <filter>
     <feComponentTransfer>
        <feFuncR type="linear" slope="${e}" intercept="${t}"/>
        <feFuncG type="linear" slope="${e}" intercept="${t}"/>
        <feFuncB type="linear" slope="${e}" intercept="${t}"/>
      </feComponentTransfer>
    </filter>
  `.trim();
}
const lCe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  blur: J_e,
  brightness: sCe,
  contrast: aCe,
  dropShadow: eCe,
  grayScale: tCe,
  highlight: K_e,
  hueRotate: iCe,
  invert: oCe,
  outline: U_e,
  saturate: rCe,
  sepia: nCe
}, Symbol.toStringTag, { value: "Module" }));
var fg;
(function(n) {
  n.presets = lCe, n.registry = or.create({
    type: "filter"
  }), n.registry.register(n.presets, !0);
})(fg || (fg = {}));
const uCe = {
  xlinkHref: "xlink:href",
  xlinkShow: "xlink:show",
  xlinkRole: "xlink:role",
  xlinkType: "xlink:type",
  xlinkArcrole: "xlink:arcrole",
  xlinkTitle: "xlink:title",
  xlinkActuate: "xlink:actuate",
  xmlSpace: "xml:space",
  xmlBase: "xml:base",
  xmlLang: "xml:lang",
  preserveAspectRatio: "preserveAspectRatio",
  requiredExtension: "requiredExtension",
  requiredFeatures: "requiredFeatures",
  systemLanguage: "systemLanguage",
  externalResourcesRequired: "externalResourceRequired"
}, cCe = {
  // We do not set `ref` attribute directly on an element.
  // The attribute itself does not qualify for relative positioning.
}, DH = {
  position: c_("x", "width", "origin")
}, LH = {
  position: c_("y", "height", "origin")
}, hCe = {
  position: c_("x", "width", "corner")
}, fCe = {
  position: c_("y", "height", "corner")
}, IH = {
  set: Cc("width", "width")
}, RH = {
  set: Cc("height", "height")
}, dCe = {
  set: Cc("rx", "width")
}, pCe = {
  set: Cc("ry", "height")
}, $H = {
  set: ((n) => {
    const e = Cc(n, "width"), t = Cc(n, "height");
    return function(r, i) {
      const o = i.refBBox, s = o.height > o.width ? e : t;
      return Ue(s, this, r, i);
    };
  })("r")
}, gCe = {
  set(n, { refBBox: e }) {
    let t = parseFloat(n);
    const r = Kl(n);
    r && (t /= 100);
    const i = Math.sqrt(e.height * e.height + e.width * e.width);
    let o;
    return Number.isFinite(t) && (r || t >= 0 && t <= 1 ? o = t * i : o = Math.max(t + i, 0)), { r: o };
  }
}, vCe = {
  set: Cc("cx", "width")
}, mCe = {
  set: Cc("cy", "height")
}, NH = {
  set: zH({ resetOffset: !0 })
}, yCe = {
  set: zH({ resetOffset: !1 })
}, BH = {
  set: FH({ resetOffset: !0 })
}, bCe = {
  set: FH({ resetOffset: !1 })
}, OCe = $H, wCe = NH, xCe = BH, SCe = DH, _Ce = LH, CCe = IH, ACe = RH;
function c_(n, e, t) {
  return (r, { refBBox: i }) => {
    if (r == null)
      return null;
    let o = parseFloat(r);
    const s = Kl(r);
    s && (o /= 100);
    let a;
    if (Number.isFinite(o)) {
      const u = i[t];
      s || o > 0 && o < 1 ? a = u[n] + i[e] * o : a = u[n] + o;
    }
    const l = new W();
    return l[n] = a || 0, l;
  };
}
function Cc(n, e) {
  return function(t, { refBBox: r }) {
    let i = parseFloat(t);
    const o = Kl(t);
    o && (i /= 100);
    const s = {};
    if (Number.isFinite(i)) {
      const a = o || i >= 0 && i <= 1 ? i * r[e] : Math.max(i + r[e], 0);
      s[n] = a;
    }
    return s;
  };
}
function VH(n, e) {
  const t = "x6-shape", r = e && e.resetOffset;
  return function(i, { elem: o, refBBox: s }) {
    let a = Wf(o, t);
    if (!a || a.value !== i) {
      const g = n(i);
      a = {
        value: i,
        shape: g,
        shapeBBox: g.bbox()
      }, Wf(o, t, a);
    }
    const l = a.shape.clone(), u = a.shapeBBox.clone(), c = u.getOrigin(), h = s.getOrigin();
    u.x = h.x, u.y = h.y;
    const f = s.getMaxScaleToFit(u, h), d = u.width === 0 || s.width === 0 ? 1 : f.sx, p = u.height === 0 || s.height === 0 ? 1 : f.sy;
    return l.scale(d, p, c), r && l.translate(-c.x, -c.y), l;
  };
}
function zH(n) {
  function e(r) {
    return Et.parse(r);
  }
  const t = VH(e, n);
  return (r, i) => ({
    d: t(r, i).serialize()
  });
}
function FH(n) {
  const e = VH((t) => new Oi(t), n);
  return (t, r) => ({
    points: e(t, r).serialize()
  });
}
const TCe = {
  qualify: ha,
  set(n, { view: e }) {
    return `url(#${e.graph.defineGradient(n)})`;
  }
}, PCe = {
  qualify: ha,
  set(n, { view: e }) {
    const t = e.cell, r = Object.assign({}, n);
    if (t.isEdge() && r.type === "linearGradient") {
      const i = e, o = i.sourcePoint, s = i.targetPoint;
      r.id = `gradient-${r.type}-${t.id}`, r.attrs = Object.assign(Object.assign({}, r.attrs), { x1: o.x, y1: o.y, x2: s.x, y2: s.y, gradientUnits: "userSpaceOnUse" }), e.graph.defs.remove(r.id);
    }
    return `url(#${e.graph.defineGradient(r)})`;
  }
}, QH = {
  qualify(n, { attrs: e }) {
    return e.textWrap == null || !ha(e.textWrap);
  },
  set(n, { view: e, elem: t, attrs: r }) {
    const i = "x6-text", o = Wf(t, i), s = (c) => {
      try {
        return JSON.parse(c);
      } catch {
        return c;
      }
    }, a = {
      x: r.x,
      eol: r.eol,
      annotations: s(r.annotations),
      textPath: s(r["text-path"] || r.textPath),
      textVerticalAnchor: r["text-vertical-anchor"] || r.textVerticalAnchor,
      displayEmpty: (r["display-empty"] || r.displayEmpty) === "true",
      lineHeight: r["line-height"] || r.lineHeight
    }, l = r["font-size"] || r.fontSize, u = JSON.stringify([n, a]);
    if (l && t.setAttribute("font-size", l), o == null || o !== u) {
      const c = a.textPath;
      if (c != null && typeof c == "object") {
        const h = c.selector;
        if (typeof h == "string") {
          const f = e.find(h)[0];
          f instanceof SVGPathElement && (yL(f), a.textPath = Object.assign({ "xlink:href": `#${f.id}` }, c));
        }
      }
      bH(t, `${n}`, a), Wf(t, i, u);
    }
  }
}, ECe = {
  qualify: ha,
  set(n, { view: e, elem: t, attrs: r, refBBox: i }) {
    const o = n, s = o.width || 0;
    Kl(s) ? i.width *= parseFloat(s) / 100 : s <= 0 ? i.width += s : i.width = s;
    const a = o.height || 0;
    Kl(a) ? i.height *= parseFloat(a) / 100 : a <= 0 ? i.height += a : i.height = a;
    let l, u = o.text;
    u == null && (u = r.text || (t == null ? void 0 : t.textContent)), u != null ? l = OH(`${u}`, i, {
      "font-weight": r["font-weight"] || r.fontWeight,
      "font-size": r["font-size"] || r.fontSize,
      "font-family": r["font-family"] || r.fontFamily,
      lineHeight: r.lineHeight
    }, {
      // svgDocument: view.graph.view.svg,
      ellipsis: o.ellipsis
      // hyphen: info.hyphen as string,
      // breakWord: info.breakWord as boolean,
    }) : l = "", Ue(QH.set, this, l, {
      view: e,
      elem: t,
      attrs: r,
      refBBox: i,
      cell: e.cell
    });
  }
}, ev = (n, { attrs: e }) => e.text !== void 0, kCe = {
  qualify: ev
}, MCe = {
  qualify: ev
}, DCe = {
  qualify: ev
}, LCe = {
  qualify: ev
}, ICe = {
  qualify: ev
}, RCe = {
  qualify: ev
}, $Ce = {
  qualify(n, { elem: e }) {
    return e instanceof SVGElement;
  },
  set(n, { elem: e }) {
    const t = "x6-title", r = `${n}`, i = Wf(e, t);
    if (i == null || i !== r) {
      Wf(e, t, r);
      const o = e.firstChild;
      if (o && o.tagName.toUpperCase() === "TITLE") {
        const s = o;
        s.textContent = r;
      } else {
        const s = document.createElementNS(e.namespaceURI, "title");
        s.textContent = r, e.insertBefore(s, o);
      }
    }
  }
}, NCe = {
  offset: ZH("x", "width", "right")
}, BCe = {
  offset: ZH("y", "height", "bottom")
}, VCe = {
  offset(n, { refBBox: e }) {
    return n ? { x: -e.x, y: -e.y } : { x: 0, y: 0 };
  }
};
function ZH(n, e, t) {
  return (r, { refBBox: i }) => {
    const o = new W();
    let s;
    return r === "middle" ? s = i[e] / 2 : r === t ? s = i[e] : typeof r == "number" && Number.isFinite(r) ? s = r > -1 && r < 1 ? -i[e] * r : -r : Kl(r) ? s = i[e] * parseFloat(r) / 100 : s = 0, o[n] = -(i[n] + s), o;
  };
}
const zCe = {
  qualify: ha,
  set(n, { elem: e }) {
    xr(e, n);
  }
}, FCe = {
  set(n, { elem: e }) {
    e.innerHTML = `${n}`;
  }
}, QCe = {
  qualify: ha,
  set(n, { view: e }) {
    return `url(#${e.graph.defineFilter(n)})`;
  }
}, ZCe = {
  set(n) {
    return n != null && typeof n == "object" && n.id ? n.id : n;
  }
};
function eh(n, e, t) {
  let r, i;
  typeof e == "object" ? (r = e.x, i = e.y) : (r = e, i = t);
  const o = Et.parse(n), s = o.bbox();
  if (s) {
    let a = -s.height / 2 - s.y, l = -s.width / 2 - s.x;
    typeof r == "number" && (l -= r), typeof i == "number" && (a -= i), o.translate(l, a);
  }
  return o.serialize();
}
var WH = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const WCe = (n) => {
  var { size: e, width: t, height: r, offset: i, open: o } = n, s = WH(n, ["size", "width", "height", "offset", "open"]);
  return GH({ size: e, width: t, height: r, offset: i }, o === !0, !0, void 0, s);
}, GCe = (n) => {
  var { size: e, width: t, height: r, offset: i, factor: o } = n, s = WH(n, ["size", "width", "height", "offset", "factor"]);
  return GH({ size: e, width: t, height: r, offset: i }, !1, !1, o, s);
};
function GH(n, e, t, r = 3 / 4, i = {}) {
  const o = n.size || 10, s = n.width || o, a = n.height || o, l = new Et(), u = {};
  if (e)
    l.moveTo(s, 0).lineTo(0, a / 2).lineTo(s, a), u.fill = "none";
  else {
    if (l.moveTo(0, a / 2), l.lineTo(s, 0), !t) {
      const c = so(r, 0, 1);
      l.lineTo(s * c, a / 2);
    }
    l.lineTo(s, a), l.close();
  }
  return Object.assign(Object.assign(Object.assign({}, u), i), { tagName: "path", d: eh(l.serialize(), {
    x: n.offset != null ? n.offset : -s / 2
  }) });
}
var jCe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const HCe = (n) => {
  var { size: e, width: t, height: r, offset: i } = n, o = jCe(n, ["size", "width", "height", "offset"]);
  const s = e || 10, a = t || s, l = r || s, u = new Et();
  return u.moveTo(0, l / 2).lineTo(a / 2, 0).lineTo(a, l / 2).lineTo(a / 2, l).close(), Object.assign(Object.assign({}, o), { tagName: "path", d: eh(u.serialize(), i ?? -a / 2) });
};
var qCe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const YCe = (n) => {
  var { d: e, offsetX: t, offsetY: r } = n, i = qCe(n, ["d", "offsetX", "offsetY"]);
  return Object.assign(Object.assign({}, i), { tagName: "path", d: eh(e, t, r) });
};
var XCe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const UCe = (n) => {
  var { size: e, width: t, height: r, offset: i } = n, o = XCe(n, ["size", "width", "height", "offset"]);
  const s = e || 10, a = t || s, l = r || s, u = new Et();
  return u.moveTo(0, 0).lineTo(a, l).moveTo(0, l).lineTo(a, 0), Object.assign(Object.assign({}, o), { tagName: "path", fill: "none", d: eh(u.serialize(), i || -a / 2) });
};
var KCe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const JCe = (n) => {
  var { width: e, height: t, offset: r, open: i, flip: o } = n, s = KCe(n, ["width", "height", "offset", "open", "flip"]);
  let a = t || 6;
  const l = e || 10, u = i === !0, c = o === !0, h = Object.assign(Object.assign({}, s), { tagName: "path" });
  c && (a = -a);
  const f = new Et();
  return f.moveTo(0, a).lineTo(l, 0), u ? h.fill = "none" : (f.lineTo(l, a), f.close()), h.d = eh(f.serialize(), {
    x: r || -l / 2,
    y: a / 2
  }), h;
};
var jH = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const HH = (n) => {
  var { r: e } = n, t = jH(n, ["r"]);
  const r = e || 5;
  return Object.assign(Object.assign({ cx: r }, t), { tagName: "circle", r });
}, e2e = (n) => {
  var { r: e } = n, t = jH(n, ["r"]);
  const r = e || 5, i = new Et();
  return i.moveTo(r, 0).lineTo(r, r * 2), i.moveTo(0, r).lineTo(r * 2, r), {
    children: [
      Object.assign(Object.assign({}, HH({ r })), { fill: "none" }),
      Object.assign(Object.assign({}, t), { tagName: "path", d: eh(i.serialize(), -r) })
    ]
  };
};
var t2e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const n2e = (n) => {
  var { rx: e, ry: t } = n, r = t2e(n, ["rx", "ry"]);
  const i = e || 5, o = t || 5;
  return Object.assign(Object.assign({ cx: i }, r), { tagName: "ellipse", rx: i, ry: o });
}, r2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  async: JCe,
  block: WCe,
  circle: HH,
  circlePlus: e2e,
  classic: GCe,
  cross: UCe,
  diamond: HCe,
  ellipse: n2e,
  path: YCe
}, Symbol.toStringTag, { value: "Module" }));
var Ac;
(function(n) {
  n.presets = r2e, n.registry = or.create({
    type: "marker"
  }), n.registry.register(n.presets, !0);
})(Ac || (Ac = {}));
(function(n) {
  n.normalize = eh;
})(Ac || (Ac = {}));
var i2e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
function CL(n) {
  return typeof n == "string" || ha(n);
}
const o2e = {
  qualify: CL,
  set(n, { view: e, attrs: t }) {
    return AL("marker-start", n, e, t);
  }
}, s2e = {
  qualify: CL,
  set(n, { view: e, attrs: t }) {
    return AL("marker-end", n, e, t, {
      transform: "rotate(180)"
    });
  }
}, a2e = {
  qualify: CL,
  set(n, { view: e, attrs: t }) {
    return AL("marker-mid", n, e, t);
  }
};
function AL(n, e, t, r, i = {}) {
  const o = typeof e == "string" ? { name: e } : e, { name: s, args: a } = o, l = i2e(o, ["name", "args"]);
  let u = l;
  if (s && typeof s == "string") {
    const h = Ac.registry.get(s);
    if (h)
      u = h(Object.assign(Object.assign({}, l), a));
    else
      return Ac.registry.onNotFound(s);
  }
  const c = Object.assign(Object.assign(Object.assign({}, l2e(r, n)), i), u);
  return {
    [n]: `url(#${t.graph.defineMarker(c)})`
  };
}
function l2e(n, e) {
  const t = {}, r = n.stroke;
  typeof r == "string" && (t.stroke = r, t.fill = r);
  let i = n.strokeOpacity;
  if (i == null && (i = n["stroke-opacity"]), i == null && (i = n.opacity), i != null && (t["stroke-opacity"] = i, t["fill-opacity"] = i), e !== "marker-mid") {
    const o = parseFloat(n.strokeWidth || n["stroke-width"]);
    if (Number.isFinite(o) && o > 1) {
      const s = Math.ceil(o / 2);
      t.refX = e === "marker-start" ? s : -s;
    }
  }
  return t;
}
const ub = (n, { view: e }) => e.cell.isEdge(), u2e = {
  qualify: ub,
  set(n, e) {
    var t, r, i, o;
    const s = e.view, a = n.reverse || !1, l = n.stubs || 0;
    let u;
    if (Number.isFinite(l) && l !== 0)
      if (a) {
        let c, h;
        const f = s.getConnectionLength() || 0;
        l < 0 ? (c = (f + l) / 2, h = -l) : (c = l, h = f - l * 2);
        const d = s.getConnection();
        u = (o = (i = (r = (t = d == null ? void 0 : d.divideAtLength(c)) === null || t === void 0 ? void 0 : t[1]) === null || r === void 0 ? void 0 : r.divideAtLength(h)) === null || i === void 0 ? void 0 : i[0]) === null || o === void 0 ? void 0 : o.serialize();
      } else {
        let c;
        l < 0 ? c = ((s.getConnectionLength() || 0) + l) / 2 : c = l;
        const h = s.getConnection();
        if (h) {
          const f = h.divideAtLength(c), d = h.divideAtLength(-c);
          f && d && (u = `${f[0].serialize()} ${d[1].serialize()}`);
        }
      }
    return { d: u || s.getConnectionPathData() };
  }
}, qH = {
  qualify: ub,
  set: h_("getTangentAtLength", { rotate: !0 })
}, c2e = {
  qualify: ub,
  set: h_("getTangentAtLength", { rotate: !1 })
}, YH = {
  qualify: ub,
  set: h_("getTangentAtRatio", { rotate: !0 })
}, h2e = {
  qualify: ub,
  set: h_("getTangentAtRatio", { rotate: !1 })
}, f2e = qH, d2e = YH;
function h_(n, e) {
  const t = { x: 1, y: 0 };
  return (r, i) => {
    let o, s;
    const a = i.view, l = a[n](Number(r));
    return l ? (s = e.rotate ? l.vector().vectorAngle(t) : 0, o = l.start) : (o = a.path.start, s = 0), s === 0 ? { transform: `translate(${o.x},${o.y}')` } : {
      transform: `translate(${o.x},${o.y}') rotate(${s})`
    };
  };
}
const p2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  annotations: LCe,
  atConnectionLength: f2e,
  atConnectionLengthIgnoreGradient: c2e,
  atConnectionLengthKeepGradient: qH,
  atConnectionRatio: d2e,
  atConnectionRatioIgnoreGradient: h2e,
  atConnectionRatioKeepGradient: YH,
  connection: u2e,
  displayEmpty: RCe,
  eol: ICe,
  fill: TCe,
  filter: QCe,
  html: FCe,
  lineHeight: kCe,
  port: ZCe,
  ref: cCe,
  refCx: vCe,
  refCy: mCe,
  refD: wCe,
  refDKeepOffset: yCe,
  refDResetOffset: NH,
  refDx: hCe,
  refDy: fCe,
  refHeight: RH,
  refHeight2: ACe,
  refPoints: xCe,
  refPointsKeepOffset: bCe,
  refPointsResetOffset: BH,
  refR: OCe,
  refRCircumscribed: gCe,
  refRInscribed: $H,
  refRx: dCe,
  refRy: pCe,
  refWidth: IH,
  refWidth2: CCe,
  refX: DH,
  refX2: SCe,
  refY: LH,
  refY2: _Ce,
  resetOffset: VCe,
  sourceMarker: o2e,
  stroke: PCe,
  style: zCe,
  targetMarker: s2e,
  text: QH,
  textPath: DCe,
  textVerticalAnchor: MCe,
  textWrap: ECe,
  title: $Ce,
  vertexMarker: a2e,
  xAlign: NCe,
  yAlign: BCe
}, Symbol.toStringTag, { value: "Module" }));
var ul;
(function(n) {
  function e(t, r, i) {
    return !!(t != null && (typeof t == "string" || typeof t.qualify != "function" || Ue(t.qualify, this, r, i)));
  }
  n.isValidDefinition = e;
})(ul || (ul = {}));
(function(n) {
  n.presets = Object.assign(Object.assign({}, uCe), p2e), n.registry = or.create({
    type: "attribute definition"
  }), n.registry.register(n.presets, !0);
})(ul || (ul = {}));
const _s = {
  prefixCls: "x6",
  autoInsertCSS: !0,
  useCSSSelector: !0,
  prefix(n) {
    return `${_s.prefixCls}-${n}`;
  }
}, l5 = _s.prefix("highlighted"), g2e = {
  highlight(n, e, t) {
    const r = t && t.className || l5;
    rt(e, r);
  },
  unhighlight(n, e, t) {
    const r = t && t.className || l5;
    hr(e, r);
  }
}, u5 = _s.prefix("highlight-opacity"), v2e = {
  highlight(n, e) {
    rt(e, u5);
  },
  unhighlight(n, e) {
    hr(e, u5);
  }
};
var un;
(function(n) {
  n.normalizeMarker = eh;
  function e(f, d) {
    const p = S_e(f.x, f.y).matrixTransform(d);
    return new W(p.x, p.y);
  }
  n.transformPoint = e;
  function t(f, d) {
    return new Ge(e(f.start, d), e(f.end, d));
  }
  n.transformLine = t;
  function r(f, d) {
    let p = f instanceof Oi ? f.points : f;
    return Array.isArray(p) || (p = []), new Oi(p.map((g) => e(g, d)));
  }
  n.transformPolyline = r;
  function i(f, d) {
    const g = ga("svg").createSVGPoint();
    g.x = f.x, g.y = f.y;
    const v = g.matrixTransform(d);
    g.x = f.x + f.width, g.y = f.y;
    const m = g.matrixTransform(d);
    g.x = f.x + f.width, g.y = f.y + f.height;
    const y = g.matrixTransform(d);
    g.x = f.x, g.y = f.y + f.height;
    const b = g.matrixTransform(d), O = Math.min(v.x, m.x, y.x, b.x), w = Math.max(v.x, m.x, y.x, b.x), x = Math.min(v.y, m.y, y.y, b.y), S = Math.max(v.y, m.y, y.y, b.y);
    return new Se(O, x, w - O, S - x);
  }
  n.transformRectangle = i;
  function o(f, d, p) {
    let g;
    const v = f.ownerSVGElement;
    if (!v)
      return new Se(0, 0, 0, 0);
    try {
      g = f.getBBox();
    } catch {
      g = {
        x: f.clientLeft,
        y: f.clientTop,
        width: f.clientWidth,
        height: f.clientHeight
      };
    }
    if (d)
      return Se.create(g);
    const m = Km(f, p || v);
    return i(g, m);
  }
  n.bbox = o;
  function s(f, d = {}) {
    let p;
    if (!f.ownerSVGElement || !xc(f)) {
      if (J3(f)) {
        const { left: y, top: b, width: O, height: w } = a(f);
        return new Se(y, b, O, w);
      }
      return new Se(0, 0, 0, 0);
    }
    let v = d.target;
    if (!d.recursive) {
      try {
        p = f.getBBox();
      } catch {
        p = {
          x: f.clientLeft,
          y: f.clientTop,
          width: f.clientWidth,
          height: f.clientHeight
        };
      }
      if (!v)
        return Se.create(p);
      const y = Km(f, v);
      return i(p, y);
    }
    {
      const y = f.childNodes, b = y.length;
      if (b === 0)
        return s(f, {
          target: v
        });
      v || (v = f);
      for (let O = 0; O < b; O += 1) {
        const w = y[O];
        let x;
        w.childNodes.length === 0 ? x = s(w, {
          target: v
        }) : x = s(w, {
          target: v,
          recursive: !0
        }), p ? p = p.union(x) : p = x;
      }
      return p;
    }
  }
  n.getBBox = s;
  function a(f) {
    let d = 0, p = 0, g = 0, v = 0;
    if (f) {
      let m = f;
      for (; m; )
        d += m.offsetLeft, p += m.offsetTop, m = m.offsetParent, m && (d += parseInt(r5(m, "borderLeft"), 10), p += parseInt(r5(m, "borderTop"), 10));
      g = f.offsetWidth, v = f.offsetHeight;
    }
    return {
      left: d,
      top: p,
      width: g,
      height: v
    };
  }
  n.getBoundingOffsetRect = a;
  function l(f) {
    const d = (p) => {
      const g = f.getAttribute(p), v = g ? parseFloat(g) : 0;
      return Number.isNaN(v) ? 0 : v;
    };
    switch (f instanceof SVGElement && f.nodeName.toLowerCase()) {
      case "rect":
        return new Se(d("x"), d("y"), d("width"), d("height"));
      case "circle":
        return new _c(d("cx"), d("cy"), d("r"), d("r"));
      case "ellipse":
        return new _c(d("cx"), d("cy"), d("rx"), d("ry"));
      case "polyline": {
        const p = Xw(f);
        return new Oi(p);
      }
      case "polygon": {
        const p = Xw(f);
        return p.length > 1 && p.push(p[0]), new Oi(p);
      }
      case "path": {
        let p = f.getAttribute("d");
        return Et.isValid(p) || (p = Et.normalize(p)), Et.parse(p);
      }
      case "line":
        return new Ge(d("x1"), d("y1"), d("x2"), d("y2"));
    }
    return s(f);
  }
  n.toGeometryShape = l;
  function u(f, d, p, g) {
    const v = W.create(d), m = W.create(p);
    g || (g = f instanceof SVGSVGElement ? f : f.ownerSVGElement);
    const y = oE(f);
    f.setAttribute("transform", "");
    const b = s(f, {
      target: g
    }).scale(y.sx, y.sy), O = vm();
    O.setTranslate(-b.x - b.width / 2, -b.y - b.height / 2);
    const w = vm(), x = v.angleBetween(m, v.clone().translate(1, 0));
    x && w.setRotate(x, 0, 0);
    const S = vm(), _ = v.clone().move(m, b.width / 2);
    S.setTranslate(2 * v.x - _.x, 2 * v.y - _.y);
    const C = Km(f, g), A = vm();
    A.setMatrix(S.matrix.multiply(w.matrix.multiply(O.matrix.multiply(C.scale(y.sx, y.sy))))), f.setAttribute("transform", Jg(A.matrix));
  }
  n.translateAndAutoOrient = u;
  function c(f) {
    if (f == null)
      return null;
    let d = f;
    do {
      let p = d.tagName;
      if (typeof p != "string")
        return null;
      if (p = p.toUpperCase(), Kg(d, "x6-port"))
        d = d.nextElementSibling;
      else if (p === "G")
        d = d.firstElementChild;
      else if (p === "TITLE")
        d = d.nextElementSibling;
      else
        break;
    } while (d);
    return d;
  }
  n.findShapeNode = c;
  function h(f) {
    const d = c(f);
    if (!xc(d)) {
      if (J3(f)) {
        const { left: v, top: m, width: y, height: b } = a(f);
        return new Se(v, m, y, b);
      }
      return new Se(0, 0, 0, 0);
    }
    return l(d).bbox() || Se.create();
  }
  n.getBBoxV2 = h;
})(un || (un = {}));
const m2e = {
  padding: 3,
  rx: 0,
  ry: 0,
  attrs: {
    "stroke-width": 3,
    stroke: "#FEB663"
  }
}, y2e = {
  highlight(n, e, t) {
    const r = zu.getHighlighterId(e, t);
    if (zu.hasCache(r))
      return;
    t = MG({}, t, m2e);
    const i = lt.create(e);
    let o, s;
    try {
      o = i.toPathData();
    } catch {
      s = un.bbox(i.node, !0), o = xH(Object.assign(Object.assign({}, t), s));
    }
    const a = ga("path");
    if (Qt(a, Object.assign({ d: o, "pointer-events": "none", "vector-effect": "non-scaling-stroke", fill: "none" }, t.attrs ? zy(t.attrs) : null)), n.isEdgeElement(e))
      Qt(a, "d", n.getConnectionPathData());
    else {
      let c = i.getTransformToElement(n.container);
      const h = t.padding;
      if (h) {
        s == null && (s = un.bbox(i.node, !0));
        const f = s.x + s.width / 2, d = s.y + s.height / 2;
        s = un.transformRectangle(s, c);
        const p = Math.max(s.width, 1), g = Math.max(s.height, 1), v = (p + h) / p, m = (g + h) / g, y = Qr({
          a: v,
          b: 0,
          c: 0,
          d: m,
          e: f - v * f,
          f: d - m * d
        });
        c = c.multiply(y);
      }
      ug(a, c);
    }
    rt(a, _s.prefix("highlight-stroke"));
    const l = n.cell, u = () => zu.removeHighlighter(r);
    l.on("removed", u), l.model && l.model.on("reseted", u), n.container.appendChild(a), zu.setCache(r, a);
  },
  unhighlight(n, e, t) {
    zu.removeHighlighter(zu.getHighlighterId(e, t));
  }
};
var zu;
(function(n) {
  function e(s, a) {
    return yL(s), s.id + JSON.stringify(a);
  }
  n.getHighlighterId = e;
  const t = {};
  function r(s, a) {
    t[s] = a;
  }
  n.setCache = r;
  function i(s) {
    return t[s] != null;
  }
  n.hasCache = i;
  function o(s) {
    const a = t[s];
    a && (Ja(a), delete t[s]);
  }
  n.removeHighlighter = o;
})(zu || (zu = {}));
const b2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  className: g2e,
  opacity: v2e,
  stroke: y2e
}, Symbol.toStringTag, { value: "Module" }));
var Zl;
(function(n) {
  function e(t, r) {
    if (typeof r.highlight != "function")
      throw new Error(`Highlighter '${t}' is missing required \`highlight()\` method`);
    if (typeof r.unhighlight != "function")
      throw new Error(`Highlighter '${t}' is missing required \`unhighlight()\` method`);
  }
  n.check = e;
})(Zl || (Zl = {}));
(function(n) {
  n.presets = b2e, n.registry = or.create({
    type: "highlighter"
  }), n.registry.register(n.presets, !0);
})(Zl || (Zl = {}));
function cE(n, e = {}) {
  return new W(Ks(e.x, n.width), Ks(e.y, n.height));
}
function TL(n, e, t) {
  return Object.assign({ angle: e, position: n.toJSON() }, t);
}
const O2e = (n, e) => n.map(({ x: t, y: r, angle: i }) => TL(cE(e, { x: t, y: r }), i || 0)), w2e = (n, e, t) => {
  const r = t.start || 0, i = t.step || 20;
  return XH(n, e, r, (o, s) => (o + 0.5 - s / 2) * i);
}, x2e = (n, e, t) => {
  const r = t.start || 0, i = t.step || 360 / n.length;
  return XH(n, e, r, (o) => o * i);
};
function XH(n, e, t, r) {
  const i = e.getCenter(), o = e.getTopCenter(), s = e.width / e.height, a = _c.fromRect(e), l = n.length;
  return n.map((u, c) => {
    const h = t + r(c, l), f = o.clone().rotate(-h, i).scale(s, 1, i), d = u.compensateRotate ? -a.tangentTheta(f) : 0;
    return (u.dx || u.dy) && f.translate(u.dx || 0, u.dy || 0), u.dr && f.move(i, u.dr), TL(f.round(), d, u);
  });
}
var S2e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const _2e = (n, e, t) => {
  const r = cE(e, t.start || e.getOrigin()), i = cE(e, t.end || e.getCorner());
  return cb(n, r, i, t);
}, C2e = (n, e, t) => cb(n, e.getTopLeft(), e.getBottomLeft(), t), A2e = (n, e, t) => cb(n, e.getTopRight(), e.getBottomRight(), t), T2e = (n, e, t) => cb(n, e.getTopLeft(), e.getTopRight(), t), P2e = (n, e, t) => cb(n, e.getBottomLeft(), e.getBottomRight(), t);
function cb(n, e, t, r) {
  const i = new Ge(e, t), o = n.length;
  return n.map((s, a) => {
    var { strict: l } = s, u = S2e(s, ["strict"]);
    const c = l || r.strict ? (a + 1) / (o + 1) : (a + 0.5) / o, h = i.pointAt(c);
    return (u.dx || u.dy) && h.translate(u.dx || 0, u.dy || 0), TL(h.round(), 0, u);
  });
}
const E2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  absolute: O2e,
  bottom: P2e,
  ellipse: w2e,
  ellipseSpread: x2e,
  left: C2e,
  line: _2e,
  right: A2e,
  top: T2e
}, Symbol.toStringTag, { value: "Module" }));
var _f;
(function(n) {
  n.presets = E2e, n.registry = or.create({
    type: "port layout"
  }), n.registry.register(n.presets, !0);
})(_f || (_f = {}));
const k2e = {
  position: { x: 0, y: 0 },
  angle: 0,
  attrs: {
    ".": {
      y: "0",
      "text-anchor": "start"
    }
  }
};
function th(n, e) {
  const { x: t, y: r, angle: i, attrs: o } = e || {};
  return MG({}, { angle: i, attrs: o, position: { x: t, y: r } }, n, k2e);
}
const M2e = (n, e, t) => th({ position: e.getTopLeft() }, t), D2e = (n, e, t) => th({
  position: { x: -15, y: 0 },
  attrs: { ".": { y: ".3em", "text-anchor": "end" } }
}, t), L2e = (n, e, t) => th({
  position: { x: 15, y: 0 },
  attrs: { ".": { y: ".3em", "text-anchor": "start" } }
}, t), I2e = (n, e, t) => th({
  position: { x: 0, y: -15 },
  attrs: { ".": { "text-anchor": "middle" } }
}, t), R2e = (n, e, t) => th({
  position: { x: 0, y: 15 },
  attrs: { ".": { y: ".6em", "text-anchor": "middle" } }
}, t), $2e = (n, e, t) => UH(n, e, !1, t), N2e = (n, e, t) => UH(n, e, !0, t), B2e = (n, e, t) => KH(n, e, !1, t), V2e = (n, e, t) => KH(n, e, !0, t);
function UH(n, e, t, r) {
  const i = r.offset != null ? r.offset : 15, o = e.getCenter().theta(n), s = JH(e);
  let a, l, u, c, h = 0;
  return o < s[1] || o > s[2] ? (a = ".3em", l = i, u = 0, c = "start") : o < s[0] ? (a = "0", l = 0, u = -i, t ? (h = -90, c = "start") : c = "middle") : o < s[3] ? (a = ".3em", l = -i, u = 0, c = "end") : (a = ".6em", l = 0, u = i, t ? (h = 90, c = "start") : c = "middle"), th({
    position: {
      x: Math.round(l),
      y: Math.round(u)
    },
    angle: h,
    attrs: {
      ".": {
        y: a,
        "text-anchor": c
      }
    }
  }, r);
}
function KH(n, e, t, r) {
  const i = r.offset != null ? r.offset : 15, o = e.getCenter().theta(n), s = JH(e);
  let a, l, u, c, h = 0;
  return o < s[1] || o > s[2] ? (a = ".3em", l = -i, u = 0, c = "end") : o < s[0] ? (a = ".6em", l = 0, u = i, t ? (h = 90, c = "start") : c = "middle") : o < s[3] ? (a = ".3em", l = i, u = 0, c = "start") : (a = "0em", l = 0, u = -i, t ? (h = -90, c = "start") : c = "middle"), th({
    position: {
      x: Math.round(l),
      y: Math.round(u)
    },
    angle: h,
    attrs: {
      ".": {
        y: a,
        "text-anchor": c
      }
    }
  }, r);
}
function JH(n) {
  const e = n.getCenter(), t = e.theta(n.getTopLeft()), r = e.theta(n.getBottomLeft()), i = e.theta(n.getBottomRight()), o = e.theta(n.getTopRight());
  return [t, o, i, r];
}
const z2e = (n, e, t) => eq(n.diff(e.getCenter()), !1, t), F2e = (n, e, t) => eq(n.diff(e.getCenter()), !0, t);
function eq(n, e, t) {
  const r = t.offset != null ? t.offset : 20, i = new W(0, 0), o = -n.theta(i), s = n.clone().move(i, r).diff(n).round();
  let a = ".3em", l, u = o;
  return (o + 90) % 180 === 0 ? (l = e ? "end" : "middle", !e && o === -270 && (a = "0em")) : o > -270 && o < -90 ? (l = "start", u = o - 180) : l = "end", th({
    position: s.round().toJSON(),
    angle: e ? u : 0,
    attrs: {
      ".": {
        y: a,
        "text-anchor": l
      }
    }
  }, t);
}
const Q2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bottom: R2e,
  inside: B2e,
  insideOriented: V2e,
  left: D2e,
  manual: M2e,
  outside: $2e,
  outsideOriented: N2e,
  radial: z2e,
  radialOriented: F2e,
  right: L2e,
  top: I2e
}, Symbol.toStringTag, { value: "Module" }));
var dg;
(function(n) {
  n.presets = Q2e, n.registry = or.create({
    type: "port label layout"
  }), n.registry.register(n.presets, !0);
})(dg || (dg = {}));
var Z2e = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let xn = class ym extends Fn {
  get priority() {
    return 2;
  }
  /** If need remove `this.container` DOM */
  get disposeContainer() {
    return !0;
  }
  constructor() {
    super(), this.cid = hE.uniqueId(), ym.views[this.cid] = this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  confirmUpdate(e, t) {
    return 0;
  }
  empty(e = this.container) {
    return lb(e), this;
  }
  unmount(e = this.container) {
    return Ja(e), this;
  }
  remove(e = this.container) {
    return e === this.container ? (this.removeEventListeners(document), this.onRemove(), delete ym.views[this.cid], this.disposeContainer && this.unmount(e)) : this.unmount(e), this;
  }
  onRemove() {
  }
  setClass(e, t = this.container) {
    t.classList.value = Array.isArray(e) ? e.join(" ") : e;
  }
  addClass(e, t = this.container) {
    return rt(t, Array.isArray(e) ? e.join(" ") : e), this;
  }
  removeClass(e, t = this.container) {
    return hr(t, Array.isArray(e) ? e.join(" ") : e), this;
  }
  setStyle(e, t = this.container) {
    return xr(t, e), this;
  }
  setAttrs(e, t = this.container) {
    return e != null && t != null && Qt(t, e), this;
  }
  /**
   * Returns the value of the specified attribute of `node`.
   *
   * If the node does not set a value for attribute, start recursing up
   * the DOM tree from node to lookup for attribute at the ancestors of
   * node. If the recursion reaches CellView's root node and attribute
   * is not found even there, return `null`.
   */
  findAttr(e, t = this.container) {
    let r = t;
    for (; r && r.nodeType === 1; ) {
      const i = r.getAttribute(e);
      if (i != null)
        return i;
      if (r === this.container)
        return null;
      r = r.parentNode;
    }
    return null;
  }
  find(e, t = this.container, r = this.selectors) {
    return ym.find(e, t, r).elems;
  }
  findOne(e, t = this.container, r = this.selectors) {
    const i = this.find(e, t, r);
    return i.length > 0 ? i[0] : null;
  }
  findByAttr(e, t = this.container) {
    let r = t;
    for (; r && r.getAttribute; ) {
      const i = r.getAttribute(e);
      if ((i != null || r === this.container) && i !== "false")
        return r;
      r = r.parentNode;
    }
    return null;
  }
  getSelector(e, t) {
    let r;
    if (e === this.container)
      return typeof t == "string" && (r = `> ${t}`), r;
    if (e) {
      const i = OL(e) + 1;
      r = `${e.tagName.toLowerCase()}:nth-child(${i})`, t && (r += ` > ${t}`), r = this.getSelector(e.parentNode, r);
    }
    return r;
  }
  prefixClassName(e) {
    return _s.prefix(e);
  }
  delegateEvents(e, t) {
    if (e == null)
      return this;
    t || this.undelegateEvents();
    const r = /^(\S+)\s*(.*)$/;
    return Object.keys(e).forEach((i) => {
      const o = i.match(r);
      if (o == null)
        return;
      const s = this.getEventHandler(e[i]);
      typeof s == "function" && this.delegateEvent(o[1], o[2], s);
    }), this;
  }
  undelegateEvents() {
    return qr.off(this.container, this.getEventNamespace()), this;
  }
  delegateDocumentEvents(e, t) {
    return this.addEventListeners(document, e, t), this;
  }
  undelegateDocumentEvents() {
    return this.removeEventListeners(document), this;
  }
  delegateEvent(e, t, r) {
    return qr.on(this.container, e + this.getEventNamespace(), t, r), this;
  }
  undelegateEvent(e, t, r) {
    const i = e + this.getEventNamespace();
    return t == null ? qr.off(this.container, i) : typeof t == "string" ? qr.off(this.container, i, t, r) : qr.off(this.container, i, t), this;
  }
  addEventListeners(e, t, r) {
    if (t == null)
      return this;
    const i = this.getEventNamespace();
    return Object.keys(t).forEach((o) => {
      const s = this.getEventHandler(t[o]);
      typeof s == "function" && qr.on(e, o + i, r, s);
    }), this;
  }
  removeEventListeners(e) {
    return e != null && qr.off(e, this.getEventNamespace()), this;
  }
  getEventNamespace() {
    return `.${_s.prefixCls}-event-${this.cid}`;
  }
  // eslint-disable-next-line
  getEventHandler(e) {
    let t;
    if (typeof e == "string") {
      const r = this[e];
      typeof r == "function" && (t = (...i) => r.call(this, ...i));
    } else
      t = (...r) => e.call(this, ...r);
    return t;
  }
  getEventTarget(e, t = {}) {
    const { target: r, type: i, clientX: o = 0, clientY: s = 0 } = e;
    return t.fromPoint || i === "touchmove" || i === "touchend" ? document.elementFromPoint(o, s) : r;
  }
  stopPropagation(e) {
    return this.setEventData(e, { propagationStopped: !0 }), this;
  }
  isPropagationStopped(e) {
    return this.getEventData(e).propagationStopped === !0;
  }
  getEventData(e) {
    return this.eventData(e);
  }
  setEventData(e, t) {
    return this.eventData(e, t);
  }
  eventData(e, t) {
    if (e == null)
      throw new TypeError("Event object required");
    let r = e.data;
    const i = `__${this.cid}__`;
    return t == null ? r == null ? {} : r[i] || {} : (r == null && (r = e.data = {}), r[i] == null ? r[i] = Object.assign({}, t) : r[i] = Object.assign(Object.assign({}, r[i]), t), r[i]);
  }
  normalizeEvent(e) {
    return ym.normalizeEvent(e);
  }
  dispose() {
    this.remove();
  }
};
Z2e([
  xn.dispose()
], xn.prototype, "dispose", null);
(function(n) {
  function e(i, o) {
    return o ? ga(i || "g") : bL(i || "div");
  }
  n.createElement = e;
  function t(i, o, s) {
    if (!i || i === ".")
      return { elems: [o] };
    if (s) {
      const a = s[i];
      if (a)
        return { elems: Array.isArray(a) ? a : [a] };
    }
    {
      const a = i.includes(">") ? `:scope ${i}` : i;
      return {
        isCSSSelector: !0,
        // $(rootElem).find(selector).toArray() as Element[]
        elems: Array.prototype.slice.call(o.querySelectorAll(a))
      };
    }
  }
  n.find = t;
  function r(i) {
    let o = i;
    const s = i.originalEvent, a = s && s.changedTouches && s.changedTouches[0];
    if (a) {
      for (const l in i)
        a[l] === void 0 && (a[l] = i[l]);
      o = a;
    }
    return o;
  }
  n.normalizeEvent = r;
})(xn || (xn = {}));
(function(n) {
  n.views = {};
  function e(t) {
    return n.views[t] || null;
  }
  n.getView = e;
})(xn || (xn = {}));
var hE;
(function(n) {
  let e = 0;
  function t() {
    const r = `v${e}`;
    return e += 1, r;
  }
  n.uniqueId = t;
})(hE || (hE = {}));
class W2e {
  constructor(e) {
    this.view = e, this.clean();
  }
  clean() {
    this.elemCache && this.elemCache.dispose(), this.elemCache = new lE(), this.pathCache = {};
  }
  get(e) {
    return this.elemCache.has(e) || this.elemCache.set(e, {}), this.elemCache.get(e);
  }
  getData(e) {
    const t = this.get(e);
    return t.data || (t.data = {}), t.data;
  }
  getMatrix(e) {
    const t = this.get(e);
    if (t.matrix == null) {
      const r = this.view.container;
      t.matrix = P_e(e, r);
    }
    return Qr(t.matrix);
  }
  getShape(e) {
    const t = this.get(e);
    return t.shape == null && (t.shape = un.toGeometryShape(e)), t.shape.clone();
  }
  getBoundingRect(e) {
    const t = this.get(e);
    return t.boundingRect == null && (t.boundingRect = un.getBBoxV2(e)), t.boundingRect.clone();
  }
}
var On;
(function(n) {
  function e(u) {
    return u != null && !t(u);
  }
  n.isJSONMarkup = e;
  function t(u) {
    return u != null && typeof u == "string";
  }
  n.isStringMarkup = t;
  function r(u) {
    return u == null || t(u) ? u : Pn(u);
  }
  n.clone = r;
  function i(u) {
    return `${u}`.trim().replace(/[\r|\n]/g, " ").replace(/>\s+</g, "><");
  }
  n.sanitize = i;
  function o(u, c = { ns: Br.svg }) {
    const h = document.createDocumentFragment(), f = {}, d = {}, p = [
      {
        markup: Array.isArray(u) ? u : [u],
        parent: h,
        ns: c.ns
      }
    ];
    for (; p.length > 0; ) {
      const g = p.pop();
      let v = g.ns || Br.svg;
      const m = g.markup, y = g.parent;
      m.forEach((b) => {
        const O = b.tagName;
        if (!O)
          throw new TypeError("Invalid tagName");
        b.ns && (v = b.ns);
        const w = v ? bL(O, v) : K3(O), x = b.attrs;
        x && Qt(w, zy(x));
        const S = b.style;
        S && xr(w, S);
        const _ = b.className;
        _ != null && w.setAttribute("class", Array.isArray(_) ? _.join(" ") : _), b.textContent && (w.textContent = b.textContent);
        const C = b.selector;
        if (C != null) {
          if (d[C])
            throw new TypeError("Selector must be unique");
          d[C] = w;
        }
        if (b.groupSelector) {
          let T = b.groupSelector;
          Array.isArray(T) || (T = [T]), T.forEach((k) => {
            f[k] || (f[k] = []), f[k].push(w);
          });
        }
        y.appendChild(w);
        const A = b.children;
        Array.isArray(A) && p.push({ ns: v, markup: A, parent: w });
      });
    }
    return Object.keys(f).forEach((g) => {
      if (d[g])
        throw new Error("Ambiguous group selector");
      d[g] = f[g];
    }), { fragment: h, selectors: d, groups: f };
  }
  n.parseJSONMarkup = o;
  function s(u) {
    return u instanceof SVGElement ? ga("g") : K3("div");
  }
  function a(u) {
    if (t(u)) {
      const d = lt.createVectors(u), p = d.length;
      if (p === 1)
        return {
          elem: d[0].node
        };
      if (p > 1) {
        const g = s(d[0].node);
        return d.forEach((v) => {
          g.appendChild(v.node);
        }), { elem: g };
      }
      return {};
    }
    const c = o(u), h = c.fragment;
    let f = null;
    return h.childNodes.length > 1 ? (f = s(h.firstChild), f.appendChild(h)) : f = h.firstChild, { elem: f, selectors: c.selectors };
  }
  n.renderMarkup = a;
  function l(u) {
    const c = lt.createVectors(u), h = document.createDocumentFragment();
    for (let f = 0, d = c.length; f < d; f += 1) {
      const p = c[f].node;
      h.appendChild(p);
    }
    return { fragment: h, selectors: {} };
  }
  n.parseLabelStringMarkup = l;
})(On || (On = {}));
(function(n) {
  function e(t, r, i) {
    if (t != null) {
      let o;
      const s = t.tagName.toLowerCase();
      if (t === r)
        return typeof i == "string" ? o = `> ${s} > ${i}` : o = `> ${s}`, o;
      const a = t.parentNode;
      if (a && a.childNodes.length > 1) {
        const l = OL(t) + 1;
        o = `${s}:nth-child(${l})`;
      } else
        o = s;
      return i && (o += ` > ${i}`), e(t.parentNode, r, o);
    }
    return i;
  }
  n.getSelector = e;
})(On || (On = {}));
(function(n) {
  function e() {
    return "g";
  }
  n.getPortContainerMarkup = e;
  function t() {
    return {
      tagName: "circle",
      selector: "circle",
      attrs: {
        r: 10,
        fill: "#FFFFFF",
        stroke: "#000000"
      }
    };
  }
  n.getPortMarkup = t;
  function r() {
    return {
      tagName: "text",
      selector: "text",
      attrs: {
        fill: "#000000"
      }
    };
  }
  n.getPortLabelMarkup = r;
})(On || (On = {}));
(function(n) {
  function e() {
    return [
      {
        tagName: "path",
        selector: "wrap",
        groupSelector: "lines",
        attrs: {
          fill: "none",
          cursor: "pointer",
          stroke: "transparent",
          strokeLinecap: "round"
        }
      },
      {
        tagName: "path",
        selector: "line",
        groupSelector: "lines",
        attrs: {
          fill: "none",
          pointerEvents: "none"
        }
      }
    ];
  }
  n.getEdgeMarkup = e;
})(On || (On = {}));
(function(n) {
  function e(t = !1) {
    return {
      tagName: "foreignObject",
      selector: "fo",
      children: [
        {
          ns: Br.xhtml,
          tagName: "body",
          selector: "foBody",
          attrs: {
            xmlns: Br.xhtml
          },
          style: {
            width: "100%",
            height: "100%",
            background: "transparent"
          },
          children: t ? [] : [
            {
              tagName: "div",
              selector: "foContent",
              style: {
                width: "100%",
                height: "100%"
              }
            }
          ]
        }
      ]
    };
  }
  n.getForeignObjectMarkup = e;
})(On || (On = {}));
class tq {
  constructor(e) {
    this.view = e;
  }
  get cell() {
    return this.view.cell;
  }
  getDefinition(e) {
    return this.cell.getAttrDefinition(e);
  }
  processAttrs(e, t) {
    let r, i, o, s;
    const a = [];
    return Object.keys(t).forEach((l) => {
      const u = t[l], c = this.getDefinition(l), h = Ue(ul.isValidDefinition, this.view, c, u, {
        elem: e,
        attrs: t,
        cell: this.cell,
        view: this.view
      });
      if (c && h)
        typeof c == "string" ? (r == null && (r = {}), r[c] = u) : u !== null && a.push({ name: l, definition: c });
      else {
        r == null && (r = {});
        const f = pH.includes(l) ? l : Y7(l);
        r[f] = u;
      }
    }), a.forEach(({ name: l, definition: u }) => {
      const c = t[l];
      typeof u.set == "function" && (i == null && (i = {}), i[l] = c), typeof u.offset == "function" && (o == null && (o = {}), o[l] = c), typeof u.position == "function" && (s == null && (s = {}), s[l] = c);
    }), {
      raw: t,
      normal: r,
      set: i,
      offset: o,
      position: s
    };
  }
  mergeProcessedAttrs(e, t) {
    e.set = Object.assign(Object.assign({}, e.set), t.set), e.position = Object.assign(Object.assign({}, e.position), t.position), e.offset = Object.assign(Object.assign({}, e.offset), t.offset);
    const r = e.normal && e.normal.transform;
    r != null && t.normal && (t.normal.transform = r), e.normal = t.normal;
  }
  findAttrs(e, t, r, i) {
    const o = [], s = new lE();
    return Object.keys(e).forEach((a) => {
      const l = e[a];
      if (!ha(l))
        return;
      const { isCSSSelector: u, elems: c } = xn.find(a, t, i);
      r[a] = c;
      for (let h = 0, f = c.length; h < f; h += 1) {
        const d = c[h], p = i && i[a] === d, g = s.get(d);
        if (g) {
          g.array || (o.push(d), g.array = !0, g.attrs = [g.attrs], g.priority = [g.priority]);
          const v = g.attrs, m = g.priority;
          if (p)
            v.unshift(l), m.unshift(-1);
          else {
            const y = mfe(m, u ? -1 : f);
            v.splice(y, 0, l), m.splice(y, 0, f);
          }
        } else
          s.set(d, {
            elem: d,
            attrs: l,
            priority: p ? -1 : f,
            array: !1
          });
      }
    }), o.forEach((a) => {
      const l = s.get(a), u = l.attrs;
      l.attrs = u.reduceRight((c, h) => jn(c, h), {});
    }), s;
  }
  updateRelativeAttrs(e, t, r) {
    const i = t.raw || {};
    let o = t.normal || {};
    const s = t.set, a = t.position, l = t.offset, u = () => ({
      elem: e,
      cell: this.cell,
      view: this.view,
      attrs: i,
      refBBox: r.clone()
    });
    if (s != null && Object.keys(s).forEach((v) => {
      const m = s[v], y = this.getDefinition(v);
      if (y != null) {
        const b = Ue(y.set, this.view, m, u());
        typeof b == "object" ? o = Object.assign(Object.assign({}, o), b) : b != null && (o[v] = b);
      }
    }), e instanceof HTMLElement) {
      this.view.setAttrs(o, e);
      return;
    }
    const c = o.transform, h = c ? `${c}` : null, f = Fy(h), d = new W(f.e, f.f);
    c && (delete o.transform, f.e = 0, f.f = 0);
    let p = !1;
    a != null && Object.keys(a).forEach((v) => {
      const m = a[v], y = this.getDefinition(v);
      if (y != null) {
        const b = Ue(y.position, this.view, m, u());
        b != null && (p = !0, d.translate(W.create(b)));
      }
    }), this.view.setAttrs(o, e);
    let g = !1;
    if (l != null) {
      const v = this.view.getBoundingRectOfElement(e);
      if (v.width > 0 && v.height > 0) {
        const m = un.transformRectangle(v, f);
        Object.keys(l).forEach((y) => {
          const b = l[y], O = this.getDefinition(y);
          if (O != null) {
            const w = Ue(O.offset, this.view, b, {
              elem: e,
              cell: this.cell,
              view: this.view,
              attrs: i,
              refBBox: m
            });
            w != null && (g = !0, d.translate(W.create(w)));
          }
        });
      }
    }
    (c != null || p || g) && (d.round(1), f.e = d.x, f.f = d.y, e.setAttribute("transform", Jg(f)));
  }
  update(e, t, r) {
    const i = {}, o = this.findAttrs(r.attrs || t, e, i, r.selectors), s = r.attrs ? this.findAttrs(t, e, i, r.selectors) : o, a = [];
    o.each((c) => {
      const h = c.elem, f = c.attrs, d = this.processAttrs(h, f);
      if (d.set == null && d.position == null && d.offset == null)
        this.view.setAttrs(d.normal, h);
      else {
        const p = s.get(h), g = p ? p.attrs : null, v = g && f.ref == null ? g.ref : f.ref;
        let m;
        if (v) {
          if (m = (i[v] || this.view.find(v, e, r.selectors))[0], !m)
            throw new Error(`"${v}" reference does not exist.`);
        } else
          m = null;
        const y = {
          node: h,
          refNode: m,
          attributes: g,
          processedAttributes: d
        }, b = a.findIndex((O) => O.refNode === h);
        b > -1 ? a.splice(b, 0, y) : a.push(y);
      }
    });
    const l = new lE();
    let u;
    a.forEach((c) => {
      const h = c.node, f = c.refNode;
      let d;
      const p = f != null && r.rotatableNode != null && fH(r.rotatableNode, f);
      if (f && (d = l.get(f)), !d) {
        const m = p ? r.rotatableNode : e;
        d = f ? un.getBBox(f, { target: m }) : r.rootBBox, f && l.set(f, d);
      }
      let g;
      r.attrs && c.attributes ? (g = this.processAttrs(h, c.attributes), this.mergeProcessedAttrs(g, c.processedAttributes)) : g = c.processedAttributes;
      let v = d;
      p && r.rotatableNode != null && !r.rotatableNode.contains(h) && (u || (u = Fy(Qt(r.rotatableNode, "transform"))), v = un.transformRectangle(d, u)), this.updateRelativeAttrs(h, g, v);
    });
  }
}
class nq {
  get cell() {
    return this.view.cell;
  }
  constructor(e, t, r = []) {
    this.view = e;
    const i = {}, o = {};
    let s = 0;
    Object.keys(t).forEach((l) => {
      let u = t[l];
      Array.isArray(u) || (u = [u]), u.forEach((c) => {
        let h = i[c];
        h || (s += 1, h = i[c] = 1 << s), o[l] |= h;
      });
    });
    let a = r;
    if (Array.isArray(a) || (a = [a]), a.forEach((l) => {
      i[l] || (s += 1, i[l] = 1 << s);
    }), s > 25)
      throw new Error("Maximum number of flags exceeded.");
    this.flags = i, this.attrs = o, this.bootstrap = r;
  }
  getFlag(e) {
    const t = this.flags;
    return t == null ? 0 : Array.isArray(e) ? e.reduce((r, i) => r | t[i], 0) : t[e] | 0;
  }
  hasAction(e, t) {
    return e & this.getFlag(t);
  }
  removeAction(e, t) {
    return e ^ e & this.getFlag(t);
  }
  getBootstrapFlag() {
    return this.getFlag(this.bootstrap);
  }
  getChangedFlag() {
    let e = 0;
    return this.attrs && Object.keys(this.attrs).forEach((t) => {
      this.cell.hasChanged(t) && (e |= this.attrs[t]);
    }), e;
  }
}
var G2e = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
}, j2e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class ir extends xn {
  static getDefaults() {
    return this.defaults;
  }
  static config(e) {
    this.defaults = this.getOptions(e);
  }
  static getOptions(e) {
    const t = (u, c) => c != null ? QG([
      ...Array.isArray(u) ? u : [u],
      ...Array.isArray(c) ? c : [c]
    ]) : Array.isArray(u) ? [...u] : [u], r = Pn(this.getDefaults()), { bootstrap: i, actions: o, events: s, documentEvents: a } = e, l = j2e(e, ["bootstrap", "actions", "events", "documentEvents"]);
    return i && (r.bootstrap = t(r.bootstrap, i)), o && Object.entries(o).forEach(([u, c]) => {
      const h = r.actions[u];
      c && h ? r.actions[u] = t(h, c) : c && (r.actions[u] = t(c));
    }), s && (r.events = Object.assign(Object.assign({}, r.events), s)), e.documentEvents && (r.documentEvents = Object.assign(Object.assign({}, r.documentEvents), a)), jn(r, l);
  }
  get [Symbol.toStringTag]() {
    return ir.toStringTag;
  }
  constructor(e, t = {}) {
    super(), this.cell = e, this.options = this.ensureOptions(t), this.graph = this.options.graph, this.attr = new tq(this), this.flag = new nq(this, this.options.actions, this.options.bootstrap), this.cache = new W2e(this), this.setContainer(this.ensureContainer()), this.setup(), this.init();
  }
  init() {
  }
  onRemove() {
    this.removeTools();
  }
  get priority() {
    return this.options.priority;
  }
  get rootSelector() {
    return this.options.rootSelector;
  }
  getConstructor() {
    return this.constructor;
  }
  ensureOptions(e) {
    return this.getConstructor().getOptions(e);
  }
  getContainerTagName() {
    return this.options.isSvgElement ? "g" : "div";
  }
  getContainerStyle() {
  }
  getContainerAttrs() {
    return {
      "data-cell-id": this.cell.id,
      "data-shape": this.cell.shape
    };
  }
  getContainerClassName() {
    return this.prefixClassName("cell");
  }
  ensureContainer() {
    return xn.createElement(this.getContainerTagName(), this.options.isSvgElement);
  }
  setContainer(e) {
    if (this.container !== e) {
      this.undelegateEvents(), this.container = e, this.options.events != null && this.delegateEvents(this.options.events);
      const t = this.getContainerAttrs();
      t != null && this.setAttrs(t, e);
      const r = this.getContainerStyle();
      r != null && this.setStyle(r, e);
      const i = this.getContainerClassName();
      i != null && this.addClass(i, e);
    }
    return this;
  }
  isNodeView() {
    return !1;
  }
  isEdgeView() {
    return !1;
  }
  render() {
    return this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  confirmUpdate(e, t = {}) {
    return 0;
  }
  getBootstrapFlag() {
    return this.flag.getBootstrapFlag();
  }
  getFlag(e) {
    return this.flag.getFlag(e);
  }
  hasAction(e, t) {
    return this.flag.hasAction(e, t);
  }
  removeAction(e, t) {
    return this.flag.removeAction(e, t);
  }
  handleAction(e, t, r, i) {
    if (this.hasAction(e, t)) {
      r();
      const o = [t];
      return i && (typeof i == "string" ? o.push(i) : o.push(...i)), this.removeAction(e, o);
    }
    return e;
  }
  setup() {
    this.cell.on("changed", this.onCellChanged, this);
  }
  onCellChanged({ options: e }) {
    this.onAttrsChange(e);
  }
  onAttrsChange(e) {
    let t = this.flag.getChangedFlag();
    e.updated || !t || (e.dirty && this.hasAction(t, "update") && (t |= this.getFlag("render")), e.toolId && (e.async = !1), this.graph != null && this.graph.renderer.requestViewUpdate(this, t, e));
  }
  parseJSONMarkup(e, t) {
    const r = On.parseJSONMarkup(e), i = r.selectors, o = this.rootSelector;
    if (t && o) {
      if (i[o])
        throw new Error("Invalid root selector");
      i[o] = t;
    }
    return r;
  }
  can(e) {
    let t = this.graph.options.interacting;
    if (typeof t == "function" && (t = Ue(t, this.graph, this)), typeof t == "object") {
      let r = t[e];
      return typeof r == "function" && (r = Ue(r, this.graph, this)), r !== !1;
    }
    return typeof t == "boolean" ? t : !1;
  }
  cleanCache() {
    return this.cache.clean(), this;
  }
  getCache(e) {
    return this.cache.get(e);
  }
  getDataOfElement(e) {
    return this.cache.getData(e);
  }
  getMatrixOfElement(e) {
    return this.cache.getMatrix(e);
  }
  getShapeOfElement(e) {
    return this.cache.getShape(e);
  }
  getBoundingRectOfElement(e) {
    return this.cache.getBoundingRect(e);
  }
  getBBoxOfElement(e) {
    const t = this.getBoundingRectOfElement(e), r = this.getMatrixOfElement(e), i = this.getRootRotatedMatrix(), o = this.getRootTranslatedMatrix();
    return un.transformRectangle(t, o.multiply(i).multiply(r));
  }
  getUnrotatedBBoxOfElement(e) {
    const t = this.getBoundingRectOfElement(e), r = this.getMatrixOfElement(e), i = this.getRootTranslatedMatrix();
    return un.transformRectangle(t, i.multiply(r));
  }
  getBBox(e = {}) {
    let t;
    if (e.useCellGeometry) {
      const r = this.cell, i = r.isNode() ? r.getAngle() : 0;
      t = r.getBBox().bbox(i);
    } else
      t = this.getBBoxOfElement(this.container);
    return this.graph.coord.localToGraphRect(t);
  }
  getRootTranslatedMatrix() {
    const e = this.cell, t = e.isNode() ? e.getPosition() : { x: 0, y: 0 };
    return Qr().translate(t.x, t.y);
  }
  getRootRotatedMatrix() {
    let e = Qr();
    const t = this.cell, r = t.isNode() ? t.getAngle() : 0;
    if (r) {
      const i = t.getBBox(), o = i.width / 2, s = i.height / 2;
      e = e.translate(o, s).rotate(r).translate(-o, -s);
    }
    return e;
  }
  findMagnet(e = this.container) {
    return this.findByAttr("magnet", e);
  }
  updateAttrs(e, t, r = {}) {
    r.rootBBox == null && (r.rootBBox = new Se()), r.selectors == null && (r.selectors = this.selectors), this.attr.update(e, t, r);
  }
  isEdgeElement(e) {
    return this.cell.isEdge() && (e == null || e === this.container);
  }
  // #region highlight
  prepareHighlight(e, t = {}) {
    const r = e || this.container;
    return t.partial = r === this.container, r;
  }
  highlight(e, t = {}) {
    const r = this.prepareHighlight(e, t);
    return this.notify("cell:highlight", {
      magnet: r,
      options: t,
      view: this,
      cell: this.cell
    }), this.isEdgeView() ? this.notify("edge:highlight", {
      magnet: r,
      options: t,
      view: this,
      edge: this.cell,
      cell: this.cell
    }) : this.isNodeView() && this.notify("node:highlight", {
      magnet: r,
      options: t,
      view: this,
      node: this.cell,
      cell: this.cell
    }), this;
  }
  unhighlight(e, t = {}) {
    const r = this.prepareHighlight(e, t);
    return this.notify("cell:unhighlight", {
      magnet: r,
      options: t,
      view: this,
      cell: this.cell
    }), this.isNodeView() ? this.notify("node:unhighlight", {
      magnet: r,
      options: t,
      view: this,
      node: this.cell,
      cell: this.cell
    }) : this.isEdgeView() && this.notify("edge:unhighlight", {
      magnet: r,
      options: t,
      view: this,
      edge: this.cell,
      cell: this.cell
    }), this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  notifyUnhighlight(e, t) {
  }
  // #endregion
  getEdgeTerminal(e, t, r, i, o) {
    const s = this.cell, a = this.findAttr("port", e), l = e.getAttribute("data-selector"), u = { cell: s.id };
    return l != null && (u.magnet = l), a != null ? (u.port = a, s.isNode() && !s.hasPort(a) && l == null && (u.selector = this.getSelector(e))) : l == null && this.container !== e && (u.selector = this.getSelector(e)), u;
  }
  getMagnetFromEdgeTerminal(e) {
    const t = this.cell, r = this.container, i = e.port;
    let o = e.magnet, s;
    return i != null && t.isNode() && t.hasPort(i) ? s = this.findPortElem(i, o) || r : (o || (o = e.selector), !o && i != null && (o = `[port="${i}"]`), s = this.findOne(o, r, this.selectors)), s;
  }
  hasTools(e) {
    const t = this.tools;
    return t == null ? !1 : e == null ? !0 : t.name === e;
  }
  addTools(e) {
    if (this.removeTools(), e) {
      if (!this.can("toolsAddable"))
        return this;
      const t = gr.isToolsView(e) ? e : new gr(e);
      this.tools = t, t.config({ view: this }), t.mount();
    }
    return this;
  }
  updateTools(e = {}) {
    return this.tools && this.tools.update(e), this;
  }
  removeTools() {
    return this.tools && (this.tools.remove(), this.tools = null), this;
  }
  hideTools() {
    return this.tools && this.tools.hide(), this;
  }
  showTools() {
    return this.tools && this.tools.show(), this;
  }
  renderTools() {
    const e = this.cell.getTools();
    return this.addTools(e), this;
  }
  notify(e, t) {
    return this.trigger(e, t), this.graph.trigger(e, t), this;
  }
  getEventArgs(e, t, r) {
    const i = this, o = i.cell;
    return t == null || r == null ? { e, view: i, cell: o } : { e, x: t, y: r, view: i, cell: o };
  }
  onClick(e, t, r) {
    this.notify("cell:click", this.getEventArgs(e, t, r));
  }
  onDblClick(e, t, r) {
    this.notify("cell:dblclick", this.getEventArgs(e, t, r));
  }
  onContextMenu(e, t, r) {
    this.notify("cell:contextmenu", this.getEventArgs(e, t, r));
  }
  onMouseDown(e, t, r) {
    this.cell.model && (this.cachedModelForMouseEvent = this.cell.model, this.cachedModelForMouseEvent.startBatch("mouse")), this.notify("cell:mousedown", this.getEventArgs(e, t, r));
  }
  onMouseUp(e, t, r) {
    this.notify("cell:mouseup", this.getEventArgs(e, t, r)), this.cachedModelForMouseEvent && (this.cachedModelForMouseEvent.stopBatch("mouse", { cell: this.cell }), this.cachedModelForMouseEvent = null);
  }
  onMouseMove(e, t, r) {
    this.notify("cell:mousemove", this.getEventArgs(e, t, r));
  }
  onMouseOver(e) {
    this.notify("cell:mouseover", this.getEventArgs(e));
  }
  onMouseOut(e) {
    this.notify("cell:mouseout", this.getEventArgs(e));
  }
  onMouseEnter(e) {
    this.notify("cell:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    this.notify("cell:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, r, i) {
    this.notify("cell:mousewheel", Object.assign({ delta: i }, this.getEventArgs(e, t, r)));
  }
  onCustomEvent(e, t, r, i) {
    this.notify("cell:customevent", Object.assign({ name: t }, this.getEventArgs(e, r, i))), this.notify(t, Object.assign({}, this.getEventArgs(e, r, i)));
  }
  onMagnetMouseDown(e, t, r, i) {
  }
  onMagnetDblClick(e, t, r, i) {
  }
  onMagnetContextMenu(e, t, r, i) {
  }
  onLabelMouseDown(e, t, r) {
  }
  checkMouseleave(e) {
    const t = this.getEventTarget(e, { fromPoint: !0 }), r = this.graph.findViewByElem(t);
    r !== this && (this.onMouseLeave(e), r && r.onMouseEnter(e));
  }
  dispose() {
    this.cell.off("changed", this.onCellChanged, this);
  }
}
ir.defaults = {
  isSvgElement: !0,
  rootSelector: "root",
  priority: 0,
  bootstrap: [],
  actions: {}
};
G2e([
  ir.dispose()
], ir.prototype, "dispose", null);
(function(n) {
  n.Flag = nq, n.Attr = tq;
})(ir || (ir = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNodeView == "function" && typeof i.isEdgeView == "function" && typeof i.confirmUpdate == "function";
  }
  n.isCellView = e;
})(ir || (ir = {}));
(function(n) {
  function e(r) {
    return function(i) {
      i.config({ priority: r });
    };
  }
  n.priority = e;
  function t(r) {
    return function(i) {
      i.config({ bootstrap: r });
    };
  }
  n.bootstrap = t;
})(ir || (ir = {}));
(function(n) {
  n.registry = or.create({
    type: "view"
  });
})(ir || (ir = {}));
class gr extends xn {
  get name() {
    return this.options.name;
  }
  get graph() {
    return this.cellView.graph;
  }
  get cell() {
    return this.cellView.cell;
  }
  get [Symbol.toStringTag]() {
    return gr.toStringTag;
  }
  constructor(e = {}) {
    super(), this.svgContainer = this.createContainer(!0, e), this.htmlContainer = this.createContainer(!1, e), this.config(e);
  }
  createContainer(e, t) {
    const r = e ? xn.createElement("g", !0) : xn.createElement("div", !1);
    return rt(r, this.prefixClassName("cell-tools")), t.className && rt(r, t.className), r;
  }
  config(e) {
    if (this.options = Object.assign(Object.assign({}, this.options), e), !ir.isCellView(e.view) || e.view === this.cellView)
      return this;
    this.cellView = e.view, this.cell.isEdge() ? (rt(this.svgContainer, this.prefixClassName("edge-tools")), rt(this.htmlContainer, this.prefixClassName("edge-tools"))) : this.cell.isNode() && (rt(this.svgContainer, this.prefixClassName("node-tools")), rt(this.htmlContainer, this.prefixClassName("node-tools"))), this.svgContainer.setAttribute("data-cell-id", this.cell.id), this.htmlContainer.setAttribute("data-cell-id", this.cell.id), this.name && (this.svgContainer.setAttribute("data-tools-name", this.name), this.htmlContainer.setAttribute("data-tools-name", this.name));
    const t = this.options.items;
    if (!Array.isArray(t))
      return this;
    this.tools = [];
    const r = [];
    t.forEach((i) => {
      gr.ToolItem.isToolItem(i) ? i.name === "vertices" ? r.unshift(i) : r.push(i) : (typeof i == "object" ? i.name : i) === "vertices" ? r.unshift(i) : r.push(i);
    });
    for (let i = 0; i < r.length; i += 1) {
      const o = r[i];
      let s;
      if (gr.ToolItem.isToolItem(o))
        s = o;
      else {
        const a = typeof o == "object" ? o.name : o, l = typeof o == "object" ? o.args || {} : {};
        if (a) {
          if (this.cell.isNode()) {
            const u = gg.registry.get(a);
            if (u)
              s = new u(l);
            else
              return gg.registry.onNotFound(a);
          } else if (this.cell.isEdge()) {
            const u = vg.registry.get(a);
            if (u)
              s = new u(l);
            else
              return vg.registry.onNotFound(a);
          }
        }
      }
      s && (s.config(this.cellView, this), s.render(), (s.options.isSVGElement !== !1 ? this.svgContainer : this.htmlContainer).appendChild(s.container), this.tools.push(s));
    }
    return this;
  }
  update(e = {}) {
    const t = this.tools;
    return t && t.forEach((r) => {
      e.toolId !== r.cid && r.isVisible() && r.update();
    }), this;
  }
  focus(e) {
    const t = this.tools;
    return t && t.forEach((r) => {
      e === r ? r.show() : r.hide();
    }), this;
  }
  blur(e) {
    const t = this.tools;
    return t && t.forEach((r) => {
      r !== e && !r.isVisible() && (r.show(), r.update());
    }), this;
  }
  hide() {
    return this.focus(null);
  }
  show() {
    return this.blur(null);
  }
  remove() {
    const e = this.tools;
    return e && (e.forEach((t) => t.remove()), this.tools = null), Ja(this.svgContainer), Ja(this.htmlContainer), super.remove();
  }
  mount() {
    const e = this.tools, t = this.cellView;
    if (t && e) {
      const r = e.some((o) => o.options.isSVGElement !== !1), i = e.some((o) => o.options.isSVGElement === !1);
      r && (this.options.local ? t.container : t.graph.view.decorator).appendChild(this.svgContainer), i && this.graph.container.appendChild(this.htmlContainer);
    }
    return this;
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && i.graph != null && i.cell != null && typeof i.config == "function" && typeof i.update == "function" && typeof i.focus == "function" && typeof i.blur == "function" && typeof i.show == "function" && typeof i.hide == "function";
  }
  n.isToolsView = e;
})(gr || (gr = {}));
(function(n) {
  class e extends xn {
    static getDefaults() {
      return this.defaults;
    }
    static config(r) {
      this.defaults = this.getOptions(r);
    }
    static getOptions(r) {
      return jn(Pn(this.getDefaults()), r);
    }
    get graph() {
      return this.cellView.graph;
    }
    get cell() {
      return this.cellView.cell;
    }
    get name() {
      return this.options.name;
    }
    get [Symbol.toStringTag]() {
      return e.toStringTag;
    }
    constructor(r = {}) {
      super(), this.visible = !0, this.options = this.getOptions(r), this.container = xn.createElement(this.options.tagName || "g", this.options.isSVGElement !== !1), rt(this.container, this.prefixClassName("cell-tool")), typeof this.options.className == "string" && rt(this.container, this.options.className), this.init();
    }
    init() {
    }
    getOptions(r) {
      return this.constructor.getOptions(r);
    }
    delegateEvents() {
      return this.options.events && super.delegateEvents(this.options.events), this;
    }
    config(r, i) {
      return this.cellView = r, this.parent = i, this.stamp(this.container), this.cell.isEdge() ? rt(this.container, this.prefixClassName("edge-tool")) : this.cell.isNode() && rt(this.container, this.prefixClassName("node-tool")), this.name && this.container.setAttribute("data-tool-name", this.name), this.delegateEvents(), this;
    }
    render() {
      this.empty();
      const r = this.options.markup;
      if (r) {
        const i = On.parseJSONMarkup(r);
        this.container.appendChild(i.fragment), this.childNodes = i.selectors;
      }
      return this.onRender(), this;
    }
    onRender() {
    }
    update() {
      return this;
    }
    stamp(r) {
      r && r.setAttribute("data-cell-id", this.cellView.cell.id);
    }
    show() {
      return this.container.style.display = "", this.visible = !0, this;
    }
    hide() {
      return this.container.style.display = "none", this.visible = !1, this;
    }
    isVisible() {
      return this.visible;
    }
    focus() {
      const r = this.options.focusOpacity;
      return r != null && Number.isFinite(r) && (this.container.style.opacity = `${r}`), this.parent.focus(this), this;
    }
    blur() {
      return this.container.style.opacity = "", this.parent.blur(this), this;
    }
    guard(r) {
      return this.graph == null || this.cellView == null ? !0 : this.graph.view.guard(r, this.cellView);
    }
  }
  e.defaults = {
    isSVGElement: !0,
    tagName: "g"
  }, n.ToolItem = e, function(t) {
    let r = 0;
    function i(s) {
      return s ? pL(s) : (r += 1, `CustomTool${r}`);
    }
    function o(s) {
      const a = fL(i(s.name), this);
      return a.config(s), a;
    }
    t.define = o;
  }(e = n.ToolItem || (n.ToolItem = {})), function(t) {
    t.toStringTag = `X6.${t.name}`;
    function r(i) {
      if (i == null)
        return !1;
      if (i instanceof t)
        return !0;
      const o = i[Symbol.toStringTag], s = i;
      return (o == null || o === t.toStringTag) && s.graph != null && s.cell != null && typeof s.config == "function" && typeof s.update == "function" && typeof s.focus == "function" && typeof s.blur == "function" && typeof s.show == "function" && typeof s.hide == "function" && typeof s.isVisible == "function";
    }
    t.isToolItem = r;
  }(e = n.ToolItem || (n.ToolItem = {}));
})(gr || (gr = {}));
const H2e = (n) => n;
function c5(n, e) {
  return e === 0 ? "0%" : `${Math.round(n / e * 100)}%`;
}
function rq(n) {
  return (t, r, i, o) => r.isEdgeElement(i) ? Y2e(n, t, r, i, o) : q2e(n, t, r, i, o);
}
function q2e(n, e, t, r, i) {
  const o = t.cell, s = o.getAngle(), a = t.getUnrotatedBBoxOfElement(r), l = o.getBBox().getCenter(), u = W.create(i).rotate(s, l);
  let c = u.x - a.x, h = u.y - a.y;
  return n && (c = c5(c, a.width), h = c5(h, a.height)), e.anchor = {
    name: "topLeft",
    args: {
      dx: c,
      dy: h,
      rotate: !0
    }
  }, e;
}
function Y2e(n, e, t, r, i) {
  const o = t.getConnection();
  if (!o)
    return e;
  const s = o.closestPointLength(i);
  if (n) {
    const a = o.length();
    e.anchor = {
      name: "ratio",
      args: {
        ratio: s / a
      }
    };
  } else
    e.anchor = {
      name: "length",
      args: {
        length: s
      }
    };
  return e;
}
const X2e = rq(!0), U2e = rq(!1), K2e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  noop: H2e,
  pinAbsolute: U2e,
  pinRelative: X2e
}, Symbol.toStringTag, { value: "Module" }));
var fE;
(function(n) {
  n.presets = K2e, n.registry = or.create({
    type: "connection strategy"
  }), n.registry.register(n.presets, !0);
})(fE || (fE = {}));
function iq(n, e, t, r) {
  return Ue(fE.presets.pinRelative, this.graph, {}, e, t, n, this.cell, r, {}).anchor;
}
function oq(n, e) {
  return e ? n.cell.getBBox() : n.cell.isEdge() ? n.getConnection().bbox() : n.getUnrotatedBBoxOfElement(n.container);
}
class Tc extends gr.ToolItem {
  onRender() {
    rt(this.container, this.prefixClassName("cell-tool-button")), this.update();
  }
  update() {
    return this.updatePosition(), this;
  }
  updatePosition() {
    const t = this.cellView.cell.isEdge() ? this.getEdgeMatrix() : this.getNodeMatrix();
    ug(this.container, t, { absolute: !0 });
  }
  getNodeMatrix() {
    const e = this.cellView, t = this.options;
    let { x: r = 0, y: i = 0 } = t;
    const { offset: o, useCellGeometry: s, rotate: a } = t;
    let l = oq(e, s);
    const u = e.cell.getAngle();
    a || (l = l.bbox(u));
    let c = 0, h = 0;
    typeof o == "number" ? (c = o, h = o) : typeof o == "object" && (c = o.x, h = o.y), r = Ks(r, l.width), i = Ks(i, l.height);
    let f = Qr().translate(l.x + l.width / 2, l.y + l.height / 2);
    return a && (f = f.rotate(u)), f = f.translate(r + c - l.width / 2, i + h - l.height / 2), f;
  }
  getEdgeMatrix() {
    const e = this.cellView, t = this.options, { offset: r = 0, distance: i = 0, rotate: o } = t;
    let s, a, l;
    const u = Ks(i, 1);
    u >= 0 && u <= 1 ? s = e.getTangentAtRatio(u) : s = e.getTangentAtLength(u), s ? (a = s.start, l = s.vector().vectorAngle(new W(1, 0)) || 0) : (a = e.getConnection().start, l = 0);
    let c = Qr().translate(a.x, a.y).rotate(l);
    return typeof r == "object" ? c = c.translate(r.x || 0, r.y || 0) : c = c.translate(0, r), o || (c = c.rotate(-l)), c;
  }
  onMouseDown(e) {
    if (this.guard(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const t = this.options.onClick;
    typeof t == "function" && Ue(t, this.cellView, {
      e,
      view: this.cellView,
      cell: this.cellView.cell,
      btn: this
    });
  }
}
(function(n) {
  n.config({
    name: "button",
    useCellGeometry: !0,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    }
  });
})(Tc || (Tc = {}));
(function(n) {
  n.Remove = n.define({
    name: "button-remove",
    markup: [
      {
        tagName: "circle",
        selector: "button",
        attrs: {
          r: 7,
          fill: "#FF1D00",
          cursor: "pointer"
        }
      },
      {
        tagName: "path",
        selector: "icon",
        attrs: {
          d: "M -3 -3 3 3 M -3 3 3 -3",
          fill: "none",
          stroke: "#FFFFFF",
          "stroke-width": 2,
          "pointer-events": "none"
        }
      }
    ],
    distance: 60,
    offset: 0,
    useCellGeometry: !0,
    onClick({ view: e, btn: t }) {
      t.parent.remove(), e.cell.remove({ ui: !0, toolId: t.cid });
    }
  });
})(Tc || (Tc = {}));
var J2e = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class Jw extends gr.ToolItem {
  onRender() {
    if (rt(this.container, this.prefixClassName("cell-tool-boundary")), this.options.attrs) {
      const e = this.options.attrs, { class: t } = e, r = J2e(e, ["class"]);
      Qt(this.container, zy(r)), t && rt(this.container, t);
    }
    this.update();
  }
  update() {
    const e = this.cellView, t = this.options, { useCellGeometry: r, rotate: i } = t, o = Zf(t.padding);
    let s = oq(e, r).moveAndExpand({
      x: -o.left,
      y: -o.top,
      width: o.left + o.right,
      height: o.top + o.bottom
    });
    const a = e.cell;
    if (a.isNode()) {
      const l = a.getAngle();
      if (l)
        if (i) {
          const u = a.getBBox().getCenter();
          iE(this.container, l, u.x, u.y, {
            absolute: !0
          });
        } else
          s = s.bbox(l);
    }
    return Qt(this.container, s.toJSON()), this;
  }
}
(function(n) {
  n.config({
    name: "boundary",
    tagName: "rect",
    padding: 10,
    useCellGeometry: !0,
    attrs: {
      fill: "none",
      stroke: "#333",
      "stroke-width": 0.5,
      "stroke-dasharray": "5, 5",
      "pointer-events": "none"
    }
  });
})(Jw || (Jw = {}));
class Gy extends gr.ToolItem {
  constructor() {
    super(...arguments), this.handles = [];
  }
  get vertices() {
    return this.cellView.cell.getVertices();
  }
  onRender() {
    return this.addClass(this.prefixClassName("edge-tool-vertices")), this.options.addable && this.updatePath(), this.resetHandles(), this.renderHandles(), this;
  }
  update() {
    return this.vertices.length === this.handles.length ? this.updateHandles() : (this.resetHandles(), this.renderHandles()), this.options.addable && this.updatePath(), this;
  }
  resetHandles() {
    const e = this.handles;
    this.handles = [], e && e.forEach((t) => {
      this.stopHandleListening(t), t.remove();
    });
  }
  renderHandles() {
    const e = this.vertices;
    for (let t = 0, r = e.length; t < r; t += 1) {
      const i = e[t], o = this.options.createHandle, s = this.options.processHandle, a = o({
        index: t,
        graph: this.graph,
        guard: (l) => this.guard(l),
        attrs: this.options.attrs || {}
      });
      s && s(a), a.updatePosition(i.x, i.y), this.stamp(a.container), this.container.appendChild(a.container), this.handles.push(a), this.startHandleListening(a);
    }
  }
  updateHandles() {
    const e = this.vertices;
    for (let t = 0, r = e.length; t < r; t += 1) {
      const i = e[t], o = this.handles[t];
      o && o.updatePosition(i.x, i.y);
    }
  }
  updatePath() {
    const e = this.childNodes.connection;
    e && e.setAttribute("d", this.cellView.getConnectionPathData());
  }
  startHandleListening(e) {
    const t = this.cellView;
    t.can("vertexMovable") && (e.on("change", this.onHandleChange, this), e.on("changing", this.onHandleChanging, this), e.on("changed", this.onHandleChanged, this)), t.can("vertexDeletable") && e.on("remove", this.onHandleRemove, this);
  }
  stopHandleListening(e) {
    const t = this.cellView;
    t.can("vertexMovable") && (e.off("change", this.onHandleChange, this), e.off("changing", this.onHandleChanging, this), e.off("changed", this.onHandleChanged, this)), t.can("vertexDeletable") && e.off("remove", this.onHandleRemove, this);
  }
  getNeighborPoints(e) {
    const t = this.cellView, r = this.vertices, i = e > 0 ? r[e - 1] : t.sourceAnchor, o = e < r.length - 1 ? r[e + 1] : t.targetAnchor;
    return {
      prev: W.create(i),
      next: W.create(o)
    };
  }
  getMouseEventArgs(e) {
    const t = this.normalizeEvent(e), { x: r, y: i } = this.graph.snapToGrid(t.clientX, t.clientY);
    return { e: t, x: r, y: i };
  }
  onHandleChange({ e }) {
    this.focus();
    const t = this.cellView;
    if (t.cell.startBatch("move-vertex", { ui: !0, toolId: this.cid }), !this.options.stopPropagation) {
      const { e: r, x: i, y: o } = this.getMouseEventArgs(e);
      this.eventData(r, { start: { x: i, y: o } }), t.notifyMouseDown(r, i, o);
    }
  }
  onHandleChanging({ handle: e, e: t }) {
    const r = this.cellView, i = e.options.index, { e: o, x: s, y: a } = this.getMouseEventArgs(t), l = { x: s, y: a };
    this.snapVertex(l, i), r.cell.setVertexAt(i, l, { ui: !0, toolId: this.cid }), e.updatePosition(l.x, l.y), this.options.stopPropagation || r.notifyMouseMove(o, s, a);
  }
  stopBatch(e) {
    this.cell.stopBatch("move-vertex", { ui: !0, toolId: this.cid }), e && this.cell.stopBatch("add-vertex", { ui: !0, toolId: this.cid });
  }
  onHandleChanged({ e }) {
    const t = this.options, r = this.cellView;
    if (t.addable && this.updatePath(), !t.removeRedundancies) {
      this.stopBatch(this.eventData(e).vertexAdded);
      return;
    }
    r.removeRedundantLinearVertices({
      ui: !0,
      toolId: this.cid
    }) && this.render(), this.blur(), this.stopBatch(this.eventData(e).vertexAdded);
    const { e: o, x: s, y: a } = this.getMouseEventArgs(e);
    if (!this.options.stopPropagation) {
      r.notifyMouseUp(o, s, a);
      const { start: l } = this.eventData(o);
      if (l) {
        const { x: u, y: c } = l;
        u === s && c === a && r.onClick(o, s, a);
      }
    }
    r.checkMouseleave(o), t.onChanged && t.onChanged({ edge: r.cell, edgeView: r });
  }
  snapVertex(e, t) {
    const r = this.options.snapRadius || 0;
    if (r > 0) {
      const i = this.getNeighborPoints(t), o = i.prev, s = i.next;
      Math.abs(e.x - o.x) < r ? e.x = o.x : Math.abs(e.x - s.x) < r && (e.x = s.x), Math.abs(e.y - o.y) < r ? e.y = i.prev.y : Math.abs(e.y - s.y) < r && (e.y = s.y);
    }
  }
  onHandleRemove({ handle: e, e: t }) {
    if (this.options.removable) {
      const r = e.options.index, i = this.cellView;
      i.cell.removeVertexAt(r, { ui: !0 }), this.options.addable && this.updatePath(), i.checkMouseleave(this.normalizeEvent(t));
    }
  }
  allowAddVertex(e) {
    const t = this.guard(e), r = this.options.addable && this.cellView.can("vertexAddable"), i = this.options.modifiers ? Sc.isMatch(e, this.options.modifiers) : !0;
    return !t && r && i;
  }
  onPathMouseDown(e) {
    const t = this.cellView;
    if (!this.allowAddVertex(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const r = this.normalizeEvent(e), i = this.graph.snapToGrid(r.clientX, r.clientY).toJSON();
    t.cell.startBatch("add-vertex", { ui: !0, toolId: this.cid });
    const o = t.getVertexIndex(i.x, i.y);
    this.snapVertex(i, o), t.cell.insertVertex(i, o, {
      ui: !0,
      toolId: this.cid
    }), this.render();
    const s = this.handles[o];
    this.eventData(r, { vertexAdded: !0 }), s.onMouseDown(r);
  }
  onRemove() {
    this.resetHandles();
  }
}
(function(n) {
  class e extends xn {
    get graph() {
      return this.options.graph;
    }
    constructor(r) {
      super(), this.options = r, this.render(), this.delegateEvents({
        mousedown: "onMouseDown",
        touchstart: "onMouseDown",
        dblclick: "onDoubleClick"
      });
    }
    render() {
      this.container = xn.createElement("circle", !0);
      const r = this.options.attrs;
      if (typeof r == "function") {
        const i = n.getDefaults();
        this.setAttrs(Object.assign(Object.assign({}, i.attrs), r(this)));
      } else
        this.setAttrs(r);
      this.addClass(this.prefixClassName("edge-tool-vertex"));
    }
    updatePosition(r, i) {
      this.setAttrs({ cx: r, cy: i });
    }
    onMouseDown(r) {
      this.options.guard(r) || (r.stopPropagation(), r.preventDefault(), this.graph.view.undelegateEvents(), this.delegateDocumentEvents({
        mousemove: "onMouseMove",
        touchmove: "onMouseMove",
        mouseup: "onMouseUp",
        touchend: "onMouseUp",
        touchcancel: "onMouseUp"
      }, r.data), this.emit("change", { e: r, handle: this }));
    }
    onMouseMove(r) {
      this.emit("changing", { e: r, handle: this });
    }
    onMouseUp(r) {
      this.emit("changed", { e: r, handle: this }), this.undelegateDocumentEvents(), this.graph.view.delegateEvents();
    }
    onDoubleClick(r) {
      this.emit("remove", { e: r, handle: this });
    }
  }
  n.Handle = e;
})(Gy || (Gy = {}));
(function(n) {
  const e = _s.prefix("edge-tool-vertex-path");
  n.config({
    name: "vertices",
    snapRadius: 20,
    addable: !0,
    removable: !0,
    removeRedundancies: !0,
    stopPropagation: !0,
    attrs: {
      r: 6,
      fill: "#333",
      stroke: "#fff",
      cursor: "move",
      "stroke-width": 2
    },
    createHandle: (t) => new n.Handle(t),
    markup: [
      {
        tagName: "path",
        selector: "connection",
        className: e,
        attrs: {
          fill: "none",
          stroke: "transparent",
          "stroke-width": 10,
          cursor: "pointer"
        }
      }
    ],
    events: {
      [`mousedown .${e}`]: "onPathMouseDown",
      [`touchstart .${e}`]: "onPathMouseDown"
    }
  });
})(Gy || (Gy = {}));
class jy extends gr.ToolItem {
  constructor() {
    super(...arguments), this.handles = [];
  }
  get vertices() {
    return this.cellView.cell.getVertices();
  }
  update() {
    return this.render(), this;
  }
  onRender() {
    rt(this.container, this.prefixClassName("edge-tool-segments")), this.resetHandles();
    const e = this.cellView, t = [...this.vertices];
    t.unshift(e.sourcePoint), t.push(e.targetPoint);
    for (let r = 0, i = t.length; r < i - 1; r += 1) {
      const o = t[r], s = t[r + 1], a = this.renderHandle(o, s, r);
      this.stamp(a.container), this.handles.push(a);
    }
    return this;
  }
  renderHandle(e, t, r) {
    const i = this.options.createHandle({
      index: r,
      graph: this.graph,
      guard: (o) => this.guard(o),
      attrs: this.options.attrs || {}
    });
    return this.options.processHandle && this.options.processHandle(i), this.updateHandle(i, e, t), this.container.appendChild(i.container), this.startHandleListening(i), i;
  }
  startHandleListening(e) {
    e.on("change", this.onHandleChange, this), e.on("changing", this.onHandleChanging, this), e.on("changed", this.onHandleChanged, this);
  }
  stopHandleListening(e) {
    e.off("change", this.onHandleChange, this), e.off("changing", this.onHandleChanging, this), e.off("changed", this.onHandleChanged, this);
  }
  resetHandles() {
    const e = this.handles;
    this.handles = [], e && e.forEach((t) => {
      this.stopHandleListening(t), t.remove();
    });
  }
  shiftHandleIndexes(e) {
    const t = this.handles;
    for (let r = 0, i = t.length; r < i; r += 1)
      t[r].options.index += e;
  }
  resetAnchor(e, t) {
    const r = this.cellView.cell, i = {
      ui: !0,
      toolId: this.cid
    };
    t ? r.prop([e, "anchor"], t, i) : r.removeProp([e, "anchor"], i);
  }
  snapHandle(e, t, r) {
    const i = e.options.axis, o = e.options.index, l = this.cellView.cell.getVertices(), u = l[o - 2] || r.sourceAnchor, c = l[o + 1] || r.targetAnchor, h = this.options.snapRadius;
    return Math.abs(t[i] - u[i]) < h ? t[i] = u[i] : Math.abs(t[i] - c[i]) < h && (t[i] = c[i]), t;
  }
  onHandleChanging({ handle: e, e: t }) {
    const r = this.graph, i = this.options, o = this.cellView, s = i.anchor, a = e.options.axis, l = e.options.index - 1, u = this.getEventData(t), c = this.normalizeEvent(t), h = r.snapToGrid(c.clientX, c.clientY), f = this.snapHandle(e, h.clone(), u), d = Pn(this.vertices);
    let p = d[l], g = d[l + 1];
    const v = o.sourceView, m = o.sourceBBox;
    let y = !1, b = !1;
    if (p ? l === 0 ? m.containsPoint(p) ? (d.shift(), this.shiftHandleIndexes(-1), y = !0) : (p[a] = f[a], b = !0) : p[a] = f[a] : (p = o.sourceAnchor.toJSON(), p[a] = f[a], m.containsPoint(p) ? y = !0 : (d.unshift(p), this.shiftHandleIndexes(1), b = !0)), typeof s == "function" && v) {
      if (y) {
        const _ = u.sourceAnchor.clone();
        _[a] = f[a];
        const C = Ue(s, o, _, v, o.sourceMagnet || v.container, "source", o, this);
        this.resetAnchor("source", C);
      }
      b && this.resetAnchor("source", u.sourceAnchorDef);
    }
    const O = o.targetView, w = o.targetBBox;
    let x = !1, S = !1;
    if (g ? l === d.length - 2 ? w.containsPoint(g) ? (d.pop(), x = !0) : (g[a] = f[a], S = !0) : g[a] = f[a] : (g = o.targetAnchor.toJSON(), g[a] = f[a], w.containsPoint(g) ? x = !0 : (d.push(g), S = !0)), typeof s == "function" && O) {
      if (x) {
        const _ = u.targetAnchor.clone();
        _[a] = f[a];
        const C = Ue(s, o, _, O, o.targetMagnet || O.container, "target", o, this);
        this.resetAnchor("target", C);
      }
      S && this.resetAnchor("target", u.targetAnchorDef);
    }
    W.equalPoints(d, this.vertices) || this.cellView.cell.setVertices(d, { ui: !0, toolId: this.cid }), this.updateHandle(e, p, g, 0), i.stopPropagation || o.notifyMouseMove(c, h.x, h.y);
  }
  onHandleChange({ handle: e, e: t }) {
    const r = this.options, i = this.handles, o = this.cellView, s = e.options.index;
    if (Array.isArray(i)) {
      for (let a = 0, l = i.length; a < l; a += 1)
        a !== s && i[a].hide();
      if (this.focus(), this.setEventData(t, {
        sourceAnchor: o.sourceAnchor.clone(),
        targetAnchor: o.targetAnchor.clone(),
        sourceAnchorDef: Pn(this.cell.prop(["source", "anchor"])),
        targetAnchorDef: Pn(this.cell.prop(["target", "anchor"]))
      }), this.cell.startBatch("move-segment", { ui: !0, toolId: this.cid }), !r.stopPropagation) {
        const a = this.normalizeEvent(t), l = this.graph.snapToGrid(a.clientX, a.clientY);
        o.notifyMouseDown(a, l.x, l.y);
      }
    }
  }
  onHandleChanged({ e }) {
    const t = this.options, r = this.cellView;
    t.removeRedundancies && r.removeRedundantLinearVertices({ ui: !0, toolId: this.cid });
    const i = this.normalizeEvent(e), o = this.graph.snapToGrid(i.clientX, i.clientY);
    this.render(), this.blur(), this.cell.stopBatch("move-segment", { ui: !0, toolId: this.cid }), t.stopPropagation || r.notifyMouseUp(i, o.x, o.y), r.checkMouseleave(i), t.onChanged && t.onChanged({ edge: r.cell, edgeView: r });
  }
  updateHandle(e, t, r, i = 0) {
    const o = this.options.precision || 0, s = Math.abs(t.x - r.x) < o, a = Math.abs(t.y - r.y) < o;
    if (s || a) {
      const l = new Ge(t, r);
      if (l.length() < this.options.threshold)
        e.hide();
      else {
        const c = l.getCenter(), h = s ? "x" : "y";
        c[h] += i || 0;
        const f = l.vector().vectorAngle(new W(1, 0));
        e.updatePosition(c.x, c.y, f, this.cellView), e.show(), e.options.axis = h;
      }
    } else
      e.hide();
  }
  onRemove() {
    this.resetHandles();
  }
}
(function(n) {
  class e extends xn {
    constructor(r) {
      super(), this.options = r, this.render(), this.delegateEvents({
        mousedown: "onMouseDown",
        touchstart: "onMouseDown"
      });
    }
    render() {
      this.container = xn.createElement("rect", !0);
      const r = this.options.attrs;
      if (typeof r == "function") {
        const i = n.getDefaults();
        this.setAttrs(Object.assign(Object.assign({}, i.attrs), r(this)));
      } else
        this.setAttrs(r);
      this.addClass(this.prefixClassName("edge-tool-segment"));
    }
    updatePosition(r, i, o, s) {
      const a = s.getClosestPoint(new W(r, i)) || new W(r, i);
      let l = Qr().translate(a.x, a.y);
      if (a.equals({ x: r, y: i }))
        l = l.rotate(o);
      else {
        let c = new Ge(r, i, a.x, a.y).vector().vectorAngle(new W(1, 0));
        c !== 0 && (c += 90), l = l.rotate(c);
      }
      this.setAttrs({
        transform: Jg(l),
        cursor: o % 180 === 0 ? "row-resize" : "col-resize"
      });
    }
    onMouseDown(r) {
      this.options.guard(r) || (this.trigger("change", { e: r, handle: this }), r.stopPropagation(), r.preventDefault(), this.options.graph.view.undelegateEvents(), this.delegateDocumentEvents({
        mousemove: "onMouseMove",
        touchmove: "onMouseMove",
        mouseup: "onMouseUp",
        touchend: "onMouseUp",
        touchcancel: "onMouseUp"
      }, r.data));
    }
    onMouseMove(r) {
      this.emit("changing", { e: r, handle: this });
    }
    onMouseUp(r) {
      this.emit("changed", { e: r, handle: this }), this.undelegateDocumentEvents(), this.options.graph.view.delegateEvents();
    }
    show() {
      this.container.style.display = "";
    }
    hide() {
      this.container.style.display = "none";
    }
  }
  n.Handle = e;
})(jy || (jy = {}));
(function(n) {
  n.config({
    name: "segments",
    precision: 0.5,
    threshold: 40,
    snapRadius: 10,
    stopPropagation: !0,
    removeRedundancies: !0,
    attrs: {
      width: 20,
      height: 8,
      x: -10,
      y: -4,
      rx: 4,
      ry: 4,
      fill: "#333",
      stroke: "#fff",
      "stroke-width": 2
    },
    createHandle: (e) => new n.Handle(e),
    anchor: iq
  });
})(jy || (jy = {}));
class ex extends gr.ToolItem {
  get type() {
    return this.options.type;
  }
  onRender() {
    rt(this.container, this.prefixClassName(`edge-tool-${this.type}-anchor`)), this.toggleArea(!1), this.update();
  }
  update() {
    const e = this.type;
    return this.cellView.getTerminalView(e) ? (this.updateAnchor(), this.updateArea(), this.container.style.display = "") : this.container.style.display = "none", this;
  }
  updateAnchor() {
    const e = this.childNodes;
    if (!e)
      return;
    const t = e.anchor;
    if (!t)
      return;
    const r = this.type, i = this.cellView, o = this.options, s = i.getTerminalAnchor(r), a = i.cell.prop([r, "anchor"]);
    t.setAttribute("transform", `translate(${s.x}, ${s.y})`);
    const l = a ? o.customAnchorAttrs : o.defaultAnchorAttrs;
    l && Object.keys(l).forEach((u) => {
      t.setAttribute(u, l[u]);
    });
  }
  updateArea() {
    const e = this.childNodes;
    if (!e)
      return;
    const t = e.area;
    if (!t)
      return;
    const r = this.type, i = this.cellView, o = i.getTerminalView(r);
    if (o) {
      const s = o.cell, a = i.getTerminalMagnet(r);
      let l = this.options.areaPadding || 0;
      Number.isFinite(l) || (l = 0);
      let u, c, h;
      o.isEdgeElement(a) ? (u = o.getBBox(), c = 0, h = u.getCenter()) : (u = o.getUnrotatedBBoxOfElement(a), c = s.getAngle(), h = u.getCenter(), c && h.rotate(-c, s.getBBox().getCenter())), u.inflate(l), Qt(t, {
        x: -u.width / 2,
        y: -u.height / 2,
        width: u.width,
        height: u.height,
        transform: `translate(${h.x}, ${h.y}) rotate(${c})`
      });
    }
  }
  toggleArea(e) {
    if (this.childNodes) {
      const t = this.childNodes.area;
      t && (t.style.display = e ? "" : "none");
    }
  }
  onMouseDown(e) {
    this.guard(e) || (e.stopPropagation(), e.preventDefault(), this.graph.view.undelegateEvents(), this.options.documentEvents && this.delegateDocumentEvents(this.options.documentEvents), this.focus(), this.toggleArea(this.options.restrictArea), this.cell.startBatch("move-anchor", {
      ui: !0,
      toolId: this.cid
    }));
  }
  resetAnchor(e) {
    const t = this.type, r = this.cell;
    e ? r.prop([t, "anchor"], e, {
      rewrite: !0,
      ui: !0,
      toolId: this.cid
    }) : r.removeProp([t, "anchor"], {
      ui: !0,
      toolId: this.cid
    });
  }
  onMouseMove(e) {
    const t = this.type, r = this.cellView, i = r.getTerminalView(t);
    if (i == null)
      return;
    const o = this.normalizeEvent(e), s = i.cell, a = r.getTerminalMagnet(t);
    let l = this.graph.coord.clientToLocalPoint(o.clientX, o.clientY);
    const u = this.options.snap;
    if (typeof u == "function") {
      const f = Ue(u, r, l, i, a, t, r, this);
      l = W.create(f);
    }
    if (this.options.restrictArea)
      if (i.isEdgeElement(a)) {
        const f = i.getClosestPoint(l);
        f && (l = f);
      } else {
        const f = i.getUnrotatedBBoxOfElement(a), d = s.getAngle(), p = s.getBBox().getCenter(), g = l.clone().rotate(d, p);
        f.containsPoint(g) || (l = f.getNearestPointToPoint(g).rotate(-d, p));
      }
    let c;
    const h = this.options.anchor;
    typeof h == "function" && (c = Ue(h, r, l, i, a, t, r, this)), this.resetAnchor(c), this.update();
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onMouseUp(e) {
    this.graph.view.delegateEvents(), this.undelegateDocumentEvents(), this.blur(), this.toggleArea(!1);
    const t = this.cellView;
    this.options.removeRedundancies && t.removeRedundantLinearVertices({ ui: !0, toolId: this.cid }), this.cell.stopBatch("move-anchor", { ui: !0, toolId: this.cid });
  }
  onDblClick() {
    const e = this.options.resetAnchor;
    e && this.resetAnchor(e === !0 ? void 0 : e), this.update();
  }
}
(function(n) {
  n.config({
    tagName: "g",
    markup: [
      {
        tagName: "circle",
        selector: "anchor",
        attrs: {
          cursor: "pointer"
        }
      },
      {
        tagName: "rect",
        selector: "area",
        attrs: {
          "pointer-events": "none",
          fill: "none",
          stroke: "#33334F",
          "stroke-dasharray": "2,4",
          rx: 5,
          ry: 5
        }
      }
    ],
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown",
      dblclick: "onDblClick"
    },
    documentEvents: {
      mousemove: "onMouseMove",
      touchmove: "onMouseMove",
      mouseup: "onMouseUp",
      touchend: "onMouseUp",
      touchcancel: "onMouseUp"
    },
    customAnchorAttrs: {
      "stroke-width": 4,
      stroke: "#33334F",
      fill: "#FFFFFF",
      r: 5
    },
    defaultAnchorAttrs: {
      "stroke-width": 2,
      stroke: "#FFFFFF",
      fill: "#33334F",
      r: 6
    },
    areaPadding: 6,
    snapRadius: 10,
    resetAnchor: !0,
    restrictArea: !0,
    removeRedundancies: !0,
    anchor: iq,
    snap(e, t, r, i, o, s) {
      const a = s.options.snapRadius || 0, l = i === "source", u = l ? 0 : -1, c = this.cell.getVertexAt(u) || this.getTerminalAnchor(l ? "target" : "source");
      return c && (Math.abs(c.x - e.x) < a && (e.x = c.x), Math.abs(c.y - e.y) < a && (e.y = c.y)), e;
    }
  });
})(ex || (ex = {}));
const eAe = ex.define({
  name: "source-anchor",
  type: "source"
}), tAe = ex.define({
  name: "target-anchor",
  type: "target"
});
var nAe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class tx extends gr.ToolItem {
  get type() {
    return this.options.type;
  }
  get ratio() {
    return this.options.ratio;
  }
  init() {
    if (this.options.attrs) {
      const e = this.options.attrs, { class: t } = e, r = nAe(e, ["class"]);
      this.setAttrs(r, this.container), t && rt(this.container, t);
    }
  }
  onRender() {
    rt(this.container, this.prefixClassName(`edge-tool-${this.type}-arrowhead`)), this.update();
  }
  update() {
    const e = this.ratio, t = this.cellView, r = t.getTangentAtRatio(e), i = r ? r.start : t.getPointAtRatio(e), o = r && r.vector().vectorAngle(new W(1, 0)) || 0;
    if (!i)
      return this;
    const s = Qr().translate(i.x, i.y).rotate(o);
    return ug(this.container, s, { absolute: !0 }), this;
  }
  onMouseDown(e) {
    if (this.guard(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const t = this.cellView;
    if (t.can("arrowheadMovable")) {
      t.cell.startBatch("move-arrowhead", {
        ui: !0,
        toolId: this.cid
      });
      const r = this.graph.snapToGrid(e.clientX, e.clientY), i = t.prepareArrowheadDragging(this.type, {
        x: r.x,
        y: r.y,
        options: Object.assign(Object.assign({}, this.options), { toolId: this.cid })
      });
      this.cellView.setEventData(e, i), this.delegateDocumentEvents(this.options.documentEvents, e.data), t.graph.view.undelegateEvents(), this.container.style.pointerEvents = "none";
    }
    this.focus();
  }
  onMouseMove(e) {
    const t = this.normalizeEvent(e), r = this.graph.snapToGrid(t.clientX, t.clientY);
    this.cellView.onMouseMove(t, r.x, r.y), this.update();
  }
  onMouseUp(e) {
    this.undelegateDocumentEvents();
    const t = this.normalizeEvent(e), r = this.cellView, i = this.graph.snapToGrid(t.clientX, t.clientY);
    r.onMouseUp(t, i.x, i.y), this.graph.view.delegateEvents(), this.blur(), this.container.style.pointerEvents = "", r.cell.stopBatch("move-arrowhead", {
      ui: !0,
      toolId: this.cid
    });
  }
}
(function(n) {
  n.config({
    tagName: "path",
    isSVGElement: !0,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    },
    documentEvents: {
      mousemove: "onMouseMove",
      touchmove: "onMouseMove",
      mouseup: "onMouseUp",
      touchend: "onMouseUp",
      touchcancel: "onMouseUp"
    }
  });
})(tx || (tx = {}));
const rAe = tx.define({
  name: "source-arrowhead",
  type: "source",
  ratio: 0,
  attrs: {
    d: "M 10 -8 -10 0 10 8 Z",
    fill: "#333",
    stroke: "#fff",
    "stroke-width": 2,
    cursor: "move"
  }
}), iAe = tx.define({
  name: "target-arrowhead",
  type: "target",
  ratio: 1,
  attrs: {
    d: "M -10 -8 10 0 -10 8 Z",
    fill: "#333",
    stroke: "#fff",
    "stroke-width": 2,
    cursor: "move"
  }
});
class pg extends gr.ToolItem {
  constructor() {
    super(...arguments), this.labelIndex = -1, this.distance = 0.5, this.dblClick = this.onCellDblClick.bind(this);
  }
  onRender() {
    const e = this.cellView;
    e && e.on("cell:dblclick", this.dblClick);
  }
  createElement() {
    const e = [
      this.prefixClassName(`${this.cell.isEdge() ? "edge" : "node"}-tool-editor`),
      this.prefixClassName("cell-tool-editor")
    ];
    this.editor = gr.createElement("div", !1), this.addClass(e, this.editor), this.editor.contentEditable = "true", this.container.appendChild(this.editor);
  }
  removeElement() {
    this.undelegateDocumentEvents(), this.editor && (this.container.removeChild(this.editor), this.editor = null);
  }
  updateEditor() {
    const { cell: e, editor: t } = this;
    if (!t)
      return;
    const { style: r } = t;
    e.isNode() ? this.updateNodeEditorTransform() : e.isEdge() && this.updateEdgeEditorTransform();
    const { attrs: i } = this.options;
    r.fontSize = `${i.fontSize}px`, r.fontFamily = i.fontFamily, r.color = i.color, r.backgroundColor = i.backgroundColor;
    const o = this.getCellText() || "";
    return t.innerText = o, this.setCellText(""), this;
  }
  updateNodeEditorTransform() {
    const { graph: e, cell: t, editor: r } = this;
    if (!r)
      return;
    let i = W.create(), o = 20, s = "", { x: a, y: l } = this.options;
    const { width: u, height: c } = this.options;
    if (typeof a < "u" && typeof l < "u") {
      const d = t.getBBox();
      a = Ks(a, d.width), l = Ks(l, d.height), i = d.topLeft.translate(a, l), o = d.width - a * 2;
    } else {
      const d = t.getBBox();
      i = d.center, o = d.width - 4, s = "translate(-50%, -50%)";
    }
    const h = e.scale(), { style: f } = r;
    i = e.localToGraph(i), f.left = `${i.x}px`, f.top = `${i.y}px`, f.transform = `scale(${h.sx}, ${h.sy}) ${s}`, f.minWidth = `${o}px`, typeof u == "number" && (f.width = `${u}px`), typeof c == "number" && (f.height = `${c}px`);
  }
  updateEdgeEditorTransform() {
    if (!this.event)
      return;
    const { graph: e, editor: t } = this;
    if (!t)
      return;
    let r = W.create(), i = 20;
    const { style: o } = t, s = this.event.target, a = s.parentElement;
    if (a && Kg(a, this.prefixClassName("edge-label"))) {
      const c = a.getAttribute("data-index") || "0";
      this.labelIndex = parseInt(c, 10);
      const h = a.getAttribute("transform"), { translation: f } = s_(h);
      r = new W(f.tx, f.ty), i = un.getBBox(s).width;
    } else {
      if (!this.options.labelAddable)
        return this;
      r = e.clientToLocal(W.create(this.event.clientX, this.event.clientY));
      const h = this.cellView.path.closestPointLength(r);
      this.distance = h, this.labelIndex = -1;
    }
    r = e.localToGraph(r);
    const u = e.scale();
    o.left = `${r.x}px`, o.top = `${r.y}px`, o.minWidth = `${i}px`, o.transform = `scale(${u.sx}, ${u.sy}) translate(-50%, -50%)`;
  }
  onDocumentMouseUp(e) {
    if (this.editor && e.target !== this.editor) {
      const t = this.editor.innerText.replace(/\n$/, "") || "";
      this.setCellText(t !== "" ? t : null), this.removeElement();
    }
  }
  onCellDblClick({ e }) {
    this.editor || (e.stopPropagation(), this.removeElement(), this.event = e, this.createElement(), this.updateEditor(), this.autoFocus(), this.delegateDocumentEvents(this.options.documentEvents));
  }
  onMouseDown(e) {
    e.stopPropagation();
  }
  autoFocus() {
    setTimeout(() => {
      this.editor && (this.editor.focus(), this.selectText());
    });
  }
  selectText() {
    if (window.getSelection && this.editor) {
      const e = document.createRange(), t = window.getSelection();
      e.selectNodeContents(this.editor), t.removeAllRanges(), t.addRange(e);
    }
  }
  getCellText() {
    const { getText: e } = this.options;
    if (typeof e == "function")
      return Ue(e, this.cellView, {
        cell: this.cell,
        index: this.labelIndex
      });
    if (typeof e == "string") {
      if (this.cell.isNode())
        return this.cell.attr(e);
      if (this.cell.isEdge() && this.labelIndex !== -1)
        return this.cell.prop(`labels/${this.labelIndex}/attrs/${e}`);
    }
  }
  setCellText(e) {
    const t = this.options.setText;
    if (typeof t == "function") {
      Ue(t, this.cellView, {
        cell: this.cell,
        value: e,
        index: this.labelIndex,
        distance: this.distance
      });
      return;
    }
    if (typeof t == "string") {
      if (this.cell.isNode()) {
        e !== null && this.cell.attr(t, e);
        return;
      }
      if (this.cell.isEdge()) {
        const r = this.cell;
        if (this.labelIndex === -1) {
          if (e) {
            const i = {
              position: {
                distance: this.distance
              },
              attrs: {}
            };
            Ug(i, `attrs/${t}`, e), r.appendLabel(i);
          }
        } else
          e !== null ? r.prop(`labels/${this.labelIndex}/attrs/${t}`, e) : typeof this.labelIndex == "number" && r.removeLabelAt(this.labelIndex);
      }
    }
  }
  onRemove() {
    const e = this.cellView;
    e && e.off("cell:dblclick", this.dblClick), this.removeElement();
  }
}
(function(n) {
  n.config({
    tagName: "div",
    isSVGElement: !1,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    },
    documentEvents: {
      mouseup: "onDocumentMouseUp",
      touchend: "onDocumentMouseUp",
      touchcancel: "onDocumentMouseUp"
    }
  });
})(pg || (pg = {}));
(function(n) {
  n.NodeEditor = n.define({
    attrs: {
      fontSize: 14,
      fontFamily: "Arial, helvetica, sans-serif",
      color: "#000",
      backgroundColor: "#fff"
    },
    getText: "text/text",
    setText: "text/text"
  }), n.EdgeEditor = n.define({
    attrs: {
      fontSize: 14,
      fontFamily: "Arial, helvetica, sans-serif",
      color: "#000",
      backgroundColor: "#fff"
    },
    labelAddable: !0,
    getText: "label/text",
    setText: "label/text"
  });
})(pg || (pg = {}));
var sq = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
}, gg;
(function(n) {
  n.presets = {
    boundary: Jw,
    button: Tc,
    "button-remove": Tc.Remove,
    "node-editor": pg.NodeEditor
  }, n.registry = or.create({
    type: "node tool",
    process(e, t) {
      if (typeof t == "function")
        return t;
      let r = gr.ToolItem;
      const { inherit: i } = t, o = sq(t, ["inherit"]);
      if (i) {
        const s = this.get(i);
        s == null ? this.onNotFound(i, "inherited") : r = s;
      }
      return o.name == null && (o.name = e), r.define.call(r, o);
    }
  }), n.registry.register(n.presets, !0);
})(gg || (gg = {}));
var vg;
(function(n) {
  n.presets = {
    boundary: Jw,
    vertices: Gy,
    segments: jy,
    button: Tc,
    "button-remove": Tc.Remove,
    "source-anchor": eAe,
    "target-anchor": tAe,
    "source-arrowhead": rAe,
    "target-arrowhead": iAe,
    "edge-editor": pg.EdgeEditor
  }, n.registry = or.create({
    type: "edge tool",
    process(e, t) {
      if (typeof t == "function")
        return t;
      let r = gr.ToolItem;
      const { inherit: i } = t, o = sq(t, ["inherit"]);
      if (i) {
        const s = this.get(i);
        s == null ? this.onNotFound(i, "inherited") : r = s;
      }
      return o.name == null && (o.name = e), r.define.call(r, o);
    }
  }), n.registry.register(n.presets, !0);
})(vg || (vg = {}));
const oAe = pu("center"), sAe = pu("topCenter"), aAe = pu("bottomCenter"), lAe = pu("leftMiddle"), uAe = pu("rightMiddle"), cAe = pu("topLeft"), hAe = pu("topRight"), fAe = pu("bottomLeft"), dAe = pu("bottomRight");
function pu(n) {
  return function(e, t, r, i = {}) {
    const o = i.rotate ? e.getUnrotatedBBoxOfElement(t) : e.getBBoxOfElement(t), s = o[n];
    s.x += Ks(i.dx, o.width), s.y += Ks(i.dy, o.height);
    const a = e.cell;
    return i.rotate ? s.rotate(-a.getAngle(), a.getBBox().getCenter()) : s;
  };
}
function f_(n) {
  return function(e, t, r, i) {
    if (r instanceof Element) {
      const o = this.graph.findViewByElem(r);
      let s;
      if (o)
        if (o.isEdgeElement(r)) {
          const a = i.fixedAt != null ? i.fixedAt : "50%";
          s = aq(o, a);
        } else
          s = o.getBBoxOfElement(r).getCenter();
      else
        s = new W();
      return n.call(this, e, t, s, i);
    }
    return n.apply(this, arguments);
  };
}
function aq(n, e) {
  const t = Kl(e), r = typeof e == "string" ? parseFloat(e) : e;
  return t ? n.getPointAtRatio(r / 100) : n.getPointAtLength(r);
}
const pAe = function(n, e, t, r) {
  const i = Wt.normalize(n.cell.getAngle()), o = n.getBBoxOfElement(e), s = o.getCenter(), a = o.getTopLeft(), l = o.getBottomRight();
  let u = r.padding;
  if (Number.isFinite(u) || (u = 0), a.y + u <= t.y && t.y <= l.y - u) {
    const c = t.y - s.y;
    s.x += i === 0 || i === 180 ? 0 : c * 1 / Math.tan(Wt.toRad(i)), s.y += c;
  } else if (a.x + u <= t.x && t.x <= l.x - u) {
    const c = t.x - s.x;
    s.y += i === 90 || i === 270 ? 0 : c * Math.tan(Wt.toRad(i)), s.x += c;
  }
  return s;
}, gAe = f_(pAe), vAe = function(n, e, t, r, i) {
  const o = n.cell.getConnectionPoint(this.cell, i);
  return (r.dx || r.dy) && o.translate(r.dx || 0, r.dy || 0), o;
}, mAe = function(n, e, t, r) {
  let i, o = 0, s;
  const a = n.cell;
  r.rotate ? (i = n.getUnrotatedBBoxOfElement(e), s = a.getBBox().getCenter(), o = a.getAngle()) : i = n.getBBoxOfElement(e);
  const l = r.padding;
  l != null && Number.isFinite(l) && i.inflate(l), r.rotate && t.rotate(o, s);
  const u = i.getNearestSideToPoint(t);
  let c;
  switch (u) {
    case "left":
      c = i.getLeftMiddle();
      break;
    case "right":
      c = i.getRightMiddle();
      break;
    case "top":
      c = i.getTopCenter();
      break;
    case "bottom":
      c = i.getBottomCenter();
      break;
  }
  const h = r.direction;
  return h === "H" ? (u === "top" || u === "bottom") && (t.x <= i.x + i.width ? c = i.getLeftMiddle() : c = i.getRightMiddle()) : h === "V" && (t.y <= i.y + i.height ? c = i.getTopCenter() : c = i.getBottomCenter()), r.rotate ? c.rotate(-o, s) : c;
}, yAe = f_(mAe), bAe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bottom: aAe,
  bottomLeft: fAe,
  bottomRight: dAe,
  center: oAe,
  left: lAe,
  midSide: yAe,
  nodeCenter: vAe,
  orth: gAe,
  right: uAe,
  top: sAe,
  topLeft: cAe,
  topRight: hAe
}, Symbol.toStringTag, { value: "Module" }));
var mg;
(function(n) {
  n.presets = bAe, n.registry = or.create({
    type: "node endpoint"
  }), n.registry.register(n.presets, !0);
})(mg || (mg = {}));
const OAe = function(n, e, t, r) {
  let i = r.ratio != null ? r.ratio : 0.5;
  return i > 1 && (i /= 100), n.getPointAtRatio(i);
}, wAe = function(n, e, t, r) {
  const i = r.length != null ? r.length : 20;
  return n.getPointAtLength(i);
}, lq = function(n, e, t, r) {
  const i = n.getClosestPoint(t);
  return i ?? new W();
}, xAe = f_(lq), SAe = function(n, e, t, r) {
  const o = n.getConnection(), s = n.getConnectionSubdivisions(), a = new Ge(t.clone().translate(0, 1e6), t.clone().translate(0, -1e6)), l = new Ge(t.clone().translate(1e6, 0), t.clone().translate(-1e6, 0)), u = a.intersect(o, {
    segmentSubdivisions: s
  }), c = l.intersect(o, {
    segmentSubdivisions: s
  }), h = [];
  return u && h.push(...u), c && h.push(...c), h.length > 0 ? t.closest(h) : r.fallbackAt != null ? aq(n, r.fallbackAt) : Ue(lq, this, n, e, t, r);
}, _Ae = f_(SAe), CAe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  closest: xAe,
  length: wAe,
  orth: _Ae,
  ratio: OAe
}, Symbol.toStringTag, { value: "Module" }));
var yg;
(function(n) {
  n.presets = CAe, n.registry = or.create({
    type: "edge endpoint"
  }), n.registry.register(n.presets, !0);
})(yg || (yg = {}));
function d_(n, e, t) {
  let r;
  if (typeof t == "object") {
    if (Number.isFinite(t.y)) {
      const o = new Ge(e, n), { start: s, end: a } = o.parallel(t.y);
      e = s, n = a;
    }
    r = t.x;
  } else
    r = t;
  if (r == null || !Number.isFinite(r))
    return n;
  const i = n.distance(e);
  return r === 0 && i > 0 ? n : n.move(e, -Math.min(r, i - 1));
}
function nx(n) {
  const e = n.getAttribute("stroke-width");
  return e === null ? 0 : parseFloat(e) || 0;
}
function AAe(n) {
  if (n == null)
    return null;
  let e = n;
  do {
    let t = e.tagName;
    if (typeof t != "string")
      return null;
    if (t = t.toUpperCase(), t === "G")
      e = e.firstElementChild;
    else if (t === "TITLE")
      e = e.nextElementSibling;
    else
      break;
  } while (e);
  return e;
}
const uq = function(n, e, t, r) {
  const i = e.getBBoxOfElement(t);
  r.stroked && i.inflate(nx(t) / 2);
  const o = n.intersect(i), s = o && o.length ? n.start.closest(o) : n.end;
  return d_(s, n.start, r.offset);
}, TAe = function(n, e, t, r, i) {
  const o = e.cell, s = o.isNode() ? o.getAngle() : 0;
  if (s === 0)
    return Ue(uq, this, n, e, t, r, i);
  const a = e.getUnrotatedBBoxOfElement(t);
  r.stroked && a.inflate(nx(t) / 2);
  const l = a.getCenter(), u = n.clone().rotate(s, l), c = u.setLength(1e6).intersect(a), h = c && c.length ? u.start.closest(c).rotate(-s, l) : n.end;
  return d_(h, n.start, r.offset);
}, PAe = function(n, e, t, r) {
  let i, o;
  const s = n.end, a = r.selector;
  if (typeof a == "string" ? i = e.findOne(a) : Array.isArray(a) ? i = dL(t, a) : i = AAe(t), !xc(i)) {
    if (i === t || !xc(t))
      return s;
    i = t;
  }
  const l = e.getShapeOfElement(i), u = e.getMatrixOfElement(i), c = e.getRootTranslatedMatrix(), h = e.getRootRotatedMatrix(), f = c.multiply(h).multiply(u), d = f.inverse(), p = un.transformLine(n, d), g = p.start.clone(), v = e.getDataOfElement(i);
  if (r.insideout === !1) {
    v.shapeBBox == null && (v.shapeBBox = l.bbox());
    const O = v.shapeBBox;
    if (O != null && O.containsPoint(g))
      return s;
  }
  r.extrapolate === !0 && p.setLength(1e6);
  let m;
  if (Et.isPath(l)) {
    const O = r.precision || 2;
    v.segmentSubdivisions == null && (v.segmentSubdivisions = l.getSegmentSubdivisions({
      precision: O
    })), m = {
      precision: O,
      segmentSubdivisions: v.segmentSubdivisions
    }, o = p.intersect(l, m);
  } else
    o = p.intersect(l);
  o ? Array.isArray(o) && (o = g.closest(o)) : r.sticky === !0 && (Se.isRectangle(l) ? o = l.getNearestPointToPoint(g) : _c.isEllipse(l) ? o = l.intersectsWithLineFromCenterToPoint(g) : o = l.closestPoint(g, m));
  const y = o ? un.transformPoint(o, f) : s;
  let b = r.offset || 0;
  return r.stroked !== !1 && (typeof b == "object" ? (b = Object.assign({}, b), b.x == null && (b.x = 0), b.x += nx(i) / 2) : b += nx(i) / 2), d_(y, n.start, b);
};
function EAe(n, e, t = 0) {
  const { start: r, end: i } = n;
  let o, s, a, l;
  switch (e) {
    case "left":
      l = "x", o = i, s = r, a = -1;
      break;
    case "right":
      l = "x", o = r, s = i, a = 1;
      break;
    case "top":
      l = "y", o = i, s = r, a = -1;
      break;
    case "bottom":
      l = "y", o = r, s = i, a = 1;
      break;
    default:
      return;
  }
  r[l] < i[l] ? o[l] = s[l] : s[l] = o[l], Number.isFinite(t) && (o[l] += a * t, s[l] += a * t);
}
const kAe = function(n, e, t, r) {
  const { alignOffset: i, align: o } = r;
  return o && EAe(n, o, i), d_(n.end, n.start, r.offset);
}, MAe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  anchor: kAe,
  bbox: uq,
  boundary: PAe,
  rect: TAe
}, Symbol.toStringTag, { value: "Module" }));
var bg;
(function(n) {
  n.presets = MAe, n.registry = or.create({
    type: "connection point"
  }), n.registry.register(n.presets, !0);
})(bg || (bg = {}));
const DAe = function(n) {
  return [...n];
}, LAe = function(n, e, t) {
  const r = e.side || "bottom", i = Zf(e.padding || 40), o = t.sourceBBox, s = t.targetBBox, a = o.getCenter(), l = s.getCenter();
  let u, c, h;
  switch (r) {
    case "top":
      h = -1, u = "y", c = "height";
      break;
    case "left":
      h = -1, u = "x", c = "width";
      break;
    case "right":
      h = 1, u = "x", c = "width";
      break;
    case "bottom":
    default:
      h = 1, u = "y", c = "height";
      break;
  }
  return a[u] += h * (o[c] / 2 + i[r]), l[u] += h * (s[c] / 2 + i[r]), h * (a[u] - l[u]) > 0 ? l[u] = a[u] : a[u] = l[u], [a.toJSON(), ...n, l.toJSON()];
};
function r1(n) {
  return new Se(n.x, n.y, 0, 0);
}
function rx(n = {}) {
  const e = Zf(n.padding || 20);
  return {
    x: -e.left,
    y: -e.top,
    width: e.left + e.right,
    height: e.top + e.bottom
  };
}
function cq(n, e = {}) {
  return n.sourceBBox.clone().moveAndExpand(rx(e));
}
function hq(n, e = {}) {
  return n.targetBBox.clone().moveAndExpand(rx(e));
}
function IAe(n, e = {}) {
  return n.sourceAnchor ? n.sourceAnchor : cq(n, e).getCenter();
}
function RAe(n, e = {}) {
  return n.targetAnchor ? n.targetAnchor : hq(n, e).getCenter();
}
const fq = function(n, e, t) {
  let r = cq(t, e), i = hq(t, e);
  const o = IAe(t, e), s = RAe(t, e);
  r = r.union(r1(o)), i = i.union(r1(s));
  const a = n.map((c) => W.create(c));
  a.unshift(o), a.push(s);
  let l = null;
  const u = [];
  for (let c = 0, h = a.length - 1; c < h; c += 1) {
    let f = null;
    const d = a[c], p = a[c + 1], g = Ko.getBearing(d, p) != null;
    if (c === 0)
      c + 1 === h ? r.intersectsWithRect(i.clone().inflate(1)) ? f = Ko.insideNode(d, p, r, i) : g || (f = Ko.nodeToNode(d, p, r, i)) : r.containsPoint(p) ? f = Ko.insideNode(d, p, r, r1(p).moveAndExpand(rx(e))) : g || (f = Ko.nodeToVertex(d, p, r));
    else if (c + 1 === h) {
      const v = g && Ko.getBearing(p, d) === l;
      i.containsPoint(d) || v ? f = Ko.insideNode(d, p, r1(d).moveAndExpand(rx(e)), i, l) : g || (f = Ko.vertexToNode(d, p, i, l));
    } else
      g || (f = Ko.vertexToVertex(d, p, l));
    f ? (u.push(...f.points), l = f.direction) : l = Ko.getBearing(d, p), c + 1 < h && u.push(p);
  }
  return u;
};
var Ko;
(function(n) {
  const e = {
    N: "S",
    S: "N",
    E: "W",
    W: "E"
  }, t = {
    N: -Math.PI / 2 * 3,
    S: -Math.PI / 2,
    E: 0,
    W: Math.PI
  };
  function r(h, f, d) {
    let p = new W(h.x, f.y);
    return d.containsPoint(p) && (p = new W(f.x, h.y)), p;
  }
  function i(h, f) {
    return h[f === "W" || f === "E" ? "width" : "height"];
  }
  n.getBBoxSize = i;
  function o(h, f) {
    return h.x === f.x ? h.y > f.y ? "N" : "S" : h.y === f.y ? h.x > f.x ? "W" : "E" : null;
  }
  n.getBearing = o;
  function s(h, f, d) {
    const p = new W(h.x, f.y), g = new W(f.x, h.y), v = o(h, p), m = o(h, g), y = d ? e[d] : null, b = v === d || v !== y && (m === y || m !== d) ? p : g;
    return { points: [b], direction: o(b, f) };
  }
  n.vertexToVertex = s;
  function a(h, f, d) {
    const p = r(h, f, d);
    return { points: [p], direction: o(p, f) };
  }
  n.nodeToVertex = a;
  function l(h, f, d, p) {
    const g = [new W(h.x, f.y), new W(f.x, h.y)], v = g.filter((b) => !d.containsPoint(b)), m = v.filter((b) => o(b, h) !== p);
    let y;
    if (m.length > 0)
      return y = m.filter((b) => o(h, b) === p).pop(), y = y || m[0], {
        points: [y],
        direction: o(y, f)
      };
    {
      y = Ahe(g, v)[0];
      const b = W.create(f).move(y, -i(d, p) / 2);
      return {
        points: [r(b, h, d), b],
        direction: o(b, f)
      };
    }
  }
  n.vertexToNode = l;
  function u(h, f, d, p) {
    let g = a(f, h, p);
    const v = g.points[0];
    if (d.containsPoint(v)) {
      g = a(h, f, d);
      const m = g.points[0];
      if (p.containsPoint(m)) {
        const y = W.create(h).move(m, -i(d, o(h, m)) / 2), b = W.create(f).move(v, -i(p, o(f, v)) / 2), O = new Ge(y, b).getCenter(), w = a(h, O, d), x = s(O, f, w.direction);
        g.points = [w.points[0], x.points[0]], g.direction = x.direction;
      }
    }
    return g;
  }
  n.nodeToNode = u;
  function c(h, f, d, p, g) {
    const v = d.union(p).inflate(1), m = v.getCenter(), y = m.distance(f) > m.distance(h), b = y ? f : h, O = y ? h : f;
    let w, x, S;
    g ? (w = W.fromPolar(v.width + v.height, t[g], b), w = v.getNearestPointToPoint(w).move(w, -1)) : w = v.getNearestPointToPoint(b).move(b, 1), x = r(w, O, v);
    let _;
    w.round().equals(x.round()) ? (x = W.fromPolar(v.width + v.height, Wt.toRad(w.theta(b)) + Math.PI / 2, O), x = v.getNearestPointToPoint(x).move(O, 1).round(), S = r(w, x, v), _ = y ? [x, S, w] : [w, S, x]) : _ = y ? [x, w] : [w, x];
    const C = o(y ? w : x, f);
    return {
      points: _,
      direction: C
    };
  }
  n.insideNode = c;
})(Ko || (Ko = {}));
const $Ae = {
  step: 10,
  maxLoopCount: 2e3,
  precision: 1,
  maxDirectionChange: 90,
  perpendicular: !0,
  excludeTerminals: [],
  excludeNodes: [],
  excludeShapes: [],
  startDirections: ["top", "right", "bottom", "left"],
  endDirections: ["top", "right", "bottom", "left"],
  directionMap: {
    top: { x: 0, y: -1 },
    right: { x: 1, y: 0 },
    bottom: { x: 0, y: 1 },
    left: { x: -1, y: 0 }
  },
  cost() {
    return qu(this.step, this);
  },
  directions() {
    const n = qu(this.step, this), e = qu(this.cost, this);
    return [
      { cost: e, offsetX: n, offsetY: 0 },
      { cost: e, offsetX: -n, offsetY: 0 },
      { cost: e, offsetX: 0, offsetY: n },
      { cost: e, offsetX: 0, offsetY: -n }
    ];
  },
  penalties() {
    const n = qu(this.step, this);
    return {
      0: 0,
      45: n / 2,
      90: n / 2
    };
  },
  paddingBox() {
    const n = qu(this.step, this);
    return {
      x: -n,
      y: -n,
      width: 2 * n,
      height: 2 * n
    };
  },
  fallbackRouter: fq,
  draggingRouter: null,
  snapToGrid: !0
};
function qu(n, e) {
  return typeof n == "function" ? n.call(e) : n;
}
function NAe(n) {
  const e = Object.keys(n).reduce((t, r) => {
    const i = t;
    return r === "fallbackRouter" || r === "draggingRouter" || r === "fallbackRoute" ? i[r] = n[r] : i[r] = qu(n[r], n), t;
  }, {});
  if (e.padding) {
    const t = Zf(e.padding);
    e.paddingBox = {
      x: -t.left,
      y: -t.top,
      width: t.left + t.right,
      height: t.top + t.bottom
    };
  }
  return e.directions.forEach((t) => {
    const r = new W(0, 0), i = new W(t.offsetX, t.offsetY);
    t.angle = Wt.normalize(r.theta(i));
  }), e;
}
const h5 = 1, f5 = 2;
class BAe {
  constructor() {
    this.items = [], this.hash = {}, this.values = {};
  }
  add(e, t) {
    this.hash[e] ? this.items.splice(this.items.indexOf(e), 1) : this.hash[e] = h5, this.values[e] = t;
    const r = yfe(this.items, e, (i) => this.values[i]);
    this.items.splice(r, 0, e);
  }
  pop() {
    const e = this.items.shift();
    return e && (this.hash[e] = f5), e;
  }
  isOpen(e) {
    return this.hash[e] === h5;
  }
  isClose(e) {
    return this.hash[e] === f5;
  }
  isEmpty() {
    return this.items.length === 0;
  }
}
class VAe {
  constructor(e) {
    this.options = e, this.mapGridSize = 100, this.map = {};
  }
  /**
   * Builds a map of all nodes for quicker obstacle queries i.e. is a point
   * contained in any obstacle?
   *
   * A simplified grid search.
   */
  build(e, t) {
    const r = this.options, i = r.excludeTerminals.reduce((u, c) => {
      const h = t[c];
      if (h) {
        const f = e.getCell(h.cell);
        f && u.push(f);
      }
      return u;
    }, []);
    let o = [];
    const s = e.getCell(t.getSourceCellId());
    s && (o = AN(o, s.getAncestors().map((u) => u.id)));
    const a = e.getCell(t.getTargetCellId());
    a && (o = AN(o, a.getAncestors().map((u) => u.id)));
    const l = this.mapGridSize;
    return e.getNodes().reduce((u, c) => {
      const h = i.some((v) => v.id === c.id), f = c.shape ? r.excludeShapes.includes(c.shape) : !1, d = r.excludeNodes.some((v) => typeof v == "string" ? c.id === v : v === c), p = o.includes(c.id), g = f || h || d || p;
      if (c.isVisible() && !g) {
        const v = c.getBBox().moveAndExpand(r.paddingBox), m = v.getOrigin().snapToGrid(l), y = v.getCorner().snapToGrid(l);
        for (let b = m.x; b <= y.x; b += l)
          for (let O = m.y; O <= y.y; O += l) {
            const w = new W(b, O).toString();
            u[w] == null && (u[w] = []), u[w].push(v);
          }
      }
      return u;
    }, this.map), this;
  }
  isAccessible(e) {
    const t = e.clone().snapToGrid(this.mapGridSize).toString(), r = this.map[t];
    return r ? r.every((i) => !i.containsPoint(e)) : !0;
  }
}
function dq(n, e) {
  const t = n.sourceBBox.clone();
  return e && e.paddingBox ? t.moveAndExpand(e.paddingBox) : t;
}
function pq(n, e) {
  const t = n.targetBBox.clone();
  return e && e.paddingBox ? t.moveAndExpand(e.paddingBox) : t;
}
function gq(n, e) {
  return n.sourceAnchor ? n.sourceAnchor : dq(n, e).getCenter();
}
function zAe(n, e) {
  return n.targetAnchor ? n.targetAnchor : pq(n, e).getCenter();
}
function n2(n, e, t, r, i) {
  const o = 360 / t, s = n.theta(FAe(n, e, r, i)), a = Wt.normalize(s + o / 2);
  return o * Math.floor(a / o);
}
function FAe(n, e, t, r) {
  const i = r.step, o = e.x - n.x, s = e.y - n.y, a = o / t.x, l = s / t.y, u = a * i, c = l * i;
  return new W(n.x + u, n.y + c);
}
function d5(n, e) {
  const t = Math.abs(n - e);
  return t > 180 ? 360 - t : t;
}
function QAe(n, e) {
  const t = e.step;
  return e.directions.forEach((r) => {
    r.gridOffsetX = r.offsetX / t * n.x, r.gridOffsetY = r.offsetY / t * n.y;
  }), e.directions;
}
function ZAe(n, e, t) {
  return {
    source: e.clone(),
    x: p5(t.x - e.x, n),
    y: p5(t.y - e.y, n)
  };
}
function p5(n, e) {
  if (!n)
    return e;
  const t = Math.abs(n), r = Math.round(t / e);
  if (!r)
    return t;
  const i = r * e, s = (t - i) / r;
  return e + s;
}
function WAe(n, e) {
  const t = e.source, r = Xt.snapToGrid(n.x - t.x, e.x) + t.x, i = Xt.snapToGrid(n.y - t.y, e.y) + t.y;
  return new W(r, i);
}
function bm(n, e) {
  return n.round(e);
}
function XO(n, e, t) {
  return bm(WAe(n.clone(), e), t);
}
function ty(n) {
  return n.toString();
}
function r2(n) {
  return new W(n.x === 0 ? 0 : Math.abs(n.x) / n.x, n.y === 0 ? 0 : Math.abs(n.y) / n.y);
}
function g5(n, e) {
  let t = 1 / 0;
  for (let r = 0, i = e.length; r < i; r += 1) {
    const o = n.manhattanDistance(e[r]);
    o < t && (t = o);
  }
  return t;
}
function v5(n, e, t, r, i) {
  const o = i.precision, s = i.directionMap, a = n.diff(e.getCenter()), l = Object.keys(s).reduce((u, c) => {
    if (t.includes(c)) {
      const h = s[c], f = new W(n.x + h.x * (Math.abs(a.x) + e.width), n.y + h.y * (Math.abs(a.y) + e.height)), p = new Ge(n, f).intersect(e) || [];
      let g, v = null;
      for (let m = 0; m < p.length; m += 1) {
        const y = p[m], b = n.squaredDistance(y);
        (g == null || b > g) && (g = b, v = y);
      }
      if (v) {
        let m = XO(v, r, o);
        e.containsPoint(m) && (m = XO(m.translate(h.x * r.x, h.y * r.y), r, o)), u.push(m);
      }
    }
    return u;
  }, []);
  return e.containsPoint(n) || l.push(XO(n, r, o)), l;
}
function GAe(n, e, t, r, i) {
  const o = [];
  let s = r2(i.diff(t)), a = ty(t), l = n[a], u;
  for (; l; ) {
    u = e[a];
    const f = r2(u.diff(l));
    f.equals(s) || (o.unshift(u), s = f), a = ty(l), l = n[a];
  }
  const c = e[a];
  return r2(c.diff(r)).equals(s) || o.unshift(c), o;
}
function jAe(n, e, t, r, i) {
  const o = i.precision;
  let s, a;
  Se.isRectangle(e) ? s = bm(gq(n, i).clone(), o) : s = bm(e.clone(), o), Se.isRectangle(t) ? a = bm(zAe(n, i).clone(), o) : a = bm(t.clone(), o);
  const l = ZAe(i.step, s, a), u = s, c = a;
  let h, f;
  if (Se.isRectangle(e) ? h = v5(u, e, i.startDirections, l, i) : h = [u], Se.isRectangle(t) ? f = v5(a, t, i.endDirections, l, i) : f = [c], h = h.filter((d) => r.isAccessible(d)), f = f.filter((d) => r.isAccessible(d)), h.length > 0 && f.length > 0) {
    const d = new BAe(), p = {}, g = {}, v = {};
    for (let A = 0, T = h.length; A < T; A += 1) {
      const k = h[A], L = ty(k);
      d.add(L, g5(k, f)), p[L] = k, v[L] = 0;
    }
    const m = i.previousDirectionAngle, y = m === void 0;
    let b, O;
    const w = QAe(l, i), x = w.length, S = f.reduce((A, T) => {
      const k = ty(T);
      return A.push(k), A;
    }, []), _ = W.equalPoints(h, f);
    let C = i.maxLoopCount;
    for (; !d.isEmpty() && C > 0; ) {
      const A = d.pop(), T = p[A], k = g[A], L = v[A], D = T.equals(u), E = k == null;
      let M;
      if (E ? y ? D ? M = null : M = n2(u, T, x, l, i) : M = m : M = n2(k, T, x, l, i), !(E && _) && S.indexOf(A) >= 0)
        return i.previousDirectionAngle = M, GAe(g, p, T, u, c);
      for (let N = 0; N < x; N += 1) {
        b = w[N];
        const $ = b.angle;
        if (O = d5(M, $), !(y && D) && O > i.maxDirectionChange)
          continue;
        const V = XO(T.clone().translate(b.gridOffsetX || 0, b.gridOffsetY || 0), l, o), H = ty(V);
        if (d.isClose(H) || !r.isAccessible(V))
          continue;
        if (S.indexOf(H) >= 0 && !V.equals(c)) {
          const se = n2(V, c, x, l, i);
          if (d5($, se) > i.maxDirectionChange)
            continue;
        }
        const G = b.cost, q = D ? 0 : i.penalties[O], Y = L + G + q;
        (!d.isOpen(H) || Y < v[H]) && (p[H] = V, g[H] = T, v[H] = Y, d.add(H, Y + g5(V, f)));
      }
      C -= 1;
    }
  }
  return i.fallbackRoute ? Ue(i.fallbackRoute, this, u, c, i) : null;
}
function HAe(n, e = 10) {
  if (n.length <= 1)
    return n;
  for (let t = 0, r = n.length; t < r - 1; t += 1) {
    const i = n[t], o = n[t + 1];
    if (i.x === o.x) {
      const s = e * Math.round(i.x / e);
      i.x !== s && (i.x = s, o.x = s);
    } else if (i.y === o.y) {
      const s = e * Math.round(i.y / e);
      i.y !== s && (i.y = s, o.y = s);
    }
  }
  return n;
}
const qAe = function(n, e, t) {
  const r = NAe(e), i = dq(t, r), o = pq(t, r), s = gq(t, r), a = new VAe(r).build(t.graph.model, t.cell), l = n.map((d) => W.create(d)), u = [];
  let c = s, h, f;
  for (let d = 0, p = l.length; d <= p; d += 1) {
    let g = null;
    if (h = f || i, f = l[d], f == null) {
      f = o;
      const m = t.cell;
      if ((m.getSourceCellId() == null || m.getTargetCellId() == null) && typeof r.draggingRouter == "function") {
        const b = h === i ? s : h, O = f.getOrigin();
        g = Ue(r.draggingRouter, t, b, O, r);
      }
    }
    if (g == null && (g = jAe(t, h, f, a, r)), g === null)
      return console.warn("Unable to execute manhattan algorithm, use orth instead"), Ue(r.fallbackRouter, this, n, r, t);
    const v = g[0];
    v && v.equals(c) && g.shift(), c = g[g.length - 1] || c, u.push(...g);
  }
  return r.snapToGrid ? HAe(u, t.graph.grid.getGridSize()) : u;
}, vq = function(n, e, t) {
  return Ue(qAe, this, n, Object.assign(Object.assign({}, $Ae), e), t);
}, YAe = {
  maxDirectionChange: 45,
  // an array of directions to find next points on the route
  // different from start/end directions
  directions() {
    const n = qu(this.step, this), e = qu(this.cost, this), t = Math.ceil(Math.sqrt(n * n << 1));
    return [
      { cost: e, offsetX: n, offsetY: 0 },
      { cost: t, offsetX: n, offsetY: n },
      { cost: e, offsetX: 0, offsetY: n },
      { cost: t, offsetX: -n, offsetY: n },
      { cost: e, offsetX: -n, offsetY: 0 },
      { cost: t, offsetX: -n, offsetY: -n },
      { cost: e, offsetX: 0, offsetY: -n },
      { cost: t, offsetX: n, offsetY: -n }
    ];
  },
  // a simple route used in situations when main routing method fails
  // (exceed max number of loop iterations, inaccessible)
  fallbackRoute(n, e, t) {
    const r = n.theta(e), i = [];
    let o = { x: e.x, y: n.y }, s = { x: n.x, y: e.y };
    if (r % 180 > 90) {
      const b = o;
      o = s, s = b;
    }
    const a = r % 90 < 45 ? o : s, l = new Ge(n, a), u = 90 * Math.ceil(r / 90), c = W.fromPolar(l.squaredLength(), Wt.toRad(u + 135), a), h = new Ge(e, c), f = l.intersectsWithLine(h), d = f || e, p = f ? d : n, g = 360 / t.directions.length, v = p.theta(e), m = Wt.normalize(v + g / 2), y = g * Math.floor(m / g);
    return t.previousDirectionAngle = y, d && i.push(d.round()), i.push(e), i;
  }
}, XAe = function(n, e, t) {
  return Ue(vq, this, n, Object.assign(Object.assign({}, YAe), e), t);
}, UAe = function(n, e, t) {
  const r = e.offset || 32, i = e.min == null ? 16 : e.min;
  let o = 0, s = e.direction;
  const a = t.sourceBBox, l = t.targetBBox, u = a.getCenter(), c = l.getCenter();
  if (typeof r == "number" && (o = r), s == null) {
    let m = l.left - a.right, y = l.top - a.bottom;
    m >= 0 && y >= 0 ? s = m >= y ? "L" : "T" : m <= 0 && y >= 0 ? (m = a.left - l.right, m >= 0 ? s = m >= y ? "R" : "T" : s = "T") : m >= 0 && y <= 0 ? (y = a.top - l.bottom, y >= 0 ? s = m >= y ? "L" : "B" : s = "L") : (m = a.left - l.right, y = a.top - l.bottom, m >= 0 && y >= 0 ? s = m >= y ? "R" : "B" : m <= 0 && y >= 0 ? s = "B" : m >= 0 && y <= 0 ? s = "R" : s = Math.abs(m) > Math.abs(y) ? "R" : "B");
  }
  s === "H" ? s = c.x - u.x >= 0 ? "L" : "R" : s === "V" && (s = c.y - u.y >= 0 ? "T" : "B"), r === "center" && (s === "L" ? o = (l.left - a.right) / 2 : s === "R" ? o = (a.left - l.right) / 2 : s === "T" ? o = (l.top - a.bottom) / 2 : s === "B" && (o = (a.top - l.bottom) / 2));
  let h, f, d;
  const p = s === "L" || s === "R";
  if (p) {
    if (c.y === u.y)
      return [...n];
    d = s === "L" ? 1 : -1, h = "x", f = "width";
  } else {
    if (c.x === u.x)
      return [...n];
    d = s === "T" ? 1 : -1, h = "y", f = "height";
  }
  const g = u.clone(), v = c.clone();
  if (g[h] += d * (a[f] / 2 + o), v[h] -= d * (l[f] / 2 + o), p) {
    const m = g.x, y = v.x, b = a.width / 2 + i, O = l.width / 2 + i;
    c.x > u.x ? y <= m && (g.x = Math.max(y, u.x + b), v.x = Math.min(m, c.x - O)) : y >= m && (g.x = Math.min(y, u.x - b), v.x = Math.max(m, c.x + O));
  } else {
    const m = g.y, y = v.y, b = a.height / 2 + i, O = l.height / 2 + i;
    c.y > u.y ? y <= m && (g.y = Math.max(y, u.y + b), v.y = Math.min(m, c.y - O)) : y >= m && (g.y = Math.min(y, u.y - b), v.y = Math.max(m, c.y + O));
  }
  return [g.toJSON(), ...n, v.toJSON()];
};
function Dd(n, e) {
  if (e != null && e !== !1) {
    const t = typeof e == "boolean" ? 0 : e;
    if (t > 0) {
      const r = W.create(n[1]).move(n[2], t), i = W.create(n[1]).move(n[0], t);
      return [r.toJSON(), ...n, i.toJSON()];
    }
    {
      const r = n[1];
      return [Object.assign({}, r), ...n, Object.assign({}, r)];
    }
  }
  return n;
}
const KAe = function(n, e, t) {
  const r = e.width || 50, o = (e.height || 80) / 2, s = e.angle || "auto", a = t.sourceAnchor, l = t.targetAnchor, u = t.sourceBBox, c = t.targetBBox;
  if (a.equals(l)) {
    const h = (m) => {
      const y = Wt.toRad(m), b = Math.sin(y), O = Math.cos(y), w = new W(a.x + O * r, a.y + b * r), x = new W(w.x - O * o, w.y - b * o), S = x.clone().rotate(-90, w), _ = x.clone().rotate(90, w);
      return [S.toJSON(), w.toJSON(), _.toJSON()];
    }, f = (m) => {
      const y = a.clone().move(m, -1), b = new Ge(y, m);
      return !u.containsPoint(m) && !u.intersectsWithLine(b);
    }, d = [0, 90, 180, 270, 45, 135, 225, 315];
    if (typeof s == "number")
      return Dd(h(s), e.merge);
    const p = u.getCenter();
    if (p.equals(a))
      return Dd(h(0), e.merge);
    const g = p.angleBetween(a, p.clone().translate(1, 0));
    let v = h(g);
    if (f(v[1]))
      return Dd(v, e.merge);
    for (let m = 1, y = d.length; m < y; m += 1)
      if (v = h(g + d[m]), f(v[1]))
        return Dd(v, e.merge);
    return Dd(v, e.merge);
  }
  {
    const h = new Ge(a, l);
    let f = h.parallel(-r), d = f.getCenter(), p = f.start.clone().move(f.end, o), g = f.end.clone().move(f.start, o);
    const v = h.parallel(-1), m = new Ge(v.start, d), y = new Ge(v.end, d);
    if ((u.containsPoint(d) || c.containsPoint(d) || u.intersectsWithLine(m) || u.intersectsWithLine(y) || c.intersectsWithLine(m) || c.intersectsWithLine(y)) && (f = h.parallel(r), d = f.getCenter(), p = f.start.clone().move(f.end, o), g = f.end.clone().move(f.start, o)), e.merge) {
      const b = new Ge(a, l), O = new Ge(d, b.center).setLength(Number.MAX_SAFE_INTEGER), w = u.intersectsWithLine(O), x = c.intersectsWithLine(O), S = w ? Array.isArray(w) ? w : [w] : [];
      x && (Array.isArray(x) ? S.push(...x) : S.push(x));
      const _ = b.center.closest(S);
      _ ? (t.sourceAnchor = _.clone(), t.targetAnchor = _.clone()) : (t.sourceAnchor = b.center.clone(), t.targetAnchor = b.center.clone());
    }
    return Dd([p.toJSON(), d.toJSON(), g.toJSON()], e.merge);
  }
}, JAe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  er: UAe,
  loop: KAe,
  manhattan: vq,
  metro: XAe,
  normal: DAe,
  oneSide: LAe,
  orth: fq
}, Symbol.toStringTag, { value: "Module" }));
var ec;
(function(n) {
  n.presets = JAe, n.registry = or.create({
    type: "router"
  }), n.registry.register(n.presets, !0);
})(ec || (ec = {}));
const eTe = function(n, e, t, r = {}) {
  const i = [n, ...t, e], o = new Oi(i), s = new Et(o);
  return r.raw ? s : s.serialize();
}, tTe = function(n, e, t, r = {}) {
  const i = t.length === 3 ? 0 : 1, o = W.create(t[0 + i]), s = W.create(t[2 + i]), a = W.create(t[1 + i]);
  if (!W.equals(n, e)) {
    const u = new W((n.x + e.x) / 2, (n.y + e.y) / 2), c = u.angleBetween(W.create(n).rotate(90, u), a);
    c > 1 && (o.rotate(180 - c, u), s.rotate(180 - c, u), a.rotate(180 - c, u));
  }
  const l = `
     M ${n.x} ${n.y}
     Q ${o.x} ${o.y} ${a.x} ${a.y}
     Q ${s.x} ${s.y} ${e.x} ${e.y}
  `;
  return r.raw ? Et.parse(l) : l;
}, nTe = function(n, e, t, r = {}) {
  const i = new Et();
  i.appendSegment(Et.createSegment("M", n));
  const o = 1 / 3, s = 2 / 3, a = r.radius || 10;
  let l, u;
  for (let c = 0, h = t.length; c < h; c += 1) {
    const f = W.create(t[c]), d = t[c - 1] || n, p = t[c + 1] || e;
    l = u || f.distance(d) / 2, u = f.distance(p) / 2;
    const g = -Math.min(a, l), v = -Math.min(a, u), m = f.clone().move(d, g).round(), y = f.clone().move(p, v).round(), b = new W(o * m.x + s * f.x, s * f.y + o * m.y), O = new W(o * y.x + s * f.x, s * f.y + o * y.y);
    i.appendSegment(Et.createSegment("L", m)), i.appendSegment(Et.createSegment("C", b, O, y));
  }
  return i.appendSegment(Et.createSegment("L", e)), r.raw ? i : i.serialize();
}, rTe = function(n, e, t, r = {}) {
  let i, o = r.direction;
  if (t && t.length !== 0) {
    const s = [n, ...t, e], a = Wn.throughPoints(s);
    i = new Et(a);
  } else if (i = new Et(), i.appendSegment(Et.createSegment("M", n)), o || (o = Math.abs(n.x - e.x) >= Math.abs(n.y - e.y) ? "H" : "V"), o === "H") {
    const s = (n.x + e.x) / 2;
    i.appendSegment(Et.createSegment("C", s, n.y, s, e.y, e.x, e.y));
  } else {
    const s = (n.y + e.y) / 2;
    i.appendSegment(Et.createSegment("C", n.x, s, e.x, s, e.x, e.y));
  }
  return r.raw ? i : i.serialize();
}, m5 = 1, i1 = 1 / 3, o1 = 2 / 3;
function iTe(n) {
  let e = n.graph._jumpOverUpdateList;
  if (e == null && (e = n.graph._jumpOverUpdateList = [], n.graph.on("cell:mouseup", () => {
    const t = n.graph._jumpOverUpdateList;
    setTimeout(() => {
      for (let r = 0; r < t.length; r += 1)
        t[r].update();
    });
  }), n.graph.on("model:reseted", () => {
    e = n.graph._jumpOverUpdateList = [];
  })), e.indexOf(n) < 0) {
    e.push(n);
    const t = () => e.splice(e.indexOf(n), 1);
    n.cell.once("change:connector", t), n.cell.once("removed", t);
  }
}
function i2(n, e, t = []) {
  const r = [n, ...t, e], i = [];
  return r.forEach((o, s) => {
    const a = r[s + 1];
    a != null && i.push(new Ge(o, a));
  }), i;
}
function oTe(n, e) {
  const t = [];
  return e.forEach((r) => {
    const i = n.intersectsWithLine(r);
    i && t.push(i);
  }), t;
}
function y5(n, e) {
  return new Ge(n, e).squaredLength();
}
function sTe(n, e, t) {
  return e.reduce((r, i, o) => {
    if (ix.includes(i))
      return r;
    const s = r.pop() || n, a = W.create(i).move(s.start, -t);
    let l = W.create(i).move(s.start, +t);
    const u = e[o + 1];
    if (u != null) {
      const f = l.distance(u);
      f <= t && (l = u.move(s.start, f), ix.push(u));
    } else if (a.distance(s.end) < t * 2 + m5)
      return r.push(s), r;
    if (l.distance(s.start) < t * 2 + m5)
      return r.push(s), r;
    const h = new Ge(a, l);
    return Hy.push(h), r.push(new Ge(s.start, a), h, new Ge(l, s.end)), r;
  }, []);
}
function b5(n, e, t, r) {
  const i = new Et();
  let o;
  return o = Et.createSegment("M", n[0].start), i.appendSegment(o), n.forEach((s, a) => {
    if (Hy.includes(s)) {
      let l, u, c, h;
      if (t === "arc") {
        l = -90, u = s.start.diff(s.end), (u.x < 0 || u.x === 0 && u.y < 0) && (l += 180);
        const d = s.getCenter(), p = new Ge(d, s.end).rotate(l, d);
        let g;
        g = new Ge(s.start, d), c = g.pointAt(2 / 3).rotate(l, s.start), h = p.pointAt(1 / 3).rotate(-l, p.end), o = Et.createSegment("C", c, h, p.end), i.appendSegment(o), g = new Ge(d, s.end), c = p.pointAt(1 / 3).rotate(l, p.end), h = g.pointAt(1 / 3).rotate(-l, s.end), o = Et.createSegment("C", c, h, s.end), i.appendSegment(o);
      } else if (t === "gap")
        o = Et.createSegment("M", s.end), i.appendSegment(o);
      else if (t === "cubic") {
        l = s.start.theta(s.end);
        const f = e * 0.6;
        let d = e * 1.35;
        u = s.start.diff(s.end), (u.x < 0 || u.x === 0 && u.y < 0) && (d *= -1), c = new W(s.start.x + f, s.start.y + d).rotate(l, s.start), h = new W(s.end.x - f, s.end.y + d).rotate(l, s.end), o = Et.createSegment("C", c, h, s.end), i.appendSegment(o);
      }
    } else {
      const l = n[a + 1];
      r === 0 || !l || Hy.includes(l) ? (o = Et.createSegment("L", s.end), i.appendSegment(o)) : aTe(r, i, s.end, s.start, l.end);
    }
  }), i;
}
function aTe(n, e, t, r, i) {
  const o = t.distance(r) / 2, s = t.distance(i) / 2, a = -Math.min(n, o), l = -Math.min(n, s), u = t.clone().move(r, a).round(), c = t.clone().move(i, l).round(), h = new W(i1 * u.x + o1 * t.x, o1 * t.y + i1 * u.y), f = new W(i1 * c.x + o1 * t.x, o1 * t.y + i1 * c.y);
  let d;
  d = Et.createSegment("L", u), e.appendSegment(d), d = Et.createSegment("C", h, f, c), e.appendSegment(d);
}
let Hy, ix;
const lTe = function(n, e, t, r = {}) {
  Hy = [], ix = [], iTe(this);
  const i = r.size || 5, o = r.type || "arc", s = r.radius || 0, a = r.ignoreConnectors || ["smooth"], l = this.graph, c = l.model.getEdges();
  if (c.length === 1)
    return b5(i2(n, e, t), i, o, s);
  const h = this.cell, f = c.indexOf(h), d = l.options.connecting.connector || {}, p = c.filter((O, w) => {
    const x = O.getConnector() || d;
    return a.includes(x.name) ? !1 : w > f ? x.name !== "jumpover" : !0;
  }), g = p.map((O) => l.findViewByCell(O)), v = i2(n, e, t), m = g.map((O) => O == null ? [] : O === this ? v : i2(O.sourcePoint, O.targetPoint, O.routePoints)), y = [];
  v.forEach((O) => {
    const w = p.reduce((x, S, _) => {
      if (S !== h) {
        const C = oTe(O, m[_]);
        x.push(...C);
      }
      return x;
    }, []).sort((x, S) => y5(O.start, x) - y5(O.start, S));
    w.length > 0 ? y.push(...sTe(O, w, i)) : y.push(O);
  });
  const b = b5(y, i, o, s);
  return Hy = [], ix = [], r.raw ? b : b.serialize();
}, uTe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  jumpover: lTe,
  loop: tTe,
  normal: eTe,
  rounded: nTe,
  smooth: rTe
}, Symbol.toStringTag, { value: "Module" }));
var Cf;
(function(n) {
  n.presets = uTe, n.registry = or.create({
    type: "connector"
  }), n.registry.register(n.presets, !0);
})(Cf || (Cf = {}));
var cTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class mq extends Fn {
  constructor(e = {}) {
    super(), this.pending = !1, this.changing = !1, this.data = {}, this.mutate(Pn(e)), this.changed = {};
  }
  mutate(e, t = {}) {
    const r = t.unset === !0, i = t.silent === !0, o = [], s = this.changing;
    this.changing = !0, s || (this.previous = Pn(this.data), this.changed = {});
    const a = this.data, l = this.previous, u = this.changed;
    if (Object.keys(e).forEach((c) => {
      const h = c, f = e[h];
      wi(a[h], f) || o.push(h), wi(l[h], f) ? delete u[h] : u[h] = f, r ? delete a[h] : a[h] = f;
    }), !i && o.length > 0 && (this.pending = !0, this.pendingOptions = t, o.forEach((c) => {
      this.emit("change:*", {
        key: c,
        options: t,
        store: this,
        current: a[c],
        previous: l[c]
      });
    })), s)
      return this;
    if (!i)
      for (; this.pending; )
        this.pending = !1, this.emit("changed", {
          current: a,
          previous: l,
          store: this,
          options: this.pendingOptions
        });
    return this.pending = !1, this.changing = !1, this.pendingOptions = null, this;
  }
  get(e, t) {
    if (e == null)
      return this.data;
    const r = this.data[e];
    return r ?? t;
  }
  getPrevious(e) {
    if (this.previous) {
      const t = this.previous[e];
      return t ?? void 0;
    }
  }
  set(e, t, r) {
    return e != null && (typeof e == "object" ? this.mutate(e, t) : this.mutate({ [e]: t }, r)), this;
  }
  remove(e, t) {
    const i = {};
    let o;
    if (typeof e == "string")
      i[e] = void 0, o = t;
    else if (Array.isArray(e))
      e.forEach((s) => i[s] = void 0), o = t;
    else {
      for (const s in this.data)
        i[s] = void 0;
      o = e;
    }
    return this.mutate(i, Object.assign(Object.assign({}, o), { unset: !0 })), this;
  }
  getByPath(e) {
    return dL(this.data, e, "/");
  }
  setByPath(e, t, r = {}) {
    const i = "/", o = Array.isArray(e) ? [...e] : e.split(i), s = Array.isArray(e) ? e.join(i) : e, a = o[0], l = o.length;
    if (r.propertyPath = s, r.propertyValue = t, r.propertyPathArray = o, l === 1)
      this.set(a, t, r);
    else {
      const u = {};
      let c = u, h = a;
      for (let p = 1; p < l; p += 1) {
        const g = o[p], v = Number.isFinite(Number(g));
        c = c[h] = v ? [] : {}, h = g;
      }
      Ug(u, o, t, i);
      const f = Pn(this.data);
      r.rewrite && Y3(f, e, i);
      const d = jn(f, u);
      this.set(a, d[a], r);
    }
    return this;
  }
  removeByPath(e, t) {
    const r = Array.isArray(e) ? e : e.split("/"), i = r[0];
    if (r.length === 1)
      this.remove(i, t);
    else {
      const o = r.slice(1), s = Pn(this.get(i));
      s && Y3(s, o), this.set(i, s, t);
    }
    return this;
  }
  hasChanged(e) {
    return e == null ? Object.keys(this.changed).length > 0 : e in this.changed;
  }
  /**
   * Returns an object containing all the data that have changed,
   * or `null` if there are no changes. Useful for determining what
   * parts of a view need to be updated.
   */
  getChanges(e) {
    if (e == null)
      return this.hasChanged() ? Pn(this.changed) : null;
    const t = this.changing ? this.previous : this.data, r = {};
    let i;
    for (const o in e) {
      const s = e[o];
      wi(t[o], s) || (r[o] = s, i = !0);
    }
    return i ? Pn(r) : null;
  }
  /**
   * Returns a copy of the store's `data` object.
   */
  toJSON() {
    return Pn(this.data);
  }
  clone() {
    const e = this.constructor;
    return new e(this.data);
  }
  dispose() {
    this.off(), this.data = {}, this.previous = {}, this.changed = {}, this.pending = !1, this.changing = !1, this.pendingOptions = null, this.trigger("disposed", { store: this });
  }
}
cTe([
  Fn.dispose()
], mq.prototype, "dispose", null);
let dE = class yq {
  constructor(e) {
    this.cell = e, this.ids = {}, this.cache = {};
  }
  get() {
    return Object.keys(this.ids);
  }
  start(e, t, r = {}, i = "/") {
    const o = this.cell.getPropByPath(e), s = bhe(r, yq.defaultOptions), a = this.getTiming(s.timing), l = this.getInterp(s.interp, o, t);
    let u = 0;
    const c = Array.isArray(e) ? e.join(i) : e, h = Array.isArray(e) ? e : e.split(i), f = () => {
      const d = (/* @__PURE__ */ new Date()).getTime();
      u === 0 && (u = d);
      let g = (d - u) / s.duration;
      g < 1 ? this.ids[c] = requestAnimationFrame(f) : g = 1;
      const v = l(a(g));
      this.cell.setPropByPath(h, v), r.progress && r.progress(Object.assign({ progress: g, currentValue: v }, this.getArgs(c))), g === 1 && (this.cell.notify("transition:complete", this.getArgs(c)), r.complete && r.complete(this.getArgs(c)), this.cell.notify("transition:finish", this.getArgs(c)), r.finish && r.finish(this.getArgs(c)), this.clean(c));
    };
    return setTimeout(() => {
      this.stop(e, void 0, i), this.cache[c] = { startValue: o, targetValue: t, options: s }, this.ids[c] = requestAnimationFrame(f), this.cell.notify("transition:start", this.getArgs(c)), r.start && r.start(this.getArgs(c));
    }, r.delay), this.stop.bind(this, e, i, r);
  }
  stop(e, t = {}, r = "/") {
    const i = Array.isArray(e) ? e : e.split(r);
    return Object.keys(this.ids).filter((o) => wi(i, o.split(r).slice(0, i.length))).forEach((o) => {
      cancelAnimationFrame(this.ids[o]);
      const s = this.cache[o], a = this.getArgs(o), l = Object.assign(Object.assign({}, s.options), t), u = l.jumpedToEnd;
      u && s.targetValue != null && (this.cell.setPropByPath(o, s.targetValue), this.cell.notify("transition:end", Object.assign({}, a)), this.cell.notify("transition:complete", Object.assign({}, a)), l.complete && l.complete(Object.assign({}, a)));
      const c = Object.assign({ jumpedToEnd: u }, a);
      this.cell.notify("transition:stop", Object.assign({}, c)), l.stop && l.stop(Object.assign({}, c)), this.cell.notify("transition:finish", Object.assign({}, a)), l.finish && l.finish(Object.assign({}, a)), this.clean(o);
    }), this;
  }
  clean(e) {
    delete this.ids[e], delete this.cache[e];
  }
  getTiming(e) {
    return typeof e == "string" ? Gf[e] : e;
  }
  getInterp(e, t, r) {
    return e ? e(t, r) : typeof r == "number" ? of.number(t, r) : typeof r == "string" ? r[0] === "#" ? of.color(t, r) : of.unit(t, r) : of.object(t, r);
  }
  getArgs(e) {
    const t = this.cache[e];
    return {
      path: e,
      startValue: t.startValue,
      targetValue: t.targetValue,
      cell: this.cell
    };
  }
};
(function(n) {
  n.defaultOptions = {
    delay: 10,
    duration: 100,
    timing: "linear"
  };
})(dE || (dE = {}));
var hTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
}, bq = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class Mt extends Fn {
  static config(e) {
    const { markup: t, propHooks: r, attrHooks: i } = e, o = bq(e, ["markup", "propHooks", "attrHooks"]);
    t != null && (this.markup = t), r && (this.propHooks = this.propHooks.slice(), Array.isArray(r) ? this.propHooks.push(...r) : typeof r == "function" ? this.propHooks.push(r) : Object.values(r).forEach((s) => {
      typeof s == "function" && this.propHooks.push(s);
    })), i && (this.attrHooks = Object.assign(Object.assign({}, this.attrHooks), i)), this.defaults = jn({}, this.defaults, o);
  }
  static getMarkup() {
    return this.markup;
  }
  static getDefaults(e) {
    return e ? this.defaults : Pn(this.defaults);
  }
  static getAttrHooks() {
    return this.attrHooks;
  }
  static applyPropHooks(e, t) {
    return this.propHooks.reduce((r, i) => i ? Ue(i, e, r) : r, t);
  }
  // #endregion
  get [Symbol.toStringTag]() {
    return Mt.toStringTag;
  }
  constructor(e = {}) {
    super();
    const r = this.constructor.getDefaults(!0), i = jn({}, this.preprocess(r), this.preprocess(e));
    this.id = i.id || Hw(), this.store = new mq(i), this.animation = new dE(this), this.setup(), this.init(), this.postprocess(e);
  }
  init() {
  }
  // #region model
  get model() {
    return this._model;
  }
  set model(e) {
    this._model !== e && (this._model = e);
  }
  // #endregion
  preprocess(e, t) {
    const r = e.id, o = this.constructor.applyPropHooks(this, e);
    return r == null && t !== !0 && (o.id = Hw()), o;
  }
  postprocess(e) {
  }
  // eslint-disable-line
  setup() {
    this.store.on("change:*", (e) => {
      const { key: t, current: r, previous: i, options: o } = e;
      this.notify("change:*", {
        key: t,
        options: o,
        current: r,
        previous: i,
        cell: this
      }), this.notify(`change:${t}`, {
        options: o,
        current: r,
        previous: i,
        cell: this
      });
      const s = t;
      (s === "source" || s === "target") && this.notify("change:terminal", {
        type: s,
        current: r,
        previous: i,
        options: o,
        cell: this
      });
    }), this.store.on("changed", ({ options: e }) => this.notify("changed", { options: e, cell: this }));
  }
  notify(e, t) {
    this.trigger(e, t);
    const r = this.model;
    return r && (r.notify(`cell:${e}`, t), this.isNode() ? r.notify(`node:${e}`, Object.assign(Object.assign({}, t), { node: this })) : this.isEdge() && r.notify(`edge:${e}`, Object.assign(Object.assign({}, t), { edge: this }))), this;
  }
  isNode() {
    return !1;
  }
  isEdge() {
    return !1;
  }
  isSameStore(e) {
    return this.store === e.store;
  }
  get view() {
    return this.store.get("view");
  }
  get shape() {
    return this.store.get("shape", "");
  }
  getProp(e, t) {
    return e == null ? this.store.get() : this.store.get(e, t);
  }
  setProp(e, t, r) {
    if (typeof e == "string")
      this.store.set(e, t, r);
    else {
      const i = this.preprocess(e, !0);
      this.store.set(jn({}, this.getProp(), i), t), this.postprocess(e);
    }
    return this;
  }
  removeProp(e, t) {
    return typeof e == "string" || Array.isArray(e) ? this.store.removeByPath(e, t) : this.store.remove(t), this;
  }
  hasChanged(e) {
    return e == null ? this.store.hasChanged() : this.store.hasChanged(e);
  }
  getPropByPath(e) {
    return this.store.getByPath(e);
  }
  setPropByPath(e, t, r = {}) {
    return this.model && (e === "children" ? this._children = t ? t.map((i) => this.model.getCell(i)).filter((i) => i != null) : null : e === "parent" && (this._parent = t ? this.model.getCell(t) : null)), this.store.setByPath(e, t, r), this;
  }
  removePropByPath(e, t = {}) {
    const r = Array.isArray(e) ? e : e.split("/");
    return r[0] === "attrs" && (t.dirty = !0), this.store.removeByPath(r, t), this;
  }
  prop(e, t, r) {
    return e == null ? this.getProp() : typeof e == "string" || Array.isArray(e) ? arguments.length === 1 ? this.getPropByPath(e) : t == null ? this.removePropByPath(e, r || {}) : this.setPropByPath(e, t, r || {}) : this.setProp(e, t || {});
  }
  previous(e) {
    return this.store.getPrevious(e);
  }
  // #endregion
  // #region zIndex
  get zIndex() {
    return this.getZIndex();
  }
  set zIndex(e) {
    e == null ? this.removeZIndex() : this.setZIndex(e);
  }
  getZIndex() {
    return this.store.get("zIndex");
  }
  setZIndex(e, t = {}) {
    return this.store.set("zIndex", e, t), this;
  }
  removeZIndex(e = {}) {
    return this.store.remove("zIndex", e), this;
  }
  toFront(e = {}) {
    const t = this.model;
    if (t) {
      let r = t.getMaxZIndex(), i;
      e.deep ? (i = this.getDescendants({ deep: !0, breadthFirst: !0 }), i.unshift(this)) : i = [this], r = r - i.length + 1;
      const o = t.total();
      let s = t.indexOf(this) !== o - i.length;
      s || (s = i.some((a, l) => a.getZIndex() !== r + l)), s && this.batchUpdate("to-front", () => {
        r += i.length, i.forEach((a, l) => {
          a.setZIndex(r + l, e);
        });
      });
    }
    return this;
  }
  toBack(e = {}) {
    const t = this.model;
    if (t) {
      let r = t.getMinZIndex(), i;
      e.deep ? (i = this.getDescendants({ deep: !0, breadthFirst: !0 }), i.unshift(this)) : i = [this];
      let o = t.indexOf(this) !== 0;
      o || (o = i.some((s, a) => s.getZIndex() !== r + a)), o && this.batchUpdate("to-back", () => {
        r -= i.length, i.forEach((s, a) => {
          s.setZIndex(r + a, e);
        });
      });
    }
    return this;
  }
  // #endregion
  // #region markup
  get markup() {
    return this.getMarkup();
  }
  set markup(e) {
    e == null ? this.removeMarkup() : this.setMarkup(e);
  }
  getMarkup() {
    let e = this.store.get("markup");
    return e == null && (e = this.constructor.getMarkup()), e;
  }
  setMarkup(e, t = {}) {
    return this.store.set("markup", e, t), this;
  }
  removeMarkup(e = {}) {
    return this.store.remove("markup", e), this;
  }
  // #endregion
  // #region attrs
  get attrs() {
    return this.getAttrs();
  }
  set attrs(e) {
    e == null ? this.removeAttrs() : this.setAttrs(e);
  }
  getAttrs() {
    const e = this.store.get("attrs");
    return e ? Object.assign({}, e) : {};
  }
  setAttrs(e, t = {}) {
    if (e == null)
      this.removeAttrs(t);
    else {
      const r = (i) => this.store.set("attrs", i, t);
      if (t.overwrite === !0)
        r(e);
      else {
        const i = this.getAttrs();
        t.deep === !1 ? r(Object.assign(Object.assign({}, i), e)) : r(jn({}, i, e));
      }
    }
    return this;
  }
  replaceAttrs(e, t = {}) {
    return this.setAttrs(e, Object.assign(Object.assign({}, t), { overwrite: !0 }));
  }
  updateAttrs(e, t = {}) {
    return this.setAttrs(e, Object.assign(Object.assign({}, t), { deep: !1 }));
  }
  removeAttrs(e = {}) {
    return this.store.remove("attrs", e), this;
  }
  getAttrDefinition(e) {
    if (!e)
      return null;
    const r = this.constructor.getAttrHooks() || {};
    let i = r[e] || ul.registry.get(e);
    if (!i) {
      const o = WS(e);
      i = r[o] || ul.registry.get(o);
    }
    return i || null;
  }
  getAttrByPath(e) {
    return e == null || e === "" ? this.getAttrs() : this.getPropByPath(this.prefixAttrPath(e));
  }
  setAttrByPath(e, t, r = {}) {
    return this.setPropByPath(this.prefixAttrPath(e), t, r), this;
  }
  removeAttrByPath(e, t = {}) {
    return this.removePropByPath(this.prefixAttrPath(e), t), this;
  }
  prefixAttrPath(e) {
    return Array.isArray(e) ? ["attrs"].concat(e) : `attrs/${e}`;
  }
  attr(e, t, r) {
    return e == null ? this.getAttrByPath() : typeof e == "string" || Array.isArray(e) ? arguments.length === 1 ? this.getAttrByPath(e) : t == null ? this.removeAttrByPath(e, r || {}) : this.setAttrByPath(e, t, r || {}) : this.setAttrs(e, t || {});
  }
  // #endregion
  // #region visible
  get visible() {
    return this.isVisible();
  }
  set visible(e) {
    this.setVisible(e);
  }
  setVisible(e, t = {}) {
    return this.store.set("visible", e, t), this;
  }
  isVisible() {
    return this.store.get("visible") !== !1;
  }
  show(e = {}) {
    return this.isVisible() || this.setVisible(!0, e), this;
  }
  hide(e = {}) {
    return this.isVisible() && this.setVisible(!1, e), this;
  }
  toggleVisible(e, t = {}) {
    const r = typeof e == "boolean" ? e : !this.isVisible(), i = typeof e == "boolean" ? t : e;
    return r ? this.show(i) : this.hide(i), this;
  }
  // #endregion
  // #region data
  get data() {
    return this.getData();
  }
  set data(e) {
    this.setData(e);
  }
  getData() {
    return this.store.get("data");
  }
  setData(e, t = {}) {
    if (e == null)
      this.removeData(t);
    else {
      const r = (i) => this.store.set("data", i, t);
      if (t.overwrite === !0)
        r(e);
      else {
        const i = this.getData();
        t.deep === !1 ? r(typeof e == "object" ? Object.assign(Object.assign({}, i), e) : e) : r(jn({}, i, e));
      }
    }
    return this;
  }
  replaceData(e, t = {}) {
    return this.setData(e, Object.assign(Object.assign({}, t), { overwrite: !0 }));
  }
  updateData(e, t = {}) {
    return this.setData(e, Object.assign(Object.assign({}, t), { deep: !1 }));
  }
  removeData(e = {}) {
    return this.store.remove("data", e), this;
  }
  // #endregion
  // #region parent children
  get parent() {
    return this.getParent();
  }
  get children() {
    return this.getChildren();
  }
  getParentId() {
    return this.store.get("parent");
  }
  getParent() {
    const e = this.getParentId();
    if (e && this.model) {
      const t = this.model.getCell(e);
      return this._parent = t, t;
    }
    return null;
  }
  getChildren() {
    const e = this.store.get("children");
    if (e && e.length && this.model) {
      const t = e.map((r) => {
        var i;
        return (i = this.model) === null || i === void 0 ? void 0 : i.getCell(r);
      }).filter((r) => r != null);
      return this._children = t, [...t];
    }
    return null;
  }
  hasParent() {
    return this.parent != null;
  }
  isParentOf(e) {
    return e != null && e.getParent() === this;
  }
  isChildOf(e) {
    return e != null && this.getParent() === e;
  }
  eachChild(e, t) {
    return this.children && this.children.forEach(e, t), this;
  }
  filterChild(e, t) {
    return this.children ? this.children.filter(e, t) : [];
  }
  getChildCount() {
    return this.children == null ? 0 : this.children.length;
  }
  getChildIndex(e) {
    return this.children == null ? -1 : this.children.indexOf(e);
  }
  getChildAt(e) {
    return this.children != null && e >= 0 ? this.children[e] : null;
  }
  getAncestors(e = {}) {
    const t = [];
    let r = this.getParent();
    for (; r; )
      t.push(r), r = e.deep !== !1 ? r.getParent() : null;
    return t;
  }
  getDescendants(e = {}) {
    if (e.deep !== !1) {
      if (e.breadthFirst) {
        const t = [], r = this.getChildren() || [];
        for (; r.length > 0; ) {
          const i = r.shift(), o = i.getChildren();
          t.push(i), o && r.push(...o);
        }
        return t;
      }
      {
        const t = this.getChildren() || [];
        return t.forEach((r) => {
          t.push(...r.getDescendants(e));
        }), t;
      }
    }
    return this.getChildren() || [];
  }
  isDescendantOf(e, t = {}) {
    if (e == null)
      return !1;
    if (t.deep !== !1) {
      let r = this.getParent();
      for (; r; ) {
        if (r === e)
          return !0;
        r = r.getParent();
      }
      return !1;
    }
    return this.isChildOf(e);
  }
  isAncestorOf(e, t = {}) {
    return e == null ? !1 : e.isDescendantOf(this, t);
  }
  contains(e) {
    return this.isAncestorOf(e);
  }
  getCommonAncestor(...e) {
    return Mt.getCommonAncestor(this, ...e);
  }
  setParent(e, t = {}) {
    return this._parent = e, e ? this.store.set("parent", e.id, t) : this.store.remove("parent", t), this;
  }
  setChildren(e, t = {}) {
    return this._children = e, e != null ? this.store.set("children", e.map((r) => r.id), t) : this.store.remove("children", t), this;
  }
  unembed(e, t = {}) {
    const r = this.children;
    if (r != null && e != null) {
      const i = this.getChildIndex(e);
      i !== -1 && (r.splice(i, 1), e.setParent(null, t), this.setChildren(r, t));
    }
    return this;
  }
  embed(e, t = {}) {
    return e.addTo(this, t), this;
  }
  addTo(e, t = {}) {
    return Mt.isCell(e) ? e.addChild(this, t) : e.addCell(this, t), this;
  }
  insertTo(e, t, r = {}) {
    return e.insertChild(this, t, r), this;
  }
  addChild(e, t = {}) {
    return this.insertChild(e, void 0, t);
  }
  insertChild(e, t, r = {}) {
    if (e != null && e !== this) {
      const i = e.getParent(), o = this !== i;
      let s = t;
      if (s == null && (s = this.getChildCount(), o || (s -= 1)), i) {
        const l = i.getChildren();
        if (l) {
          const u = l.indexOf(e);
          u >= 0 && (e.setParent(null, r), l.splice(u, 1), i.setChildren(l, r));
        }
      }
      let a = this.children;
      if (a == null ? (a = [], a.push(e)) : a.splice(s, 0, e), e.setParent(this, r), this.setChildren(a, r), o && this.model) {
        const l = this.model.getIncomingEdges(this), u = this.model.getOutgoingEdges(this);
        l && l.forEach((c) => c.updateParent(r)), u && u.forEach((c) => c.updateParent(r));
      }
      this.model && this.model.addCell(e, r);
    }
    return this;
  }
  removeFromParent(e = {}) {
    const t = this.getParent();
    if (t != null) {
      const r = t.getChildIndex(this);
      t.removeChildAt(r, e);
    }
    return this;
  }
  removeChild(e, t = {}) {
    const r = this.getChildIndex(e);
    return this.removeChildAt(r, t);
  }
  removeChildAt(e, t = {}) {
    const r = this.getChildAt(e);
    return this.children != null && r != null && (this.unembed(r, t), r.remove(t)), r;
  }
  remove(e = {}) {
    return this.batchUpdate("remove", () => {
      const t = this.getParent();
      t && t.removeChild(this, e), e.deep !== !1 && this.eachChild((r) => r.remove(e)), this.model && this.model.removeCell(this, e);
    }), this;
  }
  transition(e, t, r = {}, i = "/") {
    return this.animation.start(e, t, r, i);
  }
  stopTransition(e, t, r = "/") {
    return this.animation.stop(e, t, r), this;
  }
  getTransitions() {
    return this.animation.get();
  }
  // #endregion
  // #region transform
  // eslint-disable-next-line
  translate(e, t, r) {
    return this;
  }
  scale(e, t, r, i) {
    return this;
  }
  addTools(e, t, r) {
    const i = Array.isArray(e) ? e : [e], o = typeof t == "string" ? t : null, s = typeof t == "object" ? t : typeof r == "object" ? r : {};
    if (s.reset)
      return this.setTools({ name: o, items: i, local: s.local }, s);
    let a = Pn(this.getTools());
    if (a == null || o == null || a.name === o)
      return a == null && (a = {}), a.items || (a.items = []), a.name = o, a.items = [...a.items, ...i], this.setTools(Object.assign({}, a), s);
  }
  setTools(e, t = {}) {
    return e == null ? this.removeTools() : this.store.set("tools", Mt.normalizeTools(e), t), this;
  }
  getTools() {
    return this.store.get("tools");
  }
  removeTools(e = {}) {
    return this.store.remove("tools", e), this;
  }
  hasTools(e) {
    const t = this.getTools();
    return t == null ? !1 : e == null ? !0 : t.name === e;
  }
  hasTool(e) {
    const t = this.getTools();
    return t == null ? !1 : t.items.some((r) => typeof r == "string" ? r === e : r.name === e);
  }
  removeTool(e, t = {}) {
    const r = Pn(this.getTools());
    if (r) {
      let i = !1;
      const o = r.items.slice(), s = (a) => {
        o.splice(a, 1), i = !0;
      };
      if (typeof e == "number")
        s(e);
      else
        for (let a = o.length - 1; a >= 0; a -= 1) {
          const l = o[a];
          (typeof l == "string" ? l === e : l.name === e) && s(a);
        }
      i && (r.items = o, this.setTools(r, t));
    }
    return this;
  }
  // #endregion
  // #region common
  // eslint-disable-next-line
  getBBox(e) {
    return new Se();
  }
  // eslint-disable-next-line
  getConnectionPoint(e, t) {
    return new W();
  }
  toJSON(e = {}) {
    const t = Object.assign({}, this.store.get()), r = Object.prototype.toString, i = this.isNode() ? "node" : this.isEdge() ? "edge" : "cell";
    if (!t.shape) {
      const p = this.constructor;
      throw new Error(`Unable to serialize ${i} missing "shape" prop, check the ${i} "${p.name || r.call(p)}"`);
    }
    const o = this.constructor, s = e.diff === !0, a = t.attrs || {}, l = o.getDefaults(!0), u = s ? this.preprocess(l, !0) : l, c = u.attrs || {}, h = {};
    Object.entries(t).forEach(([p, g]) => {
      if (g != null && !Array.isArray(g) && typeof g == "object" && !ha(g))
        throw new Error(`Can only serialize ${i} with plain-object props, but got a "${r.call(g)}" type of key "${p}" on ${i} "${this.id}"`);
      if (p !== "attrs" && p !== "shape" && s) {
        const v = u[p];
        wi(g, v) && delete t[p];
      }
    }), Object.keys(a).forEach((p) => {
      const g = a[p], v = c[p];
      Object.keys(g).forEach((m) => {
        const y = g[m], b = v ? v[m] : null;
        y != null && typeof y == "object" && !Array.isArray(y) ? Object.keys(y).forEach((O) => {
          const w = y[O];
          if (v == null || b == null || !Hn(b) || !wi(b[O], w)) {
            h[p] == null && (h[p] = {}), h[p][m] == null && (h[p][m] = {});
            const x = h[p][m];
            x[O] = w;
          }
        }) : (v == null || !wi(b, y)) && (h[p] == null && (h[p] = {}), h[p][m] = y);
      });
    });
    const f = Object.assign(Object.assign({}, t), { attrs: IG(h) ? void 0 : h });
    f.attrs == null && delete f.attrs;
    const d = f;
    return d.angle === 0 && delete d.angle, Pn(d);
  }
  clone(e = {}) {
    if (!e.deep) {
      const r = Object.assign({}, this.store.get());
      e.keepId || delete r.id, delete r.parent, delete r.children;
      const i = this.constructor;
      return new i(r);
    }
    return Mt.deepClone(this)[this.id];
  }
  findView(e) {
    return e.findViewByCell(this);
  }
  // #endregion
  // #region batch
  startBatch(e, t = {}, r = this.model) {
    return this.notify("batch:start", { name: e, data: t, cell: this }), r && r.startBatch(e, Object.assign(Object.assign({}, t), { cell: this })), this;
  }
  stopBatch(e, t = {}, r = this.model) {
    return r && r.stopBatch(e, Object.assign(Object.assign({}, t), { cell: this })), this.notify("batch:stop", { name: e, data: t, cell: this }), this;
  }
  batchUpdate(e, t, r) {
    const i = this.model;
    this.startBatch(e, r, i);
    const o = t();
    return this.stopBatch(e, r, i), o;
  }
  // #endregion
  // #region IDisposable
  dispose() {
    this.removeFromParent(), this.store.dispose();
  }
}
Mt.defaults = {};
Mt.attrHooks = {};
Mt.propHooks = [];
hTe([
  Fn.dispose()
], Mt.prototype, "dispose", null);
(function(n) {
  function e(t) {
    return typeof t == "string" ? { items: [t] } : Array.isArray(t) ? { items: t } : t.items ? t : {
      items: [t]
    };
  }
  n.normalizeTools = e;
})(Mt || (Mt = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNode == "function" && typeof i.isEdge == "function" && typeof i.prop == "function" && typeof i.attr == "function";
  }
  n.isCell = e;
})(Mt || (Mt = {}));
(function(n) {
  function e(...o) {
    const s = o.filter((l) => l != null).map((l) => l.getAncestors()).sort((l, u) => l.length - u.length);
    return s.shift().find((l) => s.every((u) => u.includes(l))) || null;
  }
  n.getCommonAncestor = e;
  function t(o, s = {}) {
    let a = null;
    for (let l = 0, u = o.length; l < u; l += 1) {
      const c = o[l];
      let h = c.getBBox(s);
      if (h) {
        if (c.isNode()) {
          const f = c.getAngle();
          f != null && f !== 0 && (h = h.bbox(f));
        }
        a = a == null ? h : a.union(h);
      }
    }
    return a;
  }
  n.getCellsBBox = t;
  function r(o) {
    const s = [o, ...o.getDescendants({ deep: !0 })];
    return n.cloneCells(s);
  }
  n.deepClone = r;
  function i(o) {
    const s = QG(o), a = s.reduce((l, u) => (l[u.id] = u.clone(), l), {});
    return s.forEach((l) => {
      const u = a[l.id];
      if (u.isEdge()) {
        const f = u.getSourceCellId(), d = u.getTargetCellId();
        f && a[f] && u.setSource(Object.assign(Object.assign({}, u.getSource()), { cell: a[f].id })), d && a[d] && u.setTarget(Object.assign(Object.assign({}, u.getTarget()), { cell: a[d].id }));
      }
      const c = l.getParent();
      c && a[c.id] && u.setParent(a[c.id]);
      const h = l.getChildren();
      if (h && h.length) {
        const f = h.reduce((d, p) => (a[p.id] && d.push(a[p.id]), d), []);
        f.length > 0 && u.setChildren(f);
      }
    }), a;
  }
  n.cloneCells = i;
})(Mt || (Mt = {}));
(function(n) {
  n.config({
    propHooks(e) {
      var { tools: t } = e, r = bq(e, ["tools"]);
      return t && (r.tools = n.normalizeTools(t)), r;
    }
  });
})(Mt || (Mt = {}));
var Og;
(function(n) {
  let e, t;
  function r(s, a) {
    return a ? e != null && e.exist(s) : t != null && t.exist(s);
  }
  n.exist = r;
  function i(s) {
    e = s;
  }
  n.setEdgeRegistry = i;
  function o(s) {
    t = s;
  }
  n.setNodeRegistry = o;
})(Og || (Og = {}));
class fTe {
  constructor(e) {
    this.ports = [], this.groups = {}, this.init(Pn(e));
  }
  getPorts() {
    return this.ports;
  }
  getGroup(e) {
    return e != null ? this.groups[e] : null;
  }
  getPortsByGroup(e) {
    return this.ports.filter((t) => t.group === e || t.group == null && e == null);
  }
  getPortsLayoutByGroup(e, t) {
    const r = this.getPortsByGroup(e), i = e ? this.getGroup(e) : null, o = i ? i.position : null, s = o ? o.name : null;
    let a;
    if (s != null) {
      const h = _f.registry.get(s);
      if (h == null)
        return _f.registry.onNotFound(s);
      a = h;
    } else
      a = _f.presets.left;
    const l = r.map((h) => h && h.position && h.position.args || {}), u = o && o.args || {};
    return a(l, t, u).map((h, f) => {
      const d = r[f];
      return {
        portLayout: h,
        portId: d.id,
        portSize: d.size,
        portAttrs: d.attrs,
        labelSize: d.label.size,
        labelLayout: this.getPortLabelLayout(d, W.create(h.position), t)
      };
    });
  }
  init(e) {
    const { groups: t, items: r } = e;
    t != null && Object.keys(t).forEach((i) => {
      this.groups[i] = this.parseGroup(t[i]);
    }), Array.isArray(r) && r.forEach((i) => {
      this.ports.push(this.parsePort(i));
    });
  }
  parseGroup(e) {
    return Object.assign(Object.assign({}, e), { label: this.getLabel(e, !0), position: this.getPortPosition(e.position, !0) });
  }
  parsePort(e) {
    const t = Object.assign({}, e), r = this.getGroup(e.group) || {};
    return t.markup = t.markup || r.markup, t.attrs = jn({}, r.attrs, t.attrs), t.position = this.createPosition(r, t), t.label = jn({}, r.label, this.getLabel(t)), t.zIndex = this.getZIndex(r, t), t.size = Object.assign(Object.assign({}, r.size), t.size), t;
  }
  getZIndex(e, t) {
    return typeof t.zIndex == "number" ? t.zIndex : typeof e.zIndex == "number" || e.zIndex === "auto" ? e.zIndex : "auto";
  }
  createPosition(e, t) {
    return jn({
      name: "left",
      args: {}
    }, e.position, { args: t.args });
  }
  getPortPosition(e, t = !1) {
    if (e == null) {
      if (t)
        return { name: "left", args: {} };
    } else {
      if (typeof e == "string")
        return {
          name: e,
          args: {}
        };
      if (Array.isArray(e))
        return {
          name: "absolute",
          args: { x: e[0], y: e[1] }
        };
      if (typeof e == "object")
        return e;
    }
    return { args: {} };
  }
  getPortLabelPosition(e, t = !1) {
    if (e == null) {
      if (t)
        return { name: "left", args: {} };
    } else {
      if (typeof e == "string")
        return {
          name: e,
          args: {}
        };
      if (typeof e == "object")
        return e;
    }
    return { args: {} };
  }
  getLabel(e, t = !1) {
    const r = e.label || {};
    return r.position = this.getPortLabelPosition(r.position, t), r;
  }
  getPortLabelLayout(e, t, r) {
    const i = e.label.position.name || "left", o = e.label.position.args || {}, s = dg.registry.get(i) || dg.presets.left;
    return s ? s(t, r, o) : null;
  }
}
var p_ = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
let sr = class Oq extends Mt {
  get [Symbol.toStringTag]() {
    return Oq.toStringTag;
  }
  constructor(e = {}) {
    super(e), this.initPorts();
  }
  preprocess(e, t) {
    const { x: r, y: i, width: o, height: s } = e, a = p_(e, ["x", "y", "width", "height"]);
    if (r != null || i != null) {
      const l = a.position;
      a.position = Object.assign(Object.assign({}, l), { x: r ?? (l ? l.x : 0), y: i ?? (l ? l.y : 0) });
    }
    if (o != null || s != null) {
      const l = a.size;
      a.size = Object.assign(Object.assign({}, l), { width: o ?? (l ? l.width : 0), height: s ?? (l ? l.height : 0) });
    }
    return super.preprocess(a, t);
  }
  isNode() {
    return !0;
  }
  size(e, t, r) {
    return e === void 0 ? this.getSize() : typeof e == "number" ? this.setSize(e, t, r) : this.setSize(e, t);
  }
  getSize() {
    const e = this.store.get("size");
    return e ? Object.assign({}, e) : { width: 1, height: 1 };
  }
  setSize(e, t, r) {
    return typeof e == "object" ? this.resize(e.width, e.height, t) : this.resize(e, t, r), this;
  }
  resize(e, t, r = {}) {
    this.startBatch("resize", r);
    const i = r.direction;
    if (i) {
      const o = this.getSize();
      switch (i) {
        case "left":
        case "right":
          t = o.height;
          break;
        case "top":
        case "bottom":
          e = o.width;
          break;
      }
      let a = {
        right: 0,
        "top-right": 0,
        top: 1,
        "top-left": 1,
        left: 2,
        "bottom-left": 2,
        bottom: 3,
        "bottom-right": 3
      }[i];
      const l = Wt.normalize(this.getAngle() || 0);
      r.absolute && (a += Math.floor((l + 45) / 90), a %= 4);
      const u = this.getBBox();
      let c;
      a === 0 ? c = u.getBottomLeft() : a === 1 ? c = u.getCorner() : a === 2 ? c = u.getTopRight() : c = u.getOrigin();
      const h = c.clone().rotate(-l, u.getCenter()), f = Math.sqrt(e * e + t * t) / 2;
      let d = a * Math.PI / 2;
      d += Math.atan(a % 2 === 0 ? t / e : e / t), d -= Wt.toRad(l);
      const g = W.fromPolar(f, d, h).clone().translate(e / -2, t / -2);
      this.store.set("size", { width: e, height: t }, r), this.setPosition(g.x, g.y, r);
    } else
      this.store.set("size", { width: e, height: t }, r);
    return this.stopBatch("resize", r), this;
  }
  scale(e, t, r, i = {}) {
    const o = this.getBBox().scale(e, t, r ?? void 0);
    return this.startBatch("scale", i), this.setPosition(o.x, o.y, i), this.resize(o.width, o.height, i), this.stopBatch("scale"), this;
  }
  position(e, t, r) {
    return typeof e == "number" ? this.setPosition(e, t, r) : this.getPosition(e);
  }
  getPosition(e = {}) {
    if (e.relative) {
      const r = this.getParent();
      if (r != null && r.isNode()) {
        const i = this.getPosition(), o = r.getPosition();
        return {
          x: i.x - o.x,
          y: i.y - o.y
        };
      }
    }
    const t = this.store.get("position");
    return t ? Object.assign({}, t) : { x: 0, y: 0 };
  }
  setPosition(e, t, r = {}) {
    let i, o, s;
    if (typeof e == "object" ? (i = e.x, o = e.y, s = t || {}) : (i = e, o = t, s = r || {}), s.relative) {
      const a = this.getParent();
      if (a != null && a.isNode()) {
        const l = a.getPosition();
        i += l.x, o += l.y;
      }
    }
    if (s.deep) {
      const a = this.getPosition();
      this.translate(i - a.x, o - a.y, s);
    } else
      this.store.set("position", { x: i, y: o }, s);
    return this;
  }
  translate(e = 0, t = 0, r = {}) {
    if (e === 0 && t === 0)
      return this;
    r.translateBy = r.translateBy || this.id;
    const i = this.getPosition();
    if (r.restrict != null && r.translateBy === this.id) {
      const s = this.getBBox({ deep: !0 }), a = r.restrict, l = i.x - s.x, u = i.y - s.y, c = Math.max(a.x + l, Math.min(a.x + a.width + l - s.width, i.x + e)), h = Math.max(a.y + u, Math.min(a.y + a.height + u - s.height, i.y + t));
      e = c - i.x, t = h - i.y;
    }
    const o = {
      x: i.x + e,
      y: i.y + t
    };
    return r.tx = e, r.ty = t, r.transition ? (typeof r.transition != "object" && (r.transition = {}), this.transition("position", o, Object.assign(Object.assign({}, r.transition), { interp: of.object })), this.eachChild((s) => {
      var a;
      ((a = r.exclude) === null || a === void 0 ? void 0 : a.includes(s)) || s.translate(e, t, r);
    })) : (this.startBatch("translate", r), this.store.set("position", o, r), this.eachChild((s) => {
      var a;
      ((a = r.exclude) === null || a === void 0 ? void 0 : a.includes(s)) || s.translate(e, t, r);
    }), this.stopBatch("translate", r)), this;
  }
  angle(e, t) {
    return e == null ? this.getAngle() : this.rotate(e, t);
  }
  getAngle() {
    return this.store.get("angle", 0);
  }
  rotate(e, t = {}) {
    const r = this.getAngle();
    if (t.center) {
      const i = this.getSize(), o = this.getPosition(), s = this.getBBox().getCenter();
      s.rotate(r - e, t.center);
      const a = s.x - i.width / 2 - o.x, l = s.y - i.height / 2 - o.y;
      this.startBatch("rotate", { angle: e, options: t }), this.setPosition(o.x + a, o.y + l, t), this.rotate(e, Object.assign(Object.assign({}, t), { center: null })), this.stopBatch("rotate");
    } else
      this.store.set("angle", t.absolute ? e : (r + e) % 360, t);
    return this;
  }
  // #endregion
  // #region common
  getBBox(e = {}) {
    if (e.deep) {
      const t = this.getDescendants({ deep: !0, breadthFirst: !0 });
      return t.push(this), Mt.getCellsBBox(t);
    }
    return Se.fromPositionAndSize(this.getPosition(), this.getSize());
  }
  getConnectionPoint(e, t) {
    const r = this.getBBox(), i = r.getCenter(), o = e.getTerminal(t);
    if (o == null)
      return i;
    const s = o.port;
    if (!s || !this.hasPort(s))
      return i;
    const a = this.getPort(s);
    if (!a || !a.group)
      return i;
    const u = this.getPortsPosition(a.group)[s].position, c = W.create(u).translate(r.getOrigin()), h = this.getAngle();
    return h && c.rotate(-h, i), c;
  }
  /**
   * Sets cell's size and position based on the children bbox and given padding.
   */
  fit(e = {}) {
    const r = (this.getChildren() || []).filter((u) => u.isNode());
    if (r.length === 0)
      return this;
    this.startBatch("fit-embeds", e), e.deep && r.forEach((u) => u.fit(e));
    let { x: i, y: o, width: s, height: a } = Mt.getCellsBBox(r);
    const l = Zf(e.padding);
    return i -= l.left, o -= l.top, s += l.left + l.right, a += l.bottom + l.top, this.store.set({
      position: { x: i, y: o },
      size: { width: s, height: a }
    }, e), this.stopBatch("fit-embeds"), this;
  }
  // #endregion
  // #region ports
  get portContainerMarkup() {
    return this.getPortContainerMarkup();
  }
  set portContainerMarkup(e) {
    this.setPortContainerMarkup(e);
  }
  getDefaultPortContainerMarkup() {
    return this.store.get("defaultPortContainerMarkup") || On.getPortContainerMarkup();
  }
  getPortContainerMarkup() {
    return this.store.get("portContainerMarkup") || this.getDefaultPortContainerMarkup();
  }
  setPortContainerMarkup(e, t = {}) {
    return this.store.set("portContainerMarkup", On.clone(e), t), this;
  }
  get portMarkup() {
    return this.getPortMarkup();
  }
  set portMarkup(e) {
    this.setPortMarkup(e);
  }
  getDefaultPortMarkup() {
    return this.store.get("defaultPortMarkup") || On.getPortMarkup();
  }
  getPortMarkup() {
    return this.store.get("portMarkup") || this.getDefaultPortMarkup();
  }
  setPortMarkup(e, t = {}) {
    return this.store.set("portMarkup", On.clone(e), t), this;
  }
  get portLabelMarkup() {
    return this.getPortLabelMarkup();
  }
  set portLabelMarkup(e) {
    this.setPortLabelMarkup(e);
  }
  getDefaultPortLabelMarkup() {
    return this.store.get("defaultPortLabelMarkup") || On.getPortLabelMarkup();
  }
  getPortLabelMarkup() {
    return this.store.get("portLabelMarkup") || this.getDefaultPortLabelMarkup();
  }
  setPortLabelMarkup(e, t = {}) {
    return this.store.set("portLabelMarkup", On.clone(e), t), this;
  }
  get ports() {
    const e = this.store.get("ports", { items: [] });
    return e.items == null && (e.items = []), e;
  }
  getPorts() {
    return Pn(this.ports.items);
  }
  getPortsByGroup(e) {
    return this.getPorts().filter((t) => t.group === e);
  }
  getPort(e) {
    return Pn(this.ports.items.find((t) => t.id && t.id === e));
  }
  getPortAt(e) {
    return this.ports.items[e] || null;
  }
  hasPorts() {
    return this.ports.items.length > 0;
  }
  hasPort(e) {
    return this.getPortIndex(e) !== -1;
  }
  getPortIndex(e) {
    const t = typeof e == "string" ? e : e.id;
    return t != null ? this.ports.items.findIndex((r) => r.id === t) : -1;
  }
  getPortsPosition(e) {
    const t = this.getSize();
    return this.port.getPortsLayoutByGroup(e, new Se(0, 0, t.width, t.height)).reduce((i, o) => {
      const s = o.portLayout;
      return i[o.portId] = {
        position: Object.assign({}, s.position),
        angle: s.angle || 0
      }, i;
    }, {});
  }
  getPortProp(e, t) {
    return this.getPropByPath(this.prefixPortPath(e, t));
  }
  setPortProp(e, t, r, i) {
    if (typeof t == "string" || Array.isArray(t)) {
      const a = this.prefixPortPath(e, t), l = r;
      return this.setPropByPath(a, l, i);
    }
    const o = this.prefixPortPath(e), s = t;
    return this.setPropByPath(o, s, r);
  }
  removePortProp(e, t, r) {
    return typeof t == "string" || Array.isArray(t) ? this.removePropByPath(this.prefixPortPath(e, t), r) : this.removePropByPath(this.prefixPortPath(e), t);
  }
  portProp(e, t, r, i) {
    return t == null ? this.getPortProp(e) : typeof t == "string" || Array.isArray(t) ? arguments.length === 2 ? this.getPortProp(e, t) : r == null ? this.removePortProp(e, t, i) : this.setPortProp(e, t, r, i) : this.setPortProp(e, t, r);
  }
  prefixPortPath(e, t) {
    const r = this.getPortIndex(e);
    if (r === -1)
      throw new Error(`Unable to find port with id: "${e}"`);
    return t == null || t === "" ? ["ports", "items", `${r}`] : Array.isArray(t) ? ["ports", "items", `${r}`, ...t] : `ports/items/${r}/${t}`;
  }
  addPort(e, t) {
    const r = [...this.ports.items];
    return r.push(e), this.setPropByPath("ports/items", r, t), this;
  }
  addPorts(e, t) {
    return this.setPropByPath("ports/items", [...this.ports.items, ...e], t), this;
  }
  insertPort(e, t, r) {
    const i = [...this.ports.items];
    return i.splice(e, 0, t), this.setPropByPath("ports/items", i, r), this;
  }
  removePort(e, t = {}) {
    return this.removePortAt(this.getPortIndex(e), t);
  }
  removePortAt(e, t = {}) {
    if (e >= 0) {
      const r = [...this.ports.items];
      r.splice(e, 1), t.rewrite = !0, this.setPropByPath("ports/items", r, t);
    }
    return this;
  }
  removePorts(e, t) {
    let r;
    if (Array.isArray(e)) {
      if (r = t || {}, e.length) {
        r.rewrite = !0;
        const o = [...this.ports.items].filter((s) => !e.some((a) => {
          const l = typeof a == "string" ? a : a.id;
          return s.id === l;
        }));
        this.setPropByPath("ports/items", o, r);
      }
    } else
      r = e || {}, r.rewrite = !0, this.setPropByPath("ports/items", [], r);
    return this;
  }
  getParsedPorts() {
    return this.port.getPorts();
  }
  getParsedGroups() {
    return this.port.groups;
  }
  getPortsLayoutByGroup(e, t) {
    return this.port.getPortsLayoutByGroup(e, t);
  }
  initPorts() {
    this.updatePortData(), this.on("change:ports", () => {
      this.processRemovedPort(), this.updatePortData();
    });
  }
  processRemovedPort() {
    const e = this.ports, t = {};
    e.items.forEach((s) => {
      s.id && (t[s.id] = !0);
    });
    const r = {};
    (this.store.getPrevious("ports") || {
      items: []
    }).items.forEach((s) => {
      s.id && !t[s.id] && (r[s.id] = !0);
    });
    const o = this.model;
    o && !IG(r) && (o.getConnectedEdges(this, { incoming: !0 }).forEach((l) => {
      const u = l.getTargetPortId();
      u && r[u] && l.remove();
    }), o.getConnectedEdges(this, { outgoing: !0 }).forEach((l) => {
      const u = l.getSourcePortId();
      u && r[u] && l.remove();
    }));
  }
  validatePorts() {
    const e = {}, t = [];
    return this.ports.items.forEach((r) => {
      typeof r != "object" && t.push(`Invalid port ${r}.`), r.id == null && (r.id = this.generatePortId()), e[r.id] && t.push("Duplicitied port id."), e[r.id] = !0;
    }), t;
  }
  generatePortId() {
    return Hw();
  }
  updatePortData() {
    const e = this.validatePorts();
    if (e.length > 0)
      throw this.store.set("ports", this.store.getPrevious("ports")), new Error(e.join(" "));
    const t = this.port ? this.port.getPorts() : null;
    this.port = new fTe(this.ports);
    const r = this.port.getPorts(), i = t ? r.filter((s) => t.find((a) => a.id === s.id) ? null : s) : [...r], o = t ? t.filter((s) => r.find((a) => a.id === s.id) ? null : s) : [];
    i.length > 0 && this.notify("ports:added", { added: i, cell: this, node: this }), o.length > 0 && this.notify("ports:removed", { removed: o, cell: this, node: this });
  }
};
sr.defaults = {
  angle: 0,
  position: { x: 0, y: 0 },
  size: { width: 1, height: 1 }
};
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNode == "function" && typeof i.isEdge == "function" && typeof i.prop == "function" && typeof i.attr == "function" && typeof i.size == "function" && typeof i.position == "function";
  }
  n.isNode = e;
})(sr || (sr = {}));
(function(n) {
  n.config({
    propHooks(e) {
      var { ports: t } = e, r = p_(e, ["ports"]);
      return t && (r.ports = Array.isArray(t) ? { items: t } : t), r;
    }
  });
})(sr || (sr = {}));
(function(n) {
  n.registry = or.create({
    type: "node",
    process(e, t) {
      if (Og.exist(e, !0))
        throw new Error(`Node with name '${e}' was registered by anthor Edge`);
      if (typeof t == "function")
        return t.config({ shape: e }), t;
      let r = n;
      const { inherit: i } = t, o = p_(t, ["inherit"]);
      if (i)
        if (typeof i == "string") {
          const a = this.get(i);
          a == null ? this.onNotFound(i, "inherited") : r = a;
        } else
          r = i;
      o.constructorName == null && (o.constructorName = e);
      const s = r.define.call(r, o);
      return s.config({ shape: e }), s;
    }
  }), Og.setNodeRegistry(n.registry);
})(sr || (sr = {}));
(function(n) {
  let e = 0;
  function t(o) {
    return o ? pL(o) : (e += 1, `CustomNode${e}`);
  }
  function r(o) {
    const { constructorName: s, overwrite: a } = o, l = p_(o, ["constructorName", "overwrite"]), u = fL(t(s || l.shape), this);
    return u.config(l), l.shape && n.registry.register(l.shape, u, a), u;
  }
  n.define = r;
  function i(o) {
    const s = o.shape || "rect", a = n.registry.get(s);
    return a ? new a(o) : n.registry.onNotFound(s);
  }
  n.create = i;
})(sr || (sr = {}));
var g_ = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
let Yn = class wq extends Mt {
  get [Symbol.toStringTag]() {
    return wq.toStringTag;
  }
  constructor(e = {}) {
    super(e);
  }
  preprocess(e, t) {
    const { source: r, sourceCell: i, sourcePort: o, sourcePoint: s, target: a, targetCell: l, targetPort: u, targetPoint: c } = e, f = g_(e, ["source", "sourceCell", "sourcePort", "sourcePoint", "target", "targetCell", "targetPort", "targetPoint"]), d = (p) => typeof p == "string" || typeof p == "number";
    if (r != null)
      if (Mt.isCell(r))
        f.source = { cell: r.id };
      else if (d(r))
        f.source = { cell: r };
      else if (W.isPoint(r))
        f.source = r.toJSON();
      else if (Array.isArray(r))
        f.source = { x: r[0], y: r[1] };
      else {
        const p = r.cell;
        Mt.isCell(p) ? f.source = Object.assign(Object.assign({}, r), { cell: p.id }) : f.source = r;
      }
    if (i != null || o != null) {
      let p = f.source;
      if (i != null) {
        const g = d(i) ? i : i.id;
        p ? p.cell = g : p = f.source = { cell: g };
      }
      o != null && p && (p.port = o);
    } else
      s != null && (f.source = W.create(s).toJSON());
    if (a != null)
      if (Mt.isCell(a))
        f.target = { cell: a.id };
      else if (d(a))
        f.target = { cell: a };
      else if (W.isPoint(a))
        f.target = a.toJSON();
      else if (Array.isArray(a))
        f.target = { x: a[0], y: a[1] };
      else {
        const p = a.cell;
        Mt.isCell(p) ? f.target = Object.assign(Object.assign({}, a), { cell: p.id }) : f.target = a;
      }
    if (l != null || u != null) {
      let p = f.target;
      if (l != null) {
        const g = d(l) ? l : l.id;
        p ? p.cell = g : p = f.target = { cell: g };
      }
      u != null && p && (p.port = u);
    } else
      c != null && (f.target = W.create(c).toJSON());
    return super.preprocess(f, t);
  }
  setup() {
    super.setup(), this.on("change:labels", (e) => this.onLabelsChanged(e)), this.on("change:vertices", (e) => this.onVertexsChanged(e));
  }
  isEdge() {
    return !0;
  }
  // #region terminal
  disconnect(e = {}) {
    return this.store.set({
      source: { x: 0, y: 0 },
      target: { x: 0, y: 0 }
    }, e), this;
  }
  get source() {
    return this.getSource();
  }
  set source(e) {
    this.setSource(e);
  }
  getSource() {
    return this.getTerminal("source");
  }
  getSourceCellId() {
    return this.source.cell;
  }
  getSourcePortId() {
    return this.source.port;
  }
  setSource(e, t, r = {}) {
    return this.setTerminal("source", e, t, r);
  }
  get target() {
    return this.getTarget();
  }
  set target(e) {
    this.setTarget(e);
  }
  getTarget() {
    return this.getTerminal("target");
  }
  getTargetCellId() {
    return this.target.cell;
  }
  getTargetPortId() {
    return this.target.port;
  }
  setTarget(e, t, r = {}) {
    return this.setTerminal("target", e, t, r);
  }
  getTerminal(e) {
    return Object.assign({}, this.store.get(e));
  }
  setTerminal(e, t, r, i = {}) {
    if (Mt.isCell(t))
      return this.store.set(e, jn({}, r, { cell: t.id }), i), this;
    const o = t;
    return W.isPoint(t) || o.x != null && o.y != null ? (this.store.set(e, jn({}, r, { x: o.x, y: o.y }), i), this) : (this.store.set(e, Pn(t), i), this);
  }
  getSourcePoint() {
    return this.getTerminalPoint("source");
  }
  getTargetPoint() {
    return this.getTerminalPoint("target");
  }
  getTerminalPoint(e) {
    const t = this[e];
    if (W.isPointLike(t))
      return W.create(t);
    const r = this.getTerminalCell(e);
    return r ? r.getConnectionPoint(this, e) : new W();
  }
  getSourceCell() {
    return this.getTerminalCell("source");
  }
  getTargetCell() {
    return this.getTerminalCell("target");
  }
  getTerminalCell(e) {
    if (this.model) {
      const t = e === "source" ? this.getSourceCellId() : this.getTargetCellId();
      if (t)
        return this.model.getCell(t);
    }
    return null;
  }
  getSourceNode() {
    return this.getTerminalNode("source");
  }
  getTargetNode() {
    return this.getTerminalNode("target");
  }
  getTerminalNode(e) {
    let t = this;
    const r = {};
    for (; t && t.isEdge(); ) {
      if (r[t.id])
        return null;
      r[t.id] = !0, t = t.getTerminalCell(e);
    }
    return t && t.isNode() ? t : null;
  }
  // #endregion
  // #region router
  get router() {
    return this.getRouter();
  }
  set router(e) {
    e == null ? this.removeRouter() : this.setRouter(e);
  }
  getRouter() {
    return this.store.get("router");
  }
  setRouter(e, t, r) {
    return typeof e == "object" ? this.store.set("router", e, t) : this.store.set("router", { name: e, args: t }, r), this;
  }
  removeRouter(e = {}) {
    return this.store.remove("router", e), this;
  }
  // #endregion
  // #region connector
  get connector() {
    return this.getConnector();
  }
  set connector(e) {
    e == null ? this.removeConnector() : this.setConnector(e);
  }
  getConnector() {
    return this.store.get("connector");
  }
  setConnector(e, t, r) {
    return typeof e == "object" ? this.store.set("connector", e, t) : this.store.set("connector", { name: e, args: t }, r), this;
  }
  removeConnector(e = {}) {
    return this.store.remove("connector", e);
  }
  // #endregion
  // #region labels
  getDefaultLabel() {
    const e = this.constructor, t = this.store.get("defaultLabel") || e.defaultLabel || {};
    return Pn(t);
  }
  get labels() {
    return this.getLabels();
  }
  set labels(e) {
    this.setLabels(e);
  }
  getLabels() {
    return [...this.store.get("labels", [])].map((e) => this.parseLabel(e));
  }
  setLabels(e, t = {}) {
    return this.store.set("labels", Array.isArray(e) ? e : [e], t), this;
  }
  insertLabel(e, t, r = {}) {
    const i = this.getLabels(), o = i.length;
    let s = t != null && Number.isFinite(t) ? t : o;
    return s < 0 && (s = o + s + 1), i.splice(s, 0, this.parseLabel(e)), this.setLabels(i, r);
  }
  appendLabel(e, t = {}) {
    return this.insertLabel(e, -1, t);
  }
  getLabelAt(e) {
    const t = this.getLabels();
    return e != null && Number.isFinite(e) ? this.parseLabel(t[e]) : null;
  }
  setLabelAt(e, t, r = {}) {
    if (e != null && Number.isFinite(e)) {
      const i = this.getLabels();
      i[e] = this.parseLabel(t), this.setLabels(i, r);
    }
    return this;
  }
  removeLabelAt(e, t = {}) {
    const r = this.getLabels(), i = e != null && Number.isFinite(e) ? e : -1, o = r.splice(i, 1);
    return this.setLabels(r, t), o.length ? o[0] : null;
  }
  parseLabel(e) {
    return typeof e == "string" ? this.constructor.parseStringLabel(e) : e;
  }
  onLabelsChanged({ previous: e, current: t }) {
    const r = e && t ? t.filter((o) => e.find((s) => o === s || wi(o, s)) ? null : o) : t ? [...t] : [], i = e && t ? e.filter((o) => t.find((s) => o === s || wi(o, s)) ? null : o) : e ? [...e] : [];
    r.length > 0 && this.notify("labels:added", { added: r, cell: this, edge: this }), i.length > 0 && this.notify("labels:removed", { removed: i, cell: this, edge: this });
  }
  // #endregion
  // #region vertices
  get vertices() {
    return this.getVertices();
  }
  set vertices(e) {
    this.setVertices(e);
  }
  getVertices() {
    return [...this.store.get("vertices", [])];
  }
  setVertices(e, t = {}) {
    const r = Array.isArray(e) ? e : [e];
    return this.store.set("vertices", r.map((i) => W.toJSON(i)), t), this;
  }
  insertVertex(e, t, r = {}) {
    const i = this.getVertices(), o = i.length;
    let s = t != null && Number.isFinite(t) ? t : o;
    return s < 0 && (s = o + s + 1), i.splice(s, 0, W.toJSON(e)), this.setVertices(i, r);
  }
  appendVertex(e, t = {}) {
    return this.insertVertex(e, -1, t);
  }
  getVertexAt(e) {
    return e != null && Number.isFinite(e) ? this.getVertices()[e] : null;
  }
  setVertexAt(e, t, r = {}) {
    if (e != null && Number.isFinite(e)) {
      const i = this.getVertices();
      i[e] = t, this.setVertices(i, r);
    }
    return this;
  }
  removeVertexAt(e, t = {}) {
    const r = this.getVertices(), i = e != null && Number.isFinite(e) ? e : -1;
    return r.splice(i, 1), this.setVertices(r, t);
  }
  onVertexsChanged({ previous: e, current: t }) {
    const r = e && t ? t.filter((o) => e.find((s) => W.equals(o, s)) ? null : o) : t ? [...t] : [], i = e && t ? e.filter((o) => t.find((s) => W.equals(o, s)) ? null : o) : e ? [...e] : [];
    r.length > 0 && this.notify("vertexs:added", { added: r, cell: this, edge: this }), i.length > 0 && this.notify("vertexs:removed", { removed: i, cell: this, edge: this });
  }
  // #endregion
  // #region markup
  getDefaultMarkup() {
    return this.store.get("defaultMarkup") || On.getEdgeMarkup();
  }
  getMarkup() {
    return super.getMarkup() || this.getDefaultMarkup();
  }
  // #endregion
  // #region transform
  /**
   * Translate the edge vertices (and source and target if they are points)
   * by `tx` pixels in the x-axis and `ty` pixels in the y-axis.
   */
  translate(e, t, r = {}) {
    return r.translateBy = r.translateBy || this.id, r.tx = e, r.ty = t, this.applyToPoints((i) => ({
      x: (i.x || 0) + e,
      y: (i.y || 0) + t
    }), r);
  }
  /**
   * Scales the edge's points (vertices) relative to the given origin.
   */
  scale(e, t, r, i = {}) {
    return this.applyToPoints((o) => W.create(o).scale(e, t, r).toJSON(), i);
  }
  applyToPoints(e, t = {}) {
    const r = {}, i = this.getSource(), o = this.getTarget();
    W.isPointLike(i) && (r.source = e(i)), W.isPointLike(o) && (r.target = e(o));
    const s = this.getVertices();
    return s.length > 0 && (r.vertices = s.map(e)), this.store.set(r, t), this;
  }
  // #endregion
  // #region common
  getBBox() {
    return this.getPolyline().bbox();
  }
  getConnectionPoint() {
    return this.getPolyline().pointAt(0.5);
  }
  getPolyline() {
    const e = [
      this.getSourcePoint(),
      ...this.getVertices().map((t) => W.create(t)),
      this.getTargetPoint()
    ];
    return new Oi(e);
  }
  updateParent(e) {
    let t = null;
    const r = this.getSourceCell(), i = this.getTargetCell(), o = this.getParent();
    return r && i && (r === i || r.isDescendantOf(i) ? t = i : i.isDescendantOf(r) ? t = r : t = Mt.getCommonAncestor(r, i)), o && t && t.id !== o.id && o.unembed(this, e), t && (!o || o.id !== t.id) && t.embed(this, e), t;
  }
  hasLoop(e = {}) {
    const t = this.getSource(), r = this.getTarget(), i = t.cell, o = r.cell;
    if (!i || !o)
      return !1;
    let s = i === o;
    if (!s && e.deep && this._model) {
      const a = this.getSourceCell(), l = this.getTargetCell();
      a && l && (s = a.isAncestorOf(l, e) || l.isAncestorOf(a, e));
    }
    return s;
  }
  getFragmentAncestor() {
    const e = [this, this.getSourceNode(), this.getTargetNode()].filter((t) => t != null);
    return this.getCommonAncestor(...e);
  }
  isFragmentDescendantOf(e) {
    const t = this.getFragmentAncestor();
    return !!t && (t.id === e.id || t.isDescendantOf(e));
  }
};
Yn.defaults = {};
(function(n) {
  function e(t, r) {
    const i = t, o = r;
    return i.cell === o.cell ? i.port === o.port || i.port == null && o.port == null : !1;
  }
  n.equalTerminals = e;
})(Yn || (Yn = {}));
(function(n) {
  n.defaultLabel = {
    markup: [
      {
        tagName: "rect",
        selector: "body"
      },
      {
        tagName: "text",
        selector: "label"
      }
    ],
    attrs: {
      text: {
        fill: "#000",
        fontSize: 14,
        textAnchor: "middle",
        textVerticalAnchor: "middle",
        pointerEvents: "none"
      },
      rect: {
        ref: "label",
        fill: "#fff",
        rx: 3,
        ry: 3,
        refWidth: 1,
        refHeight: 1,
        refX: 0,
        refY: 0
      }
    },
    position: {
      distance: 0.5
    }
  };
  function e(t) {
    return {
      attrs: { label: { text: t } }
    };
  }
  n.parseStringLabel = e;
})(Yn || (Yn = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNode == "function" && typeof i.isEdge == "function" && typeof i.prop == "function" && typeof i.attr == "function" && typeof i.disconnect == "function" && typeof i.getSource == "function" && typeof i.getTarget == "function";
  }
  n.isEdge = e;
})(Yn || (Yn = {}));
(function(n) {
  n.registry = or.create({
    type: "edge",
    process(e, t) {
      if (Og.exist(e, !1))
        throw new Error(`Edge with name '${e}' was registered by anthor Node`);
      if (typeof t == "function")
        return t.config({ shape: e }), t;
      let r = n;
      const { inherit: i = "edge" } = t, o = g_(t, ["inherit"]);
      if (typeof i == "string") {
        const a = this.get(i || "edge");
        a == null && i ? this.onNotFound(i, "inherited") : r = a;
      } else
        r = i;
      o.constructorName == null && (o.constructorName = e);
      const s = r.define.call(r, o);
      return s.config({ shape: e }), s;
    }
  }), Og.setEdgeRegistry(n.registry);
})(Yn || (Yn = {}));
(function(n) {
  let e = 0;
  function t(o) {
    return o ? pL(o) : (e += 1, `CustomEdge${e}`);
  }
  function r(o) {
    const { constructorName: s, overwrite: a } = o, l = g_(o, ["constructorName", "overwrite"]), u = fL(t(s || l.shape), this);
    return u.config(l), l.shape && n.registry.register(l.shape, u, a), u;
  }
  n.define = r;
  function i(o) {
    const s = o.shape || "edge", a = n.registry.get(s);
    return a ? new a(o) : n.registry.onNotFound(s);
  }
  n.create = i;
})(Yn || (Yn = {}));
(function(n) {
  const e = "basic.edge";
  n.config({
    shape: e,
    propHooks(t) {
      const { label: r, vertices: i } = t, o = g_(t, ["label", "vertices"]);
      if (r) {
        o.labels == null && (o.labels = []);
        const s = typeof r == "string" ? n.parseStringLabel(r) : r;
        o.labels.push(s);
      }
      return i && Array.isArray(i) && (o.vertices = i.map((s) => W.create(s).toJSON())), o;
    }
  }), n.registry.register(e, n);
})(Yn || (Yn = {}));
var dTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class ox extends Fn {
  constructor(e, t = {}) {
    super(), this.length = 0, this.comparator = t.comparator || "zIndex", this.clean(), e && this.reset(e, { silent: !0 });
  }
  toJSON() {
    return this.cells.map((e) => e.toJSON());
  }
  add(e, t, r) {
    let i, o;
    typeof t == "number" ? (i = t, o = Object.assign({ merge: !1 }, r)) : (i = this.length, o = Object.assign({ merge: !1 }, t)), i > this.length && (i = this.length), i < 0 && (i += this.length + 1);
    const s = Array.isArray(e) ? e : [e], a = this.comparator && typeof t != "number" && o.sort !== !1, l = this.comparator || null;
    let u = !1;
    const c = [], h = [];
    return s.forEach((f) => {
      const d = this.get(f);
      d ? o.merge && !f.isSameStore(d) && (d.setProp(f.getProp(), r), h.push(d), a && !u && (l == null || typeof l == "function" ? u = d.hasChanged() : typeof l == "string" ? u = d.hasChanged(l) : u = l.some((p) => d.hasChanged(p)))) : (c.push(f), this.reference(f));
    }), c.length && (a && (u = !0), this.cells.splice(i, 0, ...c), this.length = this.cells.length), u && this.sort({ silent: !0 }), o.silent || (c.forEach((f, d) => {
      const p = {
        cell: f,
        index: i + d,
        options: o
      };
      this.trigger("added", p), o.dryrun || f.notify("added", Object.assign({}, p));
    }), u && this.trigger("sorted"), (c.length || h.length) && this.trigger("updated", {
      added: c,
      merged: h,
      removed: [],
      options: o
    })), this;
  }
  remove(e, t = {}) {
    const r = Array.isArray(e) ? e : [e], i = this.removeCells(r, t);
    return !t.silent && i.length > 0 && this.trigger("updated", {
      options: t,
      removed: i,
      added: [],
      merged: []
    }), Array.isArray(e) ? i : i[0];
  }
  removeCells(e, t) {
    const r = [];
    for (let i = 0; i < e.length; i += 1) {
      const o = this.get(e[i]);
      if (o == null)
        continue;
      const s = this.cells.indexOf(o);
      this.cells.splice(s, 1), this.length -= 1, delete this.map[o.id], r.push(o), this.unreference(o), t.dryrun || o.remove(), t.silent || (this.trigger("removed", { cell: o, index: s, options: t }), t.dryrun || o.notify("removed", { cell: o, index: s, options: t }));
    }
    return r;
  }
  reset(e, t = {}) {
    const r = this.cells.slice();
    if (r.forEach((i) => this.unreference(i)), this.clean(), this.add(e, Object.assign({ silent: !0 }, t)), !t.silent) {
      const i = this.cells.slice();
      this.trigger("reseted", {
        options: t,
        previous: r,
        current: i
      });
      const o = [], s = [];
      i.forEach((a) => {
        r.some((u) => u.id === a.id) || o.push(a);
      }), r.forEach((a) => {
        i.some((u) => u.id === a.id) || s.push(a);
      }), this.trigger("updated", { options: t, added: o, removed: s, merged: [] });
    }
    return this;
  }
  push(e, t) {
    return this.add(e, this.length, t);
  }
  pop(e) {
    const t = this.at(this.length - 1);
    return this.remove(t, e);
  }
  unshift(e, t) {
    return this.add(e, 0, t);
  }
  shift(e) {
    const t = this.at(0);
    return this.remove(t, e);
  }
  get(e) {
    if (e == null)
      return null;
    const t = typeof e == "string" || typeof e == "number" ? e : e.id;
    return this.map[t] || null;
  }
  has(e) {
    return this.get(e) != null;
  }
  at(e) {
    return e < 0 && (e += this.length), this.cells[e] || null;
  }
  first() {
    return this.at(0);
  }
  last() {
    return this.at(-1);
  }
  indexOf(e) {
    return this.cells.indexOf(e);
  }
  toArray() {
    return this.cells.slice();
  }
  sort(e = {}) {
    return this.comparator != null && (this.cells = VG(this.cells, this.comparator), e.silent || this.trigger("sorted")), this;
  }
  clone() {
    const e = this.constructor;
    return new e(this.cells.slice(), {
      comparator: this.comparator
    });
  }
  reference(e) {
    this.map[e.id] = e, e.on("*", this.notifyCellEvent, this);
  }
  unreference(e) {
    e.off("*", this.notifyCellEvent, this), delete this.map[e.id];
  }
  notifyCellEvent(e, t) {
    const r = t.cell;
    this.trigger(`cell:${e}`, t), r && (r.isNode() ? this.trigger(`node:${e}`, Object.assign(Object.assign({}, t), { node: r })) : r.isEdge() && this.trigger(`edge:${e}`, Object.assign(Object.assign({}, t), { edge: r })));
  }
  clean() {
    this.length = 0, this.cells = [], this.map = {};
  }
  dispose() {
    this.reset([]);
  }
}
dTe([
  ox.dispose()
], ox.prototype, "dispose", null);
var pTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let cl = class UO extends Fn {
  get [Symbol.toStringTag]() {
    return UO.toStringTag;
  }
  constructor(e = []) {
    super(), this.batches = {}, this.addings = /* @__PURE__ */ new WeakMap(), this.nodes = {}, this.edges = {}, this.outgoings = {}, this.incomings = {}, this.collection = new ox(e), this.setup();
  }
  notify(e, t) {
    this.trigger(e, t);
    const r = this.graph;
    return r && (e === "sorted" || e === "reseted" || e === "updated" ? r.trigger(`model:${e}`, t) : r.trigger(e, t)), this;
  }
  setup() {
    const e = this.collection;
    e.on("sorted", () => this.notify("sorted", null)), e.on("updated", (t) => this.notify("updated", t)), e.on("cell:change:zIndex", () => this.sortOnChangeZ()), e.on("added", ({ cell: t }) => {
      this.onCellAdded(t);
    }), e.on("removed", (t) => {
      const r = t.cell;
      this.onCellRemoved(r, t.options), this.notify("cell:removed", t), r.isNode() ? this.notify("node:removed", Object.assign(Object.assign({}, t), { node: r })) : r.isEdge() && this.notify("edge:removed", Object.assign(Object.assign({}, t), { edge: r }));
    }), e.on("reseted", (t) => {
      this.onReset(t.current), this.notify("reseted", t);
    }), e.on("edge:change:source", ({ edge: t }) => this.onEdgeTerminalChanged(t, "source")), e.on("edge:change:target", ({ edge: t }) => {
      this.onEdgeTerminalChanged(t, "target");
    });
  }
  sortOnChangeZ() {
    this.collection.sort();
  }
  onCellAdded(e) {
    const t = e.id;
    e.isEdge() ? (e.updateParent(), this.edges[t] = !0, this.onEdgeTerminalChanged(e, "source"), this.onEdgeTerminalChanged(e, "target")) : this.nodes[t] = !0;
  }
  onCellRemoved(e, t) {
    const r = e.id;
    if (e.isEdge()) {
      delete this.edges[r];
      const i = e.getSource(), o = e.getTarget();
      if (i && i.cell) {
        const s = this.outgoings[i.cell], a = s ? s.indexOf(r) : -1;
        a >= 0 && (s.splice(a, 1), s.length === 0 && delete this.outgoings[i.cell]);
      }
      if (o && o.cell) {
        const s = this.incomings[o.cell], a = s ? s.indexOf(r) : -1;
        a >= 0 && (s.splice(a, 1), s.length === 0 && delete this.incomings[o.cell]);
      }
    } else
      delete this.nodes[r];
    t.clear || (t.disconnectEdges ? this.disconnectConnectedEdges(e, t) : this.removeConnectedEdges(e, t)), e.model === this && (e.model = null);
  }
  onReset(e) {
    this.nodes = {}, this.edges = {}, this.outgoings = {}, this.incomings = {}, e.forEach((t) => this.onCellAdded(t));
  }
  onEdgeTerminalChanged(e, t) {
    const r = t === "source" ? this.outgoings : this.incomings, i = e.previous(t);
    if (i && i.cell) {
      const s = Mt.isCell(i.cell) ? i.cell.id : i.cell, a = r[s], l = a ? a.indexOf(e.id) : -1;
      l >= 0 && (a.splice(l, 1), a.length === 0 && delete r[s]);
    }
    const o = e.getTerminal(t);
    if (o && o.cell) {
      const s = Mt.isCell(o.cell) ? o.cell.id : o.cell, a = r[s] || [];
      a.indexOf(e.id) === -1 && a.push(e.id), r[s] = a;
    }
  }
  prepareCell(e, t) {
    return !e.model && (!t || !t.dryrun) && (e.model = this), e.zIndex == null && e.setZIndex(this.getMaxZIndex() + 1, { silent: !0 }), e;
  }
  resetCells(e, t = {}) {
    return e.map((r) => this.prepareCell(r, Object.assign(Object.assign({}, t), { dryrun: !0 }))), this.collection.reset(e, t), e.map((r) => this.prepareCell(r, { options: t })), this;
  }
  clear(e = {}) {
    const t = this.getCells();
    if (t.length === 0)
      return this;
    const r = Object.assign(Object.assign({}, e), { clear: !0 });
    return this.batchUpdate("clear", () => {
      const i = t.sort((o, s) => {
        const a = o.isEdge() ? 1 : 2, l = s.isEdge() ? 1 : 2;
        return a - l;
      });
      for (; i.length > 0; ) {
        const o = i.shift();
        o && o.remove(r);
      }
    }, r), this;
  }
  addNode(e, t = {}) {
    const r = sr.isNode(e) ? e : this.createNode(e);
    return this.addCell(r, t), r;
  }
  updateNode(e, t = {}) {
    const r = this.createNode(e), i = r.getProp();
    return r.dispose(), this.updateCell(i, t);
  }
  createNode(e) {
    return sr.create(e);
  }
  addEdge(e, t = {}) {
    const r = Yn.isEdge(e) ? e : this.createEdge(e);
    return this.addCell(r, t), r;
  }
  createEdge(e) {
    return Yn.create(e);
  }
  updateEdge(e, t = {}) {
    const r = this.createEdge(e), i = r.getProp();
    return r.dispose(), this.updateCell(i, t);
  }
  addCell(e, t = {}) {
    return Array.isArray(e) ? this.addCells(e, t) : (!this.collection.has(e) && !this.addings.has(e) && (this.addings.set(e, !0), this.collection.add(this.prepareCell(e, t), t), e.eachChild((r) => this.addCell(r, t)), this.addings.delete(e)), this);
  }
  addCells(e, t = {}) {
    const r = e.length;
    if (r === 0)
      return this;
    const i = Object.assign(Object.assign({}, t), { position: r - 1, maxPosition: r - 1 });
    return this.startBatch("add", Object.assign(Object.assign({}, i), { cells: e })), e.forEach((o) => {
      this.addCell(o, i), i.position -= 1;
    }), this.stopBatch("add", Object.assign(Object.assign({}, i), { cells: e })), this;
  }
  updateCell(e, t = {}) {
    const r = e.id && this.getCell(e.id);
    return r ? this.batchUpdate("update", () => (Object.entries(e).forEach(([i, o]) => r.setProp(i, o, t)), !0), e) : !1;
  }
  removeCell(e, t = {}) {
    const r = typeof e == "string" ? this.getCell(e) : e;
    return r && this.has(r) ? this.collection.remove(r, t) : null;
  }
  updateCellId(e, t) {
    if (e.id === t)
      return;
    this.startBatch("update", { id: t }), e.prop("id", t);
    const r = e.clone({ keepId: !0 });
    return this.addCell(r), this.getConnectedEdges(e).forEach((o) => {
      const s = o.getSourceCell(), a = o.getTargetCell();
      s === e && o.setSource(Object.assign(Object.assign({}, o.getSource()), { cell: t })), a === e && o.setTarget(Object.assign(Object.assign({}, o.getTarget()), { cell: t }));
    }), this.removeCell(e), this.stopBatch("update", { id: t }), r;
  }
  removeCells(e, t = {}) {
    return e.length ? this.batchUpdate("remove", () => e.map((r) => this.removeCell(r, t))) : [];
  }
  removeConnectedEdges(e, t = {}) {
    const r = this.getConnectedEdges(e);
    return r.forEach((i) => {
      i.remove(t);
    }), r;
  }
  disconnectConnectedEdges(e, t = {}) {
    const r = typeof e == "string" ? e : e.id;
    this.getConnectedEdges(e).forEach((i) => {
      const o = i.getSourceCellId(), s = i.getTargetCellId();
      o === r && i.setSource({ x: 0, y: 0 }, t), s === r && i.setTarget({ x: 0, y: 0 }, t);
    });
  }
  has(e) {
    return this.collection.has(e);
  }
  total() {
    return this.collection.length;
  }
  indexOf(e) {
    return this.collection.indexOf(e);
  }
  /**
   * Returns a cell from the graph by its id.
   */
  getCell(e) {
    return this.collection.get(e);
  }
  /**
   * Returns all the nodes and edges in the graph.
   */
  getCells() {
    return this.collection.toArray();
  }
  /**
   * Returns the first cell (node or edge) in the graph. The first cell is
   * defined as the cell with the lowest `zIndex`.
   */
  getFirstCell() {
    return this.collection.first();
  }
  /**
   * Returns the last cell (node or edge) in the graph. The last cell is
   * defined as the cell with the highest `zIndex`.
   */
  getLastCell() {
    return this.collection.last();
  }
  /**
   * Returns the lowest `zIndex` value in the graph.
   */
  getMinZIndex() {
    const e = this.collection.first();
    return e && e.getZIndex() || 0;
  }
  /**
   * Returns the highest `zIndex` value in the graph.
   */
  getMaxZIndex() {
    const e = this.collection.last();
    return e && e.getZIndex() || 0;
  }
  getCellsFromCache(e) {
    return e ? Object.keys(e).map((t) => this.getCell(t)).filter((t) => t != null) : [];
  }
  /**
   * Returns all the nodes in the graph.
   */
  getNodes() {
    return this.getCellsFromCache(this.nodes);
  }
  /**
   * Returns all the edges in the graph.
   */
  getEdges() {
    return this.getCellsFromCache(this.edges);
  }
  /**
   * Returns all outgoing edges for the node.
   */
  getOutgoingEdges(e) {
    const t = typeof e == "string" ? e : e.id, r = this.outgoings[t];
    return r ? r.map((i) => this.getCell(i)).filter((i) => i && i.isEdge()) : null;
  }
  /**
   * Returns all incoming edges for the node.
   */
  getIncomingEdges(e) {
    const t = typeof e == "string" ? e : e.id, r = this.incomings[t];
    return r ? r.map((i) => this.getCell(i)).filter((i) => i && i.isEdge()) : null;
  }
  /**
   * Returns edges connected with cell.
   */
  getConnectedEdges(e, t = {}) {
    const r = [], i = typeof e == "string" ? this.getCell(e) : e;
    if (i == null)
      return r;
    const o = {}, s = t.indirect;
    let a = t.incoming, l = t.outgoing;
    a == null && l == null && (a = l = !0);
    const u = (c, h) => {
      const f = h ? this.getOutgoingEdges(c) : this.getIncomingEdges(c);
      if (f != null && f.forEach((d) => {
        o[d.id] || (r.push(d), o[d.id] = !0, s && (a && u(d, !1), l && u(d, !0)));
      }), s && c.isEdge()) {
        const d = h ? c.getTargetCell() : c.getSourceCell();
        d && d.isEdge() && (o[d.id] || (r.push(d), u(d, h)));
      }
    };
    if (l && u(i, !0), a && u(i, !1), t.deep) {
      const c = i.getDescendants({ deep: !0 }), h = {};
      c.forEach((d) => {
        d.isNode() && (h[d.id] = !0);
      });
      const f = (d, p) => {
        const g = p ? this.getOutgoingEdges(d.id) : this.getIncomingEdges(d.id);
        g != null && g.forEach((v) => {
          if (!o[v.id]) {
            const m = v.getSourceCell(), y = v.getTargetCell();
            if (!t.enclosed && m && h[m.id] && y && h[y.id])
              return;
            r.push(v), o[v.id] = !0;
          }
        });
      };
      c.forEach((d) => {
        d.isEdge() || (l && f(d, !0), a && f(d, !1));
      });
    }
    return r;
  }
  isBoundary(e, t) {
    const r = typeof e == "string" ? this.getCell(e) : e, i = t ? this.getIncomingEdges(r) : this.getOutgoingEdges(r);
    return i == null || i.length === 0;
  }
  getBoundaryNodes(e) {
    const t = [];
    return Object.keys(this.nodes).forEach((r) => {
      if (this.isBoundary(r, e)) {
        const i = this.getCell(r);
        i && t.push(i);
      }
    }), t;
  }
  /**
   * Returns an array of all the roots of the graph.
   */
  getRoots() {
    return this.getBoundaryNodes(!0);
  }
  /**
   * Returns an array of all the leafs of the graph.
   */
  getLeafs() {
    return this.getBoundaryNodes(!1);
  }
  /**
   * Returns `true` if the node is a root node, i.e. there is no edges
   * coming to the node.
   */
  isRoot(e) {
    return this.isBoundary(e, !0);
  }
  /**
   * Returns `true` if the node is a leaf node, i.e. there is no edges
   * going out from the node.
   */
  isLeaf(e) {
    return this.isBoundary(e, !1);
  }
  /**
   * Returns all the neighbors of node in the graph. Neighbors are all
   * the nodes connected to node via either incoming or outgoing edge.
   */
  getNeighbors(e, t = {}) {
    let r = t.incoming, i = t.outgoing;
    r == null && i == null && (r = i = !0);
    const s = this.getConnectedEdges(e, t).reduce((a, l) => {
      const u = l.hasLoop(t), c = l.getSourceCell(), h = l.getTargetCell();
      return r && c && c.isNode() && !a[c.id] && (u || c !== e && (!t.deep || !c.isDescendantOf(e))) && (a[c.id] = c), i && h && h.isNode() && !a[h.id] && (u || h !== e && (!t.deep || !h.isDescendantOf(e))) && (a[h.id] = h), a;
    }, {});
    if (e.isEdge()) {
      if (r) {
        const a = e.getSourceCell();
        a && a.isNode() && !s[a.id] && (s[a.id] = a);
      }
      if (i) {
        const a = e.getTargetCell();
        a && a.isNode() && !s[a.id] && (s[a.id] = a);
      }
    }
    return Object.keys(s).map((a) => s[a]);
  }
  /**
   * Returns `true` if `cell2` is a neighbor of `cell1`.
   */
  isNeighbor(e, t, r = {}) {
    let i = r.incoming, o = r.outgoing;
    return i == null && o == null && (i = o = !0), this.getConnectedEdges(e, r).some((s) => {
      const a = s.getSourceCell(), l = s.getTargetCell();
      return !!(i && a && a.id === t.id || o && l && l.id === t.id);
    });
  }
  getSuccessors(e, t = {}) {
    const r = [];
    return this.search(e, (i, o) => {
      i !== e && this.matchDistance(o, t.distance) && r.push(i);
    }, Object.assign(Object.assign({}, t), { outgoing: !0 })), r;
  }
  /**
   * Returns `true` if `cell2` is a successor of `cell1`.
   */
  isSuccessor(e, t, r = {}) {
    let i = !1;
    return this.search(e, (o, s) => {
      if (o === t && o !== e && this.matchDistance(s, r.distance))
        return i = !0, !1;
    }, Object.assign(Object.assign({}, r), { outgoing: !0 })), i;
  }
  getPredecessors(e, t = {}) {
    const r = [];
    return this.search(e, (i, o) => {
      i !== e && this.matchDistance(o, t.distance) && r.push(i);
    }, Object.assign(Object.assign({}, t), { incoming: !0 })), r;
  }
  /**
   * Returns `true` if `cell2` is a predecessor of `cell1`.
   */
  isPredecessor(e, t, r = {}) {
    let i = !1;
    return this.search(e, (o, s) => {
      if (o === t && o !== e && this.matchDistance(s, r.distance))
        return i = !0, !1;
    }, Object.assign(Object.assign({}, r), { incoming: !0 })), i;
  }
  matchDistance(e, t) {
    return t == null ? !0 : typeof t == "function" ? t(e) : Array.isArray(t) && t.includes(e) ? !0 : e === t;
  }
  /**
   * Returns the common ancestor of the passed cells.
   */
  getCommonAncestor(...e) {
    const t = [];
    return e.forEach((r) => {
      r && (Array.isArray(r) ? t.push(...r) : t.push(r));
    }), Mt.getCommonAncestor(...t);
  }
  /**
   * Returns an array of cells that result from finding nodes/edges that
   * are connected to any of the cells in the cells array. This function
   * loops over cells and if the current cell is a edge, it collects its
   * source/target nodes; if it is an node, it collects its incoming and
   * outgoing edges if both the edge terminal (source/target) are in the
   * cells array.
   */
  getSubGraph(e, t = {}) {
    const r = [], i = {}, o = [], s = [], a = (l) => {
      i[l.id] || (r.push(l), i[l.id] = l, l.isEdge() && s.push(l), l.isNode() && o.push(l));
    };
    return e.forEach((l) => {
      a(l), t.deep && l.getDescendants({ deep: !0 }).forEach((c) => a(c));
    }), s.forEach((l) => {
      const u = l.getSourceCell(), c = l.getTargetCell();
      u && !i[u.id] && (r.push(u), i[u.id] = u, u.isNode() && o.push(u)), c && !i[c.id] && (r.push(c), i[c.id] = c, c.isNode() && o.push(c));
    }), o.forEach((l) => {
      this.getConnectedEdges(l, t).forEach((c) => {
        const h = c.getSourceCell(), f = c.getTargetCell();
        !i[c.id] && h && i[h.id] && f && i[f.id] && (r.push(c), i[c.id] = c);
      });
    }), r;
  }
  /**
   * Clones the whole subgraph (including all the connected links whose
   * source/target is in the subgraph). If `options.deep` is `true`, also
   * take into account all the embedded cells of all the subgraph cells.
   *
   * Returns a map of the form: { [original cell ID]: [clone] }.
   */
  cloneSubGraph(e, t = {}) {
    const r = this.getSubGraph(e, t);
    return this.cloneCells(r);
  }
  cloneCells(e) {
    return Mt.cloneCells(e);
  }
  getNodesFromPoint(e, t) {
    const r = typeof e == "number" ? { x: e, y: t || 0 } : e;
    return this.getNodes().filter((i) => i.getBBox().containsPoint(r));
  }
  getNodesInArea(e, t, r, i, o) {
    const s = typeof e == "number" ? new Se(e, t, r, i) : Se.create(e), a = typeof e == "number" ? o : t, l = a && a.strict;
    return this.getNodes().filter((u) => {
      const c = u.getBBox();
      return l ? s.containsRect(c) : s.isIntersectWithRect(c);
    });
  }
  getEdgesInArea(e, t, r, i, o) {
    const s = typeof e == "number" ? new Se(e, t, r, i) : Se.create(e), a = typeof e == "number" ? o : t, l = a && a.strict;
    return this.getEdges().filter((u) => {
      const c = u.getBBox();
      return c.width === 0 ? c.inflate(1, 0) : c.height === 0 && c.inflate(0, 1), l ? s.containsRect(c) : s.isIntersectWithRect(c);
    });
  }
  getNodesUnderNode(e, t = {}) {
    const r = e.getBBox();
    return (t.by == null || t.by === "bbox" ? this.getNodesInArea(r) : this.getNodesFromPoint(r[t.by])).filter((o) => e.id !== o.id && !o.isDescendantOf(e));
  }
  /**
   * Returns the bounding box that surrounds all cells in the graph.
   */
  getAllCellsBBox() {
    return this.getCellsBBox(this.getCells());
  }
  /**
   * Returns the bounding box that surrounds all the given cells.
   */
  getCellsBBox(e, t = {}) {
    return Mt.getCellsBBox(e, t);
  }
  // #region search
  search(e, t, r = {}) {
    r.breadthFirst ? this.breadthFirstSearch(e, t, r) : this.depthFirstSearch(e, t, r);
  }
  breadthFirstSearch(e, t, r = {}) {
    const i = [], o = {}, s = {};
    for (i.push(e), s[e.id] = 0; i.length > 0; ) {
      const a = i.shift();
      if (a == null || o[a.id] || (o[a.id] = !0, Ue(t, this, a, s[a.id]) === !1))
        continue;
      this.getNeighbors(a, r).forEach((u) => {
        s[u.id] = s[a.id] + 1, i.push(u);
      });
    }
  }
  depthFirstSearch(e, t, r = {}) {
    const i = [], o = {}, s = {};
    for (i.push(e), s[e.id] = 0; i.length > 0; ) {
      const a = i.pop();
      if (a == null || o[a.id] || (o[a.id] = !0, Ue(t, this, a, s[a.id]) === !1))
        continue;
      const l = this.getNeighbors(a, r), u = i.length;
      l.forEach((c) => {
        s[c.id] = s[a.id] + 1, i.splice(u, 0, c);
      });
    }
  }
  // #endregion
  // #region shortest path
  /** *
   * Returns an array of IDs of nodes on the shortest
   * path between source and target.
   */
  getShortestPath(e, t, r = {}) {
    const i = {};
    this.getEdges().forEach((u) => {
      const c = u.getSourceCellId(), h = u.getTargetCellId();
      c && h && (i[c] || (i[c] = []), i[h] || (i[h] = []), i[c].push(h), r.directed || i[h].push(c));
    });
    const o = typeof e == "string" ? e : e.id, s = aE.run(i, o, r.weight), a = [];
    let l = typeof t == "string" ? t : t.id;
    for (s[l] && a.push(l); l = s[l]; )
      a.unshift(l);
    return a;
  }
  // #endregion
  // #region transform
  /**
   * Translate all cells in the graph by `tx` and `ty` pixels.
   */
  translate(e, t, r) {
    return this.getCells().filter((i) => !i.hasParent()).forEach((i) => i.translate(e, t, r)), this;
  }
  resize(e, t, r) {
    return this.resizeCells(e, t, this.getCells(), r);
  }
  resizeCells(e, t, r, i = {}) {
    const o = this.getCellsBBox(r);
    if (o) {
      const s = Math.max(e / o.width, 0), a = Math.max(t / o.height, 0), l = o.getOrigin();
      r.forEach((u) => u.scale(s, a, l, i));
    }
    return this;
  }
  // #endregion
  // #region serialize/deserialize
  toJSON(e = {}) {
    return UO.toJSON(this.getCells(), e);
  }
  parseJSON(e) {
    return UO.fromJSON(e);
  }
  fromJSON(e, t = {}) {
    const r = this.parseJSON(e);
    return this.resetCells(r, t), this;
  }
  // #endregion
  // #region batch
  startBatch(e, t = {}) {
    return this.batches[e] = (this.batches[e] || 0) + 1, this.notify("batch:start", { name: e, data: t }), this;
  }
  stopBatch(e, t = {}) {
    return this.batches[e] = (this.batches[e] || 0) - 1, this.notify("batch:stop", { name: e, data: t }), this;
  }
  batchUpdate(e, t, r = {}) {
    this.startBatch(e, r);
    const i = t();
    return this.stopBatch(e, r), i;
  }
  hasActiveBatch(e = Object.keys(this.batches)) {
    return (Array.isArray(e) ? e : [e]).some((r) => this.batches[r] > 0);
  }
  // #endregion
  dispose() {
    this.collection.dispose();
  }
};
pTe([
  cl.dispose()
], cl.prototype, "dispose", null);
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.addNode == "function" && typeof i.addEdge == "function" && i.collection != null;
  }
  n.isModel = e;
})(cl || (cl = {}));
(function(n) {
  function e(r, i = {}) {
    return {
      cells: r.map((o) => o.toJSON(i))
    };
  }
  n.toJSON = e;
  function t(r) {
    const i = [];
    return Array.isArray(r) ? i.push(...r) : (r.cells && i.push(...r.cells), r.nodes && r.nodes.forEach((o) => {
      o.shape == null && (o.shape = "rect"), i.push(o);
    }), r.edges && r.edges.forEach((o) => {
      o.shape == null && (o.shape = "edge"), i.push(o);
    })), i.map((o) => {
      const s = o.shape;
      if (s) {
        if (sr.registry.exist(s))
          return sr.create(o);
        if (Yn.registry.exist(s))
          return Yn.create(o);
      }
      throw new Error("The `shape` should be specified when creating a node/edge instance");
    });
  }
  n.fromJSON = t;
})(cl || (cl = {}));
var gTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
let Pc = class extends sr {
  get label() {
    return this.getLabel();
  }
  set label(e) {
    this.setLabel(e);
  }
  getLabel() {
    return this.getAttrByPath("text/text");
  }
  setLabel(e, t) {
    return e == null ? this.removeLabel() : this.setAttrByPath("text/text", e, t), this;
  }
  removeLabel() {
    return this.removeAttrByPath("text/text"), this;
  }
};
(function(n) {
  n.bodyAttr = {
    fill: "#ffffff",
    stroke: "#333333",
    strokeWidth: 2
  }, n.labelAttr = {
    fontSize: 14,
    fill: "#000000",
    refX: 0.5,
    refY: 0.5,
    textAnchor: "middle",
    textVerticalAnchor: "middle",
    fontFamily: "Arial, helvetica, sans-serif"
  }, n.config({
    attrs: { text: Object.assign({}, n.labelAttr) },
    propHooks(e) {
      const { label: t } = e, r = gTe(e, ["label"]);
      return t && Ug(r, "attrs/text/text", t), r;
    },
    visible: !0
  });
})(Pc || (Pc = {}));
var vTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
function mTe(n, e = "body") {
  return [
    {
      tagName: n,
      selector: e
    },
    {
      tagName: "text",
      selector: "label"
    }
  ];
}
function yTe(n = "xlink:href") {
  return (t) => {
    const { imageUrl: r, imageWidth: i, imageHeight: o } = t, s = vTe(t, ["imageUrl", "imageWidth", "imageHeight"]);
    if (r != null || i != null || o != null) {
      const a = () => {
        if (s.attrs) {
          const l = s.attrs.image;
          r != null && (l[n] = r), i != null && (l.width = i), o != null && (l.height = o), s.attrs.image = l;
        }
      };
      s.attrs ? (s.attrs.image == null && (s.attrs.image = {}), a()) : (s.attrs = {
        image: {}
      }, a());
    }
    return s;
  };
}
function tv(n, e, t = {}) {
  const r = {
    constructorName: n,
    markup: mTe(n, t.selector),
    attrs: {
      [n]: Object.assign({}, Pc.bodyAttr)
    }
  };
  return (t.parent || Pc).define(jn(r, e, { shape: n }));
}
tv("rect", {
  attrs: {
    body: {
      refWidth: "100%",
      refHeight: "100%"
    }
  }
});
const bTe = Yn.define({
  shape: "edge",
  markup: [
    {
      tagName: "path",
      selector: "wrap",
      groupSelector: "lines",
      attrs: {
        fill: "none",
        cursor: "pointer",
        stroke: "transparent",
        strokeLinecap: "round"
      }
    },
    {
      tagName: "path",
      selector: "line",
      groupSelector: "lines",
      attrs: {
        fill: "none",
        pointerEvents: "none"
      }
    }
  ],
  attrs: {
    lines: {
      connection: !0,
      strokeLinejoin: "round"
    },
    wrap: {
      strokeWidth: 10
    },
    line: {
      stroke: "#333",
      strokeWidth: 2,
      targetMarker: "classic"
    }
  }
});
tv("ellipse", {
  attrs: {
    body: {
      refCx: "50%",
      refCy: "50%",
      refRx: "50%",
      refRy: "50%"
    }
  }
});
var OTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class wg extends Pc {
  get points() {
    return this.getPoints();
  }
  set points(e) {
    this.setPoints(e);
  }
  getPoints() {
    return this.getAttrByPath("body/refPoints");
  }
  setPoints(e, t) {
    return e == null ? this.removePoints() : this.setAttrByPath("body/refPoints", wg.pointsToString(e), t), this;
  }
  removePoints() {
    return this.removeAttrByPath("body/refPoints"), this;
  }
}
(function(n) {
  function e(t) {
    return typeof t == "string" ? t : t.map((r) => Array.isArray(r) ? r.join(",") : W.isPointLike(r) ? `${r.x}, ${r.y}` : "").join(" ");
  }
  n.pointsToString = e, n.config({
    propHooks(t) {
      const { points: r } = t, i = OTe(t, ["points"]);
      if (r) {
        const o = e(r);
        o && Ug(i, "attrs/body/refPoints", o);
      }
      return i;
    }
  });
})(wg || (wg = {}));
tv("polygon", {}, { parent: wg });
tv("polyline", {}, { parent: wg });
var wTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
Pc.define({
  shape: "path",
  markup: [
    {
      tagName: "rect",
      selector: "bg"
    },
    {
      tagName: "path",
      selector: "body"
    },
    {
      tagName: "text",
      selector: "label"
    }
  ],
  attrs: {
    bg: {
      refWidth: "100%",
      refHeight: "100%",
      fill: "none",
      stroke: "none",
      pointerEvents: "all"
    },
    body: {
      fill: "none",
      stroke: "#000",
      strokeWidth: 2
    }
  },
  propHooks(n) {
    const { path: e } = n, t = wTe(n, ["path"]);
    return e && Ug(t, "attrs/body/refD", e), t;
  }
});
var xTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
Pc.define({
  shape: "text-block",
  markup: [
    {
      tagName: "rect",
      selector: "body"
    },
    wc.SUPPORT_FOREIGNOBJECT ? {
      tagName: "foreignObject",
      selector: "foreignObject",
      children: [
        {
          tagName: "div",
          ns: Br.xhtml,
          selector: "label",
          style: {
            width: "100%",
            height: "100%",
            position: "static",
            backgroundColor: "transparent",
            textAlign: "center",
            margin: 0,
            padding: "0px 5px",
            boxSizing: "border-box",
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
          }
        }
      ]
    } : {
      tagName: "text",
      selector: "label",
      attrs: {
        textAnchor: "middle"
      }
    }
  ],
  attrs: {
    body: Object.assign(Object.assign({}, Pc.bodyAttr), { refWidth: "100%", refHeight: "100%" }),
    foreignObject: {
      refWidth: "100%",
      refHeight: "100%"
    },
    label: {
      style: {
        fontSize: 14
      }
    }
  },
  propHooks(n) {
    const { text: e } = n, t = xTe(n, ["text"]);
    return e && Ug(t, "attrs/label/text", e), t;
  },
  attrHooks: {
    text: {
      set(n, { cell: e, view: t, refBBox: r, elem: i, attrs: o }) {
        if (i instanceof HTMLElement)
          i.textContent = n;
        else {
          const s = o.style || {}, a = { text: n, width: -5, height: "100%" }, l = Object.assign({ textVerticalAnchor: "middle" }, s), u = ul.presets.textWrap;
          return Ue(u.set, this, a, {
            cell: e,
            view: t,
            elem: i,
            refBBox: r,
            attrs: l
          }), { fill: s.color || null };
        }
      },
      position(n, { refBBox: e, elem: t }) {
        if (t instanceof SVGElement)
          return e.getCenter();
      }
    }
  }
});
tv("image", {
  attrs: {
    image: {
      refWidth: "100%",
      refHeight: "100%"
    }
  },
  propHooks: yTe()
}, {
  selector: "image"
});
tv("circle", {
  attrs: {
    body: {
      refCx: "50%",
      refCy: "50%",
      refR: "50%"
    }
  }
});
class Zo extends ir {
  constructor() {
    super(...arguments), this.portsCache = {};
  }
  get [Symbol.toStringTag]() {
    return Zo.toStringTag;
  }
  getContainerClassName() {
    const e = [
      super.getContainerClassName(),
      this.prefixClassName("node")
    ];
    return this.can("nodeMovable") || e.push(this.prefixClassName("node-immovable")), e.join(" ");
  }
  updateClassName(e) {
    const t = e.target;
    if (t.hasAttribute("magnet")) {
      const r = this.prefixClassName("port-unconnectable");
      this.can("magnetConnectable") ? hr(t, r) : rt(t, r);
    } else {
      const r = this.prefixClassName("node-immovable");
      this.can("nodeMovable") ? this.removeClass(r) : this.addClass(r);
    }
  }
  isNodeView() {
    return !0;
  }
  confirmUpdate(e, t = {}) {
    let r = e;
    return this.hasAction(r, "ports") && (this.removePorts(), this.cleanPortsCache()), this.hasAction(r, "render") ? (this.render(), r = this.removeAction(r, [
      "render",
      "update",
      "resize",
      "translate",
      "rotate",
      "ports",
      "tools"
    ])) : (r = this.handleAction(r, "resize", () => this.resize(), "update"), r = this.handleAction(
      r,
      "update",
      () => this.update(),
      // `update()` will render ports when useCSSSelectors are enabled
      "ports"
    ), r = this.handleAction(r, "translate", () => this.translate()), r = this.handleAction(r, "rotate", () => this.rotate()), r = this.handleAction(r, "ports", () => this.renderPorts()), r = this.handleAction(r, "tools", () => {
      this.getFlag("tools") === e ? this.renderTools() : this.updateTools(t);
    })), r;
  }
  update(e) {
    this.cleanCache(), this.removePorts();
    const t = this.cell, r = t.getSize(), i = t.getAttrs();
    this.updateAttrs(this.container, i, {
      attrs: e === i ? null : e,
      rootBBox: new Se(0, 0, r.width, r.height),
      selectors: this.selectors
    }), this.renderPorts();
  }
  renderMarkup() {
    const e = this.cell.markup;
    if (e) {
      if (typeof e == "string")
        throw new TypeError("Not support string markup.");
      return this.renderJSONMarkup(e);
    }
    throw new TypeError("Invalid node markup.");
  }
  renderJSONMarkup(e) {
    const t = this.parseJSONMarkup(e, this.container);
    this.selectors = t.selectors, this.container.appendChild(t.fragment);
  }
  render() {
    return this.empty(), this.renderMarkup(), this.resize(), this.updateTransform(), this.renderTools(), this;
  }
  resize() {
    this.cell.getAngle() && this.rotate(), this.update();
  }
  translate() {
    this.updateTransform();
  }
  rotate() {
    this.updateTransform();
  }
  getTranslationString() {
    const e = this.cell.getPosition();
    return `translate(${e.x},${e.y})`;
  }
  getRotationString() {
    const e = this.cell.getAngle();
    if (e) {
      const t = this.cell.getSize();
      return `rotate(${e},${t.width / 2},${t.height / 2})`;
    }
  }
  updateTransform() {
    let e = this.getTranslationString();
    const t = this.getRotationString();
    t && (e += ` ${t}`), this.container.setAttribute("transform", e);
  }
  // #region ports
  findPortElem(e, t) {
    const r = e ? this.portsCache[e] : null;
    if (!r)
      return null;
    const i = r.portContentElement, o = r.portContentSelectors || {};
    return this.findOne(t, i, o);
  }
  cleanPortsCache() {
    this.portsCache = {};
  }
  removePorts() {
    Object.values(this.portsCache).forEach((e) => {
      Ja(e.portElement);
    });
  }
  renderPorts() {
    const e = this.container, t = [];
    e.childNodes.forEach((s) => {
      t.push(s);
    });
    const r = this.cell.getParsedPorts(), i = _N(r, "zIndex"), o = "auto";
    i[o] && i[o].forEach((s) => {
      const a = this.getPortElement(s);
      e.append(a), t.push(a);
    }), Object.keys(i).forEach((s) => {
      if (s !== o) {
        const a = parseInt(s, 10);
        this.appendPorts(i[s], a, t);
      }
    }), this.updatePorts();
  }
  appendPorts(e, t, r) {
    const i = e.map((o) => this.getPortElement(o));
    r[t] || t < 0 ? wL(r[Math.max(t, 0)], i) : Kc(this.container, i);
  }
  getPortElement(e) {
    const t = this.portsCache[e.id];
    return t ? t.portElement : this.createPortElement(e);
  }
  createPortElement(e) {
    let t = On.renderMarkup(this.cell.getPortContainerMarkup());
    const r = t.elem;
    if (r == null)
      throw new Error("Invalid port container markup.");
    t = On.renderMarkup(this.getPortMarkup(e));
    const i = t.elem, o = t.selectors;
    if (i == null)
      throw new Error("Invalid port markup.");
    this.setAttrs({
      port: e.id,
      "port-group": e.group
    }, i);
    let s = "x6-port";
    e.group && (s += ` x6-port-${e.group}`), rt(r, s), rt(r, "x6-port"), rt(i, "x6-port-body"), r.appendChild(i);
    let a = o, l, u;
    if (this.existPortLabel(e)) {
      if (t = On.renderMarkup(this.getPortLabelMarkup(e.label)), l = t.elem, u = t.selectors, l == null)
        throw new Error("Invalid port label markup.");
      if (o && u) {
        for (const h in u)
          if (o[h] && h !== this.rootSelector)
            throw new Error("Selectors within port must be unique.");
        a = Object.assign(Object.assign({}, o), u);
      }
      rt(l, "x6-port-label"), r.appendChild(l);
    }
    return this.portsCache[e.id] = {
      portElement: r,
      portSelectors: a,
      portLabelElement: l,
      portLabelSelectors: u,
      portContentElement: i,
      portContentSelectors: o
    }, this.graph.options.onPortRendered && this.graph.options.onPortRendered({
      port: e,
      node: this.cell,
      container: r,
      selectors: a,
      labelContainer: l,
      labelSelectors: u,
      contentContainer: i,
      contentSelectors: o
    }), r;
  }
  updatePorts() {
    const e = this.cell.getParsedGroups(), t = Object.keys(e);
    t.length === 0 ? this.updatePortGroup() : t.forEach((r) => this.updatePortGroup(r));
  }
  updatePortGroup(e) {
    const t = Se.fromSize(this.cell.getSize()), r = this.cell.getPortsLayoutByGroup(e, t);
    for (let i = 0, o = r.length; i < o; i += 1) {
      const s = r[i], a = s.portId, l = this.portsCache[a] || {}, u = s.portLayout;
      if (this.applyPortTransform(l.portElement, u), s.portAttrs != null) {
        const h = {
          selectors: l.portSelectors || {}
        };
        s.portSize && (h.rootBBox = Se.fromSize(s.portSize)), this.updateAttrs(l.portElement, s.portAttrs, h);
      }
      const c = s.labelLayout;
      if (c && l.portLabelElement && (this.applyPortTransform(l.portLabelElement, c, -(u.angle || 0)), c.attrs)) {
        const h = {
          selectors: l.portLabelSelectors || {}
        };
        s.labelSize && (h.rootBBox = Se.fromSize(s.labelSize)), this.updateAttrs(l.portLabelElement, c.attrs, h);
      }
    }
  }
  applyPortTransform(e, t, r = 0) {
    const i = t.angle, o = t.position, s = Qr().rotate(r).translate(o.x || 0, o.y || 0).rotate(i || 0);
    ug(e, s, { absolute: !0 });
  }
  getPortMarkup(e) {
    return e.markup || this.cell.portMarkup;
  }
  getPortLabelMarkup(e) {
    return e.markup || this.cell.portLabelMarkup;
  }
  existPortLabel(e) {
    return e.attrs && e.attrs.text;
  }
  getEventArgs(e, t, r) {
    const i = this, o = i.cell, s = o;
    return t == null || r == null ? { e, view: i, node: o, cell: s } : { e, x: t, y: r, view: i, node: o, cell: s };
  }
  getPortEventArgs(e, t, r) {
    const i = this, o = i.cell, s = o;
    return r ? {
      e,
      x: r.x,
      y: r.y,
      view: i,
      node: o,
      cell: s,
      port: t
    } : { e, view: i, node: o, cell: s, port: t };
  }
  notifyMouseDown(e, t, r) {
    super.onMouseDown(e, t, r), this.notify("node:mousedown", this.getEventArgs(e, t, r));
  }
  notifyMouseMove(e, t, r) {
    super.onMouseMove(e, t, r), this.notify("node:mousemove", this.getEventArgs(e, t, r));
  }
  notifyMouseUp(e, t, r) {
    super.onMouseUp(e, t, r), this.notify("node:mouseup", this.getEventArgs(e, t, r));
  }
  notifyPortEvent(e, t, r) {
    const i = this.findAttr("port", t.target);
    if (i) {
      const o = t.type;
      e === "node:port:mouseenter" ? t.type = "mouseenter" : e === "node:port:mouseleave" && (t.type = "mouseleave"), this.notify(e, this.getPortEventArgs(t, i, r)), t.type = o;
    }
  }
  onClick(e, t, r) {
    super.onClick(e, t, r), this.notify("node:click", this.getEventArgs(e, t, r)), this.notifyPortEvent("node:port:click", e, { x: t, y: r });
  }
  onDblClick(e, t, r) {
    super.onDblClick(e, t, r), this.notify("node:dblclick", this.getEventArgs(e, t, r)), this.notifyPortEvent("node:port:dblclick", e, { x: t, y: r });
  }
  onContextMenu(e, t, r) {
    super.onContextMenu(e, t, r), this.notify("node:contextmenu", this.getEventArgs(e, t, r)), this.notifyPortEvent("node:port:contextmenu", e, { x: t, y: r });
  }
  onMouseDown(e, t, r) {
    this.isPropagationStopped(e) || (this.notifyMouseDown(e, t, r), this.notifyPortEvent("node:port:mousedown", e, { x: t, y: r }), this.startNodeDragging(e, t, r));
  }
  onMouseMove(e, t, r) {
    const i = this.getEventData(e), o = i.action;
    if (o === "magnet")
      this.dragMagnet(e, t, r);
    else {
      if (o === "move") {
        const a = i.targetView || this;
        a.dragNode(e, t, r), a.notify("node:moving", {
          e,
          x: t,
          y: r,
          view: a,
          cell: a.cell,
          node: a.cell
        });
      }
      this.notifyMouseMove(e, t, r), this.notifyPortEvent("node:port:mousemove", e, { x: t, y: r });
    }
    this.setEventData(e, i);
  }
  onMouseUp(e, t, r) {
    const i = this.getEventData(e), o = i.action;
    o === "magnet" ? this.stopMagnetDragging(e, t, r) : (this.notifyMouseUp(e, t, r), this.notifyPortEvent("node:port:mouseup", e, { x: t, y: r }), o === "move" && (i.targetView || this).stopNodeDragging(e, t, r));
    const s = i.targetMagnet;
    s && this.onMagnetClick(e, s, t, r), this.checkMouseleave(e);
  }
  onMouseOver(e) {
    super.onMouseOver(e), this.notify("node:mouseover", this.getEventArgs(e)), this.notifyPortEvent("node:port:mouseenter", e), this.notifyPortEvent("node:port:mouseover", e);
  }
  onMouseOut(e) {
    super.onMouseOut(e), this.notify("node:mouseout", this.getEventArgs(e)), this.notifyPortEvent("node:port:mouseleave", e), this.notifyPortEvent("node:port:mouseout", e);
  }
  onMouseEnter(e) {
    this.updateClassName(e), super.onMouseEnter(e), this.notify("node:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    super.onMouseLeave(e), this.notify("node:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, r, i) {
    super.onMouseWheel(e, t, r, i), this.notify("node:mousewheel", Object.assign({ delta: i }, this.getEventArgs(e, t, r)));
  }
  onMagnetClick(e, t, r, i) {
    const o = this.graph;
    o.view.getMouseMovedCount(e) > o.options.clickThreshold || this.notify("node:magnet:click", Object.assign({ magnet: t }, this.getEventArgs(e, r, i)));
  }
  onMagnetDblClick(e, t, r, i) {
    this.notify("node:magnet:dblclick", Object.assign({ magnet: t }, this.getEventArgs(e, r, i)));
  }
  onMagnetContextMenu(e, t, r, i) {
    this.notify("node:magnet:contextmenu", Object.assign({ magnet: t }, this.getEventArgs(e, r, i)));
  }
  onMagnetMouseDown(e, t, r, i) {
    this.startMagnetDragging(e, r, i);
  }
  onCustomEvent(e, t, r, i) {
    this.notify("node:customevent", Object.assign({ name: t }, this.getEventArgs(e, r, i))), super.onCustomEvent(e, t, r, i);
  }
  prepareEmbedding(e) {
    const t = this.graph, i = this.getEventData(e).cell || this.cell, o = t.findViewByCell(i), s = t.snapToGrid(e.clientX, e.clientY);
    this.notify("node:embed", {
      e,
      node: i,
      view: o,
      cell: i,
      x: s.x,
      y: s.y,
      currentParent: i.getParent()
    });
  }
  processEmbedding(e, t) {
    const r = t.cell || this.cell, i = t.graph || this.graph, o = i.options.embedding, s = o.findParent;
    let a = typeof s == "function" ? Ue(s, i, {
      view: this,
      node: this.cell
    }).filter((f) => Mt.isCell(f) && this.cell.id !== f.id && !f.isDescendantOf(this.cell)) : i.model.getNodesUnderNode(r, {
      by: s
    });
    if (o.frontOnly && a.length > 0) {
      const f = _N(a, "zIndex"), d = Yhe(Object.keys(f).map((p) => parseInt(p, 10)));
      d && (a = f[d]);
    }
    a = a.filter((f) => f.visible);
    let l = null;
    const u = t.candidateEmbedView, c = o.validate;
    for (let f = a.length - 1; f >= 0; f -= 1) {
      const d = a[f];
      if (u && u.cell.id === d.id) {
        l = u;
        break;
      } else {
        const p = d.findView(i);
        if (c && Ue(c, i, {
          child: this.cell,
          parent: p.cell,
          childView: this,
          parentView: p
        })) {
          l = p;
          break;
        }
      }
    }
    this.clearEmbedding(t), l && l.highlight(null, { type: "embedding" }), t.candidateEmbedView = l;
    const h = i.snapToGrid(e.clientX, e.clientY);
    this.notify("node:embedding", {
      e,
      cell: r,
      node: r,
      view: i.findViewByCell(r),
      x: h.x,
      y: h.y,
      currentParent: r.getParent(),
      candidateParent: l ? l.cell : null
    });
  }
  clearEmbedding(e) {
    const t = e.candidateEmbedView;
    t && (t.unhighlight(null, { type: "embedding" }), e.candidateEmbedView = null);
  }
  finalizeEmbedding(e, t) {
    this.graph.startBatch("embedding");
    const r = t.cell || this.cell, i = t.graph || this.graph, o = i.findViewByCell(r), s = r.getParent(), a = t.candidateEmbedView;
    if (a ? (a.unhighlight(null, { type: "embedding" }), t.candidateEmbedView = null, (s == null || s.id !== a.cell.id) && a.cell.insertChild(r, void 0, { ui: !0 })) : s && s.unembed(r, { ui: !0 }), i.model.getConnectedEdges(r, { deep: !0 }).forEach((l) => {
      l.updateParent({ ui: !0 });
    }), o && a) {
      const l = i.snapToGrid(e.clientX, e.clientY);
      o.notify("node:embedded", {
        e,
        cell: r,
        x: l.x,
        y: l.y,
        node: r,
        view: i.findViewByCell(r),
        previousParent: s,
        currentParent: r.getParent()
      });
    }
    this.graph.stopBatch("embedding");
  }
  getDelegatedView() {
    let e = this.cell, t = this;
    for (; t && !e.isEdge(); ) {
      if (!e.hasParent() || t.can("stopDelegateOnDragging"))
        return t;
      e = e.getParent(), t = this.graph.findViewByCell(e);
    }
    return null;
  }
  validateMagnet(e, t, r) {
    if (t.getAttribute("magnet") !== "passive") {
      const i = this.graph.options.connecting.validateMagnet;
      return i ? Ue(i, this.graph, {
        e: r,
        magnet: t,
        view: e,
        cell: e.cell
      }) : !0;
    }
    return !1;
  }
  startMagnetDragging(e, t, r) {
    if (!this.can("magnetConnectable"))
      return;
    e.stopPropagation();
    const i = e.currentTarget, o = this.graph;
    this.setEventData(e, {
      targetMagnet: i
    }), this.validateMagnet(this, i, e) ? (o.options.magnetThreshold <= 0 && this.startConnectting(e, i, t, r), this.setEventData(e, {
      action: "magnet"
    }), this.stopPropagation(e)) : this.onMouseDown(e, t, r), o.view.delegateDragEvents(e, this);
  }
  startConnectting(e, t, r, i) {
    this.graph.model.startBatch("add-edge");
    const o = this.createEdgeFromMagnet(t, r, i);
    o.setEventData(e, o.prepareArrowheadDragging("target", {
      x: r,
      y: i,
      isNewEdge: !0,
      fallbackAction: "remove"
    })), this.setEventData(e, { edgeView: o }), o.notifyMouseDown(e, r, i);
  }
  getDefaultEdge(e, t) {
    let r;
    const i = this.graph.options.connecting.createEdge;
    return i && (r = Ue(i, this.graph, {
      sourceMagnet: t,
      sourceView: e,
      sourceCell: e.cell
    })), r;
  }
  createEdgeFromMagnet(e, t, r) {
    const i = this.graph, o = i.model, s = this.getDefaultEdge(this, e);
    return s.setSource(Object.assign(Object.assign({}, s.getSource()), this.getEdgeTerminal(e, t, r, s, "source"))), s.setTarget(Object.assign(Object.assign({}, s.getTarget()), { x: t, y: r })), s.addTo(o, { async: !1, ui: !0 }), s.findView(i);
  }
  dragMagnet(e, t, r) {
    const i = this.getEventData(e), o = i.edgeView;
    if (o)
      o.onMouseMove(e, t, r), this.autoScrollGraph(e.clientX, e.clientY);
    else {
      const s = this.graph, a = s.options.magnetThreshold, l = this.getEventTarget(e), u = i.targetMagnet;
      if (a === "onleave") {
        if (u === l || u.contains(l))
          return;
      } else if (s.view.getMouseMovedCount(e) <= a)
        return;
      this.startConnectting(e, u, t, r);
    }
  }
  stopMagnetDragging(e, t, r) {
    const o = this.eventData(e).edgeView;
    o && (o.onMouseUp(e, t, r), this.graph.model.stopBatch("add-edge"));
  }
  notifyUnhandledMouseDown(e, t, r) {
    this.notify("node:unhandled:mousedown", {
      e,
      x: t,
      y: r,
      view: this,
      cell: this.cell,
      node: this.cell
    });
  }
  notifyNodeMove(e, t, r, i, o) {
    let s = [o];
    const a = this.graph.getPlugin("selection");
    if (a && a.isSelectionMovable()) {
      const l = a.getSelectedCells();
      l.includes(o) && (s = l.filter((u) => u.isNode()));
    }
    s.forEach((l) => {
      this.notify(e, {
        e: t,
        x: r,
        y: i,
        cell: l,
        node: l,
        view: l.findView(this.graph)
      });
    });
  }
  getRestrictArea(e) {
    const t = this.graph.options.translating.restrict, r = typeof t == "function" ? Ue(t, this.graph, e) : t;
    return typeof r == "number" ? this.graph.transform.getGraphArea().inflate(r) : r === !0 ? this.graph.transform.getGraphArea() : r || null;
  }
  startNodeDragging(e, t, r) {
    const i = this.getDelegatedView();
    if (i == null || !i.can("nodeMovable"))
      return this.notifyUnhandledMouseDown(e, t, r);
    this.setEventData(e, {
      targetView: i,
      action: "move"
    });
    const o = W.create(i.cell.getPosition());
    i.setEventData(e, {
      moving: !1,
      offset: o.diff(t, r),
      restrict: this.getRestrictArea(i)
    });
  }
  dragNode(e, t, r) {
    const i = this.cell, o = this.graph, s = o.getGridSize(), a = this.getEventData(e), l = a.offset, u = a.restrict;
    a.moving || (a.moving = !0, this.addClass("node-moving"), this.notifyNodeMove("node:move", e, t, r, this.cell)), this.autoScrollGraph(e.clientX, e.clientY);
    const c = Xt.snapToGrid(t + l.x, s), h = Xt.snapToGrid(r + l.y, s);
    i.setPosition(c, h, {
      restrict: u,
      deep: !0,
      ui: !0
    }), o.options.embedding.enabled && (a.embedding || (this.prepareEmbedding(e), a.embedding = !0), this.processEmbedding(e, a));
  }
  stopNodeDragging(e, t, r) {
    const i = this.getEventData(e);
    i.embedding && this.finalizeEmbedding(e, i), i.moving && (this.removeClass("node-moving"), this.notifyNodeMove("node:moved", e, t, r, this.cell)), i.moving = !1, i.embedding = !1;
  }
  // eslint-disable-next-line
  autoScrollGraph(e, t) {
    const r = this.graph.getPlugin("scroller");
    r && r.autoScroll(e, t);
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNodeView == "function" && typeof i.isEdgeView == "function" && typeof i.confirmUpdate == "function" && typeof i.update == "function" && typeof i.findPortElem == "function" && typeof i.resize == "function" && typeof i.rotate == "function" && typeof i.translate == "function";
  }
  n.isNodeView = e;
})(Zo || (Zo = {}));
Zo.config({
  isSvgElement: !0,
  priority: 0,
  bootstrap: ["render"],
  actions: {
    view: ["render"],
    markup: ["render"],
    attrs: ["update"],
    size: ["resize", "ports", "tools"],
    angle: ["rotate", "tools"],
    position: ["translate", "tools"],
    ports: ["ports"],
    tools: ["tools"]
  }
});
Zo.registry.register("node", Zo, !0);
var STe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class Jl extends ir {
  constructor() {
    super(...arguments), this.POINT_ROUNDING = 2, this.labelDestroyFn = {};
  }
  get [Symbol.toStringTag]() {
    return Jl.toStringTag;
  }
  getContainerClassName() {
    return [super.getContainerClassName(), this.prefixClassName("edge")].join(" ");
  }
  get sourceBBox() {
    const e = this.sourceView;
    if (!e) {
      const r = this.cell.getSource();
      return new Se(r.x, r.y);
    }
    const t = this.sourceMagnet;
    return e.isEdgeElement(t) ? new Se(this.sourceAnchor.x, this.sourceAnchor.y) : e.getBBoxOfElement(t || e.container);
  }
  get targetBBox() {
    const e = this.targetView;
    if (!e) {
      const r = this.cell.getTarget();
      return new Se(r.x, r.y);
    }
    const t = this.targetMagnet;
    return e.isEdgeElement(t) ? new Se(this.targetAnchor.x, this.targetAnchor.y) : e.getBBoxOfElement(t || e.container);
  }
  isEdgeView() {
    return !0;
  }
  confirmUpdate(e, t = {}) {
    let r = e;
    if (this.hasAction(r, "source")) {
      if (!this.updateTerminalProperties("source"))
        return r;
      r = this.removeAction(r, "source");
    }
    if (this.hasAction(r, "target")) {
      if (!this.updateTerminalProperties("target"))
        return r;
      r = this.removeAction(r, "target");
    }
    return this.hasAction(r, "render") ? (this.render(), r = this.removeAction(r, ["render", "update", "labels", "tools"]), r) : (r = this.handleAction(r, "update", () => this.update(t)), r = this.handleAction(r, "labels", () => this.onLabelsChange(t)), r = this.handleAction(r, "tools", () => this.renderTools()), r);
  }
  // #region render
  render() {
    return this.empty(), this.renderMarkup(), this.labelContainer = null, this.renderLabels(), this.update(), this.renderTools(), this;
  }
  renderMarkup() {
    const e = this.cell.markup;
    if (e) {
      if (typeof e == "string")
        throw new TypeError("Not support string markup.");
      return this.renderJSONMarkup(e);
    }
    throw new TypeError("Invalid edge markup.");
  }
  renderJSONMarkup(e) {
    const t = this.parseJSONMarkup(e, this.container);
    this.selectors = t.selectors, this.container.append(t.fragment);
  }
  customizeLabels() {
    if (this.labelContainer) {
      const e = this.cell, t = e.labels;
      for (let r = 0, i = t.length; r < i; r += 1) {
        const o = t[r], s = this.labelCache[r], a = this.labelSelectors[r], l = this.graph.options.onEdgeLabelRendered;
        if (l) {
          const u = l({
            edge: e,
            label: o,
            container: s,
            selectors: a
          });
          u && (this.labelDestroyFn[r] = u);
        }
      }
    }
  }
  destroyCustomizeLabels() {
    const e = this.cell.labels;
    if (this.labelCache && this.labelSelectors && this.labelDestroyFn)
      for (let t = 0, r = e.length; t < r; t += 1) {
        const i = this.labelDestroyFn[t], o = this.labelCache[t], s = this.labelSelectors[t];
        i && o && s && i({
          edge: this.cell,
          label: e[t],
          container: o,
          selectors: s
        });
      }
    this.labelDestroyFn = {};
  }
  renderLabels() {
    const e = this.cell, t = e.getLabels(), r = t.length;
    let i = this.labelContainer;
    if (this.labelCache = {}, this.labelSelectors = {}, r <= 0)
      return i && i.parentNode && i.parentNode.removeChild(i), this;
    i ? this.empty(i) : (i = ga("g"), this.addClass(this.prefixClassName("edge-labels"), i), this.labelContainer = i);
    for (let o = 0, s = t.length; o < s; o += 1) {
      const a = t[o], l = this.normalizeLabelMarkup(this.parseLabelMarkup(a.markup));
      let u, c;
      if (l)
        u = l.node, c = l.selectors;
      else {
        const f = e.getDefaultLabel(), d = this.normalizeLabelMarkup(this.parseLabelMarkup(f.markup));
        u = d.node, c = d.selectors;
      }
      u.setAttribute("data-index", `${o}`), i.appendChild(u);
      const h = this.rootSelector;
      if (c[h])
        throw new Error("Ambiguous label root selector.");
      c[h] = u, this.labelCache[o] = u, this.labelSelectors[o] = c;
    }
    return i.parentNode == null && this.container.appendChild(i), this.updateLabels(), this.customizeLabels(), this;
  }
  onLabelsChange(e = {}) {
    this.destroyCustomizeLabels(), this.shouldRerenderLabels(e) ? this.renderLabels() : this.updateLabels(), this.updateLabelPositions();
  }
  shouldRerenderLabels(e = {}) {
    const t = this.cell.previous("labels");
    if (t == null)
      return !0;
    if ("propertyPathArray" in e && "propertyValue" in e) {
      const r = e.propertyPathArray || [], i = r.length;
      if (i > 1) {
        const o = r[1];
        if (t[o]) {
          if (i === 2)
            return typeof e.propertyValue == "object" && Zb(e.propertyValue, "markup");
          if (r[2] !== "markup")
            return !1;
        }
      }
    }
    return !0;
  }
  parseLabelMarkup(e) {
    return e ? typeof e == "string" ? this.parseLabelStringMarkup(e) : this.parseJSONMarkup(e) : null;
  }
  parseLabelStringMarkup(e) {
    const t = lt.createVectors(e), r = document.createDocumentFragment();
    for (let i = 0, o = t.length; i < o; i += 1) {
      const s = t[i].node;
      r.appendChild(s);
    }
    return { fragment: r, selectors: {} };
  }
  normalizeLabelMarkup(e) {
    if (e == null)
      return;
    const t = e.fragment;
    if (!(t instanceof DocumentFragment) || !t.hasChildNodes())
      throw new Error("Invalid label markup.");
    let r;
    const i = t.childNodes;
    return i.length > 1 || i[0].nodeName.toUpperCase() !== "G" ? r = lt.create("g").append(t) : r = lt.create(i[0]), r.addClass(this.prefixClassName("edge-label")), {
      node: r.node,
      selectors: e.selectors
    };
  }
  updateLabels() {
    if (this.labelContainer) {
      const e = this.cell, t = e.labels, r = this.can("edgeLabelMovable"), i = e.getDefaultLabel();
      for (let o = 0, s = t.length; o < s; o += 1) {
        const a = this.labelCache[o], l = this.labelSelectors[o];
        a.setAttribute("cursor", r ? "move" : "default");
        const u = t[o], c = jn({}, i.attrs, u.attrs);
        this.updateAttrs(a, c, {
          selectors: l,
          rootBBox: u.size ? Se.fromSize(u.size) : void 0
        });
      }
    }
  }
  renderTools() {
    const e = this.cell.getTools();
    return this.addTools(e), this;
  }
  // #endregion
  // #region updating
  update(e = {}) {
    this.cleanCache(), this.updateConnection(e);
    const t = this.cell.getAttrs(), r = STe(t, ["text"]);
    return r != null && this.updateAttrs(this.container, r, {
      selectors: this.selectors
    }), this.updateLabelPositions(), this.updateTools(e), this;
  }
  removeRedundantLinearVertices(e = {}) {
    const t = this.cell, r = t.getVertices(), i = [this.sourceAnchor, ...r, this.targetAnchor], o = i.length, s = new Oi(i);
    s.simplify({ threshold: 0.01 });
    const a = s.points.map((u) => u.toJSON()), l = a.length;
    return o === l ? 0 : (t.setVertices(a.slice(1, l - 1), e), o - l);
  }
  getTerminalView(e) {
    switch (e) {
      case "source":
        return this.sourceView || null;
      case "target":
        return this.targetView || null;
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalAnchor(e) {
    switch (e) {
      case "source":
        return W.create(this.sourceAnchor);
      case "target":
        return W.create(this.targetAnchor);
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalConnectionPoint(e) {
    switch (e) {
      case "source":
        return W.create(this.sourcePoint);
      case "target":
        return W.create(this.targetPoint);
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalMagnet(e, t = {}) {
    switch (e) {
      case "source": {
        if (t.raw)
          return this.sourceMagnet;
        const r = this.sourceView;
        return r ? this.sourceMagnet || r.container : null;
      }
      case "target": {
        if (t.raw)
          return this.targetMagnet;
        const r = this.targetView;
        return r ? this.targetMagnet || r.container : null;
      }
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  updateConnection(e = {}) {
    const t = this.cell;
    if (e.translateBy && t.isFragmentDescendantOf(e.translateBy)) {
      const r = e.tx || 0, i = e.ty || 0;
      this.routePoints = new Oi(this.routePoints).translate(r, i).points, this.translateConnectionPoints(r, i), this.path.translate(r, i);
    } else {
      const r = t.getVertices(), i = this.findAnchors(r);
      this.sourceAnchor = i.source, this.targetAnchor = i.target, this.routePoints = this.findRoutePoints(r);
      const o = this.findConnectionPoints(this.routePoints, this.sourceAnchor, this.targetAnchor);
      this.sourcePoint = o.source, this.targetPoint = o.target;
      const s = this.findMarkerPoints(this.routePoints, this.sourcePoint, this.targetPoint);
      this.path = this.findPath(this.routePoints, s.source || this.sourcePoint, s.target || this.targetPoint);
    }
    this.cleanCache();
  }
  findAnchors(e) {
    const t = this.cell, r = t.source, i = t.target, o = e[0], s = e[e.length - 1];
    return i.priority && !r.priority ? this.findAnchorsOrdered("target", s, "source", o) : this.findAnchorsOrdered("source", o, "target", s);
  }
  findAnchorsOrdered(e, t, r, i) {
    let o, s;
    const a = this.cell, l = a[e], u = a[r], c = this.getTerminalView(e), h = this.getTerminalView(r), f = this.getTerminalMagnet(e), d = this.getTerminalMagnet(r);
    if (c) {
      let p;
      t ? p = W.create(t) : h ? p = d : p = W.create(u), o = this.getAnchor(l.anchor, c, f, p, e);
    } else
      o = W.create(l);
    if (h) {
      const p = W.create(i || o);
      s = this.getAnchor(u.anchor, h, d, p, r);
    } else
      s = W.isPointLike(u) ? W.create(u) : new W();
    return {
      [e]: o,
      [r]: s
    };
  }
  getAnchor(e, t, r, i, o) {
    const s = t.isEdgeElement(r), a = this.graph.options.connecting;
    let l = typeof e == "string" ? { name: e } : e;
    if (!l) {
      const h = s ? (o === "source" ? a.sourceEdgeAnchor : a.targetEdgeAnchor) || a.edgeAnchor : (o === "source" ? a.sourceAnchor : a.targetAnchor) || a.anchor;
      l = typeof h == "string" ? { name: h } : h;
    }
    if (!l)
      throw new Error("Anchor should be specified.");
    let u;
    const c = l.name;
    if (s) {
      const h = yg.registry.get(c);
      if (typeof h != "function")
        return yg.registry.onNotFound(c);
      u = Ue(h, this, t, r, i, l.args || {}, o);
    } else {
      const h = mg.registry.get(c);
      if (typeof h != "function")
        return mg.registry.onNotFound(c);
      u = Ue(h, this, t, r, i, l.args || {}, o);
    }
    return u ? u.round(this.POINT_ROUNDING) : new W();
  }
  findRoutePoints(e = []) {
    const t = this.graph.options.connecting.router || ec.presets.normal, r = this.cell.getRouter() || t;
    let i;
    if (typeof r == "function")
      i = Ue(r, this, e, {}, this);
    else {
      const o = typeof r == "string" ? r : r.name, s = typeof r == "string" ? {} : r.args || {}, a = o ? ec.registry.get(o) : ec.presets.normal;
      if (typeof a != "function")
        return ec.registry.onNotFound(o);
      i = Ue(a, this, e, s, this);
    }
    return i == null ? e.map((o) => W.create(o)) : i.map((o) => W.create(o));
  }
  findConnectionPoints(e, t, r) {
    const i = this.cell, o = this.graph.options.connecting, s = i.getSource(), a = i.getTarget(), l = this.sourceView, u = this.targetView, c = e[0], h = e[e.length - 1];
    let f;
    if (l && !l.isEdgeElement(this.sourceMagnet)) {
      const p = this.sourceMagnet || l.container, g = c || r, v = new Ge(g, t), m = s.connectionPoint || o.sourceConnectionPoint || o.connectionPoint;
      f = this.getConnectionPoint(m, l, p, v, "source");
    } else
      f = t;
    let d;
    if (u && !u.isEdgeElement(this.targetMagnet)) {
      const p = this.targetMagnet || u.container, g = a.connectionPoint || o.targetConnectionPoint || o.connectionPoint, v = h || t, m = new Ge(v, r);
      d = this.getConnectionPoint(g, u, p, m, "target");
    } else
      d = r;
    return {
      source: f,
      target: d
    };
  }
  getConnectionPoint(e, t, r, i, o) {
    const s = i.end;
    if (e == null)
      return s;
    const a = typeof e == "string" ? e : e.name, l = typeof e == "string" ? {} : e.args, u = bg.registry.get(a);
    if (typeof u != "function")
      return bg.registry.onNotFound(a);
    const c = Ue(u, this, i, t, r, l || {}, o);
    return c ? c.round(this.POINT_ROUNDING) : s;
  }
  findMarkerPoints(e, t, r) {
    const i = (h) => {
      const f = this.cell.getAttrs(), d = Object.keys(f);
      for (let p = 0, g = d.length; p < g; p += 1) {
        const v = f[d[p]];
        if (v[`${h}Marker`] || v[`${h}-marker`]) {
          const m = v.strokeWidth || v["stroke-width"];
          if (m)
            return parseFloat(m);
          break;
        }
      }
      return null;
    }, o = e[0], s = e[e.length - 1];
    let a, l;
    const u = i("source");
    u && (a = t.clone().move(o || r, -u));
    const c = i("target");
    return c && (l = r.clone().move(s || t, -c)), this.sourceMarkerPoint = a || t.clone(), this.targetMarkerPoint = l || r.clone(), {
      source: a,
      target: l
    };
  }
  findPath(e, t, r) {
    const i = this.cell.getConnector() || this.graph.options.connecting.connector;
    let o, s, a;
    if (typeof i == "string" ? o = i : (o = i.name, s = i.args), o) {
      const u = Cf.registry.get(o);
      if (typeof u != "function")
        return Cf.registry.onNotFound(o);
      a = u;
    } else
      a = Cf.presets.normal;
    const l = Ue(a, this, t, r, e, Object.assign(Object.assign({}, s), { raw: !0 }), this);
    return typeof l == "string" ? Et.parse(l) : l;
  }
  translateConnectionPoints(e, t) {
    this.sourcePoint.translate(e, t), this.targetPoint.translate(e, t), this.sourceAnchor.translate(e, t), this.targetAnchor.translate(e, t), this.sourceMarkerPoint.translate(e, t), this.targetMarkerPoint.translate(e, t);
  }
  updateLabelPositions() {
    if (this.labelContainer == null)
      return this;
    if (!this.path)
      return this;
    const t = this.cell, r = t.getLabels();
    if (r.length === 0)
      return this;
    const i = t.getDefaultLabel(), o = this.normalizeLabelPosition(i.position);
    for (let s = 0, a = r.length; s < a; s += 1) {
      const l = r[s], u = this.labelCache[s];
      if (!u)
        continue;
      const c = this.normalizeLabelPosition(l.position), h = jn({}, o, c), f = this.getLabelTransformationMatrix(h);
      u.setAttribute("transform", Jg(f));
    }
    return this;
  }
  updateTerminalProperties(e) {
    const t = this.cell, r = this.graph, i = t[e], o = i && i.cell, s = `${e}View`;
    if (!o)
      return this[s] = null, this.updateTerminalMagnet(e), !0;
    const a = r.getCellById(o);
    if (!a)
      throw new Error(`Edge's ${e} node with id "${o}" not exists`);
    const l = a.findView(r);
    return l ? (this[s] = l, this.updateTerminalMagnet(e), !0) : !1;
  }
  updateTerminalMagnet(e) {
    const t = `${e}Magnet`, r = this.getTerminalView(e);
    if (r) {
      let i = r.getMagnetFromEdgeTerminal(this.cell[e]);
      i === r.container && (i = null), this[t] = i;
    } else
      this[t] = null;
  }
  getLabelPositionAngle(e) {
    const t = this.cell.getLabelAt(e);
    return t && t.position && typeof t.position == "object" && t.position.angle || 0;
  }
  getLabelPositionArgs(e) {
    const t = this.cell.getLabelAt(e);
    if (t && t.position && typeof t.position == "object")
      return t.position.options;
  }
  getDefaultLabelPositionArgs() {
    const e = this.cell.getDefaultLabel();
    if (e && e.position && typeof e.position == "object")
      return e.position.options;
  }
  mergeLabelPositionArgs(e, t) {
    return e === null ? null : e === void 0 ? t === null ? null : t : jn({}, t, e);
  }
  // #endregion
  getConnection() {
    return this.path != null ? this.path.clone() : null;
  }
  getConnectionPathData() {
    if (this.path == null)
      return "";
    const e = this.cache.pathCache;
    return Zb(e, "data") || (e.data = this.path.serialize()), e.data || "";
  }
  getConnectionSubdivisions() {
    if (this.path == null)
      return null;
    const e = this.cache.pathCache;
    return Zb(e, "segmentSubdivisions") || (e.segmentSubdivisions = this.path.getSegmentSubdivisions()), e.segmentSubdivisions;
  }
  getConnectionLength() {
    if (this.path == null)
      return 0;
    const e = this.cache.pathCache;
    return Zb(e, "length") || (e.length = this.path.length({
      segmentSubdivisions: this.getConnectionSubdivisions()
    })), e.length;
  }
  getPointAtLength(e) {
    return this.path == null ? null : this.path.pointAtLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getPointAtRatio(e) {
    return this.path == null ? null : (Kl(e) && (e = parseFloat(e) / 100), this.path.pointAt(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    }));
  }
  getTangentAtLength(e) {
    return this.path == null ? null : this.path.tangentAtLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getTangentAtRatio(e) {
    return this.path == null ? null : this.path.tangentAt(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPoint(e) {
    return this.path == null ? null : this.path.closestPoint(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPointLength(e) {
    return this.path == null ? null : this.path.closestPointLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPointRatio(e) {
    return this.path == null ? null : this.path.closestPointNormalizedLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getLabelPosition(e, t, r, i) {
    const o = { distance: 0 };
    let s = 0, a;
    typeof r == "number" ? (s = r, a = i) : a = r, a != null && (o.options = a);
    const l = a && a.absoluteOffset, u = !(a && a.absoluteDistance), c = a && a.absoluteDistance && a.reverseDistance, h = this.path, f = {
      segmentSubdivisions: this.getConnectionSubdivisions()
    }, d = new W(e, t), p = h.closestPointT(d, f), g = this.getConnectionLength() || 0;
    let v = h.lengthAtT(p, f);
    u && (v = g > 0 ? v / g : 0), c && (v = -1 * (g - v) || 1), o.distance = v;
    let m;
    l || (m = h.tangentAtT(p));
    let y;
    if (m)
      y = m.pointOffset(d);
    else {
      const b = h.pointAtT(p), O = d.diff(b);
      y = { x: O.x, y: O.y };
    }
    return o.offset = y, o.angle = s, o;
  }
  normalizeLabelPosition(e) {
    return typeof e == "number" ? { distance: e } : e;
  }
  getLabelTransformationMatrix(e) {
    const t = this.normalizeLabelPosition(e), r = t.options || {}, i = t.angle || 0, o = t.distance, s = o > 0 && o <= 1;
    let a = 0;
    const l = { x: 0, y: 0 }, u = t.offset;
    u && (typeof u == "number" ? a = u : (u.x != null && (l.x = u.x), u.y != null && (l.y = u.y)));
    const c = l.x !== 0 || l.y !== 0 || a === 0, h = r.keepGradient, f = r.ensureLegibility, d = this.path, p = { segmentSubdivisions: this.getConnectionSubdivisions() }, g = s ? o * this.getConnectionLength() : o, v = d.tangentAtLength(g, p);
    let m, y = i;
    if (v) {
      if (c)
        m = v.start, m.translate(l);
      else {
        const b = v.clone();
        b.rotate(-90, v.start), b.setLength(a), m = b.end;
      }
      h && (y = v.angle() + i, f && (y = Wt.normalize((y + 90) % 180 - 90)));
    } else
      m = d.start, c && m.translate(l);
    return Qr().translate(m.x, m.y).rotate(y);
  }
  getVertexIndex(e, t) {
    const i = this.cell.getVertices(), o = this.getClosestPointLength(new W(e, t));
    let s = 0;
    if (o != null)
      for (const a = i.length; s < a; s += 1) {
        const l = i[s], u = this.getClosestPointLength(l);
        if (u != null && o < u)
          break;
      }
    return s;
  }
  getEventArgs(e, t, r) {
    const i = this, o = i.cell, s = o;
    return t == null || r == null ? { e, view: i, edge: o, cell: s } : { e, x: t, y: r, view: i, edge: o, cell: s };
  }
  notifyUnhandledMouseDown(e, t, r) {
    this.notify("edge:unhandled:mousedown", {
      e,
      x: t,
      y: r,
      view: this,
      cell: this.cell,
      edge: this.cell
    });
  }
  notifyMouseDown(e, t, r) {
    super.onMouseDown(e, t, r), this.notify("edge:mousedown", this.getEventArgs(e, t, r));
  }
  notifyMouseMove(e, t, r) {
    super.onMouseMove(e, t, r), this.notify("edge:mousemove", this.getEventArgs(e, t, r));
  }
  notifyMouseUp(e, t, r) {
    super.onMouseUp(e, t, r), this.notify("edge:mouseup", this.getEventArgs(e, t, r));
  }
  onClick(e, t, r) {
    super.onClick(e, t, r), this.notify("edge:click", this.getEventArgs(e, t, r));
  }
  onDblClick(e, t, r) {
    super.onDblClick(e, t, r), this.notify("edge:dblclick", this.getEventArgs(e, t, r));
  }
  onContextMenu(e, t, r) {
    super.onContextMenu(e, t, r), this.notify("edge:contextmenu", this.getEventArgs(e, t, r));
  }
  onMouseDown(e, t, r) {
    this.notifyMouseDown(e, t, r), this.startEdgeDragging(e, t, r);
  }
  onMouseMove(e, t, r) {
    const i = this.getEventData(e);
    switch (i.action) {
      case "drag-label": {
        this.dragLabel(e, t, r);
        break;
      }
      case "drag-arrowhead": {
        this.dragArrowhead(e, t, r);
        break;
      }
      case "drag-edge": {
        this.dragEdge(e, t, r);
        break;
      }
    }
    return this.notifyMouseMove(e, t, r), i;
  }
  onMouseUp(e, t, r) {
    const i = this.getEventData(e);
    switch (i.action) {
      case "drag-label": {
        this.stopLabelDragging(e, t, r);
        break;
      }
      case "drag-arrowhead": {
        this.stopArrowheadDragging(e, t, r);
        break;
      }
      case "drag-edge": {
        this.stopEdgeDragging(e, t, r);
        break;
      }
    }
    return this.notifyMouseUp(e, t, r), this.checkMouseleave(e), i;
  }
  onMouseOver(e) {
    super.onMouseOver(e), this.notify("edge:mouseover", this.getEventArgs(e));
  }
  onMouseOut(e) {
    super.onMouseOut(e), this.notify("edge:mouseout", this.getEventArgs(e));
  }
  onMouseEnter(e) {
    super.onMouseEnter(e), this.notify("edge:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    super.onMouseLeave(e), this.notify("edge:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, r, i) {
    super.onMouseWheel(e, t, r, i), this.notify("edge:mousewheel", Object.assign({ delta: i }, this.getEventArgs(e, t, r)));
  }
  onCustomEvent(e, t, r, i) {
    if (hH(e.target, "edge-tool", this.container)) {
      if (e.stopPropagation(), this.can("useEdgeTools")) {
        if (t === "edge:remove") {
          this.cell.remove({ ui: !0 });
          return;
        }
        this.notify("edge:customevent", Object.assign({ name: t }, this.getEventArgs(e, r, i)));
      }
      this.notifyMouseDown(e, r, i);
    } else
      this.notify("edge:customevent", Object.assign({ name: t }, this.getEventArgs(e, r, i))), super.onCustomEvent(e, t, r, i);
  }
  onLabelMouseDown(e, t, r) {
    this.notifyMouseDown(e, t, r), this.startLabelDragging(e, t, r), this.getEventData(e).stopPropagation && e.stopPropagation();
  }
  // #region drag edge
  startEdgeDragging(e, t, r) {
    if (!this.can("edgeMovable")) {
      this.notifyUnhandledMouseDown(e, t, r);
      return;
    }
    this.setEventData(e, {
      x: t,
      y: r,
      moving: !1,
      action: "drag-edge"
    });
  }
  dragEdge(e, t, r) {
    const i = this.getEventData(e);
    i.moving || (i.moving = !0, this.addClass("edge-moving"), this.notify("edge:move", {
      e,
      x: t,
      y: r,
      view: this,
      cell: this.cell,
      edge: this.cell
    })), this.cell.translate(t - i.x, r - i.y, { ui: !0 }), this.setEventData(e, { x: t, y: r }), this.notify("edge:moving", {
      e,
      x: t,
      y: r,
      view: this,
      cell: this.cell,
      edge: this.cell
    });
  }
  stopEdgeDragging(e, t, r) {
    const i = this.getEventData(e);
    i.moving && (this.removeClass("edge-moving"), this.notify("edge:moved", {
      e,
      x: t,
      y: r,
      view: this,
      cell: this.cell,
      edge: this.cell
    })), i.moving = !1;
  }
  // #endregion
  // #region drag arrowhead
  prepareArrowheadDragging(e, t) {
    const r = this.getTerminalMagnet(e), i = {
      action: "drag-arrowhead",
      x: t.x,
      y: t.y,
      isNewEdge: t.isNewEdge === !0,
      terminalType: e,
      initialMagnet: r,
      initialTerminal: My(this.cell[e]),
      fallbackAction: t.fallbackAction || "revert",
      getValidateConnectionArgs: this.createValidateConnectionArgs(e),
      options: t.options
    };
    return this.beforeArrowheadDragging(i), i;
  }
  createValidateConnectionArgs(e) {
    const t = [];
    t[4] = e, t[5] = this;
    let r, i = 0, o = 0;
    e === "source" ? (i = 2, r = "target") : (o = 2, r = "source");
    const s = this.cell[r], a = s.cell;
    if (a) {
      let l;
      const u = t[i] = this.graph.findViewByCell(a);
      u && (l = u.getMagnetFromEdgeTerminal(s), l === u.container && (l = void 0)), t[i + 1] = l;
    }
    return (l, u) => (t[o] = l, t[o + 1] = l.container === u ? void 0 : u, t);
  }
  beforeArrowheadDragging(e) {
    e.zIndex = this.cell.zIndex, this.cell.toFront();
    const t = this.container.style;
    e.pointerEvents = t.pointerEvents, t.pointerEvents = "none", this.graph.options.connecting.highlight && this.highlightAvailableMagnets(e);
  }
  afterArrowheadDragging(e) {
    e.zIndex != null && (this.cell.setZIndex(e.zIndex, { ui: !0 }), e.zIndex = null);
    const t = this.container;
    t.style.pointerEvents = e.pointerEvents || "", this.graph.options.connecting.highlight && this.unhighlightAvailableMagnets(e);
  }
  validateConnection(e, t, r, i, o, s, a) {
    const l = this.graph.options.connecting, u = l.allowLoop, c = l.allowNode, h = l.allowEdge, f = l.allowPort, d = l.allowMulti, p = l.validateConnection, g = s ? s.cell : null, v = o === "target" ? r : e, m = o === "target" ? i : t;
    let y = !0;
    const b = (O) => {
      const w = o === "source" ? a ? a.port : null : g ? g.getSourcePortId() : null, x = o === "target" ? a ? a.port : null : g ? g.getTargetPortId() : null;
      return Ue(O, this.graph, {
        edge: g,
        edgeView: s,
        sourceView: e,
        targetView: r,
        sourcePort: w,
        targetPort: x,
        sourceMagnet: t,
        targetMagnet: i,
        sourceCell: e ? e.cell : null,
        targetCell: r ? r.cell : null,
        type: o
      });
    };
    if (u != null && (typeof u == "boolean" ? !u && e === r && (y = !1) : y = b(u)), y && f != null && (typeof f == "boolean" ? !f && m && (y = !1) : y = b(f)), y && h != null && (typeof h == "boolean" ? !h && Jl.isEdgeView(v) && (y = !1) : y = b(h)), y && c != null && m == null && (typeof c == "boolean" ? !c && Zo.isNodeView(v) && (y = !1) : y = b(c)), y && d != null && s) {
      const O = s.cell, w = o === "source" ? a : O.getSource(), x = o === "target" ? a : O.getTarget(), S = a ? this.graph.getCellById(a.cell) : null;
      if (w && x && w.cell && x.cell && S)
        if (typeof d == "function")
          y = b(d);
        else {
          const _ = this.graph.model.getConnectedEdges(S, {
            outgoing: o === "source",
            incoming: o === "target"
          });
          _.length && (d === "withPort" ? _.some((A) => {
            const T = A.getSource(), k = A.getTarget();
            return T && k && T.cell === w.cell && k.cell === x.cell && T.port != null && T.port === w.port && k.port != null && k.port === x.port;
          }) && (y = !1) : d || _.some((A) => {
            const T = A.getSource(), k = A.getTarget();
            return T && k && T.cell === w.cell && k.cell === x.cell;
          }) && (y = !1));
        }
    }
    return y && p != null && (y = b(p)), y;
  }
  allowConnectToBlank(e) {
    const t = this.graph, i = t.options.connecting.allowBlank;
    if (typeof i != "function")
      return !!i;
    const o = t.findViewByCell(e), s = e.getSourceCell(), a = e.getTargetCell(), l = t.findViewByCell(s), u = t.findViewByCell(a);
    return Ue(i, t, {
      edge: e,
      edgeView: o,
      sourceCell: s,
      targetCell: a,
      sourceView: l,
      targetView: u,
      sourcePort: e.getSourcePortId(),
      targetPort: e.getTargetPortId(),
      sourceMagnet: o.sourceMagnet,
      targetMagnet: o.targetMagnet
    });
  }
  validateEdge(e, t, r) {
    const i = this.graph;
    if (!this.allowConnectToBlank(e)) {
      const s = e.getSourceCellId(), a = e.getTargetCellId();
      if (!(s && a))
        return !1;
    }
    const o = i.options.connecting.validateEdge;
    return o ? Ue(o, i, {
      edge: e,
      type: t,
      previous: r
    }) : !0;
  }
  arrowheadDragging(e, t, r, i) {
    i.x = t, i.y = r, i.currentTarget !== e && (i.currentMagnet && i.currentView && i.currentView.unhighlight(i.currentMagnet, {
      type: "magnetAdsorbed"
    }), i.currentView = this.graph.findViewByElem(e), i.currentView ? (i.currentMagnet = i.currentView.findMagnet(e), i.currentMagnet && this.validateConnection(...i.getValidateConnectionArgs(i.currentView, i.currentMagnet), i.currentView.getEdgeTerminal(i.currentMagnet, t, r, this.cell, i.terminalType)) ? i.currentView.highlight(i.currentMagnet, {
      type: "magnetAdsorbed"
    }) : i.currentMagnet = null) : i.currentMagnet = null), i.currentTarget = e, this.cell.prop(i.terminalType, { x: t, y: r }, Object.assign(Object.assign({}, i.options), { ui: !0 }));
  }
  arrowheadDragged(e, t, r) {
    const i = e.currentView, o = e.currentMagnet;
    if (!o || !i)
      return;
    i.unhighlight(o, { type: "magnetAdsorbed" });
    const s = e.terminalType, a = i.getEdgeTerminal(o, t, r, this.cell, s);
    this.cell.setTerminal(s, a, { ui: !0 });
  }
  snapArrowhead(e, t, r) {
    const i = this.graph, { snap: o, allowEdge: s } = i.options.connecting, a = typeof o == "object" && o.radius || 50, l = typeof o == "object" && o.anchor || "center", u = i.renderer.findViewsInArea({
      x: e - a,
      y: t - a,
      width: 2 * a,
      height: 2 * a
    }, { nodeOnly: !0 });
    if (s) {
      const O = i.renderer.findEdgeViewsFromPoint({ x: e, y: t }, a).filter((w) => w !== this);
      u.push(...O);
    }
    const c = r.closestView || null, h = r.closestMagnet || null;
    r.closestView = null, r.closestMagnet = null;
    let f, d = Number.MAX_SAFE_INTEGER;
    const p = new W(e, t);
    u.forEach((O) => {
      if (O.container.getAttribute("magnet") !== "false") {
        if (O.isNodeView())
          f = l === "center" ? O.cell.getBBox().getCenter().distance(p) : O.cell.getBBox().getNearestPointToPoint(p).distance(p);
        else if (O.isEdgeView()) {
          const w = O.getClosestPoint(p);
          w ? f = w.distance(p) : f = Number.MAX_SAFE_INTEGER;
        }
        f < a && f < d && (h === O.container || this.validateConnection(...r.getValidateConnectionArgs(O, null), O.getEdgeTerminal(O.container, e, t, this.cell, r.terminalType))) && (d = f, r.closestView = O, r.closestMagnet = O.container);
      }
      O.container.querySelectorAll("[magnet]").forEach((w) => {
        if (w.getAttribute("magnet") !== "false") {
          const x = O.getBBoxOfElement(w);
          f = p.distance(x.getCenter()), f < a && f < d && (h === w || this.validateConnection(...r.getValidateConnectionArgs(O, w), O.getEdgeTerminal(w, e, t, this.cell, r.terminalType))) && (d = f, r.closestView = O, r.closestMagnet = w);
        }
      });
    });
    let g;
    const v = r.terminalType, m = r.closestView, y = r.closestMagnet, b = h !== y;
    if (c && b && c.unhighlight(h, {
      type: "magnetAdsorbed"
    }), m) {
      if (!b)
        return;
      m.highlight(y, {
        type: "magnetAdsorbed"
      }), g = m.getEdgeTerminal(y, e, t, this.cell, v);
    } else
      g = { x: e, y: t };
    this.cell.setTerminal(v, g, {}, Object.assign(Object.assign({}, r.options), { ui: !0 }));
  }
  snapArrowheadEnd(e) {
    const t = e.closestView, r = e.closestMagnet;
    t && r && (t.unhighlight(r, {
      type: "magnetAdsorbed"
    }), e.currentMagnet = t.findMagnet(r)), e.closestView = null, e.closestMagnet = null;
  }
  finishEmbedding(e) {
    this.graph.options.embedding.enabled && this.cell.updateParent() && (e.zIndex = null);
  }
  fallbackConnection(e) {
    switch (e.fallbackAction) {
      case "remove":
        this.cell.remove({ ui: !0 });
        break;
      case "revert":
      default:
        this.cell.prop(e.terminalType, e.initialTerminal, {
          ui: !0
        });
        break;
    }
  }
  notifyConnectionEvent(e, t) {
    const r = e.terminalType, i = e.initialTerminal, o = this.cell[r];
    if (o && !Yn.equalTerminals(i, o)) {
      const a = this.graph, l = i, u = l.cell ? a.getCellById(l.cell) : null, c = l.port, h = u ? a.findViewByCell(u) : null, f = u || e.isNewEdge ? null : W.create(i).toJSON(), d = o, p = d.cell ? a.getCellById(d.cell) : null, g = d.port, v = p ? a.findViewByCell(p) : null, m = p ? null : W.create(o).toJSON();
      this.notify("edge:connected", {
        e: t,
        previousCell: u,
        previousPort: c,
        previousView: h,
        previousPoint: f,
        currentCell: p,
        currentView: v,
        currentPort: g,
        currentPoint: m,
        previousMagnet: e.initialMagnet,
        currentMagnet: e.currentMagnet,
        edge: this.cell,
        view: this,
        type: r,
        isNew: e.isNewEdge
      });
    }
  }
  highlightAvailableMagnets(e) {
    const t = this.graph, r = t.model.getCells();
    e.marked = {};
    for (let i = 0, o = r.length; i < o; i += 1) {
      const s = t.findViewByCell(r[i]);
      if (!s || s.cell.id === this.cell.id)
        continue;
      const a = Array.prototype.slice.call(s.container.querySelectorAll("[magnet]"));
      s.container.getAttribute("magnet") !== "false" && a.push(s.container);
      const l = a.filter((u) => this.validateConnection(...e.getValidateConnectionArgs(s, u), s.getEdgeTerminal(u, e.x, e.y, this.cell, e.terminalType)));
      if (l.length > 0) {
        for (let u = 0, c = l.length; u < c; u += 1)
          s.highlight(l[u], { type: "magnetAvailable" });
        s.highlight(null, { type: "nodeAvailable" }), e.marked[s.cell.id] = l;
      }
    }
  }
  unhighlightAvailableMagnets(e) {
    const t = e.marked || {};
    Object.keys(t).forEach((r) => {
      const i = this.graph.findViewByCell(r);
      i && (t[r].forEach((s) => {
        i.unhighlight(s, { type: "magnetAvailable" });
      }), i.unhighlight(null, { type: "nodeAvailable" }));
    }), e.marked = null;
  }
  startArrowheadDragging(e, t, r) {
    if (!this.can("arrowheadMovable")) {
      this.notifyUnhandledMouseDown(e, t, r);
      return;
    }
    const o = e.target.getAttribute("data-terminal"), s = this.prepareArrowheadDragging(o, { x: t, y: r });
    this.setEventData(e, s);
  }
  dragArrowhead(e, t, r) {
    const i = this.getEventData(e);
    this.graph.options.connecting.snap ? this.snapArrowhead(t, r, i) : this.arrowheadDragging(this.getEventTarget(e), t, r, i);
  }
  stopArrowheadDragging(e, t, r) {
    const i = this.graph, o = this.getEventData(e);
    i.options.connecting.snap ? this.snapArrowheadEnd(o) : this.arrowheadDragged(o, t, r), this.validateEdge(this.cell, o.terminalType, o.initialTerminal) ? (this.finishEmbedding(o), this.notifyConnectionEvent(o, e)) : this.fallbackConnection(o), this.afterArrowheadDragging(o);
  }
  // #endregion
  // #region drag lable
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  startLabelDragging(e, t, r) {
    if (this.can("edgeLabelMovable")) {
      const i = e.currentTarget, o = parseInt(i.getAttribute("data-index"), 10), s = this.getLabelPositionAngle(o), a = this.getLabelPositionArgs(o), l = this.getDefaultLabelPositionArgs(), u = this.mergeLabelPositionArgs(a, l);
      this.setEventData(e, {
        index: o,
        positionAngle: s,
        positionArgs: u,
        stopPropagation: !0,
        action: "drag-label"
      });
    } else
      this.setEventData(e, { stopPropagation: !0 });
    this.graph.view.delegateDragEvents(e, this);
  }
  dragLabel(e, t, r) {
    const i = this.getEventData(e), o = this.cell.getLabelAt(i.index), s = jn({}, o, {
      position: this.getLabelPosition(t, r, i.positionAngle, i.positionArgs)
    });
    this.cell.setLabelAt(i.index, s);
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  stopLabelDragging(e, t, r) {
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag], i = t;
    return (r == null || r === n.toStringTag) && typeof i.isNodeView == "function" && typeof i.isEdgeView == "function" && typeof i.confirmUpdate == "function" && typeof i.update == "function" && typeof i.getConnection == "function";
  }
  n.isEdgeView = e;
})(Jl || (Jl = {}));
Jl.config({
  isSvgElement: !0,
  priority: 1,
  bootstrap: ["render", "source", "target"],
  actions: {
    view: ["render"],
    markup: ["render"],
    attrs: ["update"],
    source: ["source", "update"],
    target: ["target", "update"],
    router: ["update"],
    connector: ["update"],
    labels: ["labels"],
    defaultLabel: ["labels"],
    tools: ["tools"],
    vertices: ["vertices", "update"]
  }
});
Jl.registry.register("edge", Jl, !0);
var _Te = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let jf = class pE extends xn {
  /** Graph's `this.container` is from outer, should not dispose */
  get disposeContainer() {
    return !1;
  }
  get options() {
    return this.graph.options;
  }
  constructor(e) {
    super(), this.graph = e;
    const { selectors: t, fragment: r } = On.parseJSONMarkup(pE.markup);
    this.background = t.background, this.grid = t.grid, this.svg = t.svg, this.defs = t.defs, this.viewport = t.viewport, this.primer = t.primer, this.stage = t.stage, this.decorator = t.decorator, this.overlay = t.overlay, this.container = this.options.container, this.restore = pE.snapshoot(this.container), rt(this.container, this.prefixClassName("graph")), Kc(this.container, r), this.delegateEvents();
  }
  delegateEvents() {
    const e = this.constructor;
    return super.delegateEvents(e.events), this;
  }
  /**
   * Guard the specified event. If the event is not interesting, it
   * returns `true`, otherwise returns `false`.
   */
  guard(e, t) {
    return e.type === "mousedown" && e.button === 2 || this.options.guard && this.options.guard(e, t) ? !0 : e.data && e.data.guarded !== void 0 ? e.data.guarded : !(t && t.cell && Mt.isCell(t.cell) || this.svg === e.target || this.container === e.target || this.svg.contains(e.target));
  }
  findView(e) {
    return this.graph.findViewByElem(e);
  }
  onDblClick(e) {
    this.options.preventDefaultDblClick && e.preventDefault();
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.guard(t, r))
      return;
    const i = this.graph.snapToGrid(t.clientX, t.clientY);
    r ? r.onDblClick(t, i.x, i.y) : this.graph.trigger("blank:dblclick", {
      e: t,
      x: i.x,
      y: i.y
    });
  }
  onClick(e) {
    if (this.getMouseMovedCount(e) <= this.options.clickThreshold) {
      const t = this.normalizeEvent(e), r = this.findView(t.target);
      if (this.guard(t, r))
        return;
      const i = this.graph.snapToGrid(t.clientX, t.clientY);
      r ? r.onClick(t, i.x, i.y) : this.graph.trigger("blank:click", {
        e: t,
        x: i.x,
        y: i.y
      });
    }
  }
  isPreventDefaultContextMenu(e) {
    let t = this.options.preventDefaultContextMenu;
    return typeof t == "function" && (t = Ue(t, this.graph, { view: e })), t;
  }
  onContextMenu(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.isPreventDefaultContextMenu(r) && e.preventDefault(), this.guard(t, r))
      return;
    const i = this.graph.snapToGrid(t.clientX, t.clientY);
    r ? r.onContextMenu(t, i.x, i.y) : this.graph.trigger("blank:contextmenu", {
      e: t,
      x: i.x,
      y: i.y
    });
  }
  delegateDragEvents(e, t) {
    e.data == null && (e.data = {}), this.setEventData(e, {
      currentView: t || null,
      mouseMovedCount: 0,
      startPosition: {
        x: e.clientX,
        y: e.clientY
      }
    });
    const r = this.constructor;
    this.delegateDocumentEvents(r.documentEvents, e.data), this.undelegateEvents();
  }
  getMouseMovedCount(e) {
    return this.getEventData(e).mouseMovedCount || 0;
  }
  onMouseDown(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.guard(t, r))
      return;
    this.options.preventDefaultMouseDown && e.preventDefault();
    const i = this.graph.snapToGrid(t.clientX, t.clientY);
    r ? r.onMouseDown(t, i.x, i.y) : (this.options.preventDefaultBlankAction && ["touchstart"].includes(t.type) && e.preventDefault(), this.graph.trigger("blank:mousedown", {
      e: t,
      x: i.x,
      y: i.y
    })), this.delegateDragEvents(t, r);
  }
  onMouseMove(e) {
    const t = this.getEventData(e), r = t.startPosition;
    if (r && r.x === e.clientX && r.y === e.clientY || (t.mouseMovedCount == null && (t.mouseMovedCount = 0), t.mouseMovedCount += 1, t.mouseMovedCount <= this.options.moveThreshold))
      return;
    const o = this.normalizeEvent(e), s = this.graph.snapToGrid(o.clientX, o.clientY), a = t.currentView;
    a ? a.onMouseMove(o, s.x, s.y) : this.graph.trigger("blank:mousemove", {
      e: o,
      x: s.x,
      y: s.y
    }), this.setEventData(o, t);
  }
  onMouseUp(e) {
    this.undelegateDocumentEvents();
    const t = this.normalizeEvent(e), r = this.graph.snapToGrid(t.clientX, t.clientY), o = this.getEventData(e).currentView;
    if (o ? o.onMouseUp(t, r.x, r.y) : this.graph.trigger("blank:mouseup", {
      e: t,
      x: r.x,
      y: r.y
    }), !e.isPropagationStopped()) {
      const s = new el(e, {
        type: "click",
        data: e.data
      });
      this.onClick(s);
    }
    e.stopImmediatePropagation(), this.delegateEvents();
  }
  onMouseOver(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (!this.guard(t, r))
      if (r)
        r.onMouseOver(t);
      else {
        if (this.container === t.target)
          return;
        this.graph.trigger("blank:mouseover", { e: t });
      }
  }
  onMouseOut(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (!this.guard(t, r))
      if (r)
        r.onMouseOut(t);
      else {
        if (this.container === t.target)
          return;
        this.graph.trigger("blank:mouseout", { e: t });
      }
  }
  onMouseEnter(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.guard(t, r))
      return;
    const i = this.graph.findViewByElem(t.relatedTarget);
    if (r) {
      if (i === r)
        return;
      r.onMouseEnter(t);
    } else {
      if (i)
        return;
      this.graph.trigger("graph:mouseenter", { e: t });
    }
  }
  onMouseLeave(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.guard(t, r))
      return;
    const i = this.graph.findViewByElem(t.relatedTarget);
    if (r) {
      if (i === r)
        return;
      r.onMouseLeave(t);
    } else {
      if (i)
        return;
      this.graph.trigger("graph:mouseleave", { e: t });
    }
  }
  onMouseWheel(e) {
    const t = this.normalizeEvent(e), r = this.findView(t.target);
    if (this.guard(t, r))
      return;
    const i = t.originalEvent, o = this.graph.snapToGrid(i.clientX, i.clientY), s = Math.max(-1, Math.min(1, i.wheelDelta || -i.detail));
    r ? r.onMouseWheel(t, o.x, o.y, s) : this.graph.trigger("blank:mousewheel", {
      e: t,
      delta: s,
      x: o.x,
      y: o.y
    });
  }
  onCustomEvent(e) {
    const t = e.currentTarget, r = t.getAttribute("event") || t.getAttribute("data-event");
    if (r) {
      const i = this.findView(t);
      if (i) {
        const o = this.normalizeEvent(e);
        if (this.guard(o, i))
          return;
        const s = this.graph.snapToGrid(o.clientX, o.clientY);
        i.onCustomEvent(o, r, s.x, s.y);
      }
    }
  }
  handleMagnetEvent(e, t) {
    const r = e.currentTarget, i = r.getAttribute("magnet");
    if (i && i.toLowerCase() !== "false") {
      const o = this.findView(r);
      if (o) {
        const s = this.normalizeEvent(e);
        if (this.guard(s, o))
          return;
        const a = this.graph.snapToGrid(s.clientX, s.clientY);
        Ue(t, this.graph, o, s, r, a.x, a.y);
      }
    }
  }
  onMagnetMouseDown(e) {
    this.handleMagnetEvent(e, (t, r, i, o, s) => {
      t.onMagnetMouseDown(r, i, o, s);
    });
  }
  onMagnetDblClick(e) {
    this.handleMagnetEvent(e, (t, r, i, o, s) => {
      t.onMagnetDblClick(r, i, o, s);
    });
  }
  onMagnetContextMenu(e) {
    const t = this.findView(e.target);
    this.isPreventDefaultContextMenu(t) && e.preventDefault(), this.handleMagnetEvent(e, (r, i, o, s, a) => {
      r.onMagnetContextMenu(i, o, s, a);
    });
  }
  onLabelMouseDown(e) {
    const t = e.currentTarget, r = this.findView(t);
    if (r) {
      const i = this.normalizeEvent(e);
      if (this.guard(i, r))
        return;
      const o = this.graph.snapToGrid(i.clientX, i.clientY);
      r.onLabelMouseDown(i, o.x, o.y);
    }
  }
  onImageDragStart() {
    return !1;
  }
  dispose() {
    this.undelegateEvents(), this.undelegateDocumentEvents(), this.restore(), this.restore = () => {
    };
  }
};
_Te([
  xn.dispose()
], jf.prototype, "dispose", null);
(function(n) {
  const e = `${_s.prefixCls}-graph`;
  n.markup = [
    {
      ns: Br.xhtml,
      tagName: "div",
      selector: "background",
      className: `${e}-background`
    },
    {
      ns: Br.xhtml,
      tagName: "div",
      selector: "grid",
      className: `${e}-grid`
    },
    {
      ns: Br.svg,
      tagName: "svg",
      selector: "svg",
      className: `${e}-svg`,
      attrs: {
        width: "100%",
        height: "100%",
        "xmlns:xlink": Br.xlink
      },
      children: [
        {
          tagName: "defs",
          selector: "defs"
        },
        {
          tagName: "g",
          selector: "viewport",
          className: `${e}-svg-viewport`,
          children: [
            {
              tagName: "g",
              selector: "primer",
              className: `${e}-svg-primer`
            },
            {
              tagName: "g",
              selector: "stage",
              className: `${e}-svg-stage`
            },
            {
              tagName: "g",
              selector: "decorator",
              className: `${e}-svg-decorator`
            },
            {
              tagName: "g",
              selector: "overlay",
              className: `${e}-svg-overlay`
            }
          ]
        }
      ]
    }
  ];
  function t(r) {
    const i = r.cloneNode();
    return r.childNodes.forEach((o) => i.appendChild(o)), () => {
      for (lb(r); r.attributes.length > 0; )
        r.removeAttribute(r.attributes[0].name);
      for (let o = 0, s = i.attributes.length; o < s; o += 1) {
        const a = i.attributes[o];
        r.setAttribute(a.name, a.value);
      }
      i.childNodes.forEach((o) => r.appendChild(o));
    };
  }
  n.snapshoot = t;
})(jf || (jf = {}));
(function(n) {
  const e = _s.prefixCls;
  n.events = {
    dblclick: "onDblClick",
    contextmenu: "onContextMenu",
    touchstart: "onMouseDown",
    mousedown: "onMouseDown",
    mouseover: "onMouseOver",
    mouseout: "onMouseOut",
    mouseenter: "onMouseEnter",
    mouseleave: "onMouseLeave",
    mousewheel: "onMouseWheel",
    DOMMouseScroll: "onMouseWheel",
    [`mouseenter  .${e}-cell`]: "onMouseEnter",
    [`mouseleave  .${e}-cell`]: "onMouseLeave",
    [`mouseenter  .${e}-cell-tools`]: "onMouseEnter",
    [`mouseleave  .${e}-cell-tools`]: "onMouseLeave",
    [`mousedown   .${e}-cell [event]`]: "onCustomEvent",
    [`touchstart  .${e}-cell [event]`]: "onCustomEvent",
    [`mousedown   .${e}-cell [data-event]`]: "onCustomEvent",
    [`touchstart  .${e}-cell [data-event]`]: "onCustomEvent",
    [`dblclick    .${e}-cell [magnet]`]: "onMagnetDblClick",
    [`contextmenu .${e}-cell [magnet]`]: "onMagnetContextMenu",
    [`mousedown   .${e}-cell [magnet]`]: "onMagnetMouseDown",
    [`touchstart  .${e}-cell [magnet]`]: "onMagnetMouseDown",
    [`dblclick    .${e}-cell [data-magnet]`]: "onMagnetDblClick",
    [`contextmenu .${e}-cell [data-magnet]`]: "onMagnetContextMenu",
    [`mousedown   .${e}-cell [data-magnet]`]: "onMagnetMouseDown",
    [`touchstart  .${e}-cell [data-magnet]`]: "onMagnetMouseDown",
    [`dragstart   .${e}-cell image`]: "onImageDragStart",
    [`mousedown   .${e}-edge .${e}-edge-label`]: "onLabelMouseDown",
    [`touchstart  .${e}-edge .${e}-edge-label`]: "onLabelMouseDown"
  }, n.documentEvents = {
    mousemove: "onMouseMove",
    touchmove: "onMouseMove",
    mouseup: "onMouseUp",
    touchend: "onMouseUp",
    touchcancel: "onMouseUp"
  };
})(jf || (jf = {}));
const CTe = `.x6-graph {
  position: relative;
  overflow: hidden;
  outline: none;
  touch-action: none;
}
.x6-graph-background,
.x6-graph-grid,
.x6-graph-svg {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.x6-graph-background-stage,
.x6-graph-grid-stage,
.x6-graph-svg-stage {
  user-select: none;
}
.x6-graph.x6-graph-pannable {
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}
.x6-graph.x6-graph-panning {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
  user-select: none;
}
.x6-node {
  cursor: move;
  /* stylelint-disable-next-line */
}
.x6-node.x6-node-immovable {
  cursor: default;
}
.x6-node * {
  -webkit-user-drag: none;
}
.x6-node .scalable * {
  vector-effect: non-scaling-stroke;
}
.x6-node [magnet='true'] {
  cursor: crosshair;
  transition: opacity 0.3s;
}
.x6-node [magnet='true']:hover {
  opacity: 0.7;
}
.x6-node foreignObject {
  display: block;
  overflow: visible;
  background-color: transparent;
}
.x6-node foreignObject > body {
  position: static;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: visible;
  background-color: transparent;
}
.x6-edge .source-marker,
.x6-edge .target-marker {
  vector-effect: non-scaling-stroke;
}
.x6-edge .connection {
  stroke-linejoin: round;
  fill: none;
}
.x6-edge .connection-wrap {
  cursor: move;
  opacity: 0;
  fill: none;
  stroke: #000;
  stroke-width: 15;
  stroke-linecap: round;
  stroke-linejoin: round;
}
.x6-edge .connection-wrap:hover {
  opacity: 0.4;
  stroke-opacity: 0.4;
}
.x6-edge .vertices {
  cursor: move;
  opacity: 0;
}
.x6-edge .vertices .vertex {
  fill: #1abc9c;
}
.x6-edge .vertices .vertex :hover {
  fill: #34495e;
  stroke: none;
}
.x6-edge .vertices .vertex-remove {
  cursor: pointer;
  fill: #fff;
}
.x6-edge .vertices .vertex-remove-area {
  cursor: pointer;
  opacity: 0.1;
}
.x6-edge .vertices .vertex-group:hover .vertex-remove-area {
  opacity: 1;
}
.x6-edge .arrowheads {
  cursor: move;
  opacity: 0;
}
.x6-edge .arrowheads .arrowhead {
  fill: #1abc9c;
}
.x6-edge .arrowheads .arrowhead :hover {
  fill: #f39c12;
  stroke: none;
}
.x6-edge .tools {
  cursor: pointer;
  opacity: 0;
}
.x6-edge .tools .tool-options {
  display: none;
}
.x6-edge .tools .tool-remove circle {
  fill: #f00;
}
.x6-edge .tools .tool-remove path {
  fill: #fff;
}
.x6-edge:hover .vertices,
.x6-edge:hover .arrowheads,
.x6-edge:hover .tools {
  opacity: 1;
}
.x6-highlight-opacity {
  opacity: 0.3;
}
.x6-cell-tool-editor {
  position: relative;
  display: inline-block;
  min-height: 1em;
  margin: 0;
  padding: 0;
  line-height: 1;
  white-space: normal;
  text-align: center;
  vertical-align: top;
  overflow-wrap: normal;
  outline: none;
  transform-origin: 0 0;
  -webkit-user-drag: none;
}
.x6-edge-tool-editor {
  border: 1px solid #275fc5;
  border-radius: 2px;
}
`;
class Zr extends Ul {
  get options() {
    return this.graph.options;
  }
  get model() {
    return this.graph.model;
  }
  get view() {
    return this.graph.view;
  }
  constructor(e) {
    super(), this.graph = e, this.init();
  }
  init() {
  }
}
var ATe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class gE extends Zr {
  init() {
    a_("core", CTe);
  }
  dispose() {
    l_("core");
  }
}
ATe([
  gE.dispose()
], gE.prototype, "dispose", null);
var TTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
}, qy;
(function(n) {
  function e(t) {
    const { grid: r, panning: i, mousewheel: o, embedding: s } = t, a = TTe(
      t,
      ["grid", "panning", "mousewheel", "embedding"]
    ), l = t.container;
    if (l != null)
      a.width == null && (a.width = l.clientWidth), a.height == null && (a.height = l.clientHeight);
    else
      throw new Error("Ensure the container of the graph is specified and valid");
    const u = jn({}, n.defaults, a), c = { size: 10, visible: !1 };
    return typeof r == "number" ? u.grid = { size: r, visible: !1 } : typeof r == "boolean" ? u.grid = Object.assign(Object.assign({}, c), { visible: r }) : u.grid = Object.assign(Object.assign({}, c), r), [
      "panning",
      "mousewheel",
      "embedding"
    ].forEach((f) => {
      const d = t[f];
      typeof d == "boolean" ? u[f].enabled = d : u[f] = Object.assign(Object.assign({}, u[f]), d);
    }), u;
  }
  n.get = e;
})(qy || (qy = {}));
(function(n) {
  n.defaults = {
    x: 0,
    y: 0,
    scaling: {
      min: 0.01,
      max: 16
    },
    grid: {
      size: 10,
      visible: !1
    },
    background: !1,
    panning: {
      enabled: !1,
      eventTypes: ["leftMouseDown"]
    },
    mousewheel: {
      enabled: !1,
      factor: 1.2,
      zoomAtMousePosition: !0
    },
    highlighting: {
      default: {
        name: "stroke",
        args: {
          padding: 3
        }
      },
      nodeAvailable: {
        name: "className",
        args: {
          className: _s.prefix("available-node")
        }
      },
      magnetAvailable: {
        name: "className",
        args: {
          className: _s.prefix("available-magnet")
        }
      }
    },
    connecting: {
      snap: !1,
      allowLoop: !0,
      allowNode: !0,
      allowEdge: !1,
      allowPort: !0,
      allowBlank: !0,
      allowMulti: !0,
      highlight: !1,
      anchor: "center",
      edgeAnchor: "ratio",
      connectionPoint: "boundary",
      router: "normal",
      connector: "normal",
      validateConnection({ type: e, sourceView: t, targetView: r }) {
        return (e === "target" ? r : t) != null;
      },
      createEdge() {
        return new bTe();
      }
    },
    translating: {
      restrict: !1
    },
    embedding: {
      enabled: !1,
      findParent: "bbox",
      frontOnly: !0,
      validate: () => !0
    },
    moveThreshold: 0,
    clickThreshold: 0,
    magnetThreshold: 0,
    preventDefaultDblClick: !0,
    preventDefaultMouseDown: !1,
    preventDefaultContextMenu: !0,
    preventDefaultBlankAction: !0,
    interacting: {
      edgeLabelMovable: !1
    },
    async: !0,
    virtual: !1,
    guard: () => !1
  };
})(qy || (qy = {}));
var PTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
}, ETe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class PL extends Zr {
  get elem() {
    return this.view.grid;
  }
  get grid() {
    return this.options.grid;
  }
  init() {
    this.startListening(), this.draw(this.grid);
  }
  startListening() {
    this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this);
  }
  stopListening() {
    this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this);
  }
  setVisible(e) {
    this.grid.visible !== e && (this.grid.visible = e, this.update());
  }
  getGridSize() {
    return this.grid.size;
  }
  setGridSize(e) {
    this.grid.size = Math.max(e, 1), this.update();
  }
  show() {
    this.setVisible(!0), this.update();
  }
  hide() {
    this.setVisible(!1), this.update();
  }
  clear() {
    this.elem.style.backgroundImage = "";
  }
  draw(e) {
    this.clear(), this.instance = null, Object.assign(this.grid, e), this.patterns = this.resolveGrid(e), this.update();
  }
  update(e = {}) {
    const t = this.grid.size;
    if (t <= 1 || !this.grid.visible)
      return this.clear();
    const r = this.graph.matrix(), i = this.getInstance(), o = Array.isArray(e) ? e : [e];
    this.patterns.forEach((l, u) => {
      const c = `pattern_${u}`, h = r.a || 1, f = r.d || 1, { update: d, markup: p } = l, g = ETe(l, ["update", "markup"]), v = Object.assign(Object.assign(Object.assign({}, g), o[u]), {
        sx: h,
        sy: f,
        ox: r.e || 0,
        oy: r.f || 0,
        width: t * h,
        height: t * f
      });
      i.has(c) || i.add(c, lt.create("pattern", { id: c, patternUnits: "userSpaceOnUse" }, lt.createVectors(p)).node);
      const m = i.get(c);
      typeof d == "function" && d(m.childNodes[0], v);
      let y = v.ox % v.width;
      y < 0 && (y += v.width);
      let b = v.oy % v.height;
      b < 0 && (b += v.height), Qt(m, {
        x: y,
        y: b,
        width: v.width,
        height: v.height
      });
    });
    const s = new XMLSerializer().serializeToString(i.root), a = `url(data:image/svg+xml;base64,${btoa(s)})`;
    this.elem.style.backgroundImage = a;
  }
  getInstance() {
    return this.instance || (this.instance = new Ju()), this.instance;
  }
  resolveGrid(e) {
    if (!e)
      return [];
    const t = e.type;
    if (t == null)
      return [
        Object.assign(Object.assign({}, Ju.presets.dot), e.args)
      ];
    const r = Ju.registry.get(t);
    if (r) {
      let i = e.args || [];
      return Array.isArray(i) || (i = [i]), Array.isArray(r) ? r.map((o, s) => Object.assign(Object.assign({}, o), i[s])) : [Object.assign(Object.assign({}, r), i[0])];
    }
    return Ju.registry.onNotFound(t);
  }
  dispose() {
    this.stopListening(), this.clear();
  }
}
PTe([
  Zr.dispose()
], PL.prototype, "dispose", null);
class xq extends Zr {
  get container() {
    return this.graph.view.container;
  }
  get viewport() {
    return this.graph.view.viewport;
  }
  get stage() {
    return this.graph.view.stage;
  }
  init() {
    this.resize();
  }
  /**
   * Returns the current transformation matrix of the graph.
   */
  getMatrix() {
    const e = this.viewport.getAttribute("transform");
    return e !== this.viewportTransformString && (this.viewportMatrix = this.viewport.getCTM(), this.viewportTransformString = e), Qr(this.viewportMatrix);
  }
  /**
   * Sets new transformation with the given `matrix`
   */
  setMatrix(e) {
    const t = Qr(e), r = Jg(t);
    this.viewport.setAttribute("transform", r), this.viewportMatrix = t, this.viewportTransformString = r;
  }
  resize(e, t) {
    let r = e === void 0 ? this.options.width : e, i = t === void 0 ? this.options.height : t;
    this.options.width = r, this.options.height = i, typeof r == "number" && (r = Math.round(r)), typeof i == "number" && (i = Math.round(i)), this.container.style.width = r == null ? "" : `${r}px`, this.container.style.height = i == null ? "" : `${i}px`;
    const o = this.getComputedSize();
    return this.graph.trigger("resize", Object.assign({}, o)), this;
  }
  getComputedSize() {
    let e = this.options.width, t = this.options.height;
    return CN(e) || (e = this.container.clientWidth), CN(t) || (t = this.container.clientHeight), { width: e, height: t };
  }
  getScale() {
    return C_e(this.getMatrix());
  }
  scale(e, t = e, r = 0, i = 0) {
    if (e = this.clampScale(e), t = this.clampScale(t), r || i) {
      const s = this.getTranslation(), a = s.tx - r * (e - 1), l = s.ty - i * (t - 1);
      (a !== s.tx || l !== s.ty) && this.translate(a, l);
    }
    const o = this.getMatrix();
    return o.a = e, o.d = t, this.setMatrix(o), this.graph.trigger("scale", { sx: e, sy: t, ox: r, oy: i }), this;
  }
  clampScale(e) {
    const t = this.graph.options.scaling;
    return so(e, t.min || 0.01, t.max || 16);
  }
  getZoom() {
    return this.getScale().sx;
  }
  zoom(e, t) {
    t = t || {};
    let r = e, i = e;
    const o = this.getScale(), s = this.getComputedSize();
    let a = s.width / 2, l = s.height / 2;
    if (t.absolute || (r += o.sx, i += o.sy), t.scaleGrid && (r = Math.round(r / t.scaleGrid) * t.scaleGrid, i = Math.round(i / t.scaleGrid) * t.scaleGrid), t.maxScale && (r = Math.min(t.maxScale, r), i = Math.min(t.maxScale, i)), t.minScale && (r = Math.max(t.minScale, r), i = Math.max(t.minScale, i)), t.center && (a = t.center.x, l = t.center.y), r = this.clampScale(r), i = this.clampScale(i), a || l) {
      const u = this.getTranslation(), c = a - (a - u.tx) * (r / o.sx), h = l - (l - u.ty) * (i / o.sy);
      (c !== u.tx || h !== u.ty) && this.translate(c, h);
    }
    return this.scale(r, i), this;
  }
  getRotation() {
    return A_e(this.getMatrix());
  }
  rotate(e, t, r) {
    if (t == null || r == null) {
      const o = un.getBBox(this.stage);
      t = o.width / 2, r = o.height / 2;
    }
    const i = this.getMatrix().translate(t, r).rotate(e).translate(-t, -r);
    return this.setMatrix(i), this;
  }
  getTranslation() {
    return T_e(this.getMatrix());
  }
  translate(e, t) {
    const r = this.getMatrix();
    r.e = e || 0, r.f = t || 0, this.setMatrix(r);
    const i = this.getTranslation();
    return this.options.x = i.tx, this.options.y = i.ty, this.graph.trigger("translate", Object.assign({}, i)), this;
  }
  setOrigin(e, t) {
    return this.translate(e || 0, t || 0);
  }
  fitToContent(e, t, r, i) {
    if (typeof e == "object") {
      const b = e;
      e = b.gridWidth || 1, t = b.gridHeight || 1, r = b.padding || 0, i = b;
    } else
      e = e || 1, t = t || 1, r = r || 0, i == null && (i = {});
    const o = Zf(r), s = i.border || 0, a = i.contentArea ? Se.create(i.contentArea) : this.getContentArea(i);
    s > 0 && a.inflate(s);
    const l = this.getScale(), u = this.getTranslation(), c = l.sx, h = l.sy;
    a.x *= c, a.y *= h, a.width *= c, a.height *= h;
    let f = Math.max(Math.ceil((a.width + a.x) / e), 1) * e, d = Math.max(Math.ceil((a.height + a.y) / t), 1) * t, p = 0, g = 0;
    (i.allowNewOrigin === "negative" && a.x < 0 || i.allowNewOrigin === "positive" && a.x >= 0 || i.allowNewOrigin === "any") && (p = Math.ceil(-a.x / e) * e, p += o.left, f += p), (i.allowNewOrigin === "negative" && a.y < 0 || i.allowNewOrigin === "positive" && a.y >= 0 || i.allowNewOrigin === "any") && (g = Math.ceil(-a.y / t) * t, g += o.top, d += g), f += o.right, d += o.bottom, f = Math.max(f, i.minWidth || 0), d = Math.max(d, i.minHeight || 0), f = Math.min(f, i.maxWidth || Number.MAX_SAFE_INTEGER), d = Math.min(d, i.maxHeight || Number.MAX_SAFE_INTEGER);
    const v = this.getComputedSize(), m = f !== v.width || d !== v.height;
    return (p !== u.tx || g !== u.ty) && this.translate(p, g), m && this.resize(f, d), new Se(-p / c, -g / h, f / c, d / h);
  }
  scaleContentToFit(e = {}) {
    this.scaleContentToFitImpl(e);
  }
  scaleContentToFitImpl(e = {}, t = !0) {
    let r, i;
    if (e.contentArea) {
      const m = e.contentArea;
      r = this.graph.localToGraph(m), i = W.create(m);
    } else
      r = this.getContentBBox(e), i = this.graph.graphToLocal(r);
    if (!r.width || !r.height)
      return;
    const o = Zf(e.padding), s = e.minScale || 0, a = e.maxScale || Number.MAX_SAFE_INTEGER, l = e.minScaleX || s, u = e.maxScaleX || a, c = e.minScaleY || s, h = e.maxScaleY || a;
    let f;
    if (e.viewportArea)
      f = e.viewportArea;
    else {
      const m = this.getComputedSize(), y = this.getTranslation();
      f = {
        x: y.tx,
        y: y.ty,
        width: m.width,
        height: m.height
      };
    }
    f = Se.create(f).moveAndExpand({
      x: o.left,
      y: o.top,
      width: -o.left - o.right,
      height: -o.top - o.bottom
    });
    const d = this.getScale();
    let p = f.width / r.width * d.sx, g = f.height / r.height * d.sy;
    e.preserveAspectRatio !== !1 && (p = g = Math.min(p, g));
    const v = e.scaleGrid;
    if (v && (p = v * Math.floor(p / v), g = v * Math.floor(g / v)), p = so(p, l, u), g = so(g, c, h), this.scale(p, g), t) {
      const m = this.options, y = f.x - i.x * p - m.x, b = f.y - i.y * g - m.y;
      this.translate(y, b);
    }
  }
  getContentArea(e = {}) {
    return e.useCellGeometry !== !1 ? this.model.getAllCellsBBox() || new Se() : un.getBBox(this.stage);
  }
  getContentBBox(e = {}) {
    return this.graph.localToGraph(this.getContentArea(e));
  }
  getGraphArea() {
    const e = Se.fromSize(this.getComputedSize());
    return this.graph.graphToLocal(e);
  }
  zoomToRect(e, t = {}) {
    const r = Se.create(e), i = this.graph;
    t.contentArea = r, t.viewportArea == null && (t.viewportArea = {
      x: i.options.x,
      y: i.options.y,
      width: this.options.width,
      height: this.options.height
    }), this.scaleContentToFitImpl(t, !1);
    const o = r.getCenter();
    return this.centerPoint(o.x, o.y), this;
  }
  zoomToFit(e = {}) {
    return this.zoomToRect(this.getContentArea(e), e);
  }
  centerPoint(e, t) {
    const r = this.getComputedSize(), i = this.getScale(), o = this.getTranslation(), s = r.width / 2, a = r.height / 2;
    e = typeof e == "number" ? e : s, t = typeof t == "number" ? t : a, e = s - e * i.sx, t = a - t * i.sy, (o.tx !== e || o.ty !== t) && this.translate(e, t);
  }
  centerContent(e) {
    const r = this.graph.getContentArea(e).getCenter();
    this.centerPoint(r.x, r.y);
  }
  centerCell(e) {
    return this.positionCell(e, "center");
  }
  positionPoint(e, t, r) {
    const i = this.getComputedSize();
    t = Ks(t, Math.max(0, i.width)), t < 0 && (t = i.width + t), r = Ks(r, Math.max(0, i.height)), r < 0 && (r = i.height + r);
    const o = this.getTranslation(), s = this.getScale(), a = t - e.x * s.sx, l = r - e.y * s.sy;
    (o.tx !== a || o.ty !== l) && this.translate(a, l);
  }
  positionRect(e, t) {
    const r = Se.create(e);
    switch (t) {
      case "center":
        return this.positionPoint(r.getCenter(), "50%", "50%");
      case "top":
        return this.positionPoint(r.getTopCenter(), "50%", 0);
      case "top-right":
        return this.positionPoint(r.getTopRight(), "100%", 0);
      case "right":
        return this.positionPoint(r.getRightMiddle(), "100%", "50%");
      case "bottom-right":
        return this.positionPoint(r.getBottomRight(), "100%", "100%");
      case "bottom":
        return this.positionPoint(r.getBottomCenter(), "50%", "100%");
      case "bottom-left":
        return this.positionPoint(r.getBottomLeft(), 0, "100%");
      case "left":
        return this.positionPoint(r.getLeftMiddle(), 0, "50%");
      case "top-left":
        return this.positionPoint(r.getTopLeft(), 0, 0);
      default:
        return this;
    }
  }
  positionCell(e, t) {
    const r = e.getBBox();
    return this.positionRect(r, t);
  }
  positionContent(e, t) {
    const r = this.graph.getContentArea(t);
    return this.positionRect(r, e);
  }
}
var kTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class EL extends Zr {
  get elem() {
    return this.view.background;
  }
  init() {
    this.startListening(), this.options.background && this.draw(this.options.background);
  }
  startListening() {
    this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this);
  }
  stopListening() {
    this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this);
  }
  updateBackgroundImage(e = {}) {
    let t = e.size || "auto auto", r = e.position || "center";
    const i = this.graph.transform.getScale(), o = this.graph.translate();
    if (typeof r == "object") {
      const s = o.tx + i.sx * (r.x || 0), a = o.ty + i.sy * (r.y || 0);
      r = `${s}px ${a}px`;
    }
    typeof t == "object" && (t = Se.fromSize(t).scale(i.sx, i.sy), t = `${t.width}px ${t.height}px`), this.elem.style.backgroundSize = t, this.elem.style.backgroundPosition = r;
  }
  drawBackgroundImage(e, t = {}) {
    if (!(e instanceof HTMLImageElement)) {
      this.elem.style.backgroundImage = "";
      return;
    }
    const r = this.optionsCache;
    if (r && r.image !== t.image)
      return;
    let i;
    const o = t.opacity, s = t.size;
    let a = t.repeat || "no-repeat";
    const l = Wy.registry.get(a);
    if (typeof l == "function") {
      const c = t.quality || 1;
      e.width *= c, e.height *= c;
      const h = l(e, t);
      if (!(h instanceof HTMLCanvasElement))
        throw new Error("Background pattern must return an HTML Canvas instance");
      i = h.toDataURL("image/png"), t.repeat && a !== t.repeat ? a = t.repeat : a = "repeat", typeof s == "object" ? (s.width *= h.width / e.width, s.height *= h.height / e.height) : s === void 0 && (t.size = {
        width: h.width / c,
        height: h.height / c
      });
    } else
      i = e.src, s === void 0 && (t.size = {
        width: e.width,
        height: e.height
      });
    r != null && typeof t.size == "object" && t.image === r.image && t.repeat === r.repeat && t.quality === r.quality && (r.size = My(t.size));
    const u = this.elem.style;
    u.backgroundImage = `url(${i})`, u.backgroundRepeat = a, u.opacity = o == null || o >= 1 ? "" : `${o}`, this.updateBackgroundImage(t);
  }
  updateBackgroundColor(e) {
    this.elem.style.backgroundColor = e || "";
  }
  updateBackgroundOptions(e) {
    this.graph.options.background = e;
  }
  update() {
    this.optionsCache && this.updateBackgroundImage(this.optionsCache);
  }
  draw(e) {
    const t = e || {};
    if (this.updateBackgroundOptions(e), this.updateBackgroundColor(t.color), t.image) {
      this.optionsCache = My(t);
      const r = document.createElement("img");
      r.onload = () => this.drawBackgroundImage(r, e), r.setAttribute("crossorigin", "anonymous"), r.src = t.image;
    } else
      this.drawBackgroundImage(null), this.optionsCache = null;
  }
  clear() {
    this.draw();
  }
  dispose() {
    this.clear(), this.stopListening();
  }
}
kTe([
  Zr.dispose()
], EL.prototype, "dispose", null);
var MTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class kL extends Zr {
  get widgetOptions() {
    return this.options.panning;
  }
  get pannable() {
    return this.widgetOptions && this.widgetOptions.enabled === !0;
  }
  init() {
    this.onRightMouseDown = this.onRightMouseDown.bind(this), this.onSpaceKeyDown = this.onSpaceKeyDown.bind(this), this.onSpaceKeyUp = this.onSpaceKeyUp.bind(this), this.startListening(), this.updateClassName();
  }
  startListening() {
    this.graph.on("blank:mousedown", this.onMouseDown, this), this.graph.on("node:unhandled:mousedown", this.onMouseDown, this), this.graph.on("edge:unhandled:mousedown", this.onMouseDown, this), qr.on(this.graph.container, "mousedown", this.onRightMouseDown), qr.on(document.body, {
      keydown: this.onSpaceKeyDown,
      keyup: this.onSpaceKeyUp
    }), this.mousewheelHandle = new CH(this.graph.container, this.onMouseWheel.bind(this), this.allowMouseWheel.bind(this)), this.mousewheelHandle.enable();
  }
  stopListening() {
    this.graph.off("blank:mousedown", this.onMouseDown, this), this.graph.off("node:unhandled:mousedown", this.onMouseDown, this), this.graph.off("edge:unhandled:mousedown", this.onMouseDown, this), qr.off(this.graph.container, "mousedown", this.onRightMouseDown), qr.off(document.body, {
      keydown: this.onSpaceKeyDown,
      keyup: this.onSpaceKeyUp
    }), this.mousewheelHandle && this.mousewheelHandle.disable();
  }
  allowPanning(e, t) {
    return e.spaceKey = this.isSpaceKeyPressed, this.pannable && Sc.isMatch(e, this.widgetOptions.modifiers, t);
  }
  startPanning(e) {
    const t = this.view.normalizeEvent(e);
    this.clientX = t.clientX, this.clientY = t.clientY, this.panning = !0, this.updateClassName(), qr.on(document.body, {
      "mousemove.panning touchmove.panning": this.pan.bind(this),
      "mouseup.panning touchend.panning": this.stopPanning.bind(this),
      "mouseleave.panning": this.stopPanning.bind(this)
    }), qr.on(window, "mouseup.panning", this.stopPanning.bind(this));
  }
  pan(e) {
    const t = this.view.normalizeEvent(e), r = t.clientX - this.clientX, i = t.clientY - this.clientY;
    this.clientX = t.clientX, this.clientY = t.clientY, this.graph.translateBy(r, i);
  }
  // eslint-disable-next-line
  stopPanning(e) {
    this.panning = !1, this.updateClassName(), qr.off(document.body, ".panning"), qr.off(window, ".panning");
  }
  updateClassName() {
    const e = this.view.container, t = this.view.prefixClassName("graph-panning"), r = this.view.prefixClassName("graph-pannable");
    this.pannable ? this.panning ? (rt(e, t), hr(e, r)) : (hr(e, t), rt(e, r)) : (hr(e, t), hr(e, r));
  }
  onMouseDown({ e }) {
    if (!this.allowBlankMouseDown(e))
      return;
    const t = this.graph.getPlugin("selection"), r = t && t.allowRubberband(e, !0);
    (this.allowPanning(e, !0) || this.allowPanning(e) && !r) && this.startPanning(e);
  }
  onRightMouseDown(e) {
    const t = this.widgetOptions.eventTypes;
    t != null && t.includes("rightMouseDown") && e.button === 2 && this.allowPanning(e, !0) && this.startPanning(e);
  }
  onMouseWheel(e, t, r) {
    this.graph.translateBy(-t, -r);
  }
  onSpaceKeyDown(e) {
    e.which === 32 && (this.isSpaceKeyPressed = !0);
  }
  onSpaceKeyUp(e) {
    e.which === 32 && (this.isSpaceKeyPressed = !1);
  }
  allowBlankMouseDown(e) {
    const t = this.widgetOptions.eventTypes;
    return (t == null ? void 0 : t.includes("leftMouseDown")) && e.button === 0 || (t == null ? void 0 : t.includes("mouseWheelDown")) && e.button === 1;
  }
  allowMouseWheel(e) {
    var t;
    return this.pannable && !e.ctrlKey && ((t = this.widgetOptions.eventTypes) === null || t === void 0 ? void 0 : t.includes("mouseWheel"));
  }
  autoPanning(e, t) {
    const i = this.graph.getGraphArea();
    let o = 0, s = 0;
    e <= i.left + 10 && (o = -10), t <= i.top + 10 && (s = -10), e >= i.right - 10 && (o = 10), t >= i.bottom - 10 && (s = 10), (o !== 0 || s !== 0) && this.graph.translateBy(-o, -s);
  }
  enablePanning() {
    this.pannable || (this.widgetOptions.enabled = !0, this.updateClassName());
  }
  disablePanning() {
    this.pannable && (this.widgetOptions.enabled = !1, this.updateClassName());
  }
  dispose() {
    this.stopListening();
  }
}
MTe([
  Zr.dispose()
], kL.prototype, "dispose", null);
var DTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class ML extends Zr {
  constructor() {
    super(...arguments), this.cumulatedFactor = 1;
  }
  get widgetOptions() {
    return this.options.mousewheel;
  }
  init() {
    this.container = this.graph.container, this.target = this.widgetOptions.global ? document : this.container, this.mousewheelHandle = new CH(this.target, this.onMouseWheel.bind(this), this.allowMouseWheel.bind(this)), this.widgetOptions.enabled && this.enable(!0);
  }
  get disabled() {
    return this.widgetOptions.enabled !== !0;
  }
  enable(e) {
    (this.disabled || e) && (this.widgetOptions.enabled = !0, this.mousewheelHandle.enable());
  }
  disable() {
    this.disabled || (this.widgetOptions.enabled = !1, this.mousewheelHandle.disable());
  }
  allowMouseWheel(e) {
    const t = this.widgetOptions.guard;
    return (t == null || t(e)) && Sc.isMatch(e, this.widgetOptions.modifiers);
  }
  onMouseWheel(e) {
    const t = this.widgetOptions.guard;
    if ((t == null || t(e)) && Sc.isMatch(e, this.widgetOptions.modifiers)) {
      const r = this.widgetOptions.factor || 1.2;
      this.currentScale == null && (this.startPos = { x: e.clientX, y: e.clientY }, this.currentScale = this.graph.transform.getScale().sx), e.deltaY < 0 ? this.currentScale < 0.15 ? this.cumulatedFactor = (this.currentScale + 0.01) / this.currentScale : (this.cumulatedFactor = Math.round(this.currentScale * r * 20) / 20 / this.currentScale, this.cumulatedFactor === 1 && (this.cumulatedFactor = 1.05)) : this.currentScale <= 0.15 ? this.cumulatedFactor = (this.currentScale - 0.01) / this.currentScale : (this.cumulatedFactor = Math.round(this.currentScale * (1 / r) * 20) / 20 / this.currentScale, this.cumulatedFactor === 1 && (this.cumulatedFactor = 0.95)), this.cumulatedFactor = Math.max(0.01, Math.min(this.currentScale * this.cumulatedFactor, 160) / this.currentScale);
      const o = this.currentScale;
      let s = this.graph.transform.clampScale(o * this.cumulatedFactor);
      const a = this.widgetOptions.minScale || Number.MIN_SAFE_INTEGER, l = this.widgetOptions.maxScale || Number.MAX_SAFE_INTEGER;
      if (s = so(s, a, l), s !== o)
        if (this.widgetOptions.zoomAtMousePosition) {
          const c = !!this.graph.getPlugin("scroller") ? this.graph.clientToLocal(this.startPos) : this.graph.clientToGraph(this.startPos);
          this.graph.zoom(s, {
            absolute: !0,
            center: c.clone()
          });
        } else
          this.graph.zoom(s, { absolute: !0 });
      this.currentScale = null, this.cumulatedFactor = 1;
    }
  }
  dispose() {
    this.disable();
  }
}
DTe([
  Ul.dispose()
], ML.prototype, "dispose", null);
var LTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Sq extends Zr {
  init() {
    this.resetRenderArea = wfe(this.resetRenderArea, 200, {
      leading: !0
    }), this.resetRenderArea(), this.startListening();
  }
  startListening() {
    this.graph.on("translate", this.resetRenderArea, this), this.graph.on("scale", this.resetRenderArea, this), this.graph.on("resize", this.resetRenderArea, this);
  }
  stopListening() {
    this.graph.off("translate", this.resetRenderArea, this), this.graph.off("scale", this.resetRenderArea, this), this.graph.off("resize", this.resetRenderArea, this);
  }
  enableVirtualRender() {
    this.options.virtual = !0, this.resetRenderArea();
  }
  disableVirtualRender() {
    this.options.virtual = !1, this.graph.renderer.setRenderArea(void 0);
  }
  resetRenderArea() {
    if (this.options.virtual) {
      const e = this.graph.getGraphArea();
      this.graph.renderer.setRenderArea(e);
    }
  }
  dispose() {
    this.stopListening();
  }
}
LTe([
  Zr.dispose()
], Sq.prototype, "dispose", null);
class ITe {
  constructor() {
    this.isFlushing = !1, this.isFlushPending = !1, this.scheduleId = 0, this.queue = [], this.frameInterval = 33, this.initialTime = Date.now();
  }
  queueJob(e) {
    if (e.priority & Ll.PRIOR)
      e.cb();
    else {
      const t = this.findInsertionIndex(e);
      t >= 0 && this.queue.splice(t, 0, e);
    }
  }
  queueFlush() {
    !this.isFlushing && !this.isFlushPending && (this.isFlushPending = !0, this.scheduleJob());
  }
  queueFlushSync() {
    !this.isFlushing && !this.isFlushPending && (this.isFlushPending = !0, this.flushJobsSync());
  }
  clearJobs() {
    this.queue.length = 0, this.isFlushing = !1, this.isFlushPending = !1, this.cancelScheduleJob();
  }
  flushJobs() {
    this.isFlushPending = !1, this.isFlushing = !0;
    const e = this.getCurrentTime();
    let t;
    for (; (t = this.queue.shift()) && (t.cb(), !(this.getCurrentTime() - e >= this.frameInterval)); )
      ;
    this.isFlushing = !1, this.queue.length && this.queueFlush();
  }
  flushJobsSync() {
    this.isFlushPending = !1, this.isFlushing = !0;
    let e;
    for (; e = this.queue.shift(); )
      try {
        e.cb();
      } catch (t) {
        console.log(t);
      }
    this.isFlushing = !1;
  }
  findInsertionIndex(e) {
    let t = 0, r = this.queue.length, i = r - 1;
    const o = e.priority;
    for (; t <= i; ) {
      const s = (i - t >> 1) + t;
      o <= this.queue[s].priority ? t = s + 1 : (r = s, i = s - 1);
    }
    return r;
  }
  scheduleJob() {
    "requestIdleCallback" in window ? (this.scheduleId && this.cancelScheduleJob(), this.scheduleId = window.requestIdleCallback(this.flushJobs.bind(this), {
      timeout: 100
    })) : (this.scheduleId && this.cancelScheduleJob(), this.scheduleId = window.setTimeout(this.flushJobs.bind(this)));
  }
  cancelScheduleJob() {
    "cancelIdleCallback" in window ? (this.scheduleId && window.cancelIdleCallback(this.scheduleId), this.scheduleId = 0) : (this.scheduleId && clearTimeout(this.scheduleId), this.scheduleId = 0);
  }
  getCurrentTime() {
    return typeof performance == "object" && typeof performance.now == "function" ? performance.now() : Date.now() - this.initialTime;
  }
}
var Ll;
(function(n) {
  n[n.Update = 2] = "Update", n[n.RenderEdge = 4] = "RenderEdge", n[n.RenderNode = 8] = "RenderNode", n[n.PRIOR = 1048576] = "PRIOR";
})(Ll || (Ll = {}));
var RTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let xg = class xo extends Ul {
  get model() {
    return this.graph.model;
  }
  get container() {
    return this.graph.view.stage;
  }
  constructor(e) {
    super(), this.views = {}, this.willRemoveViews = {}, this.queue = new ITe(), this.graph = e, this.init();
  }
  init() {
    this.startListening(), this.renderViews(this.model.getCells());
  }
  startListening() {
    this.model.on("reseted", this.onModelReseted, this), this.model.on("cell:added", this.onCellAdded, this), this.model.on("cell:removed", this.onCellRemoved, this), this.model.on("cell:change:zIndex", this.onCellZIndexChanged, this), this.model.on("cell:change:visible", this.onCellVisibleChanged, this);
  }
  stopListening() {
    this.model.off("reseted", this.onModelReseted, this), this.model.off("cell:added", this.onCellAdded, this), this.model.off("cell:removed", this.onCellRemoved, this), this.model.off("cell:change:zIndex", this.onCellZIndexChanged, this), this.model.off("cell:change:visible", this.onCellVisibleChanged, this);
  }
  onModelReseted({ options: e }) {
    this.queue.clearJobs(), this.removeZPivots(), this.resetViews();
    const t = this.model.getCells();
    this.renderViews(t, Object.assign(Object.assign({}, e), { queue: t.map((r) => r.id) }));
  }
  onCellAdded({ cell: e, options: t }) {
    this.renderViews([e], t);
  }
  onCellRemoved({ cell: e }) {
    this.removeViews([e]);
  }
  onCellZIndexChanged({ cell: e, options: t }) {
    const r = this.views[e.id];
    r && this.requestViewUpdate(r.view, xo.FLAG_INSERT, t, Ll.Update, !0);
  }
  onCellVisibleChanged({ cell: e, current: t }) {
    this.toggleVisible(e, !!t);
  }
  requestViewUpdate(e, t, r = {}, i = Ll.Update, o = !0) {
    const s = e.cell.id, a = this.views[s];
    if (!a)
      return;
    a.flag = t, a.options = r, (e.hasAction(t, ["translate", "resize", "rotate"]) || r.async === !1) && (i = Ll.PRIOR, o = !1), this.queue.queueJob({
      id: s,
      priority: i,
      cb: () => {
        this.renderViewInArea(e, t, r);
        const c = r.queue;
        if (c) {
          const h = c.indexOf(e.cell.id);
          h >= 0 && c.splice(h, 1), c.length === 0 && this.graph.trigger("render:done");
        }
      }
    }), this.getEffectedEdges(e).forEach((c) => {
      this.requestViewUpdate(c.view, c.flag, r, i, !1);
    }), o && this.flush();
  }
  setRenderArea(e) {
    this.renderArea = e, this.flushWaitingViews();
  }
  isViewMounted(e) {
    if (e == null)
      return !1;
    const t = this.views[e.cell.id];
    return t ? t.state === xo.ViewState.MOUNTED : !1;
  }
  renderViews(e, t = {}) {
    e.sort((r, i) => r.isNode() && i.isEdge() ? -1 : 0), e.forEach((r) => {
      const i = r.id, o = this.views;
      let s = 0, a = o[i];
      if (a)
        s = xo.FLAG_INSERT;
      else {
        const l = this.createCellView(r);
        l && (l.graph = this.graph, s = xo.FLAG_INSERT | l.getBootstrapFlag(), a = {
          view: l,
          flag: s,
          options: t,
          state: xo.ViewState.CREATED
        }, this.views[i] = a);
      }
      a && this.requestViewUpdate(a.view, s, t, this.getRenderPriority(a.view), !1);
    }), this.flush();
  }
  renderViewInArea(e, t, r = {}) {
    const i = e.cell, o = i.id, s = this.views[o];
    if (!s)
      return;
    let a = 0;
    this.isUpdatable(e) ? (a = this.updateView(e, t, r), s.flag = a) : s.state === xo.ViewState.MOUNTED ? (a = this.updateView(e, t, r), s.flag = a) : s.state = xo.ViewState.WAITING, a && i.isEdge() && !(a & e.getFlag(["source", "target"])) && this.queue.queueJob({
      id: o,
      priority: Ll.RenderEdge,
      cb: () => {
        this.updateView(e, t, r);
      }
    });
  }
  removeViews(e) {
    e.forEach((t) => {
      const r = t.id, i = this.views[r];
      i && (this.willRemoveViews[r] = i, delete this.views[r], this.queue.queueJob({
        id: r,
        priority: this.getRenderPriority(i.view),
        cb: () => {
          this.removeView(i.view);
        }
      }));
    }), this.flush();
  }
  flush() {
    this.graph.options.async ? this.queue.queueFlush() : this.queue.queueFlushSync();
  }
  flushWaitingViews() {
    Object.values(this.views).forEach((e) => {
      if (e && e.state === xo.ViewState.WAITING) {
        const { view: t, flag: r, options: i } = e;
        this.requestViewUpdate(t, r, i, this.getRenderPriority(t), !1);
      }
    }), this.flush();
  }
  updateView(e, t, r = {}) {
    if (e == null)
      return 0;
    if (ir.isCellView(e)) {
      if (t & xo.FLAG_REMOVE)
        return this.removeView(e.cell), 0;
      t & xo.FLAG_INSERT && (this.insertView(e), t ^= xo.FLAG_INSERT);
    }
    return t ? e.confirmUpdate(t, r) : 0;
  }
  insertView(e) {
    const t = this.views[e.cell.id];
    if (t) {
      const r = e.cell.getZIndex(), i = this.addZPivot(r);
      this.container.insertBefore(e.container, i), e.cell.isVisible() || this.toggleVisible(e.cell, !1), t.state = xo.ViewState.MOUNTED, this.graph.trigger("view:mounted", { view: e });
    }
  }
  resetViews() {
    this.willRemoveViews = Object.assign(Object.assign({}, this.views), this.willRemoveViews), Object.values(this.willRemoveViews).forEach((e) => {
      e && this.removeView(e.view);
    }), this.views = {}, this.willRemoveViews = {};
  }
  removeView(e) {
    const t = e.cell, r = this.willRemoveViews[t.id];
    r && e && (r.view.remove(), delete this.willRemoveViews[t.id], this.graph.trigger("view:unmounted", { view: e }));
  }
  toggleVisible(e, t) {
    const r = this.model.getConnectedEdges(e);
    for (let o = 0, s = r.length; o < s; o += 1) {
      const a = r[o];
      if (t) {
        const l = a.getSourceCell(), u = a.getTargetCell();
        if (l && !l.isVisible() || u && !u.isVisible())
          continue;
        this.toggleVisible(a, !0);
      } else
        this.toggleVisible(a, !1);
    }
    const i = this.views[e.id];
    i && xr(i.view.container, {
      display: t ? "unset" : "none"
    });
  }
  addZPivot(e = 0) {
    this.zPivots == null && (this.zPivots = {});
    const t = this.zPivots;
    let r = t[e];
    if (r)
      return r;
    r = t[e] = document.createComment(`z-index:${e + 1}`);
    let i = -1 / 0;
    for (const s in t) {
      const a = +s;
      a < e && a > i && (i = a, e - 1);
    }
    const o = this.container;
    if (i !== -1 / 0) {
      const s = t[i];
      o.insertBefore(r, s.nextSibling);
    } else
      o.insertBefore(r, o.firstChild);
    return r;
  }
  removeZPivots() {
    this.zPivots && Object.values(this.zPivots).forEach((e) => {
      e && e.parentNode && e.parentNode.removeChild(e);
    }), this.zPivots = {};
  }
  createCellView(e) {
    const t = { graph: this.graph }, r = this.graph.options.createCellView;
    if (r) {
      const o = Ue(r, this.graph, e);
      if (o)
        return new o(e, t);
      if (o === null)
        return null;
    }
    const i = e.view;
    if (i != null && typeof i == "string") {
      const o = ir.registry.get(i);
      return o ? new o(e, t) : ir.registry.onNotFound(i);
    }
    return e.isNode() ? new Zo(e, t) : e.isEdge() ? new Jl(e, t) : null;
  }
  getEffectedEdges(e) {
    const t = [], r = e.cell, i = this.model.getConnectedEdges(r);
    for (let o = 0, s = i.length; o < s; o += 1) {
      const a = i[o], l = this.views[a.id];
      if (!l)
        continue;
      const u = l.view;
      if (!this.isViewMounted(u))
        continue;
      const c = ["update"];
      a.getTargetCell() === r && c.push("target"), a.getSourceCell() === r && c.push("source"), t.push({
        id: a.id,
        view: u,
        flag: u.getFlag(c)
      });
    }
    return t;
  }
  isUpdatable(e) {
    if (e.isNodeView())
      return this.renderArea ? this.renderArea.isIntersectWithRect(e.cell.getBBox()) : !0;
    if (e.isEdgeView()) {
      const t = e.cell, r = t.getSourceCell(), i = t.getTargetCell();
      if (this.renderArea && r && i)
        return this.renderArea.isIntersectWithRect(r.getBBox()) || this.renderArea.isIntersectWithRect(i.getBBox());
    }
    return !0;
  }
  getRenderPriority(e) {
    return e.cell.isNode() ? Ll.RenderNode : Ll.RenderEdge;
  }
  dispose() {
    this.stopListening(), Object.keys(this.views).forEach((e) => {
      this.views[e].view.dispose();
    }), this.views = {};
  }
};
RTe([
  Ul.dispose()
], xg.prototype, "dispose", null);
(function(n) {
  n.FLAG_INSERT = 1 << 30, n.FLAG_REMOVE = 1 << 29, n.FLAG_RENDER = (1 << 26) - 1;
})(xg || (xg = {}));
(function(n) {
  (function(e) {
    e[e.CREATED = 0] = "CREATED", e[e.MOUNTED = 1] = "MOUNTED", e[e.WAITING = 2] = "WAITING";
  })(n.ViewState || (n.ViewState = {}));
})(xg || (xg = {}));
var $Te = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let DL = class extends Zr {
  constructor() {
    super(...arguments), this.schedule = new xg(this.graph);
  }
  requestViewUpdate(e, t, r = {}) {
    this.schedule.requestViewUpdate(e, t, r);
  }
  isViewMounted(e) {
    return this.schedule.isViewMounted(e);
  }
  setRenderArea(e) {
    this.schedule.setRenderArea(e);
  }
  findViewByElem(e) {
    if (e == null)
      return null;
    const t = this.options.container, r = typeof e == "string" ? t.querySelector(e) : e instanceof Element ? e : e[0];
    if (r) {
      const i = this.graph.view.findAttr("data-cell-id", r);
      if (i) {
        const o = this.schedule.views;
        if (o[i])
          return o[i].view;
      }
    }
    return null;
  }
  findViewByCell(e) {
    if (e == null)
      return null;
    const t = Mt.isCell(e) ? e.id : e, r = this.schedule.views;
    return r[t] ? r[t].view : null;
  }
  findViewsFromPoint(e) {
    const t = { x: e.x, y: e.y };
    return this.model.getCells().map((r) => this.findViewByCell(r)).filter((r) => r != null ? un.getBBox(r.container, {
      target: this.view.stage
    }).containsPoint(t) : !1);
  }
  findEdgeViewsFromPoint(e, t = 5) {
    return this.model.getEdges().map((r) => this.findViewByCell(r)).filter((r) => {
      if (r != null) {
        const i = r.getClosestPoint(e);
        if (i)
          return i.distance(e) <= t;
      }
      return !1;
    });
  }
  findViewsInArea(e, t = {}) {
    const r = Se.create(e);
    return this.model.getCells().map((i) => this.findViewByCell(i)).filter((i) => {
      if (i) {
        if (t.nodeOnly && !i.isNodeView())
          return !1;
        const o = un.getBBox(i.container, {
          target: this.view.stage
        });
        return o.width === 0 ? o.inflate(1, 0) : o.height === 0 && o.inflate(0, 1), t.strict ? r.containsRect(o) : r.isIntersectWithRect(o);
      }
      return !1;
    });
  }
  dispose() {
    this.schedule.dispose();
  }
};
$Te([
  Zr.dispose()
], DL.prototype, "dispose", null);
var O5 = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class _q extends Zr {
  get cid() {
    return this.graph.view.cid;
  }
  get svg() {
    return this.view.svg;
  }
  get defs() {
    return this.view.defs;
  }
  isDefined(e) {
    return this.svg.getElementById(e) != null;
  }
  filter(e) {
    let t = e.id;
    const r = e.name;
    if (t || (t = `filter-${r}-${this.cid}-${JC(JSON.stringify(e))}`), !this.isDefined(t)) {
      const i = fg.registry.get(r);
      if (i == null)
        return fg.registry.onNotFound(r);
      const o = i(e.args || {}), s = Object.assign(Object.assign({ x: -1, y: -1, width: 3, height: 3, filterUnits: "objectBoundingBox" }, e.attrs), { id: t });
      lt.create(On.sanitize(o), s).appendTo(this.defs);
    }
    return t;
  }
  gradient(e) {
    let t = e.id;
    const r = e.type;
    if (t || (t = `gradient-${r}-${this.cid}-${JC(JSON.stringify(e))}`), !this.isDefined(t)) {
      const o = e.stops.map((l) => {
        const u = l.opacity != null && Number.isFinite(l.opacity) ? l.opacity : 1;
        return `<stop offset="${l.offset}" stop-color="${l.color}" stop-opacity="${u}"/>`;
      }), s = `<${r}>${o.join("")}</${r}>`, a = Object.assign({ id: t }, e.attrs);
      lt.create(s, a).appendTo(this.defs);
    }
    return t;
  }
  marker(e) {
    const { id: t, refX: r, refY: i, markerUnits: o, markerOrient: s, tagName: a, children: l } = e, u = O5(e, ["id", "refX", "refY", "markerUnits", "markerOrient", "tagName", "children"]);
    let c = t;
    if (c || (c = `marker-${this.cid}-${JC(JSON.stringify(e))}`), !this.isDefined(c)) {
      a !== "path" && delete u.d;
      const h = lt.create("marker", {
        refX: r,
        refY: i,
        id: c,
        overflow: "visible",
        orient: s ?? "auto",
        markerUnits: o || "userSpaceOnUse"
      }, l ? l.map((f) => {
        var { tagName: d } = f, p = O5(f, ["tagName"]);
        return lt.create(`${d}` || "path", zy(Object.assign(Object.assign({}, u), p)));
      }) : [lt.create(a || "path", zy(u))]);
      this.defs.appendChild(h.node);
    }
    return c;
  }
  remove(e) {
    const t = this.svg.getElementById(e);
    t && t.parentNode && t.parentNode.removeChild(t);
  }
}
class Cq extends Zr {
  getClientMatrix() {
    return Qr(this.view.stage.getScreenCTM());
  }
  /**
   * Returns coordinates of the graph viewport, relative to the window.
   */
  getClientOffset() {
    const e = this.view.svg.getBoundingClientRect();
    return new W(e.left, e.top);
  }
  /**
   * Returns coordinates of the graph viewport, relative to the document.
   */
  getPageOffset() {
    return this.getClientOffset().translate(window.scrollX, window.scrollY);
  }
  snapToGrid(e, t) {
    return (typeof e == "number" ? this.clientToLocalPoint(e, t) : this.clientToLocalPoint(e.x, e.y)).snapToGrid(this.graph.getGridSize());
  }
  localToGraphPoint(e, t) {
    const r = W.create(e, t);
    return un.transformPoint(r, this.graph.matrix());
  }
  localToClientPoint(e, t) {
    const r = W.create(e, t);
    return un.transformPoint(r, this.getClientMatrix());
  }
  localToPagePoint(e, t) {
    return (typeof e == "number" ? this.localToGraphPoint(e, t) : this.localToGraphPoint(e)).translate(this.getPageOffset());
  }
  localToGraphRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return un.transformRectangle(o, this.graph.matrix());
  }
  localToClientRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return un.transformRectangle(o, this.getClientMatrix());
  }
  localToPageRect(e, t, r, i) {
    return (typeof e == "number" ? this.localToGraphRect(e, t, r, i) : this.localToGraphRect(e)).translate(this.getPageOffset());
  }
  graphToLocalPoint(e, t) {
    const r = W.create(e, t);
    return un.transformPoint(r, this.graph.matrix().inverse());
  }
  clientToLocalPoint(e, t) {
    const r = W.create(e, t);
    return un.transformPoint(r, this.getClientMatrix().inverse());
  }
  clientToGraphPoint(e, t) {
    const r = W.create(e, t);
    return un.transformPoint(r, this.graph.matrix().multiply(this.getClientMatrix().inverse()));
  }
  pageToLocalPoint(e, t) {
    const i = W.create(e, t).diff(this.getPageOffset());
    return this.graphToLocalPoint(i);
  }
  graphToLocalRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return un.transformRectangle(o, this.graph.matrix().inverse());
  }
  clientToLocalRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return un.transformRectangle(o, this.getClientMatrix().inverse());
  }
  clientToGraphRect(e, t, r, i) {
    const o = Se.create(e, t, r, i);
    return un.transformRectangle(o, this.graph.matrix().multiply(this.getClientMatrix().inverse()));
  }
  pageToLocalRect(e, t, r, i) {
    const o = Se.create(e, t, r, i), s = this.getPageOffset();
    return o.x -= s.x, o.y -= s.y, this.graphToLocalRect(o);
  }
}
var NTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class sx extends Zr {
  constructor() {
    super(...arguments), this.highlights = {};
  }
  init() {
    this.startListening();
  }
  startListening() {
    this.graph.on("cell:highlight", this.onCellHighlight, this), this.graph.on("cell:unhighlight", this.onCellUnhighlight, this);
  }
  stopListening() {
    this.graph.off("cell:highlight", this.onCellHighlight, this), this.graph.off("cell:unhighlight", this.onCellUnhighlight, this);
  }
  onCellHighlight({ view: e, magnet: t, options: r = {} }) {
    const i = this.resolveHighlighter(r);
    if (!i)
      return;
    const o = this.getHighlighterId(t, i);
    if (!this.highlights[o]) {
      const s = i.highlighter;
      s.highlight(e, t, Object.assign({}, i.args)), this.highlights[o] = {
        cellView: e,
        magnet: t,
        highlighter: s,
        args: i.args
      };
    }
  }
  onCellUnhighlight({ magnet: e, options: t = {} }) {
    const r = this.resolveHighlighter(t);
    if (!r)
      return;
    const i = this.getHighlighterId(e, r);
    this.unhighlight(i);
  }
  resolveHighlighter(e) {
    const t = this.options;
    let r = e.highlighter;
    if (r == null) {
      const a = e.type;
      r = a && t.highlighting[a] || t.highlighting.default;
    }
    if (r == null)
      return null;
    const i = typeof r == "string" ? {
      name: r
    } : r, o = i.name, s = Zl.registry.get(o);
    return s == null ? Zl.registry.onNotFound(o) : (Zl.check(o, s), {
      name: o,
      highlighter: s,
      args: i.args || {}
    });
  }
  getHighlighterId(e, t) {
    return yL(e), t.name + e.id + JSON.stringify(t.args);
  }
  unhighlight(e) {
    const t = this.highlights[e];
    t && (t.highlighter.unhighlight(t.cellView, t.magnet, t.args), delete this.highlights[e]);
  }
  dispose() {
    Object.keys(this.highlights).forEach((e) => this.unhighlight(e)), this.stopListening();
  }
}
NTe([
  sx.dispose()
], sx.prototype, "dispose", null);
var BTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Aq extends Zr {
  getScroller() {
    const e = this.graph.getPlugin("scroller");
    return e && e.options.enabled ? e : null;
  }
  getContainer() {
    const e = this.getScroller();
    return e ? e.container.parentElement : this.graph.container.parentElement;
  }
  getSensorTarget() {
    const e = this.options.autoResize;
    if (e)
      return typeof e == "boolean" ? this.getContainer() : e;
  }
  init() {
    if (this.options.autoResize) {
      const t = this.getSensorTarget();
      t && Uw.bind(t, () => {
        const r = t.offsetWidth, i = t.offsetHeight;
        this.resize(r, i);
      });
    }
  }
  resize(e, t) {
    const r = this.getScroller();
    r ? r.resize(e, t) : this.graph.transform.resize(e, t);
  }
  dispose() {
    Uw.clear(this.graph.container);
  }
}
BTe([
  Zr.dispose()
], Aq.prototype, "dispose", null);
var VTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
let Ee = class Tq extends Fn {
  get container() {
    return this.options.container;
  }
  get [Symbol.toStringTag]() {
    return Tq.toStringTag;
  }
  constructor(e) {
    super(), this.installedPlugins = /* @__PURE__ */ new Set(), this.options = qy.get(e), this.css = new gE(this), this.view = new jf(this), this.defs = new _q(this), this.coord = new Cq(this), this.transform = new xq(this), this.highlight = new sx(this), this.grid = new PL(this), this.background = new EL(this), this.options.model ? this.model = this.options.model : (this.model = new cl(), this.model.graph = this), this.renderer = new DL(this), this.panning = new kL(this), this.mousewheel = new ML(this), this.virtualRender = new Sq(this), this.size = new Aq(this);
  }
  // #region model
  isNode(e) {
    return e.isNode();
  }
  isEdge(e) {
    return e.isEdge();
  }
  resetCells(e, t = {}) {
    return this.model.resetCells(e, t), this;
  }
  clearCells(e = {}) {
    return this.model.clear(e), this;
  }
  toJSON(e = {}) {
    return this.model.toJSON(e);
  }
  parseJSON(e) {
    return this.model.parseJSON(e);
  }
  fromJSON(e, t = {}) {
    return this.model.fromJSON(e, t), this;
  }
  getCellById(e) {
    return this.model.getCell(e);
  }
  addNode(e, t = {}) {
    return this.model.addNode(e, t);
  }
  addNodes(e, t = {}) {
    return this.addCell(e.map((r) => sr.isNode(r) ? r : this.createNode(r)), t);
  }
  createNode(e) {
    return this.model.createNode(e);
  }
  removeNode(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  addEdge(e, t = {}) {
    return this.model.addEdge(e, t);
  }
  addEdges(e, t = {}) {
    return this.addCell(e.map((r) => Yn.isEdge(r) ? r : this.createEdge(r)), t);
  }
  removeEdge(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  createEdge(e) {
    return this.model.createEdge(e);
  }
  addCell(e, t = {}) {
    return this.model.addCell(e, t), this;
  }
  removeCell(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  removeCells(e, t = {}) {
    return this.model.removeCells(e, t);
  }
  removeConnectedEdges(e, t = {}) {
    return this.model.removeConnectedEdges(e, t);
  }
  disconnectConnectedEdges(e, t = {}) {
    return this.model.disconnectConnectedEdges(e, t), this;
  }
  hasCell(e) {
    return this.model.has(e);
  }
  getCells() {
    return this.model.getCells();
  }
  getCellCount() {
    return this.model.total();
  }
  /**
   * Returns all the nodes in the graph.
   */
  getNodes() {
    return this.model.getNodes();
  }
  /**
   * Returns all the edges in the graph.
   */
  getEdges() {
    return this.model.getEdges();
  }
  /**
   * Returns all outgoing edges for the node.
   */
  getOutgoingEdges(e) {
    return this.model.getOutgoingEdges(e);
  }
  /**
   * Returns all incoming edges for the node.
   */
  getIncomingEdges(e) {
    return this.model.getIncomingEdges(e);
  }
  /**
   * Returns edges connected with cell.
   */
  getConnectedEdges(e, t = {}) {
    return this.model.getConnectedEdges(e, t);
  }
  /**
   * Returns an array of all the roots of the graph.
   */
  getRootNodes() {
    return this.model.getRoots();
  }
  /**
   * Returns an array of all the leafs of the graph.
   */
  getLeafNodes() {
    return this.model.getLeafs();
  }
  /**
   * Returns `true` if the node is a root node, i.e.
   * there is no  edges coming to the node.
   */
  isRootNode(e) {
    return this.model.isRoot(e);
  }
  /**
   * Returns `true` if the node is a leaf node, i.e.
   * there is no edges going out from the node.
   */
  isLeafNode(e) {
    return this.model.isLeaf(e);
  }
  /**
   * Returns all the neighbors of node in the graph. Neighbors are all
   * the nodes connected to node via either incoming or outgoing edge.
   */
  getNeighbors(e, t = {}) {
    return this.model.getNeighbors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a neighbor of `cell1`.
   */
  isNeighbor(e, t, r = {}) {
    return this.model.isNeighbor(e, t, r);
  }
  getSuccessors(e, t = {}) {
    return this.model.getSuccessors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a successor of `cell1`.
   */
  isSuccessor(e, t, r = {}) {
    return this.model.isSuccessor(e, t, r);
  }
  getPredecessors(e, t = {}) {
    return this.model.getPredecessors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a predecessor of `cell1`.
   */
  isPredecessor(e, t, r = {}) {
    return this.model.isPredecessor(e, t, r);
  }
  getCommonAncestor(...e) {
    return this.model.getCommonAncestor(...e);
  }
  /**
   * Returns an array of cells that result from finding nodes/edges that
   * are connected to any of the cells in the cells array. This function
   * loops over cells and if the current cell is a edge, it collects its
   * source/target nodes; if it is an node, it collects its incoming and
   * outgoing edges if both the edge terminal (source/target) are in the
   * cells array.
   */
  getSubGraph(e, t = {}) {
    return this.model.getSubGraph(e, t);
  }
  /**
   * Clones the whole subgraph (including all the connected links whose
   * source/target is in the subgraph). If `options.deep` is `true`, also
   * take into account all the embedded cells of all the subgraph cells.
   *
   * Returns a map of the form: { [original cell ID]: [clone] }.
   */
  cloneSubGraph(e, t = {}) {
    return this.model.cloneSubGraph(e, t);
  }
  cloneCells(e) {
    return this.model.cloneCells(e);
  }
  getNodesFromPoint(e, t) {
    return this.model.getNodesFromPoint(e, t);
  }
  getNodesInArea(e, t, r, i, o) {
    return this.model.getNodesInArea(e, t, r, i, o);
  }
  getNodesUnderNode(e, t = {}) {
    return this.model.getNodesUnderNode(e, t);
  }
  searchCell(e, t, r = {}) {
    return this.model.search(e, t, r), this;
  }
  /** *
   * Returns an array of IDs of nodes on the shortest
   * path between source and target.
   */
  getShortestPath(e, t, r = {}) {
    return this.model.getShortestPath(e, t, r);
  }
  /**
   * Returns the bounding box that surrounds all cells in the graph.
   */
  getAllCellsBBox() {
    return this.model.getAllCellsBBox();
  }
  /**
   * Returns the bounding box that surrounds all the given cells.
   */
  getCellsBBox(e, t = {}) {
    return this.model.getCellsBBox(e, t);
  }
  startBatch(e, t = {}) {
    this.model.startBatch(e, t);
  }
  stopBatch(e, t = {}) {
    this.model.stopBatch(e, t);
  }
  batchUpdate(e, t, r) {
    const i = typeof e == "string" ? e : "update", o = typeof e == "string" ? t : e, s = typeof t == "function" ? r : t;
    this.startBatch(i, s);
    const a = o();
    return this.stopBatch(i, s), a;
  }
  updateCellId(e, t) {
    return this.model.updateCellId(e, t);
  }
  // #endregion
  // #region view
  findView(e) {
    return Mt.isCell(e) ? this.findViewByCell(e) : this.findViewByElem(e);
  }
  findViews(e) {
    return Se.isRectangleLike(e) ? this.findViewsInArea(e) : W.isPointLike(e) ? this.findViewsFromPoint(e) : [];
  }
  findViewByCell(e) {
    return this.renderer.findViewByCell(e);
  }
  findViewByElem(e) {
    return this.renderer.findViewByElem(e);
  }
  findViewsFromPoint(e, t) {
    const r = typeof e == "number" ? { x: e, y: t } : e;
    return this.renderer.findViewsFromPoint(r);
  }
  findViewsInArea(e, t, r, i, o) {
    const s = typeof e == "number" ? {
      x: e,
      y: t,
      width: r,
      height: i
    } : e, a = typeof e == "number" ? o : t;
    return this.renderer.findViewsInArea(s, a);
  }
  matrix(e) {
    return typeof e > "u" ? this.transform.getMatrix() : (this.transform.setMatrix(e), this);
  }
  resize(e, t) {
    const r = this.getPlugin("scroller");
    return r ? r.resize(e, t) : this.transform.resize(e, t), this;
  }
  scale(e, t = e, r = 0, i = 0) {
    return typeof e > "u" ? this.transform.getScale() : (this.transform.scale(e, t, r, i), this);
  }
  zoom(e, t) {
    const r = this.getPlugin("scroller");
    if (r) {
      if (typeof e > "u")
        return r.zoom();
      r.zoom(e, t);
    } else {
      if (typeof e > "u")
        return this.transform.getZoom();
      this.transform.zoom(e, t);
    }
    return this;
  }
  zoomTo(e, t = {}) {
    const r = this.getPlugin("scroller");
    return r ? r.zoom(e, Object.assign(Object.assign({}, t), { absolute: !0 })) : this.transform.zoom(e, Object.assign(Object.assign({}, t), { absolute: !0 })), this;
  }
  zoomToRect(e, t = {}) {
    const r = this.getPlugin("scroller");
    return r ? r.zoomToRect(e, t) : this.transform.zoomToRect(e, t), this;
  }
  zoomToFit(e = {}) {
    const t = this.getPlugin("scroller");
    return t ? t.zoomToFit(e) : this.transform.zoomToFit(e), this;
  }
  rotate(e, t, r) {
    return typeof e > "u" ? this.transform.getRotation() : (this.transform.rotate(e, t, r), this);
  }
  translate(e, t) {
    return typeof e > "u" ? this.transform.getTranslation() : (this.transform.translate(e, t), this);
  }
  translateBy(e, t) {
    const r = this.translate(), i = r.tx + e, o = r.ty + t;
    return this.translate(i, o);
  }
  getGraphArea() {
    return this.transform.getGraphArea();
  }
  getContentArea(e = {}) {
    return this.transform.getContentArea(e);
  }
  getContentBBox(e = {}) {
    return this.transform.getContentBBox(e);
  }
  fitToContent(e, t, r, i) {
    return this.transform.fitToContent(e, t, r, i);
  }
  scaleContentToFit(e = {}) {
    return this.transform.scaleContentToFit(e), this;
  }
  /**
   * Position the center of graph to the center of the viewport.
   */
  center(e) {
    return this.centerPoint(e);
  }
  centerPoint(e, t, r) {
    const i = this.getPlugin("scroller");
    return i ? i.centerPoint(e, t, r) : this.transform.centerPoint(e, t), this;
  }
  centerContent(e) {
    const t = this.getPlugin("scroller");
    return t ? t.centerContent(e) : this.transform.centerContent(e), this;
  }
  centerCell(e, t) {
    const r = this.getPlugin("scroller");
    return r ? r.centerCell(e, t) : this.transform.centerCell(e), this;
  }
  positionPoint(e, t, r, i = {}) {
    const o = this.getPlugin("scroller");
    return o ? o.positionPoint(e, t, r, i) : this.transform.positionPoint(e, t, r), this;
  }
  positionRect(e, t, r) {
    const i = this.getPlugin("scroller");
    return i ? i.positionRect(e, t, r) : this.transform.positionRect(e, t), this;
  }
  positionCell(e, t, r) {
    const i = this.getPlugin("scroller");
    return i ? i.positionCell(e, t, r) : this.transform.positionCell(e, t), this;
  }
  positionContent(e, t) {
    const r = this.getPlugin("scroller");
    return r ? r.positionContent(e, t) : this.transform.positionContent(e, t), this;
  }
  snapToGrid(e, t) {
    return this.coord.snapToGrid(e, t);
  }
  pageToLocal(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.pageToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.pageToLocalRect(e, t, r, i) : this.coord.pageToLocalPoint(e, t);
  }
  localToPage(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.localToPageRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.localToPageRect(e, t, r, i) : this.coord.localToPagePoint(e, t);
  }
  clientToLocal(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.clientToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.clientToLocalRect(e, t, r, i) : this.coord.clientToLocalPoint(e, t);
  }
  localToClient(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.localToClientRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.localToClientRect(e, t, r, i) : this.coord.localToClientPoint(e, t);
  }
  localToGraph(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.localToGraphRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.localToGraphRect(e, t, r, i) : this.coord.localToGraphPoint(e, t);
  }
  graphToLocal(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.graphToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.graphToLocalRect(e, t, r, i) : this.coord.graphToLocalPoint(e, t);
  }
  clientToGraph(e, t, r, i) {
    return Se.isRectangleLike(e) ? this.coord.clientToGraphRect(e) : typeof e == "number" && typeof t == "number" && typeof r == "number" && typeof i == "number" ? this.coord.clientToGraphRect(e, t, r, i) : this.coord.clientToGraphPoint(e, t);
  }
  // #endregion
  // #region defs
  defineFilter(e) {
    return this.defs.filter(e);
  }
  defineGradient(e) {
    return this.defs.gradient(e);
  }
  defineMarker(e) {
    return this.defs.marker(e);
  }
  // #endregion
  // #region grid
  getGridSize() {
    return this.grid.getGridSize();
  }
  setGridSize(e) {
    return this.grid.setGridSize(e), this;
  }
  showGrid() {
    return this.grid.show(), this;
  }
  hideGrid() {
    return this.grid.hide(), this;
  }
  clearGrid() {
    return this.grid.clear(), this;
  }
  drawGrid(e) {
    return this.grid.draw(e), this;
  }
  // #endregion
  // #region background
  updateBackground() {
    return this.background.update(), this;
  }
  drawBackground(e, t) {
    const r = this.getPlugin("scroller");
    return r != null && (this.options.background == null || !t) ? r.drawBackground(e, t) : this.background.draw(e), this;
  }
  clearBackground(e) {
    const t = this.getPlugin("scroller");
    return t != null && (this.options.background == null || !e) ? t.clearBackground(e) : this.background.clear(), this;
  }
  // #endregion
  // #region virtual-render
  enableVirtualRender() {
    return this.virtualRender.enableVirtualRender(), this;
  }
  disableVirtualRender() {
    return this.virtualRender.disableVirtualRender(), this;
  }
  // #endregion
  // #region mousewheel
  isMouseWheelEnabled() {
    return !this.mousewheel.disabled;
  }
  enableMouseWheel() {
    return this.mousewheel.enable(), this;
  }
  disableMouseWheel() {
    return this.mousewheel.disable(), this;
  }
  toggleMouseWheel(e) {
    return e == null ? this.isMouseWheelEnabled() ? this.disableMouseWheel() : this.enableMouseWheel() : e ? this.enableMouseWheel() : this.disableMouseWheel(), this;
  }
  // #endregion
  // #region panning
  isPannable() {
    const e = this.getPlugin("scroller");
    return e ? e.isPannable() : this.panning.pannable;
  }
  enablePanning() {
    const e = this.getPlugin("scroller");
    return e ? e.enablePanning() : this.panning.enablePanning(), this;
  }
  disablePanning() {
    const e = this.getPlugin("scroller");
    return e ? e.disablePanning() : this.panning.disablePanning(), this;
  }
  togglePanning(e) {
    return e == null ? this.isPannable() ? this.disablePanning() : this.enablePanning() : e !== this.isPannable() && (e ? this.enablePanning() : this.disablePanning()), this;
  }
  // #endregion
  // #region plugin
  use(e, ...t) {
    return this.installedPlugins.has(e) || (this.installedPlugins.add(e), e.init(this, ...t)), this;
  }
  getPlugin(e) {
    return Array.from(this.installedPlugins).find((t) => t.name === e);
  }
  getPlugins(e) {
    return Array.from(this.installedPlugins).filter((t) => e.includes(t.name));
  }
  enablePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const r = this.getPlugins(t);
    return r == null || r.forEach((i) => {
      var o;
      (o = i == null ? void 0 : i.enable) === null || o === void 0 || o.call(i);
    }), this;
  }
  disablePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const r = this.getPlugins(t);
    return r == null || r.forEach((i) => {
      var o;
      (o = i == null ? void 0 : i.disable) === null || o === void 0 || o.call(i);
    }), this;
  }
  isPluginEnabled(e) {
    var t;
    const r = this.getPlugin(e);
    return (t = r == null ? void 0 : r.isEnabled) === null || t === void 0 ? void 0 : t.call(r);
  }
  disposePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const r = this.getPlugins(t);
    return r == null || r.forEach((i) => {
      i.dispose(), this.installedPlugins.delete(i);
    }), this;
  }
  // #endregion
  // #region dispose
  dispose(e = !0) {
    e && this.model.dispose(), this.css.dispose(), this.defs.dispose(), this.grid.dispose(), this.coord.dispose(), this.transform.dispose(), this.highlight.dispose(), this.background.dispose(), this.mousewheel.dispose(), this.panning.dispose(), this.view.dispose(), this.renderer.dispose(), this.installedPlugins.forEach((t) => {
      t.dispose();
    });
  }
};
VTe([
  Fn.dispose()
], Ee.prototype, "dispose", null);
(function(n) {
  n.View = jf, n.Renderer = DL, n.MouseWheel = ML, n.DefsManager = _q, n.GridManager = PL, n.CoordManager = Cq, n.TransformManager = xq, n.HighlightManager = sx, n.BackgroundManager = EL, n.PanningManager = kL;
})(Ee || (Ee = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const r = t[Symbol.toStringTag];
    return r == null || r === n.toStringTag;
  }
  n.isGraph = e;
})(Ee || (Ee = {}));
(function(n) {
  function e(t, r) {
    const i = t instanceof HTMLElement ? new n({ container: t }) : new n(t);
    return r != null && i.fromJSON(r), i;
  }
  n.render = e;
})(Ee || (Ee = {}));
(function(n) {
  n.registerNode = sr.registry.register, n.registerEdge = Yn.registry.register, n.registerView = ir.registry.register, n.registerAttr = ul.registry.register, n.registerGrid = Ju.registry.register, n.registerFilter = fg.registry.register, n.registerNodeTool = gg.registry.register, n.registerEdgeTool = vg.registry.register, n.registerBackground = Wy.registry.register, n.registerHighlighter = Zl.registry.register, n.registerPortLayout = _f.registry.register, n.registerPortLabelLayout = dg.registry.register, n.registerMarker = Ac.registry.register, n.registerRouter = ec.registry.register, n.registerConnector = Cf.registry.register, n.registerAnchor = mg.registry.register, n.registerEdgeAnchor = yg.registry.register, n.registerConnectionPoint = bg.registry.register;
})(Ee || (Ee = {}));
(function(n) {
  n.unregisterNode = sr.registry.unregister, n.unregisterEdge = Yn.registry.unregister, n.unregisterView = ir.registry.unregister, n.unregisterAttr = ul.registry.unregister, n.unregisterGrid = Ju.registry.unregister, n.unregisterFilter = fg.registry.unregister, n.unregisterNodeTool = gg.registry.unregister, n.unregisterEdgeTool = vg.registry.unregister, n.unregisterBackground = Wy.registry.unregister, n.unregisterHighlighter = Zl.registry.unregister, n.unregisterPortLayout = _f.registry.unregister, n.unregisterPortLabelLayout = dg.registry.unregister, n.unregisterMarker = Ac.registry.unregister, n.unregisterRouter = ec.registry.unregister, n.unregisterConnector = Cf.registry.unregister, n.unregisterAnchor = mg.registry.unregister, n.unregisterEdgeAnchor = yg.registry.unregister, n.unregisterConnectionPoint = bg.registry.unregister;
})(Ee || (Ee = {}));
var zTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
}, FTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class Sg extends sr {
}
(function(n) {
  class e extends Zo {
    init() {
      super.init(), this.cell.on("change:*", this.onCellChangeAny, this);
    }
    onCellChangeAny({ key: r }) {
      const i = n.shapeMaps[this.cell.shape];
      if (i) {
        const { effect: o } = i;
        (!o || o.includes(r)) && this.renderHTMLComponent();
      }
    }
    confirmUpdate(r) {
      const i = super.confirmUpdate(r);
      return this.handleAction(i, e.action, () => this.renderHTMLComponent());
    }
    renderHTMLComponent() {
      const r = this.selectors && this.selectors.foContent;
      if (r) {
        lb(r);
        const i = n.shapeMaps[this.cell.shape];
        if (!i)
          return;
        let { html: o } = i;
        typeof o == "function" && (o = o(this.cell)), o && (typeof o == "string" ? r.innerHTML = o : Kc(r, o));
      }
    }
    dispose() {
      this.cell.off("change:*", this.onCellChangeAny, this);
    }
  }
  zTe([
    e.dispose()
  ], e.prototype, "dispose", null), n.View = e, function(t) {
    t.action = "html", t.config({
      bootstrap: [t.action],
      actions: {
        html: t.action
      }
    }), Zo.registry.register("html-view", t, !0);
  }(e = n.View || (n.View = {}));
})(Sg || (Sg = {}));
(function(n) {
  n.config({
    view: "html-view",
    markup: [
      {
        tagName: "rect",
        selector: "body"
      },
      Object.assign({}, On.getForeignObjectMarkup()),
      {
        tagName: "text",
        selector: "label"
      }
    ],
    attrs: {
      body: {
        fill: "none",
        stroke: "none",
        refWidth: "100%",
        refHeight: "100%"
      },
      fo: {
        refWidth: "100%",
        refHeight: "100%"
      }
    }
  }), sr.registry.register("html", n, !0);
})(Sg || (Sg = {}));
(function(n) {
  n.shapeMaps = {};
  function e(t) {
    const { shape: r, html: i, effect: o, inherit: s } = t, a = FTe(t, ["shape", "html", "effect", "inherit"]);
    if (!r)
      throw new Error("should specify shape in config");
    n.shapeMaps[r] = {
      html: i,
      effect: o
    }, Ee.registerNode(r, Object.assign({ inherit: s || "html" }, a), !0);
  }
  n.register = e;
})(Sg || (Sg = {}));
class w5 extends sr {
}
(function(n) {
  function e(t) {
    const r = [], i = On.getForeignObjectMarkup();
    return t ? r.push({
      tagName: t,
      selector: "body"
    }, i) : r.push(i), r;
  }
  n.config({
    view: "vue-shape-view",
    markup: e(),
    attrs: {
      body: {
        fill: "none",
        stroke: "none",
        refWidth: "100%",
        refHeight: "100%"
      },
      fo: {
        refWidth: "100%",
        refHeight: "100%"
      }
    },
    propHooks(t) {
      if (t.markup == null) {
        const r = t.primer;
        if (r) {
          t.markup = e(r);
          let i = {};
          switch (r) {
            case "circle":
              i = {
                refCx: "50%",
                refCy: "50%",
                refR: "50%"
              };
              break;
            case "ellipse":
              i = {
                refCx: "50%",
                refCy: "50%",
                refRx: "50%",
                refRy: "50%"
              };
              break;
          }
          t.attrs = jn({}, {
            body: Object.assign({ refWidth: null, refHeight: null }, i)
          }, t.attrs || {});
        }
      }
      return t;
    }
  }), sr.registry.register("vue-shape", n, !0);
})(w5 || (w5 = {}));
var QTe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
const Pq = {};
function x4t(n) {
  const { shape: e, component: t, inherit: r } = n, i = QTe(n, ["shape", "component", "inherit"]);
  if (!e)
    throw new Error("should specify shape in config");
  Pq[e] = {
    component: t
  }, Ee.registerNode(e, Object.assign({ inherit: r || "vue-shape" }, i), !0);
}
let v_ = !1;
const ax = Si({});
function ZTe(n, e, t, r, i) {
  v_ && (ax[n] = Yie(U({
    render: () => nt(NS, { to: t }, [nt(e, { node: r, graph: i })]),
    provide: () => ({
      getNode: () => r,
      getGraph: () => i
    })
  })));
}
function WTe(n) {
  v_ && delete ax[n];
}
function x5() {
  return v_;
}
function S4t() {
  return v_ = !0, U({
    setup() {
      return () => nt(pr, {}, Object.keys(ax).map((n) => nt(ax[n])));
    }
  });
}
class lx extends Zo {
  getComponentContainer() {
    return this.selectors && this.selectors.foContent;
  }
  confirmUpdate(e) {
    const t = super.confirmUpdate(e);
    return this.handleAction(t, lx.action, () => {
      this.renderVueComponent();
    });
  }
  targetId() {
    return `${this.graph.view.cid}:${this.cell.id}`;
  }
  renderVueComponent() {
    this.unmountVueComponent();
    const e = this.getComponentContainer(), t = this.cell, r = this.graph;
    if (e) {
      const { component: i } = Pq[t.shape];
      i && (x5() ? ZTe(this.targetId(), i, e, t, r) : (this.vm = Xie({
        render() {
          return nt(i, { node: t, graph: r });
        },
        provide() {
          return {
            getNode: () => t,
            getGraph: () => r
          };
        }
      }), this.vm.mount(e)));
    }
  }
  unmountVueComponent() {
    const e = this.getComponentContainer();
    return this.vm && (this.vm.unmount(), this.vm = null), e && (e.innerHTML = ""), e;
  }
  onMouseDown(e, t, r) {
    const i = e.target;
    if (i.tagName.toLowerCase() === "input") {
      const s = i.getAttribute("type");
      if (s == null || [
        "text",
        "password",
        "number",
        "email",
        "search",
        "tel",
        "url"
      ].includes(s))
        return;
    }
    super.onMouseDown(e, t, r);
  }
  unmount() {
    return x5() && WTe(this.targetId()), this.unmountVueComponent(), super.unmount(), this;
  }
}
(function(n) {
  n.action = "vue", n.config({
    bootstrap: [n.action],
    actions: {
      component: n.action
    }
  }), Zo.registry.register("vue-shape-view", n, !0);
})(lx || (lx = {}));
const GTe = `.x6-widget-dnd {
  position: absolute;
  top: -10000px;
  left: -10000px;
  z-index: 999999;
  display: none;
  cursor: move;
  opacity: 0.7;
  pointer-events: 'cursor';
}
.x6-widget-dnd.dragging {
  display: inline-block;
}
.x6-widget-dnd.dragging * {
  pointer-events: none !important;
}
.x6-widget-dnd .x6-graph {
  background: transparent;
  box-shadow: none;
}
`;
var jTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class _g extends xn {
  get targetScroller() {
    return this.options.target.getPlugin("scroller");
  }
  get targetGraph() {
    return this.options.target;
  }
  get targetModel() {
    return this.targetGraph.model;
  }
  get snapline() {
    return this.options.target.getPlugin("snapline");
  }
  constructor(e) {
    super(), this.name = "dnd", this.options = Object.assign(Object.assign({}, _g.defaults), e), this.init();
  }
  init() {
    a_(this.name, GTe), this.container = document.createElement("div"), rt(this.container, this.prefixClassName("widget-dnd")), this.draggingGraph = new Ee(Object.assign(Object.assign({}, this.options.delegateGraphOptions), { container: document.createElement("div"), width: 1, height: 1, async: !1 })), Kc(this.container, this.draggingGraph.container);
  }
  start(e, t) {
    const r = t;
    r.preventDefault(), this.targetModel.startBatch("dnd"), rt(this.container, "dragging"), Xm(this.container, this.options.draggingContainer || document.body), this.sourceNode = e, this.prepareDragging(e, r.clientX, r.clientY);
    const i = this.updateNodePosition(r.clientX, r.clientY);
    this.isSnaplineEnabled() && (this.snapline.captureCursorOffset({
      e: r,
      node: e,
      cell: e,
      view: this.draggingView,
      x: i.x,
      y: i.y
    }), this.draggingNode.on("change:position", this.snap, this)), this.delegateDocumentEvents(_g.documentEvents, r.data);
  }
  isSnaplineEnabled() {
    return this.snapline && this.snapline.isEnabled();
  }
  prepareDragging(e, t, r) {
    const i = this.draggingGraph, o = i.model, s = this.options.getDragNode(e, {
      sourceNode: e,
      draggingGraph: i,
      targetGraph: this.targetGraph
    });
    s.position(0, 0);
    let a = 5;
    if (this.isSnaplineEnabled() && (a += this.snapline.options.tolerance || 0), this.isSnaplineEnabled() || this.options.scaled) {
      const c = this.targetGraph.transform.getScale();
      i.scale(c.sx, c.sy), a *= Math.max(c.sx, c.sy);
    } else
      i.scale(1, 1);
    this.clearDragging(), o.resetCells([s]);
    const l = i.findViewByCell(s);
    l.undelegateEvents(), l.cell.off("changed"), i.fitToContent({
      padding: a,
      allowNewOrigin: "any",
      useCellGeometry: !1
    });
    const u = l.getBBox();
    this.geometryBBox = l.getBBox({ useCellGeometry: !0 }), this.delta = this.geometryBBox.getTopLeft().diff(u.getTopLeft()), this.draggingNode = s, this.draggingView = l, this.draggingBBox = s.getBBox(), this.padding = a, this.originOffset = this.updateGraphPosition(t, r);
  }
  updateGraphPosition(e, t) {
    const r = document.body.scrollTop || document.documentElement.scrollTop, i = document.body.scrollLeft || document.documentElement.scrollLeft, o = this.delta, s = this.geometryBBox, a = this.padding || 5, l = {
      left: e - o.x - s.width / 2 - a + i,
      top: t - o.y - s.height / 2 - a + r
    };
    return this.draggingGraph && xr(this.container, {
      left: `${l.left}px`,
      top: `${l.top}px`
    }), l;
  }
  updateNodePosition(e, t) {
    const r = this.targetGraph.clientToLocal(e, t), i = this.draggingBBox;
    return r.x -= i.width / 2, r.y -= i.height / 2, this.draggingNode.position(r.x, r.y), r;
  }
  snap({ cell: e, current: t, options: r }) {
    const i = e;
    if (r.snapped) {
      const o = this.draggingBBox;
      i.position(o.x + r.tx, o.y + r.ty, { silent: !0 }), this.draggingView.translate(), i.position(t.x, t.y, { silent: !0 }), this.snapOffset = {
        x: r.tx,
        y: r.ty
      };
    } else
      this.snapOffset = null;
  }
  onDragging(e) {
    const t = this.draggingView;
    if (t) {
      e.preventDefault();
      const r = this.normalizeEvent(e), i = r.clientX, o = r.clientY;
      this.updateGraphPosition(i, o);
      const s = this.updateNodePosition(i, o), a = this.targetGraph.options.embedding.enabled, l = (a || this.isSnaplineEnabled()) && this.isInsideValidArea({
        x: i,
        y: o
      });
      if (a) {
        t.setEventData(r, {
          graph: this.targetGraph,
          candidateEmbedView: this.candidateEmbedView
        });
        const u = t.getEventData(r);
        l ? t.processEmbedding(r, u) : t.clearEmbedding(u), this.candidateEmbedView = u.candidateEmbedView;
      }
      this.isSnaplineEnabled() && (l ? this.snapline.snapOnMoving({
        e: r,
        view: t,
        x: s.x,
        y: s.y
      }) : this.snapline.hide());
    }
  }
  onDragEnd(e) {
    const t = this.draggingNode;
    if (t) {
      const r = this.normalizeEvent(e), i = this.draggingView, o = this.draggingBBox, s = this.snapOffset;
      let a = o.x, l = o.y;
      s && (a += s.x, l += s.y), t.position(a, l, { silent: !0 });
      const u = this.drop(t, { x: r.clientX, y: r.clientY }), c = (h) => {
        h ? (this.onDropped(t), this.targetGraph.options.embedding.enabled && i && (i.setEventData(r, {
          cell: h,
          graph: this.targetGraph,
          candidateEmbedView: this.candidateEmbedView
        }), i.finalizeEmbedding(r, i.getEventData(r)))) : this.onDropInvalid(), this.candidateEmbedView = null, this.targetModel.stopBatch("dnd");
      };
      eE(u) ? (this.undelegateDocumentEvents(), u.then(c)) : c(u);
    }
  }
  clearDragging() {
    this.draggingNode && (this.sourceNode = null, this.draggingNode.remove(), this.draggingNode = null, this.draggingView = null, this.delta = null, this.padding = null, this.snapOffset = null, this.originOffset = null, this.undelegateDocumentEvents());
  }
  onDropped(e) {
    this.draggingNode === e && (this.clearDragging(), hr(this.container, "dragging"), Ja(this.container));
  }
  onDropInvalid() {
    const e = this.draggingNode;
    e && this.onDropped(e);
  }
  isInsideValidArea(e) {
    let t, r = null;
    const i = this.targetGraph, o = this.targetScroller;
    this.options.dndContainer && (r = this.getDropArea(this.options.dndContainer));
    const s = r && r.containsPoint(e);
    if (o)
      if (o.options.autoResize)
        t = this.getDropArea(o.container);
      else {
        const a = this.getDropArea(o.container);
        t = this.getDropArea(i.container).intersectsWithRect(a);
      }
    else
      t = this.getDropArea(i.container);
    return !s && t && t.containsPoint(e);
  }
  getDropArea(e) {
    const t = sE(e), r = document.body.scrollTop || document.documentElement.scrollTop, i = document.body.scrollLeft || document.documentElement.scrollLeft;
    return Se.create({
      x: t.left + parseInt(xr(e, "border-left-width"), 10) - i,
      y: t.top + parseInt(xr(e, "border-top-width"), 10) - r,
      width: e.clientWidth,
      height: e.clientHeight
    });
  }
  drop(e, t) {
    if (this.isInsideValidArea(t)) {
      const r = this.targetGraph, i = r.model, o = r.clientToLocal(t), s = this.sourceNode, a = this.options.getDropNode(e, {
        sourceNode: s,
        draggingNode: e,
        targetGraph: this.targetGraph,
        draggingGraph: this.draggingGraph
      }), l = a.getBBox();
      o.x += l.x - l.width / 2, o.y += l.y - l.height / 2;
      const u = this.snapOffset ? 1 : r.getGridSize();
      a.position(Xt.snapToGrid(o.x, u), Xt.snapToGrid(o.y, u)), a.removeZIndex();
      const c = this.options.validateNode, h = c ? c(a, {
        sourceNode: s,
        draggingNode: e,
        droppingNode: a,
        targetGraph: r,
        draggingGraph: this.draggingGraph
      }) : !0;
      return typeof h == "boolean" ? h ? (i.addCell(a, { stencil: this.cid }), a) : null : RSe(h).then((f) => f ? (i.addCell(a, { stencil: this.cid }), a) : null);
    }
    return null;
  }
  onRemove() {
    this.draggingGraph && (this.draggingGraph.view.remove(), this.draggingGraph.dispose());
  }
  dispose() {
    this.remove(), l_(this.name);
  }
}
jTe([
  xn.dispose()
], _g.prototype, "dispose", null);
(function(n) {
  n.defaults = {
    // animation: false,
    getDragNode: (e) => e.clone(),
    getDropNode: (e) => e.clone()
  }, n.documentEvents = {
    mousemove: "onDragging",
    touchmove: "onDragging",
    mouseup: "onDragEnd",
    touchend: "onDragEnd",
    touchcancel: "onDragEnd"
  };
})(_g || (_g = {}));
var HTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Eq extends xn {
  get model() {
    return this.graph.model;
  }
  get view() {
    return this.graph.renderer.findViewByCell(this.node);
  }
  get containerClassName() {
    return this.prefixClassName("widget-transform");
  }
  get resizeClassName() {
    return `${this.containerClassName}-resize`;
  }
  get rotateClassName() {
    return `${this.containerClassName}-rotate`;
  }
  constructor(e, t, r) {
    super(), this.node = t, this.graph = r, this.options = Object.assign(Object.assign({}, br.defaultOptions), e), this.render(), this.startListening();
  }
  startListening() {
    this.delegateEvents({
      [`mousedown .${this.resizeClassName}`]: "startResizing",
      [`touchstart .${this.resizeClassName}`]: "startResizing",
      [`mousedown .${this.rotateClassName}`]: "startRotating",
      [`touchstart .${this.rotateClassName}`]: "startRotating"
    }), this.model.on("*", this.update, this), this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this), this.node.on("removed", this.remove, this), this.model.on("reseted", this.remove, this), this.view.on("cell:knob:mousedown", this.onKnobMouseDown, this), this.view.on("cell:knob:mouseup", this.onKnobMouseUp, this);
  }
  stopListening() {
    this.undelegateEvents(), this.model.off("*", this.update, this), this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this), this.node.off("removed", this.remove, this), this.model.off("reseted", this.remove, this), this.view.off("cell:knob:mousedown", this.onKnobMouseDown, this), this.view.off("cell:knob:mouseup", this.onKnobMouseUp, this);
  }
  renderHandles() {
    this.container = document.createElement("div");
    const e = document.createElement("div");
    Qt(e, "draggable", "false");
    const t = e.cloneNode(!0);
    rt(t, this.rotateClassName);
    const r = br.POSITIONS.map((i) => {
      const o = e.cloneNode(!0);
      return rt(o, this.resizeClassName), Qt(o, "data-position", i), o;
    });
    this.empty(), Kc(this.container, [...r, t]);
  }
  render() {
    return this.renderHandles(), this.view && this.view.addClass(br.NODE_CLS), rt(this.container, this.containerClassName), Ym(this.container, "no-orth-resize", this.options.preserveAspectRatio || !this.options.orthogonalResizing), Ym(this.container, "no-resize", !this.options.resizable), Ym(this.container, "no-rotate", !this.options.rotatable), this.options.className && rt(this.container, this.options.className), this.graph.container.appendChild(this.container), this.update();
  }
  update() {
    const e = this.graph.matrix(), t = this.node.getBBox();
    t.x *= e.a, t.x += e.e, t.y *= e.d, t.y += e.f, t.width *= e.a, t.height *= e.d;
    const r = Wt.normalize(this.node.getAngle()), i = r !== 0 ? `rotate(${r}deg)` : "";
    return xr(this.container, {
      transform: i,
      width: t.width,
      height: t.height,
      left: t.x,
      top: t.y
    }), this.updateResizerDirections(), this;
  }
  remove() {
    return this.view && this.view.removeClass(br.NODE_CLS), super.remove();
  }
  onKnobMouseDown() {
    this.startHandle();
  }
  onKnobMouseUp() {
    this.stopHandle();
  }
  updateResizerDirections() {
    const e = Wt.normalize(this.node.getAngle()), t = Math.floor(e * (br.DIRECTIONS.length / 360));
    if (t !== this.prevShift) {
      const r = br.DIRECTIONS.slice(t).concat(br.DIRECTIONS.slice(0, t)), i = (s) => `${this.containerClassName}-cursor-${s}`;
      this.container.querySelectorAll(`.${this.resizeClassName}`).forEach((s, a) => {
        hr(s, br.DIRECTIONS.map((l) => i(l)).join(" ")), rt(s, i(r[a]));
      }), this.prevShift = t;
    }
  }
  getTrueDirection(e) {
    const t = Wt.normalize(this.node.getAngle());
    let r = br.POSITIONS.indexOf(e);
    return r += Math.floor(t * (br.POSITIONS.length / 360)), r %= br.POSITIONS.length, br.POSITIONS[r];
  }
  toValidResizeDirection(e) {
    return {
      top: "top-left",
      bottom: "bottom-right",
      left: "bottom-left",
      right: "top-right"
    }[e] || e;
  }
  startResizing(e) {
    e.stopPropagation(), this.model.startBatch("resize", { cid: this.cid });
    const t = Qt(e.target, "data-position");
    this.prepareResizing(e, t), this.startAction(e);
  }
  prepareResizing(e, t) {
    const r = this.getTrueDirection(t);
    let i = 0, o = 0;
    t.split("-").forEach((u) => {
      i = { left: -1, right: 1 }[u] || i, o = { top: -1, bottom: 1 }[u] || o;
    });
    const s = this.toValidResizeDirection(t), a = {
      "top-right": "bottomLeft",
      "top-left": "bottomRight",
      "bottom-left": "topRight",
      "bottom-right": "topLeft"
    }[s], l = Wt.normalize(this.node.getAngle());
    this.setEventData(e, {
      selector: a,
      direction: s,
      trueDirection: r,
      relativeDirection: t,
      angle: l,
      resizeX: i,
      resizeY: o,
      action: "resizing"
    });
  }
  startRotating(e) {
    e.stopPropagation(), this.model.startBatch("rotate", { cid: this.cid });
    const t = this.node.getBBox().getCenter(), r = this.normalizeEvent(e), i = this.graph.snapToGrid(r.clientX, r.clientY);
    this.setEventData(e, {
      center: t,
      action: "rotating",
      angle: Wt.normalize(this.node.getAngle()),
      start: W.create(i).theta(t)
    }), this.startAction(e);
  }
  onMouseMove(e) {
    const t = this.graph.findViewByCell(this.node);
    let r = this.getEventData(e);
    if (r.action) {
      const i = this.normalizeEvent(e);
      let o = i.clientX, s = i.clientY;
      const a = this.graph.getPlugin("scroller"), l = this.options.restrictedResizing;
      if (l === !0 || typeof l == "number") {
        const d = l === !0 ? 0 : l, p = a ? Math.max(d, 8) : d, g = this.graph.container.getBoundingClientRect();
        o = so(o, g.left + p, g.right - p), s = so(s, g.top + p, g.bottom - p);
      } else
        this.options.autoScrollOnResizing && a && a.autoScroll(o, s);
      const u = this.graph.snapToGrid(o, s), c = this.graph.getGridSize(), h = this.node, f = this.options;
      if (r.action === "resizing") {
        r = r, r.resized || (t && (t.addClass("node-resizing"), this.notify("node:resize", e, t)), r.resized = !0);
        const d = h.getBBox(), p = W.create(u).rotate(r.angle, d.getCenter()).diff(d[r.selector]);
        let g = r.resizeX ? p.x * r.resizeX : d.width, v = r.resizeY ? p.y * r.resizeY : d.height;
        const m = g, y = v;
        if (g = Xt.snapToGrid(g, c), v = Xt.snapToGrid(v, c), g = Math.max(g, f.minWidth || c), v = Math.max(v, f.minHeight || c), g = Math.min(g, f.maxWidth || 1 / 0), v = Math.min(v, f.maxHeight || 1 / 0), f.preserveAspectRatio) {
          const O = d.width * v / d.height, w = d.height * g / d.width;
          g < O ? v = w : g = O;
        }
        const b = r.relativeDirection;
        if (f.allowReverse && (m <= -g || y <= -v)) {
          let O;
          b === "left" ? m <= -g && (O = "right") : b === "right" ? m <= -g && (O = "left") : b === "top" ? y <= -v && (O = "bottom") : b === "bottom" ? y <= -v && (O = "top") : b === "top-left" ? m <= -g && y <= -v ? O = "bottom-right" : m <= -g ? O = "top-right" : y <= -v && (O = "bottom-left") : b === "top-right" ? m <= -g && y <= -v ? O = "bottom-left" : m <= -g ? O = "top-left" : y <= -v && (O = "bottom-right") : b === "bottom-left" ? m <= -g && y <= -v ? O = "top-right" : m <= -g ? O = "bottom-right" : y <= -v && (O = "top-left") : b === "bottom-right" && (m <= -g && y <= -v ? O = "top-left" : m <= -g ? O = "bottom-left" : y <= -v && (O = "top-right"));
          const w = O;
          this.stopHandle();
          const x = this.container.querySelector(`.${this.resizeClassName}[data-position="${w}"]`);
          this.startHandle(x), this.prepareResizing(e, w), this.onMouseMove(e);
        }
        if (d.width !== g || d.height !== v) {
          const O = {
            ui: !0,
            direction: r.direction,
            relativeDirection: r.relativeDirection,
            trueDirection: r.trueDirection,
            minWidth: f.minWidth,
            minHeight: f.minHeight,
            maxWidth: f.maxWidth,
            maxHeight: f.maxHeight,
            preserveAspectRatio: f.preserveAspectRatio === !0
          };
          h.resize(g, v, O), this.notify("node:resizing", e, t);
        }
      } else if (r.action === "rotating") {
        r = r, r.rotated || (t && (t.addClass("node-rotating"), this.notify("node:rotate", e, t)), r.rotated = !0);
        const d = h.getAngle(), p = r.start - W.create(u).theta(r.center);
        let g = r.angle + p;
        f.rotateGrid && (g = Xt.snapToGrid(g, f.rotateGrid)), g = Wt.normalize(g), d !== g && (h.rotate(g, { absolute: !0 }), this.notify("node:rotating", e, t));
      }
    }
  }
  onMouseUp(e) {
    const t = this.getEventData(e);
    t.action && (this.stopAction(e), this.model.stopBatch(t.action === "resizing" ? "resize" : "rotate", {
      cid: this.cid
    }));
  }
  startHandle(e) {
    if (this.handle = e || null, rt(this.container, `${this.containerClassName}-active`), e) {
      rt(e, `${this.containerClassName}-active-handle`);
      const t = e.getAttribute("data-position");
      if (t) {
        const r = br.DIRECTIONS[br.POSITIONS.indexOf(t)];
        rt(this.container, `${this.containerClassName}-cursor-${r}`);
      }
    }
  }
  stopHandle() {
    if (hr(this.container, `${this.containerClassName}-active`), this.handle) {
      hr(this.handle, `${this.containerClassName}-active-handle`);
      const e = this.handle.getAttribute("data-position");
      if (e) {
        const t = br.DIRECTIONS[br.POSITIONS.indexOf(e)];
        hr(this.container, `${this.containerClassName}-cursor-${t}`);
      }
      this.handle = null;
    }
  }
  startAction(e) {
    this.startHandle(e.target), this.graph.view.undelegateEvents(), this.delegateDocumentEvents(br.documentEvents, e.data);
  }
  stopAction(e) {
    this.stopHandle(), this.undelegateDocumentEvents(), this.graph.view.delegateEvents();
    const t = this.graph.findViewByCell(this.node), r = this.getEventData(e);
    t && (t.removeClass(`node-${r.action}`), r.action === "resizing" && r.resized ? this.notify("node:resized", e, t) : r.action === "rotating" && r.rotated && this.notify("node:rotated", e, t));
  }
  notify(e, t, r, i = {}) {
    if (r) {
      const o = r.graph, s = o.view.normalizeEvent(t), a = o.snapToGrid(s.clientX, s.clientY);
      this.trigger(e, Object.assign({
        e: s,
        view: r,
        node: r.cell,
        cell: r.cell,
        x: a.x,
        y: a.y
      }, i));
    }
  }
  dispose() {
    this.stopListening(), this.remove(), this.off();
  }
}
HTe([
  xn.dispose()
], Eq.prototype, "dispose", null);
var br;
(function(n) {
  n.NODE_CLS = "has-widget-transform", n.DIRECTIONS = ["nw", "n", "ne", "e", "se", "s", "sw", "w"], n.POSITIONS = [
    "top-left",
    "top",
    "top-right",
    "right",
    "bottom-right",
    "bottom",
    "bottom-left",
    "left"
  ], n.documentEvents = {
    mousemove: "onMouseMove",
    touchmove: "onMouseMove",
    mouseup: "onMouseUp",
    touchend: "onMouseUp"
  }, n.defaultOptions = {
    minWidth: 0,
    minHeight: 0,
    maxWidth: 1 / 0,
    maxHeight: 1 / 0,
    rotateGrid: 15,
    rotatable: !0,
    preserveAspectRatio: !1,
    orthogonalResizing: !0,
    restrictedResizing: !1,
    autoScrollOnResizing: !0,
    allowReverse: !0
  };
})(br || (br = {}));
const qTe = `.x6-widget-transform {
  position: absolute;
  box-sizing: content-box !important;
  margin: -5px 0 0 -5px;
  padding: 4px;
  border: 1px dashed #000;
  border-radius: 5px;
  user-select: none;
  pointer-events: none;
}
.x6-widget-transform > div {
  position: absolute;
  box-sizing: border-box;
  background-color: #fff;
  border: 1px solid #000;
  transition: background-color 0.2s;
  pointer-events: auto;
  -webkit-user-drag: none;
  user-drag: none;
  /* stylelint-disable-line */
}
.x6-widget-transform > div:hover {
  background-color: #d3d3d3;
}
.x6-widget-transform-cursor-n {
  cursor: n-resize;
}
.x6-widget-transform-cursor-s {
  cursor: s-resize;
}
.x6-widget-transform-cursor-e {
  cursor: e-resize;
}
.x6-widget-transform-cursor-w {
  cursor: w-resize;
}
.x6-widget-transform-cursor-ne {
  cursor: ne-resize;
}
.x6-widget-transform-cursor-nw {
  cursor: nw-resize;
}
.x6-widget-transform-cursor-se {
  cursor: se-resize;
}
.x6-widget-transform-cursor-sw {
  cursor: sw-resize;
}
.x6-widget-transform-resize {
  width: 10px;
  height: 10px;
  border-radius: 6px;
}
.x6-widget-transform-resize[data-position='top-left'] {
  top: -5px;
  left: -5px;
}
.x6-widget-transform-resize[data-position='top-right'] {
  top: -5px;
  right: -5px;
}
.x6-widget-transform-resize[data-position='bottom-left'] {
  bottom: -5px;
  left: -5px;
}
.x6-widget-transform-resize[data-position='bottom-right'] {
  right: -5px;
  bottom: -5px;
}
.x6-widget-transform-resize[data-position='top'] {
  top: -5px;
  left: 50%;
  margin-left: -5px;
}
.x6-widget-transform-resize[data-position='bottom'] {
  bottom: -5px;
  left: 50%;
  margin-left: -5px;
}
.x6-widget-transform-resize[data-position='left'] {
  top: 50%;
  left: -5px;
  margin-top: -5px;
}
.x6-widget-transform-resize[data-position='right'] {
  top: 50%;
  right: -5px;
  margin-top: -5px;
}
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='top'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='bottom'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='left'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='right'] {
  display: none;
}
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='bottom'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='left'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='right'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='top'] {
  display: none;
}
.x6-widget-transform.no-resize .x6-widget-transform-resize {
  display: none;
}
.x6-widget-transform-rotate {
  top: -20px;
  left: -20px;
  width: 12px;
  height: 12px;
  border-radius: 6px;
  cursor: crosshair;
}
.x6-widget-transform.no-rotate .x6-widget-transform-rotate {
  display: none;
}
.x6-widget-transform-active {
  border-color: transparent;
  pointer-events: all;
}
.x6-widget-transform-active > div {
  display: none;
}
.x6-widget-transform-active > .x6-widget-transform-active-handle {
  display: block;
  background-color: #808080;
}
`;
Ee.prototype.createTransformWidget = function(n) {
  const e = this.getPlugin("transform");
  return e && e.createWidget(n), this;
};
Ee.prototype.clearTransformWidgets = function() {
  const n = this.getPlugin("transform");
  return n && n.clearWidgets(), this;
};
var YTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Cg extends Fn {
  constructor(e = {}) {
    super(), this.name = "transform", this.widgets = /* @__PURE__ */ new Map(), this.disabled = !1, this.options = e, a_(this.name, qTe);
  }
  init(e) {
    this.graph = e, !this.disabled && this.startListening();
  }
  startListening() {
    this.graph.on("node:click", this.onNodeClick, this), this.graph.on("blank:mousedown", this.onBlankMouseDown, this);
  }
  stopListening() {
    this.graph.off("node:click", this.onNodeClick, this), this.graph.off("blank:mousedown", this.onBlankMouseDown, this);
  }
  enable() {
    this.disabled && (this.disabled = !1, this.startListening());
  }
  disable() {
    this.disabled || (this.disabled = !0, this.stopListening());
  }
  isEnabled() {
    return !this.disabled;
  }
  createWidget(e) {
    this.clearWidgets();
    const t = this.createTransform(e);
    t && (this.widgets.set(e, t), t.on("*", (r, i) => {
      this.trigger(r, i), this.graph.trigger(r, i);
    }));
  }
  onNodeClick({ node: e }) {
    this.createWidget(e);
  }
  onBlankMouseDown() {
    this.clearWidgets();
  }
  createTransform(e) {
    const t = this.getTransformOptions(e);
    return t.resizable || t.rotatable ? new Eq(t, e, this.graph) : null;
  }
  getTransformOptions(e) {
    this.options.resizing || (this.options.resizing = {
      enabled: !1
    }), this.options.rotating || (this.options.rotating = {
      enabled: !1
    }), typeof this.options.resizing == "boolean" && (this.options.resizing = {
      enabled: this.options.resizing
    }), typeof this.options.rotating == "boolean" && (this.options.rotating = {
      enabled: this.options.rotating
    });
    const t = Cg.parseOptionGroup(this.graph, e, this.options.resizing), r = Cg.parseOptionGroup(this.graph, e, this.options.rotating);
    return {
      resizable: !!t.enabled,
      minWidth: t.minWidth || 0,
      maxWidth: t.maxWidth || Number.MAX_SAFE_INTEGER,
      minHeight: t.minHeight || 0,
      maxHeight: t.maxHeight || Number.MAX_SAFE_INTEGER,
      orthogonalResizing: typeof t.orthogonal == "boolean" ? t.orthogonal : !0,
      restrictedResizing: !!t.restrict,
      autoScrollOnResizing: typeof t.autoScroll == "boolean" ? t.autoScroll : !0,
      preserveAspectRatio: !!t.preserveAspectRatio,
      allowReverse: typeof t.allowReverse == "boolean" ? t.allowReverse : !0,
      rotatable: !!r.enabled,
      rotateGrid: r.grid || 15
    };
  }
  clearWidgets() {
    this.widgets.forEach((e, t) => {
      this.graph.getCellById(t.id) && e.dispose();
    }), this.widgets.clear();
  }
  dispose() {
    this.clearWidgets(), this.stopListening(), this.off(), l_(this.name);
  }
}
YTe([
  Fn.dispose()
], Cg.prototype, "dispose", null);
(function(n) {
  function e(t, r, i) {
    const o = {};
    return Object.keys(i || {}).forEach((s) => {
      const a = i[s];
      o[s] = typeof a == "function" ? a.call(t, r) : a;
    }), o;
  }
  n.parseOptionGroup = e;
})(Cg || (Cg = {}));
var XTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class kq extends xn {
  get graph() {
    return this.options.graph;
  }
  get boxClassName() {
    return this.prefixClassName(Ki.classNames.box);
  }
  get $boxes() {
    return XSe(this.container, this.boxClassName);
  }
  get handleOptions() {
    return this.options;
  }
  constructor(e) {
    super(), this.options = e, this.options.model && (this.options.collection = this.options.model.collection), this.options.collection ? this.collection = this.options.collection : (this.collection = new ox([], {
      comparator: Ki.depthComparator
    }), this.options.collection = this.collection), this.boxCount = 0, this.createContainer(), this.startListening();
  }
  startListening() {
    const e = this.graph, t = this.collection;
    this.delegateEvents({
      [`mousedown .${this.boxClassName}`]: "onSelectionBoxMouseDown",
      [`touchstart .${this.boxClassName}`]: "onSelectionBoxMouseDown"
    }, !0), e.on("scale", this.onGraphTransformed, this), e.on("translate", this.onGraphTransformed, this), e.model.on("updated", this.onModelUpdated, this), t.on("added", this.onCellAdded, this), t.on("removed", this.onCellRemoved, this), t.on("reseted", this.onReseted, this), t.on("updated", this.onCollectionUpdated, this), t.on("node:change:position", this.onNodePositionChanged, this), t.on("cell:changed", this.onCellChanged, this);
  }
  stopListening() {
    const e = this.graph, t = this.collection;
    this.undelegateEvents(), e.off("scale", this.onGraphTransformed, this), e.off("translate", this.onGraphTransformed, this), e.model.off("updated", this.onModelUpdated, this), t.off("added", this.onCellAdded, this), t.off("removed", this.onCellRemoved, this), t.off("reseted", this.onReseted, this), t.off("updated", this.onCollectionUpdated, this), t.off("node:change:position", this.onNodePositionChanged, this), t.off("cell:changed", this.onCellChanged, this);
  }
  onRemove() {
    this.stopListening();
  }
  onGraphTransformed() {
    this.updateSelectionBoxes();
  }
  onCellChanged() {
    this.updateSelectionBoxes();
  }
  onNodePositionChanged({ node: e, options: t }) {
    const { showNodeSelectionBox: r, pointerEvents: i } = this.options, { ui: o, selection: s, translateBy: a, snapped: l } = t, u = (r !== !0 || i && this.getPointerEventsValue(i) === "none") && !this.translating && !s, c = o && a && e.id === a;
    if (u && (c || l)) {
      this.translating = !0;
      const h = e.position(), f = e.previous("position"), d = h.x - f.x, p = h.y - f.y;
      (d !== 0 || p !== 0) && this.translateSelectedNodes(d, p, e, t), this.translating = !1;
    }
  }
  onModelUpdated({ removed: e }) {
    e && e.length && this.unselect(e);
  }
  isEmpty() {
    return this.length <= 0;
  }
  isSelected(e) {
    return this.collection.has(e);
  }
  get length() {
    return this.collection.length;
  }
  get cells() {
    return this.collection.toArray();
  }
  select(e, t = {}) {
    t.dryrun = !0;
    const r = this.filter(Array.isArray(e) ? e : [e]);
    return this.collection.add(r, t), this;
  }
  unselect(e, t = {}) {
    return t.dryrun = !0, this.collection.remove(Array.isArray(e) ? e : [e], t), this;
  }
  reset(e, t = {}) {
    if (e) {
      if (t.batch) {
        const u = this.filter(Array.isArray(e) ? e : [e]);
        return this.collection.reset(u, Object.assign(Object.assign({}, t), { ui: !0 })), this;
      }
      const r = this.cells, i = this.filter(Array.isArray(e) ? e : [e]), o = {}, s = {};
      r.forEach((u) => o[u.id] = u), i.forEach((u) => s[u.id] = u);
      const a = [], l = [];
      return i.forEach((u) => {
        o[u.id] || a.push(u);
      }), r.forEach((u) => {
        s[u.id] || l.push(u);
      }), l.length && this.unselect(l, Object.assign(Object.assign({}, t), { ui: !0 })), a.length && this.select(a, Object.assign(Object.assign({}, t), { ui: !0 })), l.length === 0 && a.length === 0 && this.updateContainer(), this;
    }
    return this.clean(t);
  }
  clean(e = {}) {
    return this.length && (e.batch === !1 ? this.unselect(this.cells, e) : this.collection.reset([], Object.assign(Object.assign({}, e), { ui: !0 }))), this;
  }
  setFilter(e) {
    this.options.filter = e;
  }
  setContent(e) {
    this.options.content = e;
  }
  startSelecting(e) {
    e = this.normalizeEvent(e), this.clean();
    let t, r;
    const i = this.graph.container;
    if (e.offsetX != null && e.offsetY != null && i.contains(e.target))
      t = e.offsetX, r = e.offsetY;
    else {
      const o = sE(i), s = i.scrollLeft, a = i.scrollTop;
      t = e.clientX - o.left + window.pageXOffset + s, r = e.clientY - o.top + window.pageYOffset + a;
    }
    xr(this.container, {
      top: r,
      left: t,
      width: 1,
      height: 1
    }), this.setEventData(e, {
      action: "selecting",
      clientX: e.clientX,
      clientY: e.clientY,
      offsetX: t,
      offsetY: r,
      scrollerX: 0,
      scrollerY: 0,
      moving: !1
    }), this.delegateDocumentEvents(Ki.documentEvents, e.data);
  }
  filter(e) {
    const t = this.options.filter;
    return e.filter((r) => Array.isArray(t) ? t.some((i) => typeof i == "string" ? r.shape === i : r.id === i.id) : typeof t == "function" ? Ue(t, this.graph, r) : !0);
  }
  stopSelecting(e) {
    const t = this.graph, r = this.getEventData(e);
    switch (r.action) {
      case "selecting": {
        let o = M_e(this.container), s = D_e(this.container);
        const a = sE(this.container), l = t.pageToLocal(a.left, a.top), u = t.transform.getScale();
        o /= u.sx, s /= u.sy;
        const c = new Se(l.x, l.y, o, s), h = this.getCellViewsInArea(c).map((f) => f.cell);
        this.reset(h, { batch: !0 }), this.hideRubberband();
        break;
      }
      case "translating": {
        const o = t.snapToGrid(e.clientX, e.clientY);
        if (!this.options.following) {
          const s = r;
          this.updateSelectedNodesPosition({
            dx: s.clientX - s.originX,
            dy: s.clientY - s.originY
          });
        }
        this.graph.model.stopBatch("move-selection"), this.notifyBoxEvent("box:mouseup", e, o.x, o.y);
        break;
      }
      default: {
        this.clean();
        break;
      }
    }
  }
  onMouseUp(e) {
    this.getEventData(e).action && (this.stopSelecting(e), this.undelegateDocumentEvents());
  }
  onSelectionBoxMouseDown(e) {
    this.options.following || e.stopPropagation();
    const t = this.normalizeEvent(e);
    this.options.movable && this.startTranslating(t);
    const r = this.getCellViewFromElem(t.target);
    this.setEventData(t, { activeView: r });
    const i = this.graph.snapToGrid(t.clientX, t.clientY);
    this.notifyBoxEvent("box:mousedown", t, i.x, i.y), this.delegateDocumentEvents(Ki.documentEvents, t.data);
  }
  startTranslating(e) {
    this.graph.model.startBatch("move-selection");
    const t = this.graph.snapToGrid(e.clientX, e.clientY);
    this.setEventData(e, {
      action: "translating",
      clientX: t.x,
      clientY: t.y,
      originX: t.x,
      originY: t.y
    });
  }
  getRestrictArea() {
    const e = this.graph.options.translating.restrict, t = typeof e == "function" ? Ue(e, this.graph, null) : e;
    return typeof t == "number" ? this.graph.transform.getGraphArea().inflate(t) : t === !0 ? this.graph.transform.getGraphArea() : t || null;
  }
  getSelectionOffset(e, t) {
    let r = e.x - t.clientX, i = e.y - t.clientY;
    const o = this.getRestrictArea();
    if (o) {
      const s = this.collection.toArray(), a = Mt.getCellsBBox(s, { deep: !0 }) || Se.create(), l = o.x - a.x, u = o.y - a.y, c = o.x + o.width - (a.x + a.width), h = o.y + o.height - (a.y + a.height);
      if (r < l && (r = l), i < u && (i = u), c < r && (r = c), h < i && (i = h), !this.options.following) {
        const f = e.x - t.originX, d = e.y - t.originY;
        r = f <= l || f >= c ? 0 : r, i = d <= u || d >= h ? 0 : i;
      }
    }
    return {
      dx: r,
      dy: i
    };
  }
  updateElementPosition(e, t, r) {
    const i = xr(e, "left"), o = xr(e, "top"), s = i ? parseFloat(i) : 0, a = o ? parseFloat(o) : 0;
    xr(e, "left", s + t), xr(e, "top", a + r);
  }
  updateSelectedNodesPosition(e) {
    const { dx: t, dy: r } = e;
    if (t || r)
      if (this.translateSelectedNodes(t, r), this.boxesUpdated)
        this.collection.length > 1 && this.updateSelectionBoxes();
      else {
        const i = this.graph.transform.getScale();
        for (let o = 0, s = this.$boxes, a = s.length; o < a; o += 1)
          this.updateElementPosition(s[o], t * i.sx, r * i.sy);
        this.updateElementPosition(this.selectionContainer, t * i.sx, r * i.sy);
      }
  }
  autoScrollGraph(e, t) {
    const r = this.graph.getPlugin("scroller");
    return r ? r.autoScroll(e, t) : { scrollerX: 0, scrollerY: 0 };
  }
  adjustSelection(e) {
    const t = this.normalizeEvent(e), r = this.getEventData(t);
    switch (r.action) {
      case "selecting": {
        const o = r;
        o.moving !== !0 && (Xm(this.container, this.graph.container), this.showRubberband(), o.moving = !0);
        const { scrollerX: s, scrollerY: a } = this.autoScrollGraph(t.clientX, t.clientY);
        o.scrollerX += s, o.scrollerY += a;
        const l = t.clientX - o.clientX + o.scrollerX, u = t.clientY - o.clientY + o.scrollerY, c = parseInt(xr(this.container, "left") || "0", 10), h = parseInt(xr(this.container, "top") || "0", 10);
        xr(this.container, {
          left: l < 0 ? o.offsetX + l : c,
          top: u < 0 ? o.offsetY + u : h,
          width: Math.abs(l),
          height: Math.abs(u)
        });
        break;
      }
      case "translating": {
        const o = this.graph.snapToGrid(t.clientX, t.clientY), s = r, a = this.getSelectionOffset(o, s);
        this.options.following ? this.updateSelectedNodesPosition(a) : this.updateContainerPosition(a), a.dx && (s.clientX = o.x), a.dy && (s.clientY = o.y), this.notifyBoxEvent("box:mousemove", e, o.x, o.y);
        break;
      }
    }
    this.boxesUpdated = !1;
  }
  translateSelectedNodes(e, t, r, i) {
    const o = {}, s = [];
    if (r && (o[r.id] = !0), this.collection.toArray().forEach((a) => {
      a.getDescendants({ deep: !0 }).forEach((l) => {
        o[l.id] = !0;
      });
    }), i && i.translateBy) {
      const a = this.graph.getCellById(i.translateBy);
      a && (o[a.id] = !0, a.getDescendants({ deep: !0 }).forEach((l) => {
        o[l.id] = !0;
      }), s.push(a));
    }
    this.collection.toArray().forEach((a) => {
      if (!o[a.id]) {
        const l = Object.assign(Object.assign({}, i), { selection: this.cid, exclude: s });
        a.translate(e, t, l), this.graph.model.getConnectedEdges(a).forEach((u) => {
          o[u.id] || (u.translate(e, t, l), o[u.id] = !0);
        });
      }
    });
  }
  getCellViewsInArea(e) {
    const t = this.graph, r = {
      strict: this.options.strict
    };
    let i = [];
    return this.options.rubberNode && (i = i.concat(t.model.getNodesInArea(e, r).map((o) => t.renderer.findViewByCell(o)).filter((o) => o != null))), this.options.rubberEdge && (i = i.concat(t.model.getEdgesInArea(e, r).map((o) => t.renderer.findViewByCell(o)).filter((o) => o != null))), i;
  }
  notifyBoxEvent(e, t, r, i) {
    const s = this.getEventData(t).activeView;
    this.trigger(e, { e: t, view: s, x: r, y: i, cell: s.cell });
  }
  getSelectedClassName(e) {
    return this.prefixClassName(`${e.isNode() ? "node" : "edge"}-selected`);
  }
  addCellSelectedClassName(e) {
    const t = this.graph.renderer.findViewByCell(e);
    t && t.addClass(this.getSelectedClassName(e));
  }
  removeCellUnSelectedClassName(e) {
    const t = this.graph.renderer.findViewByCell(e);
    t && t.removeClass(this.getSelectedClassName(e));
  }
  destroySelectionBox(e) {
    this.removeCellUnSelectedClassName(e), this.canShowSelectionBox(e) && (Ja(this.container.querySelector(`[data-cell-id="${e.id}"]`)), this.$boxes.length === 0 && this.hide(), this.boxCount = Math.max(0, this.boxCount - 1));
  }
  destroyAllSelectionBoxes(e) {
    e.forEach((t) => this.removeCellUnSelectedClassName(t)), this.hide(), Ja(this.$boxes), this.boxCount = 0;
  }
  hide() {
    hr(this.container, this.prefixClassName(Ki.classNames.rubberband)), hr(this.container, this.prefixClassName(Ki.classNames.selected));
  }
  showRubberband() {
    rt(this.container, this.prefixClassName(Ki.classNames.rubberband));
  }
  hideRubberband() {
    hr(this.container, this.prefixClassName(Ki.classNames.rubberband));
  }
  showSelected() {
    xL(this.container, "style"), rt(this.container, this.prefixClassName(Ki.classNames.selected));
  }
  createContainer() {
    this.container = document.createElement("div"), rt(this.container, this.prefixClassName(Ki.classNames.root)), this.options.className && rt(this.container, this.options.className), this.selectionContainer = document.createElement("div"), rt(this.selectionContainer, this.prefixClassName(Ki.classNames.inner)), this.selectionContent = document.createElement("div"), rt(this.selectionContent, this.prefixClassName(Ki.classNames.content)), Kc(this.selectionContainer, this.selectionContent), Qt(this.selectionContainer, "data-selection-length", this.collection.length), dH(this.container, this.selectionContainer);
  }
  updateContainerPosition(e) {
    (e.dx || e.dy) && this.updateElementPosition(this.selectionContainer, e.dx, e.dy);
  }
  updateContainer() {
    const e = { x: 1 / 0, y: 1 / 0 }, t = { x: 0, y: 0 };
    this.collection.toArray().filter((o) => this.canShowSelectionBox(o)).forEach((o) => {
      const s = this.graph.renderer.findViewByCell(o);
      if (s) {
        const a = s.getBBox({
          useCellGeometry: !0
        });
        e.x = Math.min(e.x, a.x), e.y = Math.min(e.y, a.y), t.x = Math.max(t.x, a.x + a.width), t.y = Math.max(t.y, a.y + a.height);
      }
    }), xr(this.selectionContainer, {
      position: "absolute",
      pointerEvents: "none",
      left: e.x,
      top: e.y,
      width: t.x - e.x,
      height: t.y - e.y
    }), Qt(this.selectionContainer, "data-selection-length", this.collection.length);
    const i = this.options.content;
    if (i)
      if (typeof i == "function") {
        const o = Ue(i, this.graph, this, this.selectionContent);
        o && (this.selectionContent.innerHTML = o);
      } else
        this.selectionContent.innerHTML = i;
    this.collection.length > 0 && !this.container.parentNode ? Xm(this.container, this.graph.container) : this.collection.length <= 0 && this.container.parentNode && this.container.parentNode.removeChild(this.container);
  }
  canShowSelectionBox(e) {
    return e.isNode() && this.options.showNodeSelectionBox === !0 || e.isEdge() && this.options.showEdgeSelectionBox === !0;
  }
  getPointerEventsValue(e) {
    return typeof e == "string" ? e : e(this.cells);
  }
  createSelectionBox(e) {
    if (this.addCellSelectedClassName(e), this.canShowSelectionBox(e)) {
      const t = this.graph.renderer.findViewByCell(e);
      if (t) {
        const r = t.getBBox({
          useCellGeometry: !0
        }), i = this.boxClassName, o = document.createElement("div"), s = this.options.pointerEvents;
        rt(o, i), rt(o, `${i}-${e.isNode() ? "node" : "edge"}`), Qt(o, "data-cell-id", e.id), xr(o, {
          position: "absolute",
          left: r.x,
          top: r.y,
          width: r.width,
          height: r.height,
          pointerEvents: s ? this.getPointerEventsValue(s) : "auto"
        }), Xm(o, this.container), this.showSelected(), this.boxCount += 1;
      }
    }
  }
  updateSelectionBoxes() {
    this.collection.length > 0 && (this.boxesUpdated = !0, this.confirmUpdate());
  }
  confirmUpdate() {
    if (this.boxCount) {
      this.hide();
      for (let e = 0, t = this.$boxes, r = t.length; e < r; e += 1) {
        const i = t[e], o = Qt(i, "data-cell-id");
        Ja(i), this.boxCount -= 1;
        const s = this.collection.get(o);
        s && this.createSelectionBox(s);
      }
      this.updateContainer();
    }
    return 0;
  }
  getCellViewFromElem(e) {
    const t = e.getAttribute("data-cell-id");
    if (t) {
      const r = this.collection.get(t);
      if (r)
        return this.graph.renderer.findViewByCell(r);
    }
    return null;
  }
  onCellRemoved({ cell: e }) {
    this.destroySelectionBox(e), this.updateContainer();
  }
  onReseted({ previous: e, current: t }) {
    this.destroyAllSelectionBoxes(e), t.forEach((r) => {
      this.listenCellRemoveEvent(r), this.createSelectionBox(r);
    }), this.updateContainer();
  }
  onCellAdded({ cell: e }) {
    this.listenCellRemoveEvent(e), this.createSelectionBox(e), this.updateContainer();
  }
  listenCellRemoveEvent(e) {
    e.off("removed", this.onCellRemoved, this), e.on("removed", this.onCellRemoved, this);
  }
  onCollectionUpdated({ added: e, removed: t, options: r }) {
    e.forEach((o) => {
      this.trigger("cell:selected", { cell: o, options: r }), o.isNode() ? this.trigger("node:selected", { cell: o, options: r, node: o }) : o.isEdge() && this.trigger("edge:selected", { cell: o, options: r, edge: o });
    }), t.forEach((o) => {
      this.trigger("cell:unselected", { cell: o, options: r }), o.isNode() ? this.trigger("node:unselected", { cell: o, options: r, node: o }) : o.isEdge() && this.trigger("edge:unselected", { cell: o, options: r, edge: o });
    });
    const i = {
      added: e,
      removed: t,
      options: r,
      selected: this.cells.filter((o) => !!this.graph.getCellById(o.id))
    };
    this.trigger("selection:changed", i);
  }
  // #endregion
  dispose() {
    this.clean(), this.remove(), this.off();
  }
}
XTe([
  xn.dispose()
], kq.prototype, "dispose", null);
var Ki;
(function(n) {
  const e = "widget-selection";
  n.classNames = {
    root: e,
    inner: `${e}-inner`,
    box: `${e}-box`,
    content: `${e}-content`,
    rubberband: `${e}-rubberband`,
    selected: `${e}-selected`
  }, n.documentEvents = {
    mousemove: "adjustSelection",
    touchmove: "adjustSelection",
    mouseup: "onMouseUp",
    touchend: "onMouseUp",
    touchcancel: "onMouseUp"
  };
  function t(r) {
    return r.getAncestors().length;
  }
  n.depthComparator = t;
})(Ki || (Ki = {}));
const UTe = `.x6-widget-selection {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  width: 0;
  height: 0;
  touch-action: none;
}
.x6-widget-selection-rubberband {
  display: block;
  overflow: visible;
  opacity: 0.3;
}
.x6-widget-selection-selected {
  display: block;
}
.x6-widget-selection-box {
  cursor: move;
}
.x6-widget-selection-inner[data-selection-length='0'],
.x6-widget-selection-inner[data-selection-length='1'] {
  display: none;
}
.x6-widget-selection-content {
  position: absolute;
  top: 100%;
  right: -20px;
  left: -20px;
  margin-top: 30px;
  padding: 6px;
  line-height: 14px;
  text-align: center;
  border-radius: 6px;
}
.x6-widget-selection-content:empty {
  display: none;
}
.x6-widget-selection-rubberband {
  background-color: #3498db;
  border: 2px solid #2980b9;
}
.x6-widget-selection-box {
  box-sizing: content-box !important;
  margin-top: -4px;
  margin-left: -4px;
  padding-right: 4px;
  padding-bottom: 4px;
  border: 2px dashed #feb663;
  box-shadow: 2px 2px 5px #d3d3d3;
}
.x6-widget-selection-inner {
  box-sizing: content-box !important;
  margin-top: -8px;
  margin-left: -8px;
  padding-right: 12px;
  padding-bottom: 12px;
  border: 2px solid #feb663;
  box-shadow: 2px 2px 5px #d3d3d3;
}
.x6-widget-selection-content {
  color: #fff;
  font-size: 10px;
  background-color: #6a6b8a;
}
`;
Ee.prototype.isSelectionEnabled = function() {
  const n = this.getPlugin("selection");
  return n ? n.isEnabled() : !1;
};
Ee.prototype.enableSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.enable(), this;
};
Ee.prototype.disableSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.disable(), this;
};
Ee.prototype.toggleSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleEnabled(n), this;
};
Ee.prototype.isMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n ? n.isMultipleSelection() : !1;
};
Ee.prototype.enableMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.enableMultipleSelection(), this;
};
Ee.prototype.disableMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.disableMultipleSelection(), this;
};
Ee.prototype.toggleMultipleSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleMultipleSelection(n), this;
};
Ee.prototype.isSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n ? n.isSelectionMovable() : !1;
};
Ee.prototype.enableSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n && n.enableSelectionMovable(), this;
};
Ee.prototype.disableSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n && n.disableSelectionMovable(), this;
};
Ee.prototype.toggleSelectionMovable = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleSelectionMovable(n), this;
};
Ee.prototype.isRubberbandEnabled = function() {
  const n = this.getPlugin("selection");
  return n ? n.isRubberbandEnabled() : !1;
};
Ee.prototype.enableRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.enableRubberband(), this;
};
Ee.prototype.disableRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.disableRubberband(), this;
};
Ee.prototype.toggleRubberband = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleRubberband(n), this;
};
Ee.prototype.isStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n ? n.isStrictRubberband() : !1;
};
Ee.prototype.enableStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.enableStrictRubberband(), this;
};
Ee.prototype.disableStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.disableStrictRubberband(), this;
};
Ee.prototype.toggleStrictRubberband = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleStrictRubberband(n), this;
};
Ee.prototype.setRubberbandModifiers = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setRubberbandModifiers(n), this;
};
Ee.prototype.setSelectionFilter = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setSelectionFilter(n), this;
};
Ee.prototype.setSelectionDisplayContent = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setSelectionDisplayContent(n), this;
};
Ee.prototype.isSelectionEmpty = function() {
  const n = this.getPlugin("selection");
  return n ? n.isEmpty() : !0;
};
Ee.prototype.cleanSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.clean(n), this;
};
Ee.prototype.resetSelection = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.reset(n, e), this;
};
Ee.prototype.getSelectedCells = function() {
  const n = this.getPlugin("selection");
  return n ? n.getSelectedCells() : [];
};
Ee.prototype.getSelectedCellCount = function() {
  const n = this.getPlugin("selection");
  return n ? n.getSelectedCellCount() : 0;
};
Ee.prototype.isSelected = function(n) {
  const e = this.getPlugin("selection");
  return e ? e.isSelected(n) : !1;
};
Ee.prototype.select = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.select(n, e), this;
};
Ee.prototype.unselect = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.unselect(n, e), this;
};
var KTe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Yy extends Fn {
  get rubberbandDisabled() {
    return this.options.enabled !== !0 || this.options.rubberband !== !0;
  }
  get disabled() {
    return this.options.enabled !== !0;
  }
  get length() {
    return this.selectionImpl.length;
  }
  get cells() {
    return this.selectionImpl.cells;
  }
  constructor(e = {}) {
    super(), this.name = "selection", this.movedMap = /* @__PURE__ */ new WeakMap(), this.unselectMap = /* @__PURE__ */ new WeakMap(), this.options = Object.assign(Object.assign({ enabled: !0 }, Yy.defaultOptions), e), a_(this.name, UTe);
  }
  init(e) {
    this.graph = e, this.selectionImpl = new kq(Object.assign(Object.assign({}, this.options), { graph: e })), this.setup(), this.startListening();
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  isMultipleSelection() {
    return this.isMultiple();
  }
  enableMultipleSelection() {
    return this.enableMultiple(), this;
  }
  disableMultipleSelection() {
    return this.disableMultiple(), this;
  }
  toggleMultipleSelection(e) {
    return e != null ? e !== this.isMultipleSelection() && (e ? this.enableMultipleSelection() : this.disableMultipleSelection()) : this.isMultipleSelection() ? this.disableMultipleSelection() : this.enableMultipleSelection(), this;
  }
  isSelectionMovable() {
    return this.options.movable !== !1;
  }
  enableSelectionMovable() {
    return this.selectionImpl.options.movable = !0, this;
  }
  disableSelectionMovable() {
    return this.selectionImpl.options.movable = !1, this;
  }
  toggleSelectionMovable(e) {
    return e != null ? e !== this.isSelectionMovable() && (e ? this.enableSelectionMovable() : this.disableSelectionMovable()) : this.isSelectionMovable() ? this.disableSelectionMovable() : this.enableSelectionMovable(), this;
  }
  isRubberbandEnabled() {
    return !this.rubberbandDisabled;
  }
  enableRubberband() {
    return this.rubberbandDisabled && (this.options.rubberband = !0), this;
  }
  disableRubberband() {
    return this.rubberbandDisabled || (this.options.rubberband = !1), this;
  }
  toggleRubberband(e) {
    return e != null ? e !== this.isRubberbandEnabled() && (e ? this.enableRubberband() : this.disableRubberband()) : this.isRubberbandEnabled() ? this.disableRubberband() : this.enableRubberband(), this;
  }
  isStrictRubberband() {
    return this.selectionImpl.options.strict === !0;
  }
  enableStrictRubberband() {
    return this.selectionImpl.options.strict = !0, this;
  }
  disableStrictRubberband() {
    return this.selectionImpl.options.strict = !1, this;
  }
  toggleStrictRubberband(e) {
    return e != null ? e !== this.isStrictRubberband() && (e ? this.enableStrictRubberband() : this.disableStrictRubberband()) : this.isStrictRubberband() ? this.disableStrictRubberband() : this.enableStrictRubberband(), this;
  }
  setRubberbandModifiers(e) {
    this.setModifiers(e);
  }
  setSelectionFilter(e) {
    return this.setFilter(e), this;
  }
  setSelectionDisplayContent(e) {
    return this.setContent(e), this;
  }
  isEmpty() {
    return this.length <= 0;
  }
  clean(e = {}) {
    return this.selectionImpl.clean(e), this;
  }
  reset(e, t = {}) {
    return this.selectionImpl.reset(e ? this.getCells(e) : [], t), this;
  }
  getSelectedCells() {
    return this.cells;
  }
  getSelectedCellCount() {
    return this.length;
  }
  isSelected(e) {
    return this.selectionImpl.isSelected(e);
  }
  select(e, t = {}) {
    const r = this.getCells(e);
    return r.length && (this.isMultiple() ? this.selectionImpl.select(r, t) : this.reset(r.slice(0, 1), t)), this;
  }
  unselect(e, t = {}) {
    return this.selectionImpl.unselect(this.getCells(e), t), this;
  }
  // #endregion
  setup() {
    this.selectionImpl.on("*", (e, t) => {
      this.trigger(e, t), this.graph.trigger(e, t);
    });
  }
  startListening() {
    this.graph.on("blank:mousedown", this.onBlankMouseDown, this), this.graph.on("blank:click", this.onBlankClick, this), this.graph.on("cell:mousemove", this.onCellMouseMove, this), this.graph.on("cell:mouseup", this.onCellMouseUp, this), this.selectionImpl.on("box:mousedown", this.onBoxMouseDown, this);
  }
  stopListening() {
    this.graph.off("blank:mousedown", this.onBlankMouseDown, this), this.graph.off("blank:click", this.onBlankClick, this), this.graph.off("cell:mousemove", this.onCellMouseMove, this), this.graph.off("cell:mouseup", this.onCellMouseUp, this), this.selectionImpl.off("box:mousedown", this.onBoxMouseDown, this);
  }
  onBlankMouseDown({ e }) {
    if (!this.allowBlankMouseDown(e))
      return;
    const t = this.graph.panning.allowPanning(e, !0), r = this.graph.getPlugin("scroller"), i = r && r.allowPanning(e, !0);
    (this.allowRubberband(e, !0) || this.allowRubberband(e) && !i && !t) && this.startRubberband(e);
  }
  allowBlankMouseDown(e) {
    const t = this.options.eventTypes;
    return (t == null ? void 0 : t.includes("leftMouseDown")) && e.button === 0 || (t == null ? void 0 : t.includes("mouseWheelDown")) && e.button === 1;
  }
  onBlankClick() {
    this.clean();
  }
  allowRubberband(e, t) {
    return !this.rubberbandDisabled && Sc.isMatch(e, this.options.modifiers, t);
  }
  allowMultipleSelection(e) {
    return this.isMultiple() && Sc.isMatch(e, this.options.multipleSelectionModifiers);
  }
  onCellMouseMove({ cell: e }) {
    this.movedMap.set(e, !0);
  }
  onCellMouseUp({ e, cell: t }) {
    const r = this.options;
    let i = this.disabled;
    !i && this.movedMap.has(t) && (i = r.selectCellOnMoved === !1, i || (i = r.selectNodeOnMoved === !1 && t.isNode()), i || (i = r.selectEdgeOnMoved === !1 && t.isEdge())), i || (this.allowMultipleSelection(e) ? this.unselectMap.has(t) ? this.unselectMap.delete(t) : this.isSelected(t) ? this.unselect(t) : this.select(t) : this.reset(t)), this.movedMap.delete(t);
  }
  onBoxMouseDown({ e, cell: t }) {
    this.disabled || this.allowMultipleSelection(e) && (this.unselect(t), this.unselectMap.set(t, !0));
  }
  getCells(e) {
    return (Array.isArray(e) ? e : [e]).map((t) => typeof t == "string" ? this.graph.getCellById(t) : t).filter((t) => t != null);
  }
  startRubberband(e) {
    return this.rubberbandDisabled || this.selectionImpl.startSelecting(e), this;
  }
  isMultiple() {
    return this.options.multiple !== !1;
  }
  enableMultiple() {
    return this.options.multiple = !0, this;
  }
  disableMultiple() {
    return this.options.multiple = !1, this;
  }
  setModifiers(e) {
    return this.options.modifiers = e, this;
  }
  setContent(e) {
    return this.selectionImpl.setContent(e), this;
  }
  setFilter(e) {
    return this.selectionImpl.setFilter(e), this;
  }
  dispose() {
    this.stopListening(), this.off(), this.selectionImpl.dispose(), l_(this.name);
  }
}
KTe([
  Fn.dispose()
], Yy.prototype, "dispose", null);
(function(n) {
  n.defaultOptions = {
    rubberband: !1,
    rubberNode: !0,
    rubberEdge: !1,
    pointerEvents: "auto",
    multiple: !0,
    multipleSelectionModifiers: ["ctrl", "meta"],
    movable: !0,
    strict: !1,
    selectCellOnMoved: !1,
    selectNodeOnMoved: !1,
    selectEdgeOnMoved: !1,
    following: !0,
    content: null,
    eventTypes: ["leftMouseDown", "mouseWheelDown"]
  };
})(Yy || (Yy = {}));
class JTe {
  constructor() {
    this.cells = [];
  }
  copy(e, t, r = {}) {
    this.options = Object.assign({}, r);
    const o = (cl.isModel(t) ? t : t.model).cloneSubGraph(e, r);
    this.cells = VG(Object.keys(o).map((s) => o[s]), (s) => s.isEdge() ? 2 : 1), this.serialize(r);
  }
  cut(e, t, r = {}) {
    this.copy(e, t, r), (Ee.isGraph(t) ? t.model : t).batchUpdate("cut", () => {
      e.forEach((o) => o.remove());
    });
  }
  paste(e, t = {}) {
    const r = Object.assign(Object.assign({}, this.options), t), { offset: i, edgeProps: o, nodeProps: s } = r;
    let a = 20, l = 20;
    i && (a = typeof i == "number" ? i : i.dx, l = typeof i == "number" ? i : i.dy), this.deserialize(r);
    const u = this.cells;
    u.forEach((h) => {
      h.model = null, h.removeProp("zIndex"), (a || l) && h.translate(a, l), s && h.isNode() && h.prop(s), o && h.isEdge() && h.prop(o);
    });
    const c = Ee.isGraph(e) ? e.model : e;
    return c.batchUpdate("paste", () => {
      c.addCells(this.cells);
    }), this.copy(u, e, t), u;
  }
  serialize(e) {
    e.useLocalStorage !== !1 && ny.save(this.cells);
  }
  deserialize(e) {
    if (e.useLocalStorage) {
      const t = ny.fetch();
      t && (this.cells = t);
    }
  }
  isEmpty(e = {}) {
    return e.useLocalStorage && this.deserialize(e), this.cells.length <= 0;
  }
  clean() {
    this.options = {}, this.cells = [], ny.clean();
  }
}
var ny;
(function(n) {
  const e = `${_s.prefixCls}.clipboard.cells`;
  function t(o) {
    if (window.localStorage) {
      const s = o.map((a) => a.toJSON());
      localStorage.setItem(e, JSON.stringify(s));
    }
  }
  n.save = t;
  function r() {
    if (window.localStorage) {
      const o = localStorage.getItem(e), s = o ? JSON.parse(o) : [];
      if (s)
        return cl.fromJSON(s);
    }
  }
  n.fetch = r;
  function i() {
    window.localStorage && localStorage.removeItem(e);
  }
  n.clean = i;
})(ny || (ny = {}));
Ee.prototype.isClipboardEnabled = function() {
  const n = this.getPlugin("clipboard");
  return n ? n.isEnabled() : !1;
};
Ee.prototype.enableClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.enable(), this;
};
Ee.prototype.disableClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.disable(), this;
};
Ee.prototype.toggleClipboard = function(n) {
  const e = this.getPlugin("clipboard");
  return e && e.toggleEnabled(n), this;
};
Ee.prototype.isClipboardEmpty = function(n) {
  const e = this.getPlugin("clipboard");
  return e ? e.isEmpty(n) : !0;
};
Ee.prototype.getCellsInClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n ? n.getCellsInClipboard() : [];
};
Ee.prototype.cleanClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.clean(), this;
};
Ee.prototype.copy = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t && t.copy(n, e), this;
};
Ee.prototype.cut = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t && t.cut(n, e), this;
};
Ee.prototype.paste = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t ? t.paste(n, e) : [];
};
var ePe = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
}, tPe = function(n, e) {
  var t = {};
  for (var r in n)
    Object.prototype.hasOwnProperty.call(n, r) && e.indexOf(r) < 0 && (t[r] = n[r]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(n); i < r.length; i++)
      e.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(n, r[i]) && (t[r[i]] = n[r[i]]);
  return t;
};
class nPe extends Fn {
  get disabled() {
    return this.options.enabled !== !0;
  }
  get cells() {
    return this.clipboardImpl.cells;
  }
  constructor(e = {}) {
    super(), this.name = "clipboard", this.options = Object.assign({ enabled: !0 }, e);
  }
  init(e) {
    this.graph = e, this.clipboardImpl = new JTe(), this.clipboardImpl.deserialize(this.options);
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  isEmpty(e = {}) {
    return this.clipboardImpl.isEmpty(e);
  }
  getCellsInClipboard() {
    return this.cells;
  }
  clean(e) {
    return (!this.disabled || e) && (this.clipboardImpl.clean(), this.notify("clipboard:changed", { cells: [] })), this;
  }
  copy(e, t = {}) {
    return this.disabled || (this.clipboardImpl.copy(e, this.graph, Object.assign(Object.assign({}, this.commonOptions), t)), this.notify("clipboard:changed", { cells: e })), this;
  }
  cut(e, t = {}) {
    return this.disabled || (this.clipboardImpl.cut(e, this.graph, Object.assign(Object.assign({}, this.commonOptions), t)), this.notify("clipboard:changed", { cells: e })), this;
  }
  paste(e = {}, t = this.graph) {
    return this.disabled ? [] : this.clipboardImpl.paste(t, Object.assign(Object.assign({}, this.commonOptions), e));
  }
  // #endregion
  get commonOptions() {
    const e = this.options;
    return tPe(e, ["enabled"]);
  }
  notify(e, t) {
    this.trigger(e, t), this.graph.trigger(e, t);
  }
  dispose() {
    this.clean(!0), this.off();
  }
}
ePe([
  Fn.dispose()
], nPe.prototype, "dispose", null);
Ee.prototype.isHistoryEnabled = function() {
  const n = this.getPlugin("history");
  return n ? n.isEnabled() : !1;
};
Ee.prototype.enableHistory = function() {
  const n = this.getPlugin("history");
  return n && n.enable(), this;
};
Ee.prototype.disableHistory = function() {
  const n = this.getPlugin("history");
  return n && n.disable(), this;
};
Ee.prototype.toggleHistory = function(n) {
  const e = this.getPlugin("history");
  return e && e.toggleEnabled(n), this;
};
Ee.prototype.undo = function(n) {
  const e = this.getPlugin("history");
  return e && e.undo(n), this;
};
Ee.prototype.redo = function(n) {
  const e = this.getPlugin("history");
  return e && e.redo(n), this;
};
Ee.prototype.undoAndCancel = function(n) {
  const e = this.getPlugin("history");
  return e && e.cancel(n), this;
};
Ee.prototype.canUndo = function() {
  const n = this.getPlugin("history");
  return n ? n.canUndo() : !1;
};
Ee.prototype.canRedo = function() {
  const n = this.getPlugin("history");
  return n ? n.canRedo() : !1;
};
Ee.prototype.cleanHistory = function(n) {
  const e = this.getPlugin("history");
  return e && e.clean(n), this;
};
Ee.prototype.getHistoryStackSize = function() {
  return this.getPlugin("history").getSize();
};
Ee.prototype.getUndoStackSize = function() {
  return this.getPlugin("history").getUndoSize();
};
Ee.prototype.getRedoStackSize = function() {
  return this.getPlugin("history").getRedoSize();
};
Ee.prototype.getUndoRemainSize = function() {
  return this.getPlugin("history").getUndoRemainSize();
};
var Mq = function(n, e, t, r) {
  var i = arguments.length, o = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, s;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    o = Reflect.decorate(n, e, t, r);
  else
    for (var a = n.length - 1; a >= 0; a--)
      (s = n[a]) && (o = (i < 3 ? s(o) : i > 3 ? s(e, t, o) : s(e, t)) || o);
  return i > 3 && o && Object.defineProperty(e, t, o), o;
};
class Xy extends Fn {
  constructor(e = {}) {
    super(), this.name = "history", this.batchCommands = null, this.batchLevel = 0, this.lastBatchIndex = -1, this.freezed = !1, this.stackSize = 0, this.handlers = [];
    const { stackSize: t = 0 } = e;
    this.stackSize = t, this.options = Vn.getOptions(e), this.validator = new Xy.Validator({
      history: this,
      cancelInvalid: this.options.cancelInvalid
    });
  }
  init(e) {
    this.graph = e, this.model = this.graph.model, this.clean(), this.startListening();
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  undo(e = {}) {
    if (!this.disabled) {
      const t = this.undoStack.pop();
      t && (this.revertCommand(t, e), this.redoStack.push(t), this.notify("undo", t, e));
    }
    return this;
  }
  redo(e = {}) {
    if (!this.disabled) {
      const t = this.redoStack.pop();
      t && (this.applyCommand(t, e), this.undoStackPush(t), this.notify("redo", t, e));
    }
    return this;
  }
  /**
   * Same as `undo()` but does not store the undo-ed command to the
   * `redoStack`. Canceled command therefore cannot be redo-ed.
   */
  cancel(e = {}) {
    if (!this.disabled) {
      const t = this.undoStack.pop();
      t && (this.revertCommand(t, e), this.redoStack = [], this.notify("cancel", t, e));
    }
    return this;
  }
  getSize() {
    return this.stackSize;
  }
  getUndoRemainSize() {
    const e = this.undoStack.length;
    return this.stackSize - e;
  }
  getUndoSize() {
    return this.undoStack.length;
  }
  getRedoSize() {
    return this.redoStack.length;
  }
  canUndo() {
    return !this.disabled && this.undoStack.length > 0;
  }
  canRedo() {
    return !this.disabled && this.redoStack.length > 0;
  }
  clean(e = {}) {
    return this.undoStack = [], this.redoStack = [], this.notify("clean", null, e), this;
  }
  // #endregion
  get disabled() {
    return this.options.enabled !== !0;
  }
  validate(e, ...t) {
    return this.validator.validate(e, ...t), this;
  }
  startListening() {
    this.model.on("batch:start", this.initBatchCommand, this), this.model.on("batch:stop", this.storeBatchCommand, this), this.options.eventNames && this.options.eventNames.forEach((e, t) => {
      this.handlers[t] = this.addCommand.bind(this, e), this.model.on(e, this.handlers[t]);
    }), this.validator.on("invalid", (e) => this.trigger("invalid", e));
  }
  stopListening() {
    this.model.off("batch:start", this.initBatchCommand, this), this.model.off("batch:stop", this.storeBatchCommand, this), this.options.eventNames && (this.options.eventNames.forEach((e, t) => {
      this.model.off(e, this.handlers[t]);
    }), this.handlers.length = 0), this.validator.off("invalid");
  }
  createCommand(e) {
    return {
      batch: e ? e.batch : !1,
      data: {}
    };
  }
  revertCommand(e, t) {
    this.freezed = !0;
    const r = Array.isArray(e) ? Vn.sortBatchCommands(e) : [e];
    for (let i = r.length - 1; i >= 0; i -= 1) {
      const o = r[i], s = Object.assign(Object.assign({}, t), TP(o.options, this.options.revertOptionsList || []));
      this.executeCommand(o, !0, s);
    }
    this.freezed = !1;
  }
  applyCommand(e, t) {
    this.freezed = !0;
    const r = Array.isArray(e) ? Vn.sortBatchCommands(e) : [e];
    for (let i = 0; i < r.length; i += 1) {
      const o = r[i], s = Object.assign(Object.assign({}, t), TP(o.options, this.options.applyOptionsList || []));
      this.executeCommand(o, !1, s);
    }
    this.freezed = !1;
  }
  executeCommand(e, t, r) {
    const i = this.model, o = i.getCell(e.data.id), s = e.event;
    if (Vn.isAddEvent(s) && t || Vn.isRemoveEvent(s) && !t)
      o && o.remove(r);
    else if (Vn.isAddEvent(s) && !t || Vn.isRemoveEvent(s) && t) {
      const a = e.data;
      a.node ? i.addNode(a.props, r) : a.edge && i.addEdge(a.props, r);
    } else if (Vn.isChangeEvent(s)) {
      const a = e.data, l = a.key;
      if (l && o) {
        const u = t ? a.prev[l] : a.next[l];
        a.key === "attrs" && this.ensureUndefinedAttrs(u, t ? a.next[l] : a.prev[l]) && (r.dirty = !0), o.prop(l, u, r);
      }
    } else {
      const a = this.options.executeCommand;
      a && Ue(a, this, e, t, r);
    }
  }
  addCommand(e, t) {
    if (this.freezed || this.disabled)
      return;
    const r = t, i = r.options || {};
    if (i.dryrun || Vn.isAddEvent(e) && this.options.ignoreAdd || Vn.isRemoveEvent(e) && this.options.ignoreRemove || Vn.isChangeEvent(e) && this.options.ignoreChange)
      return;
    const o = this.options.beforeAddCommand;
    if (o != null && Ue(o, this, e, t) === !1)
      return;
    e === "cell:change:*" && (e = `cell:change:${r.key}`);
    const s = r.cell, a = cl.isModel(s);
    let l;
    if (this.batchCommands) {
      l = this.batchCommands[Math.max(this.lastBatchIndex, 0)];
      const c = a && !l.modelChange || l.data.id !== s.id, h = l.event !== e;
      if (this.lastBatchIndex >= 0 && (c || h)) {
        const f = this.batchCommands.findIndex((d) => (a && d.modelChange || d.data.id === s.id) && d.event === e);
        f < 0 || Vn.isAddEvent(e) || Vn.isRemoveEvent(e) ? l = this.createCommand({ batch: !0 }) : (l = this.batchCommands[f], this.batchCommands.splice(f, 1)), this.batchCommands.push(l), this.lastBatchIndex = this.batchCommands.length - 1;
      }
    } else
      l = this.createCommand({ batch: !1 });
    if (Vn.isAddEvent(e) || Vn.isRemoveEvent(e)) {
      const c = l.data;
      return l.event = e, l.options = i, c.id = s.id, c.props = Pn(s.toJSON()), s.isEdge() ? c.edge = !0 : s.isNode() && (c.node = !0), this.push(l, i);
    }
    if (Vn.isChangeEvent(e)) {
      const c = t.key, h = l.data;
      return (!l.batch || !l.event) && (l.event = e, l.options = i, h.key = c, h.prev == null && (h.prev = {}), h.prev[c] = Pn(s.previous(c)), a ? l.modelChange = !0 : h.id = s.id), h.next == null && (h.next = {}), h.next[c] = Pn(s.prop(c)), this.push(l, i);
    }
    const u = this.options.afterAddCommand;
    u && Ue(u, this, e, t, l), this.push(l, i);
  }
  /**
   * Gather multiple changes into a single command. These commands could
   * be reverted with single `undo()` call. From the moment the function
   * is called every change made on model is not stored into the undoStack.
   * Changes are temporarily kept until `storeBatchCommand()` is called.
   */
  // eslint-disable-next-line
  initBatchCommand(e) {
    this.freezed || (this.batchCommands ? this.batchLevel += 1 : (this.batchCommands = [this.createCommand({ batch: !0 })], this.batchLevel = 0, this.lastBatchIndex = -1));
  }
  /**
   * Store changes temporarily kept in the undoStack. You have to call this
   * function as many times as `initBatchCommand()` been called.
   */
  storeBatchCommand(e) {
    if (!this.freezed)
      if (this.batchCommands && this.batchLevel <= 0) {
        const t = this.filterBatchCommand(this.batchCommands);
        t.length > 0 && (this.redoStack = [], this.undoStackPush(t), this.consolidateCommands(), this.notify("add", t, e)), this.batchCommands = null, this.lastBatchIndex = -1, this.batchLevel = 0;
      } else
        this.batchCommands && this.batchLevel > 0 && (this.batchLevel -= 1);
  }
  filterBatchCommand(e) {
    let t = e.slice();
    const r = [];
    for (; t.length > 0; ) {
      const i = t.shift(), o = i.event, s = i.data.id;
      if (o != null && (s != null || i.modelChange)) {
        if (Vn.isAddEvent(o)) {
          const a = t.findIndex((l) => Vn.isRemoveEvent(l.event) && l.data.id === s);
          if (a >= 0) {
            t = t.filter((l, u) => a < u || l.data.id !== s);
            continue;
          }
        } else if (Vn.isRemoveEvent(o)) {
          const a = t.findIndex((l) => Vn.isAddEvent(l.event) && l.data.id === s);
          if (a >= 0) {
            t.splice(a, 1);
            continue;
          }
        } else if (Vn.isChangeEvent(o)) {
          const a = i.data;
          if (wi(a.prev, a.next))
            continue;
        }
        r.push(i);
      }
    }
    return r;
  }
  notify(e, t, r) {
    const i = t == null ? null : Array.isArray(t) ? t : [t];
    this.emit(e, { cmds: i, options: r }), this.graph.trigger(`history:${e}`, { cmds: i, options: r }), this.emit("change", { cmds: i, options: r }), this.graph.trigger("history:change", { cmds: i, options: r });
  }
  push(e, t) {
    this.redoStack = [], e.batch ? (this.lastBatchIndex = Math.max(this.lastBatchIndex, 0), this.emit("batch", { cmd: e, options: t })) : (this.undoStackPush(e), this.consolidateCommands(), this.notify("add", e, t));
  }
  /**
   * Conditionally combine multiple undo items into one.
   *
   * Currently this is only used combine a `cell:changed:position` event
   * followed by multiple `cell:change:parent` and `cell:change:children`
   * events, such that a "move + embed" action can be undone in one step.
   *
   * See https://github.com/antvis/X6/issues/2421
   *
   * This is an ugly WORKAROUND. It does not solve deficiencies in the batch
   * system itself.
   */
  consolidateCommands() {
    var e;
    const t = this.undoStack[this.undoStack.length - 1], r = this.undoStack[this.undoStack.length - 2];
    if (!Array.isArray(t))
      return;
    const i = new Set(t.map((s) => s.event));
    if (i.size !== 2 || !i.has("cell:change:parent") || !i.has("cell:change:children") || !t.every((s) => {
      var a;
      return s.batch && ((a = s.options) === null || a === void 0 ? void 0 : a.ui);
    }) || !Array.isArray(r) || r.length !== 1)
      return;
    const o = r[0];
    o.event !== "cell:change:position" || !(!((e = o.options) === null || e === void 0) && e.ui) || (r.push(...t), this.undoStack.pop());
  }
  undoStackPush(e) {
    if (this.stackSize === 0) {
      this.undoStack.push(e);
      return;
    }
    this.undoStack.length >= this.stackSize && this.undoStack.shift(), this.undoStack.push(e);
  }
  ensureUndefinedAttrs(e, t) {
    let r = !1;
    return e !== null && t !== null && typeof e == "object" && typeof t == "object" && Object.keys(t).forEach((i) => {
      e[i] === void 0 && t[i] !== void 0 ? (e[i] = void 0, r = !0) : typeof e[i] == "object" && typeof t[i] == "object" && (r = this.ensureUndefinedAttrs(e[i], t[i]));
    }), r;
  }
  dispose() {
    this.validator.dispose(), this.clean(), this.stopListening(), this.off();
  }
}
Mq([
  Fn.dispose()
], Xy.prototype, "dispose", null);
(function(n) {
  class e extends Fn {
    constructor(r) {
      super(), this.map = {}, this.command = r.history, this.cancelInvalid = r.cancelInvalid !== !1, this.command.on("add", this.onCommandAdded, this);
    }
    onCommandAdded({ cmds: r }) {
      return Array.isArray(r) ? r.every((i) => this.isValidCommand(i)) : this.isValidCommand(r);
    }
    isValidCommand(r) {
      if (r.options && r.options.validation === !1)
        return !0;
      const i = r.event && this.map[r.event] || [];
      let o = null;
      return i.forEach((s) => {
        let a = 0;
        const l = (u) => {
          const c = s[a];
          a += 1;
          try {
            if (c)
              c(u, r, l);
            else {
              o = u;
              return;
            }
          } catch (h) {
            l(h);
          }
        };
        l(o);
      }), o ? (this.cancelInvalid && this.command.cancel(), this.emit("invalid", { err: o }), !1) : !0;
    }
    validate(r, ...i) {
      const o = Array.isArray(r) ? r : r.split(/\s+/);
      return i.forEach((s) => {
        if (typeof s != "function")
          throw new Error(`${o.join(" ")} requires callback functions.`);
      }), o.forEach((s) => {
        this.map[s] == null && (this.map[s] = []), this.map[s].push(i);
      }), this;
    }
    dispose() {
      this.command.off("add", this.onCommandAdded, this);
    }
  }
  Mq([
    Fn.dispose()
  ], e.prototype, "dispose", null), n.Validator = e;
})(Xy || (Xy = {}));
var Vn;
(function(n) {
  function e(s) {
    return s === "cell:added";
  }
  n.isAddEvent = e;
  function t(s) {
    return s === "cell:removed";
  }
  n.isRemoveEvent = t;
  function r(s) {
    return s != null && s.startsWith("cell:change:");
  }
  n.isChangeEvent = r;
  function i(s) {
    const a = [
      "cell:added",
      "cell:removed",
      "cell:change:*"
    ], l = ["batch:start", "batch:stop"], u = s.eventNames ? s.eventNames.filter((c) => !(n.isChangeEvent(c) || a.includes(c) || l.includes(c))) : a;
    return Object.assign(Object.assign({ enabled: !0 }, s), { eventNames: u, applyOptionsList: s.applyOptionsList || ["propertyPath"], revertOptionsList: s.revertOptionsList || ["propertyPath"] });
  }
  n.getOptions = i;
  function o(s) {
    const a = [];
    for (let l = 0, u = s.length; l < u; l += 1) {
      const c = s[l];
      let h = null;
      if (n.isAddEvent(c.event)) {
        const f = c.data.id;
        for (let d = 0; d < l; d += 1)
          if (s[d].data.id === f) {
            h = d;
            break;
          }
      }
      h !== null ? a.splice(h, 0, c) : a.push(c);
    }
    return a;
  }
  n.sortBatchCommands = o;
})(Vn || (Vn = {}));
const on = "md-editor", rPe = "md-editor-v3", iPe = "https://at.alicdn.com/t/c/font_2605852_prouiefeic.js", oPe = "https://at.alicdn.com/t/c/font_2605852_prouiefeic.css", cr = "https://cdnjs.cloudflare.com/ajax/libs", sPe = `${cr}/highlight.js/11.8.0/highlight.min.js`, aPe = [
  "bold",
  "underline",
  "italic",
  "strikeThrough",
  "-",
  "title",
  "sub",
  "sup",
  "quote",
  "unorderedList",
  "orderedList",
  "task",
  "-",
  "codeRow",
  "code",
  "link",
  "image",
  "table",
  "mermaid",
  "katex",
  "-",
  "revoke",
  "next",
  "save",
  "=",
  "prettier",
  "pageFullscreen",
  "fullscreen",
  "preview",
  "htmlPreview",
  "catalog",
  "github"
], lPe = ["markdownTotal", "=", "scrollSwitch"], S5 = {
  "zh-CN": {
    toolbarTips: {
      bold: "加粗",
      underline: "下划线",
      italic: "斜体",
      strikeThrough: "删除线",
      title: "标题",
      sub: "下标",
      sup: "上标",
      quote: "引用",
      unorderedList: "无序列表",
      orderedList: "有序列表",
      task: "任务列表",
      codeRow: "行内代码",
      code: "块级代码",
      link: "链接",
      image: "图片",
      table: "表格",
      mermaid: "mermaid图",
      katex: "katex公式",
      revoke: "后退",
      next: "前进",
      save: "保存",
      prettier: "美化",
      pageFullscreen: "浏览器全屏",
      fullscreen: "屏幕全屏",
      preview: "预览",
      htmlPreview: "html代码预览",
      catalog: "目录",
      github: "源码地址"
    },
    titleItem: {
      h1: "一级标题",
      h2: "二级标题",
      h3: "三级标题",
      h4: "四级标题",
      h5: "五级标题",
      h6: "六级标题"
    },
    imgTitleItem: {
      link: "添加链接",
      upload: "上传图片",
      clip2upload: "裁剪上传"
    },
    linkModalTips: {
      linkTitle: "添加链接",
      imageTitle: "添加图片",
      descLabel: "链接描述：",
      descLabelPlaceHolder: "请输入描述...",
      urlLabel: "链接地址：",
      urlLabelPlaceHolder: "请输入链接...",
      buttonOK: "确定"
    },
    clipModalTips: {
      title: "裁剪图片上传",
      buttonUpload: "上传"
    },
    copyCode: {
      text: "复制代码",
      successTips: "已复制！",
      failTips: "复制失败！"
    },
    mermaid: {
      flow: "流程图",
      sequence: "时序图",
      gantt: "甘特图",
      class: "类图",
      state: "状态图",
      pie: "饼图",
      relationship: "关系图",
      journey: "旅程图"
    },
    katex: {
      inline: "行内公式",
      block: "块级公式"
    },
    footer: {
      markdownTotal: "字数",
      scrollAuto: "同步滚动"
    }
  },
  "en-US": {
    toolbarTips: {
      bold: "bold",
      underline: "underline",
      italic: "italic",
      strikeThrough: "strikeThrough",
      title: "title",
      sub: "subscript",
      sup: "superscript",
      quote: "quote",
      unorderedList: "unordered list",
      orderedList: "ordered list",
      task: "task list",
      codeRow: "inline code",
      code: "block-level code",
      link: "link",
      image: "image",
      table: "table",
      mermaid: "mermaid",
      katex: "formula",
      revoke: "revoke",
      next: "undo revoke",
      save: "save",
      prettier: "prettier",
      pageFullscreen: "fullscreen in page",
      fullscreen: "fullscreen",
      preview: "preview",
      htmlPreview: "html preview",
      catalog: "catalog",
      github: "source code"
    },
    titleItem: {
      h1: "Lv1 Heading",
      h2: "Lv2 Heading",
      h3: "Lv3 Heading",
      h4: "Lv4 Heading",
      h5: "Lv5 Heading",
      h6: "Lv6 Heading"
    },
    imgTitleItem: {
      link: "Add Img Link",
      upload: "Upload Img",
      clip2upload: "Clip Upload"
    },
    linkModalTips: {
      linkTitle: "Add Link",
      imageTitle: "Add Image",
      descLabel: "Desc:",
      descLabelPlaceHolder: "Enter a description...",
      urlLabel: "Link:",
      urlLabelPlaceHolder: "Enter a link...",
      buttonOK: "OK"
    },
    clipModalTips: {
      title: "Crop Image",
      buttonUpload: "Upload"
    },
    copyCode: {
      text: "Copy",
      successTips: "Copied!",
      failTips: "Copy failed!"
    },
    mermaid: {
      flow: "flow",
      sequence: "sequence",
      gantt: "gantt",
      class: "class",
      state: "state",
      pie: "pie",
      relationship: "relationship",
      journey: "journey"
    },
    katex: {
      inline: "inline",
      block: "block"
    },
    footer: {
      markdownTotal: "Character Count",
      scrollAuto: "Scroll Auto"
    }
  }
}, uPe = `${cr}/mermaid/10.6.1/mermaid.esm.min.mjs`, _5 = {
  js: `${cr}/KaTeX/0.16.9/katex.min.js`,
  css: `${cr}/KaTeX/0.16.9/katex.min.css`
}, C5 = {
  a11y: {
    light: `${cr}/highlight.js/11.8.0/styles/a11y-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/a11y-dark.min.css`
  },
  atom: {
    light: `${cr}/highlight.js/11.8.0/styles/atom-one-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/atom-one-dark.min.css`
  },
  github: {
    light: `${cr}/highlight.js/11.8.0/styles/github.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/github-dark.min.css`
  },
  gradient: {
    light: `${cr}/highlight.js/11.8.0/styles/gradient-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/gradient-dark.min.css`
  },
  kimbie: {
    light: `${cr}/highlight.js/11.8.0/styles/kimbie-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/kimbie-dark.min.css`
  },
  paraiso: {
    light: `${cr}/highlight.js/11.8.0/styles/paraiso-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/paraiso-dark.min.css`
  },
  qtcreator: {
    light: `${cr}/highlight.js/11.8.0/styles/qtcreator-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/qtcreator-dark.min.css`
  },
  stackoverflow: {
    light: `${cr}/highlight.js/11.8.0/styles/stackoverflow-light.min.css`,
    dark: `${cr}/highlight.js/11.8.0/styles/stackoverflow-dark.min.css`
  }
}, tl = {
  editorExtensions: {},
  editorConfig: {},
  codeMirrorExtensions: (n, e) => e,
  markdownItConfig: () => {
  },
  markdownItPlugins: (n) => n,
  iconfontType: "svg",
  mermaidConfig: (n) => n
}, LL = (n, e = 200) => {
  let t = 0;
  return (...r) => new Promise((i) => {
    t && (clearTimeout(t), i("cancel")), t = window.setTimeout(() => {
      n.apply(void 0, r), t = 0, i("done");
    }, e);
  });
}, vE = () => `${Date.now().toString(36)}${Math.random().toString(36).substring(2)}`;
var cPe = Object.defineProperty, hPe = (n, e, t) => e in n ? cPe(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, fPe = (n, e, t) => (hPe(n, typeof e != "symbol" ? e + "" : e, t), t);
let dPe = class {
  constructor() {
    fPe(this, "pools", {});
  }
  // 移除事件监听
  remove(e, t, r) {
    const i = this.pools[e] && this.pools[e][t];
    i && (this.pools[e][t] = i.filter((o) => o !== r));
  }
  // 清空全部事件，由于单一实例，多次注册会被共享内容
  clear(e) {
    this.pools[e] = {};
  }
  // 注册事件监听
  on(e, t) {
    return this.pools[e] || (this.pools[e] = {}), this.pools[e][t.name] || (this.pools[e][t.name] = []), this.pools[e][t.name].push(t.callback), this.pools[e][t.name].includes(t.callback);
  }
  // 触发事件
  emit(e, t, ...r) {
    this.pools[e] || (this.pools[e] = {});
    const i = this.pools[e][t];
    i && i.forEach((o) => {
      try {
        o(...r);
      } catch (s) {
        console.error(`${t} monitor event exception！`, s);
      }
    });
  }
};
const Gh = new dPe(), pPe = "buildFinished", A5 = "catalogChanged", gPe = "pushCatalog", Dq = "rerender", vPe = (n) => {
  if (!n)
    return n;
  const e = n.split(`
`), t = ['<span rn-wrapper aria-hidden="true">'];
  return e.forEach(() => {
    t.push("<span></span>");
  }), t.push("</span>"), `<span class="code-block">${n}</span>${t.join("")}`;
}, Hf = (n, e = "") => {
  const t = document.getElementById(n.id), r = n.onload;
  n.onload = null;
  const i = function(o) {
    typeof r == "function" && r.bind(this)(o), n.removeEventListener("load", i);
  };
  t ? e !== "" && (t.addEventListener("load", i), Reflect.get(window, e) && t.dispatchEvent(new Event("load"))) : (n.addEventListener("load", i), document.head.appendChild(n));
}, mPe = LL((n, e, t) => {
  const r = document.getElementById(n);
  r && r.setAttribute(e, t);
}, 10);
class Ut {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, t, r) {
    [e, t] = Ag(this, e, t);
    let i = [];
    return this.decompose(
      0,
      e,
      i,
      2
      /* Open.To */
    ), r.length && r.decompose(
      0,
      r.length,
      i,
      3
      /* Open.To */
    ), this.decompose(
      t,
      this.length,
      i,
      1
      /* Open.From */
    ), Ba.from(i, this.length - (t - e) + r.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, t = this.length) {
    [e, t] = Ag(this, e, t);
    let r = [];
    return this.decompose(e, t, r, 0), Ba.from(r, t - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let t = this.scanIdentical(e, 1), r = this.length - this.scanIdentical(e, -1), i = new ry(this), o = new ry(e);
    for (let s = t, a = t; ; ) {
      if (i.next(s), o.next(s), s = 0, i.lineBreak != o.lineBreak || i.done != o.done || i.value != o.value)
        return !1;
      if (a += i.value.length, i.done || a >= r)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new ry(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, t = this.length) {
    return new Lq(this, e, t);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, t) {
    let r;
    if (e == null)
      r = this.iter();
    else {
      t == null && (t = this.lines + 1);
      let i = this.line(e).from;
      r = this.iterRange(i, Math.max(i, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
    }
    return new Iq(r);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? Ut.empty : e.length <= 32 ? new Jn(e) : Ba.from(Jn.split(e, []));
  }
}
class Jn extends Ut {
  constructor(e, t = yPe(e)) {
    super(), this.text = e, this.length = t;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, t, r, i) {
    for (let o = 0; ; o++) {
      let s = this.text[o], a = i + s.length;
      if ((t ? r : a) >= e)
        return new bPe(i, a, r, s);
      i = a + 1, r++;
    }
  }
  decompose(e, t, r, i) {
    let o = e <= 0 && t >= this.length ? this : new Jn(T5(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
    if (i & 1) {
      let s = r.pop(), a = KO(o.text, s.text.slice(), 0, o.length);
      if (a.length <= 32)
        r.push(new Jn(a, s.length + o.length));
      else {
        let l = a.length >> 1;
        r.push(new Jn(a.slice(0, l)), new Jn(a.slice(l)));
      }
    } else
      r.push(o);
  }
  replace(e, t, r) {
    if (!(r instanceof Jn))
      return super.replace(e, t, r);
    [e, t] = Ag(this, e, t);
    let i = KO(this.text, KO(r.text, T5(this.text, 0, e)), t), o = this.length + r.length - (t - e);
    return i.length <= 32 ? new Jn(i, o) : Ba.from(Jn.split(i, []), o);
  }
  sliceString(e, t = this.length, r = `
`) {
    [e, t] = Ag(this, e, t);
    let i = "";
    for (let o = 0, s = 0; o <= t && s < this.text.length; s++) {
      let a = this.text[s], l = o + a.length;
      o > e && s && (i += r), e < l && t > o && (i += a.slice(Math.max(0, e - o), t - o)), o = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let t of this.text)
      e.push(t);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, t) {
    let r = [], i = -1;
    for (let o of e)
      r.push(o), i += o.length + 1, r.length == 32 && (t.push(new Jn(r, i)), r = [], i = -1);
    return i > -1 && t.push(new Jn(r, i)), t;
  }
}
class Ba extends Ut {
  constructor(e, t) {
    super(), this.children = e, this.length = t, this.lines = 0;
    for (let r of e)
      this.lines += r.lines;
  }
  lineInner(e, t, r, i) {
    for (let o = 0; ; o++) {
      let s = this.children[o], a = i + s.length, l = r + s.lines - 1;
      if ((t ? l : a) >= e)
        return s.lineInner(e, t, r, i);
      i = a + 1, r = l + 1;
    }
  }
  decompose(e, t, r, i) {
    for (let o = 0, s = 0; s <= t && o < this.children.length; o++) {
      let a = this.children[o], l = s + a.length;
      if (e <= l && t >= s) {
        let u = i & ((s <= e ? 1 : 0) | (l >= t ? 2 : 0));
        s >= e && l <= t && !u ? r.push(a) : a.decompose(e - s, t - s, r, u);
      }
      s = l + 1;
    }
  }
  replace(e, t, r) {
    if ([e, t] = Ag(this, e, t), r.lines < this.lines)
      for (let i = 0, o = 0; i < this.children.length; i++) {
        let s = this.children[i], a = o + s.length;
        if (e >= o && t <= a) {
          let l = s.replace(e - o, t - o, r), u = this.lines - s.lines + l.lines;
          if (l.lines < u >> 4 && l.lines > u >> 6) {
            let c = this.children.slice();
            return c[i] = l, new Ba(c, this.length - (t - e) + r.length);
          }
          return super.replace(o, a, l);
        }
        o = a + 1;
      }
    return super.replace(e, t, r);
  }
  sliceString(e, t = this.length, r = `
`) {
    [e, t] = Ag(this, e, t);
    let i = "";
    for (let o = 0, s = 0; o < this.children.length && s <= t; o++) {
      let a = this.children[o], l = s + a.length;
      s > e && o && (i += r), e < l && t > s && (i += a.sliceString(e - s, t - s, r)), s = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let t of this.children)
      t.flatten(e);
  }
  scanIdentical(e, t) {
    if (!(e instanceof Ba))
      return 0;
    let r = 0, [i, o, s, a] = t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; i += t, o += t) {
      if (i == s || o == a)
        return r;
      let l = this.children[i], u = e.children[o];
      if (l != u)
        return r + l.scanIdentical(u, t);
      r += l.length + 1;
    }
  }
  static from(e, t = e.reduce((r, i) => r + i.length + 1, -1)) {
    let r = 0;
    for (let d of e)
      r += d.lines;
    if (r < 32) {
      let d = [];
      for (let p of e)
        p.flatten(d);
      return new Jn(d, t);
    }
    let i = Math.max(
      32,
      r >> 5
      /* Tree.BranchShift */
    ), o = i << 1, s = i >> 1, a = [], l = 0, u = -1, c = [];
    function h(d) {
      let p;
      if (d.lines > o && d instanceof Ba)
        for (let g of d.children)
          h(g);
      else
        d.lines > s && (l > s || !l) ? (f(), a.push(d)) : d instanceof Jn && l && (p = c[c.length - 1]) instanceof Jn && d.lines + p.lines <= 32 ? (l += d.lines, u += d.length + 1, c[c.length - 1] = new Jn(p.text.concat(d.text), p.length + 1 + d.length)) : (l + d.lines > i && f(), l += d.lines, u += d.length + 1, c.push(d));
    }
    function f() {
      l != 0 && (a.push(c.length == 1 ? c[0] : Ba.from(c, u)), u = -1, l = c.length = 0);
    }
    for (let d of e)
      h(d);
    return f(), a.length == 1 ? a[0] : new Ba(a, t);
  }
}
Ut.empty = /* @__PURE__ */ new Jn([""], 0);
function yPe(n) {
  let e = -1;
  for (let t of n)
    e += t.length + 1;
  return e;
}
function KO(n, e, t = 0, r = 1e9) {
  for (let i = 0, o = 0, s = !0; o < n.length && i <= r; o++) {
    let a = n[o], l = i + a.length;
    l >= t && (l > r && (a = a.slice(0, r - i)), i < t && (a = a.slice(t - i)), s ? (e[e.length - 1] += a, s = !1) : e.push(a)), i = l + 1;
  }
  return e;
}
function T5(n, e, t) {
  return KO(n, [""], e, t);
}
class ry {
  constructor(e, t = 1) {
    this.dir = t, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [t > 0 ? 1 : (e instanceof Jn ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, t) {
    for (this.done = this.lineBreak = !1; ; ) {
      let r = this.nodes.length - 1, i = this.nodes[r], o = this.offsets[r], s = o >> 1, a = i instanceof Jn ? i.text.length : i.children.length;
      if (s == (t > 0 ? a : 0)) {
        if (r == 0)
          return this.done = !0, this.value = "", this;
        t > 0 && this.offsets[r - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((o & 1) == (t > 0 ? 0 : 1)) {
        if (this.offsets[r] += t, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (i instanceof Jn) {
        let l = i.text[s + (t < 0 ? -1 : 0)];
        if (this.offsets[r] += t, l.length > Math.max(0, e))
          return this.value = e == 0 ? l : t > 0 ? l.slice(e) : l.slice(0, l.length - e), this;
        e -= l.length;
      } else {
        let l = i.children[s + (t < 0 ? -1 : 0)];
        e > l.length ? (e -= l.length, this.offsets[r] += t) : (t < 0 && this.offsets[r]--, this.nodes.push(l), this.offsets.push(t > 0 ? 1 : (l instanceof Jn ? l.text.length : l.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class Lq {
  constructor(e, t, r) {
    this.value = "", this.done = !1, this.cursor = new ry(e, t > r ? -1 : 1), this.pos = t > r ? e.length : 0, this.from = Math.min(t, r), this.to = Math.max(t, r);
  }
  nextInner(e, t) {
    if (t < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
    let r = t < 0 ? this.pos - this.from : this.to - this.pos;
    e > r && (e = r), r -= e;
    let { value: i } = this.cursor.next(e);
    return this.pos += (i.length + e) * t, this.value = i.length <= r ? i : t < 0 ? i.slice(i.length - r) : i.slice(0, r), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class Iq {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: t, lineBreak: r, value: i } = this.inner.next(e);
    return t && this.afterBreak ? (this.value = "", this.afterBreak = !1) : t ? (this.done = !0, this.value = "") : r ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = i, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (Ut.prototype[Symbol.iterator] = function() {
  return this.iter();
}, ry.prototype[Symbol.iterator] = Lq.prototype[Symbol.iterator] = Iq.prototype[Symbol.iterator] = function() {
  return this;
});
let bPe = class {
  /**
  @internal
  */
  constructor(e, t, r, i) {
    this.from = e, this.to = t, this.number = r, this.text = i;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
};
function Ag(n, e, t) {
  return e = Math.max(0, Math.min(n.length, e)), [e, Math.max(e, Math.min(n.length, t))];
}
let Ap = /* @__PURE__ */ "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((n) => n ? parseInt(n, 36) : 1);
for (let n = 1; n < Ap.length; n++)
  Ap[n] += Ap[n - 1];
function OPe(n) {
  for (let e = 1; e < Ap.length; e += 2)
    if (Ap[e] > n)
      return Ap[e - 1] <= n;
  return !1;
}
function P5(n) {
  return n >= 127462 && n <= 127487;
}
const E5 = 8205;
function ni(n, e, t = !0, r = !0) {
  return (t ? Rq : wPe)(n, e, r);
}
function Rq(n, e, t) {
  if (e == n.length)
    return e;
  e && $q(n.charCodeAt(e)) && Nq(n.charCodeAt(e - 1)) && e--;
  let r = Xr(n, e);
  for (e += ls(r); e < n.length; ) {
    let i = Xr(n, e);
    if (r == E5 || i == E5 || t && OPe(i))
      e += ls(i), r = i;
    else if (P5(i)) {
      let o = 0, s = e - 2;
      for (; s >= 0 && P5(Xr(n, s)); )
        o++, s -= 2;
      if (o % 2 == 0)
        break;
      e += 2;
    } else
      break;
  }
  return e;
}
function wPe(n, e, t) {
  for (; e > 0; ) {
    let r = Rq(n, e - 2, t);
    if (r < e)
      return r;
    e--;
  }
  return 0;
}
function $q(n) {
  return n >= 56320 && n < 57344;
}
function Nq(n) {
  return n >= 55296 && n < 56320;
}
function Xr(n, e) {
  let t = n.charCodeAt(e);
  if (!Nq(t) || e + 1 == n.length)
    return t;
  let r = n.charCodeAt(e + 1);
  return $q(r) ? (t - 55296 << 10) + (r - 56320) + 65536 : t;
}
function IL(n) {
  return n <= 65535 ? String.fromCharCode(n) : (n -= 65536, String.fromCharCode((n >> 10) + 55296, (n & 1023) + 56320));
}
function ls(n) {
  return n < 65536 ? 1 : 2;
}
const mE = /\r\n?|\n/;
var Jr = /* @__PURE__ */ function(n) {
  return n[n.Simple = 0] = "Simple", n[n.TrackDel = 1] = "TrackDel", n[n.TrackBefore = 2] = "TrackBefore", n[n.TrackAfter = 3] = "TrackAfter", n;
}(Jr || (Jr = {}));
class nl {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2)
      e += this.sections[t];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2) {
      let r = this.sections[t + 1];
      e += r < 0 ? this.sections[t] : r;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let t = 0, r = 0, i = 0; t < this.sections.length; ) {
      let o = this.sections[t++], s = this.sections[t++];
      s < 0 ? (e(r, i, o), i += o) : i += s, r += o;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, t = !1) {
    yE(this, e, t);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let t = 0; t < this.sections.length; ) {
      let r = this.sections[t++], i = this.sections[t++];
      i < 0 ? e.push(r, i) : e.push(i, r);
    }
    return new nl(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : Bq(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `other` happened before the ones in `this`.
  */
  mapDesc(e, t = !1) {
    return e.empty ? this : bE(this, e, t);
  }
  mapPos(e, t = -1, r = Jr.Simple) {
    let i = 0, o = 0;
    for (let s = 0; s < this.sections.length; ) {
      let a = this.sections[s++], l = this.sections[s++], u = i + a;
      if (l < 0) {
        if (u > e)
          return o + (e - i);
        o += a;
      } else {
        if (r != Jr.Simple && u >= e && (r == Jr.TrackDel && i < e && u > e || r == Jr.TrackBefore && i < e || r == Jr.TrackAfter && u > e))
          return null;
        if (u > e || u == e && t < 0 && !a)
          return e == i || t < 0 ? o : o + l;
        o += l;
      }
      i = u;
    }
    if (e > i)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);
    return o;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, t = e) {
    for (let r = 0, i = 0; r < this.sections.length && i <= t; ) {
      let o = this.sections[r++], s = this.sections[r++], a = i + o;
      if (s >= 0 && i <= t && a >= e)
        return i < e && a > t ? "cover" : !0;
      i = a;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let t = 0; t < this.sections.length; ) {
      let r = this.sections[t++], i = this.sections[t++];
      e += (e ? " " : "") + r + (i >= 0 ? ":" + i : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new nl(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new nl(e);
  }
}
class _r extends nl {
  constructor(e, t) {
    super(e), this.inserted = t;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return yE(this, (t, r, i, o, s) => e = e.replace(i, i + (r - t), s), !1), e;
  }
  mapDesc(e, t = !1) {
    return bE(this, e, t, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let t = this.sections.slice(), r = [];
    for (let i = 0, o = 0; i < t.length; i += 2) {
      let s = t[i], a = t[i + 1];
      if (a >= 0) {
        t[i] = a, t[i + 1] = s;
        let l = i >> 1;
        for (; r.length < l; )
          r.push(Ut.empty);
        r.push(s ? e.slice(o, o + s) : Ut.empty);
      }
      o += s;
    }
    return new _r(t, r);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : Bq(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, t = !1) {
    return e.empty ? this : bE(this, e, t, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, t = !1) {
    yE(this, e, t);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return nl.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let t = [], r = [], i = [], o = new Uy(this);
    e:
      for (let s = 0, a = 0; ; ) {
        let l = s == e.length ? 1e9 : e[s++];
        for (; a < l || a == l && o.len == 0; ) {
          if (o.done)
            break e;
          let c = Math.min(o.len, l - a);
          mi(i, c, -1);
          let h = o.ins == -1 ? -1 : o.off == 0 ? o.ins : 0;
          mi(t, c, h), h > 0 && tc(r, t, o.text), o.forward(c), a += c;
        }
        let u = e[s++];
        for (; a < u; ) {
          if (o.done)
            break e;
          let c = Math.min(o.len, u - a);
          mi(t, c, -1), mi(i, c, o.ins == -1 ? -1 : o.off == 0 ? o.ins : 0), o.forward(c), a += c;
        }
      }
    return {
      changes: new _r(t, r),
      filtered: nl.create(i)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let t = 0; t < this.sections.length; t += 2) {
      let r = this.sections[t], i = this.sections[t + 1];
      i < 0 ? e.push(r) : i == 0 ? e.push([r]) : e.push([r].concat(this.inserted[t >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, t, r) {
    let i = [], o = [], s = 0, a = null;
    function l(c = !1) {
      if (!c && !i.length)
        return;
      s < t && mi(i, t - s, -1);
      let h = new _r(i, o);
      a = a ? a.compose(h.map(a)) : h, i = [], o = [], s = 0;
    }
    function u(c) {
      if (Array.isArray(c))
        for (let h of c)
          u(h);
      else if (c instanceof _r) {
        if (c.length != t)
          throw new RangeError(`Mismatched change set length (got ${c.length}, expected ${t})`);
        l(), a = a ? a.compose(c.map(a)) : c;
      } else {
        let { from: h, to: f = h, insert: d } = c;
        if (h > f || h < 0 || f > t)
          throw new RangeError(`Invalid change range ${h} to ${f} (in doc of length ${t})`);
        let p = d ? typeof d == "string" ? Ut.of(d.split(r || mE)) : d : Ut.empty, g = p.length;
        if (h == f && g == 0)
          return;
        h < s && l(), h > s && mi(i, h - s, -1), mi(i, f - h, g), tc(o, i, p), s = f;
      }
    }
    return u(e), l(!a), a;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new _r(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let t = [], r = [];
    for (let i = 0; i < e.length; i++) {
      let o = e[i];
      if (typeof o == "number")
        t.push(o, -1);
      else {
        if (!Array.isArray(o) || typeof o[0] != "number" || o.some((s, a) => a && typeof s != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (o.length == 1)
          t.push(o[0], 0);
        else {
          for (; r.length < i; )
            r.push(Ut.empty);
          r[i] = Ut.of(o.slice(1)), t.push(o[0], r[i].length);
        }
      }
    }
    return new _r(t, r);
  }
  /**
  @internal
  */
  static createSet(e, t) {
    return new _r(e, t);
  }
}
function mi(n, e, t, r = !1) {
  if (e == 0 && t <= 0)
    return;
  let i = n.length - 2;
  i >= 0 && t <= 0 && t == n[i + 1] ? n[i] += e : e == 0 && n[i] == 0 ? n[i + 1] += t : r ? (n[i] += e, n[i + 1] += t) : n.push(e, t);
}
function tc(n, e, t) {
  if (t.length == 0)
    return;
  let r = e.length - 2 >> 1;
  if (r < n.length)
    n[n.length - 1] = n[n.length - 1].append(t);
  else {
    for (; n.length < r; )
      n.push(Ut.empty);
    n.push(t);
  }
}
function yE(n, e, t) {
  let r = n.inserted;
  for (let i = 0, o = 0, s = 0; s < n.sections.length; ) {
    let a = n.sections[s++], l = n.sections[s++];
    if (l < 0)
      i += a, o += a;
    else {
      let u = i, c = o, h = Ut.empty;
      for (; u += a, c += l, l && r && (h = h.append(r[s - 2 >> 1])), !(t || s == n.sections.length || n.sections[s + 1] < 0); )
        a = n.sections[s++], l = n.sections[s++];
      e(i, u, o, c, h), i = u, o = c;
    }
  }
}
function bE(n, e, t, r = !1) {
  let i = [], o = r ? [] : null, s = new Uy(n), a = new Uy(e);
  for (let l = -1; ; )
    if (s.ins == -1 && a.ins == -1) {
      let u = Math.min(s.len, a.len);
      mi(i, u, -1), s.forward(u), a.forward(u);
    } else if (a.ins >= 0 && (s.ins < 0 || l == s.i || s.off == 0 && (a.len < s.len || a.len == s.len && !t))) {
      let u = a.len;
      for (mi(i, a.ins, -1); u; ) {
        let c = Math.min(s.len, u);
        s.ins >= 0 && l < s.i && s.len <= c && (mi(i, 0, s.ins), o && tc(o, i, s.text), l = s.i), s.forward(c), u -= c;
      }
      a.next();
    } else if (s.ins >= 0) {
      let u = 0, c = s.len;
      for (; c; )
        if (a.ins == -1) {
          let h = Math.min(c, a.len);
          u += h, c -= h, a.forward(h);
        } else if (a.ins == 0 && a.len < c)
          c -= a.len, a.next();
        else
          break;
      mi(i, u, l < s.i ? s.ins : 0), o && l < s.i && tc(o, i, s.text), l = s.i, s.forward(s.len - c);
    } else {
      if (s.done && a.done)
        return o ? _r.createSet(i, o) : nl.create(i);
      throw new Error("Mismatched change set lengths");
    }
}
function Bq(n, e, t = !1) {
  let r = [], i = t ? [] : null, o = new Uy(n), s = new Uy(e);
  for (let a = !1; ; ) {
    if (o.done && s.done)
      return i ? _r.createSet(r, i) : nl.create(r);
    if (o.ins == 0)
      mi(r, o.len, 0, a), o.next();
    else if (s.len == 0 && !s.done)
      mi(r, 0, s.ins, a), i && tc(i, r, s.text), s.next();
    else {
      if (o.done || s.done)
        throw new Error("Mismatched change set lengths");
      {
        let l = Math.min(o.len2, s.len), u = r.length;
        if (o.ins == -1) {
          let c = s.ins == -1 ? -1 : s.off ? 0 : s.ins;
          mi(r, l, c, a), i && c && tc(i, r, s.text);
        } else
          s.ins == -1 ? (mi(r, o.off ? 0 : o.len, l, a), i && tc(i, r, o.textBit(l))) : (mi(r, o.off ? 0 : o.len, s.off ? 0 : s.ins, a), i && !s.off && tc(i, r, s.text));
        a = (o.ins > l || s.ins >= 0 && s.len > l) && (a || r.length > u), o.forward2(l), s.forward(l);
      }
    }
  }
}
class Uy {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, t = this.i - 2 >> 1;
    return t >= e.length ? Ut.empty : e[t];
  }
  textBit(e) {
    let { inserted: t } = this.set, r = this.i - 2 >> 1;
    return r >= t.length && !e ? Ut.empty : t[r].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class sf {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.flags = r;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, t = -1) {
    let r, i;
    return this.empty ? r = i = e.mapPos(this.from, t) : (r = e.mapPos(this.from, 1), i = e.mapPos(this.to, -1)), r == this.from && i == this.to ? this : new sf(r, i, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, t = e) {
    if (e <= this.anchor && t >= this.anchor)
      return ce.range(e, t);
    let r = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
    return ce.range(this.anchor, r);
  }
  /**
  Compare this range to another range.
  */
  eq(e, t = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!t || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return ce.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, t, r) {
    return new sf(e, t, r);
  }
}
class ce {
  constructor(e, t) {
    this.ranges = e, this.mainIndex = t;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, t = -1) {
    return e.empty ? this : ce.create(this.ranges.map((r) => r.map(e, t)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, t = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let r = 0; r < this.ranges.length; r++)
      if (!this.ranges[r].eq(e.ranges[r], t))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new ce([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, t = !0) {
    return ce.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, t = this.mainIndex) {
    let r = this.ranges.slice();
    return r[t] = e, ce.create(r, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new ce(e.ranges.map((t) => sf.fromJSON(t)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, t = e) {
    return new ce([ce.range(e, t)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, t = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let r = 0, i = 0; i < e.length; i++) {
      let o = e[i];
      if (o.empty ? o.from <= r : o.from < r)
        return ce.normalized(e.slice(), t);
      r = o.to;
    }
    return new ce(e, t);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, t = 0, r, i) {
    return sf.create(e, e, (t == 0 ? 0 : t < 0 ? 8 : 16) | (r == null ? 7 : Math.min(6, r)) | (i ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, t, r, i) {
    let o = (r ?? 16777215) << 6 | (i == null ? 7 : Math.min(6, i));
    return t < e ? sf.create(t, e, 48 | o) : sf.create(e, t, (t > e ? 8 : 0) | o);
  }
  /**
  @internal
  */
  static normalized(e, t = 0) {
    let r = e[t];
    e.sort((i, o) => i.from - o.from), t = e.indexOf(r);
    for (let i = 1; i < e.length; i++) {
      let o = e[i], s = e[i - 1];
      if (o.empty ? o.from <= s.to : o.from < s.to) {
        let a = s.from, l = Math.max(o.to, s.to);
        i <= t && t--, e.splice(--i, 2, o.anchor > o.head ? ce.range(l, a) : ce.range(a, l));
      }
    }
    return new ce(e, t);
  }
}
function Vq(n, e) {
  for (let t of n.ranges)
    if (t.to > e)
      throw new RangeError("Selection points outside of document");
}
let RL = 0;
class Be {
  constructor(e, t, r, i, o) {
    this.combine = e, this.compareInput = t, this.compare = r, this.isStatic = i, this.id = RL++, this.default = e([]), this.extensions = typeof o == "function" ? o(this) : o;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new Be(e.combine || ((t) => t), e.compareInput || ((t, r) => t === r), e.compare || (e.combine ? (t, r) => t === r : $L), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new JO([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new JO(e, this, 1, t);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new JO(e, this, 2, t);
  }
  from(e, t) {
    return t || (t = (r) => r), this.compute([e], (r) => t(r.field(e)));
  }
}
function $L(n, e) {
  return n == e || n.length == e.length && n.every((t, r) => t === e[r]);
}
class JO {
  constructor(e, t, r, i) {
    this.dependencies = e, this.facet = t, this.type = r, this.value = i, this.id = RL++;
  }
  dynamicSlot(e) {
    var t;
    let r = this.value, i = this.facet.compareInput, o = this.id, s = e[o] >> 1, a = this.type == 2, l = !1, u = !1, c = [];
    for (let h of this.dependencies)
      h == "doc" ? l = !0 : h == "selection" ? u = !0 : ((t = e[h.id]) !== null && t !== void 0 ? t : 1) & 1 || c.push(e[h.id]);
    return {
      create(h) {
        return h.values[s] = r(h), 1;
      },
      update(h, f) {
        if (l && f.docChanged || u && (f.docChanged || f.selection) || OE(h, c)) {
          let d = r(h);
          if (a ? !k5(d, h.values[s], i) : !i(d, h.values[s]))
            return h.values[s] = d, 1;
        }
        return 0;
      },
      reconfigure: (h, f) => {
        let d, p = f.config.address[o];
        if (p != null) {
          let g = cx(f, p);
          if (this.dependencies.every((v) => v instanceof Be ? f.facet(v) === h.facet(v) : v instanceof Wr ? f.field(v, !1) == h.field(v, !1) : !0) || (a ? k5(d = r(h), g, i) : i(d = r(h), g)))
            return h.values[s] = g, 0;
        } else
          d = r(h);
        return h.values[s] = d, 1;
      }
    };
  }
}
function k5(n, e, t) {
  if (n.length != e.length)
    return !1;
  for (let r = 0; r < n.length; r++)
    if (!t(n[r], e[r]))
      return !1;
  return !0;
}
function OE(n, e) {
  let t = !1;
  for (let r of e)
    iy(n, r) & 1 && (t = !0);
  return t;
}
function xPe(n, e, t) {
  let r = t.map((l) => n[l.id]), i = t.map((l) => l.type), o = r.filter((l) => !(l & 1)), s = n[e.id] >> 1;
  function a(l) {
    let u = [];
    for (let c = 0; c < r.length; c++) {
      let h = cx(l, r[c]);
      if (i[c] == 2)
        for (let f of h)
          u.push(f);
      else
        u.push(h);
    }
    return e.combine(u);
  }
  return {
    create(l) {
      for (let u of r)
        iy(l, u);
      return l.values[s] = a(l), 1;
    },
    update(l, u) {
      if (!OE(l, o))
        return 0;
      let c = a(l);
      return e.compare(c, l.values[s]) ? 0 : (l.values[s] = c, 1);
    },
    reconfigure(l, u) {
      let c = OE(l, r), h = u.config.facets[e.id], f = u.facet(e);
      if (h && !c && $L(t, h))
        return l.values[s] = f, 0;
      let d = a(l);
      return e.compare(d, f) ? (l.values[s] = f, 0) : (l.values[s] = d, 1);
    }
  };
}
const M5 = /* @__PURE__ */ Be.define({ static: !0 });
class Wr {
  constructor(e, t, r, i, o) {
    this.id = e, this.createF = t, this.updateF = r, this.compareF = i, this.spec = o, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let t = new Wr(RL++, e.create, e.update, e.compare || ((r, i) => r === i), e);
    return e.provide && (t.provides = e.provide(t)), t;
  }
  create(e) {
    let t = e.facet(M5).find((r) => r.field == this);
    return ((t == null ? void 0 : t.create) || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let t = e[this.id] >> 1;
    return {
      create: (r) => (r.values[t] = this.create(r), 1),
      update: (r, i) => {
        let o = r.values[t], s = this.updateF(o, i);
        return this.compareF(o, s) ? 0 : (r.values[t] = s, 1);
      },
      reconfigure: (r, i) => i.config.address[this.id] != null ? (r.values[t] = i.field(this), 0) : (r.values[t] = this.create(r), 1)
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, M5.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const jh = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Mv(n) {
  return (e) => new zq(e, n);
}
const pd = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Mv(jh.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Mv(jh.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Mv(jh.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Mv(jh.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Mv(jh.lowest)
};
class zq {
  constructor(e, t) {
    this.inner = e, this.prec = t;
  }
}
class m_ {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new wE(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return m_.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class wE {
  constructor(e, t) {
    this.compartment = e, this.inner = t;
  }
}
class ux {
  constructor(e, t, r, i, o, s) {
    for (this.base = e, this.compartments = t, this.dynamicSlots = r, this.address = i, this.staticValues = o, this.facets = s, this.statusTemplate = []; this.statusTemplate.length < r.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let t = this.address[e.id];
    return t == null ? e.default : this.staticValues[t >> 1];
  }
  static resolve(e, t, r) {
    let i = [], o = /* @__PURE__ */ Object.create(null), s = /* @__PURE__ */ new Map();
    for (let f of SPe(e, t, s))
      f instanceof Wr ? i.push(f) : (o[f.facet.id] || (o[f.facet.id] = [])).push(f);
    let a = /* @__PURE__ */ Object.create(null), l = [], u = [];
    for (let f of i)
      a[f.id] = u.length << 1, u.push((d) => f.slot(d));
    let c = r == null ? void 0 : r.config.facets;
    for (let f in o) {
      let d = o[f], p = d[0].facet, g = c && c[f] || [];
      if (d.every(
        (v) => v.type == 0
        /* Provider.Static */
      ))
        if (a[p.id] = l.length << 1 | 1, $L(g, d))
          l.push(r.facet(p));
        else {
          let v = p.combine(d.map((m) => m.value));
          l.push(r && p.compare(v, r.facet(p)) ? r.facet(p) : v);
        }
      else {
        for (let v of d)
          v.type == 0 ? (a[v.id] = l.length << 1 | 1, l.push(v.value)) : (a[v.id] = u.length << 1, u.push((m) => v.dynamicSlot(m)));
        a[p.id] = u.length << 1, u.push((v) => xPe(v, p, d));
      }
    }
    let h = u.map((f) => f(a));
    return new ux(e, s, h, a, l, o);
  }
}
function SPe(n, e, t) {
  let r = [[], [], [], [], []], i = /* @__PURE__ */ new Map();
  function o(s, a) {
    let l = i.get(s);
    if (l != null) {
      if (l <= a)
        return;
      let u = r[l].indexOf(s);
      u > -1 && r[l].splice(u, 1), s instanceof wE && t.delete(s.compartment);
    }
    if (i.set(s, a), Array.isArray(s))
      for (let u of s)
        o(u, a);
    else if (s instanceof wE) {
      if (t.has(s.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let u = e.get(s.compartment) || s.inner;
      t.set(s.compartment, u), o(u, a);
    } else if (s instanceof zq)
      o(s.inner, s.prec);
    else if (s instanceof Wr)
      r[a].push(s), s.provides && o(s.provides, a);
    else if (s instanceof JO)
      r[a].push(s), s.facet.extensions && o(s.facet.extensions, jh.default);
    else {
      let u = s.extension;
      if (!u)
        throw new Error(`Unrecognized extension value in extension set (${s}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      o(u, a);
    }
  }
  return o(n, jh.default), r.reduce((s, a) => s.concat(a));
}
function iy(n, e) {
  if (e & 1)
    return 2;
  let t = e >> 1, r = n.status[t];
  if (r == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (r & 2)
    return r;
  n.status[t] = 4;
  let i = n.computeSlot(n, n.config.dynamicSlots[t]);
  return n.status[t] = 2 | i;
}
function cx(n, e) {
  return e & 1 ? n.config.staticValues[e >> 1] : n.values[e >> 1];
}
const Fq = /* @__PURE__ */ Be.define(), xE = /* @__PURE__ */ Be.define({
  combine: (n) => n.some((e) => e),
  static: !0
}), Qq = /* @__PURE__ */ Be.define({
  combine: (n) => n.length ? n[0] : void 0,
  static: !0
}), Zq = /* @__PURE__ */ Be.define(), Wq = /* @__PURE__ */ Be.define(), Gq = /* @__PURE__ */ Be.define(), jq = /* @__PURE__ */ Be.define({
  combine: (n) => n.length ? n[0] : !1
});
class gu {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new _Pe();
  }
}
class _Pe {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new gu(this, e);
  }
}
class CPe {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new wt(this, e);
  }
}
class wt {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let t = this.type.map(this.value, e);
    return t === void 0 ? void 0 : t == this.value ? this : new wt(this.type, t);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new CPe(e.map || ((t) => t));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, t) {
    if (!e.length)
      return e;
    let r = [];
    for (let i of e) {
      let o = i.map(t);
      o && r.push(o);
    }
    return r;
  }
}
wt.reconfigure = /* @__PURE__ */ wt.define();
wt.appendConfig = /* @__PURE__ */ wt.define();
class fr {
  constructor(e, t, r, i, o, s) {
    this.startState = e, this.changes = t, this.selection = r, this.effects = i, this.annotations = o, this.scrollIntoView = s, this._doc = null, this._state = null, r && Vq(r, t.newLength), o.some((a) => a.type == fr.time) || (this.annotations = o.concat(fr.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, t, r, i, o, s) {
    return new fr(e, t, r, i, o, s);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let t of this.annotations)
      if (t.type == e)
        return t.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let t = this.annotation(fr.userEvent);
    return !!(t && (t == e || t.length > e.length && t.slice(0, e.length) == e && t[e.length] == "."));
  }
}
fr.time = /* @__PURE__ */ gu.define();
fr.userEvent = /* @__PURE__ */ gu.define();
fr.addToHistory = /* @__PURE__ */ gu.define();
fr.remote = /* @__PURE__ */ gu.define();
function APe(n, e) {
  let t = [];
  for (let r = 0, i = 0; ; ) {
    let o, s;
    if (r < n.length && (i == e.length || e[i] >= n[r]))
      o = n[r++], s = n[r++];
    else if (i < e.length)
      o = e[i++], s = e[i++];
    else
      return t;
    !t.length || t[t.length - 1] < o ? t.push(o, s) : t[t.length - 1] < s && (t[t.length - 1] = s);
  }
}
function Hq(n, e, t) {
  var r;
  let i, o, s;
  return t ? (i = e.changes, o = _r.empty(e.changes.length), s = n.changes.compose(e.changes)) : (i = e.changes.map(n.changes), o = n.changes.mapDesc(e.changes, !0), s = n.changes.compose(i)), {
    changes: s,
    selection: e.selection ? e.selection.map(o) : (r = n.selection) === null || r === void 0 ? void 0 : r.map(i),
    effects: wt.mapEffects(n.effects, i).concat(wt.mapEffects(e.effects, o)),
    annotations: n.annotations.length ? n.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: n.scrollIntoView || e.scrollIntoView
  };
}
function SE(n, e, t) {
  let r = e.selection, i = Tp(e.annotations);
  return e.userEvent && (i = i.concat(fr.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof _r ? e.changes : _r.of(e.changes || [], t, n.facet(Qq)),
    selection: r && (r instanceof ce ? r : ce.single(r.anchor, r.head)),
    effects: Tp(e.effects),
    annotations: i,
    scrollIntoView: !!e.scrollIntoView
  };
}
function qq(n, e, t) {
  let r = SE(n, e.length ? e[0] : {}, n.doc.length);
  e.length && e[0].filter === !1 && (t = !1);
  for (let o = 1; o < e.length; o++) {
    e[o].filter === !1 && (t = !1);
    let s = !!e[o].sequential;
    r = Hq(r, SE(n, e[o], s ? r.changes.newLength : n.doc.length), s);
  }
  let i = fr.create(n, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);
  return PPe(t ? TPe(i) : i);
}
function TPe(n) {
  let e = n.startState, t = !0;
  for (let i of e.facet(Zq)) {
    let o = i(n);
    if (o === !1) {
      t = !1;
      break;
    }
    Array.isArray(o) && (t = t === !0 ? o : APe(t, o));
  }
  if (t !== !0) {
    let i, o;
    if (t === !1)
      o = n.changes.invertedDesc, i = _r.empty(e.doc.length);
    else {
      let s = n.changes.filter(t);
      i = s.changes, o = s.filtered.mapDesc(s.changes).invertedDesc;
    }
    n = fr.create(e, i, n.selection && n.selection.map(o), wt.mapEffects(n.effects, o), n.annotations, n.scrollIntoView);
  }
  let r = e.facet(Wq);
  for (let i = r.length - 1; i >= 0; i--) {
    let o = r[i](n);
    o instanceof fr ? n = o : Array.isArray(o) && o.length == 1 && o[0] instanceof fr ? n = o[0] : n = qq(e, Tp(o), !1);
  }
  return n;
}
function PPe(n) {
  let e = n.startState, t = e.facet(Gq), r = n;
  for (let i = t.length - 1; i >= 0; i--) {
    let o = t[i](n);
    o && Object.keys(o).length && (r = Hq(r, SE(e, o, n.changes.newLength), !0));
  }
  return r == n ? n : fr.create(e, n.changes, n.selection, r.effects, r.annotations, r.scrollIntoView);
}
const EPe = [];
function Tp(n) {
  return n == null ? EPe : Array.isArray(n) ? n : [n];
}
var Rn = /* @__PURE__ */ function(n) {
  return n[n.Word = 0] = "Word", n[n.Space = 1] = "Space", n[n.Other = 2] = "Other", n;
}(Rn || (Rn = {}));
const kPe = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let _E;
try {
  _E = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function MPe(n) {
  if (_E)
    return _E.test(n);
  for (let e = 0; e < n.length; e++) {
    let t = n[e];
    if (/\w/.test(t) || t > "" && (t.toUpperCase() != t.toLowerCase() || kPe.test(t)))
      return !0;
  }
  return !1;
}
function DPe(n) {
  return (e) => {
    if (!/\S/.test(e))
      return Rn.Space;
    if (MPe(e))
      return Rn.Word;
    for (let t = 0; t < n.length; t++)
      if (e.indexOf(n[t]) > -1)
        return Rn.Word;
    return Rn.Other;
  };
}
class Yt {
  constructor(e, t, r, i, o, s) {
    this.config = e, this.doc = t, this.selection = r, this.values = i, this.status = e.statusTemplate.slice(), this.computeSlot = o, s && (s._state = this);
    for (let a = 0; a < this.config.dynamicSlots.length; a++)
      iy(this, a << 1);
    this.computeSlot = null;
  }
  field(e, t = !0) {
    let r = this.config.address[e.id];
    if (r == null) {
      if (t)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return iy(this, r), cx(this, r);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return qq(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let t = this.config, { base: r, compartments: i } = t;
    for (let a of e.effects)
      a.is(m_.reconfigure) ? (t && (i = /* @__PURE__ */ new Map(), t.compartments.forEach((l, u) => i.set(u, l)), t = null), i.set(a.value.compartment, a.value.extension)) : a.is(wt.reconfigure) ? (t = null, r = a.value) : a.is(wt.appendConfig) && (t = null, r = Tp(r).concat(a.value));
    let o;
    t ? o = e.startState.values.slice() : (t = ux.resolve(r, i, this), o = new Yt(t, this.doc, this.selection, t.dynamicSlots.map(() => null), (l, u) => u.reconfigure(l, this), null).values);
    let s = e.startState.facet(xE) ? e.newSelection : e.newSelection.asSingle();
    new Yt(t, e.newDoc, s, o, (a, l) => l.update(a, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({
      changes: { from: t.from, to: t.to, insert: e },
      range: ce.cursor(t.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let t = this.selection, r = e(t.ranges[0]), i = this.changes(r.changes), o = [r.range], s = Tp(r.effects);
    for (let a = 1; a < t.ranges.length; a++) {
      let l = e(t.ranges[a]), u = this.changes(l.changes), c = u.map(i);
      for (let f = 0; f < a; f++)
        o[f] = o[f].map(c);
      let h = i.mapDesc(u, !0);
      o.push(l.range.map(h)), i = i.compose(c), s = wt.mapEffects(s, c).concat(wt.mapEffects(Tp(l.effects), h));
    }
    return {
      changes: i,
      selection: ce.create(o, t.mainIndex),
      effects: s
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof _r ? e : _r.of(e, this.doc.length, this.facet(Yt.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return Ut.of(e.split(this.facet(Yt.lineSeparator) || mE));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, t = this.doc.length) {
    return this.doc.sliceString(e, t, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let t = this.config.address[e.id];
    return t == null ? e.default : (iy(this, t), cx(this, t));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let t = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let r in e) {
        let i = e[r];
        i instanceof Wr && this.config.address[i.id] != null && (t[r] = i.spec.toJSON(this.field(e[r]), this));
      }
    return t;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, t = {}, r) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let i = [];
    if (r) {
      for (let o in r)
        if (Object.prototype.hasOwnProperty.call(e, o)) {
          let s = r[o], a = e[o];
          i.push(s.init((l) => s.spec.fromJSON(a, l)));
        }
    }
    return Yt.create({
      doc: e.doc,
      selection: ce.fromJSON(e.selection),
      extensions: t.extensions ? i.concat([t.extensions]) : i
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let t = ux.resolve(e.extensions || [], /* @__PURE__ */ new Map()), r = e.doc instanceof Ut ? e.doc : Ut.of((e.doc || "").split(t.staticFacet(Yt.lineSeparator) || mE)), i = e.selection ? e.selection instanceof ce ? e.selection : ce.single(e.selection.anchor, e.selection.head) : ce.single(0);
    return Vq(i, r.length), t.staticFacet(xE) || (i = i.asSingle()), new Yt(t, r, i, t.dynamicSlots.map(() => null), (o, s) => s.create(o), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(Yt.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(Yt.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(jq);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...t) {
    for (let r of this.facet(Yt.phrases))
      if (Object.prototype.hasOwnProperty.call(r, e)) {
        e = r[e];
        break;
      }
    return t.length && (e = e.replace(/\$(\$|\d*)/g, (r, i) => {
      if (i == "$")
        return "$";
      let o = +(i || 1);
      return !o || o > t.length ? r : t[o - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, t, r = -1) {
    let i = [];
    for (let o of this.facet(Fq))
      for (let s of o(this, t, r))
        Object.prototype.hasOwnProperty.call(s, e) && i.push(s[e]);
    return i;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return DPe(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: t, from: r, length: i } = this.doc.lineAt(e), o = this.charCategorizer(e), s = e - r, a = e - r;
    for (; s > 0; ) {
      let l = ni(t, s, !1);
      if (o(t.slice(l, s)) != Rn.Word)
        break;
      s = l;
    }
    for (; a < i; ) {
      let l = ni(t, a);
      if (o(t.slice(a, l)) != Rn.Word)
        break;
      a = l;
    }
    return s == a ? null : ce.range(s + r, a + r);
  }
}
Yt.allowMultipleSelections = xE;
Yt.tabSize = /* @__PURE__ */ Be.define({
  combine: (n) => n.length ? n[0] : 4
});
Yt.lineSeparator = Qq;
Yt.readOnly = jq;
Yt.phrases = /* @__PURE__ */ Be.define({
  compare(n, e) {
    let t = Object.keys(n), r = Object.keys(e);
    return t.length == r.length && t.every((i) => n[i] == e[i]);
  }
});
Yt.languageData = Fq;
Yt.changeFilter = Zq;
Yt.transactionFilter = Wq;
Yt.transactionExtender = Gq;
m_.reconfigure = /* @__PURE__ */ wt.define();
function Ol(n, e, t = {}) {
  let r = {};
  for (let i of n)
    for (let o of Object.keys(i)) {
      let s = i[o], a = r[o];
      if (a === void 0)
        r[o] = s;
      else if (!(a === s || s === void 0))
        if (Object.hasOwnProperty.call(t, o))
          r[o] = t[o](a, s);
        else
          throw new Error("Config merge conflict for field " + o);
    }
  for (let i in e)
    r[i] === void 0 && (r[i] = e[i]);
  return r;
}
class qf {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, t = e) {
    return CE.create(e, t, this);
  }
}
qf.prototype.startSide = qf.prototype.endSide = 0;
qf.prototype.point = !1;
qf.prototype.mapMode = Jr.TrackDel;
let CE = class Yq {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.value = r;
  }
  /**
  @internal
  */
  static create(e, t, r) {
    return new Yq(e, t, r);
  }
};
function AE(n, e) {
  return n.from - e.from || n.value.startSide - e.value.startSide;
}
class NL {
  constructor(e, t, r, i) {
    this.from = e, this.to = t, this.value = r, this.maxPoint = i;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, t, r, i = 0) {
    let o = r ? this.to : this.from;
    for (let s = i, a = o.length; ; ) {
      if (s == a)
        return s;
      let l = s + a >> 1, u = o[l] - e || (r ? this.value[l].endSide : this.value[l].startSide) - t;
      if (l == s)
        return u >= 0 ? s : a;
      u >= 0 ? a = l : s = l + 1;
    }
  }
  between(e, t, r, i) {
    for (let o = this.findIndex(t, -1e9, !0), s = this.findIndex(r, 1e9, !1, o); o < s; o++)
      if (i(this.from[o] + e, this.to[o] + e, this.value[o]) === !1)
        return !1;
  }
  map(e, t) {
    let r = [], i = [], o = [], s = -1, a = -1;
    for (let l = 0; l < this.value.length; l++) {
      let u = this.value[l], c = this.from[l] + e, h = this.to[l] + e, f, d;
      if (c == h) {
        let p = t.mapPos(c, u.startSide, u.mapMode);
        if (p == null || (f = d = p, u.startSide != u.endSide && (d = t.mapPos(c, u.endSide), d < f)))
          continue;
      } else if (f = t.mapPos(c, u.startSide), d = t.mapPos(h, u.endSide), f > d || f == d && u.startSide > 0 && u.endSide <= 0)
        continue;
      (d - f || u.endSide - u.startSide) < 0 || (s < 0 && (s = f), u.point && (a = Math.max(a, d - f)), r.push(u), i.push(f - s), o.push(d - s));
    }
    return { mapped: r.length ? new NL(i, o, r, a) : null, pos: s };
  }
}
class Zt {
  constructor(e, t, r, i) {
    this.chunkPos = e, this.chunk = t, this.nextLayer = r, this.maxPoint = i;
  }
  /**
  @internal
  */
  static create(e, t, r, i) {
    return new Zt(e, t, r, i);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let t of this.chunk)
      e += t.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: t = [], sort: r = !1, filterFrom: i = 0, filterTo: o = this.length } = e, s = e.filter;
    if (t.length == 0 && !s)
      return this;
    if (r && (t = t.slice().sort(AE)), this.isEmpty)
      return t.length ? Zt.of(t) : this;
    let a = new Xq(this, null, -1).goto(0), l = 0, u = [], c = new Ec();
    for (; a.value || l < t.length; )
      if (l < t.length && (a.from - t[l].from || a.startSide - t[l].value.startSide) >= 0) {
        let h = t[l++];
        c.addInner(h.from, h.to, h.value) || u.push(h);
      } else
        a.rangeIndex == 1 && a.chunkIndex < this.chunk.length && (l == t.length || this.chunkEnd(a.chunkIndex) < t[l].from) && (!s || i > this.chunkEnd(a.chunkIndex) || o < this.chunkPos[a.chunkIndex]) && c.addChunk(this.chunkPos[a.chunkIndex], this.chunk[a.chunkIndex]) ? a.nextChunk() : ((!s || i > a.to || o < a.from || s(a.from, a.to, a.value)) && (c.addInner(a.from, a.to, a.value) || u.push(CE.create(a.from, a.to, a.value))), a.next());
    return c.finishInner(this.nextLayer.isEmpty && !u.length ? Zt.empty : this.nextLayer.update({ add: u, filter: s, filterFrom: i, filterTo: o }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let t = [], r = [], i = -1;
    for (let s = 0; s < this.chunk.length; s++) {
      let a = this.chunkPos[s], l = this.chunk[s], u = e.touchesRange(a, a + l.length);
      if (u === !1)
        i = Math.max(i, l.maxPoint), t.push(l), r.push(e.mapPos(a));
      else if (u === !0) {
        let { mapped: c, pos: h } = l.map(a, e);
        c && (i = Math.max(i, c.maxPoint), t.push(c), r.push(h));
      }
    }
    let o = this.nextLayer.map(e);
    return t.length == 0 ? o : new Zt(r, t, o || Zt.empty, i);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, t, r) {
    if (!this.isEmpty) {
      for (let i = 0; i < this.chunk.length; i++) {
        let o = this.chunkPos[i], s = this.chunk[i];
        if (t >= o && e <= o + s.length && s.between(o, e - o, t - o, r) === !1)
          return;
      }
      this.nextLayer.between(e, t, r);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return Ky.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, t = 0) {
    return Ky.from(e).goto(t);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, t, r, i, o = -1) {
    let s = e.filter((h) => h.maxPoint > 0 || !h.isEmpty && h.maxPoint >= o), a = t.filter((h) => h.maxPoint > 0 || !h.isEmpty && h.maxPoint >= o), l = D5(s, a, r), u = new Dv(s, l, o), c = new Dv(a, l, o);
    r.iterGaps((h, f, d) => L5(u, h, c, f, d, i)), r.empty && r.length == 0 && L5(u, 0, c, 0, 0, i);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, t, r = 0, i) {
    i == null && (i = 999999999);
    let o = e.filter((c) => !c.isEmpty && t.indexOf(c) < 0), s = t.filter((c) => !c.isEmpty && e.indexOf(c) < 0);
    if (o.length != s.length)
      return !1;
    if (!o.length)
      return !0;
    let a = D5(o, s), l = new Dv(o, a, 0).goto(r), u = new Dv(s, a, 0).goto(r);
    for (; ; ) {
      if (l.to != u.to || !TE(l.active, u.active) || l.point && (!u.point || !l.point.eq(u.point)))
        return !1;
      if (l.to > i)
        return !0;
      l.next(), u.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, t, r, i, o = -1) {
    let s = new Dv(e, null, o).goto(t), a = t, l = s.openStart;
    for (; ; ) {
      let u = Math.min(s.to, r);
      if (s.point) {
        let c = s.activeForPoint(s.to), h = s.pointFrom < t ? c.length + 1 : s.point.startSide < 0 ? c.length : Math.min(c.length, l);
        i.point(a, u, s.point, c, h, s.pointRank), l = Math.min(s.openEnd(u), c.length);
      } else
        u > a && (i.span(a, u, s.active, l), l = s.openEnd(u));
      if (s.to > r)
        return l + (s.point && s.to > r ? 1 : 0);
      a = s.to, s.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, t = !1) {
    let r = new Ec();
    for (let i of e instanceof CE ? [e] : t ? LPe(e) : e)
      r.add(i.from, i.to, i.value);
    return r.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return Zt.empty;
    let t = e[e.length - 1];
    for (let r = e.length - 2; r >= 0; r--)
      for (let i = e[r]; i != Zt.empty; i = i.nextLayer)
        t = new Zt(i.chunkPos, i.chunk, t, Math.max(i.maxPoint, t.maxPoint));
    return t;
  }
}
Zt.empty = /* @__PURE__ */ new Zt([], [], null, -1);
function LPe(n) {
  if (n.length > 1)
    for (let e = n[0], t = 1; t < n.length; t++) {
      let r = n[t];
      if (AE(e, r) > 0)
        return n.slice().sort(AE);
      e = r;
    }
  return n;
}
Zt.empty.nextLayer = Zt.empty;
class Ec {
  finishChunk(e) {
    this.chunks.push(new NL(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, t, r) {
    this.addInner(e, t, r) || (this.nextLayer || (this.nextLayer = new Ec())).add(e, t, r);
  }
  /**
  @internal
  */
  addInner(e, t, r) {
    let i = e - this.lastTo || r.startSide - this.last.endSide;
    if (i <= 0 && (e - this.lastFrom || r.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return i < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), this.last = r, this.lastFrom = e, this.lastTo = t, this.value.push(r), r.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, t) {
    if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint), this.chunks.push(t), this.chunkPos.push(e);
    let r = t.value.length - 1;
    return this.last = t.value[r], this.lastFrom = t.from[r] + e, this.lastTo = t.to[r] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(Zt.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let t = Zt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, t;
  }
}
function D5(n, e, t) {
  let r = /* @__PURE__ */ new Map();
  for (let o of n)
    for (let s = 0; s < o.chunk.length; s++)
      o.chunk[s].maxPoint <= 0 && r.set(o.chunk[s], o.chunkPos[s]);
  let i = /* @__PURE__ */ new Set();
  for (let o of e)
    for (let s = 0; s < o.chunk.length; s++) {
      let a = r.get(o.chunk[s]);
      a != null && (t ? t.mapPos(a) : a) == o.chunkPos[s] && !(t != null && t.touchesRange(a, a + o.chunk[s].length)) && i.add(o.chunk[s]);
    }
  return i;
}
class Xq {
  constructor(e, t, r, i = 0) {
    this.layer = e, this.skip = t, this.minPoint = r, this.rank = i;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, t = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, t, !1), this;
  }
  gotoInner(e, t, r) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let i = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(i) || this.layer.chunkEnd(this.chunkIndex) < e || i.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, r = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let i = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
      (!r || this.rangeIndex < i) && this.setRangeIndex(i);
    }
    this.next();
  }
  forward(e, t) {
    (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], t = this.layer.chunk[this.chunkIndex], r = e + t.from[this.rangeIndex];
        if (this.from = r, this.to = e + t.to[this.rangeIndex], this.value = t.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class Ky {
  constructor(e) {
    this.heap = e;
  }
  static from(e, t = null, r = -1) {
    let i = [];
    for (let o = 0; o < e.length; o++)
      for (let s = e[o]; !s.isEmpty; s = s.nextLayer)
        s.maxPoint >= r && i.push(new Xq(s, t, r, o));
    return i.length == 1 ? i[0] : new Ky(i);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, t = -1e9) {
    for (let r of this.heap)
      r.goto(e, t);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      o2(this.heap, r);
    return this.next(), this;
  }
  forward(e, t) {
    for (let r of this.heap)
      r.forward(e, t);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      o2(this.heap, r);
    (this.to - e || this.value.endSide - t) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), o2(this.heap, 0);
    }
  }
}
function o2(n, e) {
  for (let t = n[e]; ; ) {
    let r = (e << 1) + 1;
    if (r >= n.length)
      break;
    let i = n[r];
    if (r + 1 < n.length && i.compare(n[r + 1]) >= 0 && (i = n[r + 1], r++), t.compare(i) < 0)
      break;
    n[r] = t, n[e] = i, e = r;
  }
}
class Dv {
  constructor(e, t, r) {
    this.minPoint = r, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Ky.from(e, t, r);
  }
  goto(e, t = -1e9) {
    return this.cursor.goto(e, t), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = t, this.openStart = -1, this.next(), this;
  }
  forward(e, t) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, t);
  }
  removeActive(e) {
    s1(this.active, e), s1(this.activeTo, e), s1(this.activeRank, e), this.minActive = I5(this.active, this.activeTo);
  }
  addActive(e) {
    let t = 0, { value: r, to: i, rank: o } = this.cursor;
    for (; t < this.activeRank.length && (o - this.activeRank[t] || i - this.activeTo[t]) > 0; )
      t++;
    a1(this.active, t, r), a1(this.activeTo, t, i), a1(this.activeRank, t, o), e && a1(e, t, this.cursor.from), this.minActive = I5(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, t = this.point;
    this.point = null;
    let r = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let i = this.minActive;
      if (i > -1 && (this.activeTo[i] - this.cursor.from || this.active[i].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[i] > e) {
          this.to = this.activeTo[i], this.endSide = this.active[i].endSide;
          break;
        }
        this.removeActive(i), r && s1(r, i);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let o = this.cursor.value;
          if (!o.point)
            this.addActive(r), this.cursor.next();
          else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = o, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = o.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (r) {
      this.openStart = 0;
      for (let i = r.length - 1; i >= 0 && r[i] < e; i--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let t = [];
    for (let r = this.active.length - 1; r >= 0 && !(this.activeRank[r] < this.pointRank); r--)
      (this.activeTo[r] > e || this.activeTo[r] == e && this.active[r].endSide >= this.point.endSide) && t.push(this.active[r]);
    return t.reverse();
  }
  openEnd(e) {
    let t = 0;
    for (let r = this.activeTo.length - 1; r >= 0 && this.activeTo[r] > e; r--)
      t++;
    return t;
  }
}
function L5(n, e, t, r, i, o) {
  n.goto(e), t.goto(r);
  let s = r + i, a = r, l = r - e;
  for (; ; ) {
    let u = n.to + l - t.to || n.endSide - t.endSide, c = u < 0 ? n.to + l : t.to, h = Math.min(c, s);
    if (n.point || t.point ? n.point && t.point && (n.point == t.point || n.point.eq(t.point)) && TE(n.activeForPoint(n.to), t.activeForPoint(t.to)) || o.comparePoint(a, h, n.point, t.point) : h > a && !TE(n.active, t.active) && o.compareRange(a, h, n.active, t.active), c > s)
      break;
    a = c, u <= 0 && n.next(), u >= 0 && t.next();
  }
}
function TE(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (n[t] != e[t] && !n[t].eq(e[t]))
      return !1;
  return !0;
}
function s1(n, e) {
  for (let t = e, r = n.length - 1; t < r; t++)
    n[t] = n[t + 1];
  n.pop();
}
function a1(n, e, t) {
  for (let r = n.length - 1; r >= e; r--)
    n[r + 1] = n[r];
  n[e] = t;
}
function I5(n, e) {
  let t = -1, r = 1e9;
  for (let i = 0; i < e.length; i++)
    (e[i] - r || n[i].endSide - n[t].endSide) < 0 && (t = i, r = e[i]);
  return t;
}
function nv(n, e, t = n.length) {
  let r = 0;
  for (let i = 0; i < t; )
    n.charCodeAt(i) == 9 ? (r += e - r % e, i++) : (r++, i = ni(n, i));
  return r;
}
function PE(n, e, t, r) {
  for (let i = 0, o = 0; ; ) {
    if (o >= e)
      return i;
    if (i == n.length)
      break;
    o += n.charCodeAt(i) == 9 ? t - o % t : 1, i = ni(n, i);
  }
  return r === !0 ? -1 : n.length;
}
const EE = "ͼ", R5 = typeof Symbol > "u" ? "__" + EE : Symbol.for(EE), kE = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), $5 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class kc {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, t) {
    this.rules = [];
    let { finish: r } = t || {};
    function i(s) {
      return /^@/.test(s) ? [s] : s.split(/,\s*/);
    }
    function o(s, a, l, u) {
      let c = [], h = /^@(\w+)\b/.exec(s[0]), f = h && h[1] == "keyframes";
      if (h && a == null)
        return l.push(s[0] + ";");
      for (let d in a) {
        let p = a[d];
        if (/&/.test(d))
          o(
            d.split(/,\s*/).map((g) => s.map((v) => g.replace(/&/, v))).reduce((g, v) => g.concat(v)),
            p,
            l
          );
        else if (p && typeof p == "object") {
          if (!h)
            throw new RangeError("The value of a property (" + d + ") should be a primitive value.");
          o(i(d), p, c, f);
        } else
          p != null && c.push(d.replace(/_.*/, "").replace(/[A-Z]/g, (g) => "-" + g.toLowerCase()) + ": " + p + ";");
      }
      (c.length || f) && l.push((r && !h && !u ? s.map(r) : s).join(", ") + " {" + c.join(" ") + "}");
    }
    for (let s in e)
      o(i(s), e[s], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = $5[R5] || 1;
    return $5[R5] = e + 1, EE + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, t, r) {
    let i = e[kE], o = r && r.nonce;
    i ? o && i.setNonce(o) : i = new IPe(e, o), i.mount(Array.isArray(t) ? t : [t]);
  }
}
let N5 = /* @__PURE__ */ new Map();
class IPe {
  constructor(e, t) {
    let r = e.ownerDocument || e, i = r.defaultView;
    if (!e.head && e.adoptedStyleSheets && i.CSSStyleSheet) {
      let o = N5.get(r);
      if (o)
        return e.adoptedStyleSheets = [o.sheet, ...e.adoptedStyleSheets], e[kE] = o;
      this.sheet = new i.CSSStyleSheet(), e.adoptedStyleSheets = [this.sheet, ...e.adoptedStyleSheets], N5.set(r, this);
    } else {
      this.styleTag = r.createElement("style"), t && this.styleTag.setAttribute("nonce", t);
      let o = e.head || e;
      o.insertBefore(this.styleTag, o.firstChild);
    }
    this.modules = [], e[kE] = this;
  }
  mount(e) {
    let t = this.sheet, r = 0, i = 0;
    for (let o = 0; o < e.length; o++) {
      let s = e[o], a = this.modules.indexOf(s);
      if (a < i && a > -1 && (this.modules.splice(a, 1), i--, a = -1), a == -1) {
        if (this.modules.splice(i++, 0, s), t)
          for (let l = 0; l < s.rules.length; l++)
            t.insertRule(s.rules[l], r++);
      } else {
        for (; i < a; )
          r += this.modules[i++].rules.length;
        r += s.rules.length, i++;
      }
    }
    if (!t) {
      let o = "";
      for (let s = 0; s < this.modules.length; s++)
        o += this.modules[s].getRules() + `
`;
      this.styleTag.textContent = o;
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var Mc = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, Jy = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, RPe = typeof navigator < "u" && /Mac/.test(navigator.platform), $Pe = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var Ur = 0; Ur < 10; Ur++)
  Mc[48 + Ur] = Mc[96 + Ur] = String(Ur);
for (var Ur = 1; Ur <= 24; Ur++)
  Mc[Ur + 111] = "F" + Ur;
for (var Ur = 65; Ur <= 90; Ur++)
  Mc[Ur] = String.fromCharCode(Ur + 32), Jy[Ur] = String.fromCharCode(Ur);
for (var s2 in Mc)
  Jy.hasOwnProperty(s2) || (Jy[s2] = Mc[s2]);
function NPe(n) {
  var e = RPe && n.metaKey && n.shiftKey && !n.ctrlKey && !n.altKey || $Pe && n.shiftKey && n.key && n.key.length == 1 || n.key == "Unidentified", t = !e && n.key || (n.shiftKey ? Jy : Mc)[n.keyCode] || n.key || "Unidentified";
  return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
}
function hx(n) {
  let e;
  return n.nodeType == 11 ? e = n.getSelection ? n : n.ownerDocument : e = n, e.getSelection();
}
function ME(n, e) {
  return e ? n == e || n.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function BPe(n) {
  let e = n.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function ew(n, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return ME(n, e.anchorNode);
  } catch {
    return !1;
  }
}
function e0(n) {
  return n.nodeType == 3 ? Yf(n, 0, n.nodeValue.length).getClientRects() : n.nodeType == 1 ? n.getClientRects() : [];
}
function oy(n, e, t, r) {
  return t ? B5(n, e, t, r, -1) || B5(n, e, t, r, 1) : !1;
}
function t0(n) {
  for (var e = 0; ; e++)
    if (n = n.previousSibling, !n)
      return e;
}
function B5(n, e, t, r, i) {
  for (; ; ) {
    if (n == t && e == r)
      return !0;
    if (e == (i < 0 ? 0 : eu(n))) {
      if (n.nodeName == "DIV")
        return !1;
      let o = n.parentNode;
      if (!o || o.nodeType != 1)
        return !1;
      e = t0(n) + (i < 0 ? 0 : 1), n = o;
    } else if (n.nodeType == 1) {
      if (n = n.childNodes[e + (i < 0 ? -1 : 0)], n.nodeType == 1 && n.contentEditable == "false")
        return !1;
      e = i < 0 ? eu(n) : 0;
    } else
      return !1;
  }
}
function eu(n) {
  return n.nodeType == 3 ? n.nodeValue.length : n.childNodes.length;
}
function BL(n, e) {
  let t = e ? n.left : n.right;
  return { left: t, right: t, top: n.top, bottom: n.bottom };
}
function VPe(n) {
  return {
    left: 0,
    right: n.innerWidth,
    top: 0,
    bottom: n.innerHeight
  };
}
function Uq(n, e) {
  let t = e.width / n.offsetWidth, r = e.height / n.offsetHeight;
  return (t > 0.995 && t < 1.005 || !isFinite(t) || Math.abs(e.width - n.offsetWidth) < 1) && (t = 1), (r > 0.995 && r < 1.005 || !isFinite(r) || Math.abs(e.height - n.offsetHeight) < 1) && (r = 1), { scaleX: t, scaleY: r };
}
function zPe(n, e, t, r, i, o, s, a) {
  let l = n.ownerDocument, u = l.defaultView || window;
  for (let c = n, h = !1; c && !h; )
    if (c.nodeType == 1) {
      let f, d = c == l.body, p = 1, g = 1;
      if (d)
        f = VPe(u);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(c).position) && (h = !0), c.scrollHeight <= c.clientHeight && c.scrollWidth <= c.clientWidth) {
          c = c.assignedSlot || c.parentNode;
          continue;
        }
        let y = c.getBoundingClientRect();
        ({ scaleX: p, scaleY: g } = Uq(c, y)), f = {
          left: y.left,
          right: y.left + c.clientWidth * p,
          top: y.top,
          bottom: y.top + c.clientHeight * g
        };
      }
      let v = 0, m = 0;
      if (i == "nearest")
        e.top < f.top ? (m = -(f.top - e.top + s), t > 0 && e.bottom > f.bottom + m && (m = e.bottom - f.bottom + m + s)) : e.bottom > f.bottom && (m = e.bottom - f.bottom + s, t < 0 && e.top - m < f.top && (m = -(f.top + m - e.top + s)));
      else {
        let y = e.bottom - e.top, b = f.bottom - f.top;
        m = (i == "center" && y <= b ? e.top + y / 2 - b / 2 : i == "start" || i == "center" && t < 0 ? e.top - s : e.bottom - b + s) - f.top;
      }
      if (r == "nearest" ? e.left < f.left ? (v = -(f.left - e.left + o), t > 0 && e.right > f.right + v && (v = e.right - f.right + v + o)) : e.right > f.right && (v = e.right - f.right + o, t < 0 && e.left < f.left + v && (v = -(f.left + v - e.left + o))) : v = (r == "center" ? e.left + (e.right - e.left) / 2 - (f.right - f.left) / 2 : r == "start" == a ? e.left - o : e.right - (f.right - f.left) + o) - f.left, v || m)
        if (d)
          u.scrollBy(v, m);
        else {
          let y = 0, b = 0;
          if (m) {
            let O = c.scrollTop;
            c.scrollTop += m / g, b = (c.scrollTop - O) * g;
          }
          if (v) {
            let O = c.scrollLeft;
            c.scrollLeft += v / p, y = (c.scrollLeft - O) * p;
          }
          e = {
            left: e.left - y,
            top: e.top - b,
            right: e.right - y,
            bottom: e.bottom - b
          }, y && Math.abs(y - v) < 1 && (r = "nearest"), b && Math.abs(b - m) < 1 && (i = "nearest");
        }
      if (d)
        break;
      c = c.assignedSlot || c.parentNode;
    } else if (c.nodeType == 11)
      c = c.host;
    else
      break;
}
function FPe(n) {
  let e = n.ownerDocument;
  for (let t = n.parentNode; t && t != e.body; )
    if (t.nodeType == 1) {
      if (t.scrollHeight > t.clientHeight || t.scrollWidth > t.clientWidth)
        return t;
      t = t.assignedSlot || t.parentNode;
    } else if (t.nodeType == 11)
      t = t.host;
    else
      break;
  return null;
}
class QPe {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: t, focusNode: r } = e;
    this.set(t, Math.min(e.anchorOffset, t ? eu(t) : 0), r, Math.min(e.focusOffset, r ? eu(r) : 0));
  }
  set(e, t, r, i) {
    this.anchorNode = e, this.anchorOffset = t, this.focusNode = r, this.focusOffset = i;
  }
}
let Ld = null;
function Kq(n) {
  if (n.setActive)
    return n.setActive();
  if (Ld)
    return n.focus(Ld);
  let e = [];
  for (let t = n; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode)
    ;
  if (n.focus(Ld == null ? {
    get preventScroll() {
      return Ld = { preventScroll: !0 }, !0;
    }
  } : void 0), !Ld) {
    Ld = !1;
    for (let t = 0; t < e.length; ) {
      let r = e[t++], i = e[t++], o = e[t++];
      r.scrollTop != i && (r.scrollTop = i), r.scrollLeft != o && (r.scrollLeft = o);
    }
  }
}
let V5;
function Yf(n, e, t = e) {
  let r = V5 || (V5 = document.createRange());
  return r.setEnd(n, t), r.setStart(n, e), r;
}
function Pp(n, e, t) {
  let r = { key: e, code: e, keyCode: t, which: t, cancelable: !0 }, i = new KeyboardEvent("keydown", r);
  i.synthetic = !0, n.dispatchEvent(i);
  let o = new KeyboardEvent("keyup", r);
  return o.synthetic = !0, n.dispatchEvent(o), i.defaultPrevented || o.defaultPrevented;
}
function ZPe(n) {
  for (; n; ) {
    if (n && (n.nodeType == 9 || n.nodeType == 11 && n.host))
      return n;
    n = n.assignedSlot || n.parentNode;
  }
  return null;
}
function Jq(n) {
  for (; n.attributes.length; )
    n.removeAttributeNode(n.attributes[0]);
}
function WPe(n, e) {
  let t = e.focusNode, r = e.focusOffset;
  if (!t || e.anchorNode != t || e.anchorOffset != r)
    return !1;
  for (r = Math.min(r, eu(t)); ; )
    if (r) {
      if (t.nodeType != 1)
        return !1;
      let i = t.childNodes[r - 1];
      i.contentEditable == "false" ? r-- : (t = i, r = eu(t));
    } else {
      if (t == n)
        return !0;
      r = t0(t), t = t.parentNode;
    }
}
function e9(n) {
  return n.scrollTop > Math.max(1, n.scrollHeight - n.clientHeight - 4);
}
class bi {
  constructor(e, t, r = !0) {
    this.node = e, this.offset = t, this.precise = r;
  }
  static before(e, t) {
    return new bi(e.parentNode, t0(e), t);
  }
  static after(e, t) {
    return new bi(e.parentNode, t0(e) + 1, t);
  }
}
const VL = [];
class kn {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let t = this.posAtStart;
    for (let r of this.children) {
      if (r == e)
        return t;
      t += r.length + r.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, t) {
    if (this.flags & 2) {
      let r = this.dom, i = null, o;
      for (let s of this.children) {
        if (s.flags & 7) {
          if (!s.dom && (o = i ? i.nextSibling : r.firstChild)) {
            let a = kn.get(o);
            (!a || !a.parent && a.canReuseDOM(s)) && s.reuseDOM(o);
          }
          s.sync(e, t), s.flags &= -8;
        }
        if (o = i ? i.nextSibling : r.firstChild, t && !t.written && t.node == r && o != s.dom && (t.written = !0), s.dom.parentNode == r)
          for (; o && o != s.dom; )
            o = z5(o);
        else
          r.insertBefore(s.dom, o);
        i = s.dom;
      }
      for (o = i ? i.nextSibling : r.firstChild, o && t && t.node == r && (t.written = !0); o; )
        o = z5(o);
    } else if (this.flags & 1)
      for (let r of this.children)
        r.flags & 7 && (r.sync(e, t), r.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, t) {
    let r;
    if (e == this.dom)
      r = this.dom.childNodes[t];
    else {
      let i = eu(e) == 0 ? 0 : t == 0 ? -1 : 1;
      for (; ; ) {
        let o = e.parentNode;
        if (o == this.dom)
          break;
        i == 0 && o.firstChild != o.lastChild && (e == o.firstChild ? i = -1 : i = 1), e = o;
      }
      i < 0 ? r = e : r = e.nextSibling;
    }
    if (r == this.dom.firstChild)
      return 0;
    for (; r && !kn.get(r); )
      r = r.nextSibling;
    if (!r)
      return this.length;
    for (let i = 0, o = 0; ; i++) {
      let s = this.children[i];
      if (s.dom == r)
        return o;
      o += s.length + s.breakAfter;
    }
  }
  domBoundsAround(e, t, r = 0) {
    let i = -1, o = -1, s = -1, a = -1;
    for (let l = 0, u = r, c = r; l < this.children.length; l++) {
      let h = this.children[l], f = u + h.length;
      if (u < e && f > t)
        return h.domBoundsAround(e, t, u);
      if (f >= e && i == -1 && (i = l, o = u), u > t && h.dom.parentNode == this.dom) {
        s = l, a = c;
        break;
      }
      c = f, u = f + h.breakAfter;
    }
    return {
      from: o,
      to: a < 0 ? r + this.length : a,
      startDOM: (i ? this.children[i - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: s < this.children.length && s >= 0 ? this.children[s].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let t = this.parent; t; t = t.parent) {
      if (e && (t.flags |= 2), t.flags & 1)
        return;
      t.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let t = e.parent;
      if (!t)
        return e;
      e = t;
    }
  }
  replaceChildren(e, t, r = VL) {
    this.markDirty();
    for (let i = e; i < t; i++) {
      let o = this.children[i];
      o.parent == this && r.indexOf(o) < 0 && o.destroy();
    }
    this.children.splice(e, t - e, ...r);
    for (let i = 0; i < r.length; i++)
      r[i].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new t9(this.children, e, this.children.length);
  }
  childPos(e, t = 1) {
    return this.childCursor().findPos(e, t);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, t, r, i, o, s) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
kn.prototype.breakAfter = 0;
function z5(n) {
  let e = n.nextSibling;
  return n.parentNode.removeChild(n), e;
}
class t9 {
  constructor(e, t, r) {
    this.children = e, this.pos = t, this.i = r, this.off = 0;
  }
  findPos(e, t = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let r = this.children[--this.i];
      this.pos -= r.length + r.breakAfter;
    }
  }
}
function n9(n, e, t, r, i, o, s, a, l) {
  let { children: u } = n, c = u.length ? u[e] : null, h = o.length ? o[o.length - 1] : null, f = h ? h.breakAfter : s;
  if (!(e == r && c && !s && !f && o.length < 2 && c.merge(t, i, o.length ? h : null, t == 0, a, l))) {
    if (r < u.length) {
      let d = u[r];
      d && (i < d.length || d.breakAfter && (h != null && h.breakAfter)) ? (e == r && (d = d.split(i), i = 0), !f && h && d.merge(0, i, h, !0, 0, l) ? o[o.length - 1] = d : ((i || d.children.length && !d.children[0].length) && d.merge(0, i, null, !1, 0, l), o.push(d))) : d != null && d.breakAfter && (h ? h.breakAfter = 1 : s = 1), r++;
    }
    for (c && (c.breakAfter = s, t > 0 && (!s && o.length && c.merge(t, c.length, o[0], !1, a, 0) ? c.breakAfter = o.shift().breakAfter : (t < c.length || c.children.length && c.children[c.children.length - 1].length == 0) && c.merge(t, c.length, null, !1, a, 0), e++)); e < r && o.length; )
      if (u[r - 1].become(o[o.length - 1]))
        r--, o.pop(), l = o.length ? 0 : a;
      else if (u[e].become(o[0]))
        e++, o.shift(), a = o.length ? 0 : l;
      else
        break;
    !o.length && e && r < u.length && !u[e - 1].breakAfter && u[r].merge(0, 0, u[e - 1], !1, a, l) && e--, (e < r || o.length) && n.replaceChildren(e, r, o);
  }
}
function r9(n, e, t, r, i, o) {
  let s = n.childCursor(), { i: a, off: l } = s.findPos(t, 1), { i: u, off: c } = s.findPos(e, -1), h = e - t;
  for (let f of r)
    h += f.length;
  n.length += h, n9(n, u, c, a, l, r, 0, i, o);
}
let Mo = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, DE = typeof document < "u" ? document : { documentElement: { style: {} } };
const LE = /* @__PURE__ */ /Edge\/(\d+)/.exec(Mo.userAgent), i9 = /* @__PURE__ */ /MSIE \d/.test(Mo.userAgent), IE = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Mo.userAgent), y_ = !!(i9 || IE || LE), F5 = !y_ && /* @__PURE__ */ /gecko\/(\d+)/i.test(Mo.userAgent), a2 = !y_ && /* @__PURE__ */ /Chrome\/(\d+)/.exec(Mo.userAgent), Q5 = "webkitFontSmoothing" in DE.documentElement.style, o9 = !y_ && /* @__PURE__ */ /Apple Computer/.test(Mo.vendor), Z5 = o9 && (/* @__PURE__ */ /Mobile\/\w+/.test(Mo.userAgent) || Mo.maxTouchPoints > 2);
var ze = {
  mac: Z5 || /* @__PURE__ */ /Mac/.test(Mo.platform),
  windows: /* @__PURE__ */ /Win/.test(Mo.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(Mo.platform),
  ie: y_,
  ie_version: i9 ? DE.documentMode || 6 : IE ? +IE[1] : LE ? +LE[1] : 0,
  gecko: F5,
  gecko_version: F5 ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(Mo.userAgent) || [0, 0])[1] : 0,
  chrome: !!a2,
  chrome_version: a2 ? +a2[1] : 0,
  ios: Z5,
  android: /* @__PURE__ */ /Android\b/.test(Mo.userAgent),
  webkit: Q5,
  safari: o9,
  webkit_version: Q5 ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
  tabSize: DE.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const GPe = 256;
class tu extends kn {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, t) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, t, r) {
    return this.flags & 8 || r && (!(r instanceof tu) || this.length - (t - e) + r.length > GPe || r.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (r ? r.text : "") + this.text.slice(t), this.markDirty(), !0);
  }
  split(e) {
    let t = new tu(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), t.flags |= this.flags & 8, t;
  }
  localPosFromDOM(e, t) {
    return e == this.dom ? t : t ? this.text.length : 0;
  }
  domAtPos(e) {
    return new bi(this.dom, e);
  }
  domBoundsAround(e, t, r) {
    return { from: r, to: r + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, t) {
    return jPe(this.dom, e, t);
  }
}
class nu extends kn {
  constructor(e, t = [], r = 0) {
    super(), this.mark = e, this.children = t, this.length = r;
    for (let i of t)
      i.setParent(this);
  }
  setAttrs(e) {
    if (Jq(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let t in this.mark.attrs)
        e.setAttribute(t, this.mark.attrs[t]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
  }
  merge(e, t, r, i, o, s) {
    return r && (!(r instanceof nu && r.mark.eq(this.mark)) || e && o <= 0 || t < this.length && s <= 0) ? !1 : (r9(this, e, t, r ? r.children.slice() : [], o - 1, s - 1), this.markDirty(), !0);
  }
  split(e) {
    let t = [], r = 0, i = -1, o = 0;
    for (let a of this.children) {
      let l = r + a.length;
      l > e && t.push(r < e ? a.split(e - r) : a), i < 0 && r >= e && (i = o), r = l, o++;
    }
    let s = this.length - e;
    return this.length = e, i > -1 && (this.children.length = i, this.markDirty()), new nu(this.mark, t, s);
  }
  domAtPos(e) {
    return s9(this, e);
  }
  coordsAt(e, t) {
    return l9(this, e, t);
  }
}
function jPe(n, e, t) {
  let r = n.nodeValue.length;
  e > r && (e = r);
  let i = e, o = e, s = 0;
  e == 0 && t < 0 || e == r && t >= 0 ? ze.chrome || ze.gecko || (e ? (i--, s = 1) : o < r && (o++, s = -1)) : t < 0 ? i-- : o < r && o++;
  let a = Yf(n, i, o).getClientRects();
  if (!a.length)
    return null;
  let l = a[(s ? s < 0 : t >= 0) ? 0 : a.length - 1];
  return ze.safari && !s && l.width == 0 && (l = Array.prototype.find.call(a, (u) => u.width) || l), s ? BL(l, s < 0) : l || null;
}
class nc extends kn {
  static create(e, t, r) {
    return new nc(e, t, r);
  }
  constructor(e, t, r) {
    super(), this.widget = e, this.length = t, this.side = r, this.prevWidget = null;
  }
  split(e) {
    let t = nc.create(this.widget, this.length - e, this.side);
    return this.length -= e, t;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, t, r, i, o, s) {
    return r && (!(r instanceof nc) || !this.widget.compare(r.widget) || e > 0 && o <= 0 || t < this.length && s <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - t), !0);
  }
  become(e) {
    return e instanceof nc && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return Ut.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: t } = e, r = t && t.state.doc, i = this.posAtStart;
    return r ? r.slice(i, i + this.length) : Ut.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? bi.before(this.dom) : bi.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, t) {
    let r = this.widget.coordsAt(this.dom, e, t);
    if (r)
      return r;
    let i = this.dom.getClientRects(), o = null;
    if (!i.length)
      return null;
    let s = this.side ? this.side < 0 : e > 0;
    for (let a = s ? i.length - 1 : 0; o = i[a], !(e > 0 ? a == 0 : a == i.length - 1 || o.top < o.bottom); a += s ? -1 : 1)
      ;
    return BL(o, !s);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class Tg extends kn {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof Tg && e.side == this.side;
  }
  split() {
    return new Tg(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? bi.before(this.dom) : bi.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return Ut.empty;
  }
  get isHidden() {
    return !0;
  }
}
tu.prototype.children = nc.prototype.children = Tg.prototype.children = VL;
function s9(n, e) {
  let t = n.dom, { children: r } = n, i = 0;
  for (let o = 0; i < r.length; i++) {
    let s = r[i], a = o + s.length;
    if (!(a == o && s.getSide() <= 0)) {
      if (e > o && e < a && s.dom.parentNode == t)
        return s.domAtPos(e - o);
      if (e <= o)
        break;
      o = a;
    }
  }
  for (let o = i; o > 0; o--) {
    let s = r[o - 1];
    if (s.dom.parentNode == t)
      return s.domAtPos(s.length);
  }
  for (let o = i; o < r.length; o++) {
    let s = r[o];
    if (s.dom.parentNode == t)
      return s.domAtPos(0);
  }
  return new bi(t, 0);
}
function a9(n, e, t) {
  let r, { children: i } = n;
  t > 0 && e instanceof nu && i.length && (r = i[i.length - 1]) instanceof nu && r.mark.eq(e.mark) ? a9(r, e.children[0], t - 1) : (i.push(e), e.setParent(n)), n.length += e.length;
}
function l9(n, e, t) {
  let r = null, i = -1, o = null, s = -1;
  function a(u, c) {
    for (let h = 0, f = 0; h < u.children.length && f <= c; h++) {
      let d = u.children[h], p = f + d.length;
      p >= c && (d.children.length ? a(d, c - f) : (!o || o.isHidden && t > 0) && (p > c || f == p && d.getSide() > 0) ? (o = d, s = c - f) : (f < c || f == p && d.getSide() < 0 && !d.isHidden) && (r = d, i = c - f)), f = p;
    }
  }
  a(n, e);
  let l = (t < 0 ? r : o) || r || o;
  return l ? l.coordsAt(Math.max(0, l == r ? i : s), t) : HPe(n);
}
function HPe(n) {
  let e = n.dom.lastChild;
  if (!e)
    return n.dom.getBoundingClientRect();
  let t = e0(e);
  return t[t.length - 1] || null;
}
function RE(n, e) {
  for (let t in n)
    t == "class" && e.class ? e.class += " " + n.class : t == "style" && e.style ? e.style += ";" + n.style : e[t] = n[t];
  return e;
}
const W5 = /* @__PURE__ */ Object.create(null);
function zL(n, e, t) {
  if (n == e)
    return !0;
  n || (n = W5), e || (e = W5);
  let r = Object.keys(n), i = Object.keys(e);
  if (r.length - (t && r.indexOf(t) > -1 ? 1 : 0) != i.length - (t && i.indexOf(t) > -1 ? 1 : 0))
    return !1;
  for (let o of r)
    if (o != t && (i.indexOf(o) == -1 || n[o] !== e[o]))
      return !1;
  return !0;
}
function $E(n, e, t) {
  let r = !1;
  if (e)
    for (let i in e)
      t && i in t || (r = !0, i == "style" ? n.style.cssText = "" : n.removeAttribute(i));
  if (t)
    for (let i in t)
      e && e[i] == t[i] || (r = !0, i == "style" ? n.style.cssText = t[i] : n.setAttribute(i, t[i]));
  return r;
}
function qPe(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t = 0; t < n.attributes.length; t++) {
    let r = n.attributes[t];
    e[r.name] = r.value;
  }
  return e;
}
let Mi = class tw extends kn {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, t, r, i, o, s) {
    if (r) {
      if (!(r instanceof tw))
        return !1;
      this.dom || r.transferDOM(this);
    }
    return i && this.setDeco(r ? r.attrs : null), r9(this, e, t, r ? r.children.slice() : [], o, s), !0;
  }
  split(e) {
    let t = new tw();
    if (t.breakAfter = this.breakAfter, this.length == 0)
      return t;
    let { i: r, off: i } = this.childPos(e);
    i && (t.append(this.children[r].split(i), 0), this.children[r].merge(i, this.children[r].length, null, !1, 0, 0), r++);
    for (let o = r; o < this.children.length; o++)
      t.append(this.children[o], 0);
    for (; r > 0 && this.children[r - 1].length == 0; )
      this.children[--r].destroy();
    return this.children.length = r, this.markDirty(), this.length = e, t;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    zL(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, t) {
    a9(this, e, t);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let t = e.spec.attributes, r = e.spec.class;
    t && (this.attrs = RE(t, this.attrs || {})), r && (this.attrs = RE({ class: r }, this.attrs || {}));
  }
  domAtPos(e) {
    return s9(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    var r;
    this.dom ? this.flags & 4 && (Jq(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && ($E(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, t);
    let i = this.dom.lastChild;
    for (; i && kn.get(i) instanceof nu; )
      i = i.lastChild;
    if (!i || !this.length || i.nodeName != "BR" && ((r = kn.get(i)) === null || r === void 0 ? void 0 : r.isEditable) == !1 && (!ze.ios || !this.children.some((o) => o instanceof tu))) {
      let o = document.createElement("BR");
      o.cmIgnore = !0, this.dom.appendChild(o);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, t;
    for (let r of this.children) {
      if (!(r instanceof tu) || /[^ -~]/.test(r.text))
        return null;
      let i = e0(r.dom);
      if (i.length != 1)
        return null;
      e += i[0].width, t = i[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: t
    } : null;
  }
  coordsAt(e, t) {
    let r = l9(this, e, t);
    if (!this.children.length && r && this.parent) {
      let { heightOracle: i } = this.parent.view.viewState, o = r.bottom - r.top;
      if (Math.abs(o - i.lineHeight) < 2 && i.textHeight < o) {
        let s = (o - i.textHeight) / 2;
        return { top: r.top + s, bottom: r.bottom - s, left: r.left, right: r.left };
      }
    }
    return r;
  }
  become(e) {
    return !1;
  }
  covers() {
    return !0;
  }
  static find(e, t) {
    for (let r = 0, i = 0; r < e.children.length; r++) {
      let o = e.children[r], s = i + o.length;
      if (s >= t) {
        if (o instanceof tw)
          return o;
        if (s > t)
          break;
      }
      i = s + o.breakAfter;
    }
    return null;
  }
};
class dc extends kn {
  constructor(e, t, r) {
    super(), this.widget = e, this.length = t, this.deco = r, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, t, r, i, o, s) {
    return r && (!(r instanceof dc) || !this.widget.compare(r.widget) || e > 0 && o <= 0 || t < this.length && s <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - t), !0);
  }
  domAtPos(e) {
    return e == 0 ? bi.before(this.dom) : bi.after(this.dom, e == this.length);
  }
  split(e) {
    let t = this.length - e;
    this.length = e;
    let r = new dc(this.widget, t, this.deco);
    return r.breakAfter = this.breakAfter, r;
  }
  get children() {
    return VL;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Ut.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof dc && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, t) {
    return this.widget.coordsAt(this.dom, e, t);
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: t, endSide: r } = this.deco;
    return t == r ? !1 : e < 0 ? t < 0 : r > 0;
  }
}
class vu {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, t) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, t, r) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var $i = /* @__PURE__ */ function(n) {
  return n[n.Text = 0] = "Text", n[n.WidgetBefore = 1] = "WidgetBefore", n[n.WidgetAfter = 2] = "WidgetAfter", n[n.WidgetRange = 3] = "WidgetRange", n;
}($i || ($i = {}));
class tt extends qf {
  constructor(e, t, r, i) {
    super(), this.startSide = e, this.endSide = t, this.widget = r, this.spec = i;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new hb(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let t = Math.max(-1e4, Math.min(1e4, e.side || 0)), r = !!e.block;
    return t += r && !e.inlineOrder ? t > 0 ? 3e8 : -4e8 : t > 0 ? 1e8 : -1e8, new Dc(e, t, t, r, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let t = !!e.block, r, i;
    if (e.isBlockGap)
      r = -5e8, i = 4e8;
    else {
      let { start: o, end: s } = u9(e, t);
      r = (o ? t ? -3e8 : -1 : 5e8) - 1, i = (s ? t ? 2e8 : 1 : -6e8) + 1;
    }
    return new Dc(e, r, i, t, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new fb(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, t = !1) {
    return Zt.of(e, t);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
tt.none = Zt.empty;
class hb extends tt {
  constructor(e) {
    let { start: t, end: r } = u9(e);
    super(t ? -1 : 5e8, r ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var t, r;
    return this == e || e instanceof hb && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((r = e.attrs) === null || r === void 0 ? void 0 : r.class)) && zL(this.attrs, e.attrs, "class");
  }
  range(e, t = e) {
    if (e >= t)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, t);
  }
}
hb.prototype.point = !1;
class fb extends tt {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof fb && this.spec.class == e.spec.class && zL(this.spec.attributes, e.spec.attributes);
  }
  range(e, t = e) {
    if (t != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, t);
  }
}
fb.prototype.mapMode = Jr.TrackBefore;
fb.prototype.point = !0;
class Dc extends tt {
  constructor(e, t, r, i, o, s) {
    super(t, r, o, e), this.block = i, this.isReplace = s, this.mapMode = i ? t <= 0 ? Jr.TrackBefore : Jr.TrackAfter : Jr.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? $i.WidgetRange : this.startSide <= 0 ? $i.WidgetBefore : $i.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof Dc && YPe(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, t = e) {
    if (this.isReplace && (e > t || e == t && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && t != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, t);
  }
}
Dc.prototype.point = !0;
function u9(n, e = !1) {
  let { inclusiveStart: t, inclusiveEnd: r } = n;
  return t == null && (t = n.inclusive), r == null && (r = n.inclusive), { start: t ?? e, end: r ?? e };
}
function YPe(n, e) {
  return n == e || !!(n && e && n.compare(e));
}
function NE(n, e, t, r = 0) {
  let i = t.length - 1;
  i >= 0 && t[i] + r >= n ? t[i] = Math.max(t[i], e) : t.push(n, e);
}
class sy {
  constructor(e, t, r, i) {
    this.doc = e, this.pos = t, this.end = r, this.disallowBlockEffectsFor = i, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = t;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof dc && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new Mi()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(l1(new Tg(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof dc) && this.getLine();
  }
  buildText(e, t, r) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: o, lineBreak: s, done: a } = this.cursor.next(this.skip);
        if (this.skip = 0, a)
          throw new Error("Ran out of text content when drawing inline views");
        if (s) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = o, this.textOff = 0;
      }
      let i = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(t.slice(t.length - r)), this.getLine().append(l1(new tu(this.text.slice(this.textOff, this.textOff + i)), t), r), this.atCursorPos = !0, this.textOff += i, e -= i, r = 0;
    }
  }
  span(e, t, r, i) {
    this.buildText(t - e, r, i), this.pos = t, this.openStart < 0 && (this.openStart = i);
  }
  point(e, t, r, i, o, s) {
    if (this.disallowBlockEffectsFor[s] && r instanceof Dc) {
      if (r.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (t > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let a = t - e;
    if (r instanceof Dc)
      if (r.block)
        r.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new dc(r.widget || new G5("div"), a, r));
      else {
        let l = nc.create(r.widget || new G5("span"), a, a ? 0 : r.startSide), u = this.atCursorPos && !l.isEditable && o <= i.length && (e < t || r.startSide > 0), c = !l.isEditable && (e < t || o > i.length || r.startSide <= 0), h = this.getLine();
        this.pendingBuffer == 2 && !u && !l.isEditable && (this.pendingBuffer = 0), this.flushBuffer(i), u && (h.append(l1(new Tg(1), i), o), o = i.length + Math.max(0, o - i.length)), h.append(l1(l, i), o), this.atCursorPos = c, this.pendingBuffer = c ? e < t || o > i.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = i.slice());
      }
    else
      this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(r);
    a && (this.textOff + a <= this.text.length ? this.textOff += a : (this.skip += a - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = t), this.openStart < 0 && (this.openStart = o);
  }
  static build(e, t, r, i, o) {
    let s = new sy(e, t, r, o);
    return s.openEnd = Zt.spans(i, t, r, s), s.openStart < 0 && (s.openStart = s.openEnd), s.finish(s.openEnd), s;
  }
}
function l1(n, e) {
  for (let t of e)
    n = new nu(t, [n], n.length);
  return n;
}
class G5 extends vu {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
var Mn = /* @__PURE__ */ function(n) {
  return n[n.LTR = 0] = "LTR", n[n.RTL = 1] = "RTL", n;
}(Mn || (Mn = {}));
const Xf = Mn.LTR, FL = Mn.RTL;
function c9(n) {
  let e = [];
  for (let t = 0; t < n.length; t++)
    e.push(1 << +n[t]);
  return e;
}
const XPe = /* @__PURE__ */ c9("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), UPe = /* @__PURE__ */ c9("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), BE = /* @__PURE__ */ Object.create(null), wa = [];
for (let n of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ n.charCodeAt(0), t = /* @__PURE__ */ n.charCodeAt(1);
  BE[e] = t, BE[t] = -e;
}
function h9(n) {
  return n <= 247 ? XPe[n] : 1424 <= n && n <= 1524 ? 2 : 1536 <= n && n <= 1785 ? UPe[n - 1536] : 1774 <= n && n <= 2220 ? 4 : 8192 <= n && n <= 8204 ? 256 : 64336 <= n && n <= 65023 ? 4 : 1;
}
const KPe = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class rc {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? FL : Xf;
  }
  /**
  @internal
  */
  constructor(e, t, r) {
    this.from = e, this.to = t, this.level = r;
  }
  /**
  @internal
  */
  side(e, t) {
    return this.dir == t == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, t) {
    return e == (this.dir == t);
  }
  /**
  @internal
  */
  static find(e, t, r, i) {
    let o = -1;
    for (let s = 0; s < e.length; s++) {
      let a = e[s];
      if (a.from <= t && a.to >= t) {
        if (a.level == r)
          return s;
        (o < 0 || (i != 0 ? i < 0 ? a.from < t : a.to > t : e[o].level > a.level)) && (o = s);
      }
    }
    if (o < 0)
      throw new RangeError("Index out of range");
    return o;
  }
}
function f9(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++) {
    let r = n[t], i = e[t];
    if (r.from != i.from || r.to != i.to || r.direction != i.direction || !f9(r.inner, i.inner))
      return !1;
  }
  return !0;
}
const gn = [];
function JPe(n, e, t, r, i) {
  for (let o = 0; o <= r.length; o++) {
    let s = o ? r[o - 1].to : e, a = o < r.length ? r[o].from : t, l = o ? 256 : i;
    for (let u = s, c = l, h = l; u < a; u++) {
      let f = h9(n.charCodeAt(u));
      f == 512 ? f = c : f == 8 && h == 4 && (f = 16), gn[u] = f == 4 ? 2 : f, f & 7 && (h = f), c = f;
    }
    for (let u = s, c = l, h = l; u < a; u++) {
      let f = gn[u];
      if (f == 128)
        u < a - 1 && c == gn[u + 1] && c & 24 ? f = gn[u] = c : gn[u] = 256;
      else if (f == 64) {
        let d = u + 1;
        for (; d < a && gn[d] == 64; )
          d++;
        let p = u && c == 8 || d < t && gn[d] == 8 ? h == 1 ? 1 : 8 : 256;
        for (let g = u; g < d; g++)
          gn[g] = p;
        u = d - 1;
      } else
        f == 8 && h == 1 && (gn[u] = 1);
      c = f, f & 7 && (h = f);
    }
  }
}
function eEe(n, e, t, r, i) {
  let o = i == 1 ? 2 : 1;
  for (let s = 0, a = 0, l = 0; s <= r.length; s++) {
    let u = s ? r[s - 1].to : e, c = s < r.length ? r[s].from : t;
    for (let h = u, f, d, p; h < c; h++)
      if (d = BE[f = n.charCodeAt(h)])
        if (d < 0) {
          for (let g = a - 3; g >= 0; g -= 3)
            if (wa[g + 1] == -d) {
              let v = wa[g + 2], m = v & 2 ? i : v & 4 ? v & 1 ? o : i : 0;
              m && (gn[h] = gn[wa[g]] = m), a = g;
              break;
            }
        } else {
          if (wa.length == 189)
            break;
          wa[a++] = h, wa[a++] = f, wa[a++] = l;
        }
      else if ((p = gn[h]) == 2 || p == 1) {
        let g = p == i;
        l = g ? 0 : 1;
        for (let v = a - 3; v >= 0; v -= 3) {
          let m = wa[v + 2];
          if (m & 2)
            break;
          if (g)
            wa[v + 2] |= 2;
          else {
            if (m & 4)
              break;
            wa[v + 2] |= 4;
          }
        }
      }
  }
}
function tEe(n, e, t, r) {
  for (let i = 0, o = r; i <= t.length; i++) {
    let s = i ? t[i - 1].to : n, a = i < t.length ? t[i].from : e;
    for (let l = s; l < a; ) {
      let u = gn[l];
      if (u == 256) {
        let c = l + 1;
        for (; ; )
          if (c == a) {
            if (i == t.length)
              break;
            c = t[i++].to, a = i < t.length ? t[i].from : e;
          } else if (gn[c] == 256)
            c++;
          else
            break;
        let h = o == 1, f = (c < e ? gn[c] : r) == 1, d = h == f ? h ? 1 : 2 : r;
        for (let p = c, g = i, v = g ? t[g - 1].to : n; p > l; )
          p == v && (p = t[--g].from, v = g ? t[g - 1].to : n), gn[--p] = d;
        l = c;
      } else
        o = u, l++;
    }
  }
}
function VE(n, e, t, r, i, o, s) {
  let a = r % 2 ? 2 : 1;
  if (r % 2 == i % 2)
    for (let l = e, u = 0; l < t; ) {
      let c = !0, h = !1;
      if (u == o.length || l < o[u].from) {
        let g = gn[l];
        g != a && (c = !1, h = g == 16);
      }
      let f = !c && a == 1 ? [] : null, d = c ? r : r + 1, p = l;
      e:
        for (; ; )
          if (u < o.length && p == o[u].from) {
            if (h)
              break e;
            let g = o[u];
            if (!c)
              for (let v = g.to, m = u + 1; ; ) {
                if (v == t)
                  break e;
                if (m < o.length && o[m].from == v)
                  v = o[m++].to;
                else {
                  if (gn[v] == a)
                    break e;
                  break;
                }
              }
            if (u++, f)
              f.push(g);
            else {
              g.from > l && s.push(new rc(l, g.from, d));
              let v = g.direction == Xf != !(d % 2);
              zE(n, v ? r + 1 : r, i, g.inner, g.from, g.to, s), l = g.to;
            }
            p = g.to;
          } else {
            if (p == t || (c ? gn[p] != a : gn[p] == a))
              break;
            p++;
          }
      f ? VE(n, l, p, r + 1, i, f, s) : l < p && s.push(new rc(l, p, d)), l = p;
    }
  else
    for (let l = t, u = o.length; l > e; ) {
      let c = !0, h = !1;
      if (!u || l > o[u - 1].to) {
        let g = gn[l - 1];
        g != a && (c = !1, h = g == 16);
      }
      let f = !c && a == 1 ? [] : null, d = c ? r : r + 1, p = l;
      e:
        for (; ; )
          if (u && p == o[u - 1].to) {
            if (h)
              break e;
            let g = o[--u];
            if (!c)
              for (let v = g.from, m = u; ; ) {
                if (v == e)
                  break e;
                if (m && o[m - 1].to == v)
                  v = o[--m].from;
                else {
                  if (gn[v - 1] == a)
                    break e;
                  break;
                }
              }
            if (f)
              f.push(g);
            else {
              g.to < l && s.push(new rc(g.to, l, d));
              let v = g.direction == Xf != !(d % 2);
              zE(n, v ? r + 1 : r, i, g.inner, g.from, g.to, s), l = g.from;
            }
            p = g.from;
          } else {
            if (p == e || (c ? gn[p - 1] != a : gn[p - 1] == a))
              break;
            p--;
          }
      f ? VE(n, p, l, r + 1, i, f, s) : p < l && s.push(new rc(p, l, d)), l = p;
    }
}
function zE(n, e, t, r, i, o, s) {
  let a = e % 2 ? 2 : 1;
  JPe(n, i, o, r, a), eEe(n, i, o, r, a), tEe(i, o, r, a), VE(n, i, o, e, t, r, s);
}
function nEe(n, e, t) {
  if (!n)
    return [new rc(0, 0, e == FL ? 1 : 0)];
  if (e == Xf && !t.length && !KPe.test(n))
    return d9(n.length);
  if (t.length)
    for (; n.length > gn.length; )
      gn[gn.length] = 256;
  let r = [], i = e == Xf ? 0 : 1;
  return zE(n, i, i, t, 0, n.length, r), r;
}
function d9(n) {
  return [new rc(0, n, 0)];
}
let p9 = "";
function rEe(n, e, t, r, i) {
  var o;
  let s = r.head - n.from, a = rc.find(e, s, (o = r.bidiLevel) !== null && o !== void 0 ? o : -1, r.assoc), l = e[a], u = l.side(i, t);
  if (s == u) {
    let f = a += i ? 1 : -1;
    if (f < 0 || f >= e.length)
      return null;
    l = e[a = f], s = l.side(!i, t), u = l.side(i, t);
  }
  let c = ni(n.text, s, l.forward(i, t));
  (c < l.from || c > l.to) && (c = u), p9 = n.text.slice(Math.min(s, c), Math.max(s, c));
  let h = a == (i ? e.length - 1 : 0) ? null : e[a + (i ? 1 : -1)];
  return h && c == u && h.level + (i ? 0 : 1) < l.level ? ce.cursor(h.side(!i, t) + n.from, h.forward(i, t) ? 1 : -1, h.level) : ce.cursor(c + n.from, l.forward(i, t) ? -1 : 1, l.level);
}
function iEe(n, e, t) {
  for (let r = e; r < t; r++) {
    let i = h9(n.charCodeAt(r));
    if (i == 1)
      return Xf;
    if (i == 2 || i == 4)
      return FL;
  }
  return Xf;
}
const g9 = /* @__PURE__ */ Be.define(), v9 = /* @__PURE__ */ Be.define(), m9 = /* @__PURE__ */ Be.define(), y9 = /* @__PURE__ */ Be.define(), FE = /* @__PURE__ */ Be.define(), b9 = /* @__PURE__ */ Be.define(), O9 = /* @__PURE__ */ Be.define(), w9 = /* @__PURE__ */ Be.define({
  combine: (n) => n.some((e) => e)
}), x9 = /* @__PURE__ */ Be.define({
  combine: (n) => n.some((e) => e)
});
class Ep {
  constructor(e, t = "nearest", r = "nearest", i = 5, o = 5, s = !1) {
    this.range = e, this.y = t, this.x = r, this.yMargin = i, this.xMargin = o, this.isSnapshot = s;
  }
  map(e) {
    return e.empty ? this : new Ep(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new Ep(ce.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const u1 = /* @__PURE__ */ wt.define({ map: (n, e) => n.map(e) });
function vs(n, e, t) {
  let r = n.facet(y9);
  r.length ? r[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
}
const b_ = /* @__PURE__ */ Be.define({ combine: (n) => n.length ? n[0] : !0 });
let oEe = 0;
const Om = /* @__PURE__ */ Be.define();
class vr {
  constructor(e, t, r, i, o) {
    this.id = e, this.create = t, this.domEventHandlers = r, this.domEventObservers = i, this.extension = o(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, t) {
    const { eventHandlers: r, eventObservers: i, provide: o, decorations: s } = t || {};
    return new vr(oEe++, e, r, i, (a) => {
      let l = [Om.of(a)];
      return s && l.push(n0.of((u) => {
        let c = u.plugin(a);
        return c ? s(c) : tt.none;
      })), o && l.push(o(a)), l;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, t) {
    return vr.define((r) => new e(r), t);
  }
}
class l2 {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let t = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(t);
          } catch (r) {
            if (vs(t.state, r, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (t) {
        vs(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var t;
    if (!((t = this.value) === null || t === void 0) && t.destroy)
      try {
        this.value.destroy();
      } catch (r) {
        vs(e.state, r, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const S9 = /* @__PURE__ */ Be.define(), QL = /* @__PURE__ */ Be.define(), n0 = /* @__PURE__ */ Be.define(), _9 = /* @__PURE__ */ Be.define(), ZL = /* @__PURE__ */ Be.define(), C9 = /* @__PURE__ */ Be.define();
function j5(n, e) {
  let t = n.state.facet(C9);
  if (!t.length)
    return t;
  let r = t.map((o) => o instanceof Function ? o(n) : o), i = [];
  return Zt.spans(r, e.from, e.to, {
    point() {
    },
    span(o, s, a, l) {
      let u = o - e.from, c = s - e.from, h = i;
      for (let f = a.length - 1; f >= 0; f--, l--) {
        let d = a[f].spec.bidiIsolate, p;
        if (d == null && (d = iEe(e.text, u, c)), l > 0 && h.length && (p = h[h.length - 1]).to == u && p.direction == d)
          p.to = c, h = p.inner;
        else {
          let g = { from: u, to: c, direction: d, inner: [] };
          h.push(g), h = g.inner;
        }
      }
    }
  }), i;
}
const A9 = /* @__PURE__ */ Be.define();
function T9(n) {
  let e = 0, t = 0, r = 0, i = 0;
  for (let o of n.state.facet(A9)) {
    let s = o(n);
    s && (s.left != null && (e = Math.max(e, s.left)), s.right != null && (t = Math.max(t, s.right)), s.top != null && (r = Math.max(r, s.top)), s.bottom != null && (i = Math.max(i, s.bottom)));
  }
  return { left: e, right: t, top: r, bottom: i };
}
const wm = /* @__PURE__ */ Be.define();
class ms {
  constructor(e, t, r, i) {
    this.fromA = e, this.toA = t, this.fromB = r, this.toB = i;
  }
  join(e) {
    return new ms(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let t = e.length, r = this;
    for (; t > 0; t--) {
      let i = e[t - 1];
      if (!(i.fromA > r.toA)) {
        if (i.toA < r.fromA)
          break;
        r = r.join(i), e.splice(t - 1, 1);
      }
    }
    return e.splice(t, 0, r), e;
  }
  static extendWithRanges(e, t) {
    if (t.length == 0)
      return e;
    let r = [];
    for (let i = 0, o = 0, s = 0, a = 0; ; i++) {
      let l = i == e.length ? null : e[i], u = s - a, c = l ? l.fromB : 1e9;
      for (; o < t.length && t[o] < c; ) {
        let h = t[o], f = t[o + 1], d = Math.max(a, h), p = Math.min(c, f);
        if (d <= p && new ms(d + u, p + u, d, p).addToSet(r), f > c)
          break;
        o += 2;
      }
      if (!l)
        return r;
      new ms(l.fromA, l.toA, l.fromB, l.toB).addToSet(r), s = l.toA, a = l.toB;
    }
  }
}
class fx {
  constructor(e, t, r) {
    this.view = e, this.state = t, this.transactions = r, this.flags = 0, this.startState = e.state, this.changes = _r.empty(this.startState.doc.length);
    for (let o of r)
      this.changes = this.changes.compose(o.changes);
    let i = [];
    this.changes.iterChangedRanges((o, s, a, l) => i.push(new ms(o, s, a, l))), this.changedRanges = i;
  }
  /**
  @internal
  */
  static create(e, t, r) {
    return new fx(e, t, r);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 10) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class H5 extends kn {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new Mi()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new ms(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var t;
    let r = e.changedRanges;
    this.minWidth > 0 && r.length && (r.every(({ fromA: u, toA: c }) => c < this.minWidthFrom || u > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0);
    let i = -1;
    this.view.inputState.composing >= 0 && (!((t = this.domChanged) === null || t === void 0) && t.newSel ? i = this.domChanged.newSel.head : !fEe(e.changes, this.hasComposition) && !e.selectionSet && (i = e.state.selection.main.head));
    let o = i > -1 ? aEe(this.view, e.changes, i) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: u, to: c } = this.hasComposition;
      r = new ms(u, c, e.changes.mapPos(u, -1), e.changes.mapPos(c, 1)).addToSet(r.slice());
    }
    this.hasComposition = o ? { from: o.range.fromB, to: o.range.toB } : null, (ze.ie || ze.chrome) && !o && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let s = this.decorations, a = this.updateDeco(), l = cEe(s, a, e.changes);
    return r = ms.extendWithRanges(r, l), !(this.flags & 7) && r.length == 0 ? !1 : (this.updateInner(r, e.startState.doc.length, o), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, t, r) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, t, r);
    let { observer: i } = this.view;
    i.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let s = ze.chrome || ze.ios ? { node: i.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, s), this.flags &= -8, s && (s.written || i.selectionRange.focusNode != s.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (s) => s.flags &= -9
      /* ViewFlag.Composition */
    );
    let o = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let s of this.children)
        s instanceof dc && s.widget instanceof q5 && o.push(s.dom);
    i.updateGaps(o);
  }
  updateChildren(e, t, r) {
    let i = r ? r.range.addToSet(e.slice()) : e, o = this.childCursor(t);
    for (let s = i.length - 1; ; s--) {
      let a = s >= 0 ? i[s] : null;
      if (!a)
        break;
      let { fromA: l, toA: u, fromB: c, toB: h } = a, f, d, p, g;
      if (r && r.range.fromB < h && r.range.toB > c) {
        let O = sy.build(this.view.state.doc, c, r.range.fromB, this.decorations, this.dynamicDecorationMap), w = sy.build(this.view.state.doc, r.range.toB, h, this.decorations, this.dynamicDecorationMap);
        d = O.breakAtStart, p = O.openStart, g = w.openEnd;
        let x = this.compositionView(r);
        w.breakAtStart ? x.breakAfter = 1 : w.content.length && x.merge(x.length, x.length, w.content[0], !1, w.openStart, 0) && (x.breakAfter = w.content[0].breakAfter, w.content.shift()), O.content.length && x.merge(0, 0, O.content[O.content.length - 1], !0, 0, O.openEnd) && O.content.pop(), f = O.content.concat(x).concat(w.content);
      } else
        ({ content: f, breakAtStart: d, openStart: p, openEnd: g } = sy.build(this.view.state.doc, c, h, this.decorations, this.dynamicDecorationMap));
      let { i: v, off: m } = o.findPos(u, 1), { i: y, off: b } = o.findPos(l, -1);
      n9(this, y, b, v, m, f, d, p, g);
    }
    r && this.fixCompositionDOM(r);
  }
  compositionView(e) {
    let t = new tu(e.text.nodeValue);
    t.flags |= 8;
    for (let { deco: i } of e.marks)
      t = new nu(i, [t], t.length);
    let r = new Mi();
    return r.append(t, 0), r;
  }
  fixCompositionDOM(e) {
    let t = (o, s) => {
      s.flags |= 8 | (s.children.some(
        (l) => l.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(s);
      let a = kn.get(o);
      a && a != s && (a.dom = null), s.setDOM(o);
    }, r = this.childPos(e.range.fromB, 1), i = this.children[r.i];
    t(e.line, i);
    for (let o = e.marks.length - 1; o >= -1; o--)
      r = i.childPos(r.off, 1), i = i.children[r.i], t(o >= 0 ? e.marks[o].node : e.text, i);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, t = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let r = this.view.root.activeElement, i = r == this.dom, o = !i && ew(this.dom, this.view.observer.selectionRange) && !(r && this.dom.contains(r));
    if (!(i || t || o))
      return;
    let s = this.forceSelection;
    this.forceSelection = !1;
    let a = this.view.state.selection.main, l = this.moveToLine(this.domAtPos(a.anchor)), u = a.empty ? l : this.moveToLine(this.domAtPos(a.head));
    if (ze.gecko && a.empty && !this.hasComposition && sEe(l)) {
      let h = document.createTextNode("");
      this.view.observer.ignore(() => l.node.insertBefore(h, l.node.childNodes[l.offset] || null)), l = u = new bi(h, 0), s = !0;
    }
    let c = this.view.observer.selectionRange;
    (s || !c.focusNode || (!oy(l.node, l.offset, c.anchorNode, c.anchorOffset) || !oy(u.node, u.offset, c.focusNode, c.focusOffset)) && !this.suppressWidgetCursorChange(c, a)) && (this.view.observer.ignore(() => {
      ze.android && ze.chrome && this.dom.contains(c.focusNode) && hEe(c.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let h = hx(this.view.root);
      if (h)
        if (a.empty) {
          if (ze.gecko) {
            let f = lEe(l.node, l.offset);
            if (f && f != 3) {
              let d = E9(l.node, l.offset, f == 1 ? 1 : -1);
              d && (l = new bi(d.node, d.offset));
            }
          }
          h.collapse(l.node, l.offset), a.bidiLevel != null && h.caretBidiLevel !== void 0 && (h.caretBidiLevel = a.bidiLevel);
        } else if (h.extend) {
          h.collapse(l.node, l.offset);
          try {
            h.extend(u.node, u.offset);
          } catch {
          }
        } else {
          let f = document.createRange();
          a.anchor > a.head && ([l, u] = [u, l]), f.setEnd(u.node, u.offset), f.setStart(l.node, l.offset), h.removeAllRanges(), h.addRange(f);
        }
      o && this.view.root.activeElement == this.dom && (this.dom.blur(), r && r.focus());
    }), this.view.observer.setSelectionRange(l, u)), this.impreciseAnchor = l.precise ? null : new bi(c.anchorNode, c.anchorOffset), this.impreciseHead = u.precise ? null : new bi(c.focusNode, c.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, t) {
    return this.hasComposition && t.empty && oy(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == t.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, t = e.state.selection.main, r = hx(e.root), { anchorNode: i, anchorOffset: o } = e.observer.selectionRange;
    if (!r || !t.empty || !t.assoc || !r.modify)
      return;
    let s = Mi.find(this, t.head);
    if (!s)
      return;
    let a = s.posAtStart;
    if (t.head == a || t.head == a + s.length)
      return;
    let l = this.coordsAt(t.head, -1), u = this.coordsAt(t.head, 1);
    if (!l || !u || l.bottom > u.top)
      return;
    let c = this.domAtPos(t.head + t.assoc);
    r.collapse(c.node, c.offset), r.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let h = e.observer.selectionRange;
    e.docView.posFromDOM(h.anchorNode, h.anchorOffset) != t.from && r.collapse(i, o);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let t = this.dom, r;
    if (e.node != t)
      return e;
    for (let i = e.offset; !r && i < t.childNodes.length; i++) {
      let o = kn.get(t.childNodes[i]);
      o instanceof Mi && (r = o.domAtPos(0));
    }
    for (let i = e.offset - 1; !r && i >= 0; i--) {
      let o = kn.get(t.childNodes[i]);
      o instanceof Mi && (r = o.domAtPos(o.length));
    }
    return r ? new bi(r.node, r.offset, !0) : e;
  }
  nearest(e) {
    for (let t = e; t; ) {
      let r = kn.get(t);
      if (r && r.rootView == this)
        return r;
      t = t.parentNode;
    }
    return null;
  }
  posFromDOM(e, t) {
    let r = this.nearest(e);
    if (!r)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return r.localPosFromDOM(e, t) + r.posAtStart;
  }
  domAtPos(e) {
    let { i: t, off: r } = this.childCursor().findPos(e, -1);
    for (; t < this.children.length - 1; ) {
      let i = this.children[t];
      if (r < i.length || i instanceof Mi)
        break;
      t++, r = 0;
    }
    return this.children[t].domAtPos(r);
  }
  coordsAt(e, t) {
    let r = null, i = 0;
    for (let o = this.length, s = this.children.length - 1; s >= 0; s--) {
      let a = this.children[s], l = o - a.breakAfter, u = l - a.length;
      if (l < e)
        break;
      u <= e && (u < e || a.covers(-1)) && (l > e || a.covers(1)) && (!r || a instanceof Mi && !(r instanceof Mi && t >= 0)) && (r = a, i = u), o = u;
    }
    return r ? r.coordsAt(e - i, t) : null;
  }
  coordsForChar(e) {
    let { i: t, off: r } = this.childPos(e, 1), i = this.children[t];
    if (!(i instanceof Mi))
      return null;
    for (; i.children.length; ) {
      let { i: a, off: l } = i.childPos(r, 1);
      for (; ; a++) {
        if (a == i.children.length)
          return null;
        if ((i = i.children[a]).length)
          break;
      }
      r = l;
    }
    if (!(i instanceof tu))
      return null;
    let o = ni(i.text, r);
    if (o == r)
      return null;
    let s = Yf(i.dom, r, o).getClientRects();
    for (let a = 0; a < s.length; a++) {
      let l = s[a];
      if (a == s.length - 1 || l.top < l.bottom && l.left < l.right)
        return l;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let t = [], { from: r, to: i } = e, o = this.view.contentDOM.clientWidth, s = o > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, a = -1, l = this.view.textDirection == Mn.LTR;
    for (let u = 0, c = 0; c < this.children.length; c++) {
      let h = this.children[c], f = u + h.length;
      if (f > i)
        break;
      if (u >= r) {
        let d = h.dom.getBoundingClientRect();
        if (t.push(d.height), s) {
          let p = h.dom.lastChild, g = p ? e0(p) : [];
          if (g.length) {
            let v = g[g.length - 1], m = l ? v.right - d.left : d.right - v.left;
            m > a && (a = m, this.minWidth = o, this.minWidthFrom = u, this.minWidthTo = f);
          }
        }
      }
      u = f + h.breakAfter;
    }
    return t;
  }
  textDirectionAt(e) {
    let { i: t } = this.childPos(e, 1);
    return getComputedStyle(this.children[t].dom).direction == "rtl" ? Mn.RTL : Mn.LTR;
  }
  measureTextSize() {
    for (let o of this.children)
      if (o instanceof Mi) {
        let s = o.measureTextSize();
        if (s)
          return s;
      }
    let e = document.createElement("div"), t, r, i;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let o = e0(e.firstChild)[0];
      t = e.getBoundingClientRect().height, r = o ? o.width / 27 : 7, i = o ? o.height : t, e.remove();
    }), { lineHeight: t, charWidth: r, textHeight: i };
  }
  childCursor(e = this.length) {
    let t = this.children.length;
    return t && (e -= this.children[--t].length), new t9(this.children, e, t);
  }
  computeBlockGapDeco() {
    let e = [], t = this.view.viewState;
    for (let r = 0, i = 0; ; i++) {
      let o = i == t.viewports.length ? null : t.viewports[i], s = o ? o.from - 1 : this.length;
      if (s > r) {
        let a = (t.lineBlockAt(s).bottom - t.lineBlockAt(r).top) / this.view.scaleY;
        e.push(tt.replace({
          widget: new q5(a),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(r, s));
      }
      if (!o)
        break;
      r = o.to + 1;
    }
    return tt.set(e);
  }
  updateDeco() {
    let e = this.view.state.facet(n0).map((i, o) => (this.dynamicDecorationMap[o] = typeof i == "function") ? i(this.view) : i), t = !1, r = this.view.state.facet(_9).map((i, o) => {
      let s = typeof i == "function";
      return s && (t = !0), s ? i(this.view) : i;
    });
    r.length && (this.dynamicDecorationMap[e.length] = t, e.push(Zt.join(r)));
    for (let i = e.length; i < e.length + 3; i++)
      this.dynamicDecorationMap[i] = !1;
    return this.decorations = [
      ...e,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ];
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let u = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = u.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    let { range: t } = e, r = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1), i;
    if (!r)
      return;
    !t.empty && (i = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (r = {
      left: Math.min(r.left, i.left),
      top: Math.min(r.top, i.top),
      right: Math.max(r.right, i.right),
      bottom: Math.max(r.bottom, i.bottom)
    });
    let o = T9(this.view), s = {
      left: r.left - o.left,
      top: r.top - o.top,
      right: r.right + o.right,
      bottom: r.bottom + o.bottom
    }, { offsetWidth: a, offsetHeight: l } = this.view.scrollDOM;
    zPe(this.view.scrollDOM, s, t.head < t.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, a), -a), Math.max(Math.min(e.yMargin, l), -l), this.view.textDirection == Mn.LTR);
  }
}
function sEe(n) {
  return n.node.nodeType == 1 && n.node.firstChild && (n.offset == 0 || n.node.childNodes[n.offset - 1].contentEditable == "false") && (n.offset == n.node.childNodes.length || n.node.childNodes[n.offset].contentEditable == "false");
}
class q5 extends vu {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
function P9(n, e) {
  let t = n.observer.selectionRange, r = t.focusNode && E9(t.focusNode, t.focusOffset, 0);
  if (!r)
    return null;
  let i = e - r.offset;
  return { from: i, to: i + r.node.nodeValue.length, node: r.node };
}
function aEe(n, e, t) {
  let r = P9(n, t);
  if (!r)
    return null;
  let { node: i, from: o, to: s } = r, a = i.nodeValue;
  if (/[\n\r]/.test(a) || n.state.doc.sliceString(r.from, r.to) != a)
    return null;
  let l = e.invertedDesc, u = new ms(l.mapPos(o), l.mapPos(s), o, s), c = [];
  for (let h = i.parentNode; ; h = h.parentNode) {
    let f = kn.get(h);
    if (f instanceof nu)
      c.push({ node: h, deco: f.mark });
    else {
      if (f instanceof Mi || h.nodeName == "DIV" && h.parentNode == n.contentDOM)
        return { range: u, text: i, marks: c, line: h };
      if (h != n.contentDOM)
        c.push({ node: h, deco: new hb({
          inclusive: !0,
          attributes: qPe(h),
          tagName: h.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function E9(n, e, t) {
  if (t <= 0)
    for (let r = n, i = e; ; ) {
      if (r.nodeType == 3)
        return { node: r, offset: i };
      if (r.nodeType == 1 && i > 0)
        r = r.childNodes[i - 1], i = eu(r);
      else
        break;
    }
  if (t >= 0)
    for (let r = n, i = e; ; ) {
      if (r.nodeType == 3)
        return { node: r, offset: i };
      if (r.nodeType == 1 && i < r.childNodes.length && t >= 0)
        r = r.childNodes[i], i = 0;
      else
        break;
    }
  return null;
}
function lEe(n, e) {
  return n.nodeType != 1 ? 0 : (e && n.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < n.childNodes.length && n.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let uEe = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, t) {
    NE(e, t, this.changes);
  }
  comparePoint(e, t) {
    NE(e, t, this.changes);
  }
};
function cEe(n, e, t) {
  let r = new uEe();
  return Zt.compare(n, e, t, r), r.changes;
}
function hEe(n, e) {
  for (let t = n; t && t != e; t = t.assignedSlot || t.parentNode)
    if (t.nodeType == 1 && t.contentEditable == "false")
      return !0;
  return !1;
}
function fEe(n, e) {
  let t = !1;
  return e && n.iterChangedRanges((r, i) => {
    r < e.to && i > e.from && (t = !0);
  }), t;
}
function dEe(n, e, t = 1) {
  let r = n.charCategorizer(e), i = n.doc.lineAt(e), o = e - i.from;
  if (i.length == 0)
    return ce.cursor(e);
  o == 0 ? t = 1 : o == i.length && (t = -1);
  let s = o, a = o;
  t < 0 ? s = ni(i.text, o, !1) : a = ni(i.text, o);
  let l = r(i.text.slice(s, a));
  for (; s > 0; ) {
    let u = ni(i.text, s, !1);
    if (r(i.text.slice(u, s)) != l)
      break;
    s = u;
  }
  for (; a < i.length; ) {
    let u = ni(i.text, a);
    if (r(i.text.slice(a, u)) != l)
      break;
    a = u;
  }
  return ce.range(s + i.from, a + i.from);
}
function pEe(n, e) {
  return e.left > n ? e.left - n : Math.max(0, n - e.right);
}
function gEe(n, e) {
  return e.top > n ? e.top - n : Math.max(0, n - e.bottom);
}
function u2(n, e) {
  return n.top < e.bottom - 1 && n.bottom > e.top + 1;
}
function Y5(n, e) {
  return e < n.top ? { top: e, left: n.left, right: n.right, bottom: n.bottom } : n;
}
function X5(n, e) {
  return e > n.bottom ? { top: n.top, left: n.left, right: n.right, bottom: e } : n;
}
function QE(n, e, t) {
  let r, i, o, s, a = !1, l, u, c, h;
  for (let p = n.firstChild; p; p = p.nextSibling) {
    let g = e0(p);
    for (let v = 0; v < g.length; v++) {
      let m = g[v];
      i && u2(i, m) && (m = Y5(X5(m, i.bottom), i.top));
      let y = pEe(e, m), b = gEe(t, m);
      if (y == 0 && b == 0)
        return p.nodeType == 3 ? U5(p, e, t) : QE(p, e, t);
      if (!r || s > b || s == b && o > y) {
        r = p, i = m, o = y, s = b;
        let O = b ? t < m.top ? -1 : 1 : y ? e < m.left ? -1 : 1 : 0;
        a = !O || (O > 0 ? v < g.length - 1 : v > 0);
      }
      y == 0 ? t > m.bottom && (!c || c.bottom < m.bottom) ? (l = p, c = m) : t < m.top && (!h || h.top > m.top) && (u = p, h = m) : c && u2(c, m) ? c = X5(c, m.bottom) : h && u2(h, m) && (h = Y5(h, m.top));
    }
  }
  if (c && c.bottom >= t ? (r = l, i = c) : h && h.top <= t && (r = u, i = h), !r)
    return { node: n, offset: 0 };
  let f = Math.max(i.left, Math.min(i.right, e));
  if (r.nodeType == 3)
    return U5(r, f, t);
  if (a && r.contentEditable != "false")
    return QE(r, f, t);
  let d = Array.prototype.indexOf.call(n.childNodes, r) + (e >= (i.left + i.right) / 2 ? 1 : 0);
  return { node: n, offset: d };
}
function U5(n, e, t) {
  let r = n.nodeValue.length, i = -1, o = 1e9, s = 0;
  for (let a = 0; a < r; a++) {
    let l = Yf(n, a, a + 1).getClientRects();
    for (let u = 0; u < l.length; u++) {
      let c = l[u];
      if (c.top == c.bottom)
        continue;
      s || (s = e - c.left);
      let h = (c.top > t ? c.top - t : t - c.bottom) - 1;
      if (c.left - 1 <= e && c.right + 1 >= e && h < o) {
        let f = e >= (c.left + c.right) / 2, d = f;
        if ((ze.chrome || ze.gecko) && Yf(n, a).getBoundingClientRect().left == c.right && (d = !f), h <= 0)
          return { node: n, offset: a + (d ? 1 : 0) };
        i = a + (d ? 1 : 0), o = h;
      }
    }
  }
  return { node: n, offset: i > -1 ? i : s > 0 ? n.nodeValue.length : 0 };
}
function k9(n, e, t, r = -1) {
  var i, o;
  let s = n.contentDOM.getBoundingClientRect(), a = s.top + n.viewState.paddingTop, l, { docHeight: u } = n.viewState, { x: c, y: h } = e, f = h - a;
  if (f < 0)
    return 0;
  if (f > u)
    return n.state.doc.length;
  for (let O = n.viewState.heightOracle.textHeight / 2, w = !1; l = n.elementAtHeight(f), l.type != $i.Text; )
    for (; f = r > 0 ? l.bottom + O : l.top - O, !(f >= 0 && f <= u); ) {
      if (w)
        return t ? null : 0;
      w = !0, r = -r;
    }
  h = a + f;
  let d = l.from;
  if (d < n.viewport.from)
    return n.viewport.from == 0 ? 0 : t ? null : K5(n, s, l, c, h);
  if (d > n.viewport.to)
    return n.viewport.to == n.state.doc.length ? n.state.doc.length : t ? null : K5(n, s, l, c, h);
  let p = n.dom.ownerDocument, g = n.root.elementFromPoint ? n.root : p, v = g.elementFromPoint(c, h);
  v && !n.contentDOM.contains(v) && (v = null), v || (c = Math.max(s.left + 1, Math.min(s.right - 1, c)), v = g.elementFromPoint(c, h), v && !n.contentDOM.contains(v) && (v = null));
  let m, y = -1;
  if (v && ((i = n.docView.nearest(v)) === null || i === void 0 ? void 0 : i.isEditable) != !1) {
    if (p.caretPositionFromPoint) {
      let O = p.caretPositionFromPoint(c, h);
      O && ({ offsetNode: m, offset: y } = O);
    } else if (p.caretRangeFromPoint) {
      let O = p.caretRangeFromPoint(c, h);
      O && ({ startContainer: m, startOffset: y } = O, (!n.contentDOM.contains(m) || ze.safari && vEe(m, y, c) || ze.chrome && mEe(m, y, c)) && (m = void 0));
    }
  }
  if (!m || !n.docView.dom.contains(m)) {
    let O = Mi.find(n.docView, d);
    if (!O)
      return f > l.top + l.height / 2 ? l.to : l.from;
    ({ node: m, offset: y } = QE(O.dom, c, h));
  }
  let b = n.docView.nearest(m);
  if (!b)
    return null;
  if (b.isWidget && ((o = b.dom) === null || o === void 0 ? void 0 : o.nodeType) == 1) {
    let O = b.dom.getBoundingClientRect();
    return e.y < O.top || e.y <= O.bottom && e.x <= (O.left + O.right) / 2 ? b.posAtStart : b.posAtEnd;
  } else
    return b.localPosFromDOM(m, y) + b.posAtStart;
}
function K5(n, e, t, r, i) {
  let o = Math.round((r - e.left) * n.defaultCharacterWidth);
  if (n.lineWrapping && t.height > n.defaultLineHeight * 1.5) {
    let a = n.viewState.heightOracle.textHeight, l = Math.floor((i - t.top - (n.defaultLineHeight - a) * 0.5) / a);
    o += l * n.viewState.heightOracle.lineLength;
  }
  let s = n.state.sliceDoc(t.from, t.to);
  return t.from + PE(s, o, n.state.tabSize);
}
function vEe(n, e, t) {
  let r;
  if (n.nodeType != 3 || e != (r = n.nodeValue.length))
    return !1;
  for (let i = n.nextSibling; i; i = i.nextSibling)
    if (i.nodeType != 1 || i.nodeName != "BR")
      return !1;
  return Yf(n, r - 1, r).getBoundingClientRect().left > t;
}
function mEe(n, e, t) {
  if (e != 0)
    return !1;
  for (let i = n; ; ) {
    let o = i.parentNode;
    if (!o || o.nodeType != 1 || o.firstChild != i)
      return !1;
    if (o.classList.contains("cm-line"))
      break;
    i = o;
  }
  let r = n.nodeType == 1 ? n.getBoundingClientRect() : Yf(n, 0, Math.max(n.nodeValue.length, 1)).getBoundingClientRect();
  return t - r.left > 5;
}
function ZE(n, e) {
  let t = n.lineBlockAt(e);
  if (Array.isArray(t.type)) {
    for (let r of t.type)
      if (r.to > e || r.to == e && (r.to == t.to || r.type == $i.Text))
        return r;
  }
  return t;
}
function yEe(n, e, t, r) {
  let i = ZE(n, e.head), o = !r || i.type != $i.Text || !(n.lineWrapping || i.widgetLineBreaks) ? null : n.coordsAtPos(e.assoc < 0 && e.head > i.from ? e.head - 1 : e.head);
  if (o) {
    let s = n.dom.getBoundingClientRect(), a = n.textDirectionAt(i.from), l = n.posAtCoords({
      x: t == (a == Mn.LTR) ? s.right - 1 : s.left + 1,
      y: (o.top + o.bottom) / 2
    });
    if (l != null)
      return ce.cursor(l, t ? -1 : 1);
  }
  return ce.cursor(t ? i.to : i.from, t ? -1 : 1);
}
function J5(n, e, t, r) {
  let i = n.state.doc.lineAt(e.head), o = n.bidiSpans(i), s = n.textDirectionAt(i.from);
  for (let a = e, l = null; ; ) {
    let u = rEe(i, o, s, a, t), c = p9;
    if (!u) {
      if (i.number == (t ? n.state.doc.lines : 1))
        return a;
      c = `
`, i = n.state.doc.line(i.number + (t ? 1 : -1)), o = n.bidiSpans(i), u = n.visualLineSide(i, !t);
    }
    if (l) {
      if (!l(c))
        return a;
    } else {
      if (!r)
        return u;
      l = r(c);
    }
    a = u;
  }
}
function bEe(n, e, t) {
  let r = n.state.charCategorizer(e), i = r(t);
  return (o) => {
    let s = r(o);
    return i == Rn.Space && (i = s), i == s;
  };
}
function OEe(n, e, t, r) {
  let i = e.head, o = t ? 1 : -1;
  if (i == (t ? n.state.doc.length : 0))
    return ce.cursor(i, e.assoc);
  let s = e.goalColumn, a, l = n.contentDOM.getBoundingClientRect(), u = n.coordsAtPos(i, e.assoc || -1), c = n.documentTop;
  if (u)
    s == null && (s = u.left - l.left), a = o < 0 ? u.top : u.bottom;
  else {
    let d = n.viewState.lineBlockAt(i);
    s == null && (s = Math.min(l.right - l.left, n.defaultCharacterWidth * (i - d.from))), a = (o < 0 ? d.top : d.bottom) + c;
  }
  let h = l.left + s, f = r ?? n.viewState.heightOracle.textHeight >> 1;
  for (let d = 0; ; d += 10) {
    let p = a + (f + d) * o, g = k9(n, { x: h, y: p }, !1, o);
    if (p < l.top || p > l.bottom || (o < 0 ? g < i : g > i)) {
      let v = n.docView.coordsForChar(g), m = !v || p < v.top ? -1 : 1;
      return ce.cursor(g, m, void 0, s);
    }
  }
}
function nw(n, e, t) {
  for (; ; ) {
    let r = 0;
    for (let i of n)
      i.between(e - 1, e + 1, (o, s, a) => {
        if (e > o && e < s) {
          let l = r || t || (e - o < s - e ? -1 : 1);
          e = l < 0 ? o : s, r = l;
        }
      });
    if (!r)
      return e;
  }
}
function c2(n, e, t) {
  let r = nw(n.state.facet(ZL).map((i) => i(n)), t.from, e.head > t.from ? -1 : 1);
  return r == t.from ? t : ce.cursor(r, r < t.from ? 1 : -1);
}
class wEe {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastEscPress = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, ze.safari && e.contentDOM.addEventListener("input", () => null), ze.gecko && NEe(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !EEe(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, t) {
    let r = this.handlers[e];
    if (r) {
      for (let i of r.observers)
        i(this.view, t);
      for (let i of r.handlers) {
        if (t.defaultPrevented)
          break;
        if (i(this.view, t)) {
          t.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let t = xEe(e), r = this.handlers, i = this.view.contentDOM;
    for (let o in t)
      if (o != "scroll") {
        let s = !t[o].handlers.length, a = r[o];
        a && s != !a.handlers.length && (i.removeEventListener(o, this.handleEvent), a = null), a || i.addEventListener(o, this.handleEvent, { passive: s });
      }
    for (let o in r)
      o != "scroll" && !t[o] && i.removeEventListener(o, this.handleEvent);
    this.handlers = t;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && Date.now() < this.lastEscPress + 2e3)
      return !0;
    if (e.keyCode != 27 && D9.indexOf(e.keyCode) < 0 && (this.view.inputState.lastEscPress = 0), ze.android && ze.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let t;
    return ze.ios && !e.synthetic && !e.altKey && !e.metaKey && ((t = M9.find((r) => r.keyCode == e.keyCode)) && !e.ctrlKey || SEe.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = t || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey() {
    let e = this.pendingIOSKey;
    return e ? (this.pendingIOSKey = void 0, Pp(this.view.contentDOM, e.key, e.keyCode)) : !1;
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : ze.safari && !ze.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function eB(n, e) {
  return (t, r) => {
    try {
      return e.call(n, r, t);
    } catch (i) {
      vs(t.state, i);
    }
  };
}
function xEe(n) {
  let e = /* @__PURE__ */ Object.create(null);
  function t(r) {
    return e[r] || (e[r] = { observers: [], handlers: [] });
  }
  for (let r of n) {
    let i = r.spec;
    if (i && i.domEventHandlers)
      for (let o in i.domEventHandlers) {
        let s = i.domEventHandlers[o];
        s && t(o).handlers.push(eB(r.value, s));
      }
    if (i && i.domEventObservers)
      for (let o in i.domEventObservers) {
        let s = i.domEventObservers[o];
        s && t(o).observers.push(eB(r.value, s));
      }
  }
  for (let r in oa)
    t(r).handlers.push(oa[r]);
  for (let r in sa)
    t(r).observers.push(sa[r]);
  return e;
}
const M9 = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], SEe = "dthko", D9 = [16, 17, 18, 20, 91, 92, 224, 225], c1 = 6;
function h1(n) {
  return Math.max(0, n) * 0.7 + 8;
}
function _Ee(n, e) {
  return Math.max(Math.abs(n.clientX - e.clientX), Math.abs(n.clientY - e.clientY));
}
class CEe {
  constructor(e, t, r, i) {
    this.view = e, this.startEvent = t, this.style = r, this.mustSelect = i, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = t, this.scrollParent = FPe(e.contentDOM), this.atoms = e.state.facet(ZL).map((s) => s(e));
    let o = e.contentDOM.ownerDocument;
    o.addEventListener("mousemove", this.move = this.move.bind(this)), o.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = t.shiftKey, this.multiple = e.state.facet(Yt.allowMultipleSelections) && AEe(e, t), this.dragging = PEe(e, t) && $9(t) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    var t;
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && _Ee(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let r = 0, i = 0, o = ((t = this.scrollParent) === null || t === void 0 ? void 0 : t.getBoundingClientRect()) || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight }, s = T9(this.view);
    e.clientX - s.left <= o.left + c1 ? r = -h1(o.left - e.clientX) : e.clientX + s.right >= o.right - c1 && (r = h1(e.clientX - o.right)), e.clientY - s.top <= o.top + c1 ? i = -h1(o.top - e.clientY) : e.clientY + s.bottom >= o.bottom - c1 && (i = h1(e.clientY - o.bottom)), this.setScrollSpeed(r, i);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, t) {
    this.scrollSpeed = { x: e, y: t }, e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    this.scrollParent ? (this.scrollParent.scrollLeft += this.scrollSpeed.x, this.scrollParent.scrollTop += this.scrollSpeed.y) : this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let t = null;
    for (let r = 0; r < e.ranges.length; r++) {
      let i = e.ranges[r], o = null;
      if (i.empty) {
        let s = nw(this.atoms, i.from, 0);
        s != i.from && (o = ce.cursor(s, -1));
      } else {
        let s = nw(this.atoms, i.from, -1), a = nw(this.atoms, i.to, 1);
        (s != i.from || a != i.to) && (o = ce.range(i.from == i.anchor ? s : a, i.from == i.head ? s : a));
      }
      o && (t || (t = e.ranges.slice()), t[r] = o);
    }
    return t ? ce.create(t, e.mainIndex) : e;
  }
  select(e) {
    let { view: t } = this, r = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !r.eq(t.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: r,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function AEe(n, e) {
  let t = n.state.facet(g9);
  return t.length ? t[0](e) : ze.mac ? e.metaKey : e.ctrlKey;
}
function TEe(n, e) {
  let t = n.state.facet(v9);
  return t.length ? t[0](e) : ze.mac ? !e.altKey : !e.ctrlKey;
}
function PEe(n, e) {
  let { main: t } = n.state.selection;
  if (t.empty)
    return !1;
  let r = hx(n.root);
  if (!r || r.rangeCount == 0)
    return !0;
  let i = r.getRangeAt(0).getClientRects();
  for (let o = 0; o < i.length; o++) {
    let s = i[o];
    if (s.left <= e.clientX && s.right >= e.clientX && s.top <= e.clientY && s.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function EEe(n, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let t = e.target, r; t != n.contentDOM; t = t.parentNode)
    if (!t || t.nodeType == 11 || (r = kn.get(t)) && r.ignoreEvent(e))
      return !1;
  return !0;
}
const oa = /* @__PURE__ */ Object.create(null), sa = /* @__PURE__ */ Object.create(null), L9 = ze.ie && ze.ie_version < 15 || ze.ios && ze.webkit_version < 604;
function kEe(n) {
  let e = n.dom.parentNode;
  if (!e)
    return;
  let t = e.appendChild(document.createElement("textarea"));
  t.style.cssText = "position: fixed; left: -10000px; top: 10px", t.focus(), setTimeout(() => {
    n.focus(), t.remove(), I9(n, t.value);
  }, 50);
}
function I9(n, e) {
  let { state: t } = n, r, i = 1, o = t.toText(e), s = o.lines == t.selection.ranges.length;
  if (WE != null && t.selection.ranges.every((l) => l.empty) && WE == o.toString()) {
    let l = -1;
    r = t.changeByRange((u) => {
      let c = t.doc.lineAt(u.from);
      if (c.from == l)
        return { range: u };
      l = c.from;
      let h = t.toText((s ? o.line(i++).text : e) + t.lineBreak);
      return {
        changes: { from: c.from, insert: h },
        range: ce.cursor(u.from + h.length)
      };
    });
  } else
    s ? r = t.changeByRange((l) => {
      let u = o.line(i++);
      return {
        changes: { from: l.from, to: l.to, insert: u.text },
        range: ce.cursor(l.from + u.length)
      };
    }) : r = t.replaceSelection(o);
  n.dispatch(r, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
sa.scroll = (n) => {
  n.inputState.lastScrollTop = n.scrollDOM.scrollTop, n.inputState.lastScrollLeft = n.scrollDOM.scrollLeft;
};
oa.keydown = (n, e) => (n.inputState.setSelectionOrigin("select"), e.keyCode == 27 && (n.inputState.lastEscPress = Date.now()), !1);
sa.touchstart = (n, e) => {
  n.inputState.lastTouchTime = Date.now(), n.inputState.setSelectionOrigin("select.pointer");
};
sa.touchmove = (n) => {
  n.inputState.setSelectionOrigin("select.pointer");
};
oa.mousedown = (n, e) => {
  if (n.observer.flush(), n.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let t = null;
  for (let r of n.state.facet(m9))
    if (t = r(n, e), t)
      break;
  if (!t && e.button == 0 && (t = LEe(n, e)), t) {
    let r = !n.hasFocus;
    n.inputState.startMouseSelection(new CEe(n, e, t, r)), r && n.observer.ignore(() => Kq(n.contentDOM));
    let i = n.inputState.mouseSelection;
    if (i)
      return i.start(e), i.dragging === !1;
  }
  return !1;
};
function tB(n, e, t, r) {
  if (r == 1)
    return ce.cursor(e, t);
  if (r == 2)
    return dEe(n.state, e, t);
  {
    let i = Mi.find(n.docView, e), o = n.state.doc.lineAt(i ? i.posAtEnd : e), s = i ? i.posAtStart : o.from, a = i ? i.posAtEnd : o.to;
    return a < n.state.doc.length && a == o.to && a++, ce.range(s, a);
  }
}
let R9 = (n, e) => n >= e.top && n <= e.bottom, nB = (n, e, t) => R9(e, t) && n >= t.left && n <= t.right;
function MEe(n, e, t, r) {
  let i = Mi.find(n.docView, e);
  if (!i)
    return 1;
  let o = e - i.posAtStart;
  if (o == 0)
    return 1;
  if (o == i.length)
    return -1;
  let s = i.coordsAt(o, -1);
  if (s && nB(t, r, s))
    return -1;
  let a = i.coordsAt(o, 1);
  return a && nB(t, r, a) ? 1 : s && R9(r, s) ? -1 : 1;
}
function rB(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: t, bias: MEe(n, t, e.clientX, e.clientY) };
}
const DEe = ze.ie && ze.ie_version <= 11;
let iB = null, oB = 0, sB = 0;
function $9(n) {
  if (!DEe)
    return n.detail;
  let e = iB, t = sB;
  return iB = n, sB = Date.now(), oB = !e || t > Date.now() - 400 && Math.abs(e.clientX - n.clientX) < 2 && Math.abs(e.clientY - n.clientY) < 2 ? (oB + 1) % 3 : 1;
}
function LEe(n, e) {
  let t = rB(n, e), r = $9(e), i = n.state.selection;
  return {
    update(o) {
      o.docChanged && (t.pos = o.changes.mapPos(t.pos), i = i.map(o.changes));
    },
    get(o, s, a) {
      let l = rB(n, o), u, c = tB(n, l.pos, l.bias, r);
      if (t.pos != l.pos && !s) {
        let h = tB(n, t.pos, t.bias, r), f = Math.min(h.from, c.from), d = Math.max(h.to, c.to);
        c = f < c.from ? ce.range(f, d) : ce.range(d, f);
      }
      return s ? i.replaceRange(i.main.extend(c.from, c.to)) : a && r == 1 && i.ranges.length > 1 && (u = IEe(i, l.pos)) ? u : a ? i.addRange(c) : ce.create([c]);
    }
  };
}
function IEe(n, e) {
  for (let t = 0; t < n.ranges.length; t++) {
    let { from: r, to: i } = n.ranges[t];
    if (r <= e && i >= e)
      return ce.create(n.ranges.slice(0, t).concat(n.ranges.slice(t + 1)), n.mainIndex == t ? 0 : n.mainIndex - (n.mainIndex > t ? 1 : 0));
  }
  return null;
}
oa.dragstart = (n, e) => {
  let { selection: { main: t } } = n.state;
  if (e.target.draggable) {
    let i = n.docView.nearest(e.target);
    if (i && i.isWidget) {
      let o = i.posAtStart, s = o + i.length;
      (o >= t.to || s <= t.from) && (t = ce.range(o, s));
    }
  }
  let { inputState: r } = n;
  return r.mouseSelection && (r.mouseSelection.dragging = !0), r.draggedContent = t, e.dataTransfer && (e.dataTransfer.setData("Text", n.state.sliceDoc(t.from, t.to)), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
oa.dragend = (n) => (n.inputState.draggedContent = null, !1);
function aB(n, e, t, r) {
  if (!t)
    return;
  let i = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: o } = n.inputState, s = r && o && TEe(n, e) ? { from: o.from, to: o.to } : null, a = { from: i, insert: t }, l = n.state.changes(s ? [s, a] : a);
  n.focus(), n.dispatch({
    changes: l,
    selection: { anchor: l.mapPos(i, -1), head: l.mapPos(i, 1) },
    userEvent: s ? "move.drop" : "input.drop"
  }), n.inputState.draggedContent = null;
}
oa.drop = (n, e) => {
  if (!e.dataTransfer)
    return !1;
  if (n.state.readOnly)
    return !0;
  let t = e.dataTransfer.files;
  if (t && t.length) {
    let r = Array(t.length), i = 0, o = () => {
      ++i == t.length && aB(n, e, r.filter((s) => s != null).join(n.state.lineBreak), !1);
    };
    for (let s = 0; s < t.length; s++) {
      let a = new FileReader();
      a.onerror = o, a.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(a.result) || (r[s] = a.result), o();
      }, a.readAsText(t[s]);
    }
    return !0;
  } else {
    let r = e.dataTransfer.getData("Text");
    if (r)
      return aB(n, e, r, !0), !0;
  }
  return !1;
};
oa.paste = (n, e) => {
  if (n.state.readOnly)
    return !0;
  n.observer.flush();
  let t = L9 ? null : e.clipboardData;
  return t ? (I9(n, t.getData("text/plain") || t.getData("text/uri-text")), !0) : (kEe(n), !1);
};
function REe(n, e) {
  let t = n.dom.parentNode;
  if (!t)
    return;
  let r = t.appendChild(document.createElement("textarea"));
  r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.value = e, r.focus(), r.selectionEnd = e.length, r.selectionStart = 0, setTimeout(() => {
    r.remove(), n.focus();
  }, 50);
}
function $Ee(n) {
  let e = [], t = [], r = !1;
  for (let i of n.selection.ranges)
    i.empty || (e.push(n.sliceDoc(i.from, i.to)), t.push(i));
  if (!e.length) {
    let i = -1;
    for (let { from: o } of n.selection.ranges) {
      let s = n.doc.lineAt(o);
      s.number > i && (e.push(s.text), t.push({ from: s.from, to: Math.min(n.doc.length, s.to + 1) })), i = s.number;
    }
    r = !0;
  }
  return { text: e.join(n.lineBreak), ranges: t, linewise: r };
}
let WE = null;
oa.copy = oa.cut = (n, e) => {
  let { text: t, ranges: r, linewise: i } = $Ee(n.state);
  if (!t && !i)
    return !1;
  WE = i ? t : null, e.type == "cut" && !n.state.readOnly && n.dispatch({
    changes: r,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let o = L9 ? null : e.clipboardData;
  return o ? (o.clearData(), o.setData("text/plain", t), !0) : (REe(n, t), !1);
};
const N9 = /* @__PURE__ */ gu.define();
function B9(n, e) {
  let t = [];
  for (let r of n.facet(O9)) {
    let i = r(n, e);
    i && t.push(i);
  }
  return t ? n.update({ effects: t, annotations: N9.of(!0) }) : null;
}
function V9(n) {
  setTimeout(() => {
    let e = n.hasFocus;
    if (e != n.inputState.notifiedFocused) {
      let t = B9(n.state, e);
      t ? n.dispatch(t) : n.update([]);
    }
  }, 10);
}
sa.focus = (n) => {
  n.inputState.lastFocusTime = Date.now(), !n.scrollDOM.scrollTop && (n.inputState.lastScrollTop || n.inputState.lastScrollLeft) && (n.scrollDOM.scrollTop = n.inputState.lastScrollTop, n.scrollDOM.scrollLeft = n.inputState.lastScrollLeft), V9(n);
};
sa.blur = (n) => {
  n.observer.clearSelectionRange(), V9(n);
};
sa.compositionstart = sa.compositionupdate = (n) => {
  n.inputState.compositionFirstChange == null && (n.inputState.compositionFirstChange = !0), n.inputState.composing < 0 && (n.inputState.composing = 0);
};
sa.compositionend = (n) => {
  n.inputState.composing = -1, n.inputState.compositionEndedAt = Date.now(), n.inputState.compositionPendingKey = !0, n.inputState.compositionPendingChange = n.observer.pendingRecords().length > 0, n.inputState.compositionFirstChange = null, ze.chrome && ze.android ? n.observer.flushSoon() : n.inputState.compositionPendingChange ? Promise.resolve().then(() => n.observer.flush()) : setTimeout(() => {
    n.inputState.composing < 0 && n.docView.hasComposition && n.update([]);
  }, 50);
};
sa.contextmenu = (n) => {
  n.inputState.lastContextMenu = Date.now();
};
oa.beforeinput = (n, e) => {
  var t;
  let r;
  if (ze.chrome && ze.android && (r = M9.find((i) => i.inputType == e.inputType)) && (n.observer.delayAndroidKey(r.key, r.keyCode), r.key == "Backspace" || r.key == "Delete")) {
    let i = ((t = window.visualViewport) === null || t === void 0 ? void 0 : t.height) || 0;
    setTimeout(() => {
      var o;
      (((o = window.visualViewport) === null || o === void 0 ? void 0 : o.height) || 0) > i + 10 && n.hasFocus && (n.contentDOM.blur(), n.focus());
    }, 100);
  }
  return !1;
};
const lB = /* @__PURE__ */ new Set();
function NEe(n) {
  lB.has(n) || (lB.add(n), n.addEventListener("copy", () => {
  }), n.addEventListener("cut", () => {
  }));
}
const uB = ["pre-wrap", "normal", "pre-line", "break-spaces"];
class BEe {
  constructor(e) {
    this.lineWrapping = e, this.doc = Ut.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30, this.heightChanged = !1;
  }
  heightForGap(e, t) {
    let r = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (r += Math.max(0, Math.ceil((t - e - r * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * r;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return uB.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let t = !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r];
      i < 0 ? r++ : this.heightSamples[Math.floor(i * 10)] || (t = !0, this.heightSamples[Math.floor(i * 10)] = !0);
    }
    return t;
  }
  refresh(e, t, r, i, o, s) {
    let a = uB.indexOf(e) > -1, l = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != a;
    if (this.lineWrapping = a, this.lineHeight = t, this.charWidth = r, this.textHeight = i, this.lineLength = o, l) {
      this.heightSamples = {};
      for (let u = 0; u < s.length; u++) {
        let c = s[u];
        c < 0 ? u++ : this.heightSamples[Math.floor(c * 10)] = !0;
      }
    }
    return l;
  }
}
class VEe {
  constructor(e, t) {
    this.from = e, this.heights = t, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class Va {
  /**
  @internal
  */
  constructor(e, t, r, i, o) {
    this.from = e, this.length = t, this.top = r, this.height = i, this._content = o;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? $i.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof Dc ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new Va(this.from, this.length + e.length, this.top, this.height + e.height, t);
  }
}
var An = /* @__PURE__ */ function(n) {
  return n[n.ByPos = 0] = "ByPos", n[n.ByHeight = 1] = "ByHeight", n[n.ByPosNoHeight = 2] = "ByPosNoHeight", n;
}(An || (An = {}));
const rw = 1e-3;
class Ni {
  constructor(e, t, r = 2) {
    this.length = e, this.height = t, this.flags = r;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e, t) {
    this.height != t && (Math.abs(this.height - t) > rw && (e.heightChanged = !0), this.height = t);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, t, r) {
    return Ni.of(r);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, t) {
    t.push(this);
  }
  decomposeRight(e, t) {
    t.push(this);
  }
  applyChanges(e, t, r, i) {
    let o = this, s = r.doc;
    for (let a = i.length - 1; a >= 0; a--) {
      let { fromA: l, toA: u, fromB: c, toB: h } = i[a], f = o.lineAt(l, An.ByPosNoHeight, r.setDoc(t), 0, 0), d = f.to >= u ? f : o.lineAt(u, An.ByPosNoHeight, r, 0, 0);
      for (h += d.to - u, u = d.to; a > 0 && f.from <= i[a - 1].toA; )
        l = i[a - 1].fromA, c = i[a - 1].fromB, a--, l < f.from && (f = o.lineAt(l, An.ByPosNoHeight, r, 0, 0));
      c += f.from - l, l = f.from;
      let p = WL.build(r.setDoc(s), e, c, h);
      o = o.replace(l, u, p);
    }
    return o.updateHeight(r, 0);
  }
  static empty() {
    return new Po(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let t = 0, r = e.length, i = 0, o = 0;
    for (; ; )
      if (t == r)
        if (i > o * 2) {
          let a = e[t - 1];
          a.break ? e.splice(--t, 1, a.left, null, a.right) : e.splice(--t, 1, a.left, a.right), r += 1 + a.break, i -= a.size;
        } else if (o > i * 2) {
          let a = e[r];
          a.break ? e.splice(r, 1, a.left, null, a.right) : e.splice(r, 1, a.left, a.right), r += 2 + a.break, o -= a.size;
        } else
          break;
      else if (i < o) {
        let a = e[t++];
        a && (i += a.size);
      } else {
        let a = e[--r];
        a && (o += a.size);
      }
    let s = 0;
    return e[t - 1] == null ? (s = 1, t--) : e[t] == null && (s = 1, r++), new zEe(Ni.of(e.slice(0, t)), s, Ni.of(e.slice(r)));
  }
}
Ni.prototype.size = 1;
class z9 extends Ni {
  constructor(e, t, r) {
    super(e, t), this.deco = r;
  }
  blockAt(e, t, r, i) {
    return new Va(i, this.length, r, this.height, this.deco || 0);
  }
  lineAt(e, t, r, i, o) {
    return this.blockAt(0, r, i, o);
  }
  forEachLine(e, t, r, i, o, s) {
    e <= o + this.length && t >= o && s(this.blockAt(0, r, i, o));
  }
  updateHeight(e, t = 0, r = !1, i) {
    return i && i.from <= t && i.more && this.setHeight(e, i.heights[i.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class Po extends z9 {
  constructor(e, t) {
    super(e, t, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, t, r, i) {
    return new Va(i, this.length, r, this.height, this.breaks);
  }
  replace(e, t, r) {
    let i = r[0];
    return r.length == 1 && (i instanceof Po || i instanceof Hr && i.flags & 4) && Math.abs(this.length - i.length) < 10 ? (i instanceof Hr ? i = new Po(i.length, this.height) : i.height = this.height, this.outdated || (i.outdated = !1), i) : Ni.of(r);
  }
  updateHeight(e, t = 0, r = !1, i) {
    return i && i.from <= t && i.more ? this.setHeight(e, i.heights[i.index++]) : (r || this.outdated) && this.setHeight(e, Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class Hr extends Ni {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, t) {
    let r = e.doc.lineAt(t).number, i = e.doc.lineAt(t + this.length).number, o = i - r + 1, s, a = 0;
    if (e.lineWrapping) {
      let l = Math.min(this.height, e.lineHeight * o);
      s = l / o, this.length > o + 1 && (a = (this.height - l) / (this.length - o - 1));
    } else
      s = this.height / o;
    return { firstLine: r, lastLine: i, perLine: s, perChar: a };
  }
  blockAt(e, t, r, i) {
    let { firstLine: o, lastLine: s, perLine: a, perChar: l } = this.heightMetrics(t, i);
    if (t.lineWrapping) {
      let u = i + Math.round(Math.max(0, Math.min(1, (e - r) / this.height)) * this.length), c = t.doc.lineAt(u), h = a + c.length * l, f = Math.max(r, e - h / 2);
      return new Va(c.from, c.length, f, h, 0);
    } else {
      let u = Math.max(0, Math.min(s - o, Math.floor((e - r) / a))), { from: c, length: h } = t.doc.line(o + u);
      return new Va(c, h, r + a * u, a, 0);
    }
  }
  lineAt(e, t, r, i, o) {
    if (t == An.ByHeight)
      return this.blockAt(e, r, i, o);
    if (t == An.ByPosNoHeight) {
      let { from: d, to: p } = r.doc.lineAt(e);
      return new Va(d, p - d, 0, 0, 0);
    }
    let { firstLine: s, perLine: a, perChar: l } = this.heightMetrics(r, o), u = r.doc.lineAt(e), c = a + u.length * l, h = u.number - s, f = i + a * h + l * (u.from - o - h);
    return new Va(u.from, u.length, Math.max(i, Math.min(f, i + this.height - c)), c, 0);
  }
  forEachLine(e, t, r, i, o, s) {
    e = Math.max(e, o), t = Math.min(t, o + this.length);
    let { firstLine: a, perLine: l, perChar: u } = this.heightMetrics(r, o);
    for (let c = e, h = i; c <= t; ) {
      let f = r.doc.lineAt(c);
      if (c == e) {
        let p = f.number - a;
        h += l * p + u * (e - o - p);
      }
      let d = l + u * f.length;
      s(new Va(f.from, f.length, h, d, 0)), h += d, c = f.to + 1;
    }
  }
  replace(e, t, r) {
    let i = this.length - t;
    if (i > 0) {
      let o = r[r.length - 1];
      o instanceof Hr ? r[r.length - 1] = new Hr(o.length + i) : r.push(null, new Hr(i - 1));
    }
    if (e > 0) {
      let o = r[0];
      o instanceof Hr ? r[0] = new Hr(e + o.length) : r.unshift(new Hr(e - 1), null);
    }
    return Ni.of(r);
  }
  decomposeLeft(e, t) {
    t.push(new Hr(e - 1), null);
  }
  decomposeRight(e, t) {
    t.push(null, new Hr(this.length - e - 1));
  }
  updateHeight(e, t = 0, r = !1, i) {
    let o = t + this.length;
    if (i && i.from <= t + this.length && i.more) {
      let s = [], a = Math.max(t, i.from), l = -1;
      for (i.from > t && s.push(new Hr(i.from - t - 1).updateHeight(e, t)); a <= o && i.more; ) {
        let c = e.doc.lineAt(a).length;
        s.length && s.push(null);
        let h = i.heights[i.index++];
        l == -1 ? l = h : Math.abs(h - l) >= rw && (l = -2);
        let f = new Po(c, h);
        f.outdated = !1, s.push(f), a += c + 1;
      }
      a <= o && s.push(null, new Hr(o - a).updateHeight(e, a));
      let u = Ni.of(s);
      return (l < 0 || Math.abs(u.height - this.height) >= rw || Math.abs(l - this.heightMetrics(e, t).perLine) >= rw) && (e.heightChanged = !0), u;
    } else
      (r || this.outdated) && (this.setHeight(e, e.heightForGap(t, t + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class zEe extends Ni {
  constructor(e, t, r) {
    super(e.length + t + r.length, e.height + r.height, t | (e.outdated || r.outdated ? 2 : 0)), this.left = e, this.right = r, this.size = e.size + r.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, t, r, i) {
    let o = r + this.left.height;
    return e < o ? this.left.blockAt(e, t, r, i) : this.right.blockAt(e, t, o, i + this.left.length + this.break);
  }
  lineAt(e, t, r, i, o) {
    let s = i + this.left.height, a = o + this.left.length + this.break, l = t == An.ByHeight ? e < s : e < a, u = l ? this.left.lineAt(e, t, r, i, o) : this.right.lineAt(e, t, r, s, a);
    if (this.break || (l ? u.to < a : u.from > a))
      return u;
    let c = t == An.ByPosNoHeight ? An.ByPosNoHeight : An.ByPos;
    return l ? u.join(this.right.lineAt(a, c, r, s, a)) : this.left.lineAt(a, c, r, i, o).join(u);
  }
  forEachLine(e, t, r, i, o, s) {
    let a = i + this.left.height, l = o + this.left.length + this.break;
    if (this.break)
      e < l && this.left.forEachLine(e, t, r, i, o, s), t >= l && this.right.forEachLine(e, t, r, a, l, s);
    else {
      let u = this.lineAt(l, An.ByPos, r, i, o);
      e < u.from && this.left.forEachLine(e, u.from - 1, r, i, o, s), u.to >= e && u.from <= t && s(u), t > u.to && this.right.forEachLine(u.to + 1, t, r, a, l, s);
    }
  }
  replace(e, t, r) {
    let i = this.left.length + this.break;
    if (t < i)
      return this.balanced(this.left.replace(e, t, r), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - i, t - i, r));
    let o = [];
    e > 0 && this.decomposeLeft(e, o);
    let s = o.length;
    for (let a of r)
      o.push(a);
    if (e > 0 && cB(o, s - 1), t < this.length) {
      let a = o.length;
      this.decomposeRight(t, o), cB(o, a);
    }
    return Ni.of(o);
  }
  decomposeLeft(e, t) {
    let r = this.left.length;
    if (e <= r)
      return this.left.decomposeLeft(e, t);
    t.push(this.left), this.break && (r++, e >= r && t.push(null)), e > r && this.right.decomposeLeft(e - r, t);
  }
  decomposeRight(e, t) {
    let r = this.left.length, i = r + this.break;
    if (e >= i)
      return this.right.decomposeRight(e - i, t);
    e < r && this.left.decomposeRight(e, t), this.break && e < i && t.push(null), t.push(this.right);
  }
  balanced(e, t) {
    return e.size > 2 * t.size || t.size > 2 * e.size ? Ni.of(this.break ? [e, null, t] : [e, t]) : (this.left = e, this.right = t, this.height = e.height + t.height, this.outdated = e.outdated || t.outdated, this.size = e.size + t.size, this.length = e.length + this.break + t.length, this);
  }
  updateHeight(e, t = 0, r = !1, i) {
    let { left: o, right: s } = this, a = t + o.length + this.break, l = null;
    return i && i.from <= t + o.length && i.more ? l = o = o.updateHeight(e, t, r, i) : o.updateHeight(e, t, r), i && i.from <= a + s.length && i.more ? l = s = s.updateHeight(e, a, r, i) : s.updateHeight(e, a, r), l ? this.balanced(o, s) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function cB(n, e) {
  let t, r;
  n[e] == null && (t = n[e - 1]) instanceof Hr && (r = n[e + 1]) instanceof Hr && n.splice(e - 1, 3, new Hr(t.length + 1 + r.length));
}
const FEe = 5;
class WL {
  constructor(e, t) {
    this.pos = e, this.oracle = t, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, t) {
    if (this.lineStart > -1) {
      let r = Math.min(t, this.lineEnd), i = this.nodes[this.nodes.length - 1];
      i instanceof Po ? i.length += r - this.pos : (r > this.pos || !this.isCovered) && this.nodes.push(new Po(r - this.pos, -1)), this.writtenTo = r, t > r && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = t;
  }
  point(e, t, r) {
    if (e < t || r.heightRelevant) {
      let i = r.widget ? r.widget.estimatedHeight : 0, o = r.widget ? r.widget.lineBreaks : 0;
      i < 0 && (i = this.oracle.lineHeight);
      let s = t - e;
      r.block ? this.addBlock(new z9(s, i, r)) : (s || o || i >= FEe) && this.addLineDeco(i, o, s);
    } else
      t > e && this.span(e, t);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: t } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = t, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new Po(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, t) {
    let r = new Hr(t - e);
    return this.oracle.doc.lineAt(e).to == t && (r.flags |= 4), r;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof Po)
      return e;
    let t = new Po(0, -1);
    return this.nodes.push(t), t;
  }
  addBlock(e) {
    this.enterLine();
    let t = e.deco;
    t && t.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, t && t.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, t, r) {
    let i = this.ensureLine();
    i.length += r, i.collapsed += r, i.widgetHeight = Math.max(i.widgetHeight, e), i.breaks += t, this.writtenTo = this.pos = this.pos + r;
  }
  finish(e) {
    let t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(t instanceof Po) && !this.isCovered ? this.nodes.push(new Po(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let r = e;
    for (let i of this.nodes)
      i instanceof Po && i.updateHeight(this.oracle, r), r += i ? i.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, t, r, i) {
    let o = new WL(r, e);
    return Zt.spans(t, r, i, o, 0), o.finish(r);
  }
}
function QEe(n, e, t) {
  let r = new ZEe();
  return Zt.compare(n, e, t, r, 0), r.changes;
}
class ZEe {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, t, r, i) {
    (e < t || r && r.heightRelevant || i && i.heightRelevant) && NE(e, t, this.changes, 5);
  }
}
function WEe(n, e) {
  let t = n.getBoundingClientRect(), r = n.ownerDocument, i = r.defaultView || window, o = Math.max(0, t.left), s = Math.min(i.innerWidth, t.right), a = Math.max(0, t.top), l = Math.min(i.innerHeight, t.bottom);
  for (let u = n.parentNode; u && u != r.body; )
    if (u.nodeType == 1) {
      let c = u, h = window.getComputedStyle(c);
      if ((c.scrollHeight > c.clientHeight || c.scrollWidth > c.clientWidth) && h.overflow != "visible") {
        let f = c.getBoundingClientRect();
        o = Math.max(o, f.left), s = Math.min(s, f.right), a = Math.max(a, f.top), l = u == n.parentNode ? f.bottom : Math.min(l, f.bottom);
      }
      u = h.position == "absolute" || h.position == "fixed" ? c.offsetParent : c.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
  return {
    left: o - t.left,
    right: Math.max(o, s) - t.left,
    top: a - (t.top + e),
    bottom: Math.max(a, l) - (t.top + e)
  };
}
function GEe(n, e) {
  let t = n.getBoundingClientRect();
  return {
    left: 0,
    right: t.right - t.left,
    top: e,
    bottom: t.bottom - (t.top + e)
  };
}
class h2 {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.size = r;
  }
  static same(e, t) {
    if (e.length != t.length)
      return !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r], o = t[r];
      if (i.from != o.from || i.to != o.to || i.size != o.size)
        return !1;
    }
    return !0;
  }
  draw(e, t) {
    return tt.replace({
      widget: new jEe(this.size * (t ? e.scaleY : e.scaleX), t)
    }).range(this.from, this.to);
  }
}
class jEe extends vu {
  constructor(e, t) {
    super(), this.size = e, this.vertical = t;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class hB {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !0, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = fB, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Mn.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let t = e.facet(QL).some((r) => typeof r != "function" && r.class == "cm-lineWrapping");
    this.heightOracle = new BEe(t), this.stateDeco = e.facet(n0).filter((r) => typeof r != "function"), this.heightMap = Ni.empty().applyChanges(this.stateDeco, Ut.empty, this.heightOracle.setDoc(e.doc), [new ms(0, 0, 0, e.doc.length)]), this.viewport = this.getViewport(0, null), this.updateViewportLines(), this.updateForViewport(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = tt.set(this.lineGaps.map((r) => r.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: t } = this.state.selection;
    for (let r = 0; r <= 1; r++) {
      let i = r ? t.head : t.anchor;
      if (!e.some(({ from: o, to: s }) => i >= o && i <= s)) {
        let { from: o, to: s } = this.lineBlockAt(i);
        e.push(new f1(o, s));
      }
    }
    this.viewports = e.sort((r, i) => r.from - i.from), this.scaler = this.heightMap.height <= 7e6 ? fB : new YEe(this.heightOracle, this.heightMap, this.viewports);
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(this.scaler.scale == 1 ? e : xm(e, this.scaler));
    });
  }
  update(e, t = null) {
    this.state = e.state;
    let r = this.stateDeco;
    this.stateDeco = this.state.facet(n0).filter((c) => typeof c != "function");
    let i = e.changedRanges, o = ms.extendWithRanges(i, QEe(r, this.stateDeco, e ? e.changes : _r.empty(this.state.doc.length))), s = this.heightMap.height, a = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), o), this.heightMap.height != s && (e.flags |= 2), a ? (this.scrollAnchorPos = e.changes.mapPos(a.from, -1), this.scrollAnchorHeight = a.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let l = o.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (t && (t.range.head < l.from || t.range.head > l.to) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, t));
    let u = !e.changes.empty || e.flags & 2 || l.from != this.viewport.from || l.to != this.viewport.to;
    this.viewport = l, this.updateForViewport(), u && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(), t && (this.scrollTarget = t), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(x9) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let t = e.contentDOM, r = window.getComputedStyle(t), i = this.heightOracle, o = r.whiteSpace;
    this.defaultTextDirection = r.direction == "rtl" ? Mn.RTL : Mn.LTR;
    let s = this.heightOracle.mustRefreshForWrapping(o), a = t.getBoundingClientRect(), l = s || this.mustMeasureContent || this.contentDOMHeight != a.height;
    this.contentDOMHeight = a.height, this.mustMeasureContent = !1;
    let u = 0, c = 0;
    if (a.width && a.height) {
      let { scaleX: O, scaleY: w } = Uq(t, a);
      (this.scaleX != O || this.scaleY != w) && (this.scaleX = O, this.scaleY = w, u |= 8, s = l = !0);
    }
    let h = (parseInt(r.paddingTop) || 0) * this.scaleY, f = (parseInt(r.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != h || this.paddingBottom != f) && (this.paddingTop = h, this.paddingBottom = f, u |= 10), this.editorWidth != e.scrollDOM.clientWidth && (i.lineWrapping && (l = !0), this.editorWidth = e.scrollDOM.clientWidth, u |= 8);
    let d = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != d && (this.scrollAnchorHeight = -1, this.scrollTop = d), this.scrolledToBottom = e9(e.scrollDOM);
    let p = (this.printing ? GEe : WEe)(t, this.paddingTop), g = p.top - this.pixelViewport.top, v = p.bottom - this.pixelViewport.bottom;
    this.pixelViewport = p;
    let m = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (m != this.inView && (this.inView = m, m && (l = !0)), !this.inView && !this.scrollTarget)
      return 0;
    let y = a.width;
    if ((this.contentDOMWidth != y || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = a.width, this.editorHeight = e.scrollDOM.clientHeight, u |= 8), l) {
      let O = e.docView.measureVisibleLineHeights(this.viewport);
      if (i.mustRefreshForHeights(O) && (s = !0), s || i.lineWrapping && Math.abs(y - this.contentDOMWidth) > i.charWidth) {
        let { lineHeight: w, charWidth: x, textHeight: S } = e.docView.measureTextSize();
        s = w > 0 && i.refresh(o, w, x, S, y / x, O), s && (e.docView.minWidth = 0, u |= 8);
      }
      g > 0 && v > 0 ? c = Math.max(g, v) : g < 0 && v < 0 && (c = Math.min(g, v)), i.heightChanged = !1;
      for (let w of this.viewports) {
        let x = w.from == this.viewport.from ? O : e.docView.measureVisibleLineHeights(w);
        this.heightMap = (s ? Ni.empty().applyChanges(this.stateDeco, Ut.empty, this.heightOracle, [new ms(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(i, 0, s, new VEe(w.from, x));
      }
      i.heightChanged && (u |= 2);
    }
    let b = !this.viewportIsAppropriate(this.viewport, c) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return b && (this.viewport = this.getViewport(c, this.scrollTarget)), this.updateForViewport(), (u & 2 || b) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(s ? [] : this.lineGaps, e)), u |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), u;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, t) {
    let r = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), i = this.heightMap, o = this.heightOracle, { visibleTop: s, visibleBottom: a } = this, l = new f1(i.lineAt(s - r * 1e3, An.ByHeight, o, 0, 0).from, i.lineAt(a + (1 - r) * 1e3, An.ByHeight, o, 0, 0).to);
    if (t) {
      let { head: u } = t.range;
      if (u < l.from || u > l.to) {
        let c = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), h = i.lineAt(u, An.ByPos, o, 0, 0), f;
        t.y == "center" ? f = (h.top + h.bottom) / 2 - c / 2 : t.y == "start" || t.y == "nearest" && u < l.from ? f = h.top : f = h.bottom - c, l = new f1(i.lineAt(f - 1e3 / 2, An.ByHeight, o, 0, 0).from, i.lineAt(f + c + 1e3 / 2, An.ByHeight, o, 0, 0).to);
      }
    }
    return l;
  }
  mapViewport(e, t) {
    let r = t.mapPos(e.from, -1), i = t.mapPos(e.to, 1);
    return new f1(this.heightMap.lineAt(r, An.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(i, An.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: t }, r = 0) {
    if (!this.inView)
      return !0;
    let { top: i } = this.heightMap.lineAt(e, An.ByPos, this.heightOracle, 0, 0), { bottom: o } = this.heightMap.lineAt(t, An.ByPos, this.heightOracle, 0, 0), { visibleTop: s, visibleBottom: a } = this;
    return (e == 0 || i <= s - Math.max(10, Math.min(
      -r,
      250
      /* VP.MaxCoverMargin */
    ))) && (t == this.state.doc.length || o >= a + Math.max(10, Math.min(
      r,
      250
      /* VP.MaxCoverMargin */
    ))) && i > s - 2 * 1e3 && o < a + 2 * 1e3;
  }
  mapLineGaps(e, t) {
    if (!e.length || t.empty)
      return e;
    let r = [];
    for (let i of e)
      t.touchesRange(i.from, i.to) || r.push(new h2(t.mapPos(i.from), t.mapPos(i.to), i.size));
    return r;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, t) {
    let r = this.heightOracle.lineWrapping, i = r ? 1e4 : 2e3, o = i >> 1, s = i << 1;
    if (this.defaultTextDirection != Mn.LTR && !r)
      return [];
    let a = [], l = (u, c, h, f) => {
      if (c - u < o)
        return;
      let d = this.state.selection.main, p = [d.from];
      d.empty || p.push(d.to);
      for (let v of p)
        if (v > u && v < c) {
          l(u, v - 10, h, f), l(v + 10, c, h, f);
          return;
        }
      let g = qEe(e, (v) => v.from >= h.from && v.to <= h.to && Math.abs(v.from - u) < o && Math.abs(v.to - c) < o && !p.some((m) => v.from < m && v.to > m));
      if (!g) {
        if (c < h.to && t && r && t.visibleRanges.some((v) => v.from <= c && v.to >= c)) {
          let v = t.moveToLineBoundary(ce.cursor(c), !1, !0).head;
          v > u && (c = v);
        }
        g = new h2(u, c, this.gapSize(h, u, c, f));
      }
      a.push(g);
    };
    for (let u of this.viewportLines) {
      if (u.length < s)
        continue;
      let c = HEe(u.from, u.to, this.stateDeco);
      if (c.total < s)
        continue;
      let h = this.scrollTarget ? this.scrollTarget.range.head : null, f, d;
      if (r) {
        let p = i / this.heightOracle.lineLength * this.heightOracle.lineHeight, g, v;
        if (h != null) {
          let m = p1(c, h), y = ((this.visibleBottom - this.visibleTop) / 2 + p) / u.height;
          g = m - y, v = m + y;
        } else
          g = (this.visibleTop - u.top - p) / u.height, v = (this.visibleBottom - u.top + p) / u.height;
        f = d1(c, g), d = d1(c, v);
      } else {
        let p = c.total * this.heightOracle.charWidth, g = i * this.heightOracle.charWidth, v, m;
        if (h != null) {
          let y = p1(c, h), b = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + g) / p;
          v = y - b, m = y + b;
        } else
          v = (this.pixelViewport.left - g) / p, m = (this.pixelViewport.right + g) / p;
        f = d1(c, v), d = d1(c, m);
      }
      f > u.from && l(u.from, f, u, c), d < u.to && l(d, u.to, u, c);
    }
    return a;
  }
  gapSize(e, t, r, i) {
    let o = p1(i, r) - p1(i, t);
    return this.heightOracle.lineWrapping ? e.height * o : i.total * this.heightOracle.charWidth * o;
  }
  updateLineGaps(e) {
    h2.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = tt.set(e.map((t) => t.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges() {
    let e = this.stateDeco;
    this.lineGaps.length && (e = e.concat(this.lineGapDeco));
    let t = [];
    Zt.spans(e, this.viewport.from, this.viewport.to, {
      span(i, o) {
        t.push({ from: i, to: o });
      },
      point() {
      }
    }, 20);
    let r = t.length != this.visibleRanges.length || this.visibleRanges.some((i, o) => i.from != t[o].from || i.to != t[o].to);
    return this.visibleRanges = t, r ? 4 : 0;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e) || xm(this.heightMap.lineAt(e, An.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return xm(this.heightMap.lineAt(this.scaler.fromDOM(e), An.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let t = this.lineBlockAtHeight(e + 8);
    return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return xm(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class f1 {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
function HEe(n, e, t) {
  let r = [], i = n, o = 0;
  return Zt.spans(t, n, e, {
    span() {
    },
    point(s, a) {
      s > i && (r.push({ from: i, to: s }), o += s - i), i = a;
    }
  }, 20), i < e && (r.push({ from: i, to: e }), o += e - i), { total: o, ranges: r };
}
function d1({ total: n, ranges: e }, t) {
  if (t <= 0)
    return e[0].from;
  if (t >= 1)
    return e[e.length - 1].to;
  let r = Math.floor(n * t);
  for (let i = 0; ; i++) {
    let { from: o, to: s } = e[i], a = s - o;
    if (r <= a)
      return o + r;
    r -= a;
  }
}
function p1(n, e) {
  let t = 0;
  for (let { from: r, to: i } of n.ranges) {
    if (e <= i) {
      t += e - r;
      break;
    }
    t += i - r;
  }
  return t / n.total;
}
function qEe(n, e) {
  for (let t of n)
    if (e(t))
      return t;
}
const fB = {
  toDOM(n) {
    return n;
  },
  fromDOM(n) {
    return n;
  },
  scale: 1
};
class YEe {
  constructor(e, t, r) {
    let i = 0, o = 0, s = 0;
    this.viewports = r.map(({ from: a, to: l }) => {
      let u = t.lineAt(a, An.ByPos, e, 0, 0).top, c = t.lineAt(l, An.ByPos, e, 0, 0).bottom;
      return i += c - u, { from: a, to: l, top: u, bottom: c, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - i) / (t.height - i);
    for (let a of this.viewports)
      a.domTop = s + (a.top - o) * this.scale, s = a.domBottom = a.domTop + (a.bottom - a.top), o = a.bottom;
  }
  toDOM(e) {
    for (let t = 0, r = 0, i = 0; ; t++) {
      let o = t < this.viewports.length ? this.viewports[t] : null;
      if (!o || e < o.top)
        return i + (e - r) * this.scale;
      if (e <= o.bottom)
        return o.domTop + (e - o.top);
      r = o.bottom, i = o.domBottom;
    }
  }
  fromDOM(e) {
    for (let t = 0, r = 0, i = 0; ; t++) {
      let o = t < this.viewports.length ? this.viewports[t] : null;
      if (!o || e < o.domTop)
        return r + (e - i) / this.scale;
      if (e <= o.domBottom)
        return o.top + (e - o.domTop);
      r = o.bottom, i = o.domBottom;
    }
  }
}
function xm(n, e) {
  if (e.scale == 1)
    return n;
  let t = e.toDOM(n.top), r = e.toDOM(n.bottom);
  return new Va(n.from, n.length, t, r - t, Array.isArray(n._content) ? n._content.map((i) => xm(i, e)) : n._content);
}
const g1 = /* @__PURE__ */ Be.define({ combine: (n) => n.join(" ") }), GE = /* @__PURE__ */ Be.define({ combine: (n) => n.indexOf(!0) > -1 }), jE = /* @__PURE__ */ kc.newName(), F9 = /* @__PURE__ */ kc.newName(), Q9 = /* @__PURE__ */ kc.newName(), Z9 = { "&light": "." + F9, "&dark": "." + Q9 };
function HE(n, e, t) {
  return new kc(e, {
    finish(r) {
      return /&/.test(r) ? r.replace(/&\w*/, (i) => {
        if (i == "&")
          return n;
        if (!t || !t[i])
          throw new RangeError(`Unsupported selector: ${i}`);
        return t[i];
      }) : n + " " + r;
    }
  });
}
const XEe = /* @__PURE__ */ HE("." + jE, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#444"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace:before": {
    content: "attr(data-display)",
    position: "absolute",
    pointerEvents: "none",
    color: "#888"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, Z9), Sm = "￿";
class UEe {
  constructor(e, t) {
    this.points = e, this.text = "", this.lineSeparator = t.facet(Yt.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += Sm;
  }
  readRange(e, t) {
    if (!e)
      return this;
    let r = e.parentNode;
    for (let i = e; ; ) {
      this.findPointBefore(r, i);
      let o = this.text.length;
      this.readNode(i);
      let s = i.nextSibling;
      if (s == t)
        break;
      let a = kn.get(i), l = kn.get(s);
      (a && l ? a.breakAfter : (a ? a.breakAfter : dB(i)) || dB(s) && (i.nodeName != "BR" || i.cmIgnore) && this.text.length > o) && this.lineBreak(), i = s;
    }
    return this.findPointBefore(r, t), this;
  }
  readTextNode(e) {
    let t = e.nodeValue;
    for (let r of this.points)
      r.node == e && (r.pos = this.text.length + Math.min(r.offset, t.length));
    for (let r = 0, i = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let o = -1, s = 1, a;
      if (this.lineSeparator ? (o = t.indexOf(this.lineSeparator, r), s = this.lineSeparator.length) : (a = i.exec(t)) && (o = a.index, s = a[0].length), this.append(t.slice(r, o < 0 ? t.length : o)), o < 0)
        break;
      if (this.lineBreak(), s > 1)
        for (let l of this.points)
          l.node == e && l.pos > this.text.length && (l.pos -= s - 1);
      r = o + s;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let t = kn.get(e), r = t && t.overrideDOMText;
    if (r != null) {
      this.findPointInside(e, r.length);
      for (let i = r.iter(); !i.next().done; )
        i.lineBreak ? this.lineBreak() : this.append(i.value);
    } else
      e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, t) {
    for (let r of this.points)
      r.node == e && e.childNodes[r.offset] == t && (r.pos = this.text.length);
  }
  findPointInside(e, t) {
    for (let r of this.points)
      (e.nodeType == 3 ? r.node == e : e.contains(r.node)) && (r.pos = this.text.length + (KEe(e, r.node, r.offset) ? t : 0));
  }
}
function KEe(n, e, t) {
  for (; ; ) {
    if (!e || t < eu(e))
      return !1;
    if (e == n)
      return !0;
    t = t0(e) + 1, e = e.parentNode;
  }
}
function dB(n) {
  return n.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(n.nodeName);
}
class pB {
  constructor(e, t) {
    this.node = e, this.offset = t, this.pos = -1;
  }
}
class JEe {
  constructor(e, t, r, i) {
    this.typeOver = i, this.bounds = null, this.text = "";
    let { impreciseHead: o, impreciseAnchor: s } = e.docView;
    if (e.state.readOnly && t > -1)
      this.newSel = null;
    else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, r, 0))) {
      let a = o || s ? [] : nke(e), l = new UEe(a, e.state);
      l.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = l.text, this.newSel = rke(a, this.bounds.from);
    } else {
      let a = e.observer.selectionRange, l = o && o.node == a.focusNode && o.offset == a.focusOffset || !ME(e.contentDOM, a.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(a.focusNode, a.focusOffset), u = s && s.node == a.anchorNode && s.offset == a.anchorOffset || !ME(e.contentDOM, a.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(a.anchorNode, a.anchorOffset), c = e.viewport;
      if ((ze.ios || ze.chrome) && e.state.selection.main.empty && l != u && (c.from > 0 || c.to < e.state.doc.length)) {
        let h = Math.min(l, u), f = Math.max(l, u), d = c.from - h, p = c.to - f;
        (d == 0 || d == 1 || h == 0) && (p == 0 || p == -1 || f == e.state.doc.length) && (l = 0, u = e.state.doc.length);
      }
      this.newSel = ce.single(u, l);
    }
  }
}
function W9(n, e) {
  let t, { newSel: r } = e, i = n.state.selection.main, o = n.inputState.lastKeyTime > Date.now() - 100 ? n.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: s, to: a } = e.bounds, l = i.from, u = null;
    (o === 8 || ze.android && e.text.length < a - s) && (l = i.to, u = "end");
    let c = tke(n.state.doc.sliceString(s, a, Sm), e.text, l - s, u);
    c && (ze.chrome && o == 13 && c.toB == c.from + 2 && e.text.slice(c.from, c.toB) == Sm + Sm && c.toB--, t = {
      from: s + c.from,
      to: s + c.toA,
      insert: Ut.of(e.text.slice(c.from, c.toB).split(Sm))
    });
  } else
    r && (!n.hasFocus && n.state.facet(b_) || r.main.eq(i)) && (r = null);
  if (!t && !r)
    return !1;
  if (!t && e.typeOver && !i.empty && r && r.main.empty ? t = { from: i.from, to: i.to, insert: n.state.doc.slice(i.from, i.to) } : t && t.from >= i.from && t.to <= i.to && (t.from != i.from || t.to != i.to) && i.to - i.from - (t.to - t.from) <= 4 ? t = {
    from: i.from,
    to: i.to,
    insert: n.state.doc.slice(i.from, t.from).append(t.insert).append(n.state.doc.slice(t.to, i.to))
  } : (ze.mac || ze.android) && t && t.from == t.to && t.from == i.head - 1 && /^\. ?$/.test(t.insert.toString()) && n.contentDOM.getAttribute("autocorrect") == "off" ? (r && t.insert.length == 2 && (r = ce.single(r.main.anchor - 1, r.main.head - 1)), t = { from: i.from, to: i.to, insert: Ut.of([" "]) }) : ze.chrome && t && t.from == t.to && t.from == i.head && t.insert.toString() == `
 ` && n.lineWrapping && (r && (r = ce.single(r.main.anchor - 1, r.main.head - 1)), t = { from: i.from, to: i.to, insert: Ut.of([" "]) }), t) {
    if (ze.ios && n.inputState.flushIOSKey() || ze.android && (t.from == i.from && t.to == i.to && t.insert.length == 1 && t.insert.lines == 2 && Pp(n.contentDOM, "Enter", 13) || (t.from == i.from - 1 && t.to == i.to && t.insert.length == 0 || o == 8 && t.insert.length < t.to - t.from && t.to > i.head) && Pp(n.contentDOM, "Backspace", 8) || t.from == i.from && t.to == i.to + 1 && t.insert.length == 0 && Pp(n.contentDOM, "Delete", 46)))
      return !0;
    let s = t.insert.toString();
    n.inputState.composing >= 0 && n.inputState.composing++;
    let a, l = () => a || (a = eke(n, t, r));
    return n.state.facet(b9).some((u) => u(n, t.from, t.to, s, l)) || n.dispatch(l()), !0;
  } else if (r && !r.main.eq(i)) {
    let s = !1, a = "select";
    return n.inputState.lastSelectionTime > Date.now() - 50 && (n.inputState.lastSelectionOrigin == "select" && (s = !0), a = n.inputState.lastSelectionOrigin), n.dispatch({ selection: r, scrollIntoView: s, userEvent: a }), !0;
  } else
    return !1;
}
function eke(n, e, t) {
  let r, i = n.state, o = i.selection.main;
  if (e.from >= o.from && e.to <= o.to && e.to - e.from >= (o.to - o.from) / 3 && (!t || t.main.empty && t.main.from == e.from + e.insert.length) && n.inputState.composing < 0) {
    let a = o.from < e.from ? i.sliceDoc(o.from, e.from) : "", l = o.to > e.to ? i.sliceDoc(e.to, o.to) : "";
    r = i.replaceSelection(n.state.toText(a + e.insert.sliceString(0, void 0, n.state.lineBreak) + l));
  } else {
    let a = i.changes(e), l = t && t.main.to <= a.newLength ? t.main : void 0;
    if (i.selection.ranges.length > 1 && n.inputState.composing >= 0 && e.to <= o.to && e.to >= o.to - 10) {
      let u = n.state.sliceDoc(e.from, e.to), c, h = t && P9(n, t.main.head);
      if (h) {
        let p = e.insert.length - (e.to - e.from);
        c = { from: h.from, to: h.to - p };
      } else
        c = n.state.doc.lineAt(o.head);
      let f = o.to - e.to, d = o.to - o.from;
      r = i.changeByRange((p) => {
        if (p.from == o.from && p.to == o.to)
          return { changes: a, range: l || p.map(a) };
        let g = p.to - f, v = g - u.length;
        if (p.to - p.from != d || n.state.sliceDoc(v, g) != u || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        p.to >= c.from && p.from <= c.to)
          return { range: p };
        let m = i.changes({ from: v, to: g, insert: e.insert }), y = p.to - o.to;
        return {
          changes: m,
          range: l ? ce.range(Math.max(0, l.anchor + y), Math.max(0, l.head + y)) : p.map(m)
        };
      });
    } else
      r = {
        changes: a,
        selection: l && i.selection.replaceRange(l)
      };
  }
  let s = "input.type";
  return (n.composing || n.inputState.compositionPendingChange && n.inputState.compositionEndedAt > Date.now() - 50) && (n.inputState.compositionPendingChange = !1, s += ".compose", n.inputState.compositionFirstChange && (s += ".start", n.inputState.compositionFirstChange = !1)), i.update(r, { userEvent: s, scrollIntoView: !0 });
}
function tke(n, e, t, r) {
  let i = Math.min(n.length, e.length), o = 0;
  for (; o < i && n.charCodeAt(o) == e.charCodeAt(o); )
    o++;
  if (o == i && n.length == e.length)
    return null;
  let s = n.length, a = e.length;
  for (; s > 0 && a > 0 && n.charCodeAt(s - 1) == e.charCodeAt(a - 1); )
    s--, a--;
  if (r == "end") {
    let l = Math.max(0, o - Math.min(s, a));
    t -= s + l - o;
  }
  if (s < o && n.length < e.length) {
    let l = t <= o && t >= s ? o - t : 0;
    o -= l, a = o + (a - s), s = o;
  } else if (a < o) {
    let l = t <= o && t >= a ? o - t : 0;
    o -= l, s = o + (s - a), a = o;
  }
  return { from: o, toA: s, toB: a };
}
function nke(n) {
  let e = [];
  if (n.root.activeElement != n.contentDOM)
    return e;
  let { anchorNode: t, anchorOffset: r, focusNode: i, focusOffset: o } = n.observer.selectionRange;
  return t && (e.push(new pB(t, r)), (i != t || o != r) && e.push(new pB(i, o))), e;
}
function rke(n, e) {
  if (n.length == 0)
    return null;
  let t = n[0].pos, r = n.length == 2 ? n[1].pos : t;
  return t > -1 && r > -1 ? ce.single(t + e, r + e) : null;
}
const ike = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, f2 = ze.ie && ze.ie_version <= 11;
class oke {
  constructor(e) {
    this.view = e, this.active = !1, this.selectionRange = new QPe(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((t) => {
      for (let r of t)
        this.queue.push(r);
      (ze.ie && ze.ie_version <= 11 || ze.ios && e.composing) && t.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), f2 && (this.onCharData = (t) => {
      this.queue.push({
        target: t.target,
        type: "characterData",
        oldValue: t.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var t;
      ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((t) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((t) => {
      t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint() {
    this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500);
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, r) => t != e[r]))) {
      this.gapIntersection.disconnect();
      for (let t of e)
        this.gapIntersection.observe(t);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let t = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: r } = this, i = this.selectionRange;
    if (r.state.facet(b_) ? r.root.activeElement != this.dom : !ew(r.dom, i))
      return;
    let o = i.anchorNode && r.docView.nearest(i.anchorNode);
    if (o && o.ignoreEvent(e)) {
      t || (this.selectionChanged = !1);
      return;
    }
    (ze.ie && ze.ie_version <= 11 || ze.android && ze.chrome) && !r.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    i.focusNode && oy(i.focusNode, i.focusOffset, i.anchorNode, i.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, t = ze.safari && e.root.nodeType == 11 && BPe(this.dom.ownerDocument) == this.dom && ske(this.view) || hx(e.root);
    if (!t || this.selectionRange.eq(t))
      return !1;
    let r = ew(this.dom, t);
    return r && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && WPe(this.dom, t) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(t), r && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, t) {
    this.selectionRange.set(e.node, e.offset, t.node, t.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, t = null;
    for (let r = this.dom; r; )
      if (r.nodeType == 1)
        !t && e < this.scrollTargets.length && this.scrollTargets[e] == r ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(r), r = r.assignedSlot || r.parentNode;
      else if (r.nodeType == 11)
        r = r.host;
      else
        break;
    if (e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t) {
      for (let r of this.scrollTargets)
        r.removeEventListener("scroll", this.onScroll);
      for (let r of this.scrollTargets = t)
        r.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, ike), f2 && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), f2 && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, t) {
    var r;
    if (!this.delayedAndroidKey) {
      let i = () => {
        let o = this.delayedAndroidKey;
        o && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = o.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && o.force && Pp(this.dom, o.key, o.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(i);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: t,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((r = this.delayedAndroidKey) === null || r === void 0) && r.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let t = -1, r = -1, i = !1;
    for (let o of e) {
      let s = this.readMutation(o);
      s && (s.typeOver && (i = !0), t == -1 ? { from: t, to: r } = s : (t = Math.min(s.from, t), r = Math.max(s.to, r)));
    }
    return { from: t, to: r, typeOver: i };
  }
  readChange() {
    let { from: e, to: t, typeOver: r } = this.processRecords(), i = this.selectionChanged && ew(this.dom, this.selectionRange);
    if (e < 0 && !i)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let o = new JEe(this.view, e, t, r);
    return this.view.docView.domChanged = { newSel: o.newSel ? o.newSel.main : null }, o;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let t = this.readChange();
    if (!t)
      return this.view.requestMeasure(), !1;
    let r = this.view.state, i = W9(this.view, t);
    return this.view.state == r && this.view.update([]), i;
  }
  readMutation(e) {
    let t = this.view.docView.nearest(e.target);
    if (!t || t.ignoreMutation(e))
      return null;
    if (t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList") {
      let r = gB(t, e.previousSibling || e.target.previousSibling, -1), i = gB(t, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: r ? t.posAfter(r) : t.posAtStart,
        to: i ? t.posBefore(i) : t.posAtEnd,
        typeOver: !1
      };
    } else
      return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  destroy() {
    var e, t, r;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (r = this.resizeScroll) === null || r === void 0 || r.disconnect();
    for (let i of this.scrollTargets)
      i.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey);
  }
}
function gB(n, e, t) {
  for (; e; ) {
    let r = kn.get(e);
    if (r && r.parent == n)
      return r;
    let i = e.parentNode;
    e = i != n.dom ? i : t > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function ske(n) {
  let e = null;
  function t(l) {
    l.preventDefault(), l.stopImmediatePropagation(), e = l.getTargetRanges()[0];
  }
  if (n.contentDOM.addEventListener("beforeinput", t, !0), n.dom.ownerDocument.execCommand("indent"), n.contentDOM.removeEventListener("beforeinput", t, !0), !e)
    return null;
  let r = e.startContainer, i = e.startOffset, o = e.endContainer, s = e.endOffset, a = n.docView.domAtPos(n.state.selection.main.anchor);
  return oy(a.node, a.offset, o, s) && ([r, i, o, s] = [o, s, r, i]), { anchorNode: r, anchorOffset: i, focusNode: o, focusOffset: s };
}
class Ne {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: t } = e;
    this.dispatchTransactions = e.dispatchTransactions || t && ((r) => r.forEach((i) => t(i, this))) || ((r) => this.update(r)), this.dispatch = this.dispatch.bind(this), this._root = e.root || ZPe(e.parent) || document, this.viewState = new hB(e.state || Yt.create(e)), e.scrollTo && e.scrollTo.is(u1) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(Om).map((r) => new l2(r));
    for (let r of this.plugins)
      r.update(this);
    this.observer = new oke(this), this.inputState = new wEe(this), this.inputState.ensureHandlers(this.plugins), this.docView = new H5(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure();
  }
  dispatch(...e) {
    let t = e.length == 1 && e[0] instanceof fr ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(t, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let t = !1, r = !1, i, o = this.state;
    for (let f of e) {
      if (f.startState != o)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      o = f.state;
    }
    if (this.destroyed) {
      this.viewState.state = o;
      return;
    }
    let s = this.hasFocus, a = 0, l = null;
    e.some((f) => f.annotation(N9)) ? (this.inputState.notifiedFocused = s, a = 1) : s != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = s, l = B9(o, s), l || (a = 1));
    let u = this.observer.delayedAndroidKey, c = null;
    if (u ? (this.observer.clearDelayedAndroidKey(), c = this.observer.readChange(), (c && !this.state.doc.eq(o.doc) || !this.state.selection.eq(o.selection)) && (c = null)) : this.observer.clear(), o.facet(Yt.phrases) != this.state.facet(Yt.phrases))
      return this.setState(o);
    i = fx.create(this, o, e), i.flags |= a;
    let h = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let f of e) {
        if (h && (h = h.map(f.changes)), f.scrollIntoView) {
          let { main: d } = f.state.selection;
          h = new Ep(d.empty ? d : ce.cursor(d.head, d.head > d.anchor ? -1 : 1));
        }
        for (let d of f.effects)
          d.is(u1) && (h = d.value.clip(this.state));
      }
      this.viewState.update(i, h), this.bidiCache = dx.update(this.bidiCache, i.changes), i.empty || (this.updatePlugins(i), this.inputState.update(i)), t = this.docView.update(i), this.state.facet(wm) != this.styleModules && this.mountStyles(), r = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(t, e.some((f) => f.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (i.startState.facet(g1) != i.state.facet(g1) && (this.viewState.mustMeasureContent = !0), (t || r || h || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), !i.empty)
      for (let f of this.state.facet(FE))
        try {
          f(i);
        } catch (d) {
          vs(this.state, d, "update listener");
        }
    (l || c) && Promise.resolve().then(() => {
      l && this.state == l.startState && this.dispatch(l), c && !W9(this, c) && u.force && Pp(this.contentDOM, u.key, u.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let t = this.hasFocus;
    try {
      for (let r of this.plugins)
        r.destroy(this);
      this.viewState = new hB(e), this.plugins = e.facet(Om).map((r) => new l2(r)), this.pluginMap.clear();
      for (let r of this.plugins)
        r.update(this);
      this.docView.destroy(), this.docView = new H5(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    t && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let t = e.startState.facet(Om), r = e.state.facet(Om);
    if (t != r) {
      let i = [];
      for (let o of r) {
        let s = t.indexOf(o);
        if (s < 0)
          i.push(new l2(o));
        else {
          let a = this.plugins[s];
          a.mustUpdate = e, i.push(a);
        }
      }
      for (let o of this.plugins)
        o.mustUpdate != e && o.destroy(this);
      this.plugins = i, this.pluginMap.clear();
    } else
      for (let i of this.plugins)
        i.mustUpdate = e;
    for (let i = 0; i < this.plugins.length; i++)
      this.plugins[i].update(this);
    t != r && this.inputState.ensureHandlers(this.plugins);
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let t = null, r = this.scrollDOM, i = r.scrollTop * this.scaleY, { scrollAnchorPos: o, scrollAnchorHeight: s } = this.viewState;
    Math.abs(i - this.viewState.scrollTop) > 1 && (s = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let a = 0; ; a++) {
        if (s < 0)
          if (e9(r))
            o = -1, s = this.viewState.heightMap.height;
          else {
            let d = this.viewState.scrollAnchorAt(i);
            o = d.from, s = d.top;
          }
        this.updateState = 1;
        let l = this.viewState.measure(this);
        if (!l && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (a > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let u = [];
        l & 4 || ([this.measureRequests, u] = [u, this.measureRequests]);
        let c = u.map((d) => {
          try {
            return d.read(this);
          } catch (p) {
            return vs(this.state, p), vB;
          }
        }), h = fx.create(this, this.state, []), f = !1;
        h.flags |= l, t ? t.flags |= l : t = h, this.updateState = 2, h.empty || (this.updatePlugins(h), this.inputState.update(h), this.updateAttrs(), f = this.docView.update(h));
        for (let d = 0; d < u.length; d++)
          if (c[d] != vB)
            try {
              let p = u[d];
              p.write && p.write(c[d], this);
            } catch (p) {
              vs(this.state, p);
            }
        if (f && this.docView.updateSelection(!0), !h.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, s = -1;
              continue;
            } else {
              let p = (o < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(o).top) - s;
              if (p > 1 || p < -1) {
                i = i + p, r.scrollTop = i / this.scaleY, s = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (t && !t.empty)
      for (let a of this.state.facet(FE))
        a(t);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return jE + " " + (this.state.facet(GE) ? Q9 : F9) + " " + this.state.facet(g1);
  }
  updateAttrs() {
    let e = mB(this, S9, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), t = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      translate: "no",
      contenteditable: this.state.facet(b_) ? "true" : "false",
      class: "cm-content",
      style: `${ze.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (t["aria-readonly"] = "true"), mB(this, QL, t);
    let r = this.observer.ignore(() => {
      let i = $E(this.contentDOM, this.contentAttrs, t), o = $E(this.dom, this.editorAttrs, e);
      return i || o;
    });
    return this.editorAttrs = e, this.contentAttrs = t, r;
  }
  showAnnouncements(e) {
    let t = !0;
    for (let r of e)
      for (let i of r.effects)
        if (i.is(Ne.announce)) {
          t && (this.announceDOM.textContent = ""), t = !1;
          let o = this.announceDOM.appendChild(document.createElement("div"));
          o.textContent = i.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(wm);
    let e = this.state.facet(Ne.cspNonce);
    kc.mount(this.root, this.styleModules.concat(XEe).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let t = 0; t < this.measureRequests.length; t++)
          if (this.measureRequests[t].key === e.key) {
            this.measureRequests[t] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let t = this.pluginMap.get(e);
    return (t === void 0 || t && t.spec != e) && this.pluginMap.set(e, t = this.plugins.find((r) => r.spec == e) || null), t && t.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, t, r) {
    return c2(this, e, J5(this, e, t, r));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, t) {
    return c2(this, e, J5(this, e, t, (r) => bEe(this, e.head, r)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, t) {
    let r = this.bidiSpans(e), i = this.textDirectionAt(e.from), o = r[t ? r.length - 1 : 0];
    return ce.cursor(o.side(t, i) + e.from, o.forward(!t, i) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, t, r = !0) {
    return yEe(this, e, t, r);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, t, r) {
    return c2(this, e, OEe(this, e, t, r));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, t = 0) {
    return this.docView.posFromDOM(e, t);
  }
  posAtCoords(e, t = !0) {
    return this.readMeasured(), k9(this, e, t);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, t = 1) {
    this.readMeasured();
    let r = this.docView.coordsAt(e, t);
    if (!r || r.left == r.right)
      return r;
    let i = this.state.doc.lineAt(e), o = this.bidiSpans(i), s = o[rc.find(o, e - i.from, -1, t)];
    return BL(r, s.dir == Mn.LTR == t > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(w9) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > ake)
      return d9(e.length);
    let t = this.textDirectionAt(e.from), r;
    for (let o of this.bidiCache)
      if (o.from == e.from && o.dir == t && (o.fresh || f9(o.isolates, r = j5(this, e))))
        return o.order;
    r || (r = j5(this, e));
    let i = nEe(e.text, t, r);
    return this.bidiCache.push(new dx(e.from, e.to, t, r, !0, i)), i;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || ze.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      Kq(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, t = {}) {
    return u1.of(new Ep(typeof e == "number" ? ce.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: t } = this.scrollDOM, r = this.viewState.scrollAnchorAt(e);
    return u1.of(new Ep(ce.cursor(r.from), "start", "start", r.top - e, t, !0));
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return vr.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return vr.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, t) {
    let r = kc.newName(), i = [g1.of(r), wm.of(HE(`.${r}`, e))];
    return t && t.dark && i.push(GE.of(!0)), i;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return pd.lowest(wm.of(HE("." + jE, e, Z9)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var t;
    let r = e.querySelector(".cm-content"), i = r && kn.get(r) || kn.get(e);
    return ((t = i == null ? void 0 : i.rootView) === null || t === void 0 ? void 0 : t.view) || null;
  }
}
Ne.styleModule = wm;
Ne.inputHandler = b9;
Ne.focusChangeEffect = O9;
Ne.perLineTextDirection = w9;
Ne.exceptionSink = y9;
Ne.updateListener = FE;
Ne.editable = b_;
Ne.mouseSelectionStyle = m9;
Ne.dragMovesSelection = v9;
Ne.clickAddsSelectionRange = g9;
Ne.decorations = n0;
Ne.outerDecorations = _9;
Ne.atomicRanges = ZL;
Ne.bidiIsolatedRanges = C9;
Ne.scrollMargins = A9;
Ne.darkTheme = GE;
Ne.cspNonce = /* @__PURE__ */ Be.define({ combine: (n) => n.length ? n[0] : "" });
Ne.contentAttributes = QL;
Ne.editorAttributes = S9;
Ne.lineWrapping = /* @__PURE__ */ Ne.contentAttributes.of({ class: "cm-lineWrapping" });
Ne.announce = /* @__PURE__ */ wt.define();
const ake = 4096, vB = {};
class dx {
  constructor(e, t, r, i, o, s) {
    this.from = e, this.to = t, this.dir = r, this.isolates = i, this.fresh = o, this.order = s;
  }
  static update(e, t) {
    if (t.empty && !e.some((o) => o.fresh))
      return e;
    let r = [], i = e.length ? e[e.length - 1].dir : Mn.LTR;
    for (let o = Math.max(0, e.length - 10); o < e.length; o++) {
      let s = e[o];
      s.dir == i && !t.touchesRange(s.from, s.to) && r.push(new dx(t.mapPos(s.from, 1), t.mapPos(s.to, -1), s.dir, s.isolates, !1, s.order));
    }
    return r;
  }
}
function mB(n, e, t) {
  for (let r = n.state.facet(e), i = r.length - 1; i >= 0; i--) {
    let o = r[i], s = typeof o == "function" ? o(n) : o;
    s && RE(s, t);
  }
  return t;
}
const lke = ze.mac ? "mac" : ze.windows ? "win" : ze.linux ? "linux" : "key";
function uke(n, e) {
  const t = n.split(/-(?!$)/);
  let r = t[t.length - 1];
  r == "Space" && (r = " ");
  let i, o, s, a;
  for (let l = 0; l < t.length - 1; ++l) {
    const u = t[l];
    if (/^(cmd|meta|m)$/i.test(u))
      a = !0;
    else if (/^a(lt)?$/i.test(u))
      i = !0;
    else if (/^(c|ctrl|control)$/i.test(u))
      o = !0;
    else if (/^s(hift)?$/i.test(u))
      s = !0;
    else if (/^mod$/i.test(u))
      e == "mac" ? a = !0 : o = !0;
    else
      throw new Error("Unrecognized modifier name: " + u);
  }
  return i && (r = "Alt-" + r), o && (r = "Ctrl-" + r), a && (r = "Meta-" + r), s && (r = "Shift-" + r), r;
}
function v1(n, e, t) {
  return e.altKey && (n = "Alt-" + n), e.ctrlKey && (n = "Ctrl-" + n), e.metaKey && (n = "Meta-" + n), t !== !1 && e.shiftKey && (n = "Shift-" + n), n;
}
const cke = /* @__PURE__ */ pd.default(/* @__PURE__ */ Ne.domEventHandlers({
  keydown(n, e) {
    return j9(G9(e.state), n, e, "editor");
  }
})), O_ = /* @__PURE__ */ Be.define({ enables: cke }), yB = /* @__PURE__ */ new WeakMap();
function G9(n) {
  let e = n.facet(O_), t = yB.get(e);
  return t || yB.set(e, t = dke(e.reduce((r, i) => r.concat(i), []))), t;
}
function hke(n, e, t) {
  return j9(G9(n.state), e, n, t);
}
let Yu = null;
const fke = 4e3;
function dke(n, e = lke) {
  let t = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null), i = (s, a) => {
    let l = r[s];
    if (l == null)
      r[s] = a;
    else if (l != a)
      throw new Error("Key binding " + s + " is used both as a regular binding and as a multi-stroke prefix");
  }, o = (s, a, l, u, c) => {
    var h, f;
    let d = t[s] || (t[s] = /* @__PURE__ */ Object.create(null)), p = a.split(/ (?!$)/).map((m) => uke(m, e));
    for (let m = 1; m < p.length; m++) {
      let y = p.slice(0, m).join(" ");
      i(y, !0), d[y] || (d[y] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(b) => {
          let O = Yu = { view: b, prefix: y, scope: s };
          return setTimeout(() => {
            Yu == O && (Yu = null);
          }, fke), !0;
        }]
      });
    }
    let g = p.join(" ");
    i(g, !1);
    let v = d[g] || (d[g] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((f = (h = d._any) === null || h === void 0 ? void 0 : h.run) === null || f === void 0 ? void 0 : f.slice()) || []
    });
    l && v.run.push(l), u && (v.preventDefault = !0), c && (v.stopPropagation = !0);
  };
  for (let s of n) {
    let a = s.scope ? s.scope.split(" ") : ["editor"];
    if (s.any)
      for (let u of a) {
        let c = t[u] || (t[u] = /* @__PURE__ */ Object.create(null));
        c._any || (c._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        for (let h in c)
          c[h].run.push(s.any);
      }
    let l = s[e] || s.key;
    if (l)
      for (let u of a)
        o(u, l, s.run, s.preventDefault, s.stopPropagation), s.shift && o(u, "Shift-" + l, s.shift, s.preventDefault, s.stopPropagation);
  }
  return t;
}
function j9(n, e, t, r) {
  let i = NPe(e), o = Xr(i, 0), s = ls(o) == i.length && i != " ", a = "", l = !1, u = !1, c = !1;
  Yu && Yu.view == t && Yu.scope == r && (a = Yu.prefix + " ", D9.indexOf(e.keyCode) < 0 && (u = !0, Yu = null));
  let h = /* @__PURE__ */ new Set(), f = (v) => {
    if (v) {
      for (let m of v.run)
        if (!h.has(m) && (h.add(m), m(t, e)))
          return v.stopPropagation && (c = !0), !0;
      v.preventDefault && (v.stopPropagation && (c = !0), u = !0);
    }
    return !1;
  }, d = n[r], p, g;
  return d && (f(d[a + v1(i, e, !s)]) ? l = !0 : s && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(ze.windows && e.ctrlKey && e.altKey) && (p = Mc[e.keyCode]) && p != i ? (f(d[a + v1(p, e, !0)]) || e.shiftKey && (g = Jy[e.keyCode]) != i && g != p && f(d[a + v1(g, e, !1)])) && (l = !0) : s && e.shiftKey && f(d[a + v1(i, e, !0)]) && (l = !0), !l && f(d._any) && (l = !0)), u && (l = !0), l && c && e.stopPropagation(), l;
}
class db {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, t, r, i, o) {
    this.className = e, this.left = t, this.top = r, this.width = i, this.height = o;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, t) {
    return t.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, t, r) {
    if (r.empty) {
      let i = e.coordsAtPos(r.head, r.assoc || 1);
      if (!i)
        return [];
      let o = H9(e);
      return [new db(t, i.left - o.left, i.top - o.top, null, i.bottom - i.top)];
    } else
      return pke(e, t, r);
  }
}
function H9(n) {
  let e = n.scrollDOM.getBoundingClientRect();
  return { left: (n.textDirection == Mn.LTR ? e.left : e.right - n.scrollDOM.clientWidth * n.scaleX) - n.scrollDOM.scrollLeft * n.scaleX, top: e.top - n.scrollDOM.scrollTop * n.scaleY };
}
function bB(n, e, t) {
  let r = ce.cursor(e);
  return {
    from: Math.max(t.from, n.moveToLineBoundary(r, !1, !0).from),
    to: Math.min(t.to, n.moveToLineBoundary(r, !0, !0).from),
    type: $i.Text
  };
}
function pke(n, e, t) {
  if (t.to <= n.viewport.from || t.from >= n.viewport.to)
    return [];
  let r = Math.max(t.from, n.viewport.from), i = Math.min(t.to, n.viewport.to), o = n.textDirection == Mn.LTR, s = n.contentDOM, a = s.getBoundingClientRect(), l = H9(n), u = s.querySelector(".cm-line"), c = u && window.getComputedStyle(u), h = a.left + (c ? parseInt(c.paddingLeft) + Math.min(0, parseInt(c.textIndent)) : 0), f = a.right - (c ? parseInt(c.paddingRight) : 0), d = ZE(n, r), p = ZE(n, i), g = d.type == $i.Text ? d : null, v = p.type == $i.Text ? p : null;
  if (g && (n.lineWrapping || d.widgetLineBreaks) && (g = bB(n, r, g)), v && (n.lineWrapping || p.widgetLineBreaks) && (v = bB(n, i, v)), g && v && g.from == v.from)
    return y(b(t.from, t.to, g));
  {
    let w = g ? b(t.from, null, g) : O(d, !1), x = v ? b(null, t.to, v) : O(p, !0), S = [];
    return (g || d).to < (v || p).from - (g && v ? 1 : 0) || d.widgetLineBreaks > 1 && w.bottom + n.defaultLineHeight / 2 < x.top ? S.push(m(h, w.bottom, f, x.top)) : w.bottom < x.top && n.elementAtHeight((w.bottom + x.top) / 2).type == $i.Text && (w.bottom = x.top = (w.bottom + x.top) / 2), y(w).concat(S).concat(y(x));
  }
  function m(w, x, S, _) {
    return new db(
      e,
      w - l.left,
      x - l.top - 0.01,
      S - w,
      _ - x + 0.01
      /* C.Epsilon */
    );
  }
  function y({ top: w, bottom: x, horizontal: S }) {
    let _ = [];
    for (let C = 0; C < S.length; C += 2)
      _.push(m(S[C], w, S[C + 1], x));
    return _;
  }
  function b(w, x, S) {
    let _ = 1e9, C = -1e9, A = [];
    function T(D, E, M, R, N) {
      let $ = n.coordsAtPos(D, D == S.to ? -2 : 2), V = n.coordsAtPos(M, M == S.from ? 2 : -2);
      !$ || !V || (_ = Math.min($.top, V.top, _), C = Math.max($.bottom, V.bottom, C), N == Mn.LTR ? A.push(o && E ? h : $.left, o && R ? f : V.right) : A.push(!o && R ? h : V.left, !o && E ? f : $.right));
    }
    let k = w ?? S.from, L = x ?? S.to;
    for (let D of n.visibleRanges)
      if (D.to > k && D.from < L)
        for (let E = Math.max(D.from, k), M = Math.min(D.to, L); ; ) {
          let R = n.state.doc.lineAt(E);
          for (let N of n.bidiSpans(R)) {
            let $ = N.from + R.from, V = N.to + R.from;
            if ($ >= M)
              break;
            V > E && T(Math.max($, E), w == null && $ <= k, Math.min(V, M), x == null && V >= L, N.dir);
          }
          if (E = R.to + 1, E >= M)
            break;
        }
    return A.length == 0 && T(k, w == null, L, x == null, n.textDirection), { top: _, bottom: C, horizontal: A };
  }
  function O(w, x) {
    let S = a.top + (x ? w.top : w.bottom);
    return { top: S, bottom: S, horizontal: [] };
  }
}
function gke(n, e) {
  return n.constructor == e.constructor && n.eq(e);
}
class vke {
  constructor(e, t) {
    this.view = e, this.layer = t, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), t.above && this.dom.classList.add("cm-layer-above"), t.class && this.dom.classList.add(t.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), t.mount && t.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(iw) != e.state.facet(iw) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  setOrder(e) {
    let t = 0, r = e.facet(iw);
    for (; t < r.length && r[t] != this.layer; )
      t++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: t } = this.view;
    (e != this.scaleX || t != this.scaleY) && (this.scaleX = e, this.scaleY = t, this.dom.style.transform = `scale(${1 / e}, ${1 / t})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((t, r) => !gke(t, this.drawn[r]))) {
      let t = this.dom.firstChild, r = 0;
      for (let i of e)
        i.update && t && i.constructor && this.drawn[r].constructor && i.update(t, this.drawn[r]) ? (t = t.nextSibling, r++) : this.dom.insertBefore(i.draw(), t);
      for (; t; ) {
        let i = t.nextSibling;
        t.remove(), t = i;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const iw = /* @__PURE__ */ Be.define();
function q9(n) {
  return [
    vr.define((e) => new vke(e, n)),
    iw.of(n)
  ];
}
const Y9 = !ze.ios, r0 = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, t) => Math.min(e, t),
      drawRangeCursor: (e, t) => e || t
    });
  }
});
function mke(n = {}) {
  return [
    r0.of(n),
    yke,
    bke,
    Oke,
    x9.of(!0)
  ];
}
function X9(n) {
  return n.startState.facet(r0) != n.state.facet(r0);
}
const yke = /* @__PURE__ */ q9({
  above: !0,
  markers(n) {
    let { state: e } = n, t = e.facet(r0), r = [];
    for (let i of e.selection.ranges) {
      let o = i == e.selection.main;
      if (i.empty ? !o || Y9 : t.drawRangeCursor) {
        let s = o ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", a = i.empty ? i : ce.cursor(i.head, i.head > i.anchor ? -1 : 1);
        for (let l of db.forRange(n, s, a))
          r.push(l);
      }
    }
    return r;
  },
  update(n, e) {
    n.transactions.some((r) => r.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let t = X9(n);
    return t && OB(n.state, e), n.docChanged || n.selectionSet || t;
  },
  mount(n, e) {
    OB(e.state, n);
  },
  class: "cm-cursorLayer"
});
function OB(n, e) {
  e.style.animationDuration = n.facet(r0).cursorBlinkRate + "ms";
}
const bke = /* @__PURE__ */ q9({
  above: !1,
  markers(n) {
    return n.state.selection.ranges.map((e) => e.empty ? [] : db.forRange(n, "cm-selectionBackground", e)).reduce((e, t) => e.concat(t));
  },
  update(n, e) {
    return n.docChanged || n.selectionSet || n.viewportChanged || X9(n);
  },
  class: "cm-selectionLayer"
}), qE = {
  ".cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" }
  }
};
Y9 && (qE[".cm-line"].caretColor = "transparent !important", qE[".cm-content"] = { caretColor: "transparent !important" });
const Oke = /* @__PURE__ */ pd.highest(/* @__PURE__ */ Ne.theme(qE)), U9 = /* @__PURE__ */ wt.define({
  map(n, e) {
    return n == null ? null : e.mapPos(n);
  }
}), _m = /* @__PURE__ */ Wr.define({
  create() {
    return null;
  },
  update(n, e) {
    return n != null && (n = e.changes.mapPos(n)), e.effects.reduce((t, r) => r.is(U9) ? r.value : t, n);
  }
}), wke = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.view = n, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(n) {
    var e;
    let t = n.state.field(_m);
    t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (n.startState.field(_m) != t || n.docChanged || n.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: n } = this, e = n.state.field(_m), t = e != null && n.coordsAtPos(e);
    if (!t)
      return null;
    let r = n.scrollDOM.getBoundingClientRect();
    return {
      left: t.left - r.left + n.scrollDOM.scrollLeft * n.scaleX,
      top: t.top - r.top + n.scrollDOM.scrollTop * n.scaleY,
      height: t.bottom - t.top
    };
  }
  drawCursor(n) {
    if (this.cursor) {
      let { scaleX: e, scaleY: t } = this.view;
      n ? (this.cursor.style.left = n.left / e + "px", this.cursor.style.top = n.top / t + "px", this.cursor.style.height = n.height / t + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(n) {
    this.view.state.field(_m) != n && this.view.dispatch({ effects: U9.of(n) });
  }
}, {
  eventObservers: {
    dragover(n) {
      this.setDropPos(this.view.posAtCoords({ x: n.clientX, y: n.clientY }));
    },
    dragleave(n) {
      (n.target == this.view.contentDOM || !this.view.contentDOM.contains(n.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function xke() {
  return [_m, wke];
}
function wB(n, e, t, r, i) {
  e.lastIndex = 0;
  for (let o = n.iterRange(t, r), s = t, a; !o.next().done; s += o.value.length)
    if (!o.lineBreak)
      for (; a = e.exec(o.value); )
        i(s + a.index, a);
}
function Ske(n, e) {
  let t = n.visibleRanges;
  if (t.length == 1 && t[0].from == n.viewport.from && t[0].to == n.viewport.to)
    return t;
  let r = [];
  for (let { from: i, to: o } of t)
    i = Math.max(n.state.doc.lineAt(i).from, i - e), o = Math.min(n.state.doc.lineAt(o).to, o + e), r.length && r[r.length - 1].to >= i ? r[r.length - 1].to = o : r.push({ from: i, to: o });
  return r;
}
class _ke {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: t, decoration: r, decorate: i, boundary: o, maxLength: s = 1e3 } = e;
    if (!t.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = t, i)
      this.addMatch = (a, l, u, c) => i(c, u, u + a[0].length, a, l);
    else if (typeof r == "function")
      this.addMatch = (a, l, u, c) => {
        let h = r(a, l, u);
        h && c(u, u + a[0].length, h);
      };
    else if (r)
      this.addMatch = (a, l, u, c) => c(u, u + a[0].length, r);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = o, this.maxLength = s;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let t = new Ec(), r = t.add.bind(t);
    for (let { from: i, to: o } of Ske(e, this.maxLength))
      wB(e.state.doc, this.regexp, i, o, (s, a) => this.addMatch(a, e, s, r));
    return t.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, t) {
    let r = 1e9, i = -1;
    return e.docChanged && e.changes.iterChanges((o, s, a, l) => {
      l > e.view.viewport.from && a < e.view.viewport.to && (r = Math.min(a, r), i = Math.max(l, i));
    }), e.viewportChanged || i - r > 1e3 ? this.createDeco(e.view) : i > -1 ? this.updateRange(e.view, t.map(e.changes), r, i) : t;
  }
  updateRange(e, t, r, i) {
    for (let o of e.visibleRanges) {
      let s = Math.max(o.from, r), a = Math.min(o.to, i);
      if (a > s) {
        let l = e.state.doc.lineAt(s), u = l.to < a ? e.state.doc.lineAt(a) : l, c = Math.max(o.from, l.from), h = Math.min(o.to, u.to);
        if (this.boundary) {
          for (; s > l.from; s--)
            if (this.boundary.test(l.text[s - 1 - l.from])) {
              c = s;
              break;
            }
          for (; a < u.to; a++)
            if (this.boundary.test(u.text[a - u.from])) {
              h = a;
              break;
            }
        }
        let f = [], d, p = (g, v, m) => f.push(m.range(g, v));
        if (l == u)
          for (this.regexp.lastIndex = c - l.from; (d = this.regexp.exec(l.text)) && d.index < h - l.from; )
            this.addMatch(d, e, d.index + l.from, p);
        else
          wB(e.state.doc, this.regexp, c, h, (g, v) => this.addMatch(v, e, g, p));
        t = t.update({ filterFrom: c, filterTo: h, filter: (g, v) => g < c || v > h, add: f });
      }
    }
    return t;
  }
}
const YE = /x/.unicode != null ? "gu" : "g", Cke = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, YE), Ake = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let d2 = null;
function Tke() {
  var n;
  if (d2 == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    d2 = ((n = e.tabSize) !== null && n !== void 0 ? n : e.MozTabSize) != null;
  }
  return d2 || !1;
}
const ow = /* @__PURE__ */ Be.define({
  combine(n) {
    let e = Ol(n, {
      render: null,
      specialChars: Cke,
      addSpecialChars: null
    });
    return (e.replaceTabs = !Tke()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, YE)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, YE)), e;
  }
});
function Pke(n = {}) {
  return [ow.of(n), Eke()];
}
let xB = null;
function Eke() {
  return xB || (xB = vr.fromClass(class {
    constructor(n) {
      this.view = n, this.decorations = tt.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(n.state.facet(ow)), this.decorations = this.decorator.createDeco(n);
    }
    makeDecorator(n) {
      return new _ke({
        regexp: n.specialChars,
        decoration: (e, t, r) => {
          let { doc: i } = t.state, o = Xr(e[0], 0);
          if (o == 9) {
            let s = i.lineAt(r), a = t.state.tabSize, l = nv(s.text, a, r - s.from);
            return tt.replace({
              widget: new Lke((a - l % a) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[o] || (this.decorationCache[o] = tt.replace({ widget: new Dke(n, o) }));
        },
        boundary: n.replaceTabs ? void 0 : /[^]/
      });
    }
    update(n) {
      let e = n.state.facet(ow);
      n.startState.facet(ow) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(n.view)) : this.decorations = this.decorator.updateDeco(n, this.decorations);
    }
  }, {
    decorations: (n) => n.decorations
  }));
}
const kke = "•";
function Mke(n) {
  return n >= 32 ? kke : n == 10 ? "␤" : String.fromCharCode(9216 + n);
}
class Dke extends vu {
  constructor(e, t) {
    super(), this.options = e, this.code = t;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let t = Mke(this.code), r = e.state.phrase("Control character") + " " + (Ake[this.code] || "0x" + this.code.toString(16)), i = this.options.render && this.options.render(this.code, r, t);
    if (i)
      return i;
    let o = document.createElement("span");
    return o.textContent = t, o.title = r, o.setAttribute("aria-label", r), o.className = "cm-specialChar", o;
  }
  ignoreEvent() {
    return !1;
  }
}
class Lke extends vu {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function Ike() {
  return $ke;
}
const Rke = /* @__PURE__ */ tt.line({ class: "cm-activeLine" }), $ke = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.docChanged || n.selectionSet) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = -1, t = [];
    for (let r of n.state.selection.ranges) {
      let i = n.lineBlockAt(r.head);
      i.from > e && (t.push(Rke.range(i.from)), e = i.from);
    }
    return tt.set(t);
  }
}, {
  decorations: (n) => n.decorations
}), XE = 2e3;
function Nke(n, e, t) {
  let r = Math.min(e.line, t.line), i = Math.max(e.line, t.line), o = [];
  if (e.off > XE || t.off > XE || e.col < 0 || t.col < 0) {
    let s = Math.min(e.off, t.off), a = Math.max(e.off, t.off);
    for (let l = r; l <= i; l++) {
      let u = n.doc.line(l);
      u.length <= a && o.push(ce.range(u.from + s, u.to + a));
    }
  } else {
    let s = Math.min(e.col, t.col), a = Math.max(e.col, t.col);
    for (let l = r; l <= i; l++) {
      let u = n.doc.line(l), c = PE(u.text, s, n.tabSize, !0);
      if (c < 0)
        o.push(ce.cursor(u.to));
      else {
        let h = PE(u.text, a, n.tabSize);
        o.push(ce.range(u.from + c, u.from + h));
      }
    }
  }
  return o;
}
function Bke(n, e) {
  let t = n.coordsAtPos(n.viewport.from);
  return t ? Math.round(Math.abs((t.left - e) / n.defaultCharacterWidth)) : -1;
}
function SB(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), r = n.state.doc.lineAt(t), i = t - r.from, o = i > XE ? -1 : i == r.length ? Bke(n, e.clientX) : nv(r.text, n.state.tabSize, t - r.from);
  return { line: r.number, col: o, off: i };
}
function Vke(n, e) {
  let t = SB(n, e), r = n.state.selection;
  return t ? {
    update(i) {
      if (i.docChanged) {
        let o = i.changes.mapPos(i.startState.doc.line(t.line).from), s = i.state.doc.lineAt(o);
        t = { line: s.number, col: t.col, off: Math.min(t.off, s.length) }, r = r.map(i.changes);
      }
    },
    get(i, o, s) {
      let a = SB(n, i);
      if (!a)
        return r;
      let l = Nke(n.state, t, a);
      return l.length ? s ? ce.create(l.concat(r.ranges)) : ce.create(l) : r;
    }
  } : null;
}
function zke(n) {
  let e = (n == null ? void 0 : n.eventFilter) || ((t) => t.altKey && t.button == 0);
  return Ne.mouseSelectionStyle.of((t, r) => e(r) ? Vke(t, r) : null);
}
const Fke = {
  Alt: [18, (n) => !!n.altKey],
  Control: [17, (n) => !!n.ctrlKey],
  Shift: [16, (n) => !!n.shiftKey],
  Meta: [91, (n) => !!n.metaKey]
}, Qke = { style: "cursor: crosshair" };
function Zke(n = {}) {
  let [e, t] = Fke[n.key || "Alt"], r = vr.fromClass(class {
    constructor(i) {
      this.view = i, this.isDown = !1;
    }
    set(i) {
      this.isDown != i && (this.isDown = i, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(i) {
        this.set(i.keyCode == e || t(i));
      },
      keyup(i) {
        (i.keyCode == e || !t(i)) && this.set(!1);
      },
      mousemove(i) {
        this.set(t(i));
      }
    }
  });
  return [
    r,
    Ne.contentAttributes.of((i) => {
      var o;
      return !((o = i.plugin(r)) === null || o === void 0) && o.isDown ? Qke : null;
    })
  ];
}
const Lv = "-10000px";
class K9 {
  constructor(e, t, r, i) {
    this.facet = t, this.createTooltipView = r, this.removeTooltipView = i, this.input = e.state.facet(t), this.tooltips = this.input.filter((s) => s);
    let o = null;
    this.tooltipViews = this.tooltips.map((s) => o = r(s, o));
  }
  update(e, t) {
    var r;
    let i = e.state.facet(this.facet), o = i.filter((l) => l);
    if (i === this.input) {
      for (let l of this.tooltipViews)
        l.update && l.update(e);
      return !1;
    }
    let s = [], a = t ? [] : null;
    for (let l = 0; l < o.length; l++) {
      let u = o[l], c = -1;
      if (u) {
        for (let h = 0; h < this.tooltips.length; h++) {
          let f = this.tooltips[h];
          f && f.create == u.create && (c = h);
        }
        if (c < 0)
          s[l] = this.createTooltipView(u, l ? s[l - 1] : null), a && (a[l] = !!u.above);
        else {
          let h = s[l] = this.tooltipViews[c];
          a && (a[l] = t[c]), h.update && h.update(e);
        }
      }
    }
    for (let l of this.tooltipViews)
      s.indexOf(l) < 0 && (this.removeTooltipView(l), (r = l.destroy) === null || r === void 0 || r.call(l));
    return t && (a.forEach((l, u) => t[u] = l), t.length = a.length), this.input = i, this.tooltips = o, this.tooltipViews = s, !0;
  }
}
function Wke(n) {
  let { win: e } = n;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const p2 = /* @__PURE__ */ Be.define({
  combine: (n) => {
    var e, t, r;
    return {
      position: ze.ios ? "absolute" : ((e = n.find((i) => i.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((t = n.find((i) => i.parent)) === null || t === void 0 ? void 0 : t.parent) || null,
      tooltipSpace: ((r = n.find((i) => i.tooltipSpace)) === null || r === void 0 ? void 0 : r.tooltipSpace) || Wke
    };
  }
}), _B = /* @__PURE__ */ new WeakMap(), GL = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.view = n, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = n.state.facet(p2);
    this.position = e.position, this.parent = e.parent, this.classes = n.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new K9(n, jL, (t, r) => this.createTooltip(t, r), (t) => {
      this.resizeObserver && this.resizeObserver.unobserve(t.dom), t.dom.remove();
    }), this.above = this.manager.tooltips.map((t) => !!t.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((t) => {
      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), n.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let n of this.manager.tooltipViews)
        this.intersectionObserver.observe(n.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(n) {
    n.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(n, this.above);
    e && this.observeIntersection();
    let t = e || n.geometryChanged, r = n.state.facet(p2);
    if (r.position != this.position && !this.madeAbsolute) {
      this.position = r.position;
      for (let i of this.manager.tooltipViews)
        i.dom.style.position = this.position;
      t = !0;
    }
    if (r.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = r.parent, this.createContainer();
      for (let i of this.manager.tooltipViews)
        this.container.appendChild(i.dom);
      t = !0;
    } else
      this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    t && this.maybeMeasure();
  }
  createTooltip(n, e) {
    let t = n.create(this.view), r = e ? e.dom : null;
    if (t.dom.classList.add("cm-tooltip"), n.arrow && !t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let i = document.createElement("div");
      i.className = "cm-tooltip-arrow", t.dom.insertBefore(i, r);
    }
    return t.dom.style.position = this.position, t.dom.style.top = Lv, t.dom.style.left = "0px", this.container.insertBefore(t.dom, r), t.mount && t.mount(this.view), this.resizeObserver && this.resizeObserver.observe(t.dom), t;
  }
  destroy() {
    var n, e, t;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let r of this.manager.tooltipViews)
      r.dom.remove(), (n = r.destroy) === null || n === void 0 || n.call(r);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (t = this.intersectionObserver) === null || t === void 0 || t.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let n = this.view.dom.getBoundingClientRect(), e = 1, t = 1, r = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: i } = this.manager.tooltipViews[0];
      if (ze.gecko)
        r = i.offsetParent != this.container.ownerDocument.body;
      else if (i.style.top == Lv && i.style.left == "0px") {
        let o = i.getBoundingClientRect();
        r = Math.abs(o.top + 1e4) > 1 || Math.abs(o.left) > 1;
      }
    }
    if (r || this.position == "absolute")
      if (this.parent) {
        let i = this.parent.getBoundingClientRect();
        i.width && i.height && (e = i.width / this.parent.offsetWidth, t = i.height / this.parent.offsetHeight);
      } else
        ({ scaleX: e, scaleY: t } = this.view.viewState);
    return {
      editor: n,
      parent: this.parent ? this.container.getBoundingClientRect() : n,
      pos: this.manager.tooltips.map((i, o) => {
        let s = this.manager.tooltipViews[o];
        return s.getCoords ? s.getCoords(i.pos) : this.view.coordsAtPos(i.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: i }) => i.getBoundingClientRect()),
      space: this.view.state.facet(p2).tooltipSpace(this.view),
      scaleX: e,
      scaleY: t,
      makeAbsolute: r
    };
  }
  writeMeasure(n) {
    var e;
    if (n.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let a of this.manager.tooltipViews)
        a.dom.style.position = "absolute";
    }
    let { editor: t, space: r, scaleX: i, scaleY: o } = n, s = [];
    for (let a = 0; a < this.manager.tooltips.length; a++) {
      let l = this.manager.tooltips[a], u = this.manager.tooltipViews[a], { dom: c } = u, h = n.pos[a], f = n.size[a];
      if (!h || h.bottom <= Math.max(t.top, r.top) || h.top >= Math.min(t.bottom, r.bottom) || h.right < Math.max(t.left, r.left) - 0.1 || h.left > Math.min(t.right, r.right) + 0.1) {
        c.style.top = Lv;
        continue;
      }
      let d = l.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null, p = d ? 7 : 0, g = f.right - f.left, v = (e = _B.get(u)) !== null && e !== void 0 ? e : f.bottom - f.top, m = u.offset || jke, y = this.view.textDirection == Mn.LTR, b = f.width > r.right - r.left ? y ? r.left : r.right - f.width : y ? Math.min(h.left - (d ? 14 : 0) + m.x, r.right - g) : Math.max(r.left, h.left - g + (d ? 14 : 0) - m.x), O = this.above[a];
      !l.strictSide && (O ? h.top - (f.bottom - f.top) - m.y < r.top : h.bottom + (f.bottom - f.top) + m.y > r.bottom) && O == r.bottom - h.bottom > h.top - r.top && (O = this.above[a] = !O);
      let w = (O ? h.top - r.top : r.bottom - h.bottom) - p;
      if (w < v && u.resize !== !1) {
        if (w < this.view.defaultLineHeight) {
          c.style.top = Lv;
          continue;
        }
        _B.set(u, v), c.style.height = (v = w) / o + "px";
      } else
        c.style.height && (c.style.height = "");
      let x = O ? h.top - v - p - m.y : h.bottom + p + m.y, S = b + g;
      if (u.overlap !== !0)
        for (let _ of s)
          _.left < S && _.right > b && _.top < x + v && _.bottom > x && (x = O ? _.top - v - 2 - p : _.bottom + p + 2);
      if (this.position == "absolute" ? (c.style.top = (x - n.parent.top) / o + "px", c.style.left = (b - n.parent.left) / i + "px") : (c.style.top = x / o + "px", c.style.left = b / i + "px"), d) {
        let _ = h.left + (y ? m.x : -m.x) - (b + 14 - 7);
        d.style.left = _ / i + "px";
      }
      u.overlap !== !0 && s.push({ left: b, top: x, right: S, bottom: x + v }), c.classList.toggle("cm-tooltip-above", O), c.classList.toggle("cm-tooltip-below", !O), u.positioned && u.positioned(n.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let n of this.manager.tooltipViews)
        n.dom.style.top = Lv;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
}), Gke = /* @__PURE__ */ Ne.baseTheme({
  ".cm-tooltip": {
    zIndex: 100,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), jke = { x: 0, y: 0 }, jL = /* @__PURE__ */ Be.define({
  enables: [GL, Gke]
}), px = /* @__PURE__ */ Be.define({
  combine: (n) => n.reduce((e, t) => e.concat(t), [])
});
class w_ {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new w_(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new K9(e, px, (t, r) => this.createHostedView(t, r), (t) => t.dom.remove());
  }
  createHostedView(e, t) {
    let r = e.create(this.view);
    return r.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(r.dom, t ? t.dom.nextSibling : this.dom.firstChild), this.mounted && r.mount && r.mount(this.view), r;
  }
  mount(e) {
    for (let t of this.manager.tooltipViews)
      t.mount && t.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let t of this.manager.tooltipViews)
      t.positioned && t.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let t of this.manager.tooltipViews)
      (e = t.destroy) === null || e === void 0 || e.call(t);
  }
  passProp(e) {
    let t;
    for (let r of this.manager.tooltipViews) {
      let i = r[e];
      if (i !== void 0) {
        if (t === void 0)
          t = i;
        else if (t !== i)
          return;
      }
    }
    return t;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const Hke = /* @__PURE__ */ jL.compute([px], (n) => {
  let e = n.facet(px);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((t) => t.pos)),
    end: Math.max(...e.map((t) => {
      var r;
      return (r = t.end) !== null && r !== void 0 ? r : t.pos;
    })),
    create: w_.create,
    above: e[0].above,
    arrow: e.some((t) => t.arrow)
  };
});
class qke {
  constructor(e, t, r, i, o) {
    this.view = e, this.source = t, this.field = r, this.setHover = i, this.hoverTime = o, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: t } = this, r = e.docView.nearest(t.target);
    if (!r)
      return;
    let i, o = 1;
    if (r instanceof nc)
      i = r.posAtStart;
    else {
      if (i = e.posAtCoords(t), i == null)
        return;
      let a = e.coordsAtPos(i);
      if (!a || t.y < a.top || t.y > a.bottom || t.x < a.left - e.defaultCharacterWidth || t.x > a.right + e.defaultCharacterWidth)
        return;
      let l = e.bidiSpans(e.state.doc.lineAt(i)).find((c) => c.from <= i && c.to >= i), u = l && l.dir == Mn.RTL ? -1 : 1;
      o = t.x < a.left ? -u : u;
    }
    let s = this.source(e, i, o);
    if (s != null && s.then) {
      let a = this.pending = { pos: i };
      s.then((l) => {
        this.pending == a && (this.pending = null, l && !(Array.isArray(l) && !l.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(l) ? l : [l]) }));
      }, (l) => vs(e.state, l, "hover tooltip"));
    } else
      s && !(Array.isArray(s) && !s.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(s) ? s : [s]) });
  }
  get tooltip() {
    let e = this.view.plugin(GL), t = e ? e.manager.tooltips.findIndex((r) => r.create == w_.create) : -1;
    return t > -1 ? e.manager.tooltipViews[t] : null;
  }
  mousemove(e) {
    var t, r;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: i, tooltip: o } = this;
    if (i.length && o && !Yke(o.dom, e) || this.pending) {
      let { pos: s } = i[0] || this.pending, a = (r = (t = i[0]) === null || t === void 0 ? void 0 : t.end) !== null && r !== void 0 ? r : s;
      (s == a ? this.view.posAtCoords(this.lastMove) != s : !Xke(this.view, s, a, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: t } = this;
    if (t.length) {
      let { tooltip: r } = this;
      r && r.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(r.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let t = (r) => {
      e.removeEventListener("mouseleave", t), this.active.length && !this.view.dom.contains(r.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", t);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const m1 = 4;
function Yke(n, e) {
  let t = n.getBoundingClientRect();
  return e.clientX >= t.left - m1 && e.clientX <= t.right + m1 && e.clientY >= t.top - m1 && e.clientY <= t.bottom + m1;
}
function Xke(n, e, t, r, i, o) {
  let s = n.scrollDOM.getBoundingClientRect(), a = n.documentTop + n.documentPadding.top + n.contentHeight;
  if (s.left > r || s.right < r || s.top > i || Math.min(s.bottom, a) < i)
    return !1;
  let l = n.posAtCoords({ x: r, y: i }, !1);
  return l >= e && l <= t;
}
function Uke(n, e = {}) {
  let t = wt.define(), r = Wr.define({
    create() {
      return [];
    },
    update(i, o) {
      if (i.length && (e.hideOnChange && (o.docChanged || o.selection) ? i = [] : e.hideOn && (i = i.filter((s) => !e.hideOn(o, s))), o.docChanged)) {
        let s = [];
        for (let a of i) {
          let l = o.changes.mapPos(a.pos, -1, Jr.TrackDel);
          if (l != null) {
            let u = Object.assign(/* @__PURE__ */ Object.create(null), a);
            u.pos = l, u.end != null && (u.end = o.changes.mapPos(u.end)), s.push(u);
          }
        }
        i = s;
      }
      for (let s of o.effects)
        s.is(t) && (i = s.value), s.is(Kke) && (i = []);
      return i;
    },
    provide: (i) => px.from(i)
  });
  return [
    r,
    vr.define((i) => new qke(
      i,
      n,
      r,
      t,
      e.hoverTime || 300
      /* Hover.Time */
    )),
    Hke
  ];
}
function J9(n, e) {
  let t = n.plugin(GL);
  if (!t)
    return null;
  let r = t.manager.tooltips.indexOf(e);
  return r < 0 ? null : t.manager.tooltipViews[r];
}
const Kke = /* @__PURE__ */ wt.define(), CB = /* @__PURE__ */ Be.define({
  combine(n) {
    let e, t;
    for (let r of n)
      e = e || r.topContainer, t = t || r.bottomContainer;
    return { topContainer: e, bottomContainer: t };
  }
});
function i0(n, e) {
  let t = n.plugin(eY), r = t ? t.specs.indexOf(e) : -1;
  return r > -1 ? t.panels[r] : null;
}
const eY = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.input = n.state.facet(o0), this.specs = this.input.filter((t) => t), this.panels = this.specs.map((t) => t(n));
    let e = n.state.facet(CB);
    this.top = new y1(n, !0, e.topContainer), this.bottom = new y1(n, !1, e.bottomContainer), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
    for (let t of this.panels)
      t.dom.classList.add("cm-panel"), t.mount && t.mount();
  }
  update(n) {
    let e = n.state.facet(CB);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new y1(n.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new y1(n.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let t = n.state.facet(o0);
    if (t != this.input) {
      let r = t.filter((l) => l), i = [], o = [], s = [], a = [];
      for (let l of r) {
        let u = this.specs.indexOf(l), c;
        u < 0 ? (c = l(n.view), a.push(c)) : (c = this.panels[u], c.update && c.update(n)), i.push(c), (c.top ? o : s).push(c);
      }
      this.specs = r, this.panels = i, this.top.sync(o), this.bottom.sync(s);
      for (let l of a)
        l.dom.classList.add("cm-panel"), l.mount && l.mount();
    } else
      for (let r of this.panels)
        r.update && r.update(n);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (n) => Ne.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
  })
});
class y1 {
  constructor(e, t, r) {
    this.view = e, this.top = t, this.container = r, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let t of this.panels)
      t.destroy && e.indexOf(t) < 0 && t.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let t = this.container || this.view.dom;
      t.insertBefore(this.dom, this.top ? t.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let t of this.panels)
      if (t.dom.parentNode == this.dom) {
        for (; e != t.dom; )
          e = AB(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(t.dom, e);
    for (; e; )
      e = AB(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function AB(n) {
  let e = n.nextSibling;
  return n.remove(), e;
}
const o0 = /* @__PURE__ */ Be.define({
  enables: eY
});
class ru extends qf {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
ru.prototype.elementClass = "";
ru.prototype.toDOM = void 0;
ru.prototype.mapMode = Jr.TrackBefore;
ru.prototype.startSide = ru.prototype.endSide = -1;
ru.prototype.point = !0;
const sw = /* @__PURE__ */ Be.define(), Jke = {
  class: "",
  renderEmptyElements: !1,
  elementStyle: "",
  markers: () => Zt.empty,
  lineMarker: () => null,
  widgetMarker: () => null,
  lineMarkerChange: null,
  initialSpacer: null,
  updateSpacer: null,
  domEventHandlers: {}
}, ay = /* @__PURE__ */ Be.define();
function eMe(n) {
  return [tY(), ay.of(Object.assign(Object.assign({}, Jke), n))];
}
const UE = /* @__PURE__ */ Be.define({
  combine: (n) => n.some((e) => e)
});
function tY(n) {
  let e = [
    tMe
  ];
  return n && n.fixed === !1 && e.push(UE.of(!0)), e;
}
const tMe = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.view = n, this.prevViewport = n.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = n.state.facet(ay).map((e) => new PB(n, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !n.state.facet(UE), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), n.scrollDOM.insertBefore(this.dom, n.contentDOM);
  }
  update(n) {
    if (this.updateGutters(n)) {
      let e = this.prevViewport, t = n.view.viewport, r = Math.min(e.to, t.to) - Math.max(e.from, t.from);
      this.syncGutters(r < (t.to - t.from) * 0.8);
    }
    n.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight + "px"), this.view.state.facet(UE) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = n.view.viewport;
  }
  syncGutters(n) {
    let e = this.dom.nextSibling;
    n && this.dom.remove();
    let t = Zt.iter(this.view.state.facet(sw), this.view.viewport.from), r = [], i = this.gutters.map((o) => new nMe(o, this.view.viewport, -this.view.documentPadding.top));
    for (let o of this.view.viewportLineBlocks)
      if (r.length && (r = []), Array.isArray(o.type)) {
        let s = !0;
        for (let a of o.type)
          if (a.type == $i.Text && s) {
            KE(t, r, a.from);
            for (let l of i)
              l.line(this.view, a, r);
            s = !1;
          } else if (a.widget)
            for (let l of i)
              l.widget(this.view, a);
      } else if (o.type == $i.Text) {
        KE(t, r, o.from);
        for (let s of i)
          s.line(this.view, o, r);
      } else if (o.widget)
        for (let s of i)
          s.widget(this.view, o);
    for (let o of i)
      o.finish();
    n && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(n) {
    let e = n.startState.facet(ay), t = n.state.facet(ay), r = n.docChanged || n.heightChanged || n.viewportChanged || !Zt.eq(n.startState.facet(sw), n.state.facet(sw), n.view.viewport.from, n.view.viewport.to);
    if (e == t)
      for (let i of this.gutters)
        i.update(n) && (r = !0);
    else {
      r = !0;
      let i = [];
      for (let o of t) {
        let s = e.indexOf(o);
        s < 0 ? i.push(new PB(this.view, o)) : (this.gutters[s].update(n), i.push(this.gutters[s]));
      }
      for (let o of this.gutters)
        o.dom.remove(), i.indexOf(o) < 0 && o.destroy();
      for (let o of i)
        this.dom.appendChild(o.dom);
      this.gutters = i;
    }
    return r;
  }
  destroy() {
    for (let n of this.gutters)
      n.destroy();
    this.dom.remove();
  }
}, {
  provide: (n) => Ne.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == Mn.LTR ? { left: t.dom.offsetWidth * e.scaleX } : { right: t.dom.offsetWidth * e.scaleX };
  })
});
function TB(n) {
  return Array.isArray(n) ? n : [n];
}
function KE(n, e, t) {
  for (; n.value && n.from <= t; )
    n.from == t && e.push(n.value), n.next();
}
class nMe {
  constructor(e, t, r) {
    this.gutter = e, this.height = r, this.i = 0, this.cursor = Zt.iter(e.markers, t.from);
  }
  addElement(e, t, r) {
    let { gutter: i } = this, o = (t.top - this.height) / e.scaleY, s = t.height / e.scaleY;
    if (this.i == i.elements.length) {
      let a = new nY(e, s, o, r);
      i.elements.push(a), i.dom.appendChild(a.dom);
    } else
      i.elements[this.i].update(e, s, o, r);
    this.height = t.bottom, this.i++;
  }
  line(e, t, r) {
    let i = [];
    KE(this.cursor, i, t.from), r.length && (i = i.concat(r));
    let o = this.gutter.config.lineMarker(e, t, i);
    o && i.unshift(o);
    let s = this.gutter;
    i.length == 0 && !s.config.renderEmptyElements || this.addElement(e, t, i);
  }
  widget(e, t) {
    let r = this.gutter.config.widgetMarker(e, t.widget, t);
    r && this.addElement(e, t, [r]);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let t = e.elements.pop();
      e.dom.removeChild(t.dom), t.destroy();
    }
  }
}
class PB {
  constructor(e, t) {
    this.view = e, this.config = t, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let r in t.domEventHandlers)
      this.dom.addEventListener(r, (i) => {
        let o = i.target, s;
        if (o != this.dom && this.dom.contains(o)) {
          for (; o.parentNode != this.dom; )
            o = o.parentNode;
          let l = o.getBoundingClientRect();
          s = (l.top + l.bottom) / 2;
        } else
          s = i.clientY;
        let a = e.lineBlockAtHeight(s - e.documentTop);
        t.domEventHandlers[r](e, a, i) && i.preventDefault();
      });
    this.markers = TB(t.markers(e)), t.initialSpacer && (this.spacer = new nY(e, 0, 0, [t.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let t = this.markers;
    if (this.markers = TB(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let i = this.config.updateSpacer(this.spacer.markers[0], e);
      i != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [i]);
    }
    let r = e.view.viewport;
    return !Zt.eq(this.markers, t, r.from, r.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class nY {
  constructor(e, t, r, i) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, t, r, i);
  }
  update(e, t, r, i) {
    this.height != t && (this.height = t, this.dom.style.height = t + "px"), this.above != r && (this.dom.style.marginTop = (this.above = r) ? r + "px" : ""), rMe(this.markers, i) || this.setMarkers(e, i);
  }
  setMarkers(e, t) {
    let r = "cm-gutterElement", i = this.dom.firstChild;
    for (let o = 0, s = 0; ; ) {
      let a = s, l = o < t.length ? t[o++] : null, u = !1;
      if (l) {
        let c = l.elementClass;
        c && (r += " " + c);
        for (let h = s; h < this.markers.length; h++)
          if (this.markers[h].compare(l)) {
            a = h, u = !0;
            break;
          }
      } else
        a = this.markers.length;
      for (; s < a; ) {
        let c = this.markers[s++];
        if (c.toDOM) {
          c.destroy(i);
          let h = i.nextSibling;
          i.remove(), i = h;
        }
      }
      if (!l)
        break;
      l.toDOM && (u ? i = i.nextSibling : this.dom.insertBefore(l.toDOM(e), i)), u && s++;
    }
    this.dom.className = r, this.markers = t;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function rMe(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (!n[t].compare(e[t]))
      return !1;
  return !0;
}
const iMe = /* @__PURE__ */ Be.define(), pp = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, t) {
        let r = Object.assign({}, e);
        for (let i in t) {
          let o = r[i], s = t[i];
          r[i] = o ? (a, l, u) => o(a, l, u) || s(a, l, u) : s;
        }
        return r;
      }
    });
  }
});
class g2 extends ru {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function v2(n, e) {
  return n.state.facet(pp).formatNumber(e, n.state);
}
const oMe = /* @__PURE__ */ ay.compute([pp], (n) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(iMe);
  },
  lineMarker(e, t, r) {
    return r.some((i) => i.toDOM) ? null : new g2(v2(e, e.state.doc.lineAt(t.from).number));
  },
  widgetMarker: () => null,
  lineMarkerChange: (e) => e.startState.facet(pp) != e.state.facet(pp),
  initialSpacer(e) {
    return new g2(v2(e, EB(e.state.doc.lines)));
  },
  updateSpacer(e, t) {
    let r = v2(t.view, EB(t.view.state.doc.lines));
    return r == e.number ? e : new g2(r);
  },
  domEventHandlers: n.facet(pp).domEventHandlers
}));
function sMe(n = {}) {
  return [
    pp.of(n),
    tY(),
    oMe
  ];
}
function EB(n) {
  let e = 9;
  for (; e < n; )
    e = e * 10 + 9;
  return e;
}
const aMe = /* @__PURE__ */ new class extends ru {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), lMe = /* @__PURE__ */ sw.compute(["selection"], (n) => {
  let e = [], t = -1;
  for (let r of n.selection.ranges) {
    let i = n.doc.lineAt(r.head).from;
    i > t && (t = i, e.push(aMe.range(i)));
  }
  return Zt.of(e);
});
function uMe() {
  return lMe;
}
const rY = 1024;
let cMe = 0;
class m2 {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
class Lt {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = cMe++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = po.match(e)), (t) => {
      let r = e(t);
      return r === void 0 ? null : [this, r];
    };
  }
}
Lt.closedBy = new Lt({ deserialize: (n) => n.split(" ") });
Lt.openedBy = new Lt({ deserialize: (n) => n.split(" ") });
Lt.group = new Lt({ deserialize: (n) => n.split(" ") });
Lt.isolate = new Lt({ deserialize: (n) => {
  if (n && n != "rtl" && n != "ltr" && n != "auto")
    throw new RangeError("Invalid value for isolate: " + n);
  return n || "auto";
} });
Lt.contextHash = new Lt({ perNode: !0 });
Lt.lookAhead = new Lt({ perNode: !0 });
Lt.mounted = new Lt({ perNode: !0 });
class gx {
  constructor(e, t, r) {
    this.tree = e, this.overlay = t, this.parser = r;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[Lt.mounted.id];
  }
}
const hMe = /* @__PURE__ */ Object.create(null);
class po {
  /**
  @internal
  */
  constructor(e, t, r, i = 0) {
    this.name = e, this.props = t, this.id = r, this.flags = i;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let t = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : hMe, r = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), i = new po(e.name || "", t, e.id, r);
    if (e.props) {
      for (let o of e.props)
        if (Array.isArray(o) || (o = o(i)), o) {
          if (o[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          t[o[0].id] = o[1];
        }
    }
    return i;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let t = this.prop(Lt.group);
      return t ? t.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let r in e)
      for (let i of r.split(" "))
        t[i] = e[r];
    return (r) => {
      for (let i = r.prop(Lt.group), o = -1; o < (i ? i.length : 0); o++) {
        let s = t[o < 0 ? r.name : i[o]];
        if (s)
          return s;
      }
    };
  }
}
po.none = new po(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class HL {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let t = 0; t < e.length; t++)
      if (e[t].id != t)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let t = [];
    for (let r of this.types) {
      let i = null;
      for (let o of e) {
        let s = o(r);
        s && (i || (i = Object.assign({}, r.props)), i[s[0].id] = s[1]);
      }
      t.push(i ? new po(r.name, i, r.id, r.flags) : r);
    }
    return new HL(t);
  }
}
const b1 = /* @__PURE__ */ new WeakMap(), kB = /* @__PURE__ */ new WeakMap();
var Cr;
(function(n) {
  n[n.ExcludeBuffers = 1] = "ExcludeBuffers", n[n.IncludeAnonymous = 2] = "IncludeAnonymous", n[n.IgnoreMounts = 4] = "IgnoreMounts", n[n.IgnoreOverlays = 8] = "IgnoreOverlays";
})(Cr || (Cr = {}));
let ri = class JE {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, t, r, i, o) {
    if (this.type = e, this.children = t, this.positions = r, this.length = i, this.props = null, o && o.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [s, a] of o)
        this.props[typeof s == "number" ? s : s.id] = a;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = gx.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let t = "";
    for (let r of this.children) {
      let i = r.toString();
      i && (t && (t += ","), t += i);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new tk(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, t = 0, r = 0) {
    let i = b1.get(this) || this.topNode, o = new tk(i);
    return o.moveTo(e, t), b1.set(this, o._tree), o;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new hl(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, t = 0) {
    let r = s0(b1.get(this) || this.topNode, e, t, !1);
    return b1.set(this, r), r;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, t = 0) {
    let r = s0(kB.get(this) || this.topNode, e, t, !0);
    return kB.set(this, r), r;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, t = 0) {
    return pMe(this, e, t);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: t, leave: r, from: i = 0, to: o = this.length } = e, s = e.mode || 0, a = (s & Cr.IncludeAnonymous) > 0;
    for (let l = this.cursor(s | Cr.IncludeAnonymous); ; ) {
      let u = !1;
      if (l.from <= o && l.to >= i && (!a && l.type.isAnonymous || t(l) !== !1)) {
        if (l.firstChild())
          continue;
        u = !0;
      }
      for (; u && r && (a || !l.type.isAnonymous) && r(l), !l.nextSibling(); ) {
        if (!l.parent())
          return;
        u = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let t in this.props)
        e.push([+t, this.props[t]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : XL(po.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, r, i) => new JE(this.type, t, r, i, this.propValues), e.makeTree || ((t, r, i) => new JE(po.none, t, r, i)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return gMe(e);
  }
};
ri.empty = new ri(po.none, [], [], 0);
class qL {
  constructor(e, t) {
    this.buffer = e, this.index = t;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new qL(this.buffer, this.index);
  }
}
class Lc {
  /**
  Create a tree buffer.
  */
  constructor(e, t, r) {
    this.buffer = e, this.length = t, this.set = r;
  }
  /**
  @internal
  */
  get type() {
    return po.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let t = 0; t < this.buffer.length; )
      e.push(this.childString(t)), t = this.buffer[t + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let t = this.buffer[e], r = this.buffer[e + 3], i = this.set.types[t], o = i.name;
    if (/\W/.test(o) && !i.isError && (o = JSON.stringify(o)), e += 4, r == e)
      return o;
    let s = [];
    for (; e < r; )
      s.push(this.childString(e)), e = this.buffer[e + 3];
    return o + "(" + s.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, t, r, i, o) {
    let { buffer: s } = this, a = -1;
    for (let l = e; l != t && !(iY(o, i, s[l + 1], s[l + 2]) && (a = l, r > 0)); l = s[l + 3])
      ;
    return a;
  }
  /**
  @internal
  */
  slice(e, t, r) {
    let i = this.buffer, o = new Uint16Array(t - e), s = 0;
    for (let a = e, l = 0; a < t; ) {
      o[l++] = i[a++], o[l++] = i[a++] - r;
      let u = o[l++] = i[a++] - r;
      o[l++] = i[a++] - e, s = Math.max(s, u);
    }
    return new Lc(o, s, this.set);
  }
}
function iY(n, e, t, r) {
  switch (n) {
    case -2:
      return t < e;
    case -1:
      return r >= e && t < e;
    case 0:
      return t < e && r > e;
    case 1:
      return t <= e && r > e;
    case 2:
      return r > e;
    case 4:
      return !0;
  }
}
function s0(n, e, t, r) {
  for (var i; n.from == n.to || (t < 1 ? n.from >= e : n.from > e) || (t > -1 ? n.to <= e : n.to < e); ) {
    let s = !r && n instanceof hl && n.index < 0 ? null : n.parent;
    if (!s)
      return n;
    n = s;
  }
  let o = r ? 0 : Cr.IgnoreOverlays;
  if (r)
    for (let s = n, a = s.parent; a; s = a, a = s.parent)
      s instanceof hl && s.index < 0 && ((i = a.enter(e, t, o)) === null || i === void 0 ? void 0 : i.from) != s.from && (n = a);
  for (; ; ) {
    let s = n.enter(e, t, o);
    if (!s)
      return n;
    n = s;
  }
}
class oY {
  cursor(e = 0) {
    return new tk(this, e);
  }
  getChild(e, t = null, r = null) {
    let i = MB(this, e, t, r);
    return i.length ? i[0] : null;
  }
  getChildren(e, t = null, r = null) {
    return MB(this, e, t, r);
  }
  resolve(e, t = 0) {
    return s0(this, e, t, !1);
  }
  resolveInner(e, t = 0) {
    return s0(this, e, t, !0);
  }
  matchContext(e) {
    return ek(this, e);
  }
  enterUnfinishedNodesBefore(e) {
    let t = this.childBefore(e), r = this;
    for (; t; ) {
      let i = t.lastChild;
      if (!i || i.to != t.to)
        break;
      i.type.isError && i.from == i.to ? (r = t, t = i.prevSibling) : t = i;
    }
    return r;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
let hl = class aw extends oY {
  constructor(e, t, r, i) {
    super(), this._tree = e, this.from = t, this.index = r, this._parent = i;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, t, r, i, o = 0) {
    for (let s = this; ; ) {
      for (let { children: a, positions: l } = s._tree, u = t > 0 ? a.length : -1; e != u; e += t) {
        let c = a[e], h = l[e] + s.from;
        if (iY(i, r, h, h + c.length)) {
          if (c instanceof Lc) {
            if (o & Cr.ExcludeBuffers)
              continue;
            let f = c.findChild(0, c.buffer.length, t, r - h, i);
            if (f > -1)
              return new Qa(new fMe(s, c, e, h), null, f);
          } else if (o & Cr.IncludeAnonymous || !c.type.isAnonymous || YL(c)) {
            let f;
            if (!(o & Cr.IgnoreMounts) && (f = gx.get(c)) && !f.overlay)
              return new aw(f.tree, h, e, s);
            let d = new aw(c, h, e, s);
            return o & Cr.IncludeAnonymous || !d.type.isAnonymous ? d : d.nextChild(t < 0 ? c.children.length - 1 : 0, t, r, i);
          }
        }
      }
      if (o & Cr.IncludeAnonymous || !s.type.isAnonymous || (s.index >= 0 ? e = s.index + t : e = t < 0 ? -1 : s._parent._tree.children.length, s = s._parent, !s))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, r = 0) {
    let i;
    if (!(r & Cr.IgnoreOverlays) && (i = gx.get(this._tree)) && i.overlay) {
      let o = e - this.from;
      for (let { from: s, to: a } of i.overlay)
        if ((t > 0 ? s <= o : s < o) && (t < 0 ? a >= o : a > o))
          return new aw(i.tree, i.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, t, r);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
};
function MB(n, e, t, r) {
  let i = n.cursor(), o = [];
  if (!i.firstChild())
    return o;
  if (t != null) {
    for (let s = !1; !s; )
      if (s = i.type.is(t), !i.nextSibling())
        return o;
  }
  for (; ; ) {
    if (r != null && i.type.is(r))
      return o;
    if (i.type.is(e) && o.push(i.node), !i.nextSibling())
      return r == null ? o : [];
  }
}
function ek(n, e, t = e.length - 1) {
  for (let r = n.parent; t >= 0; r = r.parent) {
    if (!r)
      return !1;
    if (!r.type.isAnonymous) {
      if (e[t] && e[t] != r.name)
        return !1;
      t--;
    }
  }
  return !0;
}
class fMe {
  constructor(e, t, r, i) {
    this.parent = e, this.buffer = t, this.index = r, this.start = i;
  }
}
class Qa extends oY {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, t, r) {
    super(), this.context = e, this._parent = t, this.index = r, this.type = e.buffer.set.types[e.buffer.buffer[r]];
  }
  child(e, t, r) {
    let { buffer: i } = this.context, o = i.findChild(this.index + 4, i.buffer[this.index + 3], e, t - this.context.start, r);
    return o < 0 ? null : new Qa(this.context, this, o);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, r = 0) {
    if (r & Cr.ExcludeBuffers)
      return null;
    let { buffer: i } = this.context, o = i.findChild(this.index + 4, i.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
    return o < 0 ? null : new Qa(this.context, this, o);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, t = e.buffer[this.index + 3];
    return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new Qa(this.context, this._parent, t) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, t = this._parent ? this._parent.index + 4 : 0;
    return this.index == t ? this.externalSibling(-1) : new Qa(this.context, this._parent, e.findChild(
      t,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], t = [], { buffer: r } = this.context, i = this.index + 4, o = r.buffer[this.index + 3];
    if (o > i) {
      let s = r.buffer[this.index + 1];
      e.push(r.slice(i, o, s)), t.push(0);
    }
    return new ri(this.type, e, t, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function sY(n) {
  if (!n.length)
    return null;
  let e = 0, t = n[0];
  for (let o = 1; o < n.length; o++) {
    let s = n[o];
    (s.from > t.from || s.to < t.to) && (t = s, e = o);
  }
  let r = t instanceof hl && t.index < 0 ? null : t.parent, i = n.slice();
  return r ? i[e] = r : i.splice(e, 1), new dMe(i, t);
}
class dMe {
  constructor(e, t) {
    this.heads = e, this.node = t;
  }
  get next() {
    return sY(this.heads);
  }
}
function pMe(n, e, t) {
  let r = n.resolveInner(e, t), i = null;
  for (let o = r instanceof hl ? r : r.context.parent; o; o = o.parent)
    if (o.index < 0) {
      let s = o.parent;
      (i || (i = [r])).push(s.resolve(e, t)), o = s;
    } else {
      let s = gx.get(o.tree);
      if (s && s.overlay && s.overlay[0].from <= e && s.overlay[s.overlay.length - 1].to >= e) {
        let a = new hl(s.tree, s.overlay[0].from + o.from, -1, o);
        (i || (i = [r])).push(s0(a, e, t, !1));
      }
    }
  return i ? sY(i) : r;
}
class tk {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, t = 0) {
    if (this.mode = t, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof hl)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let r = e._parent; r; r = r._parent)
        this.stack.unshift(r.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, t) {
    this.index = e;
    let { start: r, buffer: i } = this.buffer;
    return this.type = t || i.set.types[i.buffer[e]], this.from = r + i.buffer[e + 1], this.to = r + i.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof hl ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, t, r) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, r, this.mode));
    let { buffer: i } = this.buffer, o = i.findChild(this.index + 4, i.buffer[this.index + 3], e, t - this.buffer.start, r);
    return o < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(o));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, t, r = this.mode) {
    return this.buffer ? r & Cr.ExcludeBuffers ? !1 : this.enterChild(1, e, t) : this.yield(this._tree.enter(e, t, r));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & Cr.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & Cr.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: t } = this.buffer, r = this.stack.length - 1;
    if (e < 0) {
      let i = r < 0 ? 0 : this.stack[r] + 4;
      if (this.index != i)
        return this.yieldBuf(t.findChild(
          i,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let i = t.buffer[this.index + 3];
      if (i < (r < 0 ? t.buffer.length : t.buffer[this.stack[r] + 3]))
        return this.yieldBuf(i);
    }
    return r < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let t, r, { buffer: i } = this;
    if (i) {
      if (e > 0) {
        if (this.index < i.buffer.buffer.length)
          return !1;
      } else
        for (let o = 0; o < this.index; o++)
          if (i.buffer.buffer[o + 3] < this.index)
            return !1;
      ({ index: t, parent: r } = i);
    } else
      ({ index: t, _parent: r } = this._tree);
    for (; r; { index: t, _parent: r } = r)
      if (t > -1)
        for (let o = t + e, s = e < 0 ? -1 : r._tree.children.length; o != s; o += e) {
          let a = r._tree.children[o];
          if (this.mode & Cr.IncludeAnonymous || a instanceof Lc || !a.type.isAnonymous || YL(a))
            return !1;
        }
    return !0;
  }
  move(e, t) {
    if (t && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traveral. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, t = 0) {
    for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, t); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, t = null, r = 0;
    if (e && e.context == this.buffer)
      e:
        for (let i = this.index, o = this.stack.length; o >= 0; ) {
          for (let s = e; s; s = s._parent)
            if (s.index == i) {
              if (i == this.index)
                return s;
              t = s, r = o + 1;
              break e;
            }
          i = this.stack[--o];
        }
    for (let i = r; i < this.stack.length; i++)
      t = new Qa(this.buffer, t, this.stack[i]);
    return this.bufferNode = new Qa(this.buffer, t, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, t) {
    for (let r = 0; ; ) {
      let i = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          r++;
          continue;
        }
        this.type.isAnonymous || (i = !0);
      }
      for (; i && t && t(this), i = this.type.isAnonymous, !this.nextSibling(); ) {
        if (!r)
          return;
        this.parent(), r--, i = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return ek(this.node, e);
    let { buffer: t } = this.buffer, { types: r } = t.set;
    for (let i = e.length - 1, o = this.stack.length - 1; i >= 0; o--) {
      if (o < 0)
        return ek(this.node, e, i);
      let s = r[t.buffer[this.stack[o]]];
      if (!s.isAnonymous) {
        if (e[i] && e[i] != s.name)
          return !1;
        i--;
      }
    }
    return !0;
  }
}
function YL(n) {
  return n.children.some((e) => e instanceof Lc || !e.type.isAnonymous || YL(e));
}
function gMe(n) {
  var e;
  let { buffer: t, nodeSet: r, maxBufferLength: i = rY, reused: o = [], minRepeatType: s = r.types.length } = n, a = Array.isArray(t) ? new qL(t, t.length) : t, l = r.types, u = 0, c = 0;
  function h(w, x, S, _, C, A) {
    let { id: T, start: k, end: L, size: D } = a, E = c;
    for (; D < 0; )
      if (a.next(), D == -1) {
        let V = o[T];
        S.push(V), _.push(k - w);
        return;
      } else if (D == -3) {
        u = T;
        return;
      } else if (D == -4) {
        c = T;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${D}`);
    let M = l[T], R, N, $ = k - w;
    if (L - k <= i && (N = v(a.pos - x, C))) {
      let V = new Uint16Array(N.size - N.skip), H = a.pos - N.size, G = V.length;
      for (; a.pos > H; )
        G = m(N.start, V, G);
      R = new Lc(V, L - N.start, r), $ = N.start - w;
    } else {
      let V = a.pos - D;
      a.next();
      let H = [], G = [], q = T >= s ? T : -1, Y = 0, ie = L;
      for (; a.pos > V; )
        q >= 0 && a.id == q && a.size >= 0 ? (a.end <= ie - i && (p(H, G, k, Y, a.end, ie, q, E), Y = H.length, ie = a.end), a.next()) : A > 2500 ? f(k, V, H, G) : h(k, V, H, G, q, A + 1);
      if (q >= 0 && Y > 0 && Y < H.length && p(H, G, k, Y, k, ie, q, E), H.reverse(), G.reverse(), q > -1 && Y > 0) {
        let se = d(M);
        R = XL(M, H, G, 0, H.length, 0, L - k, se, se);
      } else
        R = g(M, H, G, L - k, E - L);
    }
    S.push(R), _.push($);
  }
  function f(w, x, S, _) {
    let C = [], A = 0, T = -1;
    for (; a.pos > x; ) {
      let { id: k, start: L, end: D, size: E } = a;
      if (E > 4)
        a.next();
      else {
        if (T > -1 && L < T)
          break;
        T < 0 && (T = D - i), C.push(k, L, D), A++, a.next();
      }
    }
    if (A) {
      let k = new Uint16Array(A * 4), L = C[C.length - 2];
      for (let D = C.length - 3, E = 0; D >= 0; D -= 3)
        k[E++] = C[D], k[E++] = C[D + 1] - L, k[E++] = C[D + 2] - L, k[E++] = E;
      S.push(new Lc(k, C[2] - L, r)), _.push(L - w);
    }
  }
  function d(w) {
    return (x, S, _) => {
      let C = 0, A = x.length - 1, T, k;
      if (A >= 0 && (T = x[A]) instanceof ri) {
        if (!A && T.type == w && T.length == _)
          return T;
        (k = T.prop(Lt.lookAhead)) && (C = S[A] + T.length + k);
      }
      return g(w, x, S, _, C);
    };
  }
  function p(w, x, S, _, C, A, T, k) {
    let L = [], D = [];
    for (; w.length > _; )
      L.push(w.pop()), D.push(x.pop() + S - C);
    w.push(g(r.types[T], L, D, A - C, k - A)), x.push(C - S);
  }
  function g(w, x, S, _, C = 0, A) {
    if (u) {
      let T = [Lt.contextHash, u];
      A = A ? [T].concat(A) : [T];
    }
    if (C > 25) {
      let T = [Lt.lookAhead, C];
      A = A ? [T].concat(A) : [T];
    }
    return new ri(w, x, S, _, A);
  }
  function v(w, x) {
    let S = a.fork(), _ = 0, C = 0, A = 0, T = S.end - i, k = { size: 0, start: 0, skip: 0 };
    e:
      for (let L = S.pos - w; S.pos > L; ) {
        let D = S.size;
        if (S.id == x && D >= 0) {
          k.size = _, k.start = C, k.skip = A, A += 4, _ += 4, S.next();
          continue;
        }
        let E = S.pos - D;
        if (D < 0 || E < L || S.start < T)
          break;
        let M = S.id >= s ? 4 : 0, R = S.start;
        for (S.next(); S.pos > E; ) {
          if (S.size < 0)
            if (S.size == -3)
              M += 4;
            else
              break e;
          else
            S.id >= s && (M += 4);
          S.next();
        }
        C = R, _ += D, A += M;
      }
    return (x < 0 || _ == w) && (k.size = _, k.start = C, k.skip = A), k.size > 4 ? k : void 0;
  }
  function m(w, x, S) {
    let { id: _, start: C, end: A, size: T } = a;
    if (a.next(), T >= 0 && _ < s) {
      let k = S;
      if (T > 4) {
        let L = a.pos - (T - 4);
        for (; a.pos > L; )
          S = m(w, x, S);
      }
      x[--S] = k, x[--S] = A - w, x[--S] = C - w, x[--S] = _;
    } else
      T == -3 ? u = _ : T == -4 && (c = _);
    return S;
  }
  let y = [], b = [];
  for (; a.pos > 0; )
    h(n.start || 0, n.bufferStart || 0, y, b, -1, 0);
  let O = (e = n.length) !== null && e !== void 0 ? e : y.length ? b[0] + y[0].length : 0;
  return new ri(l[n.topID], y.reverse(), b.reverse(), O);
}
const DB = /* @__PURE__ */ new WeakMap();
function lw(n, e) {
  if (!n.isAnonymous || e instanceof Lc || e.type != n)
    return 1;
  let t = DB.get(e);
  if (t == null) {
    t = 1;
    for (let r of e.children) {
      if (r.type != n || !(r instanceof ri)) {
        t = 1;
        break;
      }
      t += lw(n, r);
    }
    DB.set(e, t);
  }
  return t;
}
function XL(n, e, t, r, i, o, s, a, l) {
  let u = 0;
  for (let p = r; p < i; p++)
    u += lw(n, e[p]);
  let c = Math.ceil(
    u * 1.5 / 8
    /* Balance.BranchFactor */
  ), h = [], f = [];
  function d(p, g, v, m, y) {
    for (let b = v; b < m; ) {
      let O = b, w = g[b], x = lw(n, p[b]);
      for (b++; b < m; b++) {
        let S = lw(n, p[b]);
        if (x + S >= c)
          break;
        x += S;
      }
      if (b == O + 1) {
        if (x > c) {
          let S = p[O];
          d(S.children, S.positions, 0, S.children.length, g[O] + y);
          continue;
        }
        h.push(p[O]);
      } else {
        let S = g[b - 1] + p[b - 1].length - w;
        h.push(XL(n, p, g, O, b, w, S, null, l));
      }
      f.push(w + y - o);
    }
  }
  return d(e, t, r, i, 0), (a || l)(h, f, s);
}
class vMe {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, t, r) {
    let i = this.map.get(e);
    i || this.map.set(e, i = /* @__PURE__ */ new Map()), i.set(t, r);
  }
  getBuffer(e, t) {
    let r = this.map.get(e);
    return r && r.get(t);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, t) {
    e instanceof Qa ? this.setBuffer(e.context.buffer, e.index, t) : e instanceof hl && this.map.set(e.tree, t);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof Qa ? this.getBuffer(e.context.buffer, e.index) : e instanceof hl ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, t) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, t) : this.map.set(e.tree, t);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class Af {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, t, r, i, o = !1, s = !1) {
    this.from = e, this.to = t, this.tree = r, this.offset = i, this.open = (o ? 1 : 0) | (s ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, t = [], r = !1) {
    let i = [new Af(0, e.length, e, 0, !1, r)];
    for (let o of t)
      o.to > e.length && i.push(o);
    return i;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, t, r = 128) {
    if (!t.length)
      return e;
    let i = [], o = 1, s = e.length ? e[0] : null;
    for (let a = 0, l = 0, u = 0; ; a++) {
      let c = a < t.length ? t[a] : null, h = c ? c.fromA : 1e9;
      if (h - l >= r)
        for (; s && s.from < h; ) {
          let f = s;
          if (l >= f.from || h <= f.to || u) {
            let d = Math.max(f.from, l) - u, p = Math.min(f.to, h) - u;
            f = d >= p ? null : new Af(d, p, f.tree, f.offset + u, a > 0, !!c);
          }
          if (f && i.push(f), s.to > h)
            break;
          s = o < e.length ? e[o++] : null;
        }
      if (!c)
        break;
      l = c.toA, u = c.toA - c.toB;
    }
    return i;
  }
}
class aY {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, t, r) {
    return typeof e == "string" && (e = new mMe(e)), r = r ? r.length ? r.map((i) => new m2(i.from, i.to)) : [new m2(0, 0)] : [new m2(0, e.length)], this.createParse(e, t || [], r);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, t, r) {
    let i = this.startParse(e, t, r);
    for (; ; ) {
      let o = i.advance();
      if (o)
        return o;
    }
  }
}
class mMe {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, t) {
    return this.string.slice(e, t);
  }
}
new Lt({ perNode: !0 });
let yMe = 0;
class Na {
  /**
  @internal
  */
  constructor(e, t, r) {
    this.set = e, this.base = t, this.modified = r, this.id = yMe++;
  }
  /**
  Define a new tag. If `parent` is given, the tag is treated as a
  sub-tag of that parent, and
  [highlighters](#highlight.tagHighlighter) that don't mention
  this tag will try to fall back to the parent tag (or grandparent
  tag, etc).
  */
  static define(e) {
    if (e != null && e.base)
      throw new Error("Can not derive from a modified tag");
    let t = new Na([], null, []);
    if (t.set.push(t), e)
      for (let r of e.set)
        t.set.push(r);
    return t;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier() {
    let e = new vx();
    return (t) => t.modified.indexOf(e) > -1 ? t : vx.get(t.base || t, t.modified.concat(e).sort((r, i) => r.id - i.id));
  }
}
let bMe = 0;
class vx {
  constructor() {
    this.instances = [], this.id = bMe++;
  }
  static get(e, t) {
    if (!t.length)
      return e;
    let r = t[0].instances.find((a) => a.base == e && OMe(t, a.modified));
    if (r)
      return r;
    let i = [], o = new Na(i, e, t);
    for (let a of t)
      a.instances.push(o);
    let s = wMe(t);
    for (let a of e.set)
      if (!a.modified.length)
        for (let l of s)
          i.push(vx.get(a, l));
    return o;
  }
}
function OMe(n, e) {
  return n.length == e.length && n.every((t, r) => t == e[r]);
}
function wMe(n) {
  let e = [[]];
  for (let t = 0; t < n.length; t++)
    for (let r = 0, i = e.length; r < i; r++)
      e.push(e[r].concat(n[t]));
  return e.sort((t, r) => r.length - t.length);
}
function UL(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in n) {
    let r = n[t];
    Array.isArray(r) || (r = [r]);
    for (let i of t.split(" "))
      if (i) {
        let o = [], s = 2, a = i;
        for (let h = 0; ; ) {
          if (a == "..." && h > 0 && h + 3 == i.length) {
            s = 1;
            break;
          }
          let f = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(a);
          if (!f)
            throw new RangeError("Invalid path: " + i);
          if (o.push(f[0] == "*" ? "" : f[0][0] == '"' ? JSON.parse(f[0]) : f[0]), h += f[0].length, h == i.length)
            break;
          let d = i[h++];
          if (h == i.length && d == "!") {
            s = 0;
            break;
          }
          if (d != "/")
            throw new RangeError("Invalid path: " + i);
          a = i.slice(h);
        }
        let l = o.length - 1, u = o[l];
        if (!u)
          throw new RangeError("Invalid path: " + i);
        let c = new mx(r, s, l > 0 ? o.slice(0, l) : null);
        e[u] = c.sort(e[u]);
      }
  }
  return lY.add(e);
}
const lY = new Lt();
class mx {
  constructor(e, t, r, i) {
    this.tags = e, this.mode = t, this.context = r, this.next = i;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
mx.empty = new mx([], 2, null);
function uY(n, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let o of n)
    if (!Array.isArray(o.tag))
      t[o.tag.id] = o.class;
    else
      for (let s of o.tag)
        t[s.id] = o.class;
  let { scope: r, all: i = null } = e || {};
  return {
    style: (o) => {
      let s = i;
      for (let a of o)
        for (let l of a.set) {
          let u = t[l.id];
          if (u) {
            s = s ? s + " " + u : u;
            break;
          }
        }
      return s;
    },
    scope: r
  };
}
function xMe(n, e) {
  let t = null;
  for (let r of n) {
    let i = r.style(e);
    i && (t = t ? t + " " + i : i);
  }
  return t;
}
function SMe(n, e, t, r = 0, i = n.length) {
  let o = new _Me(r, Array.isArray(e) ? e : [e], t);
  o.highlightRange(n.cursor(), r, i, "", o.highlighters), o.flush(i);
}
class _Me {
  constructor(e, t, r) {
    this.at = e, this.highlighters = t, this.span = r, this.class = "";
  }
  startSpan(e, t) {
    t != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = t);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, t, r, i, o) {
    let { type: s, from: a, to: l } = e;
    if (a >= r || l <= t)
      return;
    s.isTop && (o = this.highlighters.filter((d) => !d.scope || d.scope(s)));
    let u = i, c = CMe(e) || mx.empty, h = xMe(o, c.tags);
    if (h && (u && (u += " "), u += h, c.mode == 1 && (i += (i ? " " : "") + h)), this.startSpan(Math.max(t, a), u), c.opaque)
      return;
    let f = e.tree && e.tree.prop(Lt.mounted);
    if (f && f.overlay) {
      let d = e.node.enter(f.overlay[0].from + a, 1), p = this.highlighters.filter((v) => !v.scope || v.scope(f.tree.type)), g = e.firstChild();
      for (let v = 0, m = a; ; v++) {
        let y = v < f.overlay.length ? f.overlay[v] : null, b = y ? y.from + a : l, O = Math.max(t, m), w = Math.min(r, b);
        if (O < w && g)
          for (; e.from < w && (this.highlightRange(e, O, w, i, o), this.startSpan(Math.min(w, e.to), u), !(e.to >= b || !e.nextSibling())); )
            ;
        if (!y || b > r)
          break;
        m = y.to + a, m > t && (this.highlightRange(d.cursor(), Math.max(t, y.from + a), Math.min(r, m), "", p), this.startSpan(Math.min(r, m), u));
      }
      g && e.parent();
    } else if (e.firstChild()) {
      f && (i = "");
      do
        if (!(e.to <= t)) {
          if (e.from >= r)
            break;
          this.highlightRange(e, t, r, i, o), this.startSpan(Math.min(r, e.to), u);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function CMe(n) {
  let e = n.type.prop(lY);
  for (; e && e.context && !n.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const Te = Na.define, O1 = Te(), Fu = Te(), LB = Te(Fu), IB = Te(Fu), Qu = Te(), w1 = Te(Qu), y2 = Te(Qu), Ea = Te(), uh = Te(Ea), xa = Te(), Sa = Te(), nk = Te(), Iv = Te(nk), x1 = Te(), ee = {
  /**
  A comment.
  */
  comment: O1,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: Te(O1),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: Te(O1),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: Te(O1),
  /**
  Any kind of identifier.
  */
  name: Fu,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: Te(Fu),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: LB,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: Te(LB),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: IB,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: Te(IB),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: Te(Fu),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: Te(Fu),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: Te(Fu),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: Te(Fu),
  /**
  A literal value.
  */
  literal: Qu,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: w1,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: Te(w1),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: Te(w1),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: Te(w1),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: y2,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: Te(y2),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: Te(y2),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: Te(Qu),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: Te(Qu),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: Te(Qu),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: Te(Qu),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: Te(Qu),
  /**
  A language keyword.
  */
  keyword: xa,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: Te(xa),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: Te(xa),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: Te(xa),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: Te(xa),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: Te(xa),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: Te(xa),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: Te(xa),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: Te(xa),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: Te(xa),
  /**
  An operator.
  */
  operator: Sa,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: Te(Sa),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: Te(Sa),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: Te(Sa),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: Te(Sa),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: Te(Sa),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: Te(Sa),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: Te(Sa),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: Te(Sa),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: Te(Sa),
  /**
  Program or markup punctuation.
  */
  punctuation: nk,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: Te(nk),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: Iv,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: Te(Iv),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: Te(Iv),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: Te(Iv),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: Te(Iv),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: Ea,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: uh,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: Te(uh),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: Te(uh),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: Te(uh),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: Te(uh),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: Te(uh),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: Te(uh),
  /**
  A prose separator (such as a horizontal rule).
  */
  contentSeparator: Te(Ea),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: Te(Ea),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: Te(Ea),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: Te(Ea),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: Te(Ea),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: Te(Ea),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: Te(Ea),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: Te(Ea),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: Te(),
  /**
  Deleted text.
  */
  deleted: Te(),
  /**
  Changed text.
  */
  changed: Te(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: Te(),
  /**
  Metadata or meta-instruction.
  */
  meta: x1,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: Te(x1),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: Te(x1),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: Te(x1),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: Na.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: Na.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: Na.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: Na.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: Na.defineModifier(),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: Na.defineModifier()
};
uY([
  { tag: ee.link, class: "tok-link" },
  { tag: ee.heading, class: "tok-heading" },
  { tag: ee.emphasis, class: "tok-emphasis" },
  { tag: ee.strong, class: "tok-strong" },
  { tag: ee.keyword, class: "tok-keyword" },
  { tag: ee.atom, class: "tok-atom" },
  { tag: ee.bool, class: "tok-bool" },
  { tag: ee.url, class: "tok-url" },
  { tag: ee.labelName, class: "tok-labelName" },
  { tag: ee.inserted, class: "tok-inserted" },
  { tag: ee.deleted, class: "tok-deleted" },
  { tag: ee.literal, class: "tok-literal" },
  { tag: ee.string, class: "tok-string" },
  { tag: ee.number, class: "tok-number" },
  { tag: [ee.regexp, ee.escape, ee.special(ee.string)], class: "tok-string2" },
  { tag: ee.variableName, class: "tok-variableName" },
  { tag: ee.local(ee.variableName), class: "tok-variableName tok-local" },
  { tag: ee.definition(ee.variableName), class: "tok-variableName tok-definition" },
  { tag: ee.special(ee.variableName), class: "tok-variableName2" },
  { tag: ee.definition(ee.propertyName), class: "tok-propertyName tok-definition" },
  { tag: ee.typeName, class: "tok-typeName" },
  { tag: ee.namespace, class: "tok-namespace" },
  { tag: ee.className, class: "tok-className" },
  { tag: ee.macroName, class: "tok-macroName" },
  { tag: ee.propertyName, class: "tok-propertyName" },
  { tag: ee.operator, class: "tok-operator" },
  { tag: ee.comment, class: "tok-comment" },
  { tag: ee.meta, class: "tok-meta" },
  { tag: ee.invalid, class: "tok-invalid" },
  { tag: ee.punctuation, class: "tok-punctuation" }
]);
var b2;
const gp = /* @__PURE__ */ new Lt();
function cY(n) {
  return Be.define({
    combine: n ? (e) => e.concat(n) : void 0
  });
}
const KL = /* @__PURE__ */ new Lt();
class qs {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, t, r = [], i = "") {
    this.data = e, this.name = i, Yt.prototype.hasOwnProperty("tree") || Object.defineProperty(Yt.prototype, "tree", { get() {
      return Er(this);
    } }), this.parser = t, this.extension = [
      Ic.of(this),
      Yt.languageData.of((o, s, a) => {
        let l = RB(o, s, a), u = l.type.prop(gp);
        if (!u)
          return [];
        let c = o.facet(u), h = l.type.prop(KL);
        if (h) {
          let f = l.resolve(s - l.from, a);
          for (let d of h)
            if (d.test(f, o)) {
              let p = o.facet(d.facet);
              return d.type == "replace" ? p : p.concat(c);
            }
        }
        return c;
      })
    ].concat(r);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, t, r = -1) {
    return RB(e, t, r).type.prop(gp) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let t = e.facet(Ic);
    if ((t == null ? void 0 : t.data) == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!t || !t.allowsNesting)
      return [];
    let r = [], i = (o, s) => {
      if (o.prop(gp) == this.data) {
        r.push({ from: s, to: s + o.length });
        return;
      }
      let a = o.prop(Lt.mounted);
      if (a) {
        if (a.tree.prop(gp) == this.data) {
          if (a.overlay)
            for (let l of a.overlay)
              r.push({ from: l.from + s, to: l.to + s });
          else
            r.push({ from: s, to: s + o.length });
          return;
        } else if (a.overlay) {
          let l = r.length;
          if (i(a.tree, a.overlay[0].from + s), r.length > l)
            return;
        }
      }
      for (let l = 0; l < o.children.length; l++) {
        let u = o.children[l];
        u instanceof ri && i(u, o.positions[l] + s);
      }
    };
    return i(Er(e), 0), r;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
qs.setState = /* @__PURE__ */ wt.define();
function RB(n, e, t) {
  let r = n.facet(Ic), i = Er(n).topNode;
  if (!r || r.allowsNesting)
    for (let o = i; o; o = o.enter(e, t, Cr.ExcludeBuffers))
      o.type.isTop && (i = o);
  return i;
}
class a0 extends qs {
  constructor(e, t, r) {
    super(e, t, [], r), this.parser = t;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let t = cY(e.languageData);
    return new a0(t, e.parser.configure({
      props: [gp.add((r) => r.isTop ? t : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, t) {
    return new a0(this.data, this.parser.configure(e), t || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Er(n) {
  let e = n.field(qs.state, !1);
  return e ? e.tree : ri.empty;
}
class AMe {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, t) {
    let r = this.cursorPos - this.string.length;
    return e < r || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - r, t - r);
  }
}
let Rv = null;
class yx {
  constructor(e, t, r = [], i, o, s, a, l) {
    this.parser = e, this.state = t, this.fragments = r, this.tree = i, this.treeLen = o, this.viewport = s, this.skipped = a, this.scheduleOn = l, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, t, r) {
    return new yx(e, t, [], ri.empty, 0, r, [], null);
  }
  startParse() {
    return this.parser.startParse(new AMe(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, t) {
    return t != null && t >= this.state.doc.length && (t = void 0), this.tree != ri.empty && this.isDone(t ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var r;
      if (typeof e == "number") {
        let i = Date.now() + e;
        e = () => Date.now() > i;
      }
      for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
        let i = this.parse.advance();
        if (i)
          if (this.fragments = this.withoutTempSkipped(Af.addTree(i, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (r = this.parse.stoppedAt) !== null && r !== void 0 ? r : this.state.doc.length, this.tree = i, this.parse = null, this.treeLen < (t ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, t;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(t = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = t, this.fragments = this.withoutTempSkipped(Af.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let t = Rv;
    Rv = this;
    try {
      return e();
    } finally {
      Rv = t;
    }
  }
  withoutTempSkipped(e) {
    for (let t; t = this.tempSkipped.pop(); )
      e = $B(e, t.from, t.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, t) {
    let { fragments: r, tree: i, treeLen: o, viewport: s, skipped: a } = this;
    if (this.takeTree(), !e.empty) {
      let l = [];
      if (e.iterChangedRanges((u, c, h, f) => l.push({ fromA: u, toA: c, fromB: h, toB: f })), r = Af.applyChanges(r, l), i = ri.empty, o = 0, s = { from: e.mapPos(s.from, -1), to: e.mapPos(s.to, 1) }, this.skipped.length) {
        a = [];
        for (let u of this.skipped) {
          let c = e.mapPos(u.from, 1), h = e.mapPos(u.to, -1);
          c < h && a.push({ from: c, to: h });
        }
      }
    }
    return new yx(this.parser, t, r, i, o, s, a, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let t = this.skipped.length;
    for (let r = 0; r < this.skipped.length; r++) {
      let { from: i, to: o } = this.skipped[r];
      i < e.to && o > e.from && (this.fragments = $B(this.fragments, i, o), this.skipped.splice(r--, 1));
    }
    return this.skipped.length >= t ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, t) {
    this.skipped.push({ from: e, to: t });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends aY {
      createParse(t, r, i) {
        let o = i[0].from, s = i[i.length - 1].to;
        return {
          parsedPos: o,
          advance() {
            let l = Rv;
            if (l) {
              for (let u of i)
                l.tempSkipped.push(u);
              e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
            }
            return this.parsedPos = s, new ri(po.none, [], [], s - o);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let t = this.fragments;
    return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return Rv;
  }
}
function $B(n, e, t) {
  return Af.applyChanges(n, [{ fromA: e, toA: t, fromB: e, toB: t }]);
}
class Pg {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let t = this.context.changes(e.changes, e.state), r = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
    return t.work(20, r) || t.takeTree(), new Pg(t);
  }
  static init(e) {
    let t = Math.min(3e3, e.doc.length), r = yx.create(e.facet(Ic).parser, e, { from: 0, to: t });
    return r.work(20, t) || r.takeTree(), new Pg(r);
  }
}
qs.state = /* @__PURE__ */ Wr.define({
  create: Pg.init,
  update(n, e) {
    for (let t of e.effects)
      if (t.is(qs.setState))
        return t.value;
    return e.startState.facet(Ic) != e.state.facet(Ic) ? Pg.init(e.state) : n.apply(e);
  }
});
let hY = (n) => {
  let e = setTimeout(
    () => n(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (hY = (n) => {
  let e = -1, t = setTimeout(
    () => {
      e = requestIdleCallback(n, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(t) : cancelIdleCallback(e);
});
const O2 = typeof navigator < "u" && (!((b2 = navigator.scheduling) === null || b2 === void 0) && b2.isInputPending) ? () => navigator.scheduling.isInputPending() : null, TMe = /* @__PURE__ */ vr.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let t = this.view.state.field(qs.state).context;
    (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, t = e.field(qs.state);
    (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = hY(this.work));
  }
  work(e) {
    this.working = null;
    let t = Date.now();
    if (this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = t + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: r, viewport: { to: i } } = this.view, o = r.field(qs.state);
    if (o.tree == o.context.tree && o.context.isDone(
      i + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let s = Date.now() + Math.min(this.chunkBudget, 100, e && !O2 ? Math.max(25, e.timeRemaining() - 5) : 1e9), a = o.context.treeLen < i && r.doc.length > i + 1e3, l = o.context.work(() => O2 && O2() || Date.now() > s, i + (a ? 0 : 1e5));
    this.chunkBudget -= Date.now() - t, (l || this.chunkBudget <= 0) && (o.context.takeTree(), this.view.dispatch({ effects: qs.setState.of(new Pg(o.context)) })), this.chunkBudget > 0 && !(l && !a) && this.scheduleWork(), this.checkAsyncSchedule(o.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((t) => vs(this.view.state, t)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), Ic = /* @__PURE__ */ Be.define({
  combine(n) {
    return n.length ? n[0] : null;
  },
  enables: (n) => [
    qs.state,
    TMe,
    Ne.contentAttributes.compute([n], (e) => {
      let t = e.facet(n);
      return t && t.name ? { "data-language": t.name } : {};
    })
  ]
});
class fY {
  /**
  Create a language support object.
  */
  constructor(e, t = []) {
    this.language = e, this.support = t, this.extension = [e, t];
  }
}
const PMe = /* @__PURE__ */ Be.define(), x_ = /* @__PURE__ */ Be.define({
  combine: (n) => {
    if (!n.length)
      return "  ";
    let e = n[0];
    if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(n[0]));
    return e;
  }
});
function bx(n) {
  let e = n.facet(x_);
  return e.charCodeAt(0) == 9 ? n.tabSize * e.length : e.length;
}
function l0(n, e) {
  let t = "", r = n.tabSize, i = n.facet(x_)[0];
  if (i == "	") {
    for (; e >= r; )
      t += "	", e -= r;
    i = " ";
  }
  for (let o = 0; o < e; o++)
    t += i;
  return t;
}
function JL(n, e) {
  n instanceof Yt && (n = new S_(n));
  for (let r of n.state.facet(PMe)) {
    let i = r(n, e);
    if (i !== void 0)
      return i;
  }
  let t = Er(n.state);
  return t.length >= e ? EMe(n, t, e) : null;
}
class S_ {
  /**
  Create an indent context.
  */
  constructor(e, t = {}) {
    this.state = e, this.options = t, this.unit = bx(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, t = 1) {
    let r = this.state.doc.lineAt(e), { simulateBreak: i, simulateDoubleBreak: o } = this.options;
    return i != null && i >= r.from && i <= r.to ? o && i == e ? { text: "", from: e } : (t < 0 ? i < e : i <= e) ? { text: r.text.slice(i - r.from), from: i } : { text: r.text.slice(0, i - r.from), from: r.from } : r;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, t = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: r, from: i } = this.lineAt(e, t);
    return r.slice(e - i, Math.min(r.length, e + 100 - i));
  }
  /**
  Find the column for the given position.
  */
  column(e, t = 1) {
    let { text: r, from: i } = this.lineAt(e, t), o = this.countColumn(r, e - i), s = this.options.overrideIndentation ? this.options.overrideIndentation(i) : -1;
    return s > -1 && (o += s - this.countColumn(r, r.search(/\S|$/))), o;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, t = e.length) {
    return nv(e, this.state.tabSize, t);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, t = 1) {
    let { text: r, from: i } = this.lineAt(e, t), o = this.options.overrideIndentation;
    if (o) {
      let s = o(i);
      if (s > -1)
        return s;
    }
    return this.countColumn(r, r.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const eI = /* @__PURE__ */ new Lt();
function EMe(n, e, t) {
  let r = e.resolveStack(t), i = r.node.enterUnfinishedNodesBefore(t);
  if (i != r.node) {
    let o = [];
    for (let s = i; s != r.node; s = s.parent)
      o.push(s);
    for (let s = o.length - 1; s >= 0; s--)
      r = { node: o[s], next: r };
  }
  return dY(r, n, t);
}
function dY(n, e, t) {
  for (let r = n; r; r = r.next) {
    let i = MMe(r.node);
    if (i)
      return i(tI.create(e, t, r));
  }
  return 0;
}
function kMe(n) {
  return n.pos == n.options.simulateBreak && n.options.simulateDoubleBreak;
}
function MMe(n) {
  let e = n.type.prop(eI);
  if (e)
    return e;
  let t = n.firstChild, r;
  if (t && (r = t.type.prop(Lt.closedBy))) {
    let i = n.lastChild, o = i && r.indexOf(i.name) > -1;
    return (s) => pY(s, !0, 1, void 0, o && !kMe(s) ? i.from : void 0);
  }
  return n.parent == null ? DMe : null;
}
function DMe() {
  return 0;
}
class tI extends S_ {
  constructor(e, t, r) {
    super(e.state, e.options), this.base = e, this.pos = t, this.context = r;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, t, r) {
    return new tI(e, t, r);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let t = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let r = e.resolve(t.from);
      for (; r.parent && r.parent.from == r.from; )
        r = r.parent;
      if (LMe(r, e))
        break;
      t = this.state.doc.lineAt(r.from);
    }
    return this.lineIndent(t.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return dY(this.context.next, this.base, this.pos);
  }
}
function LMe(n, e) {
  for (let t = e; t; t = t.parent)
    if (n == t)
      return !0;
  return !1;
}
function IMe(n) {
  let e = n.node, t = e.childAfter(e.from), r = e.lastChild;
  if (!t)
    return null;
  let i = n.options.simulateBreak, o = n.state.doc.lineAt(t.from), s = i == null || i <= o.from ? o.to : Math.min(o.to, i);
  for (let a = t.to; ; ) {
    let l = e.childAfter(a);
    if (!l || l == r)
      return null;
    if (!l.type.isSkipped)
      return l.from < s ? t : null;
    a = l.to;
  }
}
function RMe({ closing: n, align: e = !0, units: t = 1 }) {
  return (r) => pY(r, e, t, n);
}
function pY(n, e, t, r, i) {
  let o = n.textAfter, s = o.match(/^\s*/)[0].length, a = r && o.slice(s, s + r.length) == r || i == n.pos + s, l = e ? IMe(n) : null;
  return l ? a ? n.column(l.from) : n.column(l.to) : n.baseIndent + (a ? 0 : n.unit * t);
}
const $Me = (n) => n.baseIndent;
function ly({ except: n, units: e = 1 } = {}) {
  return (t) => {
    let r = n && n.test(t.textAfter);
    return t.baseIndent + (r ? 0 : e * t.unit);
  };
}
const NMe = 200;
function BMe() {
  return Yt.transactionFilter.of((n) => {
    if (!n.docChanged || !n.isUserEvent("input.type") && !n.isUserEvent("input.complete"))
      return n;
    let e = n.startState.languageDataAt("indentOnInput", n.startState.selection.main.head);
    if (!e.length)
      return n;
    let t = n.newDoc, { head: r } = n.newSelection.main, i = t.lineAt(r);
    if (r > i.from + NMe)
      return n;
    let o = t.sliceString(i.from, r);
    if (!e.some((u) => u.test(o)))
      return n;
    let { state: s } = n, a = -1, l = [];
    for (let { head: u } of s.selection.ranges) {
      let c = s.doc.lineAt(u);
      if (c.from == a)
        continue;
      a = c.from;
      let h = JL(s, c.from);
      if (h == null)
        continue;
      let f = /^\s*/.exec(c.text)[0], d = l0(s, h);
      f != d && l.push({ from: c.from, to: c.from + f.length, insert: d });
    }
    return l.length ? [n, { changes: l, sequential: !0 }] : n;
  });
}
const VMe = /* @__PURE__ */ Be.define(), nI = /* @__PURE__ */ new Lt();
function gY(n) {
  let e = n.firstChild, t = n.lastChild;
  return e && e.to < t.from ? { from: e.to, to: t.type.isError ? n.to : t.from } : null;
}
function zMe(n, e, t) {
  let r = Er(n);
  if (r.length < t)
    return null;
  let i = r.resolveStack(t, 1), o = null;
  for (let s = i; s; s = s.next) {
    let a = s.node;
    if (a.to <= t || a.from > t)
      continue;
    if (o && a.from < e)
      break;
    let l = a.type.prop(nI);
    if (l && (a.to < r.length - 50 || r.length == n.doc.length || !FMe(a))) {
      let u = l(a, n);
      u && u.from <= t && u.from >= e && u.to > t && (o = u);
    }
  }
  return o;
}
function FMe(n) {
  let e = n.lastChild;
  return e && e.to == n.to && e.type.isError;
}
function Ox(n, e, t) {
  for (let r of n.facet(VMe)) {
    let i = r(n, e, t);
    if (i)
      return i;
  }
  return zMe(n, e, t);
}
function vY(n, e) {
  let t = e.mapPos(n.from, 1), r = e.mapPos(n.to, -1);
  return t >= r ? void 0 : { from: t, to: r };
}
const __ = /* @__PURE__ */ wt.define({ map: vY }), pb = /* @__PURE__ */ wt.define({ map: vY });
function mY(n) {
  let e = [];
  for (let { head: t } of n.state.selection.ranges)
    e.some((r) => r.from <= t && r.to >= t) || e.push(n.lineBlockAt(t));
  return e;
}
const Uf = /* @__PURE__ */ Wr.define({
  create() {
    return tt.none;
  },
  update(n, e) {
    n = n.map(e.changes);
    for (let t of e.effects)
      if (t.is(__) && !QMe(n, t.value.from, t.value.to)) {
        let { preparePlaceholder: r } = e.state.facet(rI), i = r ? tt.replace({ widget: new YMe(r(e.state, t.value)) }) : NB;
        n = n.update({ add: [i.range(t.value.from, t.value.to)] });
      } else
        t.is(pb) && (n = n.update({
          filter: (r, i) => t.value.from != r || t.value.to != i,
          filterFrom: t.value.from,
          filterTo: t.value.to
        }));
    if (e.selection) {
      let t = !1, { head: r } = e.selection.main;
      n.between(r, r, (i, o) => {
        i < r && o > r && (t = !0);
      }), t && (n = n.update({
        filterFrom: r,
        filterTo: r,
        filter: (i, o) => o <= r || i >= r
      }));
    }
    return n;
  },
  provide: (n) => Ne.decorations.from(n),
  toJSON(n, e) {
    let t = [];
    return n.between(0, e.doc.length, (r, i) => {
      t.push(r, i);
    }), t;
  },
  fromJSON(n) {
    if (!Array.isArray(n) || n.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let t = 0; t < n.length; ) {
      let r = n[t++], i = n[t++];
      if (typeof r != "number" || typeof i != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(NB.range(r, i));
    }
    return tt.set(e, !0);
  }
});
function xx(n, e, t) {
  var r;
  let i = null;
  return (r = n.field(Uf, !1)) === null || r === void 0 || r.between(e, t, (o, s) => {
    (!i || i.from > o) && (i = { from: o, to: s });
  }), i;
}
function QMe(n, e, t) {
  let r = !1;
  return n.between(e, e, (i, o) => {
    i == e && o == t && (r = !0);
  }), r;
}
function yY(n, e) {
  return n.field(Uf, !1) ? e : e.concat(wt.appendConfig.of(OY()));
}
const ZMe = (n) => {
  for (let e of mY(n)) {
    let t = Ox(n.state, e.from, e.to);
    if (t)
      return n.dispatch({ effects: yY(n.state, [__.of(t), bY(n, t)]) }), !0;
  }
  return !1;
}, WMe = (n) => {
  if (!n.state.field(Uf, !1))
    return !1;
  let e = [];
  for (let t of mY(n)) {
    let r = xx(n.state, t.from, t.to);
    r && e.push(pb.of(r), bY(n, r, !1));
  }
  return e.length && n.dispatch({ effects: e }), e.length > 0;
};
function bY(n, e, t = !0) {
  let r = n.state.doc.lineAt(e.from).number, i = n.state.doc.lineAt(e.to).number;
  return Ne.announce.of(`${n.state.phrase(t ? "Folded lines" : "Unfolded lines")} ${r} ${n.state.phrase("to")} ${i}.`);
}
const GMe = (n) => {
  let { state: e } = n, t = [];
  for (let r = 0; r < e.doc.length; ) {
    let i = n.lineBlockAt(r), o = Ox(e, i.from, i.to);
    o && t.push(__.of(o)), r = (o ? n.lineBlockAt(o.to) : i).to + 1;
  }
  return t.length && n.dispatch({ effects: yY(n.state, t) }), !!t.length;
}, jMe = (n) => {
  let e = n.state.field(Uf, !1);
  if (!e || !e.size)
    return !1;
  let t = [];
  return e.between(0, n.state.doc.length, (r, i) => {
    t.push(pb.of({ from: r, to: i }));
  }), n.dispatch({ effects: t }), !0;
}, HMe = [
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: ZMe },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: WMe },
  { key: "Ctrl-Alt-[", run: GMe },
  { key: "Ctrl-Alt-]", run: jMe }
], qMe = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, rI = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, qMe);
  }
});
function OY(n) {
  let e = [Uf, KMe];
  return n && e.push(rI.of(n)), e;
}
function wY(n, e) {
  let { state: t } = n, r = t.facet(rI), i = (s) => {
    let a = n.lineBlockAt(n.posAtDOM(s.target)), l = xx(n.state, a.from, a.to);
    l && n.dispatch({ effects: pb.of(l) }), s.preventDefault();
  };
  if (r.placeholderDOM)
    return r.placeholderDOM(n, i, e);
  let o = document.createElement("span");
  return o.textContent = r.placeholderText, o.setAttribute("aria-label", t.phrase("folded code")), o.title = t.phrase("unfold"), o.className = "cm-foldPlaceholder", o.onclick = i, o;
}
const NB = /* @__PURE__ */ tt.replace({ widget: /* @__PURE__ */ new class extends vu {
  toDOM(n) {
    return wY(n, null);
  }
}() });
class YMe extends vu {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return wY(e, this.value);
  }
}
const XMe = {
  openText: "⌄",
  closedText: "›",
  markerDOM: null,
  domEventHandlers: {},
  foldingChanged: () => !1
};
class w2 extends ru {
  constructor(e, t) {
    super(), this.config = e, this.open = t;
  }
  eq(e) {
    return this.config == e.config && this.open == e.open;
  }
  toDOM(e) {
    if (this.config.markerDOM)
      return this.config.markerDOM(this.open);
    let t = document.createElement("span");
    return t.textContent = this.open ? this.config.openText : this.config.closedText, t.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"), t;
  }
}
function UMe(n = {}) {
  let e = Object.assign(Object.assign({}, XMe), n), t = new w2(e, !0), r = new w2(e, !1), i = vr.fromClass(class {
    constructor(s) {
      this.from = s.viewport.from, this.markers = this.buildMarkers(s);
    }
    update(s) {
      (s.docChanged || s.viewportChanged || s.startState.facet(Ic) != s.state.facet(Ic) || s.startState.field(Uf, !1) != s.state.field(Uf, !1) || Er(s.startState) != Er(s.state) || e.foldingChanged(s)) && (this.markers = this.buildMarkers(s.view));
    }
    buildMarkers(s) {
      let a = new Ec();
      for (let l of s.viewportLineBlocks) {
        let u = xx(s.state, l.from, l.to) ? r : Ox(s.state, l.from, l.to) ? t : null;
        u && a.add(l.from, l.from, u);
      }
      return a.finish();
    }
  }), { domEventHandlers: o } = e;
  return [
    i,
    eMe({
      class: "cm-foldGutter",
      markers(s) {
        var a;
        return ((a = s.plugin(i)) === null || a === void 0 ? void 0 : a.markers) || Zt.empty;
      },
      initialSpacer() {
        return new w2(e, !1);
      },
      domEventHandlers: Object.assign(Object.assign({}, o), { click: (s, a, l) => {
        if (o.click && o.click(s, a, l))
          return !0;
        let u = xx(s.state, a.from, a.to);
        if (u)
          return s.dispatch({ effects: pb.of(u) }), !0;
        let c = Ox(s.state, a.from, a.to);
        return c ? (s.dispatch({ effects: __.of(c) }), !0) : !1;
      } })
    }),
    OY()
  ];
}
const KMe = /* @__PURE__ */ Ne.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class C_ {
  constructor(e, t) {
    this.specs = e;
    let r;
    function i(a) {
      let l = kc.newName();
      return (r || (r = /* @__PURE__ */ Object.create(null)))["." + l] = a, l;
    }
    const o = typeof t.all == "string" ? t.all : t.all ? i(t.all) : void 0, s = t.scope;
    this.scope = s instanceof qs ? (a) => a.prop(gp) == s.data : s ? (a) => a == s : void 0, this.style = uY(e.map((a) => ({
      tag: a.tag,
      class: a.class || i(Object.assign({}, a, { tag: null }))
    })), {
      all: o
    }).style, this.module = r ? new kc(r) : null, this.themeType = t.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, t) {
    return new C_(e, t || {});
  }
}
const rk = /* @__PURE__ */ Be.define(), xY = /* @__PURE__ */ Be.define({
  combine(n) {
    return n.length ? [n[0]] : null;
  }
});
function x2(n) {
  let e = n.facet(rk);
  return e.length ? e : n.facet(xY);
}
function JMe(n, e) {
  let t = [tDe], r;
  return n instanceof C_ && (n.module && t.push(Ne.styleModule.of(n.module)), r = n.themeType), e != null && e.fallback ? t.push(xY.of(n)) : r ? t.push(rk.computeN([Ne.darkTheme], (i) => i.facet(Ne.darkTheme) == (r == "dark") ? [n] : [])) : t.push(rk.of(n)), t;
}
class eDe {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Er(e.state), this.decorations = this.buildDeco(e, x2(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let t = Er(e.state), r = x2(e.state), i = r != x2(e.startState), { viewport: o } = e.view, s = e.changes.mapPos(this.decoratedTo, 1);
    t.length < o.to && !i && t.type == this.tree.type && s >= o.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = s) : (t != this.tree || e.viewportChanged || i) && (this.tree = t, this.decorations = this.buildDeco(e.view, r), this.decoratedTo = o.to);
  }
  buildDeco(e, t) {
    if (!t || !this.tree.length)
      return tt.none;
    let r = new Ec();
    for (let { from: i, to: o } of e.visibleRanges)
      SMe(this.tree, t, (s, a, l) => {
        r.add(s, a, this.markCache[l] || (this.markCache[l] = tt.mark({ class: l })));
      }, i, o);
    return r.finish();
  }
}
const tDe = /* @__PURE__ */ pd.high(/* @__PURE__ */ vr.fromClass(eDe, {
  decorations: (n) => n.decorations
})), nDe = /* @__PURE__ */ C_.define([
  {
    tag: ee.meta,
    color: "#404740"
  },
  {
    tag: ee.link,
    textDecoration: "underline"
  },
  {
    tag: ee.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: ee.emphasis,
    fontStyle: "italic"
  },
  {
    tag: ee.strong,
    fontWeight: "bold"
  },
  {
    tag: ee.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: ee.keyword,
    color: "#708"
  },
  {
    tag: [ee.atom, ee.bool, ee.url, ee.contentSeparator, ee.labelName],
    color: "#219"
  },
  {
    tag: [ee.literal, ee.inserted],
    color: "#164"
  },
  {
    tag: [ee.string, ee.deleted],
    color: "#a11"
  },
  {
    tag: [ee.regexp, ee.escape, /* @__PURE__ */ ee.special(ee.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ ee.definition(ee.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ ee.local(ee.variableName),
    color: "#30a"
  },
  {
    tag: [ee.typeName, ee.namespace],
    color: "#085"
  },
  {
    tag: ee.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ ee.special(ee.variableName), ee.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ ee.definition(ee.propertyName),
    color: "#00c"
  },
  {
    tag: ee.comment,
    color: "#940"
  },
  {
    tag: ee.invalid,
    color: "#f00"
  }
]), rDe = /* @__PURE__ */ Ne.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), SY = 1e4, _Y = "()[]{}", CY = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, {
      afterCursor: !0,
      brackets: _Y,
      maxScanDistance: SY,
      renderMatch: sDe
    });
  }
}), iDe = /* @__PURE__ */ tt.mark({ class: "cm-matchingBracket" }), oDe = /* @__PURE__ */ tt.mark({ class: "cm-nonmatchingBracket" });
function sDe(n) {
  let e = [], t = n.matched ? iDe : oDe;
  return e.push(t.range(n.start.from, n.start.to)), n.end && e.push(t.range(n.end.from, n.end.to)), e;
}
const aDe = /* @__PURE__ */ Wr.define({
  create() {
    return tt.none;
  },
  update(n, e) {
    if (!e.docChanged && !e.selection)
      return n;
    let t = [], r = e.state.facet(CY);
    for (let i of e.state.selection.ranges) {
      if (!i.empty)
        continue;
      let o = Za(e.state, i.head, -1, r) || i.head > 0 && Za(e.state, i.head - 1, 1, r) || r.afterCursor && (Za(e.state, i.head, 1, r) || i.head < e.state.doc.length && Za(e.state, i.head + 1, -1, r));
      o && (t = t.concat(r.renderMatch(o, e.state)));
    }
    return tt.set(t, !0);
  },
  provide: (n) => Ne.decorations.from(n)
}), lDe = [
  aDe,
  rDe
];
function uDe(n = {}) {
  return [CY.of(n), lDe];
}
const cDe = /* @__PURE__ */ new Lt();
function ik(n, e, t) {
  let r = n.prop(e < 0 ? Lt.openedBy : Lt.closedBy);
  if (r)
    return r;
  if (n.name.length == 1) {
    let i = t.indexOf(n.name);
    if (i > -1 && i % 2 == (e < 0 ? 1 : 0))
      return [t[i + e]];
  }
  return null;
}
function ok(n) {
  let e = n.type.prop(cDe);
  return e ? e(n.node) : n;
}
function Za(n, e, t, r = {}) {
  let i = r.maxScanDistance || SY, o = r.brackets || _Y, s = Er(n), a = s.resolveInner(e, t);
  for (let l = a; l; l = l.parent) {
    let u = ik(l.type, t, o);
    if (u && l.from < l.to) {
      let c = ok(l);
      if (c && (t > 0 ? e >= c.from && e < c.to : e > c.from && e <= c.to))
        return hDe(n, e, t, l, c, u, o);
    }
  }
  return fDe(n, e, t, s, a.type, i, o);
}
function hDe(n, e, t, r, i, o, s) {
  let a = r.parent, l = { from: i.from, to: i.to }, u = 0, c = a == null ? void 0 : a.cursor();
  if (c && (t < 0 ? c.childBefore(r.from) : c.childAfter(r.to)))
    do
      if (t < 0 ? c.to <= r.from : c.from >= r.to) {
        if (u == 0 && o.indexOf(c.type.name) > -1 && c.from < c.to) {
          let h = ok(c);
          return { start: l, end: h ? { from: h.from, to: h.to } : void 0, matched: !0 };
        } else if (ik(c.type, t, s))
          u++;
        else if (ik(c.type, -t, s)) {
          if (u == 0) {
            let h = ok(c);
            return {
              start: l,
              end: h && h.from < h.to ? { from: h.from, to: h.to } : void 0,
              matched: !1
            };
          }
          u--;
        }
      }
    while (t < 0 ? c.prevSibling() : c.nextSibling());
  return { start: l, matched: !1 };
}
function fDe(n, e, t, r, i, o, s) {
  let a = t < 0 ? n.sliceDoc(e - 1, e) : n.sliceDoc(e, e + 1), l = s.indexOf(a);
  if (l < 0 || l % 2 == 0 != t > 0)
    return null;
  let u = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e }, c = n.doc.iterRange(e, t > 0 ? n.doc.length : 0), h = 0;
  for (let f = 0; !c.next().done && f <= o; ) {
    let d = c.value;
    t < 0 && (f += d.length);
    let p = e + f * t;
    for (let g = t > 0 ? 0 : d.length - 1, v = t > 0 ? d.length : -1; g != v; g += t) {
      let m = s.indexOf(d[g]);
      if (!(m < 0 || r.resolveInner(p + g, 1).type != i))
        if (m % 2 == 0 == t > 0)
          h++;
        else {
          if (h == 1)
            return { start: u, end: { from: p + g, to: p + g + 1 }, matched: m >> 1 == l >> 1 };
          h--;
        }
    }
    t > 0 && (f += d.length);
  }
  return c.done ? { start: u, matched: !1 } : null;
}
const dDe = /* @__PURE__ */ Object.create(null), BB = [po.none], VB = [], zB = /* @__PURE__ */ Object.create(null), pDe = /* @__PURE__ */ Object.create(null);
for (let [n, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  pDe[n] = /* @__PURE__ */ gDe(dDe, e);
function S2(n, e) {
  VB.indexOf(n) > -1 || (VB.push(n), console.warn(e));
}
function gDe(n, e) {
  let t = [];
  for (let a of e.split(" ")) {
    let l = [];
    for (let u of a.split(".")) {
      let c = n[u] || ee[u];
      c ? typeof c == "function" ? l.length ? l = l.map(c) : S2(u, `Modifier ${u} used at start of tag`) : l.length ? S2(u, `Tag ${u} used as modifier`) : l = Array.isArray(c) ? c : [c] : S2(u, `Unknown highlighting tag ${u}`);
    }
    for (let u of l)
      t.push(u);
  }
  if (!t.length)
    return 0;
  let r = e.replace(/ /g, "_"), i = r + " " + t.map((a) => a.id), o = zB[i];
  if (o)
    return o.id;
  let s = zB[i] = po.define({
    id: BB.length,
    name: r,
    props: [UL({ [r]: t })]
  });
  return BB.push(s), s.id;
}
Mn.RTL, Mn.LTR;
const vDe = (n) => {
  let { state: e } = n, t = e.doc.lineAt(e.selection.main.from), r = oI(n.state, t.from);
  return r.line ? mDe(n) : r.block ? bDe(n) : !1;
};
function iI(n, e) {
  return ({ state: t, dispatch: r }) => {
    if (t.readOnly)
      return !1;
    let i = n(e, t);
    return i ? (r(t.update(i)), !0) : !1;
  };
}
const mDe = /* @__PURE__ */ iI(
  xDe,
  0
  /* CommentOption.Toggle */
), yDe = /* @__PURE__ */ iI(
  AY,
  0
  /* CommentOption.Toggle */
), bDe = /* @__PURE__ */ iI(
  (n, e) => AY(n, e, wDe(e)),
  0
  /* CommentOption.Toggle */
);
function oI(n, e) {
  let t = n.languageDataAt("commentTokens", e);
  return t.length ? t[0] : {};
}
const $v = 50;
function ODe(n, { open: e, close: t }, r, i) {
  let o = n.sliceDoc(r - $v, r), s = n.sliceDoc(i, i + $v), a = /\s*$/.exec(o)[0].length, l = /^\s*/.exec(s)[0].length, u = o.length - a;
  if (o.slice(u - e.length, u) == e && s.slice(l, l + t.length) == t)
    return {
      open: { pos: r - a, margin: a && 1 },
      close: { pos: i + l, margin: l && 1 }
    };
  let c, h;
  i - r <= 2 * $v ? c = h = n.sliceDoc(r, i) : (c = n.sliceDoc(r, r + $v), h = n.sliceDoc(i - $v, i));
  let f = /^\s*/.exec(c)[0].length, d = /\s*$/.exec(h)[0].length, p = h.length - d - t.length;
  return c.slice(f, f + e.length) == e && h.slice(p, p + t.length) == t ? {
    open: {
      pos: r + f + e.length,
      margin: /\s/.test(c.charAt(f + e.length)) ? 1 : 0
    },
    close: {
      pos: i - d - t.length,
      margin: /\s/.test(h.charAt(p - 1)) ? 1 : 0
    }
  } : null;
}
function wDe(n) {
  let e = [];
  for (let t of n.selection.ranges) {
    let r = n.doc.lineAt(t.from), i = t.to <= r.to ? r : n.doc.lineAt(t.to), o = e.length - 1;
    o >= 0 && e[o].to > r.from ? e[o].to = i.to : e.push({ from: r.from + /^\s*/.exec(r.text)[0].length, to: i.to });
  }
  return e;
}
function AY(n, e, t = e.selection.ranges) {
  let r = t.map((o) => oI(e, o.from).block);
  if (!r.every((o) => o))
    return null;
  let i = t.map((o, s) => ODe(e, r[s], o.from, o.to));
  if (n != 2 && !i.every((o) => o))
    return { changes: e.changes(t.map((o, s) => i[s] ? [] : [{ from: o.from, insert: r[s].open + " " }, { from: o.to, insert: " " + r[s].close }])) };
  if (n != 1 && i.some((o) => o)) {
    let o = [];
    for (let s = 0, a; s < i.length; s++)
      if (a = i[s]) {
        let l = r[s], { open: u, close: c } = a;
        o.push({ from: u.pos - l.open.length, to: u.pos + u.margin }, { from: c.pos - c.margin, to: c.pos + l.close.length });
      }
    return { changes: o };
  }
  return null;
}
function xDe(n, e, t = e.selection.ranges) {
  let r = [], i = -1;
  for (let { from: o, to: s } of t) {
    let a = r.length, l = 1e9, u = oI(e, o).line;
    if (u) {
      for (let c = o; c <= s; ) {
        let h = e.doc.lineAt(c);
        if (h.from > i && (o == s || s > h.from)) {
          i = h.from;
          let f = /^\s*/.exec(h.text)[0].length, d = f == h.length, p = h.text.slice(f, f + u.length) == u ? f : -1;
          f < h.text.length && f < l && (l = f), r.push({ line: h, comment: p, token: u, indent: f, empty: d, single: !1 });
        }
        c = h.to + 1;
      }
      if (l < 1e9)
        for (let c = a; c < r.length; c++)
          r[c].indent < r[c].line.text.length && (r[c].indent = l);
      r.length == a + 1 && (r[a].single = !0);
    }
  }
  if (n != 2 && r.some((o) => o.comment < 0 && (!o.empty || o.single))) {
    let o = [];
    for (let { line: a, token: l, indent: u, empty: c, single: h } of r)
      (h || !c) && o.push({ from: a.from + u, insert: l + " " });
    let s = e.changes(o);
    return { changes: s, selection: e.selection.map(s, 1) };
  } else if (n != 1 && r.some((o) => o.comment >= 0)) {
    let o = [];
    for (let { line: s, comment: a, token: l } of r)
      if (a >= 0) {
        let u = s.from + a, c = u + l.length;
        s.text[c - s.from] == " " && c++, o.push({ from: u, to: c });
      }
    return { changes: o };
  }
  return null;
}
const sk = /* @__PURE__ */ gu.define(), SDe = /* @__PURE__ */ gu.define(), _De = /* @__PURE__ */ Be.define(), TY = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, t) => t
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, t) => (r, i) => e(r, i) || t(r, i)
    });
  }
}), PY = /* @__PURE__ */ Wr.define({
  create() {
    return Wa.empty;
  },
  update(n, e) {
    let t = e.state.facet(TY), r = e.annotation(sk);
    if (r) {
      let l = ao.fromTransaction(e, r.selection), u = r.side, c = u == 0 ? n.undone : n.done;
      return l ? c = Sx(c, c.length, t.minDepth, l) : c = MY(c, e.startState.selection), new Wa(u == 0 ? r.rest : c, u == 0 ? c : r.rest);
    }
    let i = e.annotation(SDe);
    if ((i == "full" || i == "before") && (n = n.isolate()), e.annotation(fr.addToHistory) === !1)
      return e.changes.empty ? n : n.addMapping(e.changes.desc);
    let o = ao.fromTransaction(e), s = e.annotation(fr.time), a = e.annotation(fr.userEvent);
    return o ? n = n.addChanges(o, s, a, t, e) : e.selection && (n = n.addSelection(e.startState.selection, s, a, t.newGroupDelay)), (i == "full" || i == "after") && (n = n.isolate()), n;
  },
  toJSON(n) {
    return { done: n.done.map((e) => e.toJSON()), undone: n.undone.map((e) => e.toJSON()) };
  },
  fromJSON(n) {
    return new Wa(n.done.map(ao.fromJSON), n.undone.map(ao.fromJSON));
  }
});
function CDe(n = {}) {
  return [
    PY,
    TY.of(n),
    Ne.domEventHandlers({
      beforeinput(e, t) {
        let r = e.inputType == "historyUndo" ? EY : e.inputType == "historyRedo" ? ak : null;
        return r ? (e.preventDefault(), r(t)) : !1;
      }
    })
  ];
}
function A_(n, e) {
  return function({ state: t, dispatch: r }) {
    if (!e && t.readOnly)
      return !1;
    let i = t.field(PY, !1);
    if (!i)
      return !1;
    let o = i.pop(n, t, e);
    return o ? (r(o), !0) : !1;
  };
}
const EY = /* @__PURE__ */ A_(0, !1), ak = /* @__PURE__ */ A_(1, !1), ADe = /* @__PURE__ */ A_(0, !0), TDe = /* @__PURE__ */ A_(1, !0);
class ao {
  constructor(e, t, r, i, o) {
    this.changes = e, this.effects = t, this.mapped = r, this.startSelection = i, this.selectionsAfter = o;
  }
  setSelAfter(e) {
    return new ao(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, t, r;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(),
      startSelection: (r = this.startSelection) === null || r === void 0 ? void 0 : r.toJSON(),
      selectionsAfter: this.selectionsAfter.map((i) => i.toJSON())
    };
  }
  static fromJSON(e) {
    return new ao(e.changes && _r.fromJSON(e.changes), [], e.mapped && nl.fromJSON(e.mapped), e.startSelection && ce.fromJSON(e.startSelection), e.selectionsAfter.map(ce.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, t) {
    let r = fs;
    for (let i of e.startState.facet(_De)) {
      let o = i(e);
      o.length && (r = r.concat(o));
    }
    return !r.length && e.changes.empty ? null : new ao(e.changes.invert(e.startState.doc), r, void 0, t || e.startState.selection, fs);
  }
  static selection(e) {
    return new ao(void 0, fs, void 0, void 0, e);
  }
}
function Sx(n, e, t, r) {
  let i = e + 1 > t + 20 ? e - t - 1 : 0, o = n.slice(i, e);
  return o.push(r), o;
}
function PDe(n, e) {
  let t = [], r = !1;
  return n.iterChangedRanges((i, o) => t.push(i, o)), e.iterChangedRanges((i, o, s, a) => {
    for (let l = 0; l < t.length; ) {
      let u = t[l++], c = t[l++];
      a >= u && s <= c && (r = !0);
    }
  }), r;
}
function EDe(n, e) {
  return n.ranges.length == e.ranges.length && n.ranges.filter((t, r) => t.empty != e.ranges[r].empty).length === 0;
}
function kY(n, e) {
  return n.length ? e.length ? n.concat(e) : n : e;
}
const fs = [], kDe = 200;
function MY(n, e) {
  if (n.length) {
    let t = n[n.length - 1], r = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - kDe));
    return r.length && r[r.length - 1].eq(e) ? n : (r.push(e), Sx(n, n.length - 1, 1e9, t.setSelAfter(r)));
  } else
    return [ao.selection([e])];
}
function MDe(n) {
  let e = n[n.length - 1], t = n.slice();
  return t[n.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), t;
}
function _2(n, e) {
  if (!n.length)
    return n;
  let t = n.length, r = fs;
  for (; t; ) {
    let i = DDe(n[t - 1], e, r);
    if (i.changes && !i.changes.empty || i.effects.length) {
      let o = n.slice(0, t);
      return o[t - 1] = i, o;
    } else
      e = i.mapped, t--, r = i.selectionsAfter;
  }
  return r.length ? [ao.selection(r)] : fs;
}
function DDe(n, e, t) {
  let r = kY(n.selectionsAfter.length ? n.selectionsAfter.map((a) => a.map(e)) : fs, t);
  if (!n.changes)
    return ao.selection(r);
  let i = n.changes.map(e), o = e.mapDesc(n.changes, !0), s = n.mapped ? n.mapped.composeDesc(o) : o;
  return new ao(i, wt.mapEffects(n.effects, e), s, n.startSelection.map(o), r);
}
const LDe = /^(input\.type|delete)($|\.)/;
class Wa {
  constructor(e, t, r = 0, i = void 0) {
    this.done = e, this.undone = t, this.prevTime = r, this.prevUserEvent = i;
  }
  isolate() {
    return this.prevTime ? new Wa(this.done, this.undone) : this;
  }
  addChanges(e, t, r, i, o) {
    let s = this.done, a = s[s.length - 1];
    return a && a.changes && !a.changes.empty && e.changes && (!r || LDe.test(r)) && (!a.selectionsAfter.length && t - this.prevTime < i.newGroupDelay && i.joinToEvent(o, PDe(a.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    r == "input.type.compose") ? s = Sx(s, s.length - 1, i.minDepth, new ao(e.changes.compose(a.changes), kY(e.effects, a.effects), a.mapped, a.startSelection, fs)) : s = Sx(s, s.length, i.minDepth, e), new Wa(s, fs, t, r);
  }
  addSelection(e, t, r, i) {
    let o = this.done.length ? this.done[this.done.length - 1].selectionsAfter : fs;
    return o.length > 0 && t - this.prevTime < i && r == this.prevUserEvent && r && /^select($|\.)/.test(r) && EDe(o[o.length - 1], e) ? this : new Wa(MY(this.done, e), this.undone, t, r);
  }
  addMapping(e) {
    return new Wa(_2(this.done, e), _2(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, t, r) {
    let i = e == 0 ? this.done : this.undone;
    if (i.length == 0)
      return null;
    let o = i[i.length - 1], s = o.selectionsAfter[0] || t.selection;
    if (r && o.selectionsAfter.length)
      return t.update({
        selection: o.selectionsAfter[o.selectionsAfter.length - 1],
        annotations: sk.of({ side: e, rest: MDe(i), selection: s }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (o.changes) {
      let a = i.length == 1 ? fs : i.slice(0, i.length - 1);
      return o.mapped && (a = _2(a, o.mapped)), t.update({
        changes: o.changes,
        selection: o.startSelection,
        effects: o.effects,
        annotations: sk.of({ side: e, rest: a, selection: s }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
Wa.empty = /* @__PURE__ */ new Wa(fs, fs);
const IDe = [
  { key: "Mod-z", run: EY, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: ak, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: ak, preventDefault: !0 },
  { key: "Mod-u", run: ADe, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: TDe, preventDefault: !0 }
];
function rv(n, e) {
  return ce.create(n.ranges.map(e), n.mainIndex);
}
function wl(n, e) {
  return n.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function va({ state: n, dispatch: e }, t) {
  let r = rv(n.selection, t);
  return r.eq(n.selection, !0) ? !1 : (e(wl(n, r)), !0);
}
function T_(n, e) {
  return ce.cursor(e ? n.to : n.from);
}
function DY(n, e) {
  return va(n, (t) => t.empty ? n.moveByChar(t, e) : T_(t, e));
}
function Ai(n) {
  return n.textDirectionAt(n.state.selection.main.head) == Mn.LTR;
}
const LY = (n) => DY(n, !Ai(n)), IY = (n) => DY(n, Ai(n));
function RY(n, e) {
  return va(n, (t) => t.empty ? n.moveByGroup(t, e) : T_(t, e));
}
const RDe = (n) => RY(n, !Ai(n)), $De = (n) => RY(n, Ai(n));
function NDe(n, e, t) {
  if (e.type.prop(t))
    return !0;
  let r = e.to - e.from;
  return r && (r > 2 || /[^\s,.;:]/.test(n.sliceDoc(e.from, e.to))) || e.firstChild;
}
function P_(n, e, t) {
  let r = Er(n).resolveInner(e.head), i = t ? Lt.closedBy : Lt.openedBy;
  for (let l = e.head; ; ) {
    let u = t ? r.childAfter(l) : r.childBefore(l);
    if (!u)
      break;
    NDe(n, u, i) ? r = u : l = t ? u.to : u.from;
  }
  let o = r.type.prop(i), s, a;
  return o && (s = t ? Za(n, r.from, 1) : Za(n, r.to, -1)) && s.matched ? a = t ? s.end.to : s.end.from : a = t ? r.to : r.from, ce.cursor(a, t ? -1 : 1);
}
const BDe = (n) => va(n, (e) => P_(n.state, e, !Ai(n))), VDe = (n) => va(n, (e) => P_(n.state, e, Ai(n)));
function $Y(n, e) {
  return va(n, (t) => {
    if (!t.empty)
      return T_(t, e);
    let r = n.moveVertically(t, e);
    return r.head != t.head ? r : n.moveToLineBoundary(t, e);
  });
}
const NY = (n) => $Y(n, !1), BY = (n) => $Y(n, !0);
function VY(n) {
  let e = n.scrollDOM.clientHeight < n.scrollDOM.scrollHeight - 2, t = 0, r = 0, i;
  if (e) {
    for (let o of n.state.facet(Ne.scrollMargins)) {
      let s = o(n);
      s != null && s.top && (t = Math.max(s == null ? void 0 : s.top, t)), s != null && s.bottom && (r = Math.max(s == null ? void 0 : s.bottom, r));
    }
    i = n.scrollDOM.clientHeight - t - r;
  } else
    i = (n.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: t,
    marginBottom: r,
    selfScroll: e,
    height: Math.max(n.defaultLineHeight, i - 5)
  };
}
function zY(n, e) {
  let t = VY(n), { state: r } = n, i = rv(r.selection, (s) => s.empty ? n.moveVertically(s, e, t.height) : T_(s, e));
  if (i.eq(r.selection))
    return !1;
  let o;
  if (t.selfScroll) {
    let s = n.coordsAtPos(r.selection.main.head), a = n.scrollDOM.getBoundingClientRect(), l = a.top + t.marginTop, u = a.bottom - t.marginBottom;
    s && s.top > l && s.bottom < u && (o = Ne.scrollIntoView(i.main.head, { y: "start", yMargin: s.top - l }));
  }
  return n.dispatch(wl(r, i), { effects: o }), !0;
}
const FB = (n) => zY(n, !1), lk = (n) => zY(n, !0);
function nh(n, e, t) {
  let r = n.lineBlockAt(e.head), i = n.moveToLineBoundary(e, t);
  if (i.head == e.head && i.head != (t ? r.to : r.from) && (i = n.moveToLineBoundary(e, t, !1)), !t && i.head == r.from && r.length) {
    let o = /^\s*/.exec(n.state.sliceDoc(r.from, Math.min(r.from + 100, r.to)))[0].length;
    o && e.head != r.from + o && (i = ce.cursor(r.from + o));
  }
  return i;
}
const zDe = (n) => va(n, (e) => nh(n, e, !0)), FDe = (n) => va(n, (e) => nh(n, e, !1)), QDe = (n) => va(n, (e) => nh(n, e, !Ai(n))), ZDe = (n) => va(n, (e) => nh(n, e, Ai(n))), WDe = (n) => va(n, (e) => ce.cursor(n.lineBlockAt(e.head).from, 1)), GDe = (n) => va(n, (e) => ce.cursor(n.lineBlockAt(e.head).to, -1));
function jDe(n, e, t) {
  let r = !1, i = rv(n.selection, (o) => {
    let s = Za(n, o.head, -1) || Za(n, o.head, 1) || o.head > 0 && Za(n, o.head - 1, 1) || o.head < n.doc.length && Za(n, o.head + 1, -1);
    if (!s || !s.end)
      return o;
    r = !0;
    let a = s.start.from == o.head ? s.end.to : s.end.from;
    return t ? ce.range(o.anchor, a) : ce.cursor(a);
  });
  return r ? (e(wl(n, i)), !0) : !1;
}
const HDe = ({ state: n, dispatch: e }) => jDe(n, e, !1);
function Ts(n, e) {
  let t = rv(n.state.selection, (r) => {
    let i = e(r);
    return ce.range(r.anchor, i.head, i.goalColumn, i.bidiLevel || void 0);
  });
  return t.eq(n.state.selection) ? !1 : (n.dispatch(wl(n.state, t)), !0);
}
function FY(n, e) {
  return Ts(n, (t) => n.moveByChar(t, e));
}
const QY = (n) => FY(n, !Ai(n)), ZY = (n) => FY(n, Ai(n));
function WY(n, e) {
  return Ts(n, (t) => n.moveByGroup(t, e));
}
const qDe = (n) => WY(n, !Ai(n)), YDe = (n) => WY(n, Ai(n)), XDe = (n) => Ts(n, (e) => P_(n.state, e, !Ai(n))), UDe = (n) => Ts(n, (e) => P_(n.state, e, Ai(n)));
function GY(n, e) {
  return Ts(n, (t) => n.moveVertically(t, e));
}
const jY = (n) => GY(n, !1), HY = (n) => GY(n, !0);
function qY(n, e) {
  return Ts(n, (t) => n.moveVertically(t, e, VY(n).height));
}
const QB = (n) => qY(n, !1), ZB = (n) => qY(n, !0), KDe = (n) => Ts(n, (e) => nh(n, e, !0)), JDe = (n) => Ts(n, (e) => nh(n, e, !1)), eLe = (n) => Ts(n, (e) => nh(n, e, !Ai(n))), tLe = (n) => Ts(n, (e) => nh(n, e, Ai(n))), nLe = (n) => Ts(n, (e) => ce.cursor(n.lineBlockAt(e.head).from)), rLe = (n) => Ts(n, (e) => ce.cursor(n.lineBlockAt(e.head).to)), WB = ({ state: n, dispatch: e }) => (e(wl(n, { anchor: 0 })), !0), GB = ({ state: n, dispatch: e }) => (e(wl(n, { anchor: n.doc.length })), !0), jB = ({ state: n, dispatch: e }) => (e(wl(n, { anchor: n.selection.main.anchor, head: 0 })), !0), HB = ({ state: n, dispatch: e }) => (e(wl(n, { anchor: n.selection.main.anchor, head: n.doc.length })), !0), iLe = ({ state: n, dispatch: e }) => (e(n.update({ selection: { anchor: 0, head: n.doc.length }, userEvent: "select" })), !0), oLe = ({ state: n, dispatch: e }) => {
  let t = E_(n).map(({ from: r, to: i }) => ce.range(r, Math.min(i + 1, n.doc.length)));
  return e(n.update({ selection: ce.create(t), userEvent: "select" })), !0;
}, sLe = ({ state: n, dispatch: e }) => {
  let t = rv(n.selection, (r) => {
    var i;
    let o = Er(n).resolveStack(r.from, 1);
    for (let s = o; s; s = s.next) {
      let { node: a } = s;
      if ((a.from < r.from && a.to >= r.to || a.to > r.to && a.from <= r.from) && (!((i = a.parent) === null || i === void 0) && i.parent))
        return ce.range(a.to, a.from);
    }
    return r;
  });
  return e(wl(n, t)), !0;
}, aLe = ({ state: n, dispatch: e }) => {
  let t = n.selection, r = null;
  return t.ranges.length > 1 ? r = ce.create([t.main]) : t.main.empty || (r = ce.create([ce.cursor(t.main.head)])), r ? (e(wl(n, r)), !0) : !1;
};
function gb(n, e) {
  if (n.state.readOnly)
    return !1;
  let t = "delete.selection", { state: r } = n, i = r.changeByRange((o) => {
    let { from: s, to: a } = o;
    if (s == a) {
      let l = e(o);
      l < s ? (t = "delete.backward", l = S1(n, l, !1)) : l > s && (t = "delete.forward", l = S1(n, l, !0)), s = Math.min(s, l), a = Math.max(a, l);
    } else
      s = S1(n, s, !1), a = S1(n, a, !0);
    return s == a ? { range: o } : { changes: { from: s, to: a }, range: ce.cursor(s, s < o.head ? -1 : 1) };
  });
  return i.changes.empty ? !1 : (n.dispatch(r.update(i, {
    scrollIntoView: !0,
    userEvent: t,
    effects: t == "delete.selection" ? Ne.announce.of(r.phrase("Selection deleted")) : void 0
  })), !0);
}
function S1(n, e, t) {
  if (n instanceof Ne)
    for (let r of n.state.facet(Ne.atomicRanges).map((i) => i(n)))
      r.between(e, e, (i, o) => {
        i < e && o > e && (e = t ? o : i);
      });
  return e;
}
const YY = (n, e) => gb(n, (t) => {
  let r = t.from, { state: i } = n, o = i.doc.lineAt(r), s, a;
  if (!e && r > o.from && r < o.from + 200 && !/[^ \t]/.test(s = o.text.slice(0, r - o.from))) {
    if (s[s.length - 1] == "	")
      return r - 1;
    let l = nv(s, i.tabSize), u = l % bx(i) || bx(i);
    for (let c = 0; c < u && s[s.length - 1 - c] == " "; c++)
      r--;
    a = r;
  } else
    a = ni(o.text, r - o.from, e, e) + o.from, a == r && o.number != (e ? i.doc.lines : 1) ? a += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(o.text.slice(a - o.from, r - o.from)) && (a = ni(o.text, a - o.from, !1, !1) + o.from);
  return a;
}), uk = (n) => YY(n, !1), XY = (n) => YY(n, !0), UY = (n, e) => gb(n, (t) => {
  let r = t.head, { state: i } = n, o = i.doc.lineAt(r), s = i.charCategorizer(r);
  for (let a = null; ; ) {
    if (r == (e ? o.to : o.from)) {
      r == t.head && o.number != (e ? i.doc.lines : 1) && (r += e ? 1 : -1);
      break;
    }
    let l = ni(o.text, r - o.from, e) + o.from, u = o.text.slice(Math.min(r, l) - o.from, Math.max(r, l) - o.from), c = s(u);
    if (a != null && c != a)
      break;
    (u != " " || r != t.head) && (a = c), r = l;
  }
  return r;
}), KY = (n) => UY(n, !1), lLe = (n) => UY(n, !0), uLe = (n) => gb(n, (e) => {
  let t = n.lineBlockAt(e.head).to;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), cLe = (n) => gb(n, (e) => {
  let t = n.moveToLineBoundary(e, !1).head;
  return e.head > t ? t : Math.max(0, e.head - 1);
}), hLe = (n) => gb(n, (e) => {
  let t = n.moveToLineBoundary(e, !0).head;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), fLe = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((r) => ({
    changes: { from: r.from, to: r.to, insert: Ut.of(["", ""]) },
    range: ce.cursor(r.from)
  }));
  return e(n.update(t, { scrollIntoView: !0, userEvent: "input" })), !0;
}, dLe = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((r) => {
    if (!r.empty || r.from == 0 || r.from == n.doc.length)
      return { range: r };
    let i = r.from, o = n.doc.lineAt(i), s = i == o.from ? i - 1 : ni(o.text, i - o.from, !1) + o.from, a = i == o.to ? i + 1 : ni(o.text, i - o.from, !0) + o.from;
    return {
      changes: { from: s, to: a, insert: n.doc.slice(i, a).append(n.doc.slice(s, i)) },
      range: ce.cursor(a)
    };
  });
  return t.changes.empty ? !1 : (e(n.update(t, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function E_(n) {
  let e = [], t = -1;
  for (let r of n.selection.ranges) {
    let i = n.doc.lineAt(r.from), o = n.doc.lineAt(r.to);
    if (!r.empty && r.to == o.from && (o = n.doc.lineAt(r.to - 1)), t >= i.number) {
      let s = e[e.length - 1];
      s.to = o.to, s.ranges.push(r);
    } else
      e.push({ from: i.from, to: o.to, ranges: [r] });
    t = o.number + 1;
  }
  return e;
}
function JY(n, e, t) {
  if (n.readOnly)
    return !1;
  let r = [], i = [];
  for (let o of E_(n)) {
    if (t ? o.to == n.doc.length : o.from == 0)
      continue;
    let s = n.doc.lineAt(t ? o.to + 1 : o.from - 1), a = s.length + 1;
    if (t) {
      r.push({ from: o.to, to: s.to }, { from: o.from, insert: s.text + n.lineBreak });
      for (let l of o.ranges)
        i.push(ce.range(Math.min(n.doc.length, l.anchor + a), Math.min(n.doc.length, l.head + a)));
    } else {
      r.push({ from: s.from, to: o.from }, { from: o.to, insert: n.lineBreak + s.text });
      for (let l of o.ranges)
        i.push(ce.range(l.anchor - a, l.head - a));
    }
  }
  return r.length ? (e(n.update({
    changes: r,
    scrollIntoView: !0,
    selection: ce.create(i, n.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const pLe = ({ state: n, dispatch: e }) => JY(n, e, !1), gLe = ({ state: n, dispatch: e }) => JY(n, e, !0);
function eX(n, e, t) {
  if (n.readOnly)
    return !1;
  let r = [];
  for (let i of E_(n))
    t ? r.push({ from: i.from, insert: n.doc.slice(i.from, i.to) + n.lineBreak }) : r.push({ from: i.to, insert: n.lineBreak + n.doc.slice(i.from, i.to) });
  return e(n.update({ changes: r, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const vLe = ({ state: n, dispatch: e }) => eX(n, e, !1), mLe = ({ state: n, dispatch: e }) => eX(n, e, !0), yLe = (n) => {
  if (n.state.readOnly)
    return !1;
  let { state: e } = n, t = e.changes(E_(e).map(({ from: i, to: o }) => (i > 0 ? i-- : o < e.doc.length && o++, { from: i, to: o }))), r = rv(e.selection, (i) => n.moveVertically(i, !0)).map(t);
  return n.dispatch({ changes: t, selection: r, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function bLe(n, e) {
  if (/\(\)|\[\]|\{\}/.test(n.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let t = Er(n).resolveInner(e), r = t.childBefore(e), i = t.childAfter(e), o;
  return r && i && r.to <= e && i.from >= e && (o = r.type.prop(Lt.closedBy)) && o.indexOf(i.name) > -1 && n.doc.lineAt(r.to).from == n.doc.lineAt(i.from).from && !/\S/.test(n.sliceDoc(r.to, i.from)) ? { from: r.to, to: i.from } : null;
}
const OLe = /* @__PURE__ */ tX(!1), wLe = /* @__PURE__ */ tX(!0);
function tX(n) {
  return ({ state: e, dispatch: t }) => {
    if (e.readOnly)
      return !1;
    let r = e.changeByRange((i) => {
      let { from: o, to: s } = i, a = e.doc.lineAt(o), l = !n && o == s && bLe(e, o);
      n && (o = s = (s <= a.to ? a : e.doc.lineAt(s)).to);
      let u = new S_(e, { simulateBreak: o, simulateDoubleBreak: !!l }), c = JL(u, o);
      for (c == null && (c = nv(/^\s*/.exec(e.doc.lineAt(o).text)[0], e.tabSize)); s < a.to && /\s/.test(a.text[s - a.from]); )
        s++;
      l ? { from: o, to: s } = l : o > a.from && o < a.from + 100 && !/\S/.test(a.text.slice(0, o)) && (o = a.from);
      let h = ["", l0(e, c)];
      return l && h.push(l0(e, u.lineIndent(a.from, -1))), {
        changes: { from: o, to: s, insert: Ut.of(h) },
        range: ce.cursor(o + 1 + h[1].length)
      };
    });
    return t(e.update(r, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function sI(n, e) {
  let t = -1;
  return n.changeByRange((r) => {
    let i = [];
    for (let s = r.from; s <= r.to; ) {
      let a = n.doc.lineAt(s);
      a.number > t && (r.empty || r.to > a.from) && (e(a, i, r), t = a.number), s = a.to + 1;
    }
    let o = n.changes(i);
    return {
      changes: i,
      range: ce.range(o.mapPos(r.anchor, 1), o.mapPos(r.head, 1))
    };
  });
}
const xLe = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = /* @__PURE__ */ Object.create(null), r = new S_(n, { overrideIndentation: (o) => {
    let s = t[o];
    return s ?? -1;
  } }), i = sI(n, (o, s, a) => {
    let l = JL(r, o.from);
    if (l == null)
      return;
    /\S/.test(o.text) || (l = 0);
    let u = /^\s*/.exec(o.text)[0], c = l0(n, l);
    (u != c || a.from < o.from + u.length) && (t[o.from] = l, s.push({ from: o.from, to: o.from + u.length, insert: c }));
  });
  return i.changes.empty || e(n.update(i, { userEvent: "indent" })), !0;
}, SLe = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(sI(n, (t, r) => {
  r.push({ from: t.from, insert: n.facet(x_) });
}), { userEvent: "input.indent" })), !0), _Le = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(sI(n, (t, r) => {
  let i = /^\s*/.exec(t.text)[0];
  if (!i)
    return;
  let o = nv(i, n.tabSize), s = 0, a = l0(n, Math.max(0, o - bx(n)));
  for (; s < i.length && s < a.length && i.charCodeAt(s) == a.charCodeAt(s); )
    s++;
  r.push({ from: t.from + s, to: t.from + i.length, insert: a.slice(s) });
}), { userEvent: "delete.dedent" })), !0), CLe = [
  { key: "Ctrl-b", run: LY, shift: QY, preventDefault: !0 },
  { key: "Ctrl-f", run: IY, shift: ZY },
  { key: "Ctrl-p", run: NY, shift: jY },
  { key: "Ctrl-n", run: BY, shift: HY },
  { key: "Ctrl-a", run: WDe, shift: nLe },
  { key: "Ctrl-e", run: GDe, shift: rLe },
  { key: "Ctrl-d", run: XY },
  { key: "Ctrl-h", run: uk },
  { key: "Ctrl-k", run: uLe },
  { key: "Ctrl-Alt-h", run: KY },
  { key: "Ctrl-o", run: fLe },
  { key: "Ctrl-t", run: dLe },
  { key: "Ctrl-v", run: lk }
], ALe = /* @__PURE__ */ [
  { key: "ArrowLeft", run: LY, shift: QY, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: RDe, shift: qDe, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: QDe, shift: eLe, preventDefault: !0 },
  { key: "ArrowRight", run: IY, shift: ZY, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: $De, shift: YDe, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: ZDe, shift: tLe, preventDefault: !0 },
  { key: "ArrowUp", run: NY, shift: jY, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: WB, shift: jB },
  { mac: "Ctrl-ArrowUp", run: FB, shift: QB },
  { key: "ArrowDown", run: BY, shift: HY, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: GB, shift: HB },
  { mac: "Ctrl-ArrowDown", run: lk, shift: ZB },
  { key: "PageUp", run: FB, shift: QB },
  { key: "PageDown", run: lk, shift: ZB },
  { key: "Home", run: FDe, shift: JDe, preventDefault: !0 },
  { key: "Mod-Home", run: WB, shift: jB },
  { key: "End", run: zDe, shift: KDe, preventDefault: !0 },
  { key: "Mod-End", run: GB, shift: HB },
  { key: "Enter", run: OLe },
  { key: "Mod-a", run: iLe },
  { key: "Backspace", run: uk, shift: uk },
  { key: "Delete", run: XY },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: KY },
  { key: "Mod-Delete", mac: "Alt-Delete", run: lLe },
  { mac: "Mod-Backspace", run: cLe },
  { mac: "Mod-Delete", run: hLe }
].concat(/* @__PURE__ */ CLe.map((n) => ({ mac: n.key, run: n.run, shift: n.shift }))), TLe = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: BDe, shift: XDe },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: VDe, shift: UDe },
  { key: "Alt-ArrowUp", run: pLe },
  { key: "Shift-Alt-ArrowUp", run: vLe },
  { key: "Alt-ArrowDown", run: gLe },
  { key: "Shift-Alt-ArrowDown", run: mLe },
  { key: "Escape", run: aLe },
  { key: "Mod-Enter", run: wLe },
  { key: "Alt-l", mac: "Ctrl-l", run: oLe },
  { key: "Mod-i", run: sLe, preventDefault: !0 },
  { key: "Mod-[", run: _Le },
  { key: "Mod-]", run: SLe },
  { key: "Mod-Alt-\\", run: xLe },
  { key: "Shift-Mod-k", run: yLe },
  { key: "Shift-Mod-\\", run: HDe },
  { key: "Mod-/", run: vDe },
  { key: "Alt-A", run: yDe }
].concat(ALe);
function bn() {
  var n = arguments[0];
  typeof n == "string" && (n = document.createElement(n));
  var e = 1, t = arguments[1];
  if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
    for (var r in t)
      if (Object.prototype.hasOwnProperty.call(t, r)) {
        var i = t[r];
        typeof i == "string" ? n.setAttribute(r, i) : i != null && (n[r] = i);
      }
    e++;
  }
  for (; e < arguments.length; e++)
    nX(n, arguments[e]);
  return n;
}
function nX(n, e) {
  if (typeof e == "string")
    n.appendChild(document.createTextNode(e));
  else if (e != null)
    if (e.nodeType != null)
      n.appendChild(e);
    else if (Array.isArray(e))
      for (var t = 0; t < e.length; t++)
        nX(n, e[t]);
    else
      throw new RangeError("Unsupported child node: " + e);
}
const qB = typeof String.prototype.normalize == "function" ? (n) => n.normalize("NFKD") : (n) => n;
class Eg {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, t, r = 0, i = e.length, o, s) {
    this.test = s, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(r, i), this.bufferStart = r, this.normalize = o ? (a) => o(qB(a)) : qB, this.query = this.normalize(t);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return Xr(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let t = IL(e), r = this.bufferStart + this.bufferPos;
      this.bufferPos += ls(e);
      let i = this.normalize(t);
      for (let o = 0, s = r; ; o++) {
        let a = i.charCodeAt(o), l = this.match(a, s, this.bufferPos + this.bufferStart);
        if (o == i.length - 1) {
          if (l)
            return this.value = l, this;
          break;
        }
        s == r && o < t.length && t.charCodeAt(o) == a && s++;
      }
    }
  }
  match(e, t, r) {
    let i = null;
    for (let o = 0; o < this.matches.length; o += 2) {
      let s = this.matches[o], a = !1;
      this.query.charCodeAt(s) == e && (s == this.query.length - 1 ? i = { from: this.matches[o + 1], to: r } : (this.matches[o]++, a = !0)), a || (this.matches.splice(o, 2), o -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? i = { from: t, to: r } : this.matches.push(1, t)), i && this.test && !this.test(i.from, i.to, this.buffer, this.bufferStart) && (i = null), i;
  }
}
typeof Symbol < "u" && (Eg.prototype[Symbol.iterator] = function() {
  return this;
});
const rX = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, aI = "gm" + (/x/.unicode == null ? "" : "u");
class iX {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, t, r, i = 0, o = e.length) {
    if (this.text = e, this.to = o, this.curLine = "", this.done = !1, this.value = rX, /\\[sWDnr]|\n|\r|\[\^/.test(t))
      return new oX(e, t, r, i, o);
    this.re = new RegExp(t, aI + (r != null && r.ignoreCase ? "i" : "")), this.test = r == null ? void 0 : r.test, this.iter = e.iter();
    let s = e.lineAt(i);
    this.curLineStart = s.from, this.matchPos = _x(e, i), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let t = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (t) {
        let r = this.curLineStart + t.index, i = r + t[0].length;
        if (this.matchPos = _x(this.text, i + (r == i ? 1 : 0)), r == this.curLineStart + this.curLine.length && this.nextLine(), (r < i || r > this.value.to) && (!this.test || this.test(r, i, t)))
          return this.value = { from: r, to: i, match: t }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const C2 = /* @__PURE__ */ new WeakMap();
class kp {
  constructor(e, t) {
    this.from = e, this.text = t;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, t, r) {
    let i = C2.get(e);
    if (!i || i.from >= r || i.to <= t) {
      let a = new kp(t, e.sliceString(t, r));
      return C2.set(e, a), a;
    }
    if (i.from == t && i.to == r)
      return i;
    let { text: o, from: s } = i;
    return s > t && (o = e.sliceString(t, s) + o, s = t), i.to < r && (o += e.sliceString(i.to, r)), C2.set(e, new kp(s, o)), new kp(t, o.slice(t - s, r - s));
  }
}
class oX {
  constructor(e, t, r, i, o) {
    this.text = e, this.to = o, this.done = !1, this.value = rX, this.matchPos = _x(e, i), this.re = new RegExp(t, aI + (r != null && r.ignoreCase ? "i" : "")), this.test = r == null ? void 0 : r.test, this.flat = kp.get(e, i, this.chunkEnd(
      i + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, t = this.re.exec(this.flat.text);
      if (t && !t[0] && t.index == e && (this.re.lastIndex = e + 1, t = this.re.exec(this.flat.text)), t) {
        let r = this.flat.from + t.index, i = r + t[0].length;
        if ((this.flat.to >= this.to || t.index + t[0].length <= this.flat.text.length - 10) && (!this.test || this.test(r, i, t)))
          return this.value = { from: r, to: i, match: t }, this.matchPos = _x(this.text, i + (r == i ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = kp.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (iX.prototype[Symbol.iterator] = oX.prototype[Symbol.iterator] = function() {
  return this;
});
function PLe(n) {
  try {
    return new RegExp(n, aI), !0;
  } catch {
    return !1;
  }
}
function _x(n, e) {
  if (e >= n.length)
    return e;
  let t = n.lineAt(e), r;
  for (; e < t.to && (r = t.text.charCodeAt(e - t.from)) >= 56320 && r < 57344; )
    e++;
  return e;
}
function ck(n) {
  let e = String(n.state.doc.lineAt(n.state.selection.main.head).number), t = bn("input", { class: "cm-textfield", name: "line", value: e }), r = bn("form", {
    class: "cm-gotoLine",
    onkeydown: (o) => {
      o.keyCode == 27 ? (o.preventDefault(), n.dispatch({ effects: Cx.of(!1) }), n.focus()) : o.keyCode == 13 && (o.preventDefault(), i());
    },
    onsubmit: (o) => {
      o.preventDefault(), i();
    }
  }, bn("label", n.state.phrase("Go to line"), ": ", t), " ", bn("button", { class: "cm-button", type: "submit" }, n.state.phrase("go")));
  function i() {
    let o = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);
    if (!o)
      return;
    let { state: s } = n, a = s.doc.lineAt(s.selection.main.head), [, l, u, c, h] = o, f = c ? +c.slice(1) : 0, d = u ? +u : a.number;
    if (u && h) {
      let v = d / 100;
      l && (v = v * (l == "-" ? -1 : 1) + a.number / s.doc.lines), d = Math.round(s.doc.lines * v);
    } else
      u && l && (d = d * (l == "-" ? -1 : 1) + a.number);
    let p = s.doc.line(Math.max(1, Math.min(s.doc.lines, d))), g = ce.cursor(p.from + Math.max(0, Math.min(f, p.length)));
    n.dispatch({
      effects: [Cx.of(!1), Ne.scrollIntoView(g.from, { y: "center" })],
      selection: g
    }), n.focus();
  }
  return { dom: r };
}
const Cx = /* @__PURE__ */ wt.define(), YB = /* @__PURE__ */ Wr.define({
  create() {
    return !0;
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(Cx) && (n = t.value);
    return n;
  },
  provide: (n) => o0.from(n, (e) => e ? ck : null)
}), ELe = (n) => {
  let e = i0(n, ck);
  if (!e) {
    let t = [Cx.of(!0)];
    n.state.field(YB, !1) == null && t.push(wt.appendConfig.of([YB, kLe])), n.dispatch({ effects: t }), e = i0(n, ck);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, kLe = /* @__PURE__ */ Ne.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), MLe = {
  highlightWordAroundCursor: !1,
  minSelectionLength: 1,
  maxMatches: 100,
  wholeWords: !1
}, sX = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, MLe, {
      highlightWordAroundCursor: (e, t) => e || t,
      minSelectionLength: Math.min,
      maxMatches: Math.min
    });
  }
});
function DLe(n) {
  let e = [NLe, $Le];
  return n && e.push(sX.of(n)), e;
}
const LLe = /* @__PURE__ */ tt.mark({ class: "cm-selectionMatch" }), ILe = /* @__PURE__ */ tt.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
function XB(n, e, t, r) {
  return (t == 0 || n(e.sliceDoc(t - 1, t)) != Rn.Word) && (r == e.doc.length || n(e.sliceDoc(r, r + 1)) != Rn.Word);
}
function RLe(n, e, t, r) {
  return n(e.sliceDoc(t, t + 1)) == Rn.Word && n(e.sliceDoc(r - 1, r)) == Rn.Word;
}
const $Le = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.selectionSet || n.docChanged || n.viewportChanged) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = n.state.facet(sX), { state: t } = n, r = t.selection;
    if (r.ranges.length > 1)
      return tt.none;
    let i = r.main, o, s = null;
    if (i.empty) {
      if (!e.highlightWordAroundCursor)
        return tt.none;
      let l = t.wordAt(i.head);
      if (!l)
        return tt.none;
      s = t.charCategorizer(i.head), o = t.sliceDoc(l.from, l.to);
    } else {
      let l = i.to - i.from;
      if (l < e.minSelectionLength || l > 200)
        return tt.none;
      if (e.wholeWords) {
        if (o = t.sliceDoc(i.from, i.to), s = t.charCategorizer(i.head), !(XB(s, t, i.from, i.to) && RLe(s, t, i.from, i.to)))
          return tt.none;
      } else if (o = t.sliceDoc(i.from, i.to), !o)
        return tt.none;
    }
    let a = [];
    for (let l of n.visibleRanges) {
      let u = new Eg(t.doc, o, l.from, l.to);
      for (; !u.next().done; ) {
        let { from: c, to: h } = u.value;
        if ((!s || XB(s, t, c, h)) && (i.empty && c <= i.from && h >= i.to ? a.push(ILe.range(c, h)) : (c >= i.to || h <= i.from) && a.push(LLe.range(c, h)), a.length > e.maxMatches))
          return tt.none;
      }
    }
    return tt.set(a);
  }
}, {
  decorations: (n) => n.decorations
}), NLe = /* @__PURE__ */ Ne.baseTheme({
  ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
  ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
}), BLe = ({ state: n, dispatch: e }) => {
  let { selection: t } = n, r = ce.create(t.ranges.map((i) => n.wordAt(i.head) || ce.cursor(i.head)), t.mainIndex);
  return r.eq(t) ? !1 : (e(n.update({ selection: r })), !0);
};
function VLe(n, e) {
  let { main: t, ranges: r } = n.selection, i = n.wordAt(t.head), o = i && i.from == t.from && i.to == t.to;
  for (let s = !1, a = new Eg(n.doc, e, r[r.length - 1].to); ; )
    if (a.next(), a.done) {
      if (s)
        return null;
      a = new Eg(n.doc, e, 0, Math.max(0, r[r.length - 1].from - 1)), s = !0;
    } else {
      if (s && r.some((l) => l.from == a.value.from))
        continue;
      if (o) {
        let l = n.wordAt(a.value.from);
        if (!l || l.from != a.value.from || l.to != a.value.to)
          continue;
      }
      return a.value;
    }
}
const zLe = ({ state: n, dispatch: e }) => {
  let { ranges: t } = n.selection;
  if (t.some((o) => o.from === o.to))
    return BLe({ state: n, dispatch: e });
  let r = n.sliceDoc(t[0].from, t[0].to);
  if (n.selection.ranges.some((o) => n.sliceDoc(o.from, o.to) != r))
    return !1;
  let i = VLe(n, r);
  return i ? (e(n.update({
    selection: n.selection.addRange(ce.range(i.from, i.to), !1),
    effects: Ne.scrollIntoView(i.to)
  })), !0) : !1;
}, iv = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new KLe(e),
      scrollToMatch: (e) => Ne.scrollIntoView(e)
    });
  }
});
class aX {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || PLe(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (t, r) => r == "n" ? `
` : r == "r" ? "\r" : r == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new WLe(this) : new QLe(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, t = 0, r) {
    let i = e.doc ? e : Yt.create({ doc: e });
    return r == null && (r = i.doc.length), this.regexp ? lp(this, i, t, r) : ap(this, i, t, r);
  }
}
class lX {
  constructor(e) {
    this.spec = e;
  }
}
function ap(n, e, t, r) {
  return new Eg(e.doc, n.unquoted, t, r, n.caseSensitive ? void 0 : (i) => i.toLowerCase(), n.wholeWord ? FLe(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function FLe(n, e) {
  return (t, r, i, o) => ((o > t || o + i.length < r) && (o = Math.max(0, t - 2), i = n.sliceString(o, Math.min(n.length, r + 2))), (e(Ax(i, t - o)) != Rn.Word || e(Tx(i, t - o)) != Rn.Word) && (e(Tx(i, r - o)) != Rn.Word || e(Ax(i, r - o)) != Rn.Word));
}
class QLe extends lX {
  constructor(e) {
    super(e);
  }
  nextMatch(e, t, r) {
    let i = ap(this.spec, e, r, e.doc.length).nextOverlapping();
    return i.done && (i = ap(this.spec, e, 0, t).nextOverlapping()), i.done ? null : i.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, t, r) {
    for (let i = r; ; ) {
      let o = Math.max(t, i - 1e4 - this.spec.unquoted.length), s = ap(this.spec, e, o, i), a = null;
      for (; !s.nextOverlapping().done; )
        a = s.value;
      if (a)
        return a;
      if (o == t)
        return null;
      i -= 1e4;
    }
  }
  prevMatch(e, t, r) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, r, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, t) {
    let r = ap(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= t)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, t, r, i) {
    let o = ap(this.spec, e, Math.max(0, t - this.spec.unquoted.length), Math.min(r + this.spec.unquoted.length, e.doc.length));
    for (; !o.next().done; )
      i(o.value.from, o.value.to);
  }
}
function lp(n, e, t, r) {
  return new iX(e.doc, n.search, {
    ignoreCase: !n.caseSensitive,
    test: n.wholeWord ? ZLe(e.charCategorizer(e.selection.main.head)) : void 0
  }, t, r);
}
function Ax(n, e) {
  return n.slice(ni(n, e, !1), e);
}
function Tx(n, e) {
  return n.slice(e, ni(n, e));
}
function ZLe(n) {
  return (e, t, r) => !r[0].length || (n(Ax(r.input, r.index)) != Rn.Word || n(Tx(r.input, r.index)) != Rn.Word) && (n(Tx(r.input, r.index + r[0].length)) != Rn.Word || n(Ax(r.input, r.index + r[0].length)) != Rn.Word);
}
class WLe extends lX {
  nextMatch(e, t, r) {
    let i = lp(this.spec, e, r, e.doc.length).next();
    return i.done && (i = lp(this.spec, e, 0, t).next()), i.done ? null : i.value;
  }
  prevMatchInRange(e, t, r) {
    for (let i = 1; ; i++) {
      let o = Math.max(
        t,
        r - i * 1e4
        /* FindPrev.ChunkSize */
      ), s = lp(this.spec, e, o, r), a = null;
      for (; !s.next().done; )
        a = s.value;
      if (a && (o == t || a.from > o + 10))
        return a;
      if (o == t)
        return null;
    }
  }
  prevMatch(e, t, r) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, r, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&\d+])/g, (t, r) => r == "$" ? "$" : r == "&" ? e.match[0] : r != "0" && +r < e.match.length ? e.match[r] : t);
  }
  matchAll(e, t) {
    let r = lp(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= t)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, t, r, i) {
    let o = lp(this.spec, e, Math.max(
      0,
      t - 250
      /* RegExp.HighlightMargin */
    ), Math.min(r + 250, e.doc.length));
    for (; !o.next().done; )
      i(o.value.from, o.value.to);
  }
}
const u0 = /* @__PURE__ */ wt.define(), lI = /* @__PURE__ */ wt.define(), pc = /* @__PURE__ */ Wr.define({
  create(n) {
    return new A2(hk(n).create(), null);
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(u0) ? n = new A2(t.value.create(), n.panel) : t.is(lI) && (n = new A2(n.query, t.value ? uI : null));
    return n;
  },
  provide: (n) => o0.from(n, (e) => e.panel)
});
class A2 {
  constructor(e, t) {
    this.query = e, this.panel = t;
  }
}
const GLe = /* @__PURE__ */ tt.mark({ class: "cm-searchMatch" }), jLe = /* @__PURE__ */ tt.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), HLe = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.view = n, this.decorations = this.highlight(n.state.field(pc));
  }
  update(n) {
    let e = n.state.field(pc);
    (e != n.startState.field(pc) || n.docChanged || n.selectionSet || n.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: n, panel: e }) {
    if (!e || !n.spec.valid)
      return tt.none;
    let { view: t } = this, r = new Ec();
    for (let i = 0, o = t.visibleRanges, s = o.length; i < s; i++) {
      let { from: a, to: l } = o[i];
      for (; i < s - 1 && l > o[i + 1].from - 2 * 250; )
        l = o[++i].to;
      n.highlight(t.state, a, l, (u, c) => {
        let h = t.state.selection.ranges.some((f) => f.from == u && f.to == c);
        r.add(u, c, h ? jLe : GLe);
      });
    }
    return r.finish();
  }
}, {
  decorations: (n) => n.decorations
});
function vb(n) {
  return (e) => {
    let t = e.state.field(pc, !1);
    return t && t.query.spec.valid ? n(e, t) : hX(e);
  };
}
const Px = /* @__PURE__ */ vb((n, { query: e }) => {
  let { to: t } = n.state.selection.main, r = e.nextMatch(n.state, t, t);
  if (!r)
    return !1;
  let i = ce.single(r.from, r.to), o = n.state.facet(iv);
  return n.dispatch({
    selection: i,
    effects: [cI(n, r), o.scrollToMatch(i.main, n)],
    userEvent: "select.search"
  }), cX(n), !0;
}), Ex = /* @__PURE__ */ vb((n, { query: e }) => {
  let { state: t } = n, { from: r } = t.selection.main, i = e.prevMatch(t, r, r);
  if (!i)
    return !1;
  let o = ce.single(i.from, i.to), s = n.state.facet(iv);
  return n.dispatch({
    selection: o,
    effects: [cI(n, i), s.scrollToMatch(o.main, n)],
    userEvent: "select.search"
  }), cX(n), !0;
}), qLe = /* @__PURE__ */ vb((n, { query: e }) => {
  let t = e.matchAll(n.state, 1e3);
  return !t || !t.length ? !1 : (n.dispatch({
    selection: ce.create(t.map((r) => ce.range(r.from, r.to))),
    userEvent: "select.search.matches"
  }), !0);
}), YLe = ({ state: n, dispatch: e }) => {
  let t = n.selection;
  if (t.ranges.length > 1 || t.main.empty)
    return !1;
  let { from: r, to: i } = t.main, o = [], s = 0;
  for (let a = new Eg(n.doc, n.sliceDoc(r, i)); !a.next().done; ) {
    if (o.length > 1e3)
      return !1;
    a.value.from == r && (s = o.length), o.push(ce.range(a.value.from, a.value.to));
  }
  return e(n.update({
    selection: ce.create(o, s),
    userEvent: "select.search.matches"
  })), !0;
}, UB = /* @__PURE__ */ vb((n, { query: e }) => {
  let { state: t } = n, { from: r, to: i } = t.selection.main;
  if (t.readOnly)
    return !1;
  let o = e.nextMatch(t, r, r);
  if (!o)
    return !1;
  let s = [], a, l, u = [];
  if (o.from == r && o.to == i && (l = t.toText(e.getReplacement(o)), s.push({ from: o.from, to: o.to, insert: l }), o = e.nextMatch(t, o.from, o.to), u.push(Ne.announce.of(t.phrase("replaced match on line $", t.doc.lineAt(r).number) + "."))), o) {
    let c = s.length == 0 || s[0].from >= o.to ? 0 : o.to - o.from - l.length;
    a = ce.single(o.from - c, o.to - c), u.push(cI(n, o)), u.push(t.facet(iv).scrollToMatch(a.main, n));
  }
  return n.dispatch({
    changes: s,
    selection: a,
    effects: u,
    userEvent: "input.replace"
  }), !0;
}), XLe = /* @__PURE__ */ vb((n, { query: e }) => {
  if (n.state.readOnly)
    return !1;
  let t = e.matchAll(n.state, 1e9).map((i) => {
    let { from: o, to: s } = i;
    return { from: o, to: s, insert: e.getReplacement(i) };
  });
  if (!t.length)
    return !1;
  let r = n.state.phrase("replaced $ matches", t.length) + ".";
  return n.dispatch({
    changes: t,
    effects: Ne.announce.of(r),
    userEvent: "input.replace.all"
  }), !0;
});
function uI(n) {
  return n.state.facet(iv).createPanel(n);
}
function hk(n, e) {
  var t, r, i, o, s;
  let a = n.selection.main, l = a.empty || a.to > a.from + 100 ? "" : n.sliceDoc(a.from, a.to);
  if (e && !l)
    return e;
  let u = n.facet(iv);
  return new aX({
    search: ((t = e == null ? void 0 : e.literal) !== null && t !== void 0 ? t : u.literal) ? l : l.replace(/\n/g, "\\n"),
    caseSensitive: (r = e == null ? void 0 : e.caseSensitive) !== null && r !== void 0 ? r : u.caseSensitive,
    literal: (i = e == null ? void 0 : e.literal) !== null && i !== void 0 ? i : u.literal,
    regexp: (o = e == null ? void 0 : e.regexp) !== null && o !== void 0 ? o : u.regexp,
    wholeWord: (s = e == null ? void 0 : e.wholeWord) !== null && s !== void 0 ? s : u.wholeWord
  });
}
function uX(n) {
  let e = i0(n, uI);
  return e && e.dom.querySelector("[main-field]");
}
function cX(n) {
  let e = uX(n);
  e && e == n.root.activeElement && e.select();
}
const hX = (n) => {
  let e = n.state.field(pc, !1);
  if (e && e.panel) {
    let t = uX(n);
    if (t && t != n.root.activeElement) {
      let r = hk(n.state, e.query.spec);
      r.valid && n.dispatch({ effects: u0.of(r) }), t.focus(), t.select();
    }
  } else
    n.dispatch({ effects: [
      lI.of(!0),
      e ? u0.of(hk(n.state, e.query.spec)) : wt.appendConfig.of(eIe)
    ] });
  return !0;
}, fX = (n) => {
  let e = n.state.field(pc, !1);
  if (!e || !e.panel)
    return !1;
  let t = i0(n, uI);
  return t && t.dom.contains(n.root.activeElement) && n.focus(), n.dispatch({ effects: lI.of(!1) }), !0;
}, ULe = [
  { key: "Mod-f", run: hX, scope: "editor search-panel" },
  { key: "F3", run: Px, shift: Ex, scope: "editor search-panel", preventDefault: !0 },
  { key: "Mod-g", run: Px, shift: Ex, scope: "editor search-panel", preventDefault: !0 },
  { key: "Escape", run: fX, scope: "editor search-panel" },
  { key: "Mod-Shift-l", run: YLe },
  { key: "Mod-Alt-g", run: ELe },
  { key: "Mod-d", run: zLe, preventDefault: !0 }
];
class KLe {
  constructor(e) {
    this.view = e;
    let t = this.query = e.state.field(pc).query.spec;
    this.commit = this.commit.bind(this), this.searchField = bn("input", {
      value: t.search,
      placeholder: yo(e, "Find"),
      "aria-label": yo(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = bn("input", {
      value: t.replace,
      placeholder: yo(e, "Replace"),
      "aria-label": yo(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = bn("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: t.caseSensitive,
      onchange: this.commit
    }), this.reField = bn("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: t.regexp,
      onchange: this.commit
    }), this.wordField = bn("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: t.wholeWord,
      onchange: this.commit
    });
    function r(i, o, s) {
      return bn("button", { class: "cm-button", name: i, onclick: o, type: "button" }, s);
    }
    this.dom = bn("div", { onkeydown: (i) => this.keydown(i), class: "cm-search" }, [
      this.searchField,
      r("next", () => Px(e), [yo(e, "next")]),
      r("prev", () => Ex(e), [yo(e, "previous")]),
      r("select", () => qLe(e), [yo(e, "all")]),
      bn("label", null, [this.caseField, yo(e, "match case")]),
      bn("label", null, [this.reField, yo(e, "regexp")]),
      bn("label", null, [this.wordField, yo(e, "by word")]),
      ...e.state.readOnly ? [] : [
        bn("br"),
        this.replaceField,
        r("replace", () => UB(e), [yo(e, "replace")]),
        r("replaceAll", () => XLe(e), [yo(e, "replace all")])
      ],
      bn("button", {
        name: "close",
        onclick: () => fX(e),
        "aria-label": yo(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new aX({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: u0.of(e) }));
  }
  keydown(e) {
    hke(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? Ex : Px)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), UB(this.view));
  }
  update(e) {
    for (let t of e.transactions)
      for (let r of t.effects)
        r.is(u0) && !r.value.eq(this.query) && this.setQuery(r.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(iv).top;
  }
}
function yo(n, e) {
  return n.state.phrase(e);
}
const _1 = 30, C1 = /[\s\.,:;?!]/;
function cI(n, { from: e, to: t }) {
  let r = n.state.doc.lineAt(e), i = n.state.doc.lineAt(t).to, o = Math.max(r.from, e - _1), s = Math.min(i, t + _1), a = n.state.sliceDoc(o, s);
  if (o != r.from) {
    for (let l = 0; l < _1; l++)
      if (!C1.test(a[l + 1]) && C1.test(a[l])) {
        a = a.slice(l);
        break;
      }
  }
  if (s != i) {
    for (let l = a.length - 1; l > a.length - _1; l--)
      if (!C1.test(a[l - 1]) && C1.test(a[l])) {
        a = a.slice(0, l);
        break;
      }
  }
  return Ne.announce.of(`${n.state.phrase("current match")}. ${a} ${n.state.phrase("on line")} ${r.number}.`);
}
const JLe = /* @__PURE__ */ Ne.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), eIe = [
  pc,
  /* @__PURE__ */ pd.low(HLe),
  JLe
];
class dX {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, t, r) {
    this.state = e, this.pos = t, this.explicit = r, this.abortListeners = [];
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let t = Er(this.state).resolveInner(this.pos, -1);
    for (; t && e.indexOf(t.name) < 0; )
      t = t.parent;
    return t ? {
      from: t.from,
      to: this.pos,
      text: this.state.sliceDoc(t.from, this.pos),
      type: t.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let t = this.state.doc.lineAt(this.pos), r = Math.max(t.from, this.pos - 250), i = t.text.slice(r - t.from, this.pos - t.from), o = i.search(gX(e, !1));
    return o < 0 ? null : { from: r + o, to: this.pos, text: i.slice(o) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  */
  addEventListener(e, t) {
    e == "abort" && this.abortListeners && this.abortListeners.push(t);
  }
}
function KB(n) {
  let e = Object.keys(n).join(""), t = /\w/.test(e);
  return t && (e = e.replace(/\w/g, "")), `[${t ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function tIe(n) {
  let e = /* @__PURE__ */ Object.create(null), t = /* @__PURE__ */ Object.create(null);
  for (let { label: i } of n) {
    e[i[0]] = !0;
    for (let o = 1; o < i.length; o++)
      t[i[o]] = !0;
  }
  let r = KB(e) + KB(t) + "*$";
  return [new RegExp("^" + r), new RegExp(r)];
}
function pX(n) {
  let e = n.map((i) => typeof i == "string" ? { label: i } : i), [t, r] = e.every((i) => /^\w+$/.test(i.label)) ? [/\w*$/, /\w+$/] : tIe(e);
  return (i) => {
    let o = i.matchBefore(r);
    return o || i.explicit ? { from: o ? o.from : i.pos, options: e, validFor: t } : null;
  };
}
function nIe(n, e) {
  return (t) => {
    for (let r = Er(t.state).resolveInner(t.pos, -1); r; r = r.parent) {
      if (n.indexOf(r.name) > -1)
        return null;
      if (r.type.isTop)
        break;
    }
    return e(t);
  };
}
class JB {
  constructor(e, t, r, i) {
    this.completion = e, this.source = t, this.match = r, this.score = i;
  }
}
function gc(n) {
  return n.selection.main.from;
}
function gX(n, e) {
  var t;
  let { source: r } = n, i = e && r[0] != "^", o = r[r.length - 1] != "$";
  return !i && !o ? n : new RegExp(`${i ? "^" : ""}(?:${r})${o ? "$" : ""}`, (t = n.flags) !== null && t !== void 0 ? t : n.ignoreCase ? "i" : "");
}
const vX = /* @__PURE__ */ gu.define();
function rIe(n, e, t, r) {
  let { main: i } = n.selection, o = t - i.from, s = r - i.from;
  return Object.assign(Object.assign({}, n.changeByRange((a) => a != i && t != r && n.sliceDoc(a.from + o, a.from + s) != n.sliceDoc(t, r) ? { range: a } : {
    changes: { from: a.from + o, to: r == i.from ? a.to : a.from + s, insert: e },
    range: ce.cursor(a.from + o + e.length)
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const eV = /* @__PURE__ */ new WeakMap();
function iIe(n) {
  if (!Array.isArray(n))
    return n;
  let e = eV.get(n);
  return e || eV.set(n, e = pX(n)), e;
}
const kx = /* @__PURE__ */ wt.define(), c0 = /* @__PURE__ */ wt.define();
class oIe {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let t = 0; t < e.length; ) {
      let r = Xr(e, t), i = ls(r);
      this.chars.push(r);
      let o = e.slice(t, t + i), s = o.toUpperCase();
      this.folded.push(Xr(s == o ? o.toLowerCase() : s, 0)), t += i;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, t) {
    return this.score = e, this.matched = t, !0;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return !1;
    let { chars: t, folded: r, any: i, precise: o, byWord: s } = this;
    if (t.length == 1) {
      let y = Xr(e, 0), b = ls(y), O = b == e.length ? 0 : -100;
      if (y != t[0])
        if (y == r[0])
          O += -200;
        else
          return !1;
      return this.ret(O, [0, b]);
    }
    let a = e.indexOf(this.pattern);
    if (a == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let l = t.length, u = 0;
    if (a < 0) {
      for (let y = 0, b = Math.min(e.length, 200); y < b && u < l; ) {
        let O = Xr(e, y);
        (O == t[u] || O == r[u]) && (i[u++] = y), y += ls(O);
      }
      if (u < l)
        return !1;
    }
    let c = 0, h = 0, f = !1, d = 0, p = -1, g = -1, v = /[a-z]/.test(e), m = !0;
    for (let y = 0, b = Math.min(e.length, 200), O = 0; y < b && h < l; ) {
      let w = Xr(e, y);
      a < 0 && (c < l && w == t[c] && (o[c++] = y), d < l && (w == t[d] || w == r[d] ? (d == 0 && (p = y), g = y + 1, d++) : d = 0));
      let x, S = w < 255 ? w >= 48 && w <= 57 || w >= 97 && w <= 122 ? 2 : w >= 65 && w <= 90 ? 1 : 0 : (x = IL(w)) != x.toLowerCase() ? 1 : x != x.toUpperCase() ? 2 : 0;
      (!y || S == 1 && v || O == 0 && S != 0) && (t[h] == w || r[h] == w && (f = !0) ? s[h++] = y : s.length && (m = !1)), O = S, y += ls(w);
    }
    return h == l && s[0] == 0 && m ? this.result(-100 + (f ? -200 : 0), s, e) : d == l && p == 0 ? this.ret(-200 - e.length + (g == e.length ? 0 : -100), [0, g]) : a > -1 ? this.ret(-700 - e.length, [a, a + this.pattern.length]) : d == l ? this.ret(-900 - e.length, [p, g]) : h == l ? this.result(-100 + (f ? -200 : 0) + -700 + (m ? 0 : -1100), s, e) : t.length == 2 ? !1 : this.result((i[0] ? -700 : 0) + -200 + -1100, i, e);
  }
  result(e, t, r) {
    let i = [], o = 0;
    for (let s of t) {
      let a = s + (this.astral ? ls(Xr(r, s)) : 1);
      o && i[o - 1] == s ? i[o - 1] = a : (i[o++] = s, i[o++] = a);
    }
    return this.ret(e - r.length, i);
  }
}
const ei = /* @__PURE__ */ Be.define({
  combine(n) {
    return Ol(n, {
      activateOnTyping: !0,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: sIe,
      compareCompletions: (e, t) => e.label.localeCompare(t.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, t) => e && t,
      closeOnBlur: (e, t) => e && t,
      icons: (e, t) => e && t,
      tooltipClass: (e, t) => (r) => tV(e(r), t(r)),
      optionClass: (e, t) => (r) => tV(e(r), t(r)),
      addToOptions: (e, t) => e.concat(t)
    });
  }
});
function tV(n, e) {
  return n ? e ? n + " " + e : n : e;
}
function sIe(n, e, t, r, i, o) {
  let s = n.textDirection == Mn.RTL, a = s, l = !1, u = "top", c, h, f = e.left - i.left, d = i.right - e.right, p = r.right - r.left, g = r.bottom - r.top;
  if (a && f < Math.min(p, d) ? a = !1 : !a && d < Math.min(p, f) && (a = !0), p <= (a ? f : d))
    c = Math.max(i.top, Math.min(t.top, i.bottom - g)) - e.top, h = Math.min(400, a ? f : d);
  else {
    l = !0, h = Math.min(
      400,
      (s ? e.right : i.right - e.left) - 30
      /* Info.Margin */
    );
    let y = i.bottom - e.bottom;
    y >= g || y > e.top ? c = t.bottom - e.top : (u = "bottom", c = e.bottom - t.top);
  }
  let v = (e.bottom - e.top) / o.offsetHeight, m = (e.right - e.left) / o.offsetWidth;
  return {
    style: `${u}: ${c / v}px; max-width: ${h / m}px`,
    class: "cm-completionInfo-" + (l ? s ? "left-narrow" : "right-narrow" : a ? "left" : "right")
  };
}
function aIe(n) {
  let e = n.addToOptions.slice();
  return n.icons && e.push({
    render(t) {
      let r = document.createElement("div");
      return r.classList.add("cm-completionIcon"), t.type && r.classList.add(...t.type.split(/\s+/g).map((i) => "cm-completionIcon-" + i)), r.setAttribute("aria-hidden", "true"), r;
    },
    position: 20
  }), e.push({
    render(t, r, i, o) {
      let s = document.createElement("span");
      s.className = "cm-completionLabel";
      let a = t.displayLabel || t.label, l = 0;
      for (let u = 0; u < o.length; ) {
        let c = o[u++], h = o[u++];
        c > l && s.appendChild(document.createTextNode(a.slice(l, c)));
        let f = s.appendChild(document.createElement("span"));
        f.appendChild(document.createTextNode(a.slice(c, h))), f.className = "cm-completionMatchedText", l = h;
      }
      return l < a.length && s.appendChild(document.createTextNode(a.slice(l))), s;
    },
    position: 50
  }, {
    render(t) {
      if (!t.detail)
        return null;
      let r = document.createElement("span");
      return r.className = "cm-completionDetail", r.textContent = t.detail, r;
    },
    position: 80
  }), e.sort((t, r) => t.position - r.position).map((t) => t.render);
}
function T2(n, e, t) {
  if (n <= t)
    return { from: 0, to: n };
  if (e < 0 && (e = 0), e <= n >> 1) {
    let i = Math.floor(e / t);
    return { from: i * t, to: (i + 1) * t };
  }
  let r = Math.floor((n - e) / t);
  return { from: n - (r + 1) * t, to: n - r * t };
}
class lIe {
  constructor(e, t, r) {
    this.view = e, this.stateField = t, this.applyCompletion = r, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (l) => this.placeInfo(l),
      key: this
    }, this.space = null, this.currentClass = "";
    let i = e.state.field(t), { options: o, selected: s } = i.open, a = e.state.facet(ei);
    this.optionContent = aIe(a), this.optionClass = a.optionClass, this.tooltipClass = a.tooltipClass, this.range = T2(o.length, s, a.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (l) => {
      let { options: u } = e.state.field(t).open;
      for (let c = l.target, h; c && c != this.dom; c = c.parentNode)
        if (c.nodeName == "LI" && (h = /-(\d+)$/.exec(c.id)) && +h[1] < u.length) {
          this.applyCompletion(e, u[+h[1]]), l.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (l) => {
      let u = e.state.field(this.stateField, !1);
      u && u.tooltip && e.state.facet(ei).closeOnBlur && l.relatedTarget != e.contentDOM && e.dispatch({ effects: c0.of(null) });
    }), this.showOptions(o, i.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, t) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, t, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var t;
    let r = e.state.field(this.stateField), i = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), r != i) {
      let { options: o, selected: s, disabled: a } = r.open;
      (!i.open || i.open.options != o) && (this.range = T2(o.length, s, e.state.facet(ei).maxRenderedOptions), this.showOptions(o, r.id)), this.updateSel(), a != ((t = i.open) === null || t === void 0 ? void 0 : t.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!a);
    }
  }
  updateTooltipClass(e) {
    let t = this.tooltipClass(e);
    if (t != this.currentClass) {
      for (let r of this.currentClass.split(" "))
        r && this.dom.classList.remove(r);
      for (let r of t.split(" "))
        r && this.dom.classList.add(r);
      this.currentClass = t;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), t = e.open;
    if ((t.selected > -1 && t.selected < this.range.from || t.selected >= this.range.to) && (this.range = T2(t.options.length, t.selected, this.view.state.facet(ei).maxRenderedOptions), this.showOptions(t.options, e.id)), this.updateSelectedOption(t.selected)) {
      this.destroyInfo();
      let { completion: r } = t.options[t.selected], { info: i } = r;
      if (!i)
        return;
      let o = typeof i == "string" ? document.createTextNode(i) : i(r);
      if (!o)
        return;
      "then" in o ? o.then((s) => {
        s && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(s, r);
      }).catch((s) => vs(this.view.state, s, "completion info")) : this.addInfoPane(o, r);
    }
  }
  addInfoPane(e, t) {
    this.destroyInfo();
    let r = this.info = document.createElement("div");
    if (r.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      r.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: i, destroy: o } = e;
      r.appendChild(i), this.infoDestroy = o || null;
    }
    this.dom.appendChild(r), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let t = null;
    for (let r = this.list.firstChild, i = this.range.from; r; r = r.nextSibling, i++)
      r.nodeName != "LI" || !r.id ? i-- : i == e ? r.hasAttribute("aria-selected") || (r.setAttribute("aria-selected", "true"), t = r) : r.hasAttribute("aria-selected") && r.removeAttribute("aria-selected");
    return t && cIe(this.list, t), t;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let t = this.dom.getBoundingClientRect(), r = this.info.getBoundingClientRect(), i = e.getBoundingClientRect(), o = this.space;
    if (!o) {
      let s = this.dom.ownerDocument.defaultView || window;
      o = { left: 0, top: 0, right: s.innerWidth, bottom: s.innerHeight };
    }
    return i.top > Math.min(o.bottom, t.bottom) - 10 || i.bottom < Math.max(o.top, t.top) + 10 ? null : this.view.state.facet(ei).positionInfo(this.view, t, i, r, o, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, t, r) {
    const i = document.createElement("ul");
    i.id = t, i.setAttribute("role", "listbox"), i.setAttribute("aria-expanded", "true"), i.setAttribute("aria-label", this.view.state.phrase("Completions"));
    let o = null;
    for (let s = r.from; s < r.to; s++) {
      let { completion: a, match: l } = e[s], { section: u } = a;
      if (u) {
        let f = typeof u == "string" ? u : u.name;
        if (f != o && (s > r.from || r.from == 0))
          if (o = f, typeof u != "string" && u.header)
            i.appendChild(u.header(u));
          else {
            let d = i.appendChild(document.createElement("completion-section"));
            d.textContent = f;
          }
      }
      const c = i.appendChild(document.createElement("li"));
      c.id = t + "-" + s, c.setAttribute("role", "option");
      let h = this.optionClass(a);
      h && (c.className = h);
      for (let f of this.optionContent) {
        let d = f(a, this.view.state, this.view, l);
        d && c.appendChild(d);
      }
    }
    return r.from && i.classList.add("cm-completionListIncompleteTop"), r.to < e.length && i.classList.add("cm-completionListIncompleteBottom"), i;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function uIe(n, e) {
  return (t) => new lIe(t, n, e);
}
function cIe(n, e) {
  let t = n.getBoundingClientRect(), r = e.getBoundingClientRect(), i = t.height / n.offsetHeight;
  r.top < t.top ? n.scrollTop -= (t.top - r.top) / i : r.bottom > t.bottom && (n.scrollTop += (r.bottom - t.bottom) / i);
}
function nV(n) {
  return (n.boost || 0) * 100 + (n.apply ? 10 : 0) + (n.info ? 5 : 0) + (n.type ? 1 : 0);
}
function hIe(n, e) {
  let t = [], r = null, i = (l) => {
    t.push(l);
    let { section: u } = l.completion;
    if (u) {
      r || (r = []);
      let c = typeof u == "string" ? u : u.name;
      r.some((h) => h.name == c) || r.push(typeof u == "string" ? { name: c } : u);
    }
  };
  for (let l of n)
    if (l.hasResult()) {
      let u = l.result.getMatch;
      if (l.result.filter === !1)
        for (let c of l.result.options)
          i(new JB(c, l.source, u ? u(c) : [], 1e9 - t.length));
      else {
        let c = new oIe(e.sliceDoc(l.from, l.to));
        for (let h of l.result.options)
          if (c.match(h.label)) {
            let f = h.displayLabel ? u ? u(h, c.matched) : [] : c.matched;
            i(new JB(h, l.source, f, c.score + (h.boost || 0)));
          }
      }
    }
  if (r) {
    let l = /* @__PURE__ */ Object.create(null), u = 0, c = (h, f) => {
      var d, p;
      return ((d = h.rank) !== null && d !== void 0 ? d : 1e9) - ((p = f.rank) !== null && p !== void 0 ? p : 1e9) || (h.name < f.name ? -1 : 1);
    };
    for (let h of r.sort(c))
      u -= 1e5, l[h.name] = u;
    for (let h of t) {
      let { section: f } = h.completion;
      f && (h.score += l[typeof f == "string" ? f : f.name]);
    }
  }
  let o = [], s = null, a = e.facet(ei).compareCompletions;
  for (let l of t.sort((u, c) => c.score - u.score || a(u.completion, c.completion))) {
    let u = l.completion;
    !s || s.label != u.label || s.detail != u.detail || s.type != null && u.type != null && s.type != u.type || s.apply != u.apply || s.boost != u.boost ? o.push(l) : nV(l.completion) > nV(s) && (o[o.length - 1] = l), s = l.completion;
  }
  return o;
}
class vp {
  constructor(e, t, r, i, o, s) {
    this.options = e, this.attrs = t, this.tooltip = r, this.timestamp = i, this.selected = o, this.disabled = s;
  }
  setSelected(e, t) {
    return e == this.selected || e >= this.options.length ? this : new vp(this.options, rV(t, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, t, r, i, o) {
    let s = hIe(e, t);
    if (!s.length)
      return i && e.some(
        (l) => l.state == 1
        /* State.Pending */
      ) ? new vp(i.options, i.attrs, i.tooltip, i.timestamp, i.selected, !0) : null;
    let a = t.facet(ei).selectOnOpen ? 0 : -1;
    if (i && i.selected != a && i.selected != -1) {
      let l = i.options[i.selected].completion;
      for (let u = 0; u < s.length; u++)
        if (s[u].completion == l) {
          a = u;
          break;
        }
    }
    return new vp(s, rV(r, a), {
      pos: e.reduce((l, u) => u.hasResult() ? Math.min(l, u.from) : l, 1e8),
      create: vIe,
      above: o.aboveCursor
    }, i ? i.timestamp : Date.now(), a, !1);
  }
  map(e) {
    return new vp(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
}
class Mx {
  constructor(e, t, r) {
    this.active = e, this.id = t, this.open = r;
  }
  static start() {
    return new Mx(pIe, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: t } = e, r = t.facet(ei), o = (r.override || t.languageDataAt("autocomplete", gc(t)).map(iIe)).map((a) => (this.active.find((u) => u.source == a) || new to(
      a,
      this.active.some(
        (u) => u.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, r));
    o.length == this.active.length && o.every((a, l) => a == this.active[l]) && (o = this.active);
    let s = this.open;
    s && e.docChanged && (s = s.map(e.changes)), e.selection || o.some((a) => a.hasResult() && e.changes.touchesRange(a.from, a.to)) || !fIe(o, this.active) ? s = vp.build(o, t, this.id, s, r) : s && s.disabled && !o.some(
      (a) => a.state == 1
      /* State.Pending */
    ) && (s = null), !s && o.every(
      (a) => a.state != 1
      /* State.Pending */
    ) && o.some((a) => a.hasResult()) && (o = o.map((a) => a.hasResult() ? new to(
      a.source,
      0
      /* State.Inactive */
    ) : a));
    for (let a of e.effects)
      a.is(yX) && (s = s && s.setSelected(a.value, this.id));
    return o == this.active && s == this.open ? this : new Mx(o, this.id, s);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : dIe;
  }
}
function fIe(n, e) {
  if (n == e)
    return !0;
  for (let t = 0, r = 0; ; ) {
    for (; t < n.length && !n[t].hasResult; )
      t++;
    for (; r < e.length && !e[r].hasResult; )
      r++;
    let i = t == n.length, o = r == e.length;
    if (i || o)
      return i == o;
    if (n[t++].result != e[r++].result)
      return !1;
  }
}
const dIe = {
  "aria-autocomplete": "list"
};
function rV(n, e) {
  let t = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": n
  };
  return e > -1 && (t["aria-activedescendant"] = n + "-" + e), t;
}
const pIe = [];
function fk(n) {
  return n.isUserEvent("input.type") ? "input" : n.isUserEvent("delete.backward") ? "delete" : null;
}
class to {
  constructor(e, t, r = -1) {
    this.source = e, this.state = t, this.explicitPos = r;
  }
  hasResult() {
    return !1;
  }
  update(e, t) {
    let r = fk(e), i = this;
    r ? i = i.handleUserEvent(e, r, t) : e.docChanged ? i = i.handleChange(e) : e.selection && i.state != 0 && (i = new to(
      i.source,
      0
      /* State.Inactive */
    ));
    for (let o of e.effects)
      if (o.is(kx))
        i = new to(i.source, 1, o.value ? gc(e.state) : -1);
      else if (o.is(c0))
        i = new to(
          i.source,
          0
          /* State.Inactive */
        );
      else if (o.is(mX))
        for (let s of o.value)
          s.source == i.source && (i = s);
    return i;
  }
  handleUserEvent(e, t, r) {
    return t == "delete" || !r.activateOnTyping ? this.map(e.changes) : new to(
      this.source,
      1
      /* State.Pending */
    );
  }
  handleChange(e) {
    return e.changes.touchesRange(gc(e.startState)) ? new to(
      this.source,
      0
      /* State.Inactive */
    ) : this.map(e.changes);
  }
  map(e) {
    return e.empty || this.explicitPos < 0 ? this : new to(this.source, this.state, e.mapPos(this.explicitPos));
  }
}
class Mp extends to {
  constructor(e, t, r, i, o) {
    super(e, 2, t), this.result = r, this.from = i, this.to = o;
  }
  hasResult() {
    return !0;
  }
  handleUserEvent(e, t, r) {
    var i;
    let o = e.changes.mapPos(this.from), s = e.changes.mapPos(this.to, 1), a = gc(e.state);
    if ((this.explicitPos < 0 ? a <= o : a < this.from) || a > s || t == "delete" && gc(e.startState) == this.from)
      return new to(
        this.source,
        t == "input" && r.activateOnTyping ? 1 : 0
        /* State.Inactive */
      );
    let l = this.explicitPos < 0 ? -1 : e.changes.mapPos(this.explicitPos), u;
    return gIe(this.result.validFor, e.state, o, s) ? new Mp(this.source, l, this.result, o, s) : this.result.update && (u = this.result.update(this.result, o, s, new dX(e.state, a, l >= 0))) ? new Mp(this.source, l, u, u.from, (i = u.to) !== null && i !== void 0 ? i : gc(e.state)) : new to(this.source, 1, l);
  }
  handleChange(e) {
    return e.changes.touchesRange(this.from, this.to) ? new to(
      this.source,
      0
      /* State.Inactive */
    ) : this.map(e.changes);
  }
  map(e) {
    return e.empty ? this : new Mp(this.source, this.explicitPos < 0 ? -1 : e.mapPos(this.explicitPos), this.result, e.mapPos(this.from), e.mapPos(this.to, 1));
  }
}
function gIe(n, e, t, r) {
  if (!n)
    return !1;
  let i = e.sliceDoc(t, r);
  return typeof n == "function" ? n(i, t, r, e) : gX(n, !0).test(i);
}
const mX = /* @__PURE__ */ wt.define({
  map(n, e) {
    return n.map((t) => t.map(e));
  }
}), yX = /* @__PURE__ */ wt.define(), ko = /* @__PURE__ */ Wr.define({
  create() {
    return Mx.start();
  },
  update(n, e) {
    return n.update(e);
  },
  provide: (n) => [
    jL.from(n, (e) => e.tooltip),
    Ne.contentAttributes.from(n, (e) => e.attrs)
  ]
});
function bX(n, e) {
  const t = e.completion.apply || e.completion.label;
  let r = n.state.field(ko).active.find((i) => i.source == e.source);
  return r instanceof Mp ? (typeof t == "string" ? n.dispatch(Object.assign(Object.assign({}, rIe(n.state, t, r.from, r.to)), { annotations: vX.of(e.completion) })) : t(n, e.completion, r.from, r.to), !0) : !1;
}
const vIe = /* @__PURE__ */ uIe(ko, bX);
function A1(n, e = "option") {
  return (t) => {
    let r = t.state.field(ko, !1);
    if (!r || !r.open || r.open.disabled || Date.now() - r.open.timestamp < t.state.facet(ei).interactionDelay)
      return !1;
    let i = 1, o;
    e == "page" && (o = J9(t, r.open.tooltip)) && (i = Math.max(2, Math.floor(o.dom.offsetHeight / o.dom.querySelector("li").offsetHeight) - 1));
    let { length: s } = r.open.options, a = r.open.selected > -1 ? r.open.selected + i * (n ? 1 : -1) : n ? 0 : s - 1;
    return a < 0 ? a = e == "page" ? 0 : s - 1 : a >= s && (a = e == "page" ? s - 1 : 0), t.dispatch({ effects: yX.of(a) }), !0;
  };
}
const mIe = (n) => {
  let e = n.state.field(ko, !1);
  return n.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < n.state.facet(ei).interactionDelay ? !1 : bX(n, e.open.options[e.open.selected]);
}, yIe = (n) => n.state.field(ko, !1) ? (n.dispatch({ effects: kx.of(!0) }), !0) : !1, bIe = (n) => {
  let e = n.state.field(ko, !1);
  return !e || !e.active.some(
    (t) => t.state != 0
    /* State.Inactive */
  ) ? !1 : (n.dispatch({ effects: c0.of(null) }), !0);
};
class OIe {
  constructor(e, t) {
    this.active = e, this.context = t, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const wIe = 50, xIe = 1e3, SIe = /* @__PURE__ */ vr.fromClass(class {
  constructor(n) {
    this.view = n, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of n.state.field(ko).active)
      e.state == 1 && this.startQuery(e);
  }
  update(n) {
    let e = n.state.field(ko);
    if (!n.selectionSet && !n.docChanged && n.startState.field(ko) == e)
      return;
    let t = n.transactions.some((i) => (i.selection || i.docChanged) && !fk(i));
    for (let i = 0; i < this.running.length; i++) {
      let o = this.running[i];
      if (t || o.updates.length + n.transactions.length > wIe && Date.now() - o.time > xIe) {
        for (let s of o.context.abortListeners)
          try {
            s();
          } catch (a) {
            vs(this.view.state, a);
          }
        o.context.abortListeners = null, this.running.splice(i--, 1);
      } else
        o.updates.push(...n.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), n.transactions.some((i) => i.effects.some((o) => o.is(kx))) && (this.pendingStart = !0);
    let r = this.pendingStart ? 50 : n.state.facet(ei).activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((i) => i.state == 1 && !this.running.some((o) => o.active.source == i.source)) ? setTimeout(() => this.startUpdate(), r) : -1, this.composing != 0)
      for (let i of n.transactions)
        fk(i) == "input" ? this.composing = 2 : this.composing == 2 && i.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: n } = this.view, e = n.field(ko);
    for (let t of e.active)
      t.state == 1 && !this.running.some((r) => r.active.source == t.source) && this.startQuery(t);
  }
  startQuery(n) {
    let { state: e } = this.view, t = gc(e), r = new dX(e, t, n.explicitPos == t), i = new OIe(n, r);
    this.running.push(i), Promise.resolve(n.source(r)).then((o) => {
      i.context.aborted || (i.done = o || null, this.scheduleAccept());
    }, (o) => {
      this.view.dispatch({ effects: c0.of(null) }), vs(this.view.state, o);
    });
  }
  scheduleAccept() {
    this.running.every((n) => n.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(ei).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var n;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], t = this.view.state.facet(ei);
    for (let r = 0; r < this.running.length; r++) {
      let i = this.running[r];
      if (i.done === void 0)
        continue;
      if (this.running.splice(r--, 1), i.done) {
        let s = new Mp(i.active.source, i.active.explicitPos, i.done, i.done.from, (n = i.done.to) !== null && n !== void 0 ? n : gc(i.updates.length ? i.updates[0].startState : this.view.state));
        for (let a of i.updates)
          s = s.update(a, t);
        if (s.hasResult()) {
          e.push(s);
          continue;
        }
      }
      let o = this.view.state.field(ko).active.find((s) => s.source == i.active.source);
      if (o && o.state == 1)
        if (i.done == null) {
          let s = new to(
            i.active.source,
            0
            /* State.Inactive */
          );
          for (let a of i.updates)
            s = s.update(a, t);
          s.state != 1 && e.push(s);
        } else
          this.startQuery(o);
    }
    e.length && this.view.dispatch({ effects: mX.of(e) });
  }
}, {
  eventHandlers: {
    blur(n) {
      let e = this.view.state.field(ko, !1);
      if (e && e.tooltip && this.view.state.facet(ei).closeOnBlur) {
        let t = e.open && J9(this.view, e.open.tooltip);
        (!t || !t.dom.contains(n.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: c0.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: kx.of(!1) }), 20), this.composing = 0;
    }
  }
}), OX = /* @__PURE__ */ Ne.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class _Ie {
  constructor(e, t, r, i) {
    this.field = e, this.line = t, this.from = r, this.to = i;
  }
}
class hI {
  constructor(e, t, r) {
    this.field = e, this.from = t, this.to = r;
  }
  map(e) {
    let t = e.mapPos(this.from, -1, Jr.TrackDel), r = e.mapPos(this.to, 1, Jr.TrackDel);
    return t == null || r == null ? null : new hI(this.field, t, r);
  }
}
class fI {
  constructor(e, t) {
    this.lines = e, this.fieldPositions = t;
  }
  instantiate(e, t) {
    let r = [], i = [t], o = e.doc.lineAt(t), s = /^\s*/.exec(o.text)[0];
    for (let l of this.lines) {
      if (r.length) {
        let u = s, c = /^\t*/.exec(l)[0].length;
        for (let h = 0; h < c; h++)
          u += e.facet(x_);
        i.push(t + u.length - c), l = u + l.slice(c);
      }
      r.push(l), t += l.length + 1;
    }
    let a = this.fieldPositions.map((l) => new hI(l.field, i[l.line] + l.from, i[l.line] + l.to));
    return { text: r, ranges: a };
  }
  static parse(e) {
    let t = [], r = [], i = [], o;
    for (let s of e.split(/\r\n?|\n/)) {
      for (; o = /[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(s); ) {
        let a = o[1] ? +o[1] : null, l = o[2] || o[3] || "", u = -1;
        for (let c = 0; c < t.length; c++)
          (a != null ? t[c].seq == a : l && t[c].name == l) && (u = c);
        if (u < 0) {
          let c = 0;
          for (; c < t.length && (a == null || t[c].seq != null && t[c].seq < a); )
            c++;
          t.splice(c, 0, { seq: a, name: l }), u = c;
          for (let h of i)
            h.field >= u && h.field++;
        }
        i.push(new _Ie(u, r.length, o.index, o.index + l.length)), s = s.slice(0, o.index) + l + s.slice(o.index + o[0].length);
      }
      for (let a; a = /\\([{}])/.exec(s); ) {
        s = s.slice(0, a.index) + a[1] + s.slice(a.index + a[0].length);
        for (let l of i)
          l.line == r.length && l.from > a.index && (l.from--, l.to--);
      }
      r.push(s);
    }
    return new fI(r, i);
  }
}
let CIe = /* @__PURE__ */ tt.widget({ widget: /* @__PURE__ */ new class extends vu {
  toDOM() {
    let n = document.createElement("span");
    return n.className = "cm-snippetFieldPosition", n;
  }
  ignoreEvent() {
    return !1;
  }
}() }), AIe = /* @__PURE__ */ tt.mark({ class: "cm-snippetField" });
class ov {
  constructor(e, t) {
    this.ranges = e, this.active = t, this.deco = tt.set(e.map((r) => (r.from == r.to ? CIe : AIe).range(r.from, r.to)));
  }
  map(e) {
    let t = [];
    for (let r of this.ranges) {
      let i = r.map(e);
      if (!i)
        return null;
      t.push(i);
    }
    return new ov(t, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((t) => this.ranges.some((r) => r.field == this.active && r.from <= t.from && r.to >= t.to));
  }
}
const mb = /* @__PURE__ */ wt.define({
  map(n, e) {
    return n && n.map(e);
  }
}), TIe = /* @__PURE__ */ wt.define(), h0 = /* @__PURE__ */ Wr.define({
  create() {
    return null;
  },
  update(n, e) {
    for (let t of e.effects) {
      if (t.is(mb))
        return t.value;
      if (t.is(TIe) && n)
        return new ov(n.ranges, t.value);
    }
    return n && e.docChanged && (n = n.map(e.changes)), n && e.selection && !n.selectionInsideField(e.selection) && (n = null), n;
  },
  provide: (n) => Ne.decorations.from(n, (e) => e ? e.deco : tt.none)
});
function dI(n, e) {
  return ce.create(n.filter((t) => t.field == e).map((t) => ce.range(t.from, t.to)));
}
function PIe(n) {
  let e = fI.parse(n);
  return (t, r, i, o) => {
    let { text: s, ranges: a } = e.instantiate(t.state, i), l = {
      changes: { from: i, to: o, insert: Ut.of(s) },
      scrollIntoView: !0,
      annotations: r ? [vX.of(r), fr.userEvent.of("input.complete")] : void 0
    };
    if (a.length && (l.selection = dI(a, 0)), a.some((u) => u.field > 0)) {
      let u = new ov(a, 0), c = l.effects = [mb.of(u)];
      t.state.field(h0, !1) === void 0 && c.push(wt.appendConfig.of([h0, LIe, IIe, OX]));
    }
    t.dispatch(t.state.update(l));
  };
}
function wX(n) {
  return ({ state: e, dispatch: t }) => {
    let r = e.field(h0, !1);
    if (!r || n < 0 && r.active == 0)
      return !1;
    let i = r.active + n, o = n > 0 && !r.ranges.some((s) => s.field == i + n);
    return t(e.update({
      selection: dI(r.ranges, i),
      effects: mb.of(o ? null : new ov(r.ranges, i)),
      scrollIntoView: !0
    })), !0;
  };
}
const EIe = ({ state: n, dispatch: e }) => n.field(h0, !1) ? (e(n.update({ effects: mb.of(null) })), !0) : !1, kIe = /* @__PURE__ */ wX(1), MIe = /* @__PURE__ */ wX(-1), DIe = [
  { key: "Tab", run: kIe, shift: MIe },
  { key: "Escape", run: EIe }
], iV = /* @__PURE__ */ Be.define({
  combine(n) {
    return n.length ? n[0] : DIe;
  }
}), LIe = /* @__PURE__ */ pd.highest(/* @__PURE__ */ O_.compute([iV], (n) => n.facet(iV)));
function Ji(n, e) {
  return Object.assign(Object.assign({}, e), { apply: PIe(n) });
}
const IIe = /* @__PURE__ */ Ne.domEventHandlers({
  mousedown(n, e) {
    let t = e.state.field(h0, !1), r;
    if (!t || (r = e.posAtCoords({ x: n.clientX, y: n.clientY })) == null)
      return !1;
    let i = t.ranges.find((o) => o.from <= r && o.to >= r);
    return !i || i.field == t.active ? !1 : (e.dispatch({
      selection: dI(t.ranges, i.field),
      effects: mb.of(t.ranges.some((o) => o.field > i.field) ? new ov(t.ranges, i.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), f0 = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, af = /* @__PURE__ */ wt.define({
  map(n, e) {
    let t = e.mapPos(n, -1, Jr.TrackAfter);
    return t ?? void 0;
  }
}), pI = /* @__PURE__ */ new class extends qf {
}();
pI.startSide = 1;
pI.endSide = -1;
const xX = /* @__PURE__ */ Wr.define({
  create() {
    return Zt.empty;
  },
  update(n, e) {
    if (n = n.map(e.changes), e.selection) {
      let t = e.state.doc.lineAt(e.selection.main.head);
      n = n.update({ filter: (r) => r >= t.from && r <= t.to });
    }
    for (let t of e.effects)
      t.is(af) && (n = n.update({ add: [pI.range(t.value, t.value + 1)] }));
    return n;
  }
});
function RIe() {
  return [NIe, xX];
}
const P2 = "()[]{}<>";
function SX(n) {
  for (let e = 0; e < P2.length; e += 2)
    if (P2.charCodeAt(e) == n)
      return P2.charAt(e + 1);
  return IL(n < 128 ? n : n + 1);
}
function _X(n, e) {
  return n.languageDataAt("closeBrackets", e)[0] || f0;
}
const $Ie = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), NIe = /* @__PURE__ */ Ne.inputHandler.of((n, e, t, r) => {
  if (($Ie ? n.composing : n.compositionStarted) || n.state.readOnly)
    return !1;
  let i = n.state.selection.main;
  if (r.length > 2 || r.length == 2 && ls(Xr(r, 0)) == 1 || e != i.from || t != i.to)
    return !1;
  let o = zIe(n.state, r);
  return o ? (n.dispatch(o), !0) : !1;
}), BIe = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let r = _X(n, n.selection.main.head).brackets || f0.brackets, i = null, o = n.changeByRange((s) => {
    if (s.empty) {
      let a = FIe(n.doc, s.head);
      for (let l of r)
        if (l == a && k_(n.doc, s.head) == SX(Xr(l, 0)))
          return {
            changes: { from: s.head - l.length, to: s.head + l.length },
            range: ce.cursor(s.head - l.length)
          };
    }
    return { range: i = s };
  });
  return i || e(n.update(o, { scrollIntoView: !0, userEvent: "delete.backward" })), !i;
}, VIe = [
  { key: "Backspace", run: BIe }
];
function zIe(n, e) {
  let t = _X(n, n.selection.main.head), r = t.brackets || f0.brackets;
  for (let i of r) {
    let o = SX(Xr(i, 0));
    if (e == i)
      return o == i ? WIe(n, i, r.indexOf(i + i + i) > -1, t) : QIe(n, i, o, t.before || f0.before);
    if (e == o && CX(n, n.selection.main.from))
      return ZIe(n, i, o);
  }
  return null;
}
function CX(n, e) {
  let t = !1;
  return n.field(xX).between(0, n.doc.length, (r) => {
    r == e && (t = !0);
  }), t;
}
function k_(n, e) {
  let t = n.sliceString(e, e + 2);
  return t.slice(0, ls(Xr(t, 0)));
}
function FIe(n, e) {
  let t = n.sliceString(e - 2, e);
  return ls(Xr(t, 0)) == t.length ? t : t.slice(1);
}
function QIe(n, e, t, r) {
  let i = null, o = n.changeByRange((s) => {
    if (!s.empty)
      return {
        changes: [{ insert: e, from: s.from }, { insert: t, from: s.to }],
        effects: af.of(s.to + e.length),
        range: ce.range(s.anchor + e.length, s.head + e.length)
      };
    let a = k_(n.doc, s.head);
    return !a || /\s/.test(a) || r.indexOf(a) > -1 ? {
      changes: { insert: e + t, from: s.head },
      effects: af.of(s.head + e.length),
      range: ce.cursor(s.head + e.length)
    } : { range: i = s };
  });
  return i ? null : n.update(o, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function ZIe(n, e, t) {
  let r = null, i = n.changeByRange((o) => o.empty && k_(n.doc, o.head) == t ? {
    changes: { from: o.head, to: o.head + t.length, insert: t },
    range: ce.cursor(o.head + t.length)
  } : r = { range: o });
  return r ? null : n.update(i, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function WIe(n, e, t, r) {
  let i = r.stringPrefixes || f0.stringPrefixes, o = null, s = n.changeByRange((a) => {
    if (!a.empty)
      return {
        changes: [{ insert: e, from: a.from }, { insert: e, from: a.to }],
        effects: af.of(a.to + e.length),
        range: ce.range(a.anchor + e.length, a.head + e.length)
      };
    let l = a.head, u = k_(n.doc, l), c;
    if (u == e) {
      if (oV(n, l))
        return {
          changes: { insert: e + e, from: l },
          effects: af.of(l + e.length),
          range: ce.cursor(l + e.length)
        };
      if (CX(n, l)) {
        let f = t && n.sliceDoc(l, l + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: l, to: l + f.length, insert: f },
          range: ce.cursor(l + f.length)
        };
      }
    } else {
      if (t && n.sliceDoc(l - 2 * e.length, l) == e + e && (c = sV(n, l - 2 * e.length, i)) > -1 && oV(n, c))
        return {
          changes: { insert: e + e + e + e, from: l },
          effects: af.of(l + e.length),
          range: ce.cursor(l + e.length)
        };
      if (n.charCategorizer(l)(u) != Rn.Word && sV(n, l, i) > -1 && !GIe(n, l, e, i))
        return {
          changes: { insert: e + e, from: l },
          effects: af.of(l + e.length),
          range: ce.cursor(l + e.length)
        };
    }
    return { range: o = a };
  });
  return o ? null : n.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function oV(n, e) {
  let t = Er(n).resolveInner(e + 1);
  return t.parent && t.from == e;
}
function GIe(n, e, t, r) {
  let i = Er(n).resolveInner(e, -1), o = r.reduce((s, a) => Math.max(s, a.length), 0);
  for (let s = 0; s < 5; s++) {
    let a = n.sliceDoc(i.from, Math.min(i.to, i.from + t.length + o)), l = a.indexOf(t);
    if (!l || l > -1 && r.indexOf(a.slice(0, l)) > -1) {
      let c = i.firstChild;
      for (; c && c.from == i.from && c.to - c.from > t.length + l; ) {
        if (n.sliceDoc(c.to - t.length, c.to) == t)
          return !1;
        c = c.firstChild;
      }
      return !0;
    }
    let u = i.to == e && i.parent;
    if (!u)
      break;
    i = u;
  }
  return !1;
}
function sV(n, e, t) {
  let r = n.charCategorizer(e);
  if (r(n.sliceDoc(e - 1, e)) != Rn.Word)
    return e;
  for (let i of t) {
    let o = e - i.length;
    if (n.sliceDoc(o, e) == i && r(n.sliceDoc(o - 1, o)) != Rn.Word)
      return o;
  }
  return -1;
}
function jIe(n = {}) {
  return [
    ko,
    ei.of(n),
    SIe,
    HIe,
    OX
  ];
}
const AX = [
  { key: "Ctrl-Space", run: yIe },
  { key: "Escape", run: bIe },
  { key: "ArrowDown", run: /* @__PURE__ */ A1(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ A1(!1) },
  { key: "PageDown", run: /* @__PURE__ */ A1(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ A1(!1, "page") },
  { key: "Enter", run: mIe }
], HIe = /* @__PURE__ */ pd.highest(/* @__PURE__ */ O_.computeN([ei], (n) => n.facet(ei).defaultKeymap ? [AX] : []));
class qIe {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.diagnostic = r;
  }
}
class Hh {
  constructor(e, t, r) {
    this.diagnostics = e, this.panel = t, this.selected = r;
  }
  static init(e, t, r) {
    let i = e, o = r.facet(EX).markerFilter;
    o && (i = o(i, r));
    let s = tt.set(i.map((a) => a.from == a.to || a.from == a.to - 1 && r.doc.lineAt(a.from).to == a.from ? tt.widget({
      widget: new rRe(a),
      diagnostic: a
    }).range(a.from) : tt.mark({
      attributes: { class: "cm-lintRange cm-lintRange-" + a.severity + (a.markClass ? " " + a.markClass : "") },
      diagnostic: a,
      inclusive: !0
    }).range(a.from, a.to)), !0);
    return new Hh(s, t, kg(s));
  }
}
function kg(n, e = null, t = 0) {
  let r = null;
  return n.between(t, 1e9, (i, o, { spec: s }) => {
    if (!(e && s.diagnostic != e))
      return r = new qIe(i, o, s.diagnostic), !1;
  }), r;
}
function YIe(n, e) {
  let t = n.startState.doc.lineAt(e.pos);
  return !!(n.effects.some((r) => r.is(TX)) || n.changes.touchesRange(t.from, t.to));
}
function XIe(n, e) {
  return n.field(Ro, !1) ? e : e.concat(wt.appendConfig.of(sRe));
}
const TX = /* @__PURE__ */ wt.define(), gI = /* @__PURE__ */ wt.define(), PX = /* @__PURE__ */ wt.define(), Ro = /* @__PURE__ */ Wr.define({
  create() {
    return new Hh(tt.none, null, null);
  },
  update(n, e) {
    if (e.docChanged) {
      let t = n.diagnostics.map(e.changes), r = null;
      if (n.selected) {
        let i = e.changes.mapPos(n.selected.from, 1);
        r = kg(t, n.selected.diagnostic, i) || kg(t, null, i);
      }
      n = new Hh(t, n.panel, r);
    }
    for (let t of e.effects)
      t.is(TX) ? n = Hh.init(t.value, n.panel, e.state) : t.is(gI) ? n = new Hh(n.diagnostics, t.value ? M_.open : null, n.selected) : t.is(PX) && (n = new Hh(n.diagnostics, n.panel, t.value));
    return n;
  },
  provide: (n) => [
    o0.from(n, (e) => e.panel),
    Ne.decorations.from(n, (e) => e.diagnostics)
  ]
}), UIe = /* @__PURE__ */ tt.mark({ class: "cm-lintRange cm-lintRange-active", inclusive: !0 });
function KIe(n, e, t) {
  let { diagnostics: r } = n.state.field(Ro), i = [], o = 2e8, s = 0;
  r.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (l, u, { spec: c }) => {
    e >= l && e <= u && (l == u || (e > l || t > 0) && (e < u || t < 0)) && (i.push(c.diagnostic), o = Math.min(l, o), s = Math.max(u, s));
  });
  let a = n.state.facet(EX).tooltipFilter;
  return a && (i = a(i, n.state)), i.length ? {
    pos: o,
    end: s,
    above: n.state.doc.lineAt(o).to < s,
    create() {
      return { dom: JIe(n, i) };
    }
  } : null;
}
function JIe(n, e) {
  return bn("ul", { class: "cm-tooltip-lint" }, e.map((t) => MX(n, t, !1)));
}
const eRe = (n) => {
  let e = n.state.field(Ro, !1);
  (!e || !e.panel) && n.dispatch({ effects: XIe(n.state, [gI.of(!0)]) });
  let t = i0(n, M_.open);
  return t && t.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, aV = (n) => {
  let e = n.state.field(Ro, !1);
  return !e || !e.panel ? !1 : (n.dispatch({ effects: gI.of(!1) }), !0);
}, tRe = (n) => {
  let e = n.state.field(Ro, !1);
  if (!e)
    return !1;
  let t = n.state.selection.main, r = e.diagnostics.iter(t.to + 1);
  return !r.value && (r = e.diagnostics.iter(0), !r.value || r.from == t.from && r.to == t.to) ? !1 : (n.dispatch({ selection: { anchor: r.from, head: r.to }, scrollIntoView: !0 }), !0);
}, nRe = [
  { key: "Mod-Shift-m", run: eRe, preventDefault: !0 },
  { key: "F8", run: tRe }
], EX = /* @__PURE__ */ Be.define({
  combine(n) {
    return Object.assign({ sources: n.map((e) => e.source).filter((e) => e != null) }, Ol(n.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null
    }, {
      needsRefresh: (e, t) => e ? t ? (r) => e(r) || t(r) : e : t
    }));
  }
});
function kX(n) {
  let e = [];
  if (n)
    e:
      for (let { name: t } of n) {
        for (let r = 0; r < t.length; r++) {
          let i = t[r];
          if (/[a-zA-Z]/.test(i) && !e.some((o) => o.toLowerCase() == i.toLowerCase())) {
            e.push(i);
            continue e;
          }
        }
        e.push("");
      }
  return e;
}
function MX(n, e, t) {
  var r;
  let i = t ? kX(e.actions) : [];
  return bn("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, bn("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage() : e.message), (r = e.actions) === null || r === void 0 ? void 0 : r.map((o, s) => {
    let a = !1, l = (f) => {
      if (f.preventDefault(), a)
        return;
      a = !0;
      let d = kg(n.state.field(Ro).diagnostics, e);
      d && o.apply(n, d.from, d.to);
    }, { name: u } = o, c = i[s] ? u.indexOf(i[s]) : -1, h = c < 0 ? u : [
      u.slice(0, c),
      bn("u", u.slice(c, c + 1)),
      u.slice(c + 1)
    ];
    return bn("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: l,
      onmousedown: l,
      "aria-label": ` Action: ${u}${c < 0 ? "" : ` (access key "${i[s]})"`}.`
    }, h);
  }), e.source && bn("div", { class: "cm-diagnosticSource" }, e.source));
}
class rRe extends vu {
  constructor(e) {
    super(), this.diagnostic = e;
  }
  eq(e) {
    return e.diagnostic == this.diagnostic;
  }
  toDOM() {
    return bn("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
  }
}
class lV {
  constructor(e, t) {
    this.diagnostic = t, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = MX(e, t, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class M_ {
  constructor(e) {
    this.view = e, this.items = [];
    let t = (i) => {
      if (i.keyCode == 27)
        aV(this.view), this.view.focus();
      else if (i.keyCode == 38 || i.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (i.keyCode == 40 || i.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (i.keyCode == 36)
        this.moveSelection(0);
      else if (i.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (i.keyCode == 13)
        this.view.focus();
      else if (i.keyCode >= 65 && i.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: o } = this.items[this.selectedIndex], s = kX(o.actions);
        for (let a = 0; a < s.length; a++)
          if (s[a].toUpperCase().charCodeAt(0) == i.keyCode) {
            let l = kg(this.view.state.field(Ro).diagnostics, o);
            l && o.actions[a].apply(e, l.from, l.to);
          }
      } else
        return;
      i.preventDefault();
    }, r = (i) => {
      for (let o = 0; o < this.items.length; o++)
        this.items[o].dom.contains(i.target) && this.moveSelection(o);
    };
    this.list = bn("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: t,
      onclick: r
    }), this.dom = bn("div", { class: "cm-panel-lint" }, this.list, bn("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => aV(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(Ro).selected;
    if (!e)
      return -1;
    for (let t = 0; t < this.items.length; t++)
      if (this.items[t].diagnostic == e.diagnostic)
        return t;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: t } = this.view.state.field(Ro), r = 0, i = !1, o = null;
    for (e.between(0, this.view.state.doc.length, (s, a, { spec: l }) => {
      let u = -1, c;
      for (let h = r; h < this.items.length; h++)
        if (this.items[h].diagnostic == l.diagnostic) {
          u = h;
          break;
        }
      u < 0 ? (c = new lV(this.view, l.diagnostic), this.items.splice(r, 0, c), i = !0) : (c = this.items[u], u > r && (this.items.splice(r, u - r), i = !0)), t && c.diagnostic == t.diagnostic ? c.dom.hasAttribute("aria-selected") || (c.dom.setAttribute("aria-selected", "true"), o = c) : c.dom.hasAttribute("aria-selected") && c.dom.removeAttribute("aria-selected"), r++;
    }); r < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      i = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new lV(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), i = !0), o ? (this.list.setAttribute("aria-activedescendant", o.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: o.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: s, panel: a }) => {
        let l = a.height / this.list.offsetHeight;
        s.top < a.top ? this.list.scrollTop -= (a.top - s.top) / l : s.bottom > a.bottom && (this.list.scrollTop += (s.bottom - a.bottom) / l);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), i && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function t() {
      let r = e;
      e = r.nextSibling, r.remove();
    }
    for (let r of this.items)
      if (r.dom.parentNode == this.list) {
        for (; e != r.dom; )
          t();
        e = r.dom.nextSibling;
      } else
        this.list.insertBefore(r.dom, e);
    for (; e; )
      t();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let t = this.view.state.field(Ro), r = kg(t.diagnostics, this.items[e].diagnostic);
    r && this.view.dispatch({
      selection: { anchor: r.from, head: r.to },
      scrollIntoView: !0,
      effects: PX.of(r)
    });
  }
  static open(e) {
    return new M_(e);
  }
}
function iRe(n, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(n)}</svg>')`;
}
function T1(n) {
  return iRe(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${n}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const oRe = /* @__PURE__ */ Ne.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ T1("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ T1("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ T1("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ T1("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
}), sRe = [
  Ro,
  /* @__PURE__ */ Ne.decorations.compute([Ro], (n) => {
    let { selected: e, panel: t } = n.field(Ro);
    return !e || !t || e.from == e.to ? tt.none : tt.set([
      UIe.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ Uke(KIe, { hideOn: YIe }),
  oRe
], P4t = [
  sMe(),
  uMe(),
  Pke(),
  CDe(),
  UMe(),
  mke(),
  xke(),
  Yt.allowMultipleSelections.of(!0),
  BMe(),
  JMe(nDe, { fallback: !0 }),
  uDe(),
  RIe(),
  jIe(),
  zke(),
  Zke(),
  Ike(),
  DLe(),
  O_.of([
    ...VIe,
    ...TLe,
    ...ULe,
    ...IDe,
    ...HMe,
    ...AX,
    ...nRe
  ])
];
let aRe = class dk {
  /**
  @internal
  */
  constructor(e, t, r, i, o, s, a, l, u, c = 0, h) {
    this.p = e, this.stack = t, this.state = r, this.reducePos = i, this.pos = o, this.score = s, this.buffer = a, this.bufferBase = l, this.curContext = u, this.lookAhead = c, this.parent = h;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, t) => t % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, t, r = 0) {
    let i = e.parser.context;
    return new dk(e, [], t, r, r, 0, [], 0, i ? new uV(i, i.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, t) {
    this.stack.push(this.state, t, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var t;
    let r = e >> 19, i = e & 65535, { parser: o } = this.p, s = o.dynamicPrecedence(i);
    if (s && (this.score += s), r == 0) {
      this.pushState(o.getGoto(this.state, i, !0), this.reducePos), i < o.minRepeatTerm && this.storeNode(i, this.reducePos, this.reducePos, 4, !0), this.reduceContext(i, this.reducePos);
      return;
    }
    let a = this.stack.length - (r - 1) * 3 - (e & 262144 ? 6 : 0), l = a ? this.stack[a - 2] : this.p.ranges[0].from, u = this.reducePos - l;
    u >= 2e3 && !(!((t = this.p.parser.nodeSet.types[i]) === null || t === void 0) && t.isAnonymous) && (l == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = u) : this.p.lastBigReductionSize < u && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = l, this.p.lastBigReductionSize = u));
    let c = a ? this.stack[a - 1] : 0, h = this.bufferBase + this.buffer.length - c;
    if (i < o.minRepeatTerm || e & 131072) {
      let f = o.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(i, l, f, h + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[a];
    else {
      let f = this.stack[a - 3];
      this.state = o.getGoto(f, i, !0);
    }
    for (; this.stack.length > a; )
      this.stack.pop();
    this.reduceContext(i, l);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, t, r, i = 4, o = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let s = this, a = this.buffer.length;
      if (a == 0 && s.parent && (a = s.bufferBase - s.parent.bufferBase, s = s.parent), a > 0 && s.buffer[a - 4] == 0 && s.buffer[a - 1] > -1) {
        if (t == r)
          return;
        if (s.buffer[a - 2] >= t) {
          s.buffer[a - 2] = r;
          return;
        }
      }
    }
    if (!o || this.pos == r)
      this.buffer.push(e, t, r, i);
    else {
      let s = this.buffer.length;
      if (s > 0 && this.buffer[s - 4] != 0)
        for (; s > 0 && this.buffer[s - 2] > r; )
          this.buffer[s] = this.buffer[s - 4], this.buffer[s + 1] = this.buffer[s - 3], this.buffer[s + 2] = this.buffer[s - 2], this.buffer[s + 3] = this.buffer[s - 1], s -= 4, i > 4 && (i -= 4);
      this.buffer[s] = e, this.buffer[s + 1] = t, this.buffer[s + 2] = r, this.buffer[s + 3] = i;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, t, r, i) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = i, this.shiftContext(t, r), t <= this.p.parser.maxNode && this.buffer.push(t, r, i, 4);
    else {
      let o = e, { parser: s } = this.p;
      (i > this.pos || t <= s.maxNode) && (this.pos = i, s.stateFlag(
        o,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = i)), this.pushState(o, r), this.shiftContext(t, r), t <= s.maxNode && this.buffer.push(t, r, i, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, t, r, i) {
    e & 65536 ? this.reduce(e) : this.shift(e, t, r, i);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, t) {
    let r = this.p.reused.length - 1;
    (r < 0 || this.p.reused[r] != e) && (this.p.reused.push(e), r++);
    let i = this.pos;
    this.reducePos = this.pos = i + e.length, this.pushState(t, i), this.buffer.push(
      r,
      i,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, t = e.buffer.length;
    for (; t > 0 && e.buffer[t - 2] > e.reducePos; )
      t -= 4;
    let r = e.buffer.slice(t), i = e.bufferBase + t;
    for (; e && i == e.bufferBase; )
      e = e.parent;
    return new dk(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, r, i, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, t) {
    let r = e <= this.p.parser.maxNode;
    r && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, r ? 8 : 4), this.pos = this.reducePos = t, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let t = new lRe(this); ; ) {
      let r = this.p.parser.stateSlot(
        t.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(t.state, e);
      if (r == 0)
        return !1;
      if (!(r & 65536))
        return !0;
      t.reduce(r);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let t = this.p.parser.nextStates(this.state);
    if (t.length > 8 || this.stack.length >= 120) {
      let i = [];
      for (let o = 0, s; o < t.length; o += 2)
        (s = t[o + 1]) != this.state && this.p.parser.hasAction(s, e) && i.push(t[o], s);
      if (this.stack.length < 120)
        for (let o = 0; i.length < 8 && o < t.length; o += 2) {
          let s = t[o + 1];
          i.some((a, l) => l & 1 && a == s) || i.push(t[o], s);
        }
      t = i;
    }
    let r = [];
    for (let i = 0; i < t.length && r.length < 4; i += 2) {
      let o = t[i + 1];
      if (o == this.state)
        continue;
      let s = this.split();
      s.pushState(o, this.pos), s.storeNode(0, s.pos, s.pos, 4, !0), s.shiftContext(t[i], this.pos), s.reducePos = this.pos, s.score -= 200, r.push(s);
    }
    return r;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, t = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(t & 65536))
      return !1;
    if (!e.validAction(this.state, t)) {
      let r = t >> 19, i = t & 65535, o = this.stack.length - r * 3;
      if (o < 0 || e.getGoto(this.stack[o], i, !1) < 0) {
        let s = this.findForcedReduction();
        if (s == null)
          return !1;
        t = s;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(t), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, t = [], r = (i, o) => {
      if (!t.includes(i))
        return t.push(i), e.allActions(i, (s) => {
          if (!(s & 393216))
            if (s & 65536) {
              let a = (s >> 19) - o;
              if (a > 1) {
                let l = s & 65535, u = this.stack.length - a * 3;
                if (u >= 0 && e.getGoto(this.stack[u], l, !1) >= 0)
                  return a << 19 | 65536 | l;
              }
            } else {
              let a = r(s, o + 1);
              if (a != null)
                return a;
            }
        });
    };
    return r(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let t = 0; t < this.stack.length; t += 3)
      if (this.stack[t] != e.stack[t])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  reduceContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let t = new uV(this.curContext.tracker, e);
      t.hash != this.curContext.hash && this.emitContext(), this.curContext = t;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
};
class uV {
  constructor(e, t) {
    this.tracker = e, this.context = t, this.hash = e.strict ? e.hash(t) : 0;
  }
}
class lRe {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let t = e & 65535, r = e >> 19;
    r == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (r - 1) * 3;
    let i = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
    this.state = i;
  }
}
class Dx {
  constructor(e, t, r) {
    this.stack = e, this.pos = t, this.index = r, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, t = e.bufferBase + e.buffer.length) {
    return new Dx(e, t, t - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new Dx(this.stack, this.pos, this.index);
  }
}
function Cm(n, e = Uint16Array) {
  if (typeof n != "string")
    return n;
  let t = null;
  for (let r = 0, i = 0; r < n.length; ) {
    let o = 0;
    for (; ; ) {
      let s = n.charCodeAt(r++), a = !1;
      if (s == 126) {
        o = 65535;
        break;
      }
      s >= 92 && s--, s >= 34 && s--;
      let l = s - 32;
      if (l >= 46 && (l -= 46, a = !0), o += l, a)
        break;
      o *= 46;
    }
    t ? t[i++] = o : t = new e(o);
  }
  return t;
}
class uw {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const cV = new uw();
class uRe {
  /**
  @internal
  */
  constructor(e, t) {
    this.input = e, this.ranges = t, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = cV, this.rangeIndex = 0, this.pos = this.chunkPos = t[0].from, this.range = t[0], this.end = t[t.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, t) {
    let r = this.range, i = this.rangeIndex, o = this.pos + e;
    for (; o < r.from; ) {
      if (!i)
        return null;
      let s = this.ranges[--i];
      o -= r.from - s.to, r = s;
    }
    for (; t < 0 ? o > r.to : o >= r.to; ) {
      if (i == this.ranges.length - 1)
        return null;
      let s = this.ranges[++i];
      o += s.from - r.to, r = s;
    }
    return o;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let t of this.ranges)
      if (t.to > e)
        return Math.max(e, t.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let t = this.chunkOff + e, r, i;
    if (t >= 0 && t < this.chunk.length)
      r = this.pos + e, i = this.chunk.charCodeAt(t);
    else {
      let o = this.resolveOffset(e, 1);
      if (o == null)
        return -1;
      if (r = o, r >= this.chunk2Pos && r < this.chunk2Pos + this.chunk2.length)
        i = this.chunk2.charCodeAt(r - this.chunk2Pos);
      else {
        let s = this.rangeIndex, a = this.range;
        for (; a.to <= r; )
          a = this.ranges[++s];
        this.chunk2 = this.input.chunk(this.chunk2Pos = r), r + this.chunk2.length > a.to && (this.chunk2 = this.chunk2.slice(0, a.to - r)), i = this.chunk2.charCodeAt(0);
      }
    }
    return r >= this.token.lookAhead && (this.token.lookAhead = r + 1), i;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, t = 0) {
    let r = t ? this.resolveOffset(t, -1) : this.pos;
    if (r == null || r < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = r;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, t) {
    this.token.value = e, this.token.end = t;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: t } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = t, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), t = this.pos + e.length;
      this.chunk = t > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, t) {
    if (t ? (this.token = t, t.start = e, t.lookAhead = e + 1, t.value = t.extended = -1) : this.token = cV, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, t) {
    if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
    if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
    if (e >= this.range.from && t <= this.range.to)
      return this.input.read(e, t);
    let r = "";
    for (let i of this.ranges) {
      if (i.from >= t)
        break;
      i.to > e && (r += this.input.read(Math.max(i.from, e), Math.min(i.to, t)));
    }
    return r;
  }
}
class Dp {
  constructor(e, t) {
    this.data = e, this.id = t;
  }
  token(e, t) {
    let { parser: r } = t.p;
    DX(this.data, e, t, this.id, r.data, r.tokenPrecTable);
  }
}
Dp.prototype.contextual = Dp.prototype.fallback = Dp.prototype.extend = !1;
class pk {
  constructor(e, t, r) {
    this.precTable = t, this.elseToken = r, this.data = typeof e == "string" ? Cm(e) : e;
  }
  token(e, t) {
    let r = e.pos, i = 0;
    for (; ; ) {
      let o = e.next < 0, s = e.resolveOffset(1, 1);
      if (DX(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (o || i++, s == null)
        break;
      e.reset(s, e.token);
    }
    i && (e.reset(r, e.token), e.acceptToken(this.elseToken, i));
  }
}
pk.prototype.contextual = Dp.prototype.fallback = Dp.prototype.extend = !1;
class D_ {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, t = {}) {
    this.token = e, this.contextual = !!t.contextual, this.fallback = !!t.fallback, this.extend = !!t.extend;
  }
}
function DX(n, e, t, r, i, o) {
  let s = 0, a = 1 << r, { dialect: l } = t.p.parser;
  e:
    for (; a & n[s]; ) {
      let u = n[s + 1];
      for (let d = s + 3; d < u; d += 2)
        if ((n[d + 1] & a) > 0) {
          let p = n[d];
          if (l.allows(p) && (e.token.value == -1 || e.token.value == p || cRe(p, e.token.value, i, o))) {
            e.acceptToken(p);
            break;
          }
        }
      let c = e.next, h = 0, f = n[s + 2];
      if (e.next < 0 && f > h && n[u + f * 3 - 3] == 65535) {
        s = n[u + f * 3 - 1];
        continue e;
      }
      for (; h < f; ) {
        let d = h + f >> 1, p = u + d + (d << 1), g = n[p], v = n[p + 1] || 65536;
        if (c < g)
          f = d;
        else if (c >= v)
          h = d + 1;
        else {
          s = n[p + 2], e.advance();
          continue e;
        }
      }
      break;
    }
}
function hV(n, e, t) {
  for (let r = e, i; (i = n[r]) != 65535; r++)
    if (i == t)
      return r - e;
  return -1;
}
function cRe(n, e, t, r) {
  let i = hV(t, r, e);
  return i < 0 || hV(t, r, n) < i;
}
const bo = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let E2 = null;
function fV(n, e, t) {
  let r = n.cursor(Cr.IncludeAnonymous);
  for (r.moveTo(e); ; )
    if (!(t < 0 ? r.childBefore(e) : r.childAfter(e)))
      for (; ; ) {
        if ((t < 0 ? r.to < e : r.from > e) && !r.type.isError)
          return t < 0 ? Math.max(0, Math.min(
            r.to - 1,
            e - 25
            /* Safety.Margin */
          )) : Math.min(n.length, Math.max(
            r.from + 1,
            e + 25
            /* Safety.Margin */
          ));
        if (t < 0 ? r.prevSibling() : r.nextSibling())
          break;
        if (!r.parent())
          return t < 0 ? 0 : n.length;
      }
}
class hRe {
  constructor(e, t) {
    this.fragments = e, this.nodeSet = t, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? fV(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? fV(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let t = this.trees.length - 1;
      if (t < 0)
        return this.nextFragment(), null;
      let r = this.trees[t], i = this.index[t];
      if (i == r.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let o = r.children[i], s = this.start[t] + r.positions[i];
      if (s > e)
        return this.nextStart = s, null;
      if (o instanceof ri) {
        if (s == e) {
          if (s < this.safeFrom)
            return null;
          let a = s + o.length;
          if (a <= this.safeTo) {
            let l = o.prop(Lt.lookAhead);
            if (!l || a + l < this.fragment.to)
              return o;
          }
        }
        this.index[t]++, s + o.length >= Math.max(this.safeFrom, e) && (this.trees.push(o), this.start.push(s), this.index.push(0));
      } else
        this.index[t]++, this.nextStart = s + o.length;
    }
  }
}
class fRe {
  constructor(e, t) {
    this.stream = t, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((r) => new uw());
  }
  getActions(e) {
    let t = 0, r = null, { parser: i } = e.p, { tokenizers: o } = i, s = i.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), a = e.curContext ? e.curContext.hash : 0, l = 0;
    for (let u = 0; u < o.length; u++) {
      if (!(1 << u & s))
        continue;
      let c = o[u], h = this.tokens[u];
      if (!(r && !c.fallback) && ((c.contextual || h.start != e.pos || h.mask != s || h.context != a) && (this.updateCachedToken(h, c, e), h.mask = s, h.context = a), h.lookAhead > h.end + 25 && (l = Math.max(h.lookAhead, l)), h.value != 0)) {
        let f = t;
        if (h.extended > -1 && (t = this.addActions(e, h.extended, h.end, t)), t = this.addActions(e, h.value, h.end, t), !c.extend && (r = h, t > f))
          break;
      }
    }
    for (; this.actions.length > t; )
      this.actions.pop();
    return l && e.setLookAhead(l), !r && e.pos == this.stream.end && (r = new uw(), r.value = e.p.parser.eofTerm, r.start = r.end = e.pos, t = this.addActions(e, r.value, r.end, t)), this.mainToken = r, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let t = new uw(), { pos: r, p: i } = e;
    return t.start = r, t.end = Math.min(r + 1, i.stream.end), t.value = r == i.stream.end ? i.parser.eofTerm : 0, t;
  }
  updateCachedToken(e, t, r) {
    let i = this.stream.clipPos(r.pos);
    if (t.token(this.stream.reset(i, e), r), e.value > -1) {
      let { parser: o } = r.p;
      for (let s = 0; s < o.specialized.length; s++)
        if (o.specialized[s] == e.value) {
          let a = o.specializers[s](this.stream.read(e.start, e.end), r);
          if (a >= 0 && r.p.parser.dialect.allows(a >> 1)) {
            a & 1 ? e.extended = a >> 1 : e.value = a >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(i + 1);
  }
  putAction(e, t, r, i) {
    for (let o = 0; o < i; o += 3)
      if (this.actions[o] == e)
        return i;
    return this.actions[i++] = e, this.actions[i++] = t, this.actions[i++] = r, i;
  }
  addActions(e, t, r, i) {
    let { state: o } = e, { parser: s } = e.p, { data: a } = s;
    for (let l = 0; l < 2; l++)
      for (let u = s.stateSlot(
        o,
        l ? 2 : 1
        /* ParseState.Actions */
      ); ; u += 3) {
        if (a[u] == 65535)
          if (a[u + 1] == 1)
            u = Il(a, u + 2);
          else {
            i == 0 && a[u + 1] == 2 && (i = this.putAction(Il(a, u + 2), t, r, i));
            break;
          }
        a[u] == t && (i = this.putAction(Il(a, u + 1), t, r, i));
      }
    return i;
  }
}
class dRe {
  constructor(e, t, r, i) {
    this.parser = e, this.input = t, this.ranges = i, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new uRe(t, i), this.tokens = new fRe(e, this.stream), this.topTerm = e.top[1];
    let { from: o } = i[0];
    this.stacks = [aRe.start(this, e.top[0], o)], this.fragments = r.length && this.stream.end - o > e.bufferLength * 4 ? new hRe(r, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, t = this.minStackPos, r = this.stacks = [], i, o;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [s] = e;
      for (; s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let s = 0; s < e.length; s++) {
      let a = e[s];
      for (; ; ) {
        if (this.tokens.mainToken = null, a.pos > t)
          r.push(a);
        else {
          if (this.advanceStack(a, r, e))
            continue;
          {
            i || (i = [], o = []), i.push(a);
            let l = this.tokens.getMainToken(a);
            o.push(l.value, l.end);
          }
        }
        break;
      }
    }
    if (!r.length) {
      let s = i && vRe(i);
      if (s)
        return bo && console.log("Finish with " + this.stackID(s)), this.stackToTree(s);
      if (this.parser.strict)
        throw bo && i && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && i) {
      let s = this.stoppedAt != null && i[0].pos > this.stoppedAt ? i[0] : this.runRecovery(i, o, r);
      if (s)
        return bo && console.log("Force-finish " + this.stackID(s)), this.stackToTree(s.forceAll());
    }
    if (this.recovering) {
      let s = this.recovering == 1 ? 1 : this.recovering * 3;
      if (r.length > s)
        for (r.sort((a, l) => l.score - a.score); r.length > s; )
          r.pop();
      r.some((a) => a.reducePos > t) && this.recovering--;
    } else if (r.length > 1) {
      e:
        for (let s = 0; s < r.length - 1; s++) {
          let a = r[s];
          for (let l = s + 1; l < r.length; l++) {
            let u = r[l];
            if (a.sameState(u) || a.buffer.length > 500 && u.buffer.length > 500)
              if ((a.score - u.score || a.buffer.length - u.buffer.length) > 0)
                r.splice(l--, 1);
              else {
                r.splice(s--, 1);
                continue e;
              }
          }
        }
      r.length > 12 && r.splice(
        12,
        r.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = r[0].pos;
    for (let s = 1; s < r.length; s++)
      r[s].pos < this.minStackPos && (this.minStackPos = r[s].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, t, r) {
    let i = e.pos, { parser: o } = this, s = bo ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && i > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let u = e.curContext && e.curContext.tracker.strict, c = u ? e.curContext.hash : 0;
      for (let h = this.fragments.nodeAt(i); h; ) {
        let f = this.parser.nodeSet.types[h.type.id] == h.type ? o.getGoto(e.state, h.type.id) : -1;
        if (f > -1 && h.length && (!u || (h.prop(Lt.contextHash) || 0) == c))
          return e.useNode(h, f), bo && console.log(s + this.stackID(e) + ` (via reuse of ${o.getName(h.type.id)})`), !0;
        if (!(h instanceof ri) || h.children.length == 0 || h.positions[0] > 0)
          break;
        let d = h.children[0];
        if (d instanceof ri && h.positions[0] == 0)
          h = d;
        else
          break;
      }
    }
    let a = o.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (a > 0)
      return e.reduce(a), bo && console.log(s + this.stackID(e) + ` (via always-reduce ${o.getName(
        a & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let l = this.tokens.getActions(e);
    for (let u = 0; u < l.length; ) {
      let c = l[u++], h = l[u++], f = l[u++], d = u == l.length || !r, p = d ? e : e.split(), g = this.tokens.mainToken;
      if (p.apply(c, h, g ? g.start : p.pos, f), bo && console.log(s + this.stackID(p) + ` (via ${c & 65536 ? `reduce of ${o.getName(
        c & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${o.getName(h)} @ ${i}${p == e ? "" : ", split"})`), d)
        return !0;
      p.pos > i ? t.push(p) : r.push(p);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, t) {
    let r = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > r)
        return dV(e, t), !0;
    }
  }
  runRecovery(e, t, r) {
    let i = null, o = !1;
    for (let s = 0; s < e.length; s++) {
      let a = e[s], l = t[s << 1], u = t[(s << 1) + 1], c = bo ? this.stackID(a) + " -> " : "";
      if (a.deadEnd && (o || (o = !0, a.restart(), bo && console.log(c + this.stackID(a) + " (restarted)"), this.advanceFully(a, r))))
        continue;
      let h = a.split(), f = c;
      for (let d = 0; h.forceReduce() && d < 10 && (bo && console.log(f + this.stackID(h) + " (via force-reduce)"), !this.advanceFully(h, r)); d++)
        bo && (f = this.stackID(h) + " -> ");
      for (let d of a.recoverByInsert(l))
        bo && console.log(c + this.stackID(d) + " (via recover-insert)"), this.advanceFully(d, r);
      this.stream.end > a.pos ? (u == a.pos && (u++, l = 0), a.recoverByDelete(l, u), bo && console.log(c + this.stackID(a) + ` (via recover-delete ${this.parser.getName(l)})`), dV(a, r)) : (!i || i.score < a.score) && (i = a);
    }
    return i;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), ri.build({
      buffer: Dx.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let t = (E2 || (E2 = /* @__PURE__ */ new WeakMap())).get(e);
    return t || E2.set(e, t = String.fromCodePoint(this.nextStackID++)), t + e;
  }
}
function dV(n, e) {
  for (let t = 0; t < e.length; t++) {
    let r = e[t];
    if (r.pos == n.pos && r.sameState(n)) {
      e[t].score < n.score && (e[t] = n);
      return;
    }
  }
  e.push(n);
}
class pRe {
  constructor(e, t, r) {
    this.source = e, this.flags = t, this.disabled = r;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const k2 = (n) => n;
class gRe {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || k2, this.reduce = e.reduce || k2, this.reuse = e.reuse || k2, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class d0 extends aY {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let t = e.nodeNames.split(" ");
    this.minRepeatTerm = t.length;
    for (let a = 0; a < e.repeatNodeCount; a++)
      t.push("");
    let r = Object.keys(e.topRules).map((a) => e.topRules[a][1]), i = [];
    for (let a = 0; a < t.length; a++)
      i.push([]);
    function o(a, l, u) {
      i[a].push([l, l.deserialize(String(u))]);
    }
    if (e.nodeProps)
      for (let a of e.nodeProps) {
        let l = a[0];
        typeof l == "string" && (l = Lt[l]);
        for (let u = 1; u < a.length; ) {
          let c = a[u++];
          if (c >= 0)
            o(c, l, a[u++]);
          else {
            let h = a[u + -c];
            for (let f = -c; f > 0; f--)
              o(a[u++], l, h);
            u++;
          }
        }
      }
    this.nodeSet = new HL(t.map((a, l) => po.define({
      name: l >= this.minRepeatTerm ? void 0 : a,
      id: l,
      props: i[l],
      top: r.indexOf(l) > -1,
      error: l == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = rY;
    let s = Cm(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let a = 0; a < this.specializerSpecs.length; a++)
      this.specialized[a] = this.specializerSpecs[a].term;
    this.specializers = this.specializerSpecs.map(pV), this.states = Cm(e.states, Uint32Array), this.data = Cm(e.stateData), this.goto = Cm(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((a) => typeof a == "number" ? new Dp(s, a) : a), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, t, r) {
    let i = new dRe(this, e, t, r);
    for (let o of this.wrappers)
      i = o(i, e, t, r);
    return i;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, t, r = !1) {
    let i = this.goto;
    if (t >= i[0])
      return -1;
    for (let o = i[t + 1]; ; ) {
      let s = i[o++], a = s & 1, l = i[o++];
      if (a && r)
        return l;
      for (let u = o + (s >> 1); o < u; o++)
        if (i[o] == e)
          return l;
      if (a)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, t) {
    let r = this.data;
    for (let i = 0; i < 2; i++)
      for (let o = this.stateSlot(
        e,
        i ? 2 : 1
        /* ParseState.Actions */
      ), s; ; o += 3) {
        if ((s = r[o]) == 65535)
          if (r[o + 1] == 1)
            s = r[o = Il(r, o + 2)];
          else {
            if (r[o + 1] == 2)
              return Il(r, o + 2);
            break;
          }
        if (s == t || s == 0)
          return Il(r, o + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, t) {
    return this.states[e * 6 + t];
  }
  /**
  @internal
  */
  stateFlag(e, t) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & t) > 0;
  }
  /**
  @internal
  */
  validAction(e, t) {
    return !!this.allActions(e, (r) => r == t ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, t) {
    let r = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), i = r ? t(r) : void 0;
    for (let o = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); i == null; o += 3) {
      if (this.data[o] == 65535)
        if (this.data[o + 1] == 1)
          o = Il(this.data, o + 2);
        else
          break;
      i = t(Il(this.data, o + 1));
    }
    return i;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let t = [];
    for (let r = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; r += 3) {
      if (this.data[r] == 65535)
        if (this.data[r + 1] == 1)
          r = Il(this.data, r + 2);
        else
          break;
      if (!(this.data[r + 2] & 1)) {
        let i = this.data[r + 1];
        t.some((o, s) => s & 1 && o == i) || t.push(this.data[r], i);
      }
    }
    return t;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let t = Object.assign(Object.create(d0.prototype), this);
    if (e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let r = this.topRules[e.top];
      if (!r)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      t.top = r;
    }
    return e.tokenizers && (t.tokenizers = this.tokenizers.map((r) => {
      let i = e.tokenizers.find((o) => o.from == r);
      return i ? i.to : r;
    })), e.specializers && (t.specializers = this.specializers.slice(), t.specializerSpecs = this.specializerSpecs.map((r, i) => {
      let o = e.specializers.find((a) => a.from == r.external);
      if (!o)
        return r;
      let s = Object.assign(Object.assign({}, r), { external: o.to });
      return t.specializers[i] = pV(s), s;
    })), e.contextTracker && (t.context = e.contextTracker), e.dialect && (t.dialect = this.parseDialect(e.dialect)), e.strict != null && (t.strict = e.strict), e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)), e.bufferLength != null && (t.bufferLength = e.bufferLength), t;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let t = this.dynamicPrecedences;
    return t == null ? 0 : t[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let t = Object.keys(this.dialects), r = t.map(() => !1);
    if (e)
      for (let o of e.split(" ")) {
        let s = t.indexOf(o);
        s >= 0 && (r[s] = !0);
      }
    let i = null;
    for (let o = 0; o < t.length; o++)
      if (!r[o])
        for (let s = this.dialects[t[o]], a; (a = this.data[s++]) != 65535; )
          (i || (i = new Uint8Array(this.maxTerm + 1)))[a] = 1;
    return new pRe(e, r, i);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new d0(e);
  }
}
function Il(n, e) {
  return n[e] | n[e + 1] << 16;
}
function vRe(n) {
  let e = null;
  for (let t of n) {
    let r = t.p.stoppedAt;
    (t.pos == t.p.stream.end || r != null && t.pos > r) && t.p.parser.stateFlag(
      t.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < t.score) && (e = t);
  }
  return e;
}
function pV(n) {
  if (n.external) {
    let e = n.extend ? 1 : 0;
    return (t, r) => n.external(t, r) << 1 | e;
  }
  return n.get;
}
const mRe = 309, gV = 1, yRe = 2, bRe = 3, ORe = 310, wRe = 312, xRe = 313, SRe = 4, _Re = 5, CRe = 0, gk = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], LX = 125, ARe = 59, vk = 47, TRe = 42, PRe = 43, ERe = 45, kRe = 60, MRe = 44, DRe = new gRe({
  start: !1,
  shift(n, e) {
    return e == SRe || e == _Re || e == wRe ? n : e == xRe;
  },
  strict: !1
}), LRe = new D_((n, e) => {
  let { next: t } = n;
  (t == LX || t == -1 || e.context) && n.acceptToken(ORe);
}, { contextual: !0, fallback: !0 }), IRe = new D_((n, e) => {
  let { next: t } = n, r;
  gk.indexOf(t) > -1 || t == vk && ((r = n.peek(1)) == vk || r == TRe) || t != LX && t != ARe && t != -1 && !e.context && n.acceptToken(mRe);
}, { contextual: !0 }), RRe = new D_((n, e) => {
  let { next: t } = n;
  if ((t == PRe || t == ERe) && (n.advance(), t == n.next)) {
    n.advance();
    let r = !e.context && e.canShift(gV);
    n.acceptToken(r ? gV : yRe);
  }
}, { contextual: !0 });
function M2(n, e) {
  return n >= 65 && n <= 90 || n >= 97 && n <= 122 || n == 95 || n >= 192 || !e && n >= 48 && n <= 57;
}
const $Re = new D_((n, e) => {
  if (n.next != kRe || !e.dialectEnabled(CRe) || (n.advance(), n.next == vk))
    return;
  let t = 0;
  for (; gk.indexOf(n.next) > -1; )
    n.advance(), t++;
  if (M2(n.next, !0)) {
    for (n.advance(), t++; M2(n.next, !1); )
      n.advance(), t++;
    for (; gk.indexOf(n.next) > -1; )
      n.advance(), t++;
    if (n.next == MRe)
      return;
    for (let r = 0; ; r++) {
      if (r == 7) {
        if (!M2(n.next, !0))
          return;
        break;
      }
      if (n.next != "extends".charCodeAt(r))
        break;
      n.advance(), t++;
    }
  }
  n.acceptToken(bRe, -t);
}), NRe = UL({
  "get set async static": ee.modifier,
  "for while do if else switch try catch finally return throw break continue default case": ee.controlKeyword,
  "in of await yield void typeof delete instanceof": ee.operatorKeyword,
  "let var const using function class extends": ee.definitionKeyword,
  "import export from": ee.moduleKeyword,
  "with debugger as new": ee.keyword,
  TemplateString: ee.special(ee.string),
  super: ee.atom,
  BooleanLiteral: ee.bool,
  this: ee.self,
  null: ee.null,
  Star: ee.modifier,
  VariableName: ee.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": ee.function(ee.variableName),
  VariableDefinition: ee.definition(ee.variableName),
  Label: ee.labelName,
  PropertyName: ee.propertyName,
  PrivatePropertyName: ee.special(ee.propertyName),
  "CallExpression/MemberExpression/PropertyName": ee.function(ee.propertyName),
  "FunctionDeclaration/VariableDefinition": ee.function(ee.definition(ee.variableName)),
  "ClassDeclaration/VariableDefinition": ee.definition(ee.className),
  PropertyDefinition: ee.definition(ee.propertyName),
  PrivatePropertyDefinition: ee.definition(ee.special(ee.propertyName)),
  UpdateOp: ee.updateOperator,
  "LineComment Hashbang": ee.lineComment,
  BlockComment: ee.blockComment,
  Number: ee.number,
  String: ee.string,
  Escape: ee.escape,
  ArithOp: ee.arithmeticOperator,
  LogicOp: ee.logicOperator,
  BitOp: ee.bitwiseOperator,
  CompareOp: ee.compareOperator,
  RegExp: ee.regexp,
  Equals: ee.definitionOperator,
  Arrow: ee.function(ee.punctuation),
  ": Spread": ee.punctuation,
  "( )": ee.paren,
  "[ ]": ee.squareBracket,
  "{ }": ee.brace,
  "InterpolationStart InterpolationEnd": ee.special(ee.brace),
  ".": ee.derefOperator,
  ", ;": ee.separator,
  "@": ee.meta,
  TypeName: ee.typeName,
  TypeDefinition: ee.definition(ee.typeName),
  "type enum interface implements namespace module declare": ee.definitionKeyword,
  "abstract global Privacy readonly override": ee.modifier,
  "is keyof unique infer": ee.operatorKeyword,
  JSXAttributeValue: ee.attributeValue,
  JSXText: ee.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": ee.angleBracket,
  "JSXIdentifier JSXNameSpacedName": ee.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": ee.attributeName,
  "JSXBuiltin/JSXIdentifier": ee.standard(ee.tagName)
}), BRe = { __proto__: null, export: 18, as: 23, from: 31, default: 34, async: 39, function: 40, extends: 52, this: 56, true: 64, false: 64, null: 76, void: 80, typeof: 84, super: 102, new: 136, delete: 152, yield: 161, await: 165, class: 170, public: 227, private: 227, protected: 227, readonly: 229, instanceof: 248, satisfies: 251, in: 252, const: 254, import: 286, keyof: 339, unique: 343, infer: 349, is: 385, abstract: 405, implements: 407, type: 409, let: 412, var: 414, using: 417, interface: 423, enum: 427, namespace: 433, module: 435, declare: 439, global: 443, for: 462, of: 471, while: 474, with: 478, do: 482, if: 486, else: 488, switch: 492, case: 498, try: 504, catch: 508, finally: 512, return: 516, throw: 520, break: 524, continue: 528, debugger: 532 }, VRe = { __proto__: null, async: 123, get: 125, set: 127, declare: 187, public: 189, private: 189, protected: 189, static: 191, abstract: 193, override: 195, readonly: 201, accessor: 203, new: 389 }, zRe = { __proto__: null, "<": 143 }, FRe = d0.deserialize({
  version: 14,
  states: "$<UO%TQ^OOO%[Q^OOO'_Q`OOP(lOWOOO*zQ08SO'#ChO+RO!bO'#CiO+aO#tO'#CiO+oO?MpO'#D^O.QQ^O'#DdO.bQ^O'#DoO%[Q^O'#DyO0fQ^O'#EROOQ07b'#EZ'#EZO1PQWO'#EWOOQO'#El'#ElOOQO'#Ie'#IeO1XQWO'#GmO1dQWO'#EkO1iQWO'#EkO3kQ08SO'#JiO6[Q08SO'#JjO6xQWO'#FZO6}Q&jO'#FqOOQ07b'#Fc'#FcO7YO,YO'#FcO7hQ7[O'#FxO9UQWO'#FwOOQ07b'#Jj'#JjOOQ07`'#Ji'#JiO9ZQWO'#GqOOQU'#KU'#KUO9fQWO'#IRO9kQ07hO'#ISOOQU'#JW'#JWOOQU'#IW'#IWQ`Q^OOO`Q^OOO%[Q^O'#DqO9sQ^O'#D}O9zQ^O'#EPO9aQWO'#GmO:RQ7[O'#CnO:aQWO'#EjO:lQWO'#EuO:qQ7[O'#FbO;`QWO'#GmOOQO'#KV'#KVO;eQWO'#KVO;sQWO'#GuO;sQWO'#GvO;sQWO'#GxO9aQWO'#G{O<jQWO'#HOO>RQWO'#CdO>cQWO'#H[O>kQWO'#HbO>kQWO'#HdO`Q^O'#HfO>kQWO'#HhO>kQWO'#HkO>pQWO'#HqO>uQ07iO'#HwO%[Q^O'#HyO?QQ07iO'#H{O?]Q07iO'#H}O9kQ07hO'#IPO?hQ08SO'#ChO@jQ`O'#DiQOQWOOO%[Q^O'#EPOAQQWO'#ESO:RQ7[O'#EjOA]QWO'#EjOAhQpO'#FbOOQU'#Cf'#CfOOQ07`'#Dn'#DnOOQ07`'#Jm'#JmO%[Q^O'#JmOOQO'#Jq'#JqOOQO'#Ib'#IbOBhQ`O'#EcOOQ07`'#Eb'#EbOCdQ07pO'#EcOCnQ`O'#EVOOQO'#Jp'#JpODSQ`O'#JqOEaQ`O'#EVOCnQ`O'#EcPEnO!0LbO'#CaPOOO)CDu)CDuOOOO'#IX'#IXOEyO!bO,59TOOQ07b,59T,59TOOOO'#IY'#IYOFXO#tO,59TO%[Q^O'#D`OOOO'#I['#I[OFgO?MpO,59xOOQ07b,59x,59xOFuQ^O'#I]OGYQWO'#JkOI[QrO'#JkO+}Q^O'#JkOIcQWO,5:OOIyQWO'#ElOJWQWO'#JyOJcQWO'#JxOJcQWO'#JxOJkQWO,5;YOJpQWO'#JwOOQ07f,5:Z,5:ZOJwQ^O,5:ZOLxQ08SO,5:eOMiQWO,5:mONSQ07hO'#JvONZQWO'#JuO9ZQWO'#JuONoQWO'#JuONwQWO,5;XON|QWO'#JuO!#UQrO'#JjOOQ07b'#Ch'#ChO%[Q^O'#ERO!#tQpO,5:rOOQO'#Jr'#JrOOQO-E<c-E<cO9aQWO,5=XO!$[QWO,5=XO!$aQ^O,5;VO!&dQ7[O'#EgO!'}QWO,5;VO!)mQ7[O'#DsO!)tQ^O'#DxO!*OQ`O,5;`O!*WQ`O,5;`O%[Q^O,5;`OOQU'#FR'#FROOQU'#FT'#FTO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aOOQU'#FX'#FXO!*fQ^O,5;rOOQ07b,5;w,5;wOOQ07b,5;x,5;xO!,iQWO,5;xOOQ07b,5;y,5;yO%[Q^O'#IiO!,qQ07hO,5<eO!&dQ7[O,5;aO!-`Q7[O,5;aO%[Q^O,5;uO!-gQ&jO'#FgO!.dQ&jO'#J}O!.OQ&jO'#J}O!.kQ&jO'#J}OOQO'#J}'#J}O!/PQ&jO,5<POOOS,5<],5<]O!/bQ^O'#FsOOOS'#Ih'#IhO7YO,YO,5;}O!/iQ&jO'#FuOOQ07b,5;},5;}O!0YQMhO'#CuOOQ07b'#Cy'#CyO!0mQWO'#CyO!0rO?MpO'#C}O!1`Q7[O,5<bO!1gQWO,5<dO!3SQ!LQO'#GSO!3aQWO'#GTO!3fQWO'#GTO!3kQ!LQO'#GXO!4jQ`O'#G]OOQO'#Gh'#GhO!(SQ7[O'#GgOOQO'#Gj'#GjO!(SQ7[O'#GiO!5]QMhO'#JdOOQ07b'#Jd'#JdO!5gQWO'#JcO!5uQWO'#JbO!5}QWO'#CtOOQ07b'#Cw'#CwOOQ07b'#DR'#DROOQ07b'#DT'#DTO1SQWO'#DVO!(SQ7[O'#FzO!(SQ7[O'#F|O!6VQWO'#GOO!6[QWO'#GPO!3fQWO'#GVO!(SQ7[O'#G[O!6aQWO'#EmO!7OQWO,5<cOOQ07`'#Cq'#CqO!7WQWO'#EnO!8QQ`O'#EoOOQ07`'#Jw'#JwO!8XQ07hO'#KWO9kQ07hO,5=]O`Q^O,5>mOOQU'#J`'#J`OOQU,5>n,5>nOOQU-E<U-E<UO!:ZQ08SO,5:]O!<wQ08SO,5:iO%[Q^O,5:iO!?bQ08SO,5:kOOQO,5@q,5@qO!@RQ7[O,5=XO!@aQ07hO'#JaO9UQWO'#JaO!@rQ07hO,59YO!@}Q`O,59YO!AVQ7[O,59YO:RQ7[O,59YO!AbQWO,5;VO!AjQWO'#HZO!BOQWO'#KZO%[Q^O,5;zO!7{Q`O,5;|O!BWQWO,5=tO!B]QWO,5=tO!BbQWO,5=tO9kQ07hO,5=tO;sQWO,5=dOOQO'#Cu'#CuO!BpQ`O,5=aO!BxQ7[O,5=bO!CTQWO,5=dO!CYQpO,5=gO!CbQWO'#KVO>pQWO'#HQO9aQWO'#HSO!CgQWO'#HSO:RQ7[O'#HUO!ClQWO'#HUOOQU,5=j,5=jO!CqQWO'#HVO!DSQWO'#CnO!DXQWO,59OO!DcQWO,59OO!FhQ^O,59OOOQU,59O,59OO!FxQ07hO,59OO%[Q^O,59OO!ITQ^O'#H^OOQU'#H_'#H_OOQU'#H`'#H`O`Q^O,5=vO!IkQWO,5=vO`Q^O,5=|O`Q^O,5>OO!IpQWO,5>QO`Q^O,5>SO!IuQWO,5>VO!IzQ^O,5>]OOQU,5>c,5>cO%[Q^O,5>cO9kQ07hO,5>eOOQU,5>g,5>gO!NUQWO,5>gOOQU,5>i,5>iO!NUQWO,5>iOOQU,5>k,5>kO!NZQ`O'#D[O%[Q^O'#JmO!NxQ`O'#JmO# gQ`O'#DjO# xQ`O'#DjO#$ZQ^O'#DjO#$bQWO'#JlO#$jQWO,5:TO#$oQWO'#EpO#$}QWO'#JzO#%VQWO,5;ZO#%[Q`O'#DjO#%iQ`O'#EUOOQ07b,5:n,5:nO%[Q^O,5:nO#%pQWO,5:nO>pQWO,5;UO!@}Q`O,5;UO!AVQ7[O,5;UO:RQ7[O,5;UO#%xQWO,5@XO#%}Q$ISO,5:rOOQO-E<`-E<`O#'TQ07pO,5:}OCnQ`O,5:qO#'_Q`O,5:qOCnQ`O,5:}O!@rQ07hO,5:qOOQ07`'#Ef'#EfOOQO,5:},5:}O%[Q^O,5:}O#'lQ07hO,5:}O#'wQ07hO,5:}O!@}Q`O,5:qOOQO,5;T,5;TO#(VQ07hO,5:}POOO'#IV'#IVP#(kO!0LbO,58{POOO,58{,58{OOOO-E<V-E<VOOQ07b1G.o1G.oOOOO-E<W-E<WO#(vQpO,59zOOOO-E<Y-E<YOOQ07b1G/d1G/dO#({QrO,5>wO+}Q^O,5>wOOQO,5>},5>}O#)VQ^O'#I]OOQO-E<Z-E<ZO#)dQWO,5@VO#)lQrO,5@VO#)sQWO,5@dOOQ07b1G/j1G/jO%[Q^O,5@eO#){QWO'#IcOOQO-E<a-E<aO#)sQWO,5@dOOQ07`1G0t1G0tOOQ07f1G/u1G/uOOQ07f1G0X1G0XO%[Q^O,5@bO#*aQ07hO,5@bO#*rQ07hO,5@bO#*yQWO,5@aO9ZQWO,5@aO#+RQWO,5@aO#+aQWO'#IfO#*yQWO,5@aOOQ07`1G0s1G0sO!*OQ`O,5:tO!*ZQ`O,5:tOOQO,5:v,5:vO#,RQWO,5:vO#,ZQ7[O1G2sO9aQWO1G2sOOQ07b1G0q1G0qO#,iQ08SO1G0qO#-nQ08QO,5;ROOQ07b'#GR'#GRO#.[Q08SO'#JdO!$aQ^O1G0qO#0dQ7[O'#JnO#0nQWO,5:_O#0sQrO'#JoO%[Q^O'#JoO#0}QWO,5:dOOQ07b'#D['#D[OOQ07b1G0z1G0zO%[Q^O1G0zOOQ07b1G1d1G1dO#1SQWO1G0zO#3kQ08SO1G0{O#3rQ08SO1G0{O#6]Q08SO1G0{O#6dQ08SO1G0{O#8nQ08SO1G0{O#9UQ08SO1G0{O#<OQ08SO1G0{O#<VQ08SO1G0{O#>jQ08SO1G0{O#>wQ08SO1G0{O#@uQ08SO1G0{O#CuQ(CYO'#ChO#EsQ(CYO1G1^O#EzQ(CYO'#JjO!,lQWO1G1dO#F[Q08SO,5?TOOQ07`-E<g-E<gO#GOQ08SO1G0{OOQ07b1G0{1G0{O#IZQ08SO1G1aO#I}Q&jO,5<TO#JVQ&jO,5<UO#J_Q&jO'#FlO#JvQWO'#FkOOQO'#KO'#KOOOQO'#Ig'#IgO#J{Q&jO1G1kOOQ07b1G1k1G1kOOOS1G1v1G1vO#K^Q(CYO'#JiO#KhQWO,5<_O!*fQ^O,5<_OOOS-E<f-E<fOOQ07b1G1i1G1iO#KmQ`O'#J}OOQ07b,5<a,5<aO#KuQ`O,5<aOOQ07b,59e,59eO!&dQ7[O'#DPOOOO'#IZ'#IZO#KzO?MpO,59iOOQ07b,59i,59iO%[Q^O1G1|O!6[QWO'#IkO#LVQ7[O,5<uOOQ07b,5<r,5<rO!(SQ7[O'#InO#LuQ7[O,5=RO!(SQ7[O'#IpO#MhQ7[O,5=TO!&dQ7[O,5=VOOQO1G2O1G2OO#MrQpO'#CqO#NVQpO,5<nO#N^QWO'#KRO9aQWO'#KRO#NlQWO,5<pO!(SQ7[O,5<oO#NqQWO'#GUO#N|QWO,5<oO$ RQpO'#GRO$ `QpO'#KSO$ jQWO'#KSO!&dQ7[O'#KSO$ oQWO,5<sO$ tQ`O'#G^O!4eQ`O'#G^O$!VQWO'#G`O$![QWO'#GbO!3fQWO'#GeO$!aQ07hO'#ImO$!lQ`O,5<wOOQ07f,5<w,5<wO$!sQ`O'#G^O$#RQ`O'#G_O$#ZQ`O'#G_O$#`Q7[O,5=RO$#pQ7[O,5=TOOQ07b,5=W,5=WO!(SQ7[O,5?}O!(SQ7[O,5?}O$$QQWO'#IrO$$]QWO,5?|O$$eQWO,59`O$%UQ7[O,59qOOQ07b,59q,59qO$%wQ7[O,5<fO$&jQ7[O,5<hO@bQWO,5<jOOQ07b,5<k,5<kO$&tQWO,5<qO$&yQ7[O,5<vO$'ZQWO'#JuO!$aQ^O1G1}O$'`QWO1G1}O9ZQWO'#JxO9ZQWO'#EpO%[Q^O'#EpO9ZQWO'#ItO$'eQ07hO,5@rOOQU1G2w1G2wOOQU1G4X1G4XOOQ07b1G/w1G/wO!,iQWO1G/wO$)jQ08SO1G0TOOQU1G2s1G2sO!&dQ7[O1G2sO%[Q^O1G2sO#,^QWO1G2sO$+nQ7[O'#EgOOQ07`,5?{,5?{O$+xQ07hO,5?{OOQU1G.t1G.tO!@rQ07hO1G.tO!@}Q`O1G.tO!AVQ7[O1G.tO$,ZQWO1G0qO$,`QWO'#ChO$,kQWO'#K[O$,sQWO,5=uO$,xQWO'#K[O$,}QWO'#K[O$-]QWO'#IzO$-kQWO,5@uO$-sQrO1G1fOOQ07b1G1h1G1hO9aQWO1G3`O@bQWO1G3`O$-zQWO1G3`O$.PQWO1G3`OOQU1G3`1G3`O!CTQWO1G3OO!&dQ7[O1G2{O$.UQWO1G2{OOQU1G2|1G2|O!&dQ7[O1G2|O$.ZQWO1G2|O$.cQ`O'#GzOOQU1G3O1G3OO!4eQ`O'#IvO!CYQpO1G3ROOQU1G3R1G3ROOQU,5=l,5=lO$.kQ7[O,5=nO9aQWO,5=nO$![QWO,5=pO9UQWO,5=pO!@}Q`O,5=pO!AVQ7[O,5=pO:RQ7[O,5=pO$.yQWO'#KYO$/UQWO,5=qOOQU1G.j1G.jO$/ZQ07hO1G.jO@bQWO1G.jO$/fQWO1G.jO9kQ07hO1G.jO$1kQrO,5@wO$1{QWO,5@wO9ZQWO,5@wO$2WQ^O,5=xO$2_QWO,5=xOOQU1G3b1G3bO`Q^O1G3bOOQU1G3h1G3hOOQU1G3j1G3jO>kQWO1G3lO$2dQ^O1G3nO$6hQ^O'#HmOOQU1G3q1G3qO$6uQWO'#HsO>pQWO'#HuOOQU1G3w1G3wO$6}Q^O1G3wO9kQ07hO1G3}OOQU1G4P1G4POOQ07`'#GY'#GYO9kQ07hO1G4RO9kQ07hO1G4TO$;UQWO,5@XO!*fQ^O,5;[O9ZQWO,5;[O>pQWO,5:UO!*fQ^O,5:UO!@}Q`O,5:UO$;ZQ(CYO,5:UOOQO,5;[,5;[O$;eQ`O'#I^O$;{QWO,5@WOOQ07b1G/o1G/oO$<TQ`O'#IdO$<_QWO,5@fOOQ07`1G0u1G0uO# xQ`O,5:UOOQO'#Ia'#IaO$<gQ`O,5:pOOQ07f,5:p,5:pO#%sQWO1G0YOOQ07b1G0Y1G0YO%[Q^O1G0YOOQ07b1G0p1G0pO>pQWO1G0pO!@}Q`O1G0pO!AVQ7[O1G0pOOQ07`1G5s1G5sO!@rQ07hO1G0]OOQO1G0i1G0iO%[Q^O1G0iO$<nQ07hO1G0iO$<yQ07hO1G0iO!@}Q`O1G0]OCnQ`O1G0]O$=XQ07hO1G0iOOQO1G0]1G0]O$=mQ08SO1G0iPOOO-E<T-E<TPOOO1G.g1G.gOOOO1G/f1G/fO$=wQpO,5<eO$>PQrO1G4cOOQO1G4i1G4iO%[Q^O,5>wO$>ZQWO1G5qO$>cQWO1G6OO$>kQrO1G6PO9ZQWO,5>}O$>uQ08SO1G5|O%[Q^O1G5|O$?VQ07hO1G5|O$?hQWO1G5{O$?hQWO1G5{O9ZQWO1G5{O$?pQWO,5?QO9ZQWO,5?QOOQO,5?Q,5?QO$@UQWO,5?QO$'ZQWO,5?QOOQO-E<d-E<dOOQO1G0`1G0`OOQO1G0b1G0bO!,lQWO1G0bOOQU7+(_7+(_O!&dQ7[O7+(_O%[Q^O7+(_O$@dQWO7+(_O$@oQ7[O7+(_O$@}Q08SO,5=RO$CYQ08SO,5=TO$EeQ08SO,5=RO$GvQ08SO,5=TO$JXQ08SO,59qO$LaQ08SO,5<fO$NlQ08SO,5<hO%!wQ08SO,5<vOOQ07b7+&]7+&]O%%YQ08SO7+&]O%%|Q7[O'#I_O%&WQWO,5@YOOQ07b1G/y1G/yO%&`Q^O'#I`O%&mQWO,5@ZO%&uQrO,5@ZOOQ07b1G0O1G0OO%'PQWO7+&fOOQ07b7+&f7+&fO%'UQ(CYO,5:eO%[Q^O7+&xO%'`Q(CYO,5:]O%'mQ(CYO,5:iO%'wQ(CYO,5:kOOQ07b7+'O7+'OOOQO1G1o1G1oOOQO1G1p1G1pO%(RQtO,5<WO!*fQ^O,5<VOOQO-E<e-E<eOOQ07b7+'V7+'VOOOS7+'b7+'bOOOS1G1y1G1yO%(^QWO1G1yOOQ07b1G1{1G1{O%(cQpO,59kOOOO-E<X-E<XOOQ07b1G/T1G/TO%(jQ08SO7+'hOOQ07b,5?V,5?VO%)^QpO,5?VOOQ07b1G2a1G2aP!&dQ7[O'#IkPOQ07b-E<i-E<iO%)|Q7[O,5?YOOQ07b-E<l-E<lO%*oQ7[O,5?[OOQ07b-E<n-E<nO%*yQpO1G2qOOQ07b1G2Y1G2YO%+QQWO'#IjO%+`QWO,5@mO%+`QWO,5@mO%+hQWO,5@mO%+sQWO,5@mOOQO1G2[1G2[O%,RQ7[O1G2ZO!(SQ7[O1G2ZO%,cQ!LQO'#IlO%,sQWO,5@nO!&dQ7[O,5@nO%,{QpO,5@nOOQ07b1G2_1G2_OOQ07`,5<x,5<xOOQ07`,5<y,5<yO$'ZQWO,5<yOC_QWO,5<yO!@}Q`O,5<xOOQO'#Ga'#GaO%-VQWO,5<zOOQ07`,5<|,5<|O$'ZQWO,5=POOQO,5?X,5?XOOQO-E<k-E<kOOQ07f1G2c1G2cO!4eQ`O,5<xO%-_QWO,5<yO$!VQWO,5<zO!4eQ`O,5<yO!(SQ7[O'#InO%.RQ7[O1G2mO!(SQ7[O'#IpO%.tQ7[O1G2oO%/OQ7[O1G5iO%/YQ7[O1G5iOOQO,5?^,5?^OOQO-E<p-E<pOOQO1G.z1G.zO!7{Q`O,59sO%[Q^O,59sO%/gQWO1G2UO!(SQ7[O1G2]O%/lQ08SO7+'iOOQ07b7+'i7+'iO!$aQ^O7+'iO%0`QWO,5;[OOQ07`,5?`,5?`OOQ07`-E<r-E<rOOQ07b7+%c7+%cO%0eQpO'#KTO#%sQWO7+(_O%0oQrO7+(_O$@gQWO7+(_O%0vQ08QO'#ChO%1ZQ08QO,5<}O%1{QWO,5<}OOQ07`1G5g1G5gOOQU7+$`7+$`O!@rQ07hO7+$`O!@}Q`O7+$`O!$aQ^O7+&]O%2QQWO'#IyO%2iQWO,5@vOOQO1G3a1G3aO9aQWO,5@vO%2iQWO,5@vO%2qQWO,5@vOOQO,5?f,5?fOOQO-E<x-E<xOOQ07b7+'Q7+'QO%2vQWO7+(zO9kQ07hO7+(zO9aQWO7+(zO@bQWO7+(zOOQU7+(j7+(jO%2{Q08QO7+(gO!&dQ7[O7+(gO%3VQpO7+(hOOQU7+(h7+(hO!&dQ7[O7+(hO%3^QWO'#KXO%3iQWO,5=fOOQO,5?b,5?bOOQO-E<t-E<tOOQU7+(m7+(mO%4xQ`O'#HTOOQU1G3Y1G3YO!&dQ7[O1G3YO%[Q^O1G3YO%5PQWO1G3YO%5[Q7[O1G3YO9kQ07hO1G3[O$![QWO1G3[O9UQWO1G3[O!@}Q`O1G3[O!AVQ7[O1G3[O%5jQWO'#IxO%6OQWO,5@tO%6WQ`O,5@tOOQ07`1G3]1G3]OOQU7+$U7+$UO@bQWO7+$UO9kQ07hO7+$UO%6cQWO7+$UO%[Q^O1G6cO%[Q^O1G6dO%6hQ07hO1G6cO%6rQ^O1G3dO%6yQWO1G3dO%7OQ^O1G3dOOQU7+(|7+(|O9kQ07hO7+)WO`Q^O7+)YOOQU'#K_'#K_OOQU'#I{'#I{O%7VQ^O,5>XOOQU,5>X,5>XO%[Q^O'#HnO%7dQWO'#HpOOQU,5>_,5>_O9ZQWO,5>_OOQU,5>a,5>aOOQU7+)c7+)cOOQU7+)i7+)iOOQU7+)m7+)mOOQU7+)o7+)oO%7iQ`O1G5sO%7}Q(CYO1G0vO%8XQWO1G0vOOQO1G/p1G/pO%8dQ(CYO1G/pO>pQWO1G/pO!*fQ^O'#DjOOQO,5>x,5>xOOQO-E<[-E<[OOQO,5?O,5?OOOQO-E<b-E<bO!@}Q`O1G/pOOQO-E<_-E<_OOQ07f1G0[1G0[OOQ07b7+%t7+%tO#%sQWO7+%tOOQ07b7+&[7+&[O>pQWO7+&[O!@}Q`O7+&[OOQO7+%w7+%wO$=mQ08SO7+&TOOQO7+&T7+&TO%[Q^O7+&TO%8nQ07hO7+&TO!@rQ07hO7+%wO!@}Q`O7+%wO%8yQ07hO7+&TO%9XQ08SO7++hO%[Q^O7++hO%9iQWO7++gO%9iQWO7++gOOQO1G4l1G4lO9ZQWO1G4lO%9qQWO1G4lOOQO7+%|7+%|O#%sQWO<<KyO%0oQrO<<KyO%:PQWO<<KyOOQU<<Ky<<KyO!&dQ7[O<<KyO%[Q^O<<KyO%:XQWO<<KyO%:dQ08SO,5?YO%<oQ08SO,5?[O%>zQ08SO1G2ZO%A]Q08SO1G2mO%ChQ08SO1G2oO%EsQ7[O,5>yOOQO-E<]-E<]O%E}QrO,5>zO%[Q^O,5>zOOQO-E<^-E<^O%FXQWO1G5uOOQ07b<<JQ<<JQO%FaQ(CYO1G0qO%HkQ(CYO1G0{O%HrQ(CYO1G0{O%JvQ(CYO1G0{O%J}Q(CYO1G0{O%LrQ(CYO1G0{O%MYQ(CYO1G0{O& mQ(CYO1G0{O& tQ(CYO1G0{O&#rQ(CYO1G0{O&$PQ(CYO1G0{O&%}Q(CYO1G0{O&&bQ08SO<<JdO&'gQ(CYO1G0{O&)]Q(CYO'#JdO&+`Q(CYO1G1aO&+mQ(CYO1G0TO!*fQ^O'#FnOOQO'#KP'#KPOOQO1G1r1G1rO&+wQWO1G1qO&+|Q(CYO,5?TOOOS7+'e7+'eOOOO1G/V1G/VOOQ07b1G4q1G4qO!(SQ7[O7+(]O&,WQWO,5?UO9aQWO,5?UOOQO-E<h-E<hO&,fQWO1G6XO&,fQWO1G6XO&,nQWO1G6XO&,yQ7[O7+'uO&-ZQpO,5?WO&-eQWO,5?WO!&dQ7[O,5?WOOQO-E<j-E<jO&-jQpO1G6YO&-tQWO1G6YOOQ07`1G2e1G2eO$'ZQWO1G2eOOQ07`1G2d1G2dO&-|QWO1G2fO!&dQ7[O1G2fOOQ07`1G2k1G2kO!@}Q`O1G2dOC_QWO1G2eO&.RQWO1G2fO&.ZQWO1G2eO&.}Q7[O,5?YOOQ07b-E<m-E<mO&/pQ7[O,5?[OOQ07b-E<o-E<oO!(SQ7[O7++TOOQ07b1G/_1G/_O&/zQWO1G/_OOQ07b7+'p7+'pO&0PQ7[O7+'wO&0aQ08SO<<KTOOQ07b<<KT<<KTO&1TQWO1G0vO!&dQ7[O'#IsO&1YQWO,5@oO!&dQ7[O1G2iOOQU<<Gz<<GzO!@rQ07hO<<GzO&1bQ08SO<<IwOOQ07b<<Iw<<IwOOQO,5?e,5?eO&2UQWO,5?eO&2ZQWO,5?eOOQO-E<w-E<wO&2iQWO1G6bO&2iQWO1G6bO9aQWO1G6bO@bQWO<<LfOOQU<<Lf<<LfO&2qQWO<<LfO9kQ07hO<<LfOOQU<<LR<<LRO%2{Q08QO<<LROOQU<<LS<<LSO%3VQpO<<LSO&2vQ`O'#IuO&3RQWO,5@sO!*fQ^O,5@sOOQU1G3Q1G3QO&3ZQ^O'#JmOOQO'#Iw'#IwO9kQ07hO'#IwO&3eQ`O,5=oOOQU,5=o,5=oO&3lQ`O'#EcO&4QQWO7+(tO&4VQWO7+(tOOQU7+(t7+(tO!&dQ7[O7+(tO%[Q^O7+(tO&4_QWO7+(tOOQU7+(v7+(vO9kQ07hO7+(vO$![QWO7+(vO9UQWO7+(vO!@}Q`O7+(vO&4jQWO,5?dOOQO-E<v-E<vOOQO'#HW'#HWO&4uQWO1G6`O9kQ07hO<<GpOOQU<<Gp<<GpO@bQWO<<GpO&4}QWO7++}O&5SQWO7+,OO%[Q^O7++}O%[Q^O7+,OOOQU7+)O7+)OO&5XQWO7+)OO&5^Q^O7+)OO&5eQWO7+)OOOQU<<Lr<<LrOOQU<<Lt<<LtOOQU-E<y-E<yOOQU1G3s1G3sO&5jQWO,5>YOOQU,5>[,5>[O&5oQWO1G3yO9ZQWO7+&bO!*fQ^O7+&bOOQO7+%[7+%[O&5tQ(CYO1G6PO>pQWO7+%[OOQ07b<<I`<<I`OOQ07b<<Iv<<IvO>pQWO<<IvOOQO<<Io<<IoO$=mQ08SO<<IoO%[Q^O<<IoOOQO<<Ic<<IcO!@rQ07hO<<IcO&6OQ07hO<<IoO&6ZQ08SO<= SO&6kQWO<= ROOQO7+*W7+*WO9ZQWO7+*WOOQUANAeANAeO&6sQWOANAeO!&dQ7[OANAeO#%sQWOANAeO%0oQrOANAeO%[Q^OANAeO&6{Q08SO7+'uO&9^Q08SO,5?YO&;iQ08SO,5?[O&=tQ08SO7+'wO&@VQrO1G4fO&@aQ(CYO7+&]O&BeQ(CYO,5=RO&DlQ(CYO,5=TO&D|Q(CYO,5=RO&E^Q(CYO,5=TO&EnQ(CYO,59qO&GqQ(CYO,5<fO&ItQ(CYO,5<hO&KwQ(CYO,5<vO&MmQ(CYO7+'hO&MzQ(CYO7+'iO&NXQWO,5<YOOQO7+']7+']O&N^Q7[O<<KwOOQO1G4p1G4pO&NeQWO1G4pO&NpQWO1G4pO' OQWO7++sO' OQWO7++sO!&dQ7[O1G4rO' WQpO1G4rO' bQWO7++tOOQ07`7+(P7+(PO$'ZQWO7+(QO' jQpO7+(QOOQ07`7+(O7+(OO$'ZQWO7+(PO' qQWO7+(QO!&dQ7[O7+(QOC_QWO7+(PO' vQ7[O<<NoOOQ07b7+$y7+$yO'!QQpO,5?_OOQO-E<q-E<qO'![Q08QO7+(TOOQUAN=fAN=fO9aQWO1G5POOQO1G5P1G5PO'!lQWO1G5PO'!qQWO7++|O'!qQWO7++|O9kQ07hOANBQO@bQWOANBQOOQUANBQANBQOOQUANAmANAmOOQUANAnANAnO'!yQWO,5?aOOQO-E<s-E<sO'#UQ(CYO1G6_O'%fQrO'#ChOOQO,5?c,5?cOOQO-E<u-E<uOOQU1G3Z1G3ZO&3ZQ^O,5<zOOQU<<L`<<L`O!&dQ7[O<<L`O&4QQWO<<L`O'%pQWO<<L`O%[Q^O<<L`OOQU<<Lb<<LbO9kQ07hO<<LbO$![QWO<<LbO9UQWO<<LbO'%xQ`O1G5OO'&TQWO7++zOOQUAN=[AN=[O9kQ07hOAN=[OOQU<= i<= iOOQU<= j<= jO'&]QWO<= iO'&bQWO<= jOOQU<<Lj<<LjO'&gQWO<<LjO'&lQ^O<<LjOOQU1G3t1G3tO>pQWO7+)eO'&sQWO<<I|O''OQ(CYO<<I|OOQO<<Hv<<HvOOQ07bAN?bAN?bOOQOAN?ZAN?ZO$=mQ08SOAN?ZOOQOAN>}AN>}O%[Q^OAN?ZOOQO<<Mr<<MrOOQUG27PG27PO!&dQ7[OG27PO#%sQWOG27PO''YQWOG27PO%0oQrOG27PO''bQ(CYO<<JdO''oQ(CYO1G2ZO')eQ(CYO,5?YO'+hQ(CYO,5?[O'-kQ(CYO1G2mO'/nQ(CYO1G2oO'1qQ(CYO<<KTO'2OQ(CYO<<IwOOQO1G1t1G1tO!(SQ7[OANAcOOQO7+*[7+*[O'2]QWO7+*[O'2hQWO<= _O'2pQpO7+*^OOQ07`<<Kl<<KlO$'ZQWO<<KlOOQ07`<<Kk<<KkO'2zQpO<<KlO$'ZQWO<<KkOOQO7+*k7+*kO9aQWO7+*kO'3RQWO<= hOOQUG27lG27lO9kQ07hOG27lO!*fQ^O1G4{O'3ZQWO7++yO&4QQWOANAzOOQUANAzANAzO!&dQ7[OANAzO'3cQWOANAzOOQUANA|ANA|O9kQ07hOANA|O$![QWOANA|OOQO'#HX'#HXOOQO7+*j7+*jOOQUG22vG22vOOQUANETANETOOQUANEUANEUOOQUANBUANBUO'3kQWOANBUOOQU<<MP<<MPO!*fQ^OAN?hOOQOG24uG24uO$=mQ08SOG24uO#%sQWOLD,kOOQULD,kLD,kO!&dQ7[OLD,kO'3pQWOLD,kO'3xQ(CYO7+'uO'5nQ(CYO,5?YO'7qQ(CYO,5?[O'9tQ(CYO7+'wO';jQ7[OG26}OOQO<<Mv<<MvOOQ07`ANAWANAWO$'ZQWOANAWOOQ07`ANAVANAVOOQO<<NV<<NVOOQULD-WLD-WO';zQ(CYO7+*gOOQUG27fG27fO&4QQWOG27fO!&dQ7[OG27fOOQUG27hG27hO9kQ07hOG27hOOQUG27pG27pO'<UQ(CYOG25SOOQOLD*aLD*aOOQU!$(!V!$(!VO#%sQWO!$(!VO!&dQ7[O!$(!VO'<`Q08SOG26}OOQ07`G26rG26rOOQULD-QLD-QO&4QQWOLD-QOOQULD-SLD-SOOQU!)9Eq!)9EqO#%sQWO!)9EqOOQU!$(!l!$(!lOOQU!.K;]!.K;]O'>qQ(CYOG26}O!*fQ^O'#DyO1PQWO'#EWO'@gQrO'#JiO!*fQ^O'#DqO'@nQ^O'#D}O'@uQrO'#ChO'C]QrO'#ChO!*fQ^O'#EPO'CmQ^O,5;VO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O'#IiO'EpQWO,5<eO'ExQ7[O,5;aO'GcQ7[O,5;aO!*fQ^O,5;uO!&dQ7[O'#GgO'ExQ7[O'#GgO!&dQ7[O'#GiO'ExQ7[O'#GiO1SQWO'#DVO1SQWO'#DVO!&dQ7[O'#FzO'ExQ7[O'#FzO!&dQ7[O'#F|O'ExQ7[O'#F|O!&dQ7[O'#G[O'ExQ7[O'#G[O!*fQ^O,5:iO!*fQ^O,5@eO'CmQ^O1G0qO'GjQ(CYO'#ChO!*fQ^O1G1|O!&dQ7[O'#InO'ExQ7[O'#InO!&dQ7[O'#IpO'ExQ7[O'#IpO!&dQ7[O,5<oO'ExQ7[O,5<oO'CmQ^O1G1}O!*fQ^O7+&xO!&dQ7[O1G2ZO'ExQ7[O1G2ZO!&dQ7[O'#InO'ExQ7[O'#InO!&dQ7[O'#IpO'ExQ7[O'#IpO!&dQ7[O1G2]O'ExQ7[O1G2]O'CmQ^O7+'iO'CmQ^O7+&]O!&dQ7[OANAcO'ExQ7[OANAcO'GtQWO'#EkO'GyQWO'#EkO'HRQWO'#FZO'HWQWO'#EuO'H]QWO'#JyO'HhQWO'#JwO'HsQWO,5;VO'HxQ7[O,5<bO'IPQWO'#GTO'IUQWO'#GTO'IZQWO,5<cO'IcQWO,5;VO'IkQ(CYO1G1^O'IrQWO,5<oO'IwQWO,5<oO'I|QWO,5<qO'JRQWO,5<qO'JWQWO1G1}O'J]QWO1G0qO'JbQ7[O<<KwO'JiQ7[O<<KwO7hQ7[O'#FxO9UQWO'#FwOA]QWO'#EjO!*fQ^O,5;rO!3fQWO'#GTO!3fQWO'#GTO!3fQWO'#GVO!3fQWO'#GVO!(SQ7[O7+(]O!(SQ7[O7+(]O%*yQpO1G2qO%*yQpO1G2qO!&dQ7[O,5=VO!&dQ7[O,5=V",
  stateData: "'Km~O'tOS'uOSSOS'vRQ~OPYOQYORfOX!VO`qOczOdyOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![XO!fuO!kZO!nYO!oYO!pYO!rvO!twO!wxO!{]O#s!PO$T|O%b}O%d!QO%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO%s!UO&P!WO&V!XO&X!YO&Z!ZO&]![O&`!]O&f!^O&l!_O&n!`O&p!aO&r!bO&t!cO'{SO'}TO(QUO(XVO(g[O(tiO~OVtO~P`OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~O`!vOo!nO!P!oO!_!xO!`!uO!a!uO!{:dO#P!pO#Q!pO#R!wO#S!pO#T!pO#W!yO#X!yO'|!lO'}TO(QUO([!mO(g!sO~O'v!zO~OP[XZ[X`[Xn[X|[X}[X!P[X!Y[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X'r[X(X[X(h[X(o[X(p[X~O!d$|X~P(qO^!|O'}#OO(O!|O(P#OO~O^#PO(P#OO(Q#OO(R#PO~Ot#RO!R#SO(Y#SO(Z#UO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{:hO'}TO(QUO(XVO(g[O(tiO~O!X#YO!Y#VO!V(_P!V(lP~P+}O!Z#bO~P`OPYOQYORfOc!jOd!iOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'}TO(QUO(XVO(g[O(tiO~Ol#lO!X#hO!{]O#e#kO#f#hO'{:iO!j(iP~P.iO!k#nO'{#mO~O!w#rO!{]O%b#sO~O#g#tO~O!d#uO#g#tO~OP$]OZ$dOn$QO|#yO}#zO!P#{O!Y$aO!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O`(]X'r(]X'p(]X!j(]X!V(]X![(]X%c(]X!d(]X~P1qO#[$eO$O$eOP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X![(^X%c(^X~O`(^X!i(^X'r(^X'p(^X!V(^X!j(^Xr(^X!d(^X~P4XO#[$eO~O$Y$gO$[$fO$c$lO~ORfO![$mO$f$nO$h$pO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz%ZO!P${O![$|O!f%`O!k$xO#f%aO$T%^O$o%[O$q%]O$t%_O'{$rO'}TO(QUO(X$uO(o$}O(p%POf(UP~O!k%bO~O!P%eO![%fO'{%dO~O!d%jO~O`%kO'r%kO~O'|!lO~P%[O%h%rO~P%[Og%VO!k%bO'{%dO'|!lO~Od%yO!k%bO'{%dO~O#r$SO~O|&OO![%{O!k%}O%d&RO'{%dO'|!lO'}TO(QUO_(}P~O!w#rO~O%m&TO!P(yX![(yX'{(yX~O'{&UO~O!t&ZO#s!PO%d!QO%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO~Oc&`Od&_O!w&]O%b&^O%u&[O~P;xOc&cOdyO![&bO!t&ZO!wxO!{]O#s!PO%b}O%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO%s!UO~Oa&fO#[&iO%d&dO'|!lO~P<}O!k&jO!t&nO~O!k#nO~O![XO~O`%kO'q&vO'r%kO~O`%kO'q&yO'r%kO~O`%kO'q&{O'r%kO~O'p[X!V[Xr[X!j[X&T[X![[X%c[X!d[X~P(qO!_'YO!`'RO!a'RO'|!lO'}TO(QUO~Oo'PO!P'OO!X'SO([&}O!Z(`P!Z(nP~P@UOj']O!['ZO'{%dO~Od'bO!k%bO'{%dO~O|&OO!k%}O~Oo!nO!P!oO!{:dO#P!pO#Q!pO#S!pO#T!pO'|!lO'}TO(QUO([!mO(g!sO~O!_'hO!`'gO!a'gO#R!pO#W'iO#X'iO~PApO`%kOg%VO!d#uO!k%bO'r%kO(h'kO~O!o'oO#['mO~PCOOo!nO!P!oO'}TO(QUO([!mO(g!sO~O![XOo(eX!P(eX!_(eX!`(eX!a(eX!{(eX#P(eX#Q(eX#R(eX#S(eX#T(eX#W(eX#X(eX'|(eX'}(eX(Q(eX([(eX(g(eX~O!`'gO!a'gO'|!lO~PCnO'w'sO'x'sO'y'uO~O^!|O'}'wO(O!|O(P'wO~O^#PO(P'wO(Q'wO(R#PO~Ot#RO!R#SO(Y#SO(Z'{O~O!X'}O!V'PX!V'VX!Y'PX!Y'VX~P+}O!Y(PO!V(_X~OP$]OZ$dOn$QO|#yO}#zO!P#{O!Y(PO!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O!V(_X~PGbO!V(UO~O!V(kX!Y(kX!d(kX!j(kX(h(kX~O#[(kX#g#`X!Z(kX~PIhO#[(VO!V(mX!Y(mX~O!Y(WO!V(lX~O!V(ZO~O#[$eO~PIhO!Z([O~P`O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!maZ!man!ma!Y!ma!h!ma!o!ma#j!ma#k!ma#l!ma#m!ma#n!ma#o!ma#p!ma#q!ma#r!ma#t!ma#v!ma#x!ma#y!ma(h!ma(o!ma(p!ma~O`!ma'r!ma'p!ma!V!ma!j!mar!ma![!ma%c!ma!d!ma~PKOO!j(]O~O!d#uO#[(^O(h'kO!Y(jX`(jX'r(jX~O!j(jX~PMnO!P%eO![%fO!{]O#e(cO#f(bO'{%dO~O!Y(dO!j(iX~O!j(fO~O!P%eO![%fO#f(bO'{%dO~OP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!i(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X~O!d#uO!j(^X~P! [O|(gO}(hO!i#wO!k#xO!{!za!P!za~O!w!za%b!za![!za#e!za#f!za'{!za~P!#`O!w(lO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![XO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~O#g(rO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz%ZO!P${O![$|O!f%`O!k$xO#f%aO$T%^O$o%[O$q%]O$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~Of(bP~P!(SO!X(vO!j(cP~P%[O([(xO(g[O~O!P(zO!k#xO([(xO(g[O~OP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![!eO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'{)YO'}TO(QUO(XVO(g[O(t<YO~O})]O!k#xO~O!Y$aO`$ma'r$ma'p$ma!j$ma!V$ma![$ma%c$ma!d$ma~O#s)aO~P!&dO|)dO!d)cO![$ZX$W$ZX$Y$ZX$[$ZX$c$ZX~O!d)cO![(qX$W(qX$Y(qX$[(qX$c(qX~O|)dO~P!.OO|)dO![(qX$W(qX$Y(qX$[(qX$c(qX~O![)fO$W)jO$Y)eO$[)eO$c)kO~O!X)nO~P!*fO$Y$gO$[$fO$c)rO~Oj$uX|$uX!P$uX!i$uX(o$uX(p$uX~OfiXf$uXjiX!YiX#[iX~P!/tOo)tO~Ot)uO(Y)vO(Z)xO~Oj*RO|)zO!P){O(o$}O(p%PO~Of)yO~P!0}Of*SO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'}TO(QUO(X$uO(o$}O(p%PO~O!X*WO'{*TO!j(uP~P!1lO#g*YO~O!k*ZO~O!X*`O'{*]O!V(vP~P!1lOn*lO!P*dO!_*jO!`*cO!a*cO!k*ZO#W*kO%Y*fO'|!lO([!mO~O!Z*iO~P!3xO!i#wOj(WX|(WX!P(WX(o(WX(p(WX!Y(WX#[(WX~Of(WX#|(WX~P!4qOj*qO#[*pOf(VX!Y(VX~O!Y*rOf(UX~O'{&UOf(UP~O!k*yO~O'{(pO~Ol*}O!P%eO!X#hO![%fO!{]O#e#kO#f#hO'{%dO!j(iP~O!d#uO#g+OO~O!P%eO!X+QO!Y(WO![%fO'{%dO!V(lP~Oo'VO!P+SO!X+RO'}TO(QUO([(xO~O!Z(nP~P!7lO!Y+TO`(zX'r(zX~OP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O`!ea!Y!ea'r!ea'p!ea!V!ea!j!ear!ea![!ea%c!ea!d!ea~P!8dO|#yO}#zO!P#{O!i#wO!k#xO(XVOP!qaZ!qan!qa!Y!qa!h!qa!o!qa#j!qa#k!qa#l!qa#m!qa#n!qa#o!qa#p!qa#q!qa#r!qa#t!qa#v!qa#x!qa#y!qa(h!qa(o!qa(p!qa~O`!qa'r!qa'p!qa!V!qa!j!qar!qa![!qa%c!qa!d!qa~P!:}O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!saZ!san!sa!Y!sa!h!sa!o!sa#j!sa#k!sa#l!sa#m!sa#n!sa#o!sa#p!sa#q!sa#r!sa#t!sa#v!sa#x!sa#y!sa(h!sa(o!sa(p!sa~O`!sa'r!sa'p!sa!V!sa!j!sar!sa![!sa%c!sa!d!sa~P!=hOg%VOj+^O!['ZO%c+]O~O!d+`O`(TX![(TX'r(TX!Y(TX~O`%kO![XO'r%kO~Og%VO!k%bO~Og%VO!k%bO'{%dO~O!d#uO#g(rO~Oa+kO%d+lO'{+hO'}TO(QUO!Z)OP~O!Y+mO_(}X~OZ+qO~O_+rO~O![%{O'{%dO'|!lO_(}P~Og%VO#[+wO~Og%VOj+zO![$|O~O![+|O~O|,OO![XO~O%h%rO~O!w,TO~Od,YO~Oa,ZO'{#mO'}TO(QUO!Z(|P~Od%yO~O%d!QO'{&UO~P<}OZ,`O_,_O~OPYOQYORfOczOdyOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO!fuO!kZO!nYO!oYO!pYO!rvO!wxO!{]O%b}O'}TO(QUO(XVO(g[O(tiO~O![!eO!t!gO$T!kO'{!dO~P!DkO_,_O`%kO'r%kO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~O`,eO!twO#s!OO%f!OO%g!OO%h!OO~P!GTO!k&jO~O&V,kO~O![,mO~O&h,oO&j,pOP&eaQ&eaR&eaX&ea`&eac&ead&eal&ean&eao&eap&eav&eax&eaz&ea!P&ea!T&ea!U&ea![&ea!f&ea!k&ea!n&ea!o&ea!p&ea!r&ea!t&ea!w&ea!{&ea#s&ea$T&ea%b&ea%d&ea%f&ea%g&ea%h&ea%k&ea%m&ea%p&ea%q&ea%s&ea&P&ea&V&ea&X&ea&Z&ea&]&ea&`&ea&f&ea&l&ea&n&ea&p&ea&r&ea&t&ea'p&ea'{&ea'}&ea(Q&ea(X&ea(g&ea(t&ea!Z&ea&^&eaa&ea&c&ea~O'{,uO~Og!bX!Y!OX!Y!bX!Z!OX!Z!bX!d!OX!d!bX!k!bX#[!OX~O!d,zO#[,yOg(aX!Y#dX!Y(aX!Z#dX!Z(aX!d(aX!k(aX~Og%VO!d,|O!k%bO!Y!^X!Z!^X~Oo!nO!P!oO'}TO(QUO([!mO~OP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![!eO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'}TO(QUO(XVO(g[O(t<YO~O'{;]O~P#!ZO!Y-QO!Z(`X~O!Z-SO~O!d,zO#[,yO!Y#dX!Z#dX~O!Y-TO!Z(nX~O!Z-VO~O!`-WO!a-WO'|!lO~P# xO!Z-ZO~P'_Oj-^O!['ZO~O!V-cO~Oo!za!_!za!`!za!a!za#P!za#Q!za#R!za#S!za#T!za#W!za#X!za'|!za'}!za(Q!za([!za(g!za~P!#`O!o-hO#[-fO~PCOO!`-jO!a-jO'|!lO~PCnO`%kO#[-fO'r%kO~O`%kO!d#uO#[-fO'r%kO~O`%kO!d#uO!o-hO#[-fO'r%kO(h'kO~O'w'sO'x'sO'y-oO~Or-pO~O!V'Pa!Y'Pa~P!8dO!X-tO!V'PX!Y'PX~P%[O!Y(PO!V(_a~O!V(_a~PGbO!Y(WO!V(la~O!P%eO!X-xO![%fO'{%dO!V'VX!Y'VX~O#[-zO!Y(ja!j(ja`(ja'r(ja~O!d#uO~P#*aO!Y(dO!j(ia~O!P%eO![%fO#f.OO'{%dO~Ol.TO!P%eO!X.QO![%fO!{]O#e.SO#f.QO'{%dO!Y'YX!j'YX~O}.XO!k#xO~Og%VOj.[O!['ZO%c.ZO~O`#_i!Y#_i'r#_i'p#_i!V#_i!j#_ir#_i![#_i%c#_i!d#_i~P!8dOj<fO|)zO!P){O(o$}O(p%PO~O#g#Za`#Za#[#Za'r#Za!Y#Za!j#Za![#Za!V#Za~P#-]O#g(WXP(WXZ(WX`(WXn(WX}(WX!h(WX!k(WX!o(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#p(WX#q(WX#r(WX#t(WX#v(WX#x(WX#y(WX'r(WX(X(WX(h(WX!j(WX!V(WX'p(WXr(WX![(WX%c(WX!d(WX~P!4qO!Y.iOf(bX~P!0}Of.kO~O!Y.lO!j(cX~P!8dO!j.oO~O!V.qO~OP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O(XVOZ#ii`#iin#ii!Y#ii!h#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#j#ii~P#1XO#j$OO~P#1XOP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO(XVOZ#ii`#ii!Y#ii!h#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~On#ii~P#3yOn$QO~P#3yOP$]On$QO|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO(XVO`#ii!Y#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~OZ#ii!h#ii#o#ii#p#ii#q#ii#r#ii~P#6kOZ$dO!h$SO#o$SO#p$SO#q$cO#r$SO~P#6kOP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO(XVO(p#}O`#ii!Y#ii#x#ii#y#ii'r#ii(h#ii(o#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#v$VO~P#9lO#v#ii~P#9lOP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO(XVO`#ii!Y#ii#x#ii#y#ii'r#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#v#ii(o#ii(p#ii~P#<^O#v$VO(o#|O(p#}O~P#<^OP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO(XVO(o#|O(p#}O~O`#ii!Y#ii#y#ii'r#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~P#?UOP[XZ[Xn[X|[X}[X!P[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X!Y[X!Z[X~O#|[X~P#AoOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO#v:sO#x:uO#y:vO(XVO(h$ZO(o#|O(p#}O~O#|.sO~P#C|O#[:{O$O:{O#|(^X!Z(^X~P! [O`']a!Y']a'r']a'p']a!j']a!V']ar']a![']a%c']a!d']a~P!8dOP#iiZ#ii`#iin#ii}#ii!Y#ii!h#ii!i#ii!k#ii!o#ii#j#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(X#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~P#-]O`#}i!Y#}i'r#}i'p#}i!V#}i!j#}ir#}i![#}i%c#}i!d#}i~P!8dO$Y.xO$[.xO~O$Y.yO$[.yO~O!d)cO#[.zO![$`X$W$`X$Y$`X$[$`X$c$`X~O!X.{O~O![)fO$W.}O$Y)eO$[)eO$c/OO~O!Y:wO!Z(]X~P#C|O!Z/PO~O!d)cO$c(qX~O$c/RO~Ot)uO(Y)vO(Z/UO~O!V/YO~P!&dO(o$}Oj%Za|%Za!P%Za(p%Za!Y%Za#[%Za~Of%Za#|%Za~P#L^O(p%POj%]a|%]a!P%]a(o%]a!Y%]a#[%]a~Of%]a#|%]a~P#MPO!YeX!deX!jeX!j$uX(heX~P!/tO!j/bO~P#-]O!Y/cO!d#uO(h'kO!j(uX~O!j/hO~O!X*WO'{%dO!j(uP~O#g/jO~O!V$uX!Y$uX!d$|X~P!/tO!Y/kO!V(vX~P#-]O!d/mO~O!V/oO~Og%VOn/sO!d#uO!k%bO(h'kO~O'{/uO~O!d+`O~O`%kO!Y/yO'r%kO~O!Z/{O~P!3xO!`/|O!a/|O'|!lO([!mO~O!P0OO([!mO~O#W0PO~Of%Za!Y%Za#[%Za#|%Za~P!0}Of%]a!Y%]a#[%]a#|%]a~P!0}O'{&UOf'fX!Y'fX~O!Y*rOf(Ua~Of0YO~O|0ZO}0ZO!P0[Ojya(oya(pya!Yya#[ya~Ofya#|ya~P$$jO|)zO!P){Oj$na(o$na(p$na!Y$na#[$na~Of$na#|$na~P$%`O|)zO!P){Oj$pa(o$pa(p$pa!Y$pa#[$pa~Of$pa#|$pa~P$&RO#g0^O~Of%Oa!Y%Oa#[%Oa#|%Oa~P!0}O!d#uO~O#g0aO~O!Y+TO`(za'r(za~O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!qiZ!qin!qi!Y!qi!h!qi!o!qi#j!qi#k!qi#l!qi#m!qi#n!qi#o!qi#p!qi#q!qi#r!qi#t!qi#v!qi#x!qi#y!qi(h!qi(o!qi(p!qi~O`!qi'r!qi'p!qi!V!qi!j!qir!qi![!qi%c!qi!d!qi~P$'pOg%VOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'}TO(QUO(X$uO(o$}O(p%PO~Ol0kO'{0jO~P$*ZO!d+`O`(Ta![(Ta'r(Ta!Y(Ta~O#g0qO~OZ[X!YeX!ZeX~O!Y0rO!Z)OX~O!Z0tO~OZ0uO~Oa0wO'{+hO'}TO(QUO~O![%{O'{%dO_'nX!Y'nX~O!Y+mO_(}a~O!j0zO~P!8dOZ0}O~O_1OO~O#[1RO~Oj1UO![$|O~O([(xO!Z({P~Og%VOj1_O![1[O%c1^O~OZ1iO!Y1gO!Z(|X~O!Z1jO~O_1lO`%kO'r%kO~O'{#mO'}TO(QUO~O#[$eO$O$eOP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X~O#r1oO&T1pO`(^X!i(^X~P$/qO#[$eO#r1oO&T1pO~O`1rO~P%[O`1tO~O&^1wOP&[iQ&[iR&[iX&[i`&[ic&[id&[il&[in&[io&[ip&[iv&[ix&[iz&[i!P&[i!T&[i!U&[i![&[i!f&[i!k&[i!n&[i!o&[i!p&[i!r&[i!t&[i!w&[i!{&[i#s&[i$T&[i%b&[i%d&[i%f&[i%g&[i%h&[i%k&[i%m&[i%p&[i%q&[i%s&[i&P&[i&V&[i&X&[i&Z&[i&]&[i&`&[i&f&[i&l&[i&n&[i&p&[i&r&[i&t&[i'p&[i'{&[i'}&[i(Q&[i(X&[i(g&[i(t&[i!Z&[ia&[i&c&[i~Oa1}O!Z1{O&c1|O~P`O![XO!k2PO~O&j,pOP&eiQ&eiR&eiX&ei`&eic&eid&eil&ein&eio&eip&eiv&eix&eiz&ei!P&ei!T&ei!U&ei![&ei!f&ei!k&ei!n&ei!o&ei!p&ei!r&ei!t&ei!w&ei!{&ei#s&ei$T&ei%b&ei%d&ei%f&ei%g&ei%h&ei%k&ei%m&ei%p&ei%q&ei%s&ei&P&ei&V&ei&X&ei&Z&ei&]&ei&`&ei&f&ei&l&ei&n&ei&p&ei&r&ei&t&ei'p&ei'{&ei'}&ei(Q&ei(X&ei(g&ei(t&ei!Z&ei&^&eia&ei&c&ei~O!V2VO~O!Y!^a!Z!^a~P#C|Oo!nO!P!oO!X2]O([!mO!Y'QX!Z'QX~P@UO!Y-QO!Z(`a~O!Y'WX!Z'WX~P!7lO!Y-TO!Z(na~O!Z2dO~P'_O`%kO#[2mO'r%kO~O`%kO!d#uO#[2mO'r%kO~O`%kO!d#uO!o2qO#[2mO'r%kO(h'kO~O`%kO'r%kO~P!8dO!Y$aOr$ma~O!V'Pi!Y'Pi~P!8dO!Y(PO!V(_i~O!Y(WO!V(li~O!V(mi!Y(mi~P!8dO!Y(ji!j(ji`(ji'r(ji~P!8dO#[2sO!Y(ji!j(ji`(ji'r(ji~O!Y(dO!j(ii~O!P%eO![%fO!{]O#e2xO#f2wO'{%dO~O!P%eO![%fO#f2wO'{%dO~Oj3PO!['ZO%c3OO~Og%VOj3PO!['ZO%c3OO~O#g%ZaP%ZaZ%Za`%Zan%Za}%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za'r%Za(X%Za(h%Za!j%Za!V%Za'p%Zar%Za![%Za%c%Za!d%Za~P#L^O#g%]aP%]aZ%]a`%]an%]a}%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a'r%]a(X%]a(h%]a!j%]a!V%]a'p%]ar%]a![%]a%c%]a!d%]a~P#MPO#g%ZaP%ZaZ%Za`%Zan%Za}%Za!Y%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za'r%Za(X%Za(h%Za!j%Za!V%Za'p%Za#[%Zar%Za![%Za%c%Za!d%Za~P#-]O#g%]aP%]aZ%]a`%]an%]a}%]a!Y%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a'r%]a(X%]a(h%]a!j%]a!V%]a'p%]a#[%]ar%]a![%]a%c%]a!d%]a~P#-]O#gyaPyaZya`yanya!hya!iya!kya!oya#jya#kya#lya#mya#nya#oya#pya#qya#rya#tya#vya#xya#yya'rya(Xya(hya!jya!Vya'pyarya![ya%cya!dya~P$$jO#g$naP$naZ$na`$nan$na}$na!h$na!i$na!k$na!o$na#j$na#k$na#l$na#m$na#n$na#o$na#p$na#q$na#r$na#t$na#v$na#x$na#y$na'r$na(X$na(h$na!j$na!V$na'p$nar$na![$na%c$na!d$na~P$%`O#g$paP$paZ$pa`$pan$pa}$pa!h$pa!i$pa!k$pa!o$pa#j$pa#k$pa#l$pa#m$pa#n$pa#o$pa#p$pa#q$pa#r$pa#t$pa#v$pa#x$pa#y$pa'r$pa(X$pa(h$pa!j$pa!V$pa'p$par$pa![$pa%c$pa!d$pa~P$&RO#g%OaP%OaZ%Oa`%Oan%Oa}%Oa!Y%Oa!h%Oa!i%Oa!k%Oa!o%Oa#j%Oa#k%Oa#l%Oa#m%Oa#n%Oa#o%Oa#p%Oa#q%Oa#r%Oa#t%Oa#v%Oa#x%Oa#y%Oa'r%Oa(X%Oa(h%Oa!j%Oa!V%Oa'p%Oa#[%Oar%Oa![%Oa%c%Oa!d%Oa~P#-]O`#_q!Y#_q'r#_q'p#_q!V#_q!j#_qr#_q![#_q%c#_q!d#_q~P!8dOf'RX!Y'RX~P!(SO!Y.iOf(ba~O!X3ZO!Y'SX!j'SX~P%[O!Y.lO!j(ca~O!Y.lO!j(ca~P!8dO!V3^O~O#|!ma!Z!ma~PKOO#|!ea!Y!ea!Z!ea~P#C|O#|!qa!Z!qa~P!:}O#|!sa!Z!sa~P!=hORfO![3pO$a3qO~O!Z3uO~Or3vO~P#-]O`$jq!Y$jq'r$jq'p$jq!V$jq!j$jqr$jq![$jq%c$jq!d$jq~P!8dO!V3wO~P#-]O|)zO!P){O(p%POj'ba(o'ba!Y'ba#['ba~Of'ba#|'ba~P%)eO|)zO!P){Oj'da(o'da(p'da!Y'da#['da~Of'da#|'da~P%*WO(h$ZO~P#-]O!X3zO'{%dO!Y'^X!j'^X~O!Y/cO!j(ua~O!Y/cO!d#uO!j(ua~O!Y/cO!d#uO(h'kO!j(ua~Of$wi!Y$wi#[$wi#|$wi~P!0}O!X4SO'{*]O!V'`X!Y'`X~P!1lO!Y/kO!V(va~O!Y/kO!V(va~P#-]O!d#uO#r4[O~On4_O!d#uO(h'kO~O(o$}Oj%Zi|%Zi!P%Zi(p%Zi!Y%Zi#[%Zi~Of%Zi#|%Zi~P%-jO(p%POj%]i|%]i!P%]i(o%]i!Y%]i#[%]i~Of%]i#|%]i~P%.]Of(Vi!Y(Vi~P!0}O#[4fOf(Vi!Y(Vi~P!0}O!j4iO~O`$kq!Y$kq'r$kq'p$kq!V$kq!j$kqr$kq![$kq%c$kq!d$kq~P!8dO!V4mO~O!Y4nO![(wX~P#-]O!i#wO~P4XO`$uX![$uX%W[X'r$uX!Y$uX~P!/tO%W4pO`kXjkX|kX!PkX![kX'rkX(okX(pkX!YkX~O%W4pO~Oa4vO%d4wO'{+hO'}TO(QUO!Y'mX!Z'mX~O!Y0rO!Z)Oa~OZ4{O~O_4|O~O`%kO'r%kO~P#-]O![$|O~P#-]O!Y5UO#[5WO!Z({X~O!Z5XO~Oo!nO!P5YO!_!xO!`!uO!a!uO!{:dO#P!pO#Q!pO#R!pO#S!pO#T!pO#W5_O#X!yO'|!lO'}TO(QUO([!mO(g!sO~O!Z5^O~P%3nOj5dO![1[O%c5cO~Og%VOj5dO![1[O%c5cO~Oa5kO'{#mO'}TO(QUO!Y'lX!Z'lX~O!Y1gO!Z(|a~O'}TO(QUO([5mO~O_5qO~O#r5tO&T5uO~PMnO!j5vO~P%[O`5xO~O`5xO~P%[Oa1}O!Z5}O&c1|O~P`O!d6PO~O!d6ROg(ai!Y(ai!Z(ai!d(ai!k(ai~O!Y#di!Z#di~P#C|O#[6SO!Y#di!Z#di~O!Y!^i!Z!^i~P#C|O`%kO#[6]O'r%kO~O`%kO!d#uO#[6]O'r%kO~O!Y(jq!j(jq`(jq'r(jq~P!8dO!Y(dO!j(iq~O!P%eO![%fO#f6dO'{%dO~O!['ZO%c6gO~Oj6jO!['ZO%c6gO~O#g'baP'baZ'ba`'ban'ba}'ba!h'ba!i'ba!k'ba!o'ba#j'ba#k'ba#l'ba#m'ba#n'ba#o'ba#p'ba#q'ba#r'ba#t'ba#v'ba#x'ba#y'ba'r'ba(X'ba(h'ba!j'ba!V'ba'p'bar'ba!['ba%c'ba!d'ba~P%)eO#g'daP'daZ'da`'dan'da}'da!h'da!i'da!k'da!o'da#j'da#k'da#l'da#m'da#n'da#o'da#p'da#q'da#r'da#t'da#v'da#x'da#y'da'r'da(X'da(h'da!j'da!V'da'p'dar'da!['da%c'da!d'da~P%*WO#g$wiP$wiZ$wi`$win$wi}$wi!Y$wi!h$wi!i$wi!k$wi!o$wi#j$wi#k$wi#l$wi#m$wi#n$wi#o$wi#p$wi#q$wi#r$wi#t$wi#v$wi#x$wi#y$wi'r$wi(X$wi(h$wi!j$wi!V$wi'p$wi#[$wir$wi![$wi%c$wi!d$wi~P#-]O#g%ZiP%ZiZ%Zi`%Zin%Zi}%Zi!h%Zi!i%Zi!k%Zi!o%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#p%Zi#q%Zi#r%Zi#t%Zi#v%Zi#x%Zi#y%Zi'r%Zi(X%Zi(h%Zi!j%Zi!V%Zi'p%Zir%Zi![%Zi%c%Zi!d%Zi~P%-jO#g%]iP%]iZ%]i`%]in%]i}%]i!h%]i!i%]i!k%]i!o%]i#j%]i#k%]i#l%]i#m%]i#n%]i#o%]i#p%]i#q%]i#r%]i#t%]i#v%]i#x%]i#y%]i'r%]i(X%]i(h%]i!j%]i!V%]i'p%]ir%]i![%]i%c%]i!d%]i~P%.]Of'Ra!Y'Ra~P!0}O!Y'Sa!j'Sa~P!8dO!Y.lO!j(ci~O#|#_i!Y#_i!Z#_i~P#C|OP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O(XVOZ#iin#ii!h#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~O#j#ii~P%FnO#j:lO~P%FnOP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO(XVOZ#ii!h#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~On#ii~P%HyOn:nO~P%HyOP$]On:nO|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO(XVO#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~OZ#ii!h#ii#o#ii#p#ii#q#ii#r#ii~P%KUOZ:zO!h:pO#o:pO#p:pO#q:yO#r:pO~P%KUOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO(XVO(p#}O#x#ii#y#ii#|#ii(h#ii(o#ii!Y#ii!Z#ii~O#v:sO~P%MpO#v#ii~P%MpOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO(XVO#x#ii#y#ii#|#ii(h#ii!Y#ii!Z#ii~O#v#ii(o#ii(p#ii~P& {O#v:sO(o#|O(p#}O~P& {OP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO#v:sO#x:uO(XVO(o#|O(p#}O~O#y#ii#|#ii(h#ii!Y#ii!Z#ii~P&$^O`#zy!Y#zy'r#zy'p#zy!V#zy!j#zyr#zy![#zy%c#zy!d#zy~P!8dOj<gO|)zO!P){O(o$}O(p%PO~OP#iiZ#iin#ii}#ii!h#ii!i#ii!k#ii!o#ii#j#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(X#ii(h#ii!Y#ii!Z#ii~P&'UO!i#wOP(WXZ(WXj(WXn(WX|(WX}(WX!P(WX!h(WX!k(WX!o(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#p(WX#q(WX#r(WX#t(WX#v(WX#x(WX#y(WX#|(WX(X(WX(h(WX(o(WX(p(WX!Y(WX!Z(WX~O#|#}i!Y#}i!Z#}i~P#C|O#|!qi!Z!qi~P$'pO!Z6|O~O!Y']a!Z']a~P#C|O!d#uO(h'kO!Y'^a!j'^a~O!Y/cO!j(ui~O!Y/cO!d#uO!j(ui~Of$wq!Y$wq#[$wq#|$wq~P!0}O!V'`a!Y'`a~P#-]O!d7TO~O!Y/kO!V(vi~P#-]O!Y/kO!V(vi~O!V7XO~O!d#uO#r7^O~On7_O!d#uO(h'kO~O|)zO!P){O(p%POj'ca(o'ca!Y'ca#['ca~Of'ca#|'ca~P&.fO|)zO!P){Oj'ea(o'ea(p'ea!Y'ea#['ea~Of'ea#|'ea~P&/XO!V7aO~Of$yq!Y$yq#[$yq#|$yq~P!0}O`$ky!Y$ky'r$ky'p$ky!V$ky!j$kyr$ky![$ky%c$ky!d$ky~P!8dO!d6RO~O!Y4nO![(wa~O`#_y!Y#_y'r#_y'p#_y!V#_y!j#_yr#_y![#_y%c#_y!d#_y~P!8dOZ7fO~Oa7hO'{+hO'}TO(QUO~O!Y0rO!Z)Oi~O_7lO~O([(xO!Y'iX!Z'iX~O!Y5UO!Z({a~OlkO'{7sO~P.iO!Z7vO~P%3nOo!nO!P7wO'}TO(QUO([!mO(g!sO~O![1[O~O![1[O%c7yO~Oj7|O![1[O%c7yO~OZ8RO!Y'la!Z'la~O!Y1gO!Z(|i~O!j8VO~O!j8WO~O!j8ZO~O!j8ZO~P%[O`8]O~O!d8^O~O!j8_O~O!Y(mi!Z(mi~P#C|O`%kO#[8gO'r%kO~O!Y(jy!j(jy`(jy'r(jy~P!8dO!Y(dO!j(iy~O!['ZO%c8jO~O#g$wqP$wqZ$wq`$wqn$wq}$wq!Y$wq!h$wq!i$wq!k$wq!o$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#p$wq#q$wq#r$wq#t$wq#v$wq#x$wq#y$wq'r$wq(X$wq(h$wq!j$wq!V$wq'p$wq#[$wqr$wq![$wq%c$wq!d$wq~P#-]O#g'caP'caZ'ca`'can'ca}'ca!h'ca!i'ca!k'ca!o'ca#j'ca#k'ca#l'ca#m'ca#n'ca#o'ca#p'ca#q'ca#r'ca#t'ca#v'ca#x'ca#y'ca'r'ca(X'ca(h'ca!j'ca!V'ca'p'car'ca!['ca%c'ca!d'ca~P&.fO#g'eaP'eaZ'ea`'ean'ea}'ea!h'ea!i'ea!k'ea!o'ea#j'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#t'ea#v'ea#x'ea#y'ea'r'ea(X'ea(h'ea!j'ea!V'ea'p'ear'ea!['ea%c'ea!d'ea~P&/XO#g$yqP$yqZ$yq`$yqn$yq}$yq!Y$yq!h$yq!i$yq!k$yq!o$yq#j$yq#k$yq#l$yq#m$yq#n$yq#o$yq#p$yq#q$yq#r$yq#t$yq#v$yq#x$yq#y$yq'r$yq(X$yq(h$yq!j$yq!V$yq'p$yq#[$yqr$yq![$yq%c$yq!d$yq~P#-]O!Y'Si!j'Si~P!8dO#|#_q!Y#_q!Z#_q~P#C|O(o$}OP%ZaZ%Zan%Za}%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za#|%Za(X%Za(h%Za!Y%Za!Z%Za~Oj%Za|%Za!P%Za(p%Za~P&@nO(p%POP%]aZ%]an%]a}%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a#|%]a(X%]a(h%]a!Y%]a!Z%]a~Oj%]a|%]a!P%]a(o%]a~P&BuOj<gO|)zO!P){O(p%PO~P&@nOj<gO|)zO!P){O(o$}O~P&BuO|0ZO}0ZO!P0[OPyaZyajyanya!hya!iya!kya!oya#jya#kya#lya#mya#nya#oya#pya#qya#rya#tya#vya#xya#yya#|ya(Xya(hya(oya(pya!Yya!Zya~O|)zO!P){OP$naZ$naj$nan$na}$na!h$na!i$na!k$na!o$na#j$na#k$na#l$na#m$na#n$na#o$na#p$na#q$na#r$na#t$na#v$na#x$na#y$na#|$na(X$na(h$na(o$na(p$na!Y$na!Z$na~O|)zO!P){OP$paZ$paj$pan$pa}$pa!h$pa!i$pa!k$pa!o$pa#j$pa#k$pa#l$pa#m$pa#n$pa#o$pa#p$pa#q$pa#r$pa#t$pa#v$pa#x$pa#y$pa#|$pa(X$pa(h$pa(o$pa(p$pa!Y$pa!Z$pa~OP%OaZ%Oan%Oa}%Oa!h%Oa!i%Oa!k%Oa!o%Oa#j%Oa#k%Oa#l%Oa#m%Oa#n%Oa#o%Oa#p%Oa#q%Oa#r%Oa#t%Oa#v%Oa#x%Oa#y%Oa#|%Oa(X%Oa(h%Oa!Y%Oa!Z%Oa~P&'UO#|$jq!Y$jq!Z$jq~P#C|O#|$kq!Y$kq!Z$kq~P#C|O!Z8vO~O#|8wO~P!0}O!d#uO!Y'^i!j'^i~O!d#uO(h'kO!Y'^i!j'^i~O!Y/cO!j(uq~O!V'`i!Y'`i~P#-]O!Y/kO!V(vq~O!V8}O~P#-]O!V8}O~Of(Vy!Y(Vy~P!0}O!Y'ga!['ga~P#-]O`%Vq![%Vq'r%Vq!Y%Vq~P#-]OZ9SO~O!Y0rO!Z)Oq~O#[9WO!Y'ia!Z'ia~O!Y5UO!Z({i~P#C|OP[XZ[Xn[X|[X}[X!P[X!V[X!Y[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X~O!d%TX#r%TX~P'#`O![1[O%c9[O~O'}TO(QUO([9aO~O!Y1gO!Z(|q~O!j9dO~O!j9eO~O!j9fO~O!j9fO~P%[O#[9iO!Y#dy!Z#dy~O!Y#dy!Z#dy~P#C|O!['ZO%c9nO~O#|#zy!Y#zy!Z#zy~P#C|OP$wiZ$win$wi}$wi!h$wi!i$wi!k$wi!o$wi#j$wi#k$wi#l$wi#m$wi#n$wi#o$wi#p$wi#q$wi#r$wi#t$wi#v$wi#x$wi#y$wi#|$wi(X$wi(h$wi!Y$wi!Z$wi~P&'UO|)zO!P){O(p%POP'baZ'baj'ban'ba}'ba!h'ba!i'ba!k'ba!o'ba#j'ba#k'ba#l'ba#m'ba#n'ba#o'ba#p'ba#q'ba#r'ba#t'ba#v'ba#x'ba#y'ba#|'ba(X'ba(h'ba(o'ba!Y'ba!Z'ba~O|)zO!P){OP'daZ'daj'dan'da}'da!h'da!i'da!k'da!o'da#j'da#k'da#l'da#m'da#n'da#o'da#p'da#q'da#r'da#t'da#v'da#x'da#y'da#|'da(X'da(h'da(o'da(p'da!Y'da!Z'da~O(o$}OP%ZiZ%Zij%Zin%Zi|%Zi}%Zi!P%Zi!h%Zi!i%Zi!k%Zi!o%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#p%Zi#q%Zi#r%Zi#t%Zi#v%Zi#x%Zi#y%Zi#|%Zi(X%Zi(h%Zi(p%Zi!Y%Zi!Z%Zi~O(p%POP%]iZ%]ij%]in%]i|%]i}%]i!P%]i!h%]i!i%]i!k%]i!o%]i#j%]i#k%]i#l%]i#m%]i#n%]i#o%]i#p%]i#q%]i#r%]i#t%]i#v%]i#x%]i#y%]i#|%]i(X%]i(h%]i(o%]i!Y%]i!Z%]i~O#|$ky!Y$ky!Z$ky~P#C|O#|#_y!Y#_y!Z#_y~P#C|O!d#uO!Y'^q!j'^q~O!Y/cO!j(uy~O!V'`q!Y'`q~P#-]O!V9wO~P#-]O!Y0rO!Z)Oy~O!Y5UO!Z({q~O![1[O%c:OO~O!j:RO~O!['ZO%c:WO~OP$wqZ$wqn$wq}$wq!h$wq!i$wq!k$wq!o$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#p$wq#q$wq#r$wq#t$wq#v$wq#x$wq#y$wq#|$wq(X$wq(h$wq!Y$wq!Z$wq~P&'UO|)zO!P){O(p%POP'caZ'caj'can'ca}'ca!h'ca!i'ca!k'ca!o'ca#j'ca#k'ca#l'ca#m'ca#n'ca#o'ca#p'ca#q'ca#r'ca#t'ca#v'ca#x'ca#y'ca#|'ca(X'ca(h'ca(o'ca!Y'ca!Z'ca~O|)zO!P){OP'eaZ'eaj'ean'ea}'ea!h'ea!i'ea!k'ea!o'ea#j'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#t'ea#v'ea#x'ea#y'ea#|'ea(X'ea(h'ea(o'ea(p'ea!Y'ea!Z'ea~OP$yqZ$yqn$yq}$yq!h$yq!i$yq!k$yq!o$yq#j$yq#k$yq#l$yq#m$yq#n$yq#o$yq#p$yq#q$yq#r$yq#t$yq#v$yq#x$yq#y$yq#|$yq(X$yq(h$yq!Y$yq!Z$yq~P&'UOf%_!Z!Y%_!Z#[%_!Z#|%_!Z~P!0}O!Y'iq!Z'iq~P#C|O!Y#d!Z!Z#d!Z~P#C|O#g%_!ZP%_!ZZ%_!Z`%_!Zn%_!Z}%_!Z!Y%_!Z!h%_!Z!i%_!Z!k%_!Z!o%_!Z#j%_!Z#k%_!Z#l%_!Z#m%_!Z#n%_!Z#o%_!Z#p%_!Z#q%_!Z#r%_!Z#t%_!Z#v%_!Z#x%_!Z#y%_!Z'r%_!Z(X%_!Z(h%_!Z!j%_!Z!V%_!Z'p%_!Z#[%_!Zr%_!Z![%_!Z%c%_!Z!d%_!Z~P#-]OP%_!ZZ%_!Zn%_!Z}%_!Z!h%_!Z!i%_!Z!k%_!Z!o%_!Z#j%_!Z#k%_!Z#l%_!Z#m%_!Z#n%_!Z#o%_!Z#p%_!Z#q%_!Z#r%_!Z#t%_!Z#v%_!Z#x%_!Z#y%_!Z#|%_!Z(X%_!Z(h%_!Z!Y%_!Z!Z%_!Z~P&'UOr(]X~P1qO'|!lO~P!*fO!VeX!YeX#[eX~P'#`OP[XZ[Xn[X|[X}[X!P[X!Y[X!YeX!h[X!i[X!k[X!o[X#[[X#[eX#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X~O!deX!j[X!jeX(heX~P'ASOP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![XO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'{)YO'}TO(QUO(XVO(g[O(t<YO~O!Y:wO!Z$ma~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;RO!P${O![$|O!f<aO!k$xO#f;XO$T%^O$o;TO$q;VO$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~O#s)aO~P'ExO!Z[X!ZeX~P'ASO#g:kO~O!d#uO#g:kO~O#[:{O~O#r:pO~O#[;ZO!Y(mX!Z(mX~O#[:{O!Y(kX!Z(kX~O#g;[O~Of;^O~P!0}O#g;cO~O#g;dO~O!d#uO#g;eO~O!d#uO#g;[O~O#|;fO~P#C|O#g;gO~O#g;hO~O#g;mO~O#g;nO~O#g;oO~O#g;pO~O#|;qO~P!0}O#|;rO~P!0}O!i#P#Q#S#T#W#e#f#q(t$o$q$t%W%b%c%d%k%m%p%q%s%u~'vS#k!U't'|#lo#j#mn|'u$Y'u'{$[([~",
  goto: "$2p)SPPPPP)TPP)WP)iP*x.|PPPP5pPP6WPP<S?gP?zP?zPPP?zPAxP?zP?zP?zPA|PPBRPBlPGdPPPGhPPPPGhJiPPPJoKjPGhPMxPPPP!!WGhPPPGhPGhP!$fGhP!'z!(|!)VP!)y!)}!)yPPPPP!-Y!(|PP!-v!.pP!1dGhGh!1i!4s!9Y!9Y!=OPPP!=VGhPPPPPPPPPPP!@dP!AqPPGh!CSPGhPGhGhGhGhPGh!DfP!GnP!JrP!Jv!KQ!KU!KUP!GkP!KY!KYP!N^P!NbGhGh!Nh##k?zP?zP?z?zP#$v?z?z#'O?z#)k?z#+m?z?z#,[#.f#.f#.j#.r#.f#.zP#.fP?z#/d?z#3R?z?z5pPPP#6vPPP#7a#7aP#7aP#7w#7aPP#7}P#7tP#7t#8b#7t#8|#9S5m)W#9V)WP#9^#9^#9^P)WP)WP)WP)WPP)WP#9d#9gP#9g)WP#9kP#9nP)WP)WP)WP)WP)WP)W)WPP#9t#9z#:V#:]#:c#:i#:o#:}#;T#;Z#;e#;k#;u#<U#<[#<|#=`#=f#=l#=z#>a#@O#@^#@d#Ax#BW#Cr#DQ#DW#D^#Dd#Dn#Dt#Dz#EU#Eh#EnPPPPPPPPPP#EtPPPPPPP#Fi#Ip#KP#KW#K`PPPP$!d$%Z$+r$+u$+x$,q$,t$,w$-O$-WPP$-^$-b$.Y$/X$/]$/qPP$/u$/{$0PP$0S$0W$0Z$1P$1h$2P$2T$2W$2Z$2a$2d$2h$2lR!{RoqOXst!Z#c%j&m&o&p&r,h,m1w1zY!uQ'Z-Y1[5]Q%pvQ%xyQ&P|Q&e!VS'R!e-QQ'a!iS'g!r!xS*c$|*hQ+f%yQ+s&RQ,X&_Q-W'YQ-b'bQ-j'hQ/|*jQ1f,YR;Y:g%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S,e,h,m-^-f-t-z.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3Z5Y5d5t5u5x6]7w7|8]8gS#p]:d!r)[$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q*u%ZQ+k%{Q,Z&bQ,b&jQ.c;QQ0h+^Q0l+`Q0w+lQ1n,`Q2{.[Q4v0rQ5k1gQ6i3PQ6u;RQ7h4wR8m6j&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]t!nQ!r!u!x!y'R'Y'Z'g'h'i-Q-W-Y-j1[5]5_$v$si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gQ&S|Q'P!eS'V%f-TQ+k%{Q,Z&bQ0]*yQ0w+lQ0|+rQ1m,_Q1n,`Q4v0rQ5P1OQ5k1gQ5n1iQ5o1lQ7h4wQ7k4|Q8U5qQ9V7lR9b8RrnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zR,]&f&v^OPXYstuvwz!Z!`!g!j!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O']'m(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<[<][#[WZ#V#Y'S'}!S%gm#g#h#k%b%e(W(b(c(d+Q+R+T,d,z-x.O.P.Q.S2P2w2x6R6dQ%sxQ%wyS%||&RQ&Y!TQ'^!hQ'`!iQ(k#rS*V$x*ZS+e%x%yQ+i%{Q,S&]Q,W&_S-a'a'bQ.^(lQ/g*WQ0p+fQ0v+lQ0x+mQ0{+qQ1a,TS1e,X,YQ2i-bQ3y/cQ4u0rQ4y0uQ5O0}Q5j1fQ7Q3zQ7g4wQ7j4{Q9R7fR9y9S!O$zi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c!S%uy!i!t%w%x%y'Q'`'a'b'f'p*b+e+f,}-a-b-i/t0p2b2i2p4^Q+_%sQ+x&VQ+{&WQ,V&_Q.](kQ1`,SU1d,W,X,YQ3Q.^Q5e1aS5i1e1fQ8Q5j#W<^#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<go<_:y:z:};P;T;V;X;`;b;d;h;j;l;n;rW%Ti%V*r<YS&V!Q&dQ&W!RQ&X!SR+v&T$w%Si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gT)v$u)wV*v%Z;Q;RU'V!e%f-TS(y#y#zQ+p&OS.V(g(hQ1V+|Q4g0ZR7p5U&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]$i$`c#X#d%n%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.t.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PT#SV#T&}kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q'T!eR2^-Qv!nQ!e!r!u!x!y'R'Y'Z'g'h'i-Q-W-Y-j1[5]5_S*b$|*hS/t*c*jQ/}*kQ1X,OQ4^/|R4a0PnqOXst!Z#c%j&m&o&p&r,h,m1w1zQ&t!^Q'q!wS(m#t:kQ+c%vQ,Q&YQ,R&[Q-_'_Q-l'jS.g(r;[S0`+O;eQ0n+dQ1Z,PQ2O,oQ2Q,pQ2Y,{Q2g-`Q2j-dS4l0a;oQ4q0oS4t0q;pQ6T2[Q6X2hQ6^2oQ7e4rQ8b6VQ8c6YQ8f6_R9h8_$d$_c#X#d%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PS(j#o'dU*o%R(q3mS+Y%n.tQ2|0hQ6f2{Q8l6iR9o8m$d$^c#X#d%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PS(i#o'dS({#z$_S+X%n.tS.W(h(jQ.w)]Q0e+YR2y.X&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]S#p]:dQ&o!XQ&p!YQ&r![Q&s!]R1v,kQ'[!hQ+[%sQ-]'^S.Y(k+_Q2e-[W2}.].^0g0iQ6W2fU6e2z2|3QS8i6f6hS9m8k8lS:U9l9oQ:^:VR:a:_U!vQ'Z-YT5Z1[5]!Q_OXZ`st!V!Z#c#g%b%j&d&f&m&o&p&r(d,h,m.P1w1z]!pQ!r'Z-Y1[5]T#p]:d%Y{OPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gS(y#y#zS.V(g(h!s;v$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Y!tQ'Z-Y1[5]Q'f!rS'p!u!xS'r!y5_S-i'g'hQ-k'iR2p-jQ'o!tS(`#f1qS-h'f'rQ/f*VQ/r*bQ2q-kQ4O/gS4X/s/}Q7P3yS7[4_4aQ8y7QR9Q7_Q#vbQ'n!tS(_#f1qS(a#l*}Q+P%cQ+a%tQ+g%zU-g'f'o'rQ-{(`Q/e*VQ/q*bQ/w*eQ0m+bQ1b,US2n-h-kQ2v.TS3}/f/gS4W/r/}Q4Z/vQ4]/xQ5g1cQ6`2qQ7O3yQ7S4OS7W4X4aQ7]4`Q8O5hS8x7P7QQ8|7XQ9O7[Q9_8PQ9u8yQ9v8}Q9x9QQ:Q9`Q:Y9wQ;y;tQ<U;}R<V<OV!vQ'Z-Y%YaOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gS#vz!j!r;s$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]R;y<[%YbOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gQ%cj!S%ty!i!t%w%x%y'Q'`'a'b'f'p*b+e+f,}-a-b-i/t0p2b2i2p4^S%zz!jQ+b%uQ,U&_W1c,V,W,X,YU5h1d1e1fS8P5i5jQ9`8Q!r;t$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q;}<ZR<O<[$|eOPXYstuvw!Z!`!g!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gY#aWZ#V#Y'}!S%gm#g#h#k%b%e(W(b(c(d+Q+R+T,d,z-x.O.P.Q.S2P2w2x6R6dQ,c&j!p;u$[$m)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]R;x'SS'W!e%fR2`-T%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S,e,h,m-^-f-t-z.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3Z5Y5d5t5u5x6]7w7|8]8g!r)[$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q,b&jQ0h+^Q2{.[Q6i3PR8m6j!b$Uc#X%n'|(S(n(u)W)X)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:e!P:r)Z)l-O.t2W2Z3_3i3j3n3t6U6p6y6z7r8a8n8t8u9{:S<P!f$Wc#X%n'|(S(n(u)T)U)W)X)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:e!T:t)Z)l-O.t2W2Z3_3f3g3i3j3n3t6U6p6y6z7r8a8n8t8u9{:S<P!^$[c#X%n'|(S(n(u)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:eQ3x/az<])Z)l-O.t2W2Z3_3n3t6U6p6y6z7r8a8n8t8u9{:S<PQ<b<dR<c<e&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]S$nh$oR3q.z'TgOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.z.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]T$jf$pQ$hfS)e$k)iR)q$pT$if$pT)g$k)i'ThOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.z.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]T$nh$oQ$qhR)p$o%YjOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8g!s<Z$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]#clOPXZst!Z!`!o#R#c#n#{$m%j&f&i&j&m&o&p&r&v'O'](z)n+S+^,e,h,m-^.[.{0[1_1o1p1r1t1w1z1|3P3p5Y5d5t5u5x6j7w7|8]!O%Ri#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c#W(q#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gQ*z%_Q/W)zo3m:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!O$yi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cQ*[$zS*e$|*hQ*{%`Q/x*f#W;{#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn;|:y:z:};P;T;V;X;`;b;d;h;j;l;n;rQ<Q<^Q<R<_Q<S<`R<T<a!O%Ri#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c#W(q#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<go3m:y:z:};P;T;V;X;`;b;d;h;j;l;n;rnoOXst!Z#c%j&m&o&p&r,h,m1w1zQ*_${Q,v&yQ,w&{R4R/k$v%Si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gQ+y&WQ1T+{Q5S1SR7o5TT*g$|*hS*g$|*hT5[1[5]S/v*d5YT4`0O7wQ+a%tQ/w*eQ0m+bQ1b,UQ5g1cQ8O5hQ9_8PR:Q9`!O%Oi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cr)}$v(s*O*n*|/i0U0V3W4P4j6}7`9t;z<W<XS0Q*m0R#W:|#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn:}:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!^;_(o)`*U*^._.b.f/S/X/a/n0f1Q1S3T4Q4U5R5T6k6n7U7Y7b7d8{9P:X<d<e`;`3l6q6t6x8o9p9s:bS;i.a3UT;j6s8r!O%Qi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cv*P$v(s*Q*m*|/]/i0U0V3W4P4b4j6}7`9t;z<W<XS0S*n0T#W;O#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn;P:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!b;a(o)`*U*^.`.a.f/S/X/a/n0f1Q1S3R3T4Q4U5R5T6k6l6n7U7Y7b7d8{9P:X<d<ed;b3l6r6s6x8o8p9p9q9s:bS;k.b3VT;l6t8srnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zQ&a!UR,e&jrnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zR&a!UQ+}&XR1P+vsnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zQ1],SS5b1`1aU7x5`5a5eS9Z7z7{S9|9Y9]Q:Z9}R:`:[Q&h!VR,^&dR5n1iS%||&RR0x+mQ&m!WR,h&nR,n&sT1x,m1zR,r&tQ,q&tR2R,rQ't!zR-n'tSsOtQ#cXT%ms#cQ!}TR'v!}Q#QUR'x#QQ)w$uR/T)wQ#TVR'z#TQ#WWU(Q#W(R-uQ(R#XR-u(SQ-R'TR2_-RQ.j(sR3X.jQ.m(uS3[.m3]R3].nQ-Y'ZR2c-YY!rQ'Z-Y1[5]R'e!rS#^W%eU(X#^(Y-vQ(Y#_R-v(TQ-U'WR2a-Ut`OXst!V!Z#c%j&d&f&m&o&p&r,h,m1w1zS#gZ%bU#q`#g.PR.P(dQ(e#iQ-|(aW.U(e-|2t6bQ2t-}R6b2uQ)i$kR.|)iQ$ohR)o$oQ$bcU)_$b-q:xQ-q:eR:x)lQ/d*VW3{/d3|7R8zU3|/e/f/gS7R3}4OR8z7S$X)|$v(o(s)`*U*^*m*n*w*x*|.a.b.d.e.f/S/X/]/_/a/i/n0U0V0f1Q1S3R3S3T3W3l4P4Q4U4b4d4j5R5T6k6l6m6n6s6t6v6w6x6}7U7Y7`7b7d8o8p8q8{9P9p9q9r9s9t:X:b;z<W<X<d<eQ/l*^U4T/l4V7VQ4V/nR7V4UQ*h$|R/z*hr*O$v(s*m*n*|/i0U0V3W4P4j6}7`9t;z<W<X!^._(o)`*U*^.a.b.f/S/X/a/n0f1Q1S3T4Q4U5R5T6k6n7U7Y7b7d8{9P:X<d<eU/^*O._6qa6q3l6s6t6x8o9p9s:bQ0R*mQ3U.aU4c0R3U8rR8r6sv*Q$v(s*m*n*|/]/i0U0V3W4P4b4j6}7`9t;z<W<X!b.`(o)`*U*^.a.b.f/S/X/a/n0f1Q1S3R3T4Q4U5R5T6k6l6n7U7Y7b7d8{9P:X<d<eU/`*Q.`6re6r3l6s6t6x8o8p9p9q9s:bQ0T*nQ3V.bU4e0T3V8sR8s6tQ*s%UR0X*sQ4o0fR7c4oQ+U%hR0d+UQ5V1VS7q5V9XR9X7rQ,P&YR1Y,PQ5]1[R7u5]Q1h,ZS5l1h8SR8S5nQ0s+iW4x0s4z7i9TQ4z0vQ7i4yR9T7jQ+n%|R0y+nQ1z,mR5|1zYrOXst#cQ&q!ZQ+W%jQ,g&mQ,i&oQ,j&pQ,l&rQ1u,hS1x,m1zR5{1wQ%lpQ&u!_Q&x!aQ&z!bQ&|!cQ'l!tQ+V%iQ+c%vQ+u&SQ,]&hQ,t&wW-e'f'n'o'rQ-l'jQ/y*gQ0n+dS1k,^,aQ2S,sQ2T,vQ2U,wQ2j-dW2l-g-h-k-mQ4q0oQ4}0|Q5Q1QQ5f1bQ5p1mQ5z1vU6Z2k2n2qQ6^2oQ7e4rQ7m5PQ7n5RQ7t5[Q7}5gQ8T5oS8d6[6`Q8f6_Q9U7kQ9^8OQ9c8UQ9j8eQ9z9VQ:P9_Q:T9kR:]:QQ%vyQ'_!iQ'j!tU+d%w%x%yQ,{'QU-`'`'a'bS-d'f'pQ/p*bS0o+e+fQ2[,}S2h-a-bQ2o-iQ4Y/tQ4r0pQ6V2bQ6Y2iQ6_2pR7Z4^S$wi<YR*t%VU%Ui%V<YR0W*rQ$viS(o#u+`Q(s#wS)`$c$dQ*U$xQ*^${Q*m%OQ*n%QQ*w%[Q*x%]Q*|%aQ.a:|Q.b;OQ.d;SQ.e;UQ.f;WQ/S)uS/X){/ZQ/])}Q/_*PQ/a*RQ/i*YQ/n*`Q0U*pQ0V*qh0f+].Z1^3O5c6g7y8j9[9n:O:WQ1Q+wQ1S+zQ3R;_Q3S;aQ3T;cQ3W.iS3l:y:zQ4P/jQ4Q/kQ4U/mQ4b0QQ4d0SQ4j0^Q5R1RQ5T1UQ6k;gQ6l;iQ6m;kQ6n;mQ6s:}Q6t;PQ6v;TQ6w;VQ6x;XQ6}3xQ7U4SQ7Y4[Q7`4fQ7b4nQ7d4pQ8o;dQ8p;`Q8q;bQ8{7TQ9P7^Q9p;hQ9q;jQ9r;lQ9s;nQ9t8wQ:X;qQ:b;rQ;z<YQ<W<bQ<X<cQ<d<fR<e<gnpOXst!Z#c%j&m&o&p&r,h,m1w1zQ!fPS#eZ#nQ&w!`U'c!o5Y7wQ'y#RQ(|#{Q)m$mS,a&f&iQ,f&jQ,s&vQ,x'OQ-[']Q.p(zQ/Q)nQ0b+SQ0i+^Q1s,eQ2f-^Q2|.[Q3s.{Q4h0[Q5a1_Q5r1oQ5s1pQ5w1rQ5y1tQ6O1|Q6f3PQ6{3pQ7{5dQ8X5tQ8Y5uQ8[5xQ8l6jQ9]7|R9g8]#WcOPXZst!Z!`!o#c#n#{%j&f&i&j&m&o&p&r&v'O'](z+S+^,e,h,m-^.[0[1_1o1p1r1t1w1z1|3P5Y5d5t5u5x6j7w7|8]Q#XWQ#dYQ%nuQ%ovS%qw!gS'|#V(PQ(S#YQ(n#tQ(u#xQ(}$OQ)O$PQ)P$QQ)Q$RQ)R$SQ)S$TQ)T$UQ)U$VQ)V$WQ)W$XQ)X$YQ)Z$[Q)^$aQ)b$eW)l$m)n.{3pQ+Z%pQ+o%}S-O'S2]Q-m'mS-r'}-tQ-w(VQ-y(^Q.h(rQ.n(vQ.r:cQ.t:fQ.u:gQ.v:jQ/V)yQ0_+OQ2W,yQ2Z,|Q2k-fQ2r-zQ3Y.lQ3_:kQ3`:lQ3a:mQ3b:nQ3c:oQ3d:pQ3e:qQ3f:rQ3g:sQ3h:tQ3i:uQ3j:vQ3k.sQ3n:{Q3o;YQ3t:wQ4k0aQ4s0qQ6U;ZQ6[2mQ6a2sQ6o3ZQ6p;[Q6y;^Q6z;eQ7r5WQ8a6SQ8e6]Q8n;fQ8t;oQ8u;pQ9k8gQ9{9WQ:S9iQ:e#RR<P<]R#ZWR'U!eY!tQ'Z-Y1[5]S'Q!e-QQ'f!rS'p!u!xS'r!y5_S,}'R'YS-i'g'hQ-k'iQ2b-WR2p-jR(t#wR(w#xQ!fQT-X'Z-Y]!qQ!r'Z-Y1[5]Q#o]R'd:dT#jZ%bS#iZ%bS%hm,dU(a#g#h#kS-}(b(cQ.R(dQ0c+TQ2u.OU2v.P.Q.SS6c2w2xR8h6d`#]W#V#Y%e'}(W+Q-xr#fZm#g#h#k%b(b(c(d+T.O.P.Q.S2w2x6dQ1q,dQ2X,zQ6Q2PQ8`6RT;w'S+RT#`W%eS#_W%eS(O#V(WS(T#Y+QS-P'S+RT-s'}-xT'X!e%fQ$kfR)s$pT)h$k)iR3r.zT*X$x*ZR*a${Q0g+]Q2z.ZQ5`1^Q6h3OQ7z5cQ8k6gQ9Y7yQ9l8jQ9}9[Q:V9nQ:[:OR:_:WnqOXst!Z#c%j&m&o&p&r,h,m1w1zQ&g!VR,]&dtmOXst!U!V!Z#c%j&d&m&o&p&r,h,m1w1zR,d&jT%im,dR1W+|R,[&bQ&Q|R+t&RR+j%{T&k!W&nT&l!W&nT1y,m1z",
  nodeNames: "⚠ ArithOp ArithOp JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 371,
  context: DRe,
  nodeProps: [
    ["isolate", -8, 4, 5, 13, 33, 35, 48, 50, 52, ""],
    ["group", -26, 8, 16, 18, 65, 201, 205, 209, 210, 212, 215, 218, 228, 230, 236, 238, 240, 242, 245, 251, 257, 259, 261, 263, 265, 267, 268, "Statement", -32, 12, 13, 28, 31, 32, 38, 48, 51, 52, 54, 59, 67, 75, 79, 81, 83, 84, 106, 107, 116, 117, 134, 137, 139, 140, 141, 142, 144, 145, 164, 165, 167, "Expression", -23, 27, 29, 33, 37, 39, 41, 168, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 195, 197, 199, 200, "Type", -3, 87, 99, 105, "ClassItem"],
    ["openedBy", 22, "<", 34, "InterpolationStart", 53, "[", 57, "{", 72, "(", 157, "JSXStartCloseTag"],
    ["closedBy", 23, ">", 36, "InterpolationEnd", 47, "]", 58, "}", 73, ")", 162, "JSXEndTag"]
  ],
  propSources: [NRe],
  skippedNodes: [0, 4, 5, 271],
  repeatNodeCount: 37,
  tokenData: "$Fj(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#8g!R![#:v![!]#Gv!]!^#IS!^!_#J^!_!`#Ns!`!a$#_!a!b$(l!b!c$,k!c!}Er!}#O$-u#O#P$/P#P#Q$4h#Q#R$5r#R#SEr#S#T$7P#T#o$8Z#o#p$<k#p#q$=a#q#r$>q#r#s$?}#s$f%Z$f$g+g$g#BYEr#BY#BZ$AX#BZ$ISEr$IS$I_$AX$I_$I|Er$I|$I}$Dd$I}$JO$Dd$JO$JTEr$JT$JU$AX$JU$KVEr$KV$KW$AX$KW&FUEr&FU&FV$AX&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AX?HUOEr(n%d_$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$f&j(R!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(R!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$f&j(OpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(OpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$f&j(Op(R!b't(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST(P#S$f&j'u(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$f&j(Op(R!b'u(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$f&j!o$Ip(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#t$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#t$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/|3l_'}$(n$f&j(R!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$f&j(R!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$f&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$a`$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$a``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$a`$f&j(R!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(R!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$a`(R!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k#%|:hh$f&j(Op(R!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__VS$f&j(Op(R!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]VS$f&j(R!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXVS$f&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSVSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWVS(R!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]VS$f&j(OpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWVS(OpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYVS(Op(R!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S#%|C}i$f&j(g!L^(Op(R!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr#%|EoP;=`<%lCr(CSFRk$f&j(Op(R!b$Y#t'{&;d([!LYOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$f&j(Op(R!b$Y#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv(CSJPP;=`<%lEr%#SJ_`$f&j(Op(R!b#l$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SKl_$f&j$O$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&COLva(p&;`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SNW`$f&j#x$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/|! c_(Q$)`$f&j(OpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$f&j(OpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$f&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$a`$f&j(OpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(OpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$a`(OpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b(*Q!'t_!k(!b$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l!)O_!jM|$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!*[b$f&j(Op(R!b'|#)d#m$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!+o`$f&j(Op(R!b#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!,|`$f&j(Op(R!bn&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!.Z_!Y&;l$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!/ec$f&j(Op(R!b|'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!0ya$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!2Z_!XMt$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!3eg$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!5Vg$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!6wc$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!8_c$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!9uf$f&j(Op(R!b#k$IdOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpxz!;Zz{#,f{!P!;Z!P!Q#-{!Q!^!;Z!^!_#'Z!_!`#5k!`!a#7Q!a!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(r!;fb$f&j(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(Q!<w`$f&j(R!b!USOY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eb!Q!^!<n!^!_!GY!_!}!<n!}#O!Ja#O#P!Dj#P#o!<n#o#p!GY#p;'S!<n;'S;=`!Kj<%lO!<n&n!>Q^$f&j!USOY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@Y!_!}!=y!}#O!Bw#O#P!Dj#P#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!?Ta$f&j!USO!^&c!_#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&cS!@_X!USOY!@YZ!P!@Y!P!Q!@z!Q!}!@Y!}#O!Ac#O#P!Bb#P;'S!@Y;'S;=`!Bq<%lO!@YS!APU!US#Z#[!@z#]#^!@z#a#b!@z#g#h!@z#i#j!@z#m#n!@zS!AfVOY!AcZ#O!Ac#O#P!A{#P#Q!@Y#Q;'S!Ac;'S;=`!B[<%lO!AcS!BOSOY!AcZ;'S!Ac;'S;=`!B[<%lO!AcS!B_P;=`<%l!AcS!BeSOY!@YZ;'S!@Y;'S;=`!Bq<%lO!@YS!BtP;=`<%l!@Y&n!B|[$f&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#O!Bw#O#P!Cr#P#Q!=y#Q#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!CwX$f&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!DgP;=`<%l!Bw&n!DoX$f&jOY!=yYZ&cZ!^!=y!^!_!@Y!_#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!E_P;=`<%l!=y(Q!Eki$f&j(R!b!USOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!Eb#[#]&}#]#^!Eb#^#a&}#a#b!Eb#b#g&}#g#h!Eb#h#i&}#i#j!Eb#j#m&}#m#n!Eb#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!GaZ(R!b!USOY!GYZw!GYwx!@Yx!P!GY!P!Q!HS!Q!}!GY!}#O!Ic#O#P!Bb#P;'S!GY;'S;=`!JZ<%lO!GY!f!HZb(R!b!USOY'}Zw'}x#O'}#P#Z'}#Z#[!HS#[#]'}#]#^!HS#^#a'}#a#b!HS#b#g'}#g#h!HS#h#i'}#i#j!HS#j#m'}#m#n!HS#n;'S'};'S;=`(f<%lO'}!f!IhX(R!bOY!IcZw!Icwx!Acx#O!Ic#O#P!A{#P#Q!GY#Q;'S!Ic;'S;=`!JT<%lO!Ic!f!JWP;=`<%l!Ic!f!J^P;=`<%l!GY(Q!Jh^$f&j(R!bOY!JaYZ&cZw!Jawx!Bwx!^!Ja!^!_!Ic!_#O!Ja#O#P!Cr#P#Q!<n#Q#o!Ja#o#p!Ic#p;'S!Ja;'S;=`!Kd<%lO!Ja(Q!KgP;=`<%l!Ja(Q!KmP;=`<%l!<n'`!Ky`$f&j(Op!USOY!KpYZ&cZr!Kprs!=ys!P!Kp!P!Q!L{!Q!^!Kp!^!_!Ns!_!}!Kp!}#O##z#O#P!Dj#P#o!Kp#o#p!Ns#p;'S!Kp;'S;=`#%T<%lO!Kp'`!MUi$f&j(Op!USOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!L{#[#](r#]#^!L{#^#a(r#a#b!L{#b#g(r#g#h!L{#h#i(r#i#j!L{#j#m(r#m#n!L{#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!NzZ(Op!USOY!NsZr!Nsrs!@Ys!P!Ns!P!Q# m!Q!}!Ns!}#O#!|#O#P!Bb#P;'S!Ns;'S;=`##t<%lO!Nst# tb(Op!USOY)rZr)rs#O)r#P#Z)r#Z#[# m#[#])r#]#^# m#^#a)r#a#b# m#b#g)r#g#h# m#h#i)r#i#j# m#j#m)r#m#n# m#n;'S)r;'S;=`*Z<%lO)rt##RX(OpOY#!|Zr#!|rs!Acs#O#!|#O#P!A{#P#Q!Ns#Q;'S#!|;'S;=`##n<%lO#!|t##qP;=`<%l#!|t##wP;=`<%l!Ns'`#$R^$f&j(OpOY##zYZ&cZr##zrs!Bws!^##z!^!_#!|!_#O##z#O#P!Cr#P#Q!Kp#Q#o##z#o#p#!|#p;'S##z;'S;=`#$}<%lO##z'`#%QP;=`<%l##z'`#%WP;=`<%l!Kp(r#%fk$f&j(Op(R!b!USOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[#%Z#[#]%Z#]#^#%Z#^#a%Z#a#b#%Z#b#g%Z#g#h#%Z#h#i%Z#i#j#%Z#j#m%Z#m#n#%Z#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W#'d](Op(R!b!USOY#'ZZr#'Zrs!GYsw#'Zwx!Nsx!P#'Z!P!Q#(]!Q!}#'Z!}#O#)w#O#P!Bb#P;'S#'Z;'S;=`#*w<%lO#'Z#W#(fe(Op(R!b!USOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[#(]#[#]*g#]#^#(]#^#a*g#a#b#(]#b#g*g#g#h#(]#h#i*g#i#j#(]#j#m*g#m#n#(]#n;'S*g;'S;=`+Z<%lO*g#W#*OZ(Op(R!bOY#)wZr#)wrs!Icsw#)wwx#!|x#O#)w#O#P!A{#P#Q#'Z#Q;'S#)w;'S;=`#*q<%lO#)w#W#*tP;=`<%l#)w#W#*zP;=`<%l#'Z(r#+W`$f&j(Op(R!bOY#*}YZ&cZr#*}rs!Jasw#*}wx##zx!^#*}!^!_#)w!_#O#*}#O#P!Cr#P#Q!;Z#Q#o#*}#o#p#)w#p;'S#*};'S;=`#,Y<%lO#*}(r#,]P;=`<%l#*}(r#,cP;=`<%l!;Z(CS#,sb$f&j(Op(R!b'v(;d!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(CS#.W_$f&j(Op(R!bS(;dOY#-{YZ&cZr#-{rs#/Vsw#-{wx#2gx!^#-{!^!_#4f!_#O#-{#O#P#0X#P#o#-{#o#p#4f#p;'S#-{;'S;=`#5e<%lO#-{(Bb#/`]$f&j(R!bS(;dOY#/VYZ&cZw#/Vwx#0Xx!^#/V!^!_#1j!_#O#/V#O#P#0X#P#o#/V#o#p#1j#p;'S#/V;'S;=`#2a<%lO#/V(AO#0`X$f&jS(;dOY#0XYZ&cZ!^#0X!^!_#0{!_#o#0X#o#p#0{#p;'S#0X;'S;=`#1d<%lO#0X(;d#1QSS(;dOY#0{Z;'S#0{;'S;=`#1^<%lO#0{(;d#1aP;=`<%l#0{(AO#1gP;=`<%l#0X(<v#1qW(R!bS(;dOY#1jZw#1jwx#0{x#O#1j#O#P#0{#P;'S#1j;'S;=`#2Z<%lO#1j(<v#2^P;=`<%l#1j(Bb#2dP;=`<%l#/V(Ap#2p]$f&j(OpS(;dOY#2gYZ&cZr#2grs#0Xs!^#2g!^!_#3i!_#O#2g#O#P#0X#P#o#2g#o#p#3i#p;'S#2g;'S;=`#4`<%lO#2g(<U#3pW(OpS(;dOY#3iZr#3irs#0{s#O#3i#O#P#0{#P;'S#3i;'S;=`#4Y<%lO#3i(<U#4]P;=`<%l#3i(Ap#4cP;=`<%l#2g(=h#4oY(Op(R!bS(;dOY#4fZr#4frs#1jsw#4fwx#3ix#O#4f#O#P#0{#P;'S#4f;'S;=`#5_<%lO#4f(=h#5bP;=`<%l#4f(CS#5hP;=`<%l#-{%#W#5xb$f&j$O$Id(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z+h#7_b$W#t$f&j(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z$/l#8rp$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#U%Z#U#V#>Q#V#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#d#AY#d#l%Z#l#m#D[#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;Rk$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#=R_$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>Zd$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#?tf$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Acc$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Bye$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Deg$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#FXi$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#HT_!d$b$f&j#|%<f(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#I__`l$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^#Jk^g!*v!h'.r(Op(R!b(tSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Kg!Q!^*g!^!_#L]!_!`#M}!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#KpX$h&j(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#LfZ#n$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#MX!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#MbX$O$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#NWX#o$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh$ Oa#[%?x$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$!T!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W$!`_#g$Ih$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh$#nafBf#o$Id$c#|$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$$s!`!a$%}!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$%O_#o$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$&Ya#n$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$'_!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$'j`#n$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$(wc(h$Ip$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$*S!P!^%Z!^!_*g!_!a%Z!a!b$+^!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$*__}'#p$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$+i`$f&j#y$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$,v_!{!Ln$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$.Q_!P(8n$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/UZ$f&jO!^$/w!^!_$0_!_#i$/w#i#j$0d#j#l$/w#l#m$2V#m#o$/w#o#p$0_#p;'S$/w;'S;=`$4b<%lO$/w(n$0OT^#S$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0dO^#S(n$0i[$f&jO!Q&c!Q![$1_![!^&c!_!c&c!c!i$1_!i#T&c#T#Z$1_#Z#o&c#o#p$3u#p;'S&c;'S;=`&w<%lO&c(n$1dZ$f&jO!Q&c!Q![$2V![!^&c!_!c&c!c!i$2V!i#T&c#T#Z$2V#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2[Z$f&jO!Q&c!Q![$2}![!^&c!_!c&c!c!i$2}!i#T&c#T#Z$2}#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3SZ$f&jO!Q&c!Q![$/w![!^&c!_!c&c!c!i$/w!i#T&c#T#Z$/w#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$3xR!Q![$4R!c!i$4R#T#Z$4R#S$4US!Q![$4R!c!i$4R#T#Z$4R#q#r$0_(n$4eP;=`<%l$/w!2r$4s_!V!+S$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$5}`#v$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$7[_$f&j(Op(R!b(X&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$8jk$f&j(Op(R!b'{&;d$[#t([!LYOY%ZYZ&cZr%Zrs&}st%Ztu$8Zuw%Zwx(rx}%Z}!O$:_!O!Q%Z!Q![$8Z![!^%Z!^!_*g!_!c%Z!c!}$8Z!}#O%Z#O#P&c#P#R%Z#R#S$8Z#S#T%Z#T#o$8Z#o#p*g#p$g%Z$g;'S$8Z;'S;=`$<e<%lO$8Z+d$:jk$f&j(Op(R!b$[#tOY%ZYZ&cZr%Zrs&}st%Ztu$:_uw%Zwx(rx}%Z}!O$:_!O!Q%Z!Q![$:_![!^%Z!^!_*g!_!c%Z!c!}$:_!}#O%Z#O#P&c#P#R%Z#R#S$:_#S#T%Z#T#o$:_#o#p*g#p$g%Z$g;'S$:_;'S;=`$<_<%lO$:_+d$<bP;=`<%l$:_(CS$<hP;=`<%l$8Z!5p$<tX![!3l(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g&CO$=la(o&;`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+^#q;'S%Z;'S;=`+a<%lO%Z%#`$?O_!Z$I`r`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$@Y_!pS$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$Aj|$f&j(Op(R!b't(;d$Y#t'{&;d([!LYOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$AX#BZ$ISEr$IS$I_$AX$I_$JTEr$JT$JU$AX$JU$KVEr$KV$KW$AX$KW&FUEr&FU&FV$AX&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AX?HUOEr(CS$Duk$f&j(Op(R!b'u(;d$Y#t'{&;d([!LYOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [IRe, RRe, $Re, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, LRe, new pk("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOt~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!R~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(Z~~", 141, 332), new pk("j~RQYZXz{^~^O'x~~aP!P!Qd~iO'y~~", 25, 315)],
  topRules: { Script: [0, 6], SingleExpression: [1, 269], SingleClassItem: [2, 270] },
  dialects: { jsx: 0, ts: 14614 },
  dynamicPrecedences: { 69: 1, 79: 1, 81: 1, 165: 1, 193: 1 },
  specialized: [{ term: 319, get: (n) => BRe[n] || -1 }, { term: 334, get: (n) => VRe[n] || -1 }, { term: 70, get: (n) => zRe[n] || -1 }],
  tokenPrec: 14638
}), IX = [
  /* @__PURE__ */ Ji("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], QRe = /* @__PURE__ */ IX.concat([
  /* @__PURE__ */ Ji("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ Ji("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), vV = /* @__PURE__ */ new vMe(), RX = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function Nv(n) {
  return (e, t) => {
    let r = e.node.getChild("VariableDefinition");
    return r && t(r, n), !0;
  };
}
const ZRe = ["FunctionDeclaration"], WRe = {
  FunctionDeclaration: /* @__PURE__ */ Nv("function"),
  ClassDeclaration: /* @__PURE__ */ Nv("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ Nv("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ Nv("type"),
  NamespaceDeclaration: /* @__PURE__ */ Nv("namespace"),
  VariableDefinition(n, e) {
    n.matchContext(ZRe) || e(n, "variable");
  },
  TypeDefinition(n, e) {
    e(n, "type");
  },
  __proto__: null
};
function $X(n, e) {
  let t = vV.get(e);
  if (t)
    return t;
  let r = [], i = !0;
  function o(s, a) {
    let l = n.sliceString(s.from, s.to);
    r.push({ label: l, type: a });
  }
  return e.cursor(Cr.IncludeAnonymous).iterate((s) => {
    if (i)
      i = !1;
    else if (s.name) {
      let a = WRe[s.name];
      if (a && a(s, o) || RX.has(s.name))
        return !1;
    } else if (s.to - s.from > 8192) {
      for (let a of $X(n, s.node))
        r.push(a);
      return !1;
    }
  }), vV.set(e, r), r;
}
const mV = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, NX = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  ".",
  "?."
];
function GRe(n) {
  let e = Er(n.state).resolveInner(n.pos, -1);
  if (NX.indexOf(e.name) > -1)
    return null;
  let t = e.name == "VariableName" || e.to - e.from < 20 && mV.test(n.state.sliceDoc(e.from, e.to));
  if (!t && !n.explicit)
    return null;
  let r = [];
  for (let i = e; i; i = i.parent)
    RX.has(i.name) && (r = r.concat($X(n.state.doc, i)));
  return {
    options: r,
    from: t ? e.from : n.pos,
    validFor: mV
  };
}
const Tf = /* @__PURE__ */ a0.define({
  name: "javascript",
  parser: /* @__PURE__ */ FRe.configure({
    props: [
      /* @__PURE__ */ eI.add({
        IfStatement: /* @__PURE__ */ ly({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ ly({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: $Me,
        SwitchBody: (n) => {
          let e = n.textAfter, t = /^\s*\}/.test(e), r = /^\s*(case|default)\b/.test(e);
          return n.baseIndent + (t ? 0 : r ? 1 : 2) * n.unit;
        },
        Block: /* @__PURE__ */ RMe({ closing: "}" }),
        ArrowFunction: (n) => n.baseIndent + n.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ ly({ except: /^{/ }),
        JSXElement(n) {
          let e = /^\s*<\//.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        JSXEscape(n) {
          let e = /\s*\}/.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(n) {
          return n.column(n.node.from) + n.unit;
        }
      }),
      /* @__PURE__ */ nI.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": gY,
        BlockComment(n) {
          return { from: n.from + 2, to: n.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), BX = {
  test: (n) => /^JSX/.test(n.name),
  facet: /* @__PURE__ */ cY({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, jRe = /* @__PURE__ */ Tf.configure({ dialect: "ts" }, "typescript"), HRe = /* @__PURE__ */ Tf.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ KL.add((n) => n.isTop ? [BX] : void 0)]
}), qRe = /* @__PURE__ */ Tf.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ KL.add((n) => n.isTop ? [BX] : void 0)]
}, "typescript");
let VX = (n) => ({ label: n, type: "keyword" });
const zX = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(VX), YRe = /* @__PURE__ */ zX.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(VX));
function E4t(n = {}) {
  let e = n.jsx ? n.typescript ? qRe : HRe : n.typescript ? jRe : Tf, t = n.typescript ? QRe.concat(YRe) : IX.concat(zX);
  return new fY(e, [
    Tf.data.of({
      autocomplete: nIe(NX, pX(t))
    }),
    Tf.data.of({
      autocomplete: GRe
    }),
    n.jsx ? KRe : []
  ]);
}
function XRe(n) {
  for (; ; ) {
    if (n.name == "JSXOpenTag" || n.name == "JSXSelfClosingTag" || n.name == "JSXFragmentTag")
      return n;
    if (n.name == "JSXEscape" || !n.parent)
      return null;
    n = n.parent;
  }
}
function yV(n, e, t = n.length) {
  for (let r = e == null ? void 0 : e.firstChild; r; r = r.nextSibling)
    if (r.name == "JSXIdentifier" || r.name == "JSXBuiltin" || r.name == "JSXNamespacedName" || r.name == "JSXMemberExpression")
      return n.sliceString(r.from, Math.min(r.to, t));
  return "";
}
const URe = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), KRe = /* @__PURE__ */ Ne.inputHandler.of((n, e, t, r, i) => {
  if ((URe ? n.composing : n.compositionStarted) || n.state.readOnly || e != t || r != ">" && r != "/" || !Tf.isActiveAt(n.state, e, -1))
    return !1;
  let o = i(), { state: s } = o, a = s.changeByRange((l) => {
    var u;
    let { head: c } = l, h = Er(s).resolveInner(c - 1, -1), f;
    if (h.name == "JSXStartTag" && (h = h.parent), !(s.doc.sliceString(c - 1, c) != r || h.name == "JSXAttributeValue" && h.to > c)) {
      if (r == ">" && h.name == "JSXFragmentTag")
        return { range: l, changes: { from: c, insert: "</>" } };
      if (r == "/" && h.name == "JSXStartCloseTag") {
        let d = h.parent, p = d.parent;
        if (p && d.from == c - 2 && ((f = yV(s.doc, p.firstChild, c)) || ((u = p.firstChild) === null || u === void 0 ? void 0 : u.name) == "JSXFragmentTag")) {
          let g = `${f}>`;
          return { range: ce.cursor(c + g.length, -1), changes: { from: c, insert: g } };
        }
      } else if (r == ">") {
        let d = XRe(h);
        if (d && d.name == "JSXOpenTag" && !/^\/?>|^<\//.test(s.doc.sliceString(c, c + 2)) && (f = yV(s.doc, d, c)))
          return { range: l, changes: { from: c, insert: `</${f}>` } };
      }
    }
    return { range: l };
  });
  return a.changes.empty ? !1 : (n.dispatch([
    o,
    s.update(a, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
});
/*! medium-zoom 1.1.0 | MIT License | https://github.com/francoischalifour/medium-zoom */
var $h = Object.assign || function(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var r in t)
      Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]);
  }
  return n;
}, P1 = function(e) {
  return e.tagName === "IMG";
}, JRe = function(e) {
  return NodeList.prototype.isPrototypeOf(e);
}, cw = function(e) {
  return e && e.nodeType === 1;
}, bV = function(e) {
  var t = e.currentSrc || e.src;
  return t.substr(-4).toLowerCase() === ".svg";
}, OV = function(e) {
  try {
    return Array.isArray(e) ? e.filter(P1) : JRe(e) ? [].slice.call(e).filter(P1) : cw(e) ? [e].filter(P1) : typeof e == "string" ? [].slice.call(document.querySelectorAll(e)).filter(P1) : [];
  } catch {
    throw new TypeError(`The provided selector is invalid.
Expects a CSS selector, a Node element, a NodeList or an array.
See: https://github.com/francoischalifour/medium-zoom`);
  }
}, e$e = function(e) {
  var t = document.createElement("div");
  return t.classList.add("medium-zoom-overlay"), t.style.background = e, t;
}, t$e = function(e) {
  var t = e.getBoundingClientRect(), r = t.top, i = t.left, o = t.width, s = t.height, a = e.cloneNode(), l = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0, u = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
  return a.removeAttribute("id"), a.style.position = "absolute", a.style.top = r + l + "px", a.style.left = i + u + "px", a.style.width = o + "px", a.style.height = s + "px", a.style.transform = "", a;
}, Id = function(e, t) {
  var r = $h({
    bubbles: !1,
    cancelable: !1,
    detail: void 0
  }, t);
  if (typeof window.CustomEvent == "function")
    return new CustomEvent(e, r);
  var i = document.createEvent("CustomEvent");
  return i.initCustomEvent(e, r.bubbles, r.cancelable, r.detail), i;
}, n$e = function n(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = window.Promise || function(k) {
    function L() {
    }
    k(L, L);
  }, i = function(k) {
    var L = k.target;
    if (L === C) {
      p();
      return;
    }
    b.indexOf(L) !== -1 && g({ target: L });
  }, o = function() {
    if (!(w || !_.original)) {
      var k = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
      Math.abs(x - k) > S.scrollOffset && setTimeout(p, 150);
    }
  }, s = function(k) {
    var L = k.key || k.keyCode;
    (L === "Escape" || L === "Esc" || L === 27) && p();
  }, a = function() {
    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, L = k;
    if (k.background && (C.style.background = k.background), k.container && k.container instanceof Object && (L.container = $h({}, S.container, k.container)), k.template) {
      var D = cw(k.template) ? k.template : document.querySelector(k.template);
      L.template = D;
    }
    return S = $h({}, S, L), b.forEach(function(E) {
      E.dispatchEvent(Id("medium-zoom:update", {
        detail: { zoom: A }
      }));
    }), A;
  }, l = function() {
    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return n($h({}, S, k));
  }, u = function() {
    for (var k = arguments.length, L = Array(k), D = 0; D < k; D++)
      L[D] = arguments[D];
    var E = L.reduce(function(M, R) {
      return [].concat(M, OV(R));
    }, []);
    return E.filter(function(M) {
      return b.indexOf(M) === -1;
    }).forEach(function(M) {
      b.push(M), M.classList.add("medium-zoom-image");
    }), O.forEach(function(M) {
      var R = M.type, N = M.listener, $ = M.options;
      E.forEach(function(V) {
        V.addEventListener(R, N, $);
      });
    }), A;
  }, c = function() {
    for (var k = arguments.length, L = Array(k), D = 0; D < k; D++)
      L[D] = arguments[D];
    _.zoomed && p();
    var E = L.length > 0 ? L.reduce(function(M, R) {
      return [].concat(M, OV(R));
    }, []) : b;
    return E.forEach(function(M) {
      M.classList.remove("medium-zoom-image"), M.dispatchEvent(Id("medium-zoom:detach", {
        detail: { zoom: A }
      }));
    }), b = b.filter(function(M) {
      return E.indexOf(M) === -1;
    }), A;
  }, h = function(k, L) {
    var D = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return b.forEach(function(E) {
      E.addEventListener("medium-zoom:" + k, L, D);
    }), O.push({ type: "medium-zoom:" + k, listener: L, options: D }), A;
  }, f = function(k, L) {
    var D = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return b.forEach(function(E) {
      E.removeEventListener("medium-zoom:" + k, L, D);
    }), O = O.filter(function(E) {
      return !(E.type === "medium-zoom:" + k && E.listener.toString() === L.toString());
    }), A;
  }, d = function() {
    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, L = k.target, D = function() {
      var M = {
        width: document.documentElement.clientWidth,
        height: document.documentElement.clientHeight,
        left: 0,
        top: 0,
        right: 0,
        bottom: 0
      }, R = void 0, N = void 0;
      if (S.container)
        if (S.container instanceof Object)
          M = $h({}, M, S.container), R = M.width - M.left - M.right - S.margin * 2, N = M.height - M.top - M.bottom - S.margin * 2;
        else {
          var $ = cw(S.container) ? S.container : document.querySelector(S.container), V = $.getBoundingClientRect(), H = V.width, G = V.height, q = V.left, Y = V.top;
          M = $h({}, M, {
            width: H,
            height: G,
            left: q,
            top: Y
          });
        }
      R = R || M.width - S.margin * 2, N = N || M.height - S.margin * 2;
      var ie = _.zoomedHd || _.original, se = bV(ie) ? R : ie.naturalWidth || R, K = bV(ie) ? N : ie.naturalHeight || N, re = ie.getBoundingClientRect(), ge = re.top, ne = re.left, ue = re.width, xe = re.height, gt = Math.min(Math.max(ue, se), R) / ue, He = Math.min(Math.max(xe, K), N) / xe, It = Math.min(gt, He), Rt = (-ne + (R - ue) / 2 + S.margin + M.left) / It, pn = (-ge + (N - xe) / 2 + S.margin + M.top) / It, Xn = "scale(" + It + ") translate3d(" + Rt + "px, " + pn + "px, 0)";
      _.zoomed.style.transform = Xn, _.zoomedHd && (_.zoomedHd.style.transform = Xn);
    };
    return new r(function(E) {
      if (L && b.indexOf(L) === -1) {
        E(A);
        return;
      }
      var M = function H() {
        w = !1, _.zoomed.removeEventListener("transitionend", H), _.original.dispatchEvent(Id("medium-zoom:opened", {
          detail: { zoom: A }
        })), E(A);
      };
      if (_.zoomed) {
        E(A);
        return;
      }
      if (L)
        _.original = L;
      else if (b.length > 0) {
        var R = b;
        _.original = R[0];
      } else {
        E(A);
        return;
      }
      if (_.original.dispatchEvent(Id("medium-zoom:open", {
        detail: { zoom: A }
      })), x = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0, w = !0, _.zoomed = t$e(_.original), document.body.appendChild(C), S.template) {
        var N = cw(S.template) ? S.template : document.querySelector(S.template);
        _.template = document.createElement("div"), _.template.appendChild(N.content.cloneNode(!0)), document.body.appendChild(_.template);
      }
      if (_.original.parentElement && _.original.parentElement.tagName === "PICTURE" && _.original.currentSrc && (_.zoomed.src = _.original.currentSrc), document.body.appendChild(_.zoomed), window.requestAnimationFrame(function() {
        document.body.classList.add("medium-zoom--opened");
      }), _.original.classList.add("medium-zoom-image--hidden"), _.zoomed.classList.add("medium-zoom-image--opened"), _.zoomed.addEventListener("click", p), _.zoomed.addEventListener("transitionend", M), _.original.getAttribute("data-zoom-src")) {
        _.zoomedHd = _.zoomed.cloneNode(), _.zoomedHd.removeAttribute("srcset"), _.zoomedHd.removeAttribute("sizes"), _.zoomedHd.removeAttribute("loading"), _.zoomedHd.src = _.zoomed.getAttribute("data-zoom-src"), _.zoomedHd.onerror = function() {
          clearInterval($), console.warn("Unable to reach the zoom image target " + _.zoomedHd.src), _.zoomedHd = null, D();
        };
        var $ = setInterval(function() {
          _.zoomedHd.complete && (clearInterval($), _.zoomedHd.classList.add("medium-zoom-image--opened"), _.zoomedHd.addEventListener("click", p), document.body.appendChild(_.zoomedHd), D());
        }, 10);
      } else if (_.original.hasAttribute("srcset")) {
        _.zoomedHd = _.zoomed.cloneNode(), _.zoomedHd.removeAttribute("sizes"), _.zoomedHd.removeAttribute("loading");
        var V = _.zoomedHd.addEventListener("load", function() {
          _.zoomedHd.removeEventListener("load", V), _.zoomedHd.classList.add("medium-zoom-image--opened"), _.zoomedHd.addEventListener("click", p), document.body.appendChild(_.zoomedHd), D();
        });
      } else
        D();
    });
  }, p = function() {
    return new r(function(k) {
      if (w || !_.original) {
        k(A);
        return;
      }
      var L = function D() {
        _.original.classList.remove("medium-zoom-image--hidden"), document.body.removeChild(_.zoomed), _.zoomedHd && document.body.removeChild(_.zoomedHd), document.body.removeChild(C), _.zoomed.classList.remove("medium-zoom-image--opened"), _.template && document.body.removeChild(_.template), w = !1, _.zoomed.removeEventListener("transitionend", D), _.original.dispatchEvent(Id("medium-zoom:closed", {
          detail: { zoom: A }
        })), _.original = null, _.zoomed = null, _.zoomedHd = null, _.template = null, k(A);
      };
      w = !0, document.body.classList.remove("medium-zoom--opened"), _.zoomed.style.transform = "", _.zoomedHd && (_.zoomedHd.style.transform = ""), _.template && (_.template.style.transition = "opacity 150ms", _.template.style.opacity = 0), _.original.dispatchEvent(Id("medium-zoom:close", {
        detail: { zoom: A }
      })), _.zoomed.addEventListener("transitionend", L);
    });
  }, g = function() {
    var k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, L = k.target;
    return _.original ? p() : d({ target: L });
  }, v = function() {
    return S;
  }, m = function() {
    return b;
  }, y = function() {
    return _.original;
  }, b = [], O = [], w = !1, x = 0, S = t, _ = {
    original: null,
    zoomed: null,
    zoomedHd: null,
    template: null
    // If the selector is omitted, it's replaced by the options
  };
  Object.prototype.toString.call(e) === "[object Object]" ? S = e : (e || typeof e == "string") && u(e), S = $h({
    margin: 0,
    background: "#fff",
    scrollOffset: 40,
    container: null,
    template: null
  }, S);
  var C = e$e(S.background);
  document.addEventListener("click", i), document.addEventListener("keyup", s), document.addEventListener("scroll", o), window.addEventListener("resize", p);
  var A = {
    open: d,
    close: p,
    toggle: g,
    update: a,
    clone: l,
    attach: u,
    detach: c,
    on: h,
    off: f,
    getOptions: v,
    getImages: m,
    getZoomedImage: y
  };
  return A;
};
function r$e(n, e) {
  e === void 0 && (e = {});
  var t = e.insertAt;
  if (!(!n || typeof document > "u")) {
    var r = document.head || document.getElementsByTagName("head")[0], i = document.createElement("style");
    i.type = "text/css", t === "top" && r.firstChild ? r.insertBefore(i, r.firstChild) : r.appendChild(i), i.styleSheet ? i.styleSheet.cssText = n : i.appendChild(document.createTextNode(n));
  }
}
var i$e = ".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}";
r$e(i$e);
const o$e = n$e;
var s$e = function() {
  var n = document.getSelection();
  if (!n.rangeCount)
    return function() {
    };
  for (var e = document.activeElement, t = [], r = 0; r < n.rangeCount; r++)
    t.push(n.getRangeAt(r));
  switch (e.tagName.toUpperCase()) {
    case "INPUT":
    case "TEXTAREA":
      e.blur();
      break;
    default:
      e = null;
      break;
  }
  return n.removeAllRanges(), function() {
    n.type === "Caret" && n.removeAllRanges(), n.rangeCount || t.forEach(function(i) {
      n.addRange(i);
    }), e && e.focus();
  };
}, a$e = s$e, wV = {
  "text/plain": "Text",
  "text/html": "Url",
  default: "Text"
}, l$e = "Copy to clipboard: #{key}, Enter";
function u$e(n) {
  var e = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return n.replace(/#{\s*key\s*}/g, e);
}
function c$e(n, e) {
  var t, r, i, o, s, a, l = !1;
  e || (e = {}), t = e.debug || !1;
  try {
    i = a$e(), o = document.createRange(), s = document.getSelection(), a = document.createElement("span"), a.textContent = n, a.ariaHidden = "true", a.style.all = "unset", a.style.position = "fixed", a.style.top = 0, a.style.clip = "rect(0, 0, 0, 0)", a.style.whiteSpace = "pre", a.style.webkitUserSelect = "text", a.style.MozUserSelect = "text", a.style.msUserSelect = "text", a.style.userSelect = "text", a.addEventListener("copy", function(c) {
      if (c.stopPropagation(), e.format)
        if (c.preventDefault(), typeof c.clipboardData > "u") {
          t && console.warn("unable to use e.clipboardData"), t && console.warn("trying IE specific stuff"), window.clipboardData.clearData();
          var h = wV[e.format] || wV.default;
          window.clipboardData.setData(h, n);
        } else
          c.clipboardData.clearData(), c.clipboardData.setData(e.format, n);
      e.onCopy && (c.preventDefault(), e.onCopy(c.clipboardData));
    }), document.body.appendChild(a), o.selectNodeContents(a), s.addRange(o);
    var u = document.execCommand("copy");
    if (!u)
      throw new Error("copy command was unsuccessful");
    l = !0;
  } catch (c) {
    t && console.error("unable to copy using execCommand: ", c), t && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(e.format || "text", n), e.onCopy && e.onCopy(window.clipboardData), l = !0;
    } catch (h) {
      t && console.error("unable to copy using clipboardData: ", h), t && console.error("falling back to prompt"), r = u$e("message" in e ? e.message : l$e), window.prompt(r, n);
    }
  } finally {
    s && (typeof s.removeRange == "function" ? s.removeRange(o) : s.removeAllRanges()), a && document.body.removeChild(a), i();
  }
  return l;
}
var h$e = c$e;
const f$e = /* @__PURE__ */ ab(h$e);
var tn = {};
const d$e = "Á", p$e = "á", g$e = "Ă", v$e = "ă", m$e = "∾", y$e = "∿", b$e = "∾̳", O$e = "Â", w$e = "â", x$e = "´", S$e = "А", _$e = "а", C$e = "Æ", A$e = "æ", T$e = "⁡", P$e = "𝔄", E$e = "𝔞", k$e = "À", M$e = "à", D$e = "ℵ", L$e = "ℵ", I$e = "Α", R$e = "α", $$e = "Ā", N$e = "ā", B$e = "⨿", V$e = "&", z$e = "&", F$e = "⩕", Q$e = "⩓", Z$e = "∧", W$e = "⩜", G$e = "⩘", j$e = "⩚", H$e = "∠", q$e = "⦤", Y$e = "∠", X$e = "⦨", U$e = "⦩", K$e = "⦪", J$e = "⦫", eNe = "⦬", tNe = "⦭", nNe = "⦮", rNe = "⦯", iNe = "∡", oNe = "∟", sNe = "⊾", aNe = "⦝", lNe = "∢", uNe = "Å", cNe = "⍼", hNe = "Ą", fNe = "ą", dNe = "𝔸", pNe = "𝕒", gNe = "⩯", vNe = "≈", mNe = "⩰", yNe = "≊", bNe = "≋", ONe = "'", wNe = "⁡", xNe = "≈", SNe = "≊", _Ne = "Å", CNe = "å", ANe = "𝒜", TNe = "𝒶", PNe = "≔", ENe = "*", kNe = "≈", MNe = "≍", DNe = "Ã", LNe = "ã", INe = "Ä", RNe = "ä", $Ne = "∳", NNe = "⨑", BNe = "≌", VNe = "϶", zNe = "‵", FNe = "∽", QNe = "⋍", ZNe = "∖", WNe = "⫧", GNe = "⊽", jNe = "⌅", HNe = "⌆", qNe = "⌅", YNe = "⎵", XNe = "⎶", UNe = "≌", KNe = "Б", JNe = "б", e3e = "„", t3e = "∵", n3e = "∵", r3e = "∵", i3e = "⦰", o3e = "϶", s3e = "ℬ", a3e = "ℬ", l3e = "Β", u3e = "β", c3e = "ℶ", h3e = "≬", f3e = "𝔅", d3e = "𝔟", p3e = "⋂", g3e = "◯", v3e = "⋃", m3e = "⨀", y3e = "⨁", b3e = "⨂", O3e = "⨆", w3e = "★", x3e = "▽", S3e = "△", _3e = "⨄", C3e = "⋁", A3e = "⋀", T3e = "⤍", P3e = "⧫", E3e = "▪", k3e = "▴", M3e = "▾", D3e = "◂", L3e = "▸", I3e = "␣", R3e = "▒", $3e = "░", N3e = "▓", B3e = "█", V3e = "=⃥", z3e = "≡⃥", F3e = "⫭", Q3e = "⌐", Z3e = "𝔹", W3e = "𝕓", G3e = "⊥", j3e = "⊥", H3e = "⋈", q3e = "⧉", Y3e = "┐", X3e = "╕", U3e = "╖", K3e = "╗", J3e = "┌", e5e = "╒", t5e = "╓", n5e = "╔", r5e = "─", i5e = "═", o5e = "┬", s5e = "╤", a5e = "╥", l5e = "╦", u5e = "┴", c5e = "╧", h5e = "╨", f5e = "╩", d5e = "⊟", p5e = "⊞", g5e = "⊠", v5e = "┘", m5e = "╛", y5e = "╜", b5e = "╝", O5e = "└", w5e = "╘", x5e = "╙", S5e = "╚", _5e = "│", C5e = "║", A5e = "┼", T5e = "╪", P5e = "╫", E5e = "╬", k5e = "┤", M5e = "╡", D5e = "╢", L5e = "╣", I5e = "├", R5e = "╞", $5e = "╟", N5e = "╠", B5e = "‵", V5e = "˘", z5e = "˘", F5e = "¦", Q5e = "𝒷", Z5e = "ℬ", W5e = "⁏", G5e = "∽", j5e = "⋍", H5e = "⧅", q5e = "\\", Y5e = "⟈", X5e = "•", U5e = "•", K5e = "≎", J5e = "⪮", eBe = "≏", tBe = "≎", nBe = "≏", rBe = "Ć", iBe = "ć", oBe = "⩄", sBe = "⩉", aBe = "⩋", lBe = "∩", uBe = "⋒", cBe = "⩇", hBe = "⩀", fBe = "ⅅ", dBe = "∩︀", pBe = "⁁", gBe = "ˇ", vBe = "ℭ", mBe = "⩍", yBe = "Č", bBe = "č", OBe = "Ç", wBe = "ç", xBe = "Ĉ", SBe = "ĉ", _Be = "∰", CBe = "⩌", ABe = "⩐", TBe = "Ċ", PBe = "ċ", EBe = "¸", kBe = "¸", MBe = "⦲", DBe = "¢", LBe = "·", IBe = "·", RBe = "𝔠", $Be = "ℭ", NBe = "Ч", BBe = "ч", VBe = "✓", zBe = "✓", FBe = "Χ", QBe = "χ", ZBe = "ˆ", WBe = "≗", GBe = "↺", jBe = "↻", HBe = "⊛", qBe = "⊚", YBe = "⊝", XBe = "⊙", UBe = "®", KBe = "Ⓢ", JBe = "⊖", eVe = "⊕", tVe = "⊗", nVe = "○", rVe = "⧃", iVe = "≗", oVe = "⨐", sVe = "⫯", aVe = "⧂", lVe = "∲", uVe = "”", cVe = "’", hVe = "♣", fVe = "♣", dVe = ":", pVe = "∷", gVe = "⩴", vVe = "≔", mVe = "≔", yVe = ",", bVe = "@", OVe = "∁", wVe = "∘", xVe = "∁", SVe = "ℂ", _Ve = "≅", CVe = "⩭", AVe = "≡", TVe = "∮", PVe = "∯", EVe = "∮", kVe = "𝕔", MVe = "ℂ", DVe = "∐", LVe = "∐", IVe = "©", RVe = "©", $Ve = "℗", NVe = "∳", BVe = "↵", VVe = "✗", zVe = "⨯", FVe = "𝒞", QVe = "𝒸", ZVe = "⫏", WVe = "⫑", GVe = "⫐", jVe = "⫒", HVe = "⋯", qVe = "⤸", YVe = "⤵", XVe = "⋞", UVe = "⋟", KVe = "↶", JVe = "⤽", e4e = "⩈", t4e = "⩆", n4e = "≍", r4e = "∪", i4e = "⋓", o4e = "⩊", s4e = "⊍", a4e = "⩅", l4e = "∪︀", u4e = "↷", c4e = "⤼", h4e = "⋞", f4e = "⋟", d4e = "⋎", p4e = "⋏", g4e = "¤", v4e = "↶", m4e = "↷", y4e = "⋎", b4e = "⋏", O4e = "∲", w4e = "∱", x4e = "⌭", S4e = "†", _4e = "‡", C4e = "ℸ", A4e = "↓", T4e = "↡", P4e = "⇓", E4e = "‐", k4e = "⫤", M4e = "⊣", D4e = "⤏", L4e = "˝", I4e = "Ď", R4e = "ď", $4e = "Д", N4e = "д", B4e = "‡", V4e = "⇊", z4e = "ⅅ", F4e = "ⅆ", Q4e = "⤑", Z4e = "⩷", W4e = "°", G4e = "∇", j4e = "Δ", H4e = "δ", q4e = "⦱", Y4e = "⥿", X4e = "𝔇", U4e = "𝔡", K4e = "⥥", J4e = "⇃", eze = "⇂", tze = "´", nze = "˙", rze = "˝", ize = "`", oze = "˜", sze = "⋄", aze = "⋄", lze = "⋄", uze = "♦", cze = "♦", hze = "¨", fze = "ⅆ", dze = "ϝ", pze = "⋲", gze = "÷", vze = "÷", mze = "⋇", yze = "⋇", bze = "Ђ", Oze = "ђ", wze = "⌞", xze = "⌍", Sze = "$", _ze = "𝔻", Cze = "𝕕", Aze = "¨", Tze = "˙", Pze = "⃜", Eze = "≐", kze = "≑", Mze = "≐", Dze = "∸", Lze = "∔", Ize = "⊡", Rze = "⌆", $ze = "∯", Nze = "¨", Bze = "⇓", Vze = "⇐", zze = "⇔", Fze = "⫤", Qze = "⟸", Zze = "⟺", Wze = "⟹", Gze = "⇒", jze = "⊨", Hze = "⇑", qze = "⇕", Yze = "∥", Xze = "⤓", Uze = "↓", Kze = "↓", Jze = "⇓", eFe = "⇵", tFe = "̑", nFe = "⇊", rFe = "⇃", iFe = "⇂", oFe = "⥐", sFe = "⥞", aFe = "⥖", lFe = "↽", uFe = "⥟", cFe = "⥗", hFe = "⇁", fFe = "↧", dFe = "⊤", pFe = "⤐", gFe = "⌟", vFe = "⌌", mFe = "𝒟", yFe = "𝒹", bFe = "Ѕ", OFe = "ѕ", wFe = "⧶", xFe = "Đ", SFe = "đ", _Fe = "⋱", CFe = "▿", AFe = "▾", TFe = "⇵", PFe = "⥯", EFe = "⦦", kFe = "Џ", MFe = "џ", DFe = "⟿", LFe = "É", IFe = "é", RFe = "⩮", $Fe = "Ě", NFe = "ě", BFe = "Ê", VFe = "ê", zFe = "≖", FFe = "≕", QFe = "Э", ZFe = "э", WFe = "⩷", GFe = "Ė", jFe = "ė", HFe = "≑", qFe = "ⅇ", YFe = "≒", XFe = "𝔈", UFe = "𝔢", KFe = "⪚", JFe = "È", e6e = "è", t6e = "⪖", n6e = "⪘", r6e = "⪙", i6e = "∈", o6e = "⏧", s6e = "ℓ", a6e = "⪕", l6e = "⪗", u6e = "Ē", c6e = "ē", h6e = "∅", f6e = "∅", d6e = "◻", p6e = "∅", g6e = "▫", v6e = " ", m6e = " ", y6e = " ", b6e = "Ŋ", O6e = "ŋ", w6e = " ", x6e = "Ę", S6e = "ę", _6e = "𝔼", C6e = "𝕖", A6e = "⋕", T6e = "⧣", P6e = "⩱", E6e = "ε", k6e = "Ε", M6e = "ε", D6e = "ϵ", L6e = "≖", I6e = "≕", R6e = "≂", $6e = "⪖", N6e = "⪕", B6e = "⩵", V6e = "=", z6e = "≂", F6e = "≟", Q6e = "⇌", Z6e = "≡", W6e = "⩸", G6e = "⧥", j6e = "⥱", H6e = "≓", q6e = "ℯ", Y6e = "ℰ", X6e = "≐", U6e = "⩳", K6e = "≂", J6e = "Η", e8e = "η", t8e = "Ð", n8e = "ð", r8e = "Ë", i8e = "ë", o8e = "€", s8e = "!", a8e = "∃", l8e = "∃", u8e = "ℰ", c8e = "ⅇ", h8e = "ⅇ", f8e = "≒", d8e = "Ф", p8e = "ф", g8e = "♀", v8e = "ﬃ", m8e = "ﬀ", y8e = "ﬄ", b8e = "𝔉", O8e = "𝔣", w8e = "ﬁ", x8e = "◼", S8e = "▪", _8e = "fj", C8e = "♭", A8e = "ﬂ", T8e = "▱", P8e = "ƒ", E8e = "𝔽", k8e = "𝕗", M8e = "∀", D8e = "∀", L8e = "⋔", I8e = "⫙", R8e = "ℱ", $8e = "⨍", N8e = "½", B8e = "⅓", V8e = "¼", z8e = "⅕", F8e = "⅙", Q8e = "⅛", Z8e = "⅔", W8e = "⅖", G8e = "¾", j8e = "⅗", H8e = "⅜", q8e = "⅘", Y8e = "⅚", X8e = "⅝", U8e = "⅞", K8e = "⁄", J8e = "⌢", eQe = "𝒻", tQe = "ℱ", nQe = "ǵ", rQe = "Γ", iQe = "γ", oQe = "Ϝ", sQe = "ϝ", aQe = "⪆", lQe = "Ğ", uQe = "ğ", cQe = "Ģ", hQe = "Ĝ", fQe = "ĝ", dQe = "Г", pQe = "г", gQe = "Ġ", vQe = "ġ", mQe = "≥", yQe = "≧", bQe = "⪌", OQe = "⋛", wQe = "≥", xQe = "≧", SQe = "⩾", _Qe = "⪩", CQe = "⩾", AQe = "⪀", TQe = "⪂", PQe = "⪄", EQe = "⋛︀", kQe = "⪔", MQe = "𝔊", DQe = "𝔤", LQe = "≫", IQe = "⋙", RQe = "⋙", $Qe = "ℷ", NQe = "Ѓ", BQe = "ѓ", VQe = "⪥", zQe = "≷", FQe = "⪒", QQe = "⪤", ZQe = "⪊", WQe = "⪊", GQe = "⪈", jQe = "≩", HQe = "⪈", qQe = "≩", YQe = "⋧", XQe = "𝔾", UQe = "𝕘", KQe = "`", JQe = "≥", eZe = "⋛", tZe = "≧", nZe = "⪢", rZe = "≷", iZe = "⩾", oZe = "≳", sZe = "𝒢", aZe = "ℊ", lZe = "≳", uZe = "⪎", cZe = "⪐", hZe = "⪧", fZe = "⩺", dZe = ">", pZe = ">", gZe = "≫", vZe = "⋗", mZe = "⦕", yZe = "⩼", bZe = "⪆", OZe = "⥸", wZe = "⋗", xZe = "⋛", SZe = "⪌", _Ze = "≷", CZe = "≳", AZe = "≩︀", TZe = "≩︀", PZe = "ˇ", EZe = " ", kZe = "½", MZe = "ℋ", DZe = "Ъ", LZe = "ъ", IZe = "⥈", RZe = "↔", $Ze = "⇔", NZe = "↭", BZe = "^", VZe = "ℏ", zZe = "Ĥ", FZe = "ĥ", QZe = "♥", ZZe = "♥", WZe = "…", GZe = "⊹", jZe = "𝔥", HZe = "ℌ", qZe = "ℋ", YZe = "⤥", XZe = "⤦", UZe = "⇿", KZe = "∻", JZe = "↩", eWe = "↪", tWe = "𝕙", nWe = "ℍ", rWe = "―", iWe = "─", oWe = "𝒽", sWe = "ℋ", aWe = "ℏ", lWe = "Ħ", uWe = "ħ", cWe = "≎", hWe = "≏", fWe = "⁃", dWe = "‐", pWe = "Í", gWe = "í", vWe = "⁣", mWe = "Î", yWe = "î", bWe = "И", OWe = "и", wWe = "İ", xWe = "Е", SWe = "е", _We = "¡", CWe = "⇔", AWe = "𝔦", TWe = "ℑ", PWe = "Ì", EWe = "ì", kWe = "ⅈ", MWe = "⨌", DWe = "∭", LWe = "⧜", IWe = "℩", RWe = "Ĳ", $We = "ĳ", NWe = "Ī", BWe = "ī", VWe = "ℑ", zWe = "ⅈ", FWe = "ℐ", QWe = "ℑ", ZWe = "ı", WWe = "ℑ", GWe = "⊷", jWe = "Ƶ", HWe = "⇒", qWe = "℅", YWe = "∞", XWe = "⧝", UWe = "ı", KWe = "⊺", JWe = "∫", eGe = "∬", tGe = "ℤ", nGe = "∫", rGe = "⊺", iGe = "⋂", oGe = "⨗", sGe = "⨼", aGe = "⁣", lGe = "⁢", uGe = "Ё", cGe = "ё", hGe = "Į", fGe = "į", dGe = "𝕀", pGe = "𝕚", gGe = "Ι", vGe = "ι", mGe = "⨼", yGe = "¿", bGe = "𝒾", OGe = "ℐ", wGe = "∈", xGe = "⋵", SGe = "⋹", _Ge = "⋴", CGe = "⋳", AGe = "∈", TGe = "⁢", PGe = "Ĩ", EGe = "ĩ", kGe = "І", MGe = "і", DGe = "Ï", LGe = "ï", IGe = "Ĵ", RGe = "ĵ", $Ge = "Й", NGe = "й", BGe = "𝔍", VGe = "𝔧", zGe = "ȷ", FGe = "𝕁", QGe = "𝕛", ZGe = "𝒥", WGe = "𝒿", GGe = "Ј", jGe = "ј", HGe = "Є", qGe = "є", YGe = "Κ", XGe = "κ", UGe = "ϰ", KGe = "Ķ", JGe = "ķ", eje = "К", tje = "к", nje = "𝔎", rje = "𝔨", ije = "ĸ", oje = "Х", sje = "х", aje = "Ќ", lje = "ќ", uje = "𝕂", cje = "𝕜", hje = "𝒦", fje = "𝓀", dje = "⇚", pje = "Ĺ", gje = "ĺ", vje = "⦴", mje = "ℒ", yje = "Λ", bje = "λ", Oje = "⟨", wje = "⟪", xje = "⦑", Sje = "⟨", _je = "⪅", Cje = "ℒ", Aje = "«", Tje = "⇤", Pje = "⤟", Eje = "←", kje = "↞", Mje = "⇐", Dje = "⤝", Lje = "↩", Ije = "↫", Rje = "⤹", $je = "⥳", Nje = "↢", Bje = "⤙", Vje = "⤛", zje = "⪫", Fje = "⪭", Qje = "⪭︀", Zje = "⤌", Wje = "⤎", Gje = "❲", jje = "{", Hje = "[", qje = "⦋", Yje = "⦏", Xje = "⦍", Uje = "Ľ", Kje = "ľ", Jje = "Ļ", e7e = "ļ", t7e = "⌈", n7e = "{", r7e = "Л", i7e = "л", o7e = "⤶", s7e = "“", a7e = "„", l7e = "⥧", u7e = "⥋", c7e = "↲", h7e = "≤", f7e = "≦", d7e = "⟨", p7e = "⇤", g7e = "←", v7e = "←", m7e = "⇐", y7e = "⇆", b7e = "↢", O7e = "⌈", w7e = "⟦", x7e = "⥡", S7e = "⥙", _7e = "⇃", C7e = "⌊", A7e = "↽", T7e = "↼", P7e = "⇇", E7e = "↔", k7e = "↔", M7e = "⇔", D7e = "⇆", L7e = "⇋", I7e = "↭", R7e = "⥎", $7e = "↤", N7e = "⊣", B7e = "⥚", V7e = "⋋", z7e = "⧏", F7e = "⊲", Q7e = "⊴", Z7e = "⥑", W7e = "⥠", G7e = "⥘", j7e = "↿", H7e = "⥒", q7e = "↼", Y7e = "⪋", X7e = "⋚", U7e = "≤", K7e = "≦", J7e = "⩽", eHe = "⪨", tHe = "⩽", nHe = "⩿", rHe = "⪁", iHe = "⪃", oHe = "⋚︀", sHe = "⪓", aHe = "⪅", lHe = "⋖", uHe = "⋚", cHe = "⪋", hHe = "⋚", fHe = "≦", dHe = "≶", pHe = "≶", gHe = "⪡", vHe = "≲", mHe = "⩽", yHe = "≲", bHe = "⥼", OHe = "⌊", wHe = "𝔏", xHe = "𝔩", SHe = "≶", _He = "⪑", CHe = "⥢", AHe = "↽", THe = "↼", PHe = "⥪", EHe = "▄", kHe = "Љ", MHe = "љ", DHe = "⇇", LHe = "≪", IHe = "⋘", RHe = "⌞", $He = "⇚", NHe = "⥫", BHe = "◺", VHe = "Ŀ", zHe = "ŀ", FHe = "⎰", QHe = "⎰", ZHe = "⪉", WHe = "⪉", GHe = "⪇", jHe = "≨", HHe = "⪇", qHe = "≨", YHe = "⋦", XHe = "⟬", UHe = "⇽", KHe = "⟦", JHe = "⟵", eqe = "⟵", tqe = "⟸", nqe = "⟷", rqe = "⟷", iqe = "⟺", oqe = "⟼", sqe = "⟶", aqe = "⟶", lqe = "⟹", uqe = "↫", cqe = "↬", hqe = "⦅", fqe = "𝕃", dqe = "𝕝", pqe = "⨭", gqe = "⨴", vqe = "∗", mqe = "_", yqe = "↙", bqe = "↘", Oqe = "◊", wqe = "◊", xqe = "⧫", Sqe = "(", _qe = "⦓", Cqe = "⇆", Aqe = "⌟", Tqe = "⇋", Pqe = "⥭", Eqe = "‎", kqe = "⊿", Mqe = "‹", Dqe = "𝓁", Lqe = "ℒ", Iqe = "↰", Rqe = "↰", $qe = "≲", Nqe = "⪍", Bqe = "⪏", Vqe = "[", zqe = "‘", Fqe = "‚", Qqe = "Ł", Zqe = "ł", Wqe = "⪦", Gqe = "⩹", jqe = "<", Hqe = "<", qqe = "≪", Yqe = "⋖", Xqe = "⋋", Uqe = "⋉", Kqe = "⥶", Jqe = "⩻", e9e = "◃", t9e = "⊴", n9e = "◂", r9e = "⦖", i9e = "⥊", o9e = "⥦", s9e = "≨︀", a9e = "≨︀", l9e = "¯", u9e = "♂", c9e = "✠", h9e = "✠", f9e = "↦", d9e = "↦", p9e = "↧", g9e = "↤", v9e = "↥", m9e = "▮", y9e = "⨩", b9e = "М", O9e = "м", w9e = "—", x9e = "∺", S9e = "∡", _9e = " ", C9e = "ℳ", A9e = "𝔐", T9e = "𝔪", P9e = "℧", E9e = "µ", k9e = "*", M9e = "⫰", D9e = "∣", L9e = "·", I9e = "⊟", R9e = "−", $9e = "∸", N9e = "⨪", B9e = "∓", V9e = "⫛", z9e = "…", F9e = "∓", Q9e = "⊧", Z9e = "𝕄", W9e = "𝕞", G9e = "∓", j9e = "𝓂", H9e = "ℳ", q9e = "∾", Y9e = "Μ", X9e = "μ", U9e = "⊸", K9e = "⊸", J9e = "∇", eYe = "Ń", tYe = "ń", nYe = "∠⃒", rYe = "≉", iYe = "⩰̸", oYe = "≋̸", sYe = "ŉ", aYe = "≉", lYe = "♮", uYe = "ℕ", cYe = "♮", hYe = " ", fYe = "≎̸", dYe = "≏̸", pYe = "⩃", gYe = "Ň", vYe = "ň", mYe = "Ņ", yYe = "ņ", bYe = "≇", OYe = "⩭̸", wYe = "⩂", xYe = "Н", SYe = "н", _Ye = "–", CYe = "⤤", AYe = "↗", TYe = "⇗", PYe = "↗", EYe = "≠", kYe = "≐̸", MYe = "​", DYe = "​", LYe = "​", IYe = "​", RYe = "≢", $Ye = "⤨", NYe = "≂̸", BYe = "≫", VYe = "≪", zYe = `
`, FYe = "∄", QYe = "∄", ZYe = "𝔑", WYe = "𝔫", GYe = "≧̸", jYe = "≱", HYe = "≱", qYe = "≧̸", YYe = "⩾̸", XYe = "⩾̸", UYe = "⋙̸", KYe = "≵", JYe = "≫⃒", eXe = "≯", tXe = "≯", nXe = "≫̸", rXe = "↮", iXe = "⇎", oXe = "⫲", sXe = "∋", aXe = "⋼", lXe = "⋺", uXe = "∋", cXe = "Њ", hXe = "њ", fXe = "↚", dXe = "⇍", pXe = "‥", gXe = "≦̸", vXe = "≰", mXe = "↚", yXe = "⇍", bXe = "↮", OXe = "⇎", wXe = "≰", xXe = "≦̸", SXe = "⩽̸", _Xe = "⩽̸", CXe = "≮", AXe = "⋘̸", TXe = "≴", PXe = "≪⃒", EXe = "≮", kXe = "⋪", MXe = "⋬", DXe = "≪̸", LXe = "∤", IXe = "⁠", RXe = " ", $Xe = "𝕟", NXe = "ℕ", BXe = "⫬", VXe = "¬", zXe = "≢", FXe = "≭", QXe = "∦", ZXe = "∉", WXe = "≠", GXe = "≂̸", jXe = "∄", HXe = "≯", qXe = "≱", YXe = "≧̸", XXe = "≫̸", UXe = "≹", KXe = "⩾̸", JXe = "≵", eUe = "≎̸", tUe = "≏̸", nUe = "∉", rUe = "⋵̸", iUe = "⋹̸", oUe = "∉", sUe = "⋷", aUe = "⋶", lUe = "⧏̸", uUe = "⋪", cUe = "⋬", hUe = "≮", fUe = "≰", dUe = "≸", pUe = "≪̸", gUe = "⩽̸", vUe = "≴", mUe = "⪢̸", yUe = "⪡̸", bUe = "∌", OUe = "∌", wUe = "⋾", xUe = "⋽", SUe = "⊀", _Ue = "⪯̸", CUe = "⋠", AUe = "∌", TUe = "⧐̸", PUe = "⋫", EUe = "⋭", kUe = "⊏̸", MUe = "⋢", DUe = "⊐̸", LUe = "⋣", IUe = "⊂⃒", RUe = "⊈", $Ue = "⊁", NUe = "⪰̸", BUe = "⋡", VUe = "≿̸", zUe = "⊃⃒", FUe = "⊉", QUe = "≁", ZUe = "≄", WUe = "≇", GUe = "≉", jUe = "∤", HUe = "∦", qUe = "∦", YUe = "⫽⃥", XUe = "∂̸", UUe = "⨔", KUe = "⊀", JUe = "⋠", eKe = "⊀", tKe = "⪯̸", nKe = "⪯̸", rKe = "⤳̸", iKe = "↛", oKe = "⇏", sKe = "↝̸", aKe = "↛", lKe = "⇏", uKe = "⋫", cKe = "⋭", hKe = "⊁", fKe = "⋡", dKe = "⪰̸", pKe = "𝒩", gKe = "𝓃", vKe = "∤", mKe = "∦", yKe = "≁", bKe = "≄", OKe = "≄", wKe = "∤", xKe = "∦", SKe = "⋢", _Ke = "⋣", CKe = "⊄", AKe = "⫅̸", TKe = "⊈", PKe = "⊂⃒", EKe = "⊈", kKe = "⫅̸", MKe = "⊁", DKe = "⪰̸", LKe = "⊅", IKe = "⫆̸", RKe = "⊉", $Ke = "⊃⃒", NKe = "⊉", BKe = "⫆̸", VKe = "≹", zKe = "Ñ", FKe = "ñ", QKe = "≸", ZKe = "⋪", WKe = "⋬", GKe = "⋫", jKe = "⋭", HKe = "Ν", qKe = "ν", YKe = "#", XKe = "№", UKe = " ", KKe = "≍⃒", JKe = "⊬", eJe = "⊭", tJe = "⊮", nJe = "⊯", rJe = "≥⃒", iJe = ">⃒", oJe = "⤄", sJe = "⧞", aJe = "⤂", lJe = "≤⃒", uJe = "<⃒", cJe = "⊴⃒", hJe = "⤃", fJe = "⊵⃒", dJe = "∼⃒", pJe = "⤣", gJe = "↖", vJe = "⇖", mJe = "↖", yJe = "⤧", bJe = "Ó", OJe = "ó", wJe = "⊛", xJe = "Ô", SJe = "ô", _Je = "⊚", CJe = "О", AJe = "о", TJe = "⊝", PJe = "Ő", EJe = "ő", kJe = "⨸", MJe = "⊙", DJe = "⦼", LJe = "Œ", IJe = "œ", RJe = "⦿", $Je = "𝔒", NJe = "𝔬", BJe = "˛", VJe = "Ò", zJe = "ò", FJe = "⧁", QJe = "⦵", ZJe = "Ω", WJe = "∮", GJe = "↺", jJe = "⦾", HJe = "⦻", qJe = "‾", YJe = "⧀", XJe = "Ō", UJe = "ō", KJe = "Ω", JJe = "ω", eet = "Ο", tet = "ο", net = "⦶", ret = "⊖", iet = "𝕆", oet = "𝕠", set = "⦷", aet = "“", uet = "‘", cet = "⦹", het = "⊕", fet = "↻", det = "⩔", pet = "∨", get = "⩝", vet = "ℴ", met = "ℴ", yet = "ª", bet = "º", Oet = "⊶", wet = "⩖", xet = "⩗", _et = "⩛", Cet = "Ⓢ", Aet = "𝒪", Tet = "ℴ", Pet = "Ø", Eet = "ø", ket = "⊘", Met = "Õ", Det = "õ", Let = "⨶", Iet = "⨷", Ret = "⊗", $et = "Ö", Net = "ö", Bet = "⌽", Vet = "‾", zet = "⏞", Fet = "⎴", Qet = "⏜", Zet = "¶", Wet = "∥", Get = "∥", jet = "⫳", Het = "⫽", qet = "∂", Yet = "∂", Xet = "П", Uet = "п", Ket = "%", Jet = ".", ett = "‰", ttt = "⊥", ntt = "‱", rtt = "𝔓", itt = "𝔭", ott = "Φ", stt = "φ", att = "ϕ", ltt = "ℳ", utt = "☎", ctt = "Π", htt = "π", ftt = "⋔", dtt = "ϖ", ptt = "ℏ", gtt = "ℎ", vtt = "ℏ", mtt = "⨣", ytt = "⊞", btt = "⨢", Ott = "+", wtt = "∔", xtt = "⨥", Stt = "⩲", _tt = "±", Ctt = "±", Att = "⨦", Ttt = "⨧", Ptt = "±", Ett = "ℌ", ktt = "⨕", Mtt = "𝕡", Dtt = "ℙ", Ltt = "£", Itt = "⪷", Rtt = "⪻", $tt = "≺", Ntt = "≼", Btt = "⪷", Vtt = "≺", ztt = "≼", Ftt = "≺", Qtt = "⪯", Ztt = "≼", Wtt = "≾", Gtt = "⪯", jtt = "⪹", Htt = "⪵", qtt = "⋨", Ytt = "⪯", Xtt = "⪳", Utt = "≾", Ktt = "′", Jtt = "″", ent = "ℙ", tnt = "⪹", nnt = "⪵", rnt = "⋨", int = "∏", ont = "∏", snt = "⌮", ant = "⌒", lnt = "⌓", unt = "∝", cnt = "∝", hnt = "∷", fnt = "∝", dnt = "≾", pnt = "⊰", gnt = "𝒫", vnt = "𝓅", mnt = "Ψ", ynt = "ψ", bnt = " ", Ont = "𝔔", wnt = "𝔮", xnt = "⨌", Snt = "𝕢", _nt = "ℚ", Cnt = "⁗", Ant = "𝒬", Tnt = "𝓆", Pnt = "ℍ", Ent = "⨖", knt = "?", Mnt = "≟", Dnt = '"', Lnt = '"', Int = "⇛", Rnt = "∽̱", $nt = "Ŕ", Nnt = "ŕ", Bnt = "√", Vnt = "⦳", znt = "⟩", Fnt = "⟫", Qnt = "⦒", Znt = "⦥", Wnt = "⟩", Gnt = "»", jnt = "⥵", Hnt = "⇥", qnt = "⤠", Ynt = "⤳", Xnt = "→", Unt = "↠", Knt = "⇒", Jnt = "⤞", ert = "↪", trt = "↬", nrt = "⥅", rrt = "⥴", irt = "⤖", ort = "↣", srt = "↝", art = "⤚", lrt = "⤜", urt = "∶", crt = "ℚ", hrt = "⤍", frt = "⤏", drt = "⤐", prt = "❳", grt = "}", vrt = "]", mrt = "⦌", yrt = "⦎", brt = "⦐", Ort = "Ř", wrt = "ř", xrt = "Ŗ", Srt = "ŗ", _rt = "⌉", Crt = "}", Art = "Р", Trt = "р", Prt = "⤷", Ert = "⥩", krt = "”", Mrt = "”", Drt = "↳", Lrt = "ℜ", Irt = "ℛ", Rrt = "ℜ", $rt = "ℝ", Nrt = "ℜ", Brt = "▭", Vrt = "®", zrt = "®", Frt = "∋", Qrt = "⇋", Zrt = "⥯", Wrt = "⥽", Grt = "⌋", jrt = "𝔯", Hrt = "ℜ", qrt = "⥤", Yrt = "⇁", Xrt = "⇀", Urt = "⥬", Krt = "Ρ", Jrt = "ρ", eit = "ϱ", tit = "⟩", nit = "⇥", rit = "→", iit = "→", oit = "⇒", sit = "⇄", ait = "↣", lit = "⌉", uit = "⟧", cit = "⥝", hit = "⥕", fit = "⇂", dit = "⌋", pit = "⇁", git = "⇀", vit = "⇄", mit = "⇌", yit = "⇉", bit = "↝", Oit = "↦", wit = "⊢", xit = "⥛", Sit = "⋌", _it = "⧐", Cit = "⊳", Ait = "⊵", Tit = "⥏", Pit = "⥜", Eit = "⥔", kit = "↾", Mit = "⥓", Dit = "⇀", Lit = "˚", Iit = "≓", Rit = "⇄", $it = "⇌", Nit = "‏", Bit = "⎱", Vit = "⎱", zit = "⫮", Fit = "⟭", Qit = "⇾", Zit = "⟧", Wit = "⦆", Git = "𝕣", jit = "ℝ", Hit = "⨮", qit = "⨵", Yit = "⥰", Xit = ")", Uit = "⦔", Kit = "⨒", Jit = "⇉", eot = "⇛", tot = "›", not = "𝓇", rot = "ℛ", iot = "↱", oot = "↱", sot = "]", aot = "’", lot = "’", uot = "⋌", cot = "⋊", hot = "▹", fot = "⊵", dot = "▸", pot = "⧎", got = "⧴", vot = "⥨", mot = "℞", yot = "Ś", bot = "ś", Oot = "‚", wot = "⪸", xot = "Š", Sot = "š", _ot = "⪼", Cot = "≻", Aot = "≽", Tot = "⪰", Pot = "⪴", Eot = "Ş", kot = "ş", Mot = "Ŝ", Dot = "ŝ", Lot = "⪺", Iot = "⪶", Rot = "⋩", $ot = "⨓", Not = "≿", Bot = "С", Vot = "с", zot = "⊡", Fot = "⋅", Qot = "⩦", Zot = "⤥", Wot = "↘", Got = "⇘", jot = "↘", Hot = "§", qot = ";", Yot = "⤩", Xot = "∖", Uot = "∖", Kot = "✶", Jot = "𝔖", est = "𝔰", tst = "⌢", nst = "♯", rst = "Щ", ist = "щ", ost = "Ш", sst = "ш", ast = "↓", lst = "←", ust = "∣", cst = "∥", hst = "→", fst = "↑", dst = "­", pst = "Σ", gst = "σ", vst = "ς", mst = "ς", yst = "∼", bst = "⩪", Ost = "≃", wst = "≃", xst = "⪞", Sst = "⪠", _st = "⪝", Cst = "⪟", Ast = "≆", Tst = "⨤", Pst = "⥲", Est = "←", kst = "∘", Mst = "∖", Dst = "⨳", Lst = "⧤", Ist = "∣", Rst = "⌣", $st = "⪪", Nst = "⪬", Bst = "⪬︀", Vst = "Ь", zst = "ь", Fst = "⌿", Qst = "⧄", Zst = "/", Wst = "𝕊", Gst = "𝕤", jst = "♠", Hst = "♠", qst = "∥", Yst = "⊓", Xst = "⊓︀", Ust = "⊔", Kst = "⊔︀", Jst = "√", eat = "⊏", tat = "⊑", nat = "⊏", rat = "⊑", iat = "⊐", oat = "⊒", sat = "⊐", aat = "⊒", lat = "□", uat = "□", cat = "⊓", hat = "⊏", fat = "⊑", dat = "⊐", pat = "⊒", gat = "⊔", vat = "▪", mat = "□", yat = "▪", bat = "→", Oat = "𝒮", wat = "𝓈", xat = "∖", Sat = "⌣", _at = "⋆", Cat = "⋆", Aat = "☆", Tat = "★", Pat = "ϵ", Eat = "ϕ", kat = "¯", Mat = "⊂", Dat = "⋐", Lat = "⪽", Iat = "⫅", Rat = "⊆", $at = "⫃", Nat = "⫁", Bat = "⫋", Vat = "⊊", zat = "⪿", Fat = "⥹", Qat = "⊂", Zat = "⋐", Wat = "⊆", Gat = "⫅", jat = "⊆", Hat = "⊊", qat = "⫋", Yat = "⫇", Xat = "⫕", Uat = "⫓", Kat = "⪸", Jat = "≻", elt = "≽", tlt = "≻", nlt = "⪰", rlt = "≽", ilt = "≿", olt = "⪰", slt = "⪺", alt = "⪶", llt = "⋩", ult = "≿", clt = "∋", hlt = "∑", flt = "∑", dlt = "♪", plt = "¹", glt = "²", vlt = "³", mlt = "⊃", ylt = "⋑", blt = "⪾", Olt = "⫘", wlt = "⫆", xlt = "⊇", Slt = "⫄", _lt = "⊃", Clt = "⊇", Alt = "⟉", Tlt = "⫗", Plt = "⥻", Elt = "⫂", klt = "⫌", Mlt = "⊋", Dlt = "⫀", Llt = "⊃", Ilt = "⋑", Rlt = "⊇", $lt = "⫆", Nlt = "⊋", Blt = "⫌", Vlt = "⫈", zlt = "⫔", Flt = "⫖", Qlt = "⤦", Zlt = "↙", Wlt = "⇙", Glt = "↙", jlt = "⤪", Hlt = "ß", qlt = "	", Ylt = "⌖", Xlt = "Τ", Ult = "τ", Klt = "⎴", Jlt = "Ť", eut = "ť", tut = "Ţ", nut = "ţ", rut = "Т", iut = "т", out = "⃛", sut = "⌕", aut = "𝔗", lut = "𝔱", uut = "∴", cut = "∴", hut = "∴", fut = "Θ", dut = "θ", put = "ϑ", gut = "ϑ", vut = "≈", mut = "∼", yut = "  ", but = " ", Out = " ", wut = "≈", xut = "∼", Sut = "Þ", _ut = "þ", Cut = "˜", Aut = "∼", Tut = "≃", Put = "≅", Eut = "≈", kut = "⨱", Mut = "⊠", Dut = "×", Lut = "⨰", Iut = "∭", Rut = "⤨", $ut = "⌶", Nut = "⫱", But = "⊤", Vut = "𝕋", zut = "𝕥", Fut = "⫚", Qut = "⤩", Zut = "‴", Wut = "™", Gut = "™", jut = "▵", Hut = "▿", qut = "◃", Yut = "⊴", Xut = "≜", Uut = "▹", Kut = "⊵", Jut = "◬", ect = "≜", tct = "⨺", nct = "⃛", rct = "⨹", ict = "⧍", oct = "⨻", sct = "⏢", act = "𝒯", lct = "𝓉", uct = "Ц", cct = "ц", hct = "Ћ", fct = "ћ", dct = "Ŧ", pct = "ŧ", gct = "≬", vct = "↞", mct = "↠", yct = "Ú", bct = "ú", Oct = "↑", wct = "↟", xct = "⇑", Sct = "⥉", _ct = "Ў", Cct = "ў", Act = "Ŭ", Tct = "ŭ", Pct = "Û", Ect = "û", kct = "У", Mct = "у", Dct = "⇅", Lct = "Ű", Ict = "ű", Rct = "⥮", $ct = "⥾", Nct = "𝔘", Bct = "𝔲", Vct = "Ù", zct = "ù", Fct = "⥣", Qct = "↿", Zct = "↾", Wct = "▀", Gct = "⌜", jct = "⌜", Hct = "⌏", qct = "◸", Yct = "Ū", Xct = "ū", Uct = "¨", Kct = "_", Jct = "⏟", eht = "⎵", tht = "⏝", nht = "⋃", rht = "⊎", iht = "Ų", oht = "ų", sht = "𝕌", aht = "𝕦", lht = "⤒", uht = "↑", cht = "↑", hht = "⇑", fht = "⇅", dht = "↕", pht = "↕", ght = "⇕", vht = "⥮", mht = "↿", yht = "↾", bht = "⊎", Oht = "↖", wht = "↗", xht = "υ", Sht = "ϒ", _ht = "ϒ", Cht = "Υ", Aht = "υ", Tht = "↥", Pht = "⊥", Eht = "⇈", kht = "⌝", Mht = "⌝", Dht = "⌎", Lht = "Ů", Iht = "ů", Rht = "◹", $ht = "𝒰", Nht = "𝓊", Bht = "⋰", Vht = "Ũ", zht = "ũ", Fht = "▵", Qht = "▴", Zht = "⇈", Wht = "Ü", Ght = "ü", jht = "⦧", Hht = "⦜", qht = "ϵ", Yht = "ϰ", Xht = "∅", Uht = "ϕ", Kht = "ϖ", Jht = "∝", eft = "↕", tft = "⇕", nft = "ϱ", rft = "ς", ift = "⊊︀", oft = "⫋︀", sft = "⊋︀", aft = "⫌︀", lft = "ϑ", uft = "⊲", cft = "⊳", hft = "⫨", fft = "⫫", dft = "⫩", pft = "В", gft = "в", vft = "⊢", mft = "⊨", yft = "⊩", bft = "⊫", Oft = "⫦", wft = "⊻", xft = "∨", Sft = "⋁", _ft = "≚", Cft = "⋮", Aft = "|", Tft = "‖", Pft = "|", Eft = "‖", kft = "∣", Mft = "|", Dft = "❘", Lft = "≀", Ift = " ", Rft = "𝔙", $ft = "𝔳", Nft = "⊲", Bft = "⊂⃒", Vft = "⊃⃒", zft = "𝕍", Fft = "𝕧", Qft = "∝", Zft = "⊳", Wft = "𝒱", Gft = "𝓋", jft = "⫋︀", Hft = "⊊︀", qft = "⫌︀", Yft = "⊋︀", Xft = "⊪", Uft = "⦚", Kft = "Ŵ", Jft = "ŵ", edt = "⩟", tdt = "∧", ndt = "⋀", rdt = "≙", idt = "℘", odt = "𝔚", sdt = "𝔴", adt = "𝕎", ldt = "𝕨", udt = "℘", cdt = "≀", hdt = "≀", fdt = "𝒲", ddt = "𝓌", pdt = "⋂", gdt = "◯", vdt = "⋃", mdt = "▽", ydt = "𝔛", bdt = "𝔵", Odt = "⟷", wdt = "⟺", xdt = "Ξ", Sdt = "ξ", _dt = "⟵", Cdt = "⟸", Adt = "⟼", Tdt = "⋻", Pdt = "⨀", Edt = "𝕏", kdt = "𝕩", Mdt = "⨁", Ddt = "⨂", Ldt = "⟶", Idt = "⟹", Rdt = "𝒳", $dt = "𝓍", Ndt = "⨆", Bdt = "⨄", Vdt = "△", zdt = "⋁", Fdt = "⋀", Qdt = "Ý", Zdt = "ý", Wdt = "Я", Gdt = "я", jdt = "Ŷ", Hdt = "ŷ", qdt = "Ы", Ydt = "ы", Xdt = "¥", Udt = "𝔜", Kdt = "𝔶", Jdt = "Ї", ept = "ї", tpt = "𝕐", npt = "𝕪", rpt = "𝒴", ipt = "𝓎", opt = "Ю", spt = "ю", apt = "ÿ", lpt = "Ÿ", upt = "Ź", cpt = "ź", hpt = "Ž", fpt = "ž", dpt = "З", ppt = "з", gpt = "Ż", vpt = "ż", mpt = "ℨ", ypt = "​", bpt = "Ζ", Opt = "ζ", wpt = "𝔷", xpt = "ℨ", Spt = "Ж", _pt = "ж", Cpt = "⇝", Apt = "𝕫", Tpt = "ℤ", Ppt = "𝒵", Ept = "𝓏", kpt = "‍", Mpt = "‌", Dpt = {
  Aacute: d$e,
  aacute: p$e,
  Abreve: g$e,
  abreve: v$e,
  ac: m$e,
  acd: y$e,
  acE: b$e,
  Acirc: O$e,
  acirc: w$e,
  acute: x$e,
  Acy: S$e,
  acy: _$e,
  AElig: C$e,
  aelig: A$e,
  af: T$e,
  Afr: P$e,
  afr: E$e,
  Agrave: k$e,
  agrave: M$e,
  alefsym: D$e,
  aleph: L$e,
  Alpha: I$e,
  alpha: R$e,
  Amacr: $$e,
  amacr: N$e,
  amalg: B$e,
  amp: V$e,
  AMP: z$e,
  andand: F$e,
  And: Q$e,
  and: Z$e,
  andd: W$e,
  andslope: G$e,
  andv: j$e,
  ang: H$e,
  ange: q$e,
  angle: Y$e,
  angmsdaa: X$e,
  angmsdab: U$e,
  angmsdac: K$e,
  angmsdad: J$e,
  angmsdae: eNe,
  angmsdaf: tNe,
  angmsdag: nNe,
  angmsdah: rNe,
  angmsd: iNe,
  angrt: oNe,
  angrtvb: sNe,
  angrtvbd: aNe,
  angsph: lNe,
  angst: uNe,
  angzarr: cNe,
  Aogon: hNe,
  aogon: fNe,
  Aopf: dNe,
  aopf: pNe,
  apacir: gNe,
  ap: vNe,
  apE: mNe,
  ape: yNe,
  apid: bNe,
  apos: ONe,
  ApplyFunction: wNe,
  approx: xNe,
  approxeq: SNe,
  Aring: _Ne,
  aring: CNe,
  Ascr: ANe,
  ascr: TNe,
  Assign: PNe,
  ast: ENe,
  asymp: kNe,
  asympeq: MNe,
  Atilde: DNe,
  atilde: LNe,
  Auml: INe,
  auml: RNe,
  awconint: $Ne,
  awint: NNe,
  backcong: BNe,
  backepsilon: VNe,
  backprime: zNe,
  backsim: FNe,
  backsimeq: QNe,
  Backslash: ZNe,
  Barv: WNe,
  barvee: GNe,
  barwed: jNe,
  Barwed: HNe,
  barwedge: qNe,
  bbrk: YNe,
  bbrktbrk: XNe,
  bcong: UNe,
  Bcy: KNe,
  bcy: JNe,
  bdquo: e3e,
  becaus: t3e,
  because: n3e,
  Because: r3e,
  bemptyv: i3e,
  bepsi: o3e,
  bernou: s3e,
  Bernoullis: a3e,
  Beta: l3e,
  beta: u3e,
  beth: c3e,
  between: h3e,
  Bfr: f3e,
  bfr: d3e,
  bigcap: p3e,
  bigcirc: g3e,
  bigcup: v3e,
  bigodot: m3e,
  bigoplus: y3e,
  bigotimes: b3e,
  bigsqcup: O3e,
  bigstar: w3e,
  bigtriangledown: x3e,
  bigtriangleup: S3e,
  biguplus: _3e,
  bigvee: C3e,
  bigwedge: A3e,
  bkarow: T3e,
  blacklozenge: P3e,
  blacksquare: E3e,
  blacktriangle: k3e,
  blacktriangledown: M3e,
  blacktriangleleft: D3e,
  blacktriangleright: L3e,
  blank: I3e,
  blk12: R3e,
  blk14: $3e,
  blk34: N3e,
  block: B3e,
  bne: V3e,
  bnequiv: z3e,
  bNot: F3e,
  bnot: Q3e,
  Bopf: Z3e,
  bopf: W3e,
  bot: G3e,
  bottom: j3e,
  bowtie: H3e,
  boxbox: q3e,
  boxdl: Y3e,
  boxdL: X3e,
  boxDl: U3e,
  boxDL: K3e,
  boxdr: J3e,
  boxdR: e5e,
  boxDr: t5e,
  boxDR: n5e,
  boxh: r5e,
  boxH: i5e,
  boxhd: o5e,
  boxHd: s5e,
  boxhD: a5e,
  boxHD: l5e,
  boxhu: u5e,
  boxHu: c5e,
  boxhU: h5e,
  boxHU: f5e,
  boxminus: d5e,
  boxplus: p5e,
  boxtimes: g5e,
  boxul: v5e,
  boxuL: m5e,
  boxUl: y5e,
  boxUL: b5e,
  boxur: O5e,
  boxuR: w5e,
  boxUr: x5e,
  boxUR: S5e,
  boxv: _5e,
  boxV: C5e,
  boxvh: A5e,
  boxvH: T5e,
  boxVh: P5e,
  boxVH: E5e,
  boxvl: k5e,
  boxvL: M5e,
  boxVl: D5e,
  boxVL: L5e,
  boxvr: I5e,
  boxvR: R5e,
  boxVr: $5e,
  boxVR: N5e,
  bprime: B5e,
  breve: V5e,
  Breve: z5e,
  brvbar: F5e,
  bscr: Q5e,
  Bscr: Z5e,
  bsemi: W5e,
  bsim: G5e,
  bsime: j5e,
  bsolb: H5e,
  bsol: q5e,
  bsolhsub: Y5e,
  bull: X5e,
  bullet: U5e,
  bump: K5e,
  bumpE: J5e,
  bumpe: eBe,
  Bumpeq: tBe,
  bumpeq: nBe,
  Cacute: rBe,
  cacute: iBe,
  capand: oBe,
  capbrcup: sBe,
  capcap: aBe,
  cap: lBe,
  Cap: uBe,
  capcup: cBe,
  capdot: hBe,
  CapitalDifferentialD: fBe,
  caps: dBe,
  caret: pBe,
  caron: gBe,
  Cayleys: vBe,
  ccaps: mBe,
  Ccaron: yBe,
  ccaron: bBe,
  Ccedil: OBe,
  ccedil: wBe,
  Ccirc: xBe,
  ccirc: SBe,
  Cconint: _Be,
  ccups: CBe,
  ccupssm: ABe,
  Cdot: TBe,
  cdot: PBe,
  cedil: EBe,
  Cedilla: kBe,
  cemptyv: MBe,
  cent: DBe,
  centerdot: LBe,
  CenterDot: IBe,
  cfr: RBe,
  Cfr: $Be,
  CHcy: NBe,
  chcy: BBe,
  check: VBe,
  checkmark: zBe,
  Chi: FBe,
  chi: QBe,
  circ: ZBe,
  circeq: WBe,
  circlearrowleft: GBe,
  circlearrowright: jBe,
  circledast: HBe,
  circledcirc: qBe,
  circleddash: YBe,
  CircleDot: XBe,
  circledR: UBe,
  circledS: KBe,
  CircleMinus: JBe,
  CirclePlus: eVe,
  CircleTimes: tVe,
  cir: nVe,
  cirE: rVe,
  cire: iVe,
  cirfnint: oVe,
  cirmid: sVe,
  cirscir: aVe,
  ClockwiseContourIntegral: lVe,
  CloseCurlyDoubleQuote: uVe,
  CloseCurlyQuote: cVe,
  clubs: hVe,
  clubsuit: fVe,
  colon: dVe,
  Colon: pVe,
  Colone: gVe,
  colone: vVe,
  coloneq: mVe,
  comma: yVe,
  commat: bVe,
  comp: OVe,
  compfn: wVe,
  complement: xVe,
  complexes: SVe,
  cong: _Ve,
  congdot: CVe,
  Congruent: AVe,
  conint: TVe,
  Conint: PVe,
  ContourIntegral: EVe,
  copf: kVe,
  Copf: MVe,
  coprod: DVe,
  Coproduct: LVe,
  copy: IVe,
  COPY: RVe,
  copysr: $Ve,
  CounterClockwiseContourIntegral: NVe,
  crarr: BVe,
  cross: VVe,
  Cross: zVe,
  Cscr: FVe,
  cscr: QVe,
  csub: ZVe,
  csube: WVe,
  csup: GVe,
  csupe: jVe,
  ctdot: HVe,
  cudarrl: qVe,
  cudarrr: YVe,
  cuepr: XVe,
  cuesc: UVe,
  cularr: KVe,
  cularrp: JVe,
  cupbrcap: e4e,
  cupcap: t4e,
  CupCap: n4e,
  cup: r4e,
  Cup: i4e,
  cupcup: o4e,
  cupdot: s4e,
  cupor: a4e,
  cups: l4e,
  curarr: u4e,
  curarrm: c4e,
  curlyeqprec: h4e,
  curlyeqsucc: f4e,
  curlyvee: d4e,
  curlywedge: p4e,
  curren: g4e,
  curvearrowleft: v4e,
  curvearrowright: m4e,
  cuvee: y4e,
  cuwed: b4e,
  cwconint: O4e,
  cwint: w4e,
  cylcty: x4e,
  dagger: S4e,
  Dagger: _4e,
  daleth: C4e,
  darr: A4e,
  Darr: T4e,
  dArr: P4e,
  dash: E4e,
  Dashv: k4e,
  dashv: M4e,
  dbkarow: D4e,
  dblac: L4e,
  Dcaron: I4e,
  dcaron: R4e,
  Dcy: $4e,
  dcy: N4e,
  ddagger: B4e,
  ddarr: V4e,
  DD: z4e,
  dd: F4e,
  DDotrahd: Q4e,
  ddotseq: Z4e,
  deg: W4e,
  Del: G4e,
  Delta: j4e,
  delta: H4e,
  demptyv: q4e,
  dfisht: Y4e,
  Dfr: X4e,
  dfr: U4e,
  dHar: K4e,
  dharl: J4e,
  dharr: eze,
  DiacriticalAcute: tze,
  DiacriticalDot: nze,
  DiacriticalDoubleAcute: rze,
  DiacriticalGrave: ize,
  DiacriticalTilde: oze,
  diam: sze,
  diamond: aze,
  Diamond: lze,
  diamondsuit: uze,
  diams: cze,
  die: hze,
  DifferentialD: fze,
  digamma: dze,
  disin: pze,
  div: gze,
  divide: vze,
  divideontimes: mze,
  divonx: yze,
  DJcy: bze,
  djcy: Oze,
  dlcorn: wze,
  dlcrop: xze,
  dollar: Sze,
  Dopf: _ze,
  dopf: Cze,
  Dot: Aze,
  dot: Tze,
  DotDot: Pze,
  doteq: Eze,
  doteqdot: kze,
  DotEqual: Mze,
  dotminus: Dze,
  dotplus: Lze,
  dotsquare: Ize,
  doublebarwedge: Rze,
  DoubleContourIntegral: $ze,
  DoubleDot: Nze,
  DoubleDownArrow: Bze,
  DoubleLeftArrow: Vze,
  DoubleLeftRightArrow: zze,
  DoubleLeftTee: Fze,
  DoubleLongLeftArrow: Qze,
  DoubleLongLeftRightArrow: Zze,
  DoubleLongRightArrow: Wze,
  DoubleRightArrow: Gze,
  DoubleRightTee: jze,
  DoubleUpArrow: Hze,
  DoubleUpDownArrow: qze,
  DoubleVerticalBar: Yze,
  DownArrowBar: Xze,
  downarrow: Uze,
  DownArrow: Kze,
  Downarrow: Jze,
  DownArrowUpArrow: eFe,
  DownBreve: tFe,
  downdownarrows: nFe,
  downharpoonleft: rFe,
  downharpoonright: iFe,
  DownLeftRightVector: oFe,
  DownLeftTeeVector: sFe,
  DownLeftVectorBar: aFe,
  DownLeftVector: lFe,
  DownRightTeeVector: uFe,
  DownRightVectorBar: cFe,
  DownRightVector: hFe,
  DownTeeArrow: fFe,
  DownTee: dFe,
  drbkarow: pFe,
  drcorn: gFe,
  drcrop: vFe,
  Dscr: mFe,
  dscr: yFe,
  DScy: bFe,
  dscy: OFe,
  dsol: wFe,
  Dstrok: xFe,
  dstrok: SFe,
  dtdot: _Fe,
  dtri: CFe,
  dtrif: AFe,
  duarr: TFe,
  duhar: PFe,
  dwangle: EFe,
  DZcy: kFe,
  dzcy: MFe,
  dzigrarr: DFe,
  Eacute: LFe,
  eacute: IFe,
  easter: RFe,
  Ecaron: $Fe,
  ecaron: NFe,
  Ecirc: BFe,
  ecirc: VFe,
  ecir: zFe,
  ecolon: FFe,
  Ecy: QFe,
  ecy: ZFe,
  eDDot: WFe,
  Edot: GFe,
  edot: jFe,
  eDot: HFe,
  ee: qFe,
  efDot: YFe,
  Efr: XFe,
  efr: UFe,
  eg: KFe,
  Egrave: JFe,
  egrave: e6e,
  egs: t6e,
  egsdot: n6e,
  el: r6e,
  Element: i6e,
  elinters: o6e,
  ell: s6e,
  els: a6e,
  elsdot: l6e,
  Emacr: u6e,
  emacr: c6e,
  empty: h6e,
  emptyset: f6e,
  EmptySmallSquare: d6e,
  emptyv: p6e,
  EmptyVerySmallSquare: g6e,
  emsp13: v6e,
  emsp14: m6e,
  emsp: y6e,
  ENG: b6e,
  eng: O6e,
  ensp: w6e,
  Eogon: x6e,
  eogon: S6e,
  Eopf: _6e,
  eopf: C6e,
  epar: A6e,
  eparsl: T6e,
  eplus: P6e,
  epsi: E6e,
  Epsilon: k6e,
  epsilon: M6e,
  epsiv: D6e,
  eqcirc: L6e,
  eqcolon: I6e,
  eqsim: R6e,
  eqslantgtr: $6e,
  eqslantless: N6e,
  Equal: B6e,
  equals: V6e,
  EqualTilde: z6e,
  equest: F6e,
  Equilibrium: Q6e,
  equiv: Z6e,
  equivDD: W6e,
  eqvparsl: G6e,
  erarr: j6e,
  erDot: H6e,
  escr: q6e,
  Escr: Y6e,
  esdot: X6e,
  Esim: U6e,
  esim: K6e,
  Eta: J6e,
  eta: e8e,
  ETH: t8e,
  eth: n8e,
  Euml: r8e,
  euml: i8e,
  euro: o8e,
  excl: s8e,
  exist: a8e,
  Exists: l8e,
  expectation: u8e,
  exponentiale: c8e,
  ExponentialE: h8e,
  fallingdotseq: f8e,
  Fcy: d8e,
  fcy: p8e,
  female: g8e,
  ffilig: v8e,
  fflig: m8e,
  ffllig: y8e,
  Ffr: b8e,
  ffr: O8e,
  filig: w8e,
  FilledSmallSquare: x8e,
  FilledVerySmallSquare: S8e,
  fjlig: _8e,
  flat: C8e,
  fllig: A8e,
  fltns: T8e,
  fnof: P8e,
  Fopf: E8e,
  fopf: k8e,
  forall: M8e,
  ForAll: D8e,
  fork: L8e,
  forkv: I8e,
  Fouriertrf: R8e,
  fpartint: $8e,
  frac12: N8e,
  frac13: B8e,
  frac14: V8e,
  frac15: z8e,
  frac16: F8e,
  frac18: Q8e,
  frac23: Z8e,
  frac25: W8e,
  frac34: G8e,
  frac35: j8e,
  frac38: H8e,
  frac45: q8e,
  frac56: Y8e,
  frac58: X8e,
  frac78: U8e,
  frasl: K8e,
  frown: J8e,
  fscr: eQe,
  Fscr: tQe,
  gacute: nQe,
  Gamma: rQe,
  gamma: iQe,
  Gammad: oQe,
  gammad: sQe,
  gap: aQe,
  Gbreve: lQe,
  gbreve: uQe,
  Gcedil: cQe,
  Gcirc: hQe,
  gcirc: fQe,
  Gcy: dQe,
  gcy: pQe,
  Gdot: gQe,
  gdot: vQe,
  ge: mQe,
  gE: yQe,
  gEl: bQe,
  gel: OQe,
  geq: wQe,
  geqq: xQe,
  geqslant: SQe,
  gescc: _Qe,
  ges: CQe,
  gesdot: AQe,
  gesdoto: TQe,
  gesdotol: PQe,
  gesl: EQe,
  gesles: kQe,
  Gfr: MQe,
  gfr: DQe,
  gg: LQe,
  Gg: IQe,
  ggg: RQe,
  gimel: $Qe,
  GJcy: NQe,
  gjcy: BQe,
  gla: VQe,
  gl: zQe,
  glE: FQe,
  glj: QQe,
  gnap: ZQe,
  gnapprox: WQe,
  gne: GQe,
  gnE: jQe,
  gneq: HQe,
  gneqq: qQe,
  gnsim: YQe,
  Gopf: XQe,
  gopf: UQe,
  grave: KQe,
  GreaterEqual: JQe,
  GreaterEqualLess: eZe,
  GreaterFullEqual: tZe,
  GreaterGreater: nZe,
  GreaterLess: rZe,
  GreaterSlantEqual: iZe,
  GreaterTilde: oZe,
  Gscr: sZe,
  gscr: aZe,
  gsim: lZe,
  gsime: uZe,
  gsiml: cZe,
  gtcc: hZe,
  gtcir: fZe,
  gt: dZe,
  GT: pZe,
  Gt: gZe,
  gtdot: vZe,
  gtlPar: mZe,
  gtquest: yZe,
  gtrapprox: bZe,
  gtrarr: OZe,
  gtrdot: wZe,
  gtreqless: xZe,
  gtreqqless: SZe,
  gtrless: _Ze,
  gtrsim: CZe,
  gvertneqq: AZe,
  gvnE: TZe,
  Hacek: PZe,
  hairsp: EZe,
  half: kZe,
  hamilt: MZe,
  HARDcy: DZe,
  hardcy: LZe,
  harrcir: IZe,
  harr: RZe,
  hArr: $Ze,
  harrw: NZe,
  Hat: BZe,
  hbar: VZe,
  Hcirc: zZe,
  hcirc: FZe,
  hearts: QZe,
  heartsuit: ZZe,
  hellip: WZe,
  hercon: GZe,
  hfr: jZe,
  Hfr: HZe,
  HilbertSpace: qZe,
  hksearow: YZe,
  hkswarow: XZe,
  hoarr: UZe,
  homtht: KZe,
  hookleftarrow: JZe,
  hookrightarrow: eWe,
  hopf: tWe,
  Hopf: nWe,
  horbar: rWe,
  HorizontalLine: iWe,
  hscr: oWe,
  Hscr: sWe,
  hslash: aWe,
  Hstrok: lWe,
  hstrok: uWe,
  HumpDownHump: cWe,
  HumpEqual: hWe,
  hybull: fWe,
  hyphen: dWe,
  Iacute: pWe,
  iacute: gWe,
  ic: vWe,
  Icirc: mWe,
  icirc: yWe,
  Icy: bWe,
  icy: OWe,
  Idot: wWe,
  IEcy: xWe,
  iecy: SWe,
  iexcl: _We,
  iff: CWe,
  ifr: AWe,
  Ifr: TWe,
  Igrave: PWe,
  igrave: EWe,
  ii: kWe,
  iiiint: MWe,
  iiint: DWe,
  iinfin: LWe,
  iiota: IWe,
  IJlig: RWe,
  ijlig: $We,
  Imacr: NWe,
  imacr: BWe,
  image: VWe,
  ImaginaryI: zWe,
  imagline: FWe,
  imagpart: QWe,
  imath: ZWe,
  Im: WWe,
  imof: GWe,
  imped: jWe,
  Implies: HWe,
  incare: qWe,
  in: "∈",
  infin: YWe,
  infintie: XWe,
  inodot: UWe,
  intcal: KWe,
  int: JWe,
  Int: eGe,
  integers: tGe,
  Integral: nGe,
  intercal: rGe,
  Intersection: iGe,
  intlarhk: oGe,
  intprod: sGe,
  InvisibleComma: aGe,
  InvisibleTimes: lGe,
  IOcy: uGe,
  iocy: cGe,
  Iogon: hGe,
  iogon: fGe,
  Iopf: dGe,
  iopf: pGe,
  Iota: gGe,
  iota: vGe,
  iprod: mGe,
  iquest: yGe,
  iscr: bGe,
  Iscr: OGe,
  isin: wGe,
  isindot: xGe,
  isinE: SGe,
  isins: _Ge,
  isinsv: CGe,
  isinv: AGe,
  it: TGe,
  Itilde: PGe,
  itilde: EGe,
  Iukcy: kGe,
  iukcy: MGe,
  Iuml: DGe,
  iuml: LGe,
  Jcirc: IGe,
  jcirc: RGe,
  Jcy: $Ge,
  jcy: NGe,
  Jfr: BGe,
  jfr: VGe,
  jmath: zGe,
  Jopf: FGe,
  jopf: QGe,
  Jscr: ZGe,
  jscr: WGe,
  Jsercy: GGe,
  jsercy: jGe,
  Jukcy: HGe,
  jukcy: qGe,
  Kappa: YGe,
  kappa: XGe,
  kappav: UGe,
  Kcedil: KGe,
  kcedil: JGe,
  Kcy: eje,
  kcy: tje,
  Kfr: nje,
  kfr: rje,
  kgreen: ije,
  KHcy: oje,
  khcy: sje,
  KJcy: aje,
  kjcy: lje,
  Kopf: uje,
  kopf: cje,
  Kscr: hje,
  kscr: fje,
  lAarr: dje,
  Lacute: pje,
  lacute: gje,
  laemptyv: vje,
  lagran: mje,
  Lambda: yje,
  lambda: bje,
  lang: Oje,
  Lang: wje,
  langd: xje,
  langle: Sje,
  lap: _je,
  Laplacetrf: Cje,
  laquo: Aje,
  larrb: Tje,
  larrbfs: Pje,
  larr: Eje,
  Larr: kje,
  lArr: Mje,
  larrfs: Dje,
  larrhk: Lje,
  larrlp: Ije,
  larrpl: Rje,
  larrsim: $je,
  larrtl: Nje,
  latail: Bje,
  lAtail: Vje,
  lat: zje,
  late: Fje,
  lates: Qje,
  lbarr: Zje,
  lBarr: Wje,
  lbbrk: Gje,
  lbrace: jje,
  lbrack: Hje,
  lbrke: qje,
  lbrksld: Yje,
  lbrkslu: Xje,
  Lcaron: Uje,
  lcaron: Kje,
  Lcedil: Jje,
  lcedil: e7e,
  lceil: t7e,
  lcub: n7e,
  Lcy: r7e,
  lcy: i7e,
  ldca: o7e,
  ldquo: s7e,
  ldquor: a7e,
  ldrdhar: l7e,
  ldrushar: u7e,
  ldsh: c7e,
  le: h7e,
  lE: f7e,
  LeftAngleBracket: d7e,
  LeftArrowBar: p7e,
  leftarrow: g7e,
  LeftArrow: v7e,
  Leftarrow: m7e,
  LeftArrowRightArrow: y7e,
  leftarrowtail: b7e,
  LeftCeiling: O7e,
  LeftDoubleBracket: w7e,
  LeftDownTeeVector: x7e,
  LeftDownVectorBar: S7e,
  LeftDownVector: _7e,
  LeftFloor: C7e,
  leftharpoondown: A7e,
  leftharpoonup: T7e,
  leftleftarrows: P7e,
  leftrightarrow: E7e,
  LeftRightArrow: k7e,
  Leftrightarrow: M7e,
  leftrightarrows: D7e,
  leftrightharpoons: L7e,
  leftrightsquigarrow: I7e,
  LeftRightVector: R7e,
  LeftTeeArrow: $7e,
  LeftTee: N7e,
  LeftTeeVector: B7e,
  leftthreetimes: V7e,
  LeftTriangleBar: z7e,
  LeftTriangle: F7e,
  LeftTriangleEqual: Q7e,
  LeftUpDownVector: Z7e,
  LeftUpTeeVector: W7e,
  LeftUpVectorBar: G7e,
  LeftUpVector: j7e,
  LeftVectorBar: H7e,
  LeftVector: q7e,
  lEg: Y7e,
  leg: X7e,
  leq: U7e,
  leqq: K7e,
  leqslant: J7e,
  lescc: eHe,
  les: tHe,
  lesdot: nHe,
  lesdoto: rHe,
  lesdotor: iHe,
  lesg: oHe,
  lesges: sHe,
  lessapprox: aHe,
  lessdot: lHe,
  lesseqgtr: uHe,
  lesseqqgtr: cHe,
  LessEqualGreater: hHe,
  LessFullEqual: fHe,
  LessGreater: dHe,
  lessgtr: pHe,
  LessLess: gHe,
  lesssim: vHe,
  LessSlantEqual: mHe,
  LessTilde: yHe,
  lfisht: bHe,
  lfloor: OHe,
  Lfr: wHe,
  lfr: xHe,
  lg: SHe,
  lgE: _He,
  lHar: CHe,
  lhard: AHe,
  lharu: THe,
  lharul: PHe,
  lhblk: EHe,
  LJcy: kHe,
  ljcy: MHe,
  llarr: DHe,
  ll: LHe,
  Ll: IHe,
  llcorner: RHe,
  Lleftarrow: $He,
  llhard: NHe,
  lltri: BHe,
  Lmidot: VHe,
  lmidot: zHe,
  lmoustache: FHe,
  lmoust: QHe,
  lnap: ZHe,
  lnapprox: WHe,
  lne: GHe,
  lnE: jHe,
  lneq: HHe,
  lneqq: qHe,
  lnsim: YHe,
  loang: XHe,
  loarr: UHe,
  lobrk: KHe,
  longleftarrow: JHe,
  LongLeftArrow: eqe,
  Longleftarrow: tqe,
  longleftrightarrow: nqe,
  LongLeftRightArrow: rqe,
  Longleftrightarrow: iqe,
  longmapsto: oqe,
  longrightarrow: sqe,
  LongRightArrow: aqe,
  Longrightarrow: lqe,
  looparrowleft: uqe,
  looparrowright: cqe,
  lopar: hqe,
  Lopf: fqe,
  lopf: dqe,
  loplus: pqe,
  lotimes: gqe,
  lowast: vqe,
  lowbar: mqe,
  LowerLeftArrow: yqe,
  LowerRightArrow: bqe,
  loz: Oqe,
  lozenge: wqe,
  lozf: xqe,
  lpar: Sqe,
  lparlt: _qe,
  lrarr: Cqe,
  lrcorner: Aqe,
  lrhar: Tqe,
  lrhard: Pqe,
  lrm: Eqe,
  lrtri: kqe,
  lsaquo: Mqe,
  lscr: Dqe,
  Lscr: Lqe,
  lsh: Iqe,
  Lsh: Rqe,
  lsim: $qe,
  lsime: Nqe,
  lsimg: Bqe,
  lsqb: Vqe,
  lsquo: zqe,
  lsquor: Fqe,
  Lstrok: Qqe,
  lstrok: Zqe,
  ltcc: Wqe,
  ltcir: Gqe,
  lt: jqe,
  LT: Hqe,
  Lt: qqe,
  ltdot: Yqe,
  lthree: Xqe,
  ltimes: Uqe,
  ltlarr: Kqe,
  ltquest: Jqe,
  ltri: e9e,
  ltrie: t9e,
  ltrif: n9e,
  ltrPar: r9e,
  lurdshar: i9e,
  luruhar: o9e,
  lvertneqq: s9e,
  lvnE: a9e,
  macr: l9e,
  male: u9e,
  malt: c9e,
  maltese: h9e,
  Map: "⤅",
  map: f9e,
  mapsto: d9e,
  mapstodown: p9e,
  mapstoleft: g9e,
  mapstoup: v9e,
  marker: m9e,
  mcomma: y9e,
  Mcy: b9e,
  mcy: O9e,
  mdash: w9e,
  mDDot: x9e,
  measuredangle: S9e,
  MediumSpace: _9e,
  Mellintrf: C9e,
  Mfr: A9e,
  mfr: T9e,
  mho: P9e,
  micro: E9e,
  midast: k9e,
  midcir: M9e,
  mid: D9e,
  middot: L9e,
  minusb: I9e,
  minus: R9e,
  minusd: $9e,
  minusdu: N9e,
  MinusPlus: B9e,
  mlcp: V9e,
  mldr: z9e,
  mnplus: F9e,
  models: Q9e,
  Mopf: Z9e,
  mopf: W9e,
  mp: G9e,
  mscr: j9e,
  Mscr: H9e,
  mstpos: q9e,
  Mu: Y9e,
  mu: X9e,
  multimap: U9e,
  mumap: K9e,
  nabla: J9e,
  Nacute: eYe,
  nacute: tYe,
  nang: nYe,
  nap: rYe,
  napE: iYe,
  napid: oYe,
  napos: sYe,
  napprox: aYe,
  natural: lYe,
  naturals: uYe,
  natur: cYe,
  nbsp: hYe,
  nbump: fYe,
  nbumpe: dYe,
  ncap: pYe,
  Ncaron: gYe,
  ncaron: vYe,
  Ncedil: mYe,
  ncedil: yYe,
  ncong: bYe,
  ncongdot: OYe,
  ncup: wYe,
  Ncy: xYe,
  ncy: SYe,
  ndash: _Ye,
  nearhk: CYe,
  nearr: AYe,
  neArr: TYe,
  nearrow: PYe,
  ne: EYe,
  nedot: kYe,
  NegativeMediumSpace: MYe,
  NegativeThickSpace: DYe,
  NegativeThinSpace: LYe,
  NegativeVeryThinSpace: IYe,
  nequiv: RYe,
  nesear: $Ye,
  nesim: NYe,
  NestedGreaterGreater: BYe,
  NestedLessLess: VYe,
  NewLine: zYe,
  nexist: FYe,
  nexists: QYe,
  Nfr: ZYe,
  nfr: WYe,
  ngE: GYe,
  nge: jYe,
  ngeq: HYe,
  ngeqq: qYe,
  ngeqslant: YYe,
  nges: XYe,
  nGg: UYe,
  ngsim: KYe,
  nGt: JYe,
  ngt: eXe,
  ngtr: tXe,
  nGtv: nXe,
  nharr: rXe,
  nhArr: iXe,
  nhpar: oXe,
  ni: sXe,
  nis: aXe,
  nisd: lXe,
  niv: uXe,
  NJcy: cXe,
  njcy: hXe,
  nlarr: fXe,
  nlArr: dXe,
  nldr: pXe,
  nlE: gXe,
  nle: vXe,
  nleftarrow: mXe,
  nLeftarrow: yXe,
  nleftrightarrow: bXe,
  nLeftrightarrow: OXe,
  nleq: wXe,
  nleqq: xXe,
  nleqslant: SXe,
  nles: _Xe,
  nless: CXe,
  nLl: AXe,
  nlsim: TXe,
  nLt: PXe,
  nlt: EXe,
  nltri: kXe,
  nltrie: MXe,
  nLtv: DXe,
  nmid: LXe,
  NoBreak: IXe,
  NonBreakingSpace: RXe,
  nopf: $Xe,
  Nopf: NXe,
  Not: BXe,
  not: VXe,
  NotCongruent: zXe,
  NotCupCap: FXe,
  NotDoubleVerticalBar: QXe,
  NotElement: ZXe,
  NotEqual: WXe,
  NotEqualTilde: GXe,
  NotExists: jXe,
  NotGreater: HXe,
  NotGreaterEqual: qXe,
  NotGreaterFullEqual: YXe,
  NotGreaterGreater: XXe,
  NotGreaterLess: UXe,
  NotGreaterSlantEqual: KXe,
  NotGreaterTilde: JXe,
  NotHumpDownHump: eUe,
  NotHumpEqual: tUe,
  notin: nUe,
  notindot: rUe,
  notinE: iUe,
  notinva: oUe,
  notinvb: sUe,
  notinvc: aUe,
  NotLeftTriangleBar: lUe,
  NotLeftTriangle: uUe,
  NotLeftTriangleEqual: cUe,
  NotLess: hUe,
  NotLessEqual: fUe,
  NotLessGreater: dUe,
  NotLessLess: pUe,
  NotLessSlantEqual: gUe,
  NotLessTilde: vUe,
  NotNestedGreaterGreater: mUe,
  NotNestedLessLess: yUe,
  notni: bUe,
  notniva: OUe,
  notnivb: wUe,
  notnivc: xUe,
  NotPrecedes: SUe,
  NotPrecedesEqual: _Ue,
  NotPrecedesSlantEqual: CUe,
  NotReverseElement: AUe,
  NotRightTriangleBar: TUe,
  NotRightTriangle: PUe,
  NotRightTriangleEqual: EUe,
  NotSquareSubset: kUe,
  NotSquareSubsetEqual: MUe,
  NotSquareSuperset: DUe,
  NotSquareSupersetEqual: LUe,
  NotSubset: IUe,
  NotSubsetEqual: RUe,
  NotSucceeds: $Ue,
  NotSucceedsEqual: NUe,
  NotSucceedsSlantEqual: BUe,
  NotSucceedsTilde: VUe,
  NotSuperset: zUe,
  NotSupersetEqual: FUe,
  NotTilde: QUe,
  NotTildeEqual: ZUe,
  NotTildeFullEqual: WUe,
  NotTildeTilde: GUe,
  NotVerticalBar: jUe,
  nparallel: HUe,
  npar: qUe,
  nparsl: YUe,
  npart: XUe,
  npolint: UUe,
  npr: KUe,
  nprcue: JUe,
  nprec: eKe,
  npreceq: tKe,
  npre: nKe,
  nrarrc: rKe,
  nrarr: iKe,
  nrArr: oKe,
  nrarrw: sKe,
  nrightarrow: aKe,
  nRightarrow: lKe,
  nrtri: uKe,
  nrtrie: cKe,
  nsc: hKe,
  nsccue: fKe,
  nsce: dKe,
  Nscr: pKe,
  nscr: gKe,
  nshortmid: vKe,
  nshortparallel: mKe,
  nsim: yKe,
  nsime: bKe,
  nsimeq: OKe,
  nsmid: wKe,
  nspar: xKe,
  nsqsube: SKe,
  nsqsupe: _Ke,
  nsub: CKe,
  nsubE: AKe,
  nsube: TKe,
  nsubset: PKe,
  nsubseteq: EKe,
  nsubseteqq: kKe,
  nsucc: MKe,
  nsucceq: DKe,
  nsup: LKe,
  nsupE: IKe,
  nsupe: RKe,
  nsupset: $Ke,
  nsupseteq: NKe,
  nsupseteqq: BKe,
  ntgl: VKe,
  Ntilde: zKe,
  ntilde: FKe,
  ntlg: QKe,
  ntriangleleft: ZKe,
  ntrianglelefteq: WKe,
  ntriangleright: GKe,
  ntrianglerighteq: jKe,
  Nu: HKe,
  nu: qKe,
  num: YKe,
  numero: XKe,
  numsp: UKe,
  nvap: KKe,
  nvdash: JKe,
  nvDash: eJe,
  nVdash: tJe,
  nVDash: nJe,
  nvge: rJe,
  nvgt: iJe,
  nvHarr: oJe,
  nvinfin: sJe,
  nvlArr: aJe,
  nvle: lJe,
  nvlt: uJe,
  nvltrie: cJe,
  nvrArr: hJe,
  nvrtrie: fJe,
  nvsim: dJe,
  nwarhk: pJe,
  nwarr: gJe,
  nwArr: vJe,
  nwarrow: mJe,
  nwnear: yJe,
  Oacute: bJe,
  oacute: OJe,
  oast: wJe,
  Ocirc: xJe,
  ocirc: SJe,
  ocir: _Je,
  Ocy: CJe,
  ocy: AJe,
  odash: TJe,
  Odblac: PJe,
  odblac: EJe,
  odiv: kJe,
  odot: MJe,
  odsold: DJe,
  OElig: LJe,
  oelig: IJe,
  ofcir: RJe,
  Ofr: $Je,
  ofr: NJe,
  ogon: BJe,
  Ograve: VJe,
  ograve: zJe,
  ogt: FJe,
  ohbar: QJe,
  ohm: ZJe,
  oint: WJe,
  olarr: GJe,
  olcir: jJe,
  olcross: HJe,
  oline: qJe,
  olt: YJe,
  Omacr: XJe,
  omacr: UJe,
  Omega: KJe,
  omega: JJe,
  Omicron: eet,
  omicron: tet,
  omid: net,
  ominus: ret,
  Oopf: iet,
  oopf: oet,
  opar: set,
  OpenCurlyDoubleQuote: aet,
  OpenCurlyQuote: uet,
  operp: cet,
  oplus: het,
  orarr: fet,
  Or: det,
  or: pet,
  ord: get,
  order: vet,
  orderof: met,
  ordf: yet,
  ordm: bet,
  origof: Oet,
  oror: wet,
  orslope: xet,
  orv: _et,
  oS: Cet,
  Oscr: Aet,
  oscr: Tet,
  Oslash: Pet,
  oslash: Eet,
  osol: ket,
  Otilde: Met,
  otilde: Det,
  otimesas: Let,
  Otimes: Iet,
  otimes: Ret,
  Ouml: $et,
  ouml: Net,
  ovbar: Bet,
  OverBar: Vet,
  OverBrace: zet,
  OverBracket: Fet,
  OverParenthesis: Qet,
  para: Zet,
  parallel: Wet,
  par: Get,
  parsim: jet,
  parsl: Het,
  part: qet,
  PartialD: Yet,
  Pcy: Xet,
  pcy: Uet,
  percnt: Ket,
  period: Jet,
  permil: ett,
  perp: ttt,
  pertenk: ntt,
  Pfr: rtt,
  pfr: itt,
  Phi: ott,
  phi: stt,
  phiv: att,
  phmmat: ltt,
  phone: utt,
  Pi: ctt,
  pi: htt,
  pitchfork: ftt,
  piv: dtt,
  planck: ptt,
  planckh: gtt,
  plankv: vtt,
  plusacir: mtt,
  plusb: ytt,
  pluscir: btt,
  plus: Ott,
  plusdo: wtt,
  plusdu: xtt,
  pluse: Stt,
  PlusMinus: _tt,
  plusmn: Ctt,
  plussim: Att,
  plustwo: Ttt,
  pm: Ptt,
  Poincareplane: Ett,
  pointint: ktt,
  popf: Mtt,
  Popf: Dtt,
  pound: Ltt,
  prap: Itt,
  Pr: Rtt,
  pr: $tt,
  prcue: Ntt,
  precapprox: Btt,
  prec: Vtt,
  preccurlyeq: ztt,
  Precedes: Ftt,
  PrecedesEqual: Qtt,
  PrecedesSlantEqual: Ztt,
  PrecedesTilde: Wtt,
  preceq: Gtt,
  precnapprox: jtt,
  precneqq: Htt,
  precnsim: qtt,
  pre: Ytt,
  prE: Xtt,
  precsim: Utt,
  prime: Ktt,
  Prime: Jtt,
  primes: ent,
  prnap: tnt,
  prnE: nnt,
  prnsim: rnt,
  prod: int,
  Product: ont,
  profalar: snt,
  profline: ant,
  profsurf: lnt,
  prop: unt,
  Proportional: cnt,
  Proportion: hnt,
  propto: fnt,
  prsim: dnt,
  prurel: pnt,
  Pscr: gnt,
  pscr: vnt,
  Psi: mnt,
  psi: ynt,
  puncsp: bnt,
  Qfr: Ont,
  qfr: wnt,
  qint: xnt,
  qopf: Snt,
  Qopf: _nt,
  qprime: Cnt,
  Qscr: Ant,
  qscr: Tnt,
  quaternions: Pnt,
  quatint: Ent,
  quest: knt,
  questeq: Mnt,
  quot: Dnt,
  QUOT: Lnt,
  rAarr: Int,
  race: Rnt,
  Racute: $nt,
  racute: Nnt,
  radic: Bnt,
  raemptyv: Vnt,
  rang: znt,
  Rang: Fnt,
  rangd: Qnt,
  range: Znt,
  rangle: Wnt,
  raquo: Gnt,
  rarrap: jnt,
  rarrb: Hnt,
  rarrbfs: qnt,
  rarrc: Ynt,
  rarr: Xnt,
  Rarr: Unt,
  rArr: Knt,
  rarrfs: Jnt,
  rarrhk: ert,
  rarrlp: trt,
  rarrpl: nrt,
  rarrsim: rrt,
  Rarrtl: irt,
  rarrtl: ort,
  rarrw: srt,
  ratail: art,
  rAtail: lrt,
  ratio: urt,
  rationals: crt,
  rbarr: hrt,
  rBarr: frt,
  RBarr: drt,
  rbbrk: prt,
  rbrace: grt,
  rbrack: vrt,
  rbrke: mrt,
  rbrksld: yrt,
  rbrkslu: brt,
  Rcaron: Ort,
  rcaron: wrt,
  Rcedil: xrt,
  rcedil: Srt,
  rceil: _rt,
  rcub: Crt,
  Rcy: Art,
  rcy: Trt,
  rdca: Prt,
  rdldhar: Ert,
  rdquo: krt,
  rdquor: Mrt,
  rdsh: Drt,
  real: Lrt,
  realine: Irt,
  realpart: Rrt,
  reals: $rt,
  Re: Nrt,
  rect: Brt,
  reg: Vrt,
  REG: zrt,
  ReverseElement: Frt,
  ReverseEquilibrium: Qrt,
  ReverseUpEquilibrium: Zrt,
  rfisht: Wrt,
  rfloor: Grt,
  rfr: jrt,
  Rfr: Hrt,
  rHar: qrt,
  rhard: Yrt,
  rharu: Xrt,
  rharul: Urt,
  Rho: Krt,
  rho: Jrt,
  rhov: eit,
  RightAngleBracket: tit,
  RightArrowBar: nit,
  rightarrow: rit,
  RightArrow: iit,
  Rightarrow: oit,
  RightArrowLeftArrow: sit,
  rightarrowtail: ait,
  RightCeiling: lit,
  RightDoubleBracket: uit,
  RightDownTeeVector: cit,
  RightDownVectorBar: hit,
  RightDownVector: fit,
  RightFloor: dit,
  rightharpoondown: pit,
  rightharpoonup: git,
  rightleftarrows: vit,
  rightleftharpoons: mit,
  rightrightarrows: yit,
  rightsquigarrow: bit,
  RightTeeArrow: Oit,
  RightTee: wit,
  RightTeeVector: xit,
  rightthreetimes: Sit,
  RightTriangleBar: _it,
  RightTriangle: Cit,
  RightTriangleEqual: Ait,
  RightUpDownVector: Tit,
  RightUpTeeVector: Pit,
  RightUpVectorBar: Eit,
  RightUpVector: kit,
  RightVectorBar: Mit,
  RightVector: Dit,
  ring: Lit,
  risingdotseq: Iit,
  rlarr: Rit,
  rlhar: $it,
  rlm: Nit,
  rmoustache: Bit,
  rmoust: Vit,
  rnmid: zit,
  roang: Fit,
  roarr: Qit,
  robrk: Zit,
  ropar: Wit,
  ropf: Git,
  Ropf: jit,
  roplus: Hit,
  rotimes: qit,
  RoundImplies: Yit,
  rpar: Xit,
  rpargt: Uit,
  rppolint: Kit,
  rrarr: Jit,
  Rrightarrow: eot,
  rsaquo: tot,
  rscr: not,
  Rscr: rot,
  rsh: iot,
  Rsh: oot,
  rsqb: sot,
  rsquo: aot,
  rsquor: lot,
  rthree: uot,
  rtimes: cot,
  rtri: hot,
  rtrie: fot,
  rtrif: dot,
  rtriltri: pot,
  RuleDelayed: got,
  ruluhar: vot,
  rx: mot,
  Sacute: yot,
  sacute: bot,
  sbquo: Oot,
  scap: wot,
  Scaron: xot,
  scaron: Sot,
  Sc: _ot,
  sc: Cot,
  sccue: Aot,
  sce: Tot,
  scE: Pot,
  Scedil: Eot,
  scedil: kot,
  Scirc: Mot,
  scirc: Dot,
  scnap: Lot,
  scnE: Iot,
  scnsim: Rot,
  scpolint: $ot,
  scsim: Not,
  Scy: Bot,
  scy: Vot,
  sdotb: zot,
  sdot: Fot,
  sdote: Qot,
  searhk: Zot,
  searr: Wot,
  seArr: Got,
  searrow: jot,
  sect: Hot,
  semi: qot,
  seswar: Yot,
  setminus: Xot,
  setmn: Uot,
  sext: Kot,
  Sfr: Jot,
  sfr: est,
  sfrown: tst,
  sharp: nst,
  SHCHcy: rst,
  shchcy: ist,
  SHcy: ost,
  shcy: sst,
  ShortDownArrow: ast,
  ShortLeftArrow: lst,
  shortmid: ust,
  shortparallel: cst,
  ShortRightArrow: hst,
  ShortUpArrow: fst,
  shy: dst,
  Sigma: pst,
  sigma: gst,
  sigmaf: vst,
  sigmav: mst,
  sim: yst,
  simdot: bst,
  sime: Ost,
  simeq: wst,
  simg: xst,
  simgE: Sst,
  siml: _st,
  simlE: Cst,
  simne: Ast,
  simplus: Tst,
  simrarr: Pst,
  slarr: Est,
  SmallCircle: kst,
  smallsetminus: Mst,
  smashp: Dst,
  smeparsl: Lst,
  smid: Ist,
  smile: Rst,
  smt: $st,
  smte: Nst,
  smtes: Bst,
  SOFTcy: Vst,
  softcy: zst,
  solbar: Fst,
  solb: Qst,
  sol: Zst,
  Sopf: Wst,
  sopf: Gst,
  spades: jst,
  spadesuit: Hst,
  spar: qst,
  sqcap: Yst,
  sqcaps: Xst,
  sqcup: Ust,
  sqcups: Kst,
  Sqrt: Jst,
  sqsub: eat,
  sqsube: tat,
  sqsubset: nat,
  sqsubseteq: rat,
  sqsup: iat,
  sqsupe: oat,
  sqsupset: sat,
  sqsupseteq: aat,
  square: lat,
  Square: uat,
  SquareIntersection: cat,
  SquareSubset: hat,
  SquareSubsetEqual: fat,
  SquareSuperset: dat,
  SquareSupersetEqual: pat,
  SquareUnion: gat,
  squarf: vat,
  squ: mat,
  squf: yat,
  srarr: bat,
  Sscr: Oat,
  sscr: wat,
  ssetmn: xat,
  ssmile: Sat,
  sstarf: _at,
  Star: Cat,
  star: Aat,
  starf: Tat,
  straightepsilon: Pat,
  straightphi: Eat,
  strns: kat,
  sub: Mat,
  Sub: Dat,
  subdot: Lat,
  subE: Iat,
  sube: Rat,
  subedot: $at,
  submult: Nat,
  subnE: Bat,
  subne: Vat,
  subplus: zat,
  subrarr: Fat,
  subset: Qat,
  Subset: Zat,
  subseteq: Wat,
  subseteqq: Gat,
  SubsetEqual: jat,
  subsetneq: Hat,
  subsetneqq: qat,
  subsim: Yat,
  subsub: Xat,
  subsup: Uat,
  succapprox: Kat,
  succ: Jat,
  succcurlyeq: elt,
  Succeeds: tlt,
  SucceedsEqual: nlt,
  SucceedsSlantEqual: rlt,
  SucceedsTilde: ilt,
  succeq: olt,
  succnapprox: slt,
  succneqq: alt,
  succnsim: llt,
  succsim: ult,
  SuchThat: clt,
  sum: hlt,
  Sum: flt,
  sung: dlt,
  sup1: plt,
  sup2: glt,
  sup3: vlt,
  sup: mlt,
  Sup: ylt,
  supdot: blt,
  supdsub: Olt,
  supE: wlt,
  supe: xlt,
  supedot: Slt,
  Superset: _lt,
  SupersetEqual: Clt,
  suphsol: Alt,
  suphsub: Tlt,
  suplarr: Plt,
  supmult: Elt,
  supnE: klt,
  supne: Mlt,
  supplus: Dlt,
  supset: Llt,
  Supset: Ilt,
  supseteq: Rlt,
  supseteqq: $lt,
  supsetneq: Nlt,
  supsetneqq: Blt,
  supsim: Vlt,
  supsub: zlt,
  supsup: Flt,
  swarhk: Qlt,
  swarr: Zlt,
  swArr: Wlt,
  swarrow: Glt,
  swnwar: jlt,
  szlig: Hlt,
  Tab: qlt,
  target: Ylt,
  Tau: Xlt,
  tau: Ult,
  tbrk: Klt,
  Tcaron: Jlt,
  tcaron: eut,
  Tcedil: tut,
  tcedil: nut,
  Tcy: rut,
  tcy: iut,
  tdot: out,
  telrec: sut,
  Tfr: aut,
  tfr: lut,
  there4: uut,
  therefore: cut,
  Therefore: hut,
  Theta: fut,
  theta: dut,
  thetasym: put,
  thetav: gut,
  thickapprox: vut,
  thicksim: mut,
  ThickSpace: yut,
  ThinSpace: but,
  thinsp: Out,
  thkap: wut,
  thksim: xut,
  THORN: Sut,
  thorn: _ut,
  tilde: Cut,
  Tilde: Aut,
  TildeEqual: Tut,
  TildeFullEqual: Put,
  TildeTilde: Eut,
  timesbar: kut,
  timesb: Mut,
  times: Dut,
  timesd: Lut,
  tint: Iut,
  toea: Rut,
  topbot: $ut,
  topcir: Nut,
  top: But,
  Topf: Vut,
  topf: zut,
  topfork: Fut,
  tosa: Qut,
  tprime: Zut,
  trade: Wut,
  TRADE: Gut,
  triangle: jut,
  triangledown: Hut,
  triangleleft: qut,
  trianglelefteq: Yut,
  triangleq: Xut,
  triangleright: Uut,
  trianglerighteq: Kut,
  tridot: Jut,
  trie: ect,
  triminus: tct,
  TripleDot: nct,
  triplus: rct,
  trisb: ict,
  tritime: oct,
  trpezium: sct,
  Tscr: act,
  tscr: lct,
  TScy: uct,
  tscy: cct,
  TSHcy: hct,
  tshcy: fct,
  Tstrok: dct,
  tstrok: pct,
  twixt: gct,
  twoheadleftarrow: vct,
  twoheadrightarrow: mct,
  Uacute: yct,
  uacute: bct,
  uarr: Oct,
  Uarr: wct,
  uArr: xct,
  Uarrocir: Sct,
  Ubrcy: _ct,
  ubrcy: Cct,
  Ubreve: Act,
  ubreve: Tct,
  Ucirc: Pct,
  ucirc: Ect,
  Ucy: kct,
  ucy: Mct,
  udarr: Dct,
  Udblac: Lct,
  udblac: Ict,
  udhar: Rct,
  ufisht: $ct,
  Ufr: Nct,
  ufr: Bct,
  Ugrave: Vct,
  ugrave: zct,
  uHar: Fct,
  uharl: Qct,
  uharr: Zct,
  uhblk: Wct,
  ulcorn: Gct,
  ulcorner: jct,
  ulcrop: Hct,
  ultri: qct,
  Umacr: Yct,
  umacr: Xct,
  uml: Uct,
  UnderBar: Kct,
  UnderBrace: Jct,
  UnderBracket: eht,
  UnderParenthesis: tht,
  Union: nht,
  UnionPlus: rht,
  Uogon: iht,
  uogon: oht,
  Uopf: sht,
  uopf: aht,
  UpArrowBar: lht,
  uparrow: uht,
  UpArrow: cht,
  Uparrow: hht,
  UpArrowDownArrow: fht,
  updownarrow: dht,
  UpDownArrow: pht,
  Updownarrow: ght,
  UpEquilibrium: vht,
  upharpoonleft: mht,
  upharpoonright: yht,
  uplus: bht,
  UpperLeftArrow: Oht,
  UpperRightArrow: wht,
  upsi: xht,
  Upsi: Sht,
  upsih: _ht,
  Upsilon: Cht,
  upsilon: Aht,
  UpTeeArrow: Tht,
  UpTee: Pht,
  upuparrows: Eht,
  urcorn: kht,
  urcorner: Mht,
  urcrop: Dht,
  Uring: Lht,
  uring: Iht,
  urtri: Rht,
  Uscr: $ht,
  uscr: Nht,
  utdot: Bht,
  Utilde: Vht,
  utilde: zht,
  utri: Fht,
  utrif: Qht,
  uuarr: Zht,
  Uuml: Wht,
  uuml: Ght,
  uwangle: jht,
  vangrt: Hht,
  varepsilon: qht,
  varkappa: Yht,
  varnothing: Xht,
  varphi: Uht,
  varpi: Kht,
  varpropto: Jht,
  varr: eft,
  vArr: tft,
  varrho: nft,
  varsigma: rft,
  varsubsetneq: ift,
  varsubsetneqq: oft,
  varsupsetneq: sft,
  varsupsetneqq: aft,
  vartheta: lft,
  vartriangleleft: uft,
  vartriangleright: cft,
  vBar: hft,
  Vbar: fft,
  vBarv: dft,
  Vcy: pft,
  vcy: gft,
  vdash: vft,
  vDash: mft,
  Vdash: yft,
  VDash: bft,
  Vdashl: Oft,
  veebar: wft,
  vee: xft,
  Vee: Sft,
  veeeq: _ft,
  vellip: Cft,
  verbar: Aft,
  Verbar: Tft,
  vert: Pft,
  Vert: Eft,
  VerticalBar: kft,
  VerticalLine: Mft,
  VerticalSeparator: Dft,
  VerticalTilde: Lft,
  VeryThinSpace: Ift,
  Vfr: Rft,
  vfr: $ft,
  vltri: Nft,
  vnsub: Bft,
  vnsup: Vft,
  Vopf: zft,
  vopf: Fft,
  vprop: Qft,
  vrtri: Zft,
  Vscr: Wft,
  vscr: Gft,
  vsubnE: jft,
  vsubne: Hft,
  vsupnE: qft,
  vsupne: Yft,
  Vvdash: Xft,
  vzigzag: Uft,
  Wcirc: Kft,
  wcirc: Jft,
  wedbar: edt,
  wedge: tdt,
  Wedge: ndt,
  wedgeq: rdt,
  weierp: idt,
  Wfr: odt,
  wfr: sdt,
  Wopf: adt,
  wopf: ldt,
  wp: udt,
  wr: cdt,
  wreath: hdt,
  Wscr: fdt,
  wscr: ddt,
  xcap: pdt,
  xcirc: gdt,
  xcup: vdt,
  xdtri: mdt,
  Xfr: ydt,
  xfr: bdt,
  xharr: Odt,
  xhArr: wdt,
  Xi: xdt,
  xi: Sdt,
  xlarr: _dt,
  xlArr: Cdt,
  xmap: Adt,
  xnis: Tdt,
  xodot: Pdt,
  Xopf: Edt,
  xopf: kdt,
  xoplus: Mdt,
  xotime: Ddt,
  xrarr: Ldt,
  xrArr: Idt,
  Xscr: Rdt,
  xscr: $dt,
  xsqcup: Ndt,
  xuplus: Bdt,
  xutri: Vdt,
  xvee: zdt,
  xwedge: Fdt,
  Yacute: Qdt,
  yacute: Zdt,
  YAcy: Wdt,
  yacy: Gdt,
  Ycirc: jdt,
  ycirc: Hdt,
  Ycy: qdt,
  ycy: Ydt,
  yen: Xdt,
  Yfr: Udt,
  yfr: Kdt,
  YIcy: Jdt,
  yicy: ept,
  Yopf: tpt,
  yopf: npt,
  Yscr: rpt,
  yscr: ipt,
  YUcy: opt,
  yucy: spt,
  yuml: apt,
  Yuml: lpt,
  Zacute: upt,
  zacute: cpt,
  Zcaron: hpt,
  zcaron: fpt,
  Zcy: dpt,
  zcy: ppt,
  Zdot: gpt,
  zdot: vpt,
  zeetrf: mpt,
  ZeroWidthSpace: ypt,
  Zeta: bpt,
  zeta: Opt,
  zfr: wpt,
  Zfr: xpt,
  ZHcy: Spt,
  zhcy: _pt,
  zigrarr: Cpt,
  zopf: Apt,
  Zopf: Tpt,
  Zscr: Ppt,
  zscr: Ept,
  zwj: kpt,
  zwnj: Mpt
};
var FX = Dpt, vI = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, sv = {}, xV = {};
function Lpt(n) {
  var e, t, r = xV[n];
  if (r)
    return r;
  for (r = xV[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), /^[0-9a-z]$/i.test(t) ? r.push(t) : r.push("%" + ("0" + e.toString(16).toUpperCase()).slice(-2));
  for (e = 0; e < n.length; e++)
    r[n.charCodeAt(e)] = n[e];
  return r;
}
function L_(n, e, t) {
  var r, i, o, s, a, l = "";
  for (typeof e != "string" && (t = e, e = L_.defaultChars), typeof t > "u" && (t = !0), a = Lpt(e), r = 0, i = n.length; r < i; r++) {
    if (o = n.charCodeAt(r), t && o === 37 && r + 2 < i && /^[0-9a-f]{2}$/i.test(n.slice(r + 1, r + 3))) {
      l += n.slice(r, r + 3), r += 2;
      continue;
    }
    if (o < 128) {
      l += a[o];
      continue;
    }
    if (o >= 55296 && o <= 57343) {
      if (o >= 55296 && o <= 56319 && r + 1 < i && (s = n.charCodeAt(r + 1), s >= 56320 && s <= 57343)) {
        l += encodeURIComponent(n[r] + n[r + 1]), r++;
        continue;
      }
      l += "%EF%BF%BD";
      continue;
    }
    l += encodeURIComponent(n[r]);
  }
  return l;
}
L_.defaultChars = ";/?:@&=+$,-_.!~*'()#";
L_.componentChars = "-_.!~*'()";
var Ipt = L_, SV = {};
function Rpt(n) {
  var e, t, r = SV[n];
  if (r)
    return r;
  for (r = SV[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), r.push(t);
  for (e = 0; e < n.length; e++)
    t = n.charCodeAt(e), r[t] = "%" + ("0" + t.toString(16).toUpperCase()).slice(-2);
  return r;
}
function I_(n, e) {
  var t;
  return typeof e != "string" && (e = I_.defaultChars), t = Rpt(e), n.replace(/(%[a-f0-9]{2})+/gi, function(r) {
    var i, o, s, a, l, u, c, h = "";
    for (i = 0, o = r.length; i < o; i += 3) {
      if (s = parseInt(r.slice(i + 1, i + 3), 16), s < 128) {
        h += t[s];
        continue;
      }
      if ((s & 224) === 192 && i + 3 < o && (a = parseInt(r.slice(i + 4, i + 6), 16), (a & 192) === 128)) {
        c = s << 6 & 1984 | a & 63, c < 128 ? h += "��" : h += String.fromCharCode(c), i += 3;
        continue;
      }
      if ((s & 240) === 224 && i + 6 < o && (a = parseInt(r.slice(i + 4, i + 6), 16), l = parseInt(r.slice(i + 7, i + 9), 16), (a & 192) === 128 && (l & 192) === 128)) {
        c = s << 12 & 61440 | a << 6 & 4032 | l & 63, c < 2048 || c >= 55296 && c <= 57343 ? h += "���" : h += String.fromCharCode(c), i += 6;
        continue;
      }
      if ((s & 248) === 240 && i + 9 < o && (a = parseInt(r.slice(i + 4, i + 6), 16), l = parseInt(r.slice(i + 7, i + 9), 16), u = parseInt(r.slice(i + 10, i + 12), 16), (a & 192) === 128 && (l & 192) === 128 && (u & 192) === 128)) {
        c = s << 18 & 1835008 | a << 12 & 258048 | l << 6 & 4032 | u & 63, c < 65536 || c > 1114111 ? h += "����" : (c -= 65536, h += String.fromCharCode(55296 + (c >> 10), 56320 + (c & 1023))), i += 9;
        continue;
      }
      h += "�";
    }
    return h;
  });
}
I_.defaultChars = ";/?:@&=+$,#";
I_.componentChars = "";
var $pt = I_, Npt = function(e) {
  var t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
};
function Lx() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
var Bpt = /^([a-z0-9.+-]+:)/i, Vpt = /:[0-9]*$/, zpt = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, Fpt = ["<", ">", '"', "`", " ", "\r", `
`, "	"], Qpt = ["{", "}", "|", "\\", "^", "`"].concat(Fpt), Zpt = ["'"].concat(Qpt), _V = ["%", "/", "?", ";", "#"].concat(Zpt), CV = ["/", "?", "#"], Wpt = 255, AV = /^[+a-z0-9A-Z_-]{0,63}$/, Gpt = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, TV = {
  javascript: !0,
  "javascript:": !0
}, PV = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function jpt(n, e) {
  if (n && n instanceof Lx)
    return n;
  var t = new Lx();
  return t.parse(n, e), t;
}
Lx.prototype.parse = function(n, e) {
  var t, r, i, o, s, a = n;
  if (a = a.trim(), !e && n.split("#").length === 1) {
    var l = zpt.exec(a);
    if (l)
      return this.pathname = l[1], l[2] && (this.search = l[2]), this;
  }
  var u = Bpt.exec(a);
  if (u && (u = u[0], i = u.toLowerCase(), this.protocol = u, a = a.substr(u.length)), (e || u || a.match(/^\/\/[^@\/]+@[^@\/]+/)) && (s = a.substr(0, 2) === "//", s && !(u && TV[u]) && (a = a.substr(2), this.slashes = !0)), !TV[u] && (s || u && !PV[u])) {
    var c = -1;
    for (t = 0; t < CV.length; t++)
      o = a.indexOf(CV[t]), o !== -1 && (c === -1 || o < c) && (c = o);
    var h, f;
    for (c === -1 ? f = a.lastIndexOf("@") : f = a.lastIndexOf("@", c), f !== -1 && (h = a.slice(0, f), a = a.slice(f + 1), this.auth = h), c = -1, t = 0; t < _V.length; t++)
      o = a.indexOf(_V[t]), o !== -1 && (c === -1 || o < c) && (c = o);
    c === -1 && (c = a.length), a[c - 1] === ":" && c--;
    var d = a.slice(0, c);
    a = a.slice(c), this.parseHost(d), this.hostname = this.hostname || "";
    var p = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!p) {
      var g = this.hostname.split(/\./);
      for (t = 0, r = g.length; t < r; t++) {
        var v = g[t];
        if (v && !v.match(AV)) {
          for (var m = "", y = 0, b = v.length; y < b; y++)
            v.charCodeAt(y) > 127 ? m += "x" : m += v[y];
          if (!m.match(AV)) {
            var O = g.slice(0, t), w = g.slice(t + 1), x = v.match(Gpt);
            x && (O.push(x[1]), w.unshift(x[2])), w.length && (a = w.join(".") + a), this.hostname = O.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > Wpt && (this.hostname = ""), p && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  var S = a.indexOf("#");
  S !== -1 && (this.hash = a.substr(S), a = a.slice(0, S));
  var _ = a.indexOf("?");
  return _ !== -1 && (this.search = a.substr(_), a = a.slice(0, _)), a && (this.pathname = a), PV[i] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
Lx.prototype.parseHost = function(n) {
  var e = Vpt.exec(n);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), n = n.substr(0, n.length - e.length)), n && (this.hostname = n);
};
var Hpt = jpt;
sv.encode = Ipt;
sv.decode = $pt;
sv.format = Npt;
sv.parse = Hpt;
var ch = {}, D2, EV;
function QX() {
  return EV || (EV = 1, D2 = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), D2;
}
var L2, kV;
function ZX() {
  return kV || (kV = 1, L2 = /[\0-\x1F\x7F-\x9F]/), L2;
}
var I2, MV;
function qpt() {
  return MV || (MV = 1, I2 = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/), I2;
}
var R2, DV;
function WX() {
  return DV || (DV = 1, R2 = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/), R2;
}
var LV;
function Ypt() {
  return LV || (LV = 1, ch.Any = QX(), ch.Cc = ZX(), ch.Cf = qpt(), ch.P = vI, ch.Z = WX()), ch;
}
(function(n) {
  function e(D) {
    return Object.prototype.toString.call(D);
  }
  function t(D) {
    return e(D) === "[object String]";
  }
  var r = Object.prototype.hasOwnProperty;
  function i(D, E) {
    return r.call(D, E);
  }
  function o(D) {
    var E = Array.prototype.slice.call(arguments, 1);
    return E.forEach(function(M) {
      if (M) {
        if (typeof M != "object")
          throw new TypeError(M + "must be object");
        Object.keys(M).forEach(function(R) {
          D[R] = M[R];
        });
      }
    }), D;
  }
  function s(D, E, M) {
    return [].concat(D.slice(0, E), M, D.slice(E + 1));
  }
  function a(D) {
    return !(D >= 55296 && D <= 57343 || D >= 64976 && D <= 65007 || (D & 65535) === 65535 || (D & 65535) === 65534 || D >= 0 && D <= 8 || D === 11 || D >= 14 && D <= 31 || D >= 127 && D <= 159 || D > 1114111);
  }
  function l(D) {
    if (D > 65535) {
      D -= 65536;
      var E = 55296 + (D >> 10), M = 56320 + (D & 1023);
      return String.fromCharCode(E, M);
    }
    return String.fromCharCode(D);
  }
  var u = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, c = /&([a-z#][a-z0-9]{1,31});/gi, h = new RegExp(u.source + "|" + c.source, "gi"), f = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i, d = FX;
  function p(D, E) {
    var M;
    return i(d, E) ? d[E] : E.charCodeAt(0) === 35 && f.test(E) && (M = E[1].toLowerCase() === "x" ? parseInt(E.slice(2), 16) : parseInt(E.slice(1), 10), a(M)) ? l(M) : D;
  }
  function g(D) {
    return D.indexOf("\\") < 0 ? D : D.replace(u, "$1");
  }
  function v(D) {
    return D.indexOf("\\") < 0 && D.indexOf("&") < 0 ? D : D.replace(h, function(E, M, R) {
      return M || p(E, R);
    });
  }
  var m = /[&<>"]/, y = /[&<>"]/g, b = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function O(D) {
    return b[D];
  }
  function w(D) {
    return m.test(D) ? D.replace(y, O) : D;
  }
  var x = /[.?*+^$[\]\\(){}|-]/g;
  function S(D) {
    return D.replace(x, "\\$&");
  }
  function _(D) {
    switch (D) {
      case 9:
      case 32:
        return !0;
    }
    return !1;
  }
  function C(D) {
    if (D >= 8192 && D <= 8202)
      return !0;
    switch (D) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return !0;
    }
    return !1;
  }
  var A = vI;
  function T(D) {
    return A.test(D);
  }
  function k(D) {
    switch (D) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return !0;
      default:
        return !1;
    }
  }
  function L(D) {
    return D = D.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (D = D.replace(/ẞ/g, "ß")), D.toLowerCase().toUpperCase();
  }
  n.lib = {}, n.lib.mdurl = sv, n.lib.ucmicro = Ypt(), n.assign = o, n.isString = t, n.has = i, n.unescapeMd = g, n.unescapeAll = v, n.isValidEntityCode = a, n.fromCodePoint = l, n.escapeHtml = w, n.arrayReplaceAt = s, n.isSpace = _, n.isWhiteSpace = C, n.isMdAsciiPunct = k, n.isPunctChar = T, n.escapeRE = S, n.normalizeReference = L;
})(tn);
var R_ = {}, Xpt = function(e, t, r) {
  var i, o, s, a, l = -1, u = e.posMax, c = e.pos;
  for (e.pos = t + 1, i = 1; e.pos < u; ) {
    if (s = e.src.charCodeAt(e.pos), s === 93 && (i--, i === 0)) {
      o = !0;
      break;
    }
    if (a = e.pos, e.md.inline.skipToken(e), s === 91) {
      if (a === e.pos - 1)
        i++;
      else if (r)
        return e.pos = c, -1;
    }
  }
  return o && (l = e.pos), e.pos = c, l;
}, IV = tn.unescapeAll, Upt = function(e, t, r) {
  var i, o, s = t, a = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (e.charCodeAt(s) === 60) {
    for (s++; s < r; ) {
      if (i = e.charCodeAt(s), i === 10 || i === 60)
        return a;
      if (i === 62)
        return a.pos = s + 1, a.str = IV(e.slice(t + 1, s)), a.ok = !0, a;
      if (i === 92 && s + 1 < r) {
        s += 2;
        continue;
      }
      s++;
    }
    return a;
  }
  for (o = 0; s < r && (i = e.charCodeAt(s), !(i === 32 || i < 32 || i === 127)); ) {
    if (i === 92 && s + 1 < r) {
      if (e.charCodeAt(s + 1) === 32)
        break;
      s += 2;
      continue;
    }
    if (i === 40 && (o++, o > 32))
      return a;
    if (i === 41) {
      if (o === 0)
        break;
      o--;
    }
    s++;
  }
  return t === s || o !== 0 || (a.str = IV(e.slice(t, s)), a.pos = s, a.ok = !0), a;
}, Kpt = tn.unescapeAll, Jpt = function(e, t, r) {
  var i, o, s = 0, a = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (a >= r || (o = e.charCodeAt(a), o !== 34 && o !== 39 && o !== 40))
    return l;
  for (a++, o === 40 && (o = 41); a < r; ) {
    if (i = e.charCodeAt(a), i === o)
      return l.pos = a + 1, l.lines = s, l.str = Kpt(e.slice(t + 1, a)), l.ok = !0, l;
    if (i === 40 && o === 41)
      return l;
    i === 10 ? s++ : i === 92 && a + 1 < r && (a++, e.charCodeAt(a) === 10 && s++), a++;
  }
  return l;
};
R_.parseLinkLabel = Xpt;
R_.parseLinkDestination = Upt;
R_.parseLinkTitle = Jpt;
var egt = tn.assign, tgt = tn.unescapeAll, Kf = tn.escapeHtml, xl = {};
xl.code_inline = function(n, e, t, r, i) {
  var o = n[e];
  return "<code" + i.renderAttrs(o) + ">" + Kf(o.content) + "</code>";
};
xl.code_block = function(n, e, t, r, i) {
  var o = n[e];
  return "<pre" + i.renderAttrs(o) + "><code>" + Kf(n[e].content) + `</code></pre>
`;
};
xl.fence = function(n, e, t, r, i) {
  var o = n[e], s = o.info ? tgt(o.info).trim() : "", a = "", l = "", u, c, h, f, d;
  return s && (h = s.split(/(\s+)/g), a = h[0], l = h.slice(2).join("")), t.highlight ? u = t.highlight(o.content, a, l) || Kf(o.content) : u = Kf(o.content), u.indexOf("<pre") === 0 ? u + `
` : s ? (c = o.attrIndex("class"), f = o.attrs ? o.attrs.slice() : [], c < 0 ? f.push(["class", t.langPrefix + a]) : (f[c] = f[c].slice(), f[c][1] += " " + t.langPrefix + a), d = {
    attrs: f
  }, "<pre><code" + i.renderAttrs(d) + ">" + u + `</code></pre>
`) : "<pre><code" + i.renderAttrs(o) + ">" + u + `</code></pre>
`;
};
xl.image = function(n, e, t, r, i) {
  var o = n[e];
  return o.attrs[o.attrIndex("alt")][1] = i.renderInlineAsText(o.children, t, r), i.renderToken(n, e, t);
};
xl.hardbreak = function(n, e, t) {
  return t.xhtmlOut ? `<br />
` : `<br>
`;
};
xl.softbreak = function(n, e, t) {
  return t.breaks ? t.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
xl.text = function(n, e) {
  return Kf(n[e].content);
};
xl.html_block = function(n, e) {
  return n[e].content;
};
xl.html_inline = function(n, e) {
  return n[e].content;
};
function av() {
  this.rules = egt({}, xl);
}
av.prototype.renderAttrs = function(e) {
  var t, r, i;
  if (!e.attrs)
    return "";
  for (i = "", t = 0, r = e.attrs.length; t < r; t++)
    i += " " + Kf(e.attrs[t][0]) + '="' + Kf(e.attrs[t][1]) + '"';
  return i;
};
av.prototype.renderToken = function(e, t, r) {
  var i, o = "", s = !1, a = e[t];
  return a.hidden ? "" : (a.block && a.nesting !== -1 && t && e[t - 1].hidden && (o += `
`), o += (a.nesting === -1 ? "</" : "<") + a.tag, o += this.renderAttrs(a), a.nesting === 0 && r.xhtmlOut && (o += " /"), a.block && (s = !0, a.nesting === 1 && t + 1 < e.length && (i = e[t + 1], (i.type === "inline" || i.hidden || i.nesting === -1 && i.tag === a.tag) && (s = !1))), o += s ? `>
` : ">", o);
};
av.prototype.renderInline = function(n, e, t) {
  for (var r, i = "", o = this.rules, s = 0, a = n.length; s < a; s++)
    r = n[s].type, typeof o[r] < "u" ? i += o[r](n, s, e, t, this) : i += this.renderToken(n, s, e);
  return i;
};
av.prototype.renderInlineAsText = function(n, e, t) {
  for (var r = "", i = 0, o = n.length; i < o; i++)
    n[i].type === "text" ? r += n[i].content : n[i].type === "image" ? r += this.renderInlineAsText(n[i].children, e, t) : n[i].type === "softbreak" && (r += `
`);
  return r;
};
av.prototype.render = function(n, e, t) {
  var r, i, o, s = "", a = this.rules;
  for (r = 0, i = n.length; r < i; r++)
    o = n[r].type, o === "inline" ? s += this.renderInline(n[r].children, e, t) : typeof a[o] < "u" ? s += a[o](n, r, e, t, this) : s += this.renderToken(n, r, e, t);
  return s;
};
var ngt = av;
function ma() {
  this.__rules__ = [], this.__cache__ = null;
}
ma.prototype.__find__ = function(n) {
  for (var e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === n)
      return e;
  return -1;
};
ma.prototype.__compile__ = function() {
  var n = this, e = [""];
  n.__rules__.forEach(function(t) {
    t.enabled && t.alt.forEach(function(r) {
      e.indexOf(r) < 0 && e.push(r);
    });
  }), n.__cache__ = {}, e.forEach(function(t) {
    n.__cache__[t] = [], n.__rules__.forEach(function(r) {
      r.enabled && (t && r.alt.indexOf(t) < 0 || n.__cache__[t].push(r.fn));
    });
  });
};
ma.prototype.at = function(n, e, t) {
  var r = this.__find__(n), i = t || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__[r].fn = e, this.__rules__[r].alt = i.alt || [], this.__cache__ = null;
};
ma.prototype.before = function(n, e, t, r) {
  var i = this.__find__(n), o = r || {};
  if (i === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(i, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ma.prototype.after = function(n, e, t, r) {
  var i = this.__find__(n), o = r || {};
  if (i === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(i + 1, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ma.prototype.push = function(n, e, t) {
  var r = t || {};
  this.__rules__.push({
    name: n,
    enabled: !0,
    fn: e,
    alt: r.alt || []
  }), this.__cache__ = null;
};
ma.prototype.enable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(r) {
    var i = this.__find__(r);
    if (i < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + r);
    }
    this.__rules__[i].enabled = !0, t.push(r);
  }, this), this.__cache__ = null, t;
};
ma.prototype.enableOnly = function(n, e) {
  Array.isArray(n) || (n = [n]), this.__rules__.forEach(function(t) {
    t.enabled = !1;
  }), this.enable(n, e);
};
ma.prototype.disable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(r) {
    var i = this.__find__(r);
    if (i < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + r);
    }
    this.__rules__[i].enabled = !1, t.push(r);
  }, this), this.__cache__ = null, t;
};
ma.prototype.getRules = function(n) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[n] || [];
};
var mI = ma, rgt = /\r\n?|\n/g, igt = /\0/g, ogt = function(e) {
  var t;
  t = e.src.replace(rgt, `
`), t = t.replace(igt, "�"), e.src = t;
}, sgt = function(e) {
  var t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}, agt = function(e) {
  var t = e.tokens, r, i, o;
  for (i = 0, o = t.length; i < o; i++)
    r = t[i], r.type === "inline" && e.md.inline.parse(r.content, e.md, e.env, r.children);
}, lgt = tn.arrayReplaceAt;
function ugt(n) {
  return /^<a[>\s]/i.test(n);
}
function cgt(n) {
  return /^<\/a\s*>/i.test(n);
}
var hgt = function(e) {
  var t, r, i, o, s, a, l, u, c, h, f, d, p, g, v, m, y = e.tokens, b;
  if (e.md.options.linkify) {
    for (r = 0, i = y.length; r < i; r++)
      if (!(y[r].type !== "inline" || !e.md.linkify.pretest(y[r].content)))
        for (o = y[r].children, p = 0, t = o.length - 1; t >= 0; t--) {
          if (a = o[t], a.type === "link_close") {
            for (t--; o[t].level !== a.level && o[t].type !== "link_open"; )
              t--;
            continue;
          }
          if (a.type === "html_inline" && (ugt(a.content) && p > 0 && p--, cgt(a.content) && p++), !(p > 0) && a.type === "text" && e.md.linkify.test(a.content)) {
            for (c = a.content, b = e.md.linkify.match(c), l = [], d = a.level, f = 0, b.length > 0 && b[0].index === 0 && t > 0 && o[t - 1].type === "text_special" && (b = b.slice(1)), u = 0; u < b.length; u++)
              g = b[u].url, v = e.md.normalizeLink(g), e.md.validateLink(v) && (m = b[u].text, b[u].schema ? b[u].schema === "mailto:" && !/^mailto:/i.test(m) ? m = e.md.normalizeLinkText("mailto:" + m).replace(/^mailto:/, "") : m = e.md.normalizeLinkText(m) : m = e.md.normalizeLinkText("http://" + m).replace(/^http:\/\//, ""), h = b[u].index, h > f && (s = new e.Token("text", "", 0), s.content = c.slice(f, h), s.level = d, l.push(s)), s = new e.Token("link_open", "a", 1), s.attrs = [["href", v]], s.level = d++, s.markup = "linkify", s.info = "auto", l.push(s), s = new e.Token("text", "", 0), s.content = m, s.level = d, l.push(s), s = new e.Token("link_close", "a", -1), s.level = --d, s.markup = "linkify", s.info = "auto", l.push(s), f = b[u].lastIndex);
            f < c.length && (s = new e.Token("text", "", 0), s.content = c.slice(f), s.level = d, l.push(s)), y[r].children = o = lgt(o, t, l);
          }
        }
  }
}, GX = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, fgt = /\((c|tm|r)\)/i, dgt = /\((c|tm|r)\)/ig, pgt = {
  c: "©",
  r: "®",
  tm: "™"
};
function ggt(n, e) {
  return pgt[e.toLowerCase()];
}
function vgt(n) {
  var e, t, r = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !r && (t.content = t.content.replace(dgt, ggt)), t.type === "link_open" && t.info === "auto" && r--, t.type === "link_close" && t.info === "auto" && r++;
}
function mgt(n) {
  var e, t, r = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !r && GX.test(t.content) && (t.content = t.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), t.type === "link_open" && t.info === "auto" && r--, t.type === "link_close" && t.info === "auto" && r++;
}
var ygt = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (fgt.test(e.tokens[t].content) && vgt(e.tokens[t].children), GX.test(e.tokens[t].content) && mgt(e.tokens[t].children));
}, RV = tn.isWhiteSpace, $V = tn.isPunctChar, NV = tn.isMdAsciiPunct, bgt = /['"]/, BV = /['"]/g, VV = "’";
function E1(n, e, t) {
  return n.slice(0, e) + t + n.slice(e + 1);
}
function Ogt(n, e) {
  var t, r, i, o, s, a, l, u, c, h, f, d, p, g, v, m, y, b, O, w, x;
  for (O = [], t = 0; t < n.length; t++) {
    for (r = n[t], l = n[t].level, y = O.length - 1; y >= 0 && !(O[y].level <= l); y--)
      ;
    if (O.length = y + 1, r.type === "text") {
      i = r.content, s = 0, a = i.length;
      e:
        for (; s < a && (BV.lastIndex = s, o = BV.exec(i), !!o); ) {
          if (v = m = !0, s = o.index + 1, b = o[0] === "'", c = 32, o.index - 1 >= 0)
            c = i.charCodeAt(o.index - 1);
          else
            for (y = t - 1; y >= 0 && !(n[y].type === "softbreak" || n[y].type === "hardbreak"); y--)
              if (n[y].content) {
                c = n[y].content.charCodeAt(n[y].content.length - 1);
                break;
              }
          if (h = 32, s < a)
            h = i.charCodeAt(s);
          else
            for (y = t + 1; y < n.length && !(n[y].type === "softbreak" || n[y].type === "hardbreak"); y++)
              if (n[y].content) {
                h = n[y].content.charCodeAt(0);
                break;
              }
          if (f = NV(c) || $V(String.fromCharCode(c)), d = NV(h) || $V(String.fromCharCode(h)), p = RV(c), g = RV(h), g ? v = !1 : d && (p || f || (v = !1)), p ? m = !1 : f && (g || d || (m = !1)), h === 34 && o[0] === '"' && c >= 48 && c <= 57 && (m = v = !1), v && m && (v = f, m = d), !v && !m) {
            b && (r.content = E1(r.content, o.index, VV));
            continue;
          }
          if (m) {
            for (y = O.length - 1; y >= 0 && (u = O[y], !(O[y].level < l)); y--)
              if (u.single === b && O[y].level === l) {
                u = O[y], b ? (w = e.md.options.quotes[2], x = e.md.options.quotes[3]) : (w = e.md.options.quotes[0], x = e.md.options.quotes[1]), r.content = E1(r.content, o.index, x), n[u.token].content = E1(
                  n[u.token].content,
                  u.pos,
                  w
                ), s += x.length - 1, u.token === t && (s += w.length - 1), i = r.content, a = i.length, O.length = y;
                continue e;
              }
          }
          v ? O.push({
            token: t,
            pos: o.index,
            single: b,
            level: l
          }) : m && b && (r.content = E1(r.content, o.index, VV));
        }
    }
  }
}
var wgt = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !bgt.test(e.tokens[t].content) || Ogt(e.tokens[t].children, e);
}, xgt = function(e) {
  var t, r, i, o, s, a, l = e.tokens;
  for (t = 0, r = l.length; t < r; t++)
    if (l[t].type === "inline") {
      for (i = l[t].children, s = i.length, o = 0; o < s; o++)
        i[o].type === "text_special" && (i[o].type = "text");
      for (o = a = 0; o < s; o++)
        i[o].type === "text" && o + 1 < s && i[o + 1].type === "text" ? i[o + 1].content = i[o].content + i[o + 1].content : (o !== a && (i[a] = i[o]), a++);
      o !== a && (i.length = a);
    }
};
function lv(n, e, t) {
  this.type = n, this.tag = e, this.attrs = null, this.map = null, this.nesting = t, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
lv.prototype.attrIndex = function(e) {
  var t, r, i;
  if (!this.attrs)
    return -1;
  for (t = this.attrs, r = 0, i = t.length; r < i; r++)
    if (t[r][0] === e)
      return r;
  return -1;
};
lv.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
lv.prototype.attrSet = function(e, t) {
  var r = this.attrIndex(e), i = [e, t];
  r < 0 ? this.attrPush(i) : this.attrs[r] = i;
};
lv.prototype.attrGet = function(e) {
  var t = this.attrIndex(e), r = null;
  return t >= 0 && (r = this.attrs[t][1]), r;
};
lv.prototype.attrJoin = function(e, t) {
  var r = this.attrIndex(e);
  r < 0 ? this.attrPush([e, t]) : this.attrs[r][1] = this.attrs[r][1] + " " + t;
};
var yI = lv, Sgt = yI;
function jX(n, e, t) {
  this.src = n, this.env = t, this.tokens = [], this.inlineMode = !1, this.md = e;
}
jX.prototype.Token = Sgt;
var _gt = jX, Cgt = mI, $2 = [
  ["normalize", ogt],
  ["block", sgt],
  ["inline", agt],
  ["linkify", hgt],
  ["replacements", ygt],
  ["smartquotes", wgt],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", xgt]
];
function bI() {
  this.ruler = new Cgt();
  for (var n = 0; n < $2.length; n++)
    this.ruler.push($2[n][0], $2[n][1]);
}
bI.prototype.process = function(n) {
  var e, t, r;
  for (r = this.ruler.getRules(""), e = 0, t = r.length; e < t; e++)
    r[e](n);
};
bI.prototype.State = _gt;
var Agt = bI, N2 = tn.isSpace;
function B2(n, e) {
  var t = n.bMarks[e] + n.tShift[e], r = n.eMarks[e];
  return n.src.slice(t, r);
}
function zV(n) {
  var e = [], t = 0, r = n.length, i, o = !1, s = 0, a = "";
  for (i = n.charCodeAt(t); t < r; )
    i === 124 && (o ? (a += n.substring(s, t - 1), s = t) : (e.push(a + n.substring(s, t)), a = "", s = t + 1)), o = i === 92, t++, i = n.charCodeAt(t);
  return e.push(a + n.substring(s)), e;
}
var Tgt = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f, d, p, g, v, m, y, b, O, w, x;
  if (t + 2 > r || (c = t + 1, e.sCount[c] < e.blkIndent) || e.sCount[c] - e.blkIndent >= 4 || (a = e.bMarks[c] + e.tShift[c], a >= e.eMarks[c]) || (w = e.src.charCodeAt(a++), w !== 124 && w !== 45 && w !== 58) || a >= e.eMarks[c] || (x = e.src.charCodeAt(a++), x !== 124 && x !== 45 && x !== 58 && !N2(x)) || w === 45 && N2(x))
    return !1;
  for (; a < e.eMarks[c]; ) {
    if (o = e.src.charCodeAt(a), o !== 124 && o !== 45 && o !== 58 && !N2(o))
      return !1;
    a++;
  }
  for (s = B2(e, t + 1), h = s.split("|"), p = [], l = 0; l < h.length; l++) {
    if (g = h[l].trim(), !g) {
      if (l === 0 || l === h.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(g))
      return !1;
    g.charCodeAt(g.length - 1) === 58 ? p.push(g.charCodeAt(0) === 58 ? "center" : "right") : g.charCodeAt(0) === 58 ? p.push("left") : p.push("");
  }
  if (s = B2(e, t).trim(), s.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4 || (h = zV(s), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), f = h.length, f === 0 || f !== p.length))
    return !1;
  if (i)
    return !0;
  for (y = e.parentType, e.parentType = "table", O = e.md.block.ruler.getRules("blockquote"), d = e.push("table_open", "table", 1), d.map = v = [t, 0], d = e.push("thead_open", "thead", 1), d.map = [t, t + 1], d = e.push("tr_open", "tr", 1), d.map = [t, t + 1], l = 0; l < h.length; l++)
    d = e.push("th_open", "th", 1), p[l] && (d.attrs = [["style", "text-align:" + p[l]]]), d = e.push("inline", "", 0), d.content = h[l].trim(), d.children = [], d = e.push("th_close", "th", -1);
  for (d = e.push("tr_close", "tr", -1), d = e.push("thead_close", "thead", -1), c = t + 2; c < r && !(e.sCount[c] < e.blkIndent); c++) {
    for (b = !1, l = 0, u = O.length; l < u; l++)
      if (O[l](e, c, r, !0)) {
        b = !0;
        break;
      }
    if (b || (s = B2(e, c).trim(), !s) || e.sCount[c] - e.blkIndent >= 4)
      break;
    for (h = zV(s), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), c === t + 2 && (d = e.push("tbody_open", "tbody", 1), d.map = m = [t + 2, 0]), d = e.push("tr_open", "tr", 1), d.map = [c, c + 1], l = 0; l < f; l++)
      d = e.push("td_open", "td", 1), p[l] && (d.attrs = [["style", "text-align:" + p[l]]]), d = e.push("inline", "", 0), d.content = h[l] ? h[l].trim() : "", d.children = [], d = e.push("td_close", "td", -1);
    d = e.push("tr_close", "tr", -1);
  }
  return m && (d = e.push("tbody_close", "tbody", -1), m[1] = c), d = e.push("table_close", "table", -1), v[1] = c, e.parentType = y, e.line = c, !0;
}, Pgt = function(e, t, r) {
  var i, o, s;
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  for (o = i = t + 1; i < r; ) {
    if (e.isEmpty(i)) {
      i++;
      continue;
    }
    if (e.sCount[i] - e.blkIndent >= 4) {
      i++, o = i;
      continue;
    }
    break;
  }
  return e.line = o, s = e.push("code_block", "code", 0), s.content = e.getLines(t, o, 4 + e.blkIndent, !1) + `
`, s.map = [t, e.line], !0;
}, Egt = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f = !1, d = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || d + 3 > p || (o = e.src.charCodeAt(d), o !== 126 && o !== 96) || (u = d, d = e.skipChars(d, o), s = d - u, s < 3) || (h = e.src.slice(u, d), a = e.src.slice(d, p), o === 96 && a.indexOf(String.fromCharCode(o)) >= 0))
    return !1;
  if (i)
    return !0;
  for (l = t; l++, !(l >= r || (d = u = e.bMarks[l] + e.tShift[l], p = e.eMarks[l], d < p && e.sCount[l] < e.blkIndent)); )
    if (e.src.charCodeAt(d) === o && !(e.sCount[l] - e.blkIndent >= 4) && (d = e.skipChars(d, o), !(d - u < s) && (d = e.skipSpaces(d), !(d < p)))) {
      f = !0;
      break;
    }
  return s = e.sCount[t], e.line = l + (f ? 1 : 0), c = e.push("fence", "code", 0), c.info = a, c.content = e.getLines(t + 1, l, s, !0), c.markup = h, c.map = [t, e.line], !0;
}, kgt = tn.isSpace, Mgt = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f, d, p, g, v, m, y, b, O, w, x, S, _, C = e.lineMax, A = e.bMarks[t] + e.tShift[t], T = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(A) !== 62)
    return !1;
  if (i)
    return !0;
  for (p = [], g = [], y = [], b = [], x = e.md.block.ruler.getRules("blockquote"), m = e.parentType, e.parentType = "blockquote", f = t; f < r && (_ = e.sCount[f] < e.blkIndent, A = e.bMarks[f] + e.tShift[f], T = e.eMarks[f], !(A >= T)); f++) {
    if (e.src.charCodeAt(A++) === 62 && !_) {
      for (l = e.sCount[f] + 1, e.src.charCodeAt(A) === 32 ? (A++, l++, o = !1, O = !0) : e.src.charCodeAt(A) === 9 ? (O = !0, (e.bsCount[f] + l) % 4 === 3 ? (A++, l++, o = !1) : o = !0) : O = !1, d = l, p.push(e.bMarks[f]), e.bMarks[f] = A; A < T && (s = e.src.charCodeAt(A), kgt(s)); ) {
        s === 9 ? d += 4 - (d + e.bsCount[f] + (o ? 1 : 0)) % 4 : d++;
        A++;
      }
      c = A >= T, g.push(e.bsCount[f]), e.bsCount[f] = e.sCount[f] + 1 + (O ? 1 : 0), y.push(e.sCount[f]), e.sCount[f] = d - l, b.push(e.tShift[f]), e.tShift[f] = A - e.bMarks[f];
      continue;
    }
    if (c)
      break;
    for (w = !1, a = 0, u = x.length; a < u; a++)
      if (x[a](e, f, r, !0)) {
        w = !0;
        break;
      }
    if (w) {
      e.lineMax = f, e.blkIndent !== 0 && (p.push(e.bMarks[f]), g.push(e.bsCount[f]), b.push(e.tShift[f]), y.push(e.sCount[f]), e.sCount[f] -= e.blkIndent);
      break;
    }
    p.push(e.bMarks[f]), g.push(e.bsCount[f]), b.push(e.tShift[f]), y.push(e.sCount[f]), e.sCount[f] = -1;
  }
  for (v = e.blkIndent, e.blkIndent = 0, S = e.push("blockquote_open", "blockquote", 1), S.markup = ">", S.map = h = [t, 0], e.md.block.tokenize(e, t, f), S = e.push("blockquote_close", "blockquote", -1), S.markup = ">", e.lineMax = C, e.parentType = m, h[1] = e.line, a = 0; a < b.length; a++)
    e.bMarks[a + t] = p[a], e.tShift[a + t] = b[a], e.sCount[a + t] = y[a], e.bsCount[a + t] = g[a];
  return e.blkIndent = v, !0;
}, Dgt = tn.isSpace, Lgt = function(e, t, r, i) {
  var o, s, a, l, u = e.bMarks[t] + e.tShift[t], c = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (o = e.src.charCodeAt(u++), o !== 42 && o !== 45 && o !== 95))
    return !1;
  for (s = 1; u < c; ) {
    if (a = e.src.charCodeAt(u++), a !== o && !Dgt(a))
      return !1;
    a === o && s++;
  }
  return s < 3 ? !1 : (i || (e.line = t + 1, l = e.push("hr", "hr", 0), l.map = [t, e.line], l.markup = Array(s + 1).join(String.fromCharCode(o))), !0);
}, HX = tn.isSpace;
function FV(n, e) {
  var t, r, i, o;
  return r = n.bMarks[e] + n.tShift[e], i = n.eMarks[e], t = n.src.charCodeAt(r++), t !== 42 && t !== 45 && t !== 43 || r < i && (o = n.src.charCodeAt(r), !HX(o)) ? -1 : r;
}
function QV(n, e) {
  var t, r = n.bMarks[e] + n.tShift[e], i = r, o = n.eMarks[e];
  if (i + 1 >= o || (t = n.src.charCodeAt(i++), t < 48 || t > 57))
    return -1;
  for (; ; ) {
    if (i >= o)
      return -1;
    if (t = n.src.charCodeAt(i++), t >= 48 && t <= 57) {
      if (i - r >= 10)
        return -1;
      continue;
    }
    if (t === 41 || t === 46)
      break;
    return -1;
  }
  return i < o && (t = n.src.charCodeAt(i), !HX(t)) ? -1 : i;
}
function Igt(n, e) {
  var t, r, i = n.level + 2;
  for (t = e + 2, r = n.tokens.length - 2; t < r; t++)
    n.tokens[t].level === i && n.tokens[t].type === "paragraph_open" && (n.tokens[t + 2].hidden = !0, n.tokens[t].hidden = !0, t += 2);
}
var Rgt = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f, d, p, g, v, m, y, b, O, w, x, S, _, C, A, T, k, L, D, E, M = t, R = !1, N = !0;
  if (e.sCount[M] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[M] - e.listIndent >= 4 && e.sCount[M] < e.blkIndent)
    return !1;
  if (i && e.parentType === "paragraph" && e.sCount[M] >= e.blkIndent && (R = !0), (A = QV(e, M)) >= 0) {
    if (h = !0, k = e.bMarks[M] + e.tShift[M], m = Number(e.src.slice(k, A - 1)), R && m !== 1)
      return !1;
  } else if ((A = FV(e, M)) >= 0)
    h = !1;
  else
    return !1;
  if (R && e.skipSpaces(A) >= e.eMarks[M])
    return !1;
  if (i)
    return !0;
  for (v = e.src.charCodeAt(A - 1), g = e.tokens.length, h ? (E = e.push("ordered_list_open", "ol", 1), m !== 1 && (E.attrs = [["start", m]])) : E = e.push("bullet_list_open", "ul", 1), E.map = p = [M, 0], E.markup = String.fromCharCode(v), T = !1, D = e.md.block.ruler.getRules("list"), w = e.parentType, e.parentType = "list"; M < r; ) {
    for (C = A, y = e.eMarks[M], c = b = e.sCount[M] + A - (e.bMarks[M] + e.tShift[M]); C < y; ) {
      if (o = e.src.charCodeAt(C), o === 9)
        b += 4 - (b + e.bsCount[M]) % 4;
      else if (o === 32)
        b++;
      else
        break;
      C++;
    }
    if (s = C, s >= y ? u = 1 : u = b - c, u > 4 && (u = 1), l = c + u, E = e.push("list_item_open", "li", 1), E.markup = String.fromCharCode(v), E.map = f = [M, 0], h && (E.info = e.src.slice(k, A - 1)), _ = e.tight, S = e.tShift[M], x = e.sCount[M], O = e.listIndent, e.listIndent = e.blkIndent, e.blkIndent = l, e.tight = !0, e.tShift[M] = s - e.bMarks[M], e.sCount[M] = b, s >= y && e.isEmpty(M + 1) ? e.line = Math.min(e.line + 2, r) : e.md.block.tokenize(e, M, r, !0), (!e.tight || T) && (N = !1), T = e.line - M > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = O, e.tShift[M] = S, e.sCount[M] = x, e.tight = _, E = e.push("list_item_close", "li", -1), E.markup = String.fromCharCode(v), M = e.line, f[1] = M, M >= r || e.sCount[M] < e.blkIndent || e.sCount[M] - e.blkIndent >= 4)
      break;
    for (L = !1, a = 0, d = D.length; a < d; a++)
      if (D[a](e, M, r, !0)) {
        L = !0;
        break;
      }
    if (L)
      break;
    if (h) {
      if (A = QV(e, M), A < 0)
        break;
      k = e.bMarks[M] + e.tShift[M];
    } else if (A = FV(e, M), A < 0)
      break;
    if (v !== e.src.charCodeAt(A - 1))
      break;
  }
  return h ? E = e.push("ordered_list_close", "ol", -1) : E = e.push("bullet_list_close", "ul", -1), E.markup = String.fromCharCode(v), p[1] = M, e.line = M, e.parentType = w, N && Igt(e, g), !0;
}, $gt = tn.normalizeReference, k1 = tn.isSpace, Ngt = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f, d, p, g, v, m, y, b, O, w = 0, x = e.bMarks[t] + e.tShift[t], S = e.eMarks[t], _ = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(x) !== 91)
    return !1;
  for (; ++x < S; )
    if (e.src.charCodeAt(x) === 93 && e.src.charCodeAt(x - 1) !== 92) {
      if (x + 1 === S || e.src.charCodeAt(x + 1) !== 58)
        return !1;
      break;
    }
  for (l = e.lineMax, b = e.md.block.ruler.getRules("reference"), p = e.parentType, e.parentType = "reference"; _ < l && !e.isEmpty(_); _++)
    if (!(e.sCount[_] - e.blkIndent > 3) && !(e.sCount[_] < 0)) {
      for (y = !1, c = 0, h = b.length; c < h; c++)
        if (b[c](e, _, l, !0)) {
          y = !0;
          break;
        }
      if (y)
        break;
    }
  for (m = e.getLines(t, _, e.blkIndent, !1).trim(), S = m.length, x = 1; x < S; x++) {
    if (o = m.charCodeAt(x), o === 91)
      return !1;
    if (o === 93) {
      d = x;
      break;
    } else
      o === 10 ? w++ : o === 92 && (x++, x < S && m.charCodeAt(x) === 10 && w++);
  }
  if (d < 0 || m.charCodeAt(d + 1) !== 58)
    return !1;
  for (x = d + 2; x < S; x++)
    if (o = m.charCodeAt(x), o === 10)
      w++;
    else if (!k1(o))
      break;
  if (g = e.md.helpers.parseLinkDestination(m, x, S), !g.ok || (u = e.md.normalizeLink(g.str), !e.md.validateLink(u)))
    return !1;
  for (x = g.pos, w += g.lines, s = x, a = w, v = x; x < S; x++)
    if (o = m.charCodeAt(x), o === 10)
      w++;
    else if (!k1(o))
      break;
  for (g = e.md.helpers.parseLinkTitle(m, x, S), x < S && v !== x && g.ok ? (O = g.str, x = g.pos, w += g.lines) : (O = "", x = s, w = a); x < S && (o = m.charCodeAt(x), !!k1(o)); )
    x++;
  if (x < S && m.charCodeAt(x) !== 10 && O)
    for (O = "", x = s, w = a; x < S && (o = m.charCodeAt(x), !!k1(o)); )
      x++;
  return x < S && m.charCodeAt(x) !== 10 || (f = $gt(m.slice(1, d)), !f) ? !1 : (i || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[f] > "u" && (e.env.references[f] = { title: O, href: u }), e.parentType = p, e.line = t + w + 1), !0);
}, Bgt = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "source",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], $_ = {}, Vgt = "[a-zA-Z_:][a-zA-Z0-9:._-]*", zgt = "[^\"'=<>`\\x00-\\x20]+", Fgt = "'[^']*'", Qgt = '"[^"]*"', Zgt = "(?:" + zgt + "|" + Fgt + "|" + Qgt + ")", Wgt = "(?:\\s+" + Vgt + "(?:\\s*=\\s*" + Zgt + ")?)", qX = "<[A-Za-z][A-Za-z0-9\\-]*" + Wgt + "*\\s*\\/?>", YX = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", Ggt = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", jgt = "<[?][\\s\\S]*?[?]>", Hgt = "<![A-Z]+\\s+[^>]*>", qgt = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", Ygt = new RegExp("^(?:" + qX + "|" + YX + "|" + Ggt + "|" + jgt + "|" + Hgt + "|" + qgt + ")"), Xgt = new RegExp("^(?:" + qX + "|" + YX + ")");
$_.HTML_TAG_RE = Ygt;
$_.HTML_OPEN_CLOSE_TAG_RE = Xgt;
var Ugt = Bgt, Kgt = $_.HTML_OPEN_CLOSE_TAG_RE, Rd = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + Ugt.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(Kgt.source + "\\s*$"), /^$/, !1]
], Jgt = function(e, t, r, i) {
  var o, s, a, l, u = e.bMarks[t] + e.tShift[t], c = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(u) !== 60)
    return !1;
  for (l = e.src.slice(u, c), o = 0; o < Rd.length && !Rd[o][0].test(l); o++)
    ;
  if (o === Rd.length)
    return !1;
  if (i)
    return Rd[o][2];
  if (s = t + 1, !Rd[o][1].test(l)) {
    for (; s < r && !(e.sCount[s] < e.blkIndent); s++)
      if (u = e.bMarks[s] + e.tShift[s], c = e.eMarks[s], l = e.src.slice(u, c), Rd[o][1].test(l)) {
        l.length !== 0 && s++;
        break;
      }
  }
  return e.line = s, a = e.push("html_block", "", 0), a.map = [t, s], a.content = e.getLines(t, s, e.blkIndent, !0), !0;
}, ZV = tn.isSpace, evt = function(e, t, r, i) {
  var o, s, a, l, u = e.bMarks[t] + e.tShift[t], c = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (o = e.src.charCodeAt(u), o !== 35 || u >= c))
    return !1;
  for (s = 1, o = e.src.charCodeAt(++u); o === 35 && u < c && s <= 6; )
    s++, o = e.src.charCodeAt(++u);
  return s > 6 || u < c && !ZV(o) ? !1 : (i || (c = e.skipSpacesBack(c, u), a = e.skipCharsBack(c, 35, u), a > u && ZV(e.src.charCodeAt(a - 1)) && (c = a), e.line = t + 1, l = e.push("heading_open", "h" + String(s), 1), l.markup = "########".slice(0, s), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = e.src.slice(u, c).trim(), l.map = [t, e.line], l.children = [], l = e.push("heading_close", "h" + String(s), -1), l.markup = "########".slice(0, s)), !0);
}, tvt = function(e, t, r) {
  var i, o, s, a, l, u, c, h, f, d = t + 1, p, g = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  for (p = e.parentType, e.parentType = "paragraph"; d < r && !e.isEmpty(d); d++)
    if (!(e.sCount[d] - e.blkIndent > 3)) {
      if (e.sCount[d] >= e.blkIndent && (u = e.bMarks[d] + e.tShift[d], c = e.eMarks[d], u < c && (f = e.src.charCodeAt(u), (f === 45 || f === 61) && (u = e.skipChars(u, f), u = e.skipSpaces(u), u >= c)))) {
        h = f === 61 ? 1 : 2;
        break;
      }
      if (!(e.sCount[d] < 0)) {
        for (o = !1, s = 0, a = g.length; s < a; s++)
          if (g[s](e, d, r, !0)) {
            o = !0;
            break;
          }
        if (o)
          break;
      }
    }
  return h ? (i = e.getLines(t, d, e.blkIndent, !1).trim(), e.line = d + 1, l = e.push("heading_open", "h" + String(h), 1), l.markup = String.fromCharCode(f), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = i, l.map = [t, e.line - 1], l.children = [], l = e.push("heading_close", "h" + String(h), -1), l.markup = String.fromCharCode(f), e.parentType = p, !0) : !1;
}, nvt = function(e, t, r) {
  var i, o, s, a, l, u, c = t + 1, h = e.md.block.ruler.getRules("paragraph");
  for (u = e.parentType, e.parentType = "paragraph"; c < r && !e.isEmpty(c); c++)
    if (!(e.sCount[c] - e.blkIndent > 3) && !(e.sCount[c] < 0)) {
      for (o = !1, s = 0, a = h.length; s < a; s++)
        if (h[s](e, c, r, !0)) {
          o = !0;
          break;
        }
      if (o)
        break;
    }
  return i = e.getLines(t, c, e.blkIndent, !1).trim(), e.line = c, l = e.push("paragraph_open", "p", 1), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = i, l.map = [t, e.line], l.children = [], l = e.push("paragraph_close", "p", -1), e.parentType = u, !0;
}, XX = yI, N_ = tn.isSpace;
function Sl(n, e, t, r) {
  var i, o, s, a, l, u, c, h;
  for (this.src = n, this.md = e, this.env = t, this.tokens = r, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", o = this.src, h = !1, s = a = u = c = 0, l = o.length; a < l; a++) {
    if (i = o.charCodeAt(a), !h)
      if (N_(i)) {
        u++, i === 9 ? c += 4 - c % 4 : c++;
        continue;
      } else
        h = !0;
    (i === 10 || a === l - 1) && (i !== 10 && a++, this.bMarks.push(s), this.eMarks.push(a), this.tShift.push(u), this.sCount.push(c), this.bsCount.push(0), h = !1, u = 0, c = 0, s = a + 1);
  }
  this.bMarks.push(o.length), this.eMarks.push(o.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
Sl.prototype.push = function(n, e, t) {
  var r = new XX(n, e, t);
  return r.block = !0, t < 0 && this.level--, r.level = this.level, t > 0 && this.level++, this.tokens.push(r), r;
};
Sl.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
Sl.prototype.skipEmptyLines = function(e) {
  for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
Sl.prototype.skipSpaces = function(e) {
  for (var t, r = this.src.length; e < r && (t = this.src.charCodeAt(e), !!N_(t)); e++)
    ;
  return e;
};
Sl.prototype.skipSpacesBack = function(e, t) {
  if (e <= t)
    return e;
  for (; e > t; )
    if (!N_(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
Sl.prototype.skipChars = function(e, t) {
  for (var r = this.src.length; e < r && this.src.charCodeAt(e) === t; e++)
    ;
  return e;
};
Sl.prototype.skipCharsBack = function(e, t, r) {
  if (e <= r)
    return e;
  for (; e > r; )
    if (t !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
Sl.prototype.getLines = function(e, t, r, i) {
  var o, s, a, l, u, c, h, f = e;
  if (e >= t)
    return "";
  for (c = new Array(t - e), o = 0; f < t; f++, o++) {
    for (s = 0, h = l = this.bMarks[f], f + 1 < t || i ? u = this.eMarks[f] + 1 : u = this.eMarks[f]; l < u && s < r; ) {
      if (a = this.src.charCodeAt(l), N_(a))
        a === 9 ? s += 4 - (s + this.bsCount[f]) % 4 : s++;
      else if (l - h < this.tShift[f])
        s++;
      else
        break;
      l++;
    }
    s > r ? c[o] = new Array(s - r + 1).join(" ") + this.src.slice(l, u) : c[o] = this.src.slice(l, u);
  }
  return c.join("");
};
Sl.prototype.Token = XX;
var rvt = Sl, ivt = mI, M1 = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", Tgt, ["paragraph", "reference"]],
  ["code", Pgt],
  ["fence", Egt, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", Mgt, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", Lgt, ["paragraph", "reference", "blockquote", "list"]],
  ["list", Rgt, ["paragraph", "reference", "blockquote"]],
  ["reference", Ngt],
  ["html_block", Jgt, ["paragraph", "reference", "blockquote"]],
  ["heading", evt, ["paragraph", "reference", "blockquote"]],
  ["lheading", tvt],
  ["paragraph", nvt]
];
function B_() {
  this.ruler = new ivt();
  for (var n = 0; n < M1.length; n++)
    this.ruler.push(M1[n][0], M1[n][1], { alt: (M1[n][2] || []).slice() });
}
B_.prototype.tokenize = function(n, e, t) {
  for (var r, i, o, s = this.ruler.getRules(""), a = s.length, l = e, u = !1, c = n.md.options.maxNesting; l < t && (n.line = l = n.skipEmptyLines(l), !(l >= t || n.sCount[l] < n.blkIndent)); ) {
    if (n.level >= c) {
      n.line = t;
      break;
    }
    for (o = n.line, i = 0; i < a; i++)
      if (r = s[i](n, l, t, !1), r) {
        if (o >= n.line)
          throw new Error("block rule didn't increment state.line");
        break;
      }
    if (!r)
      throw new Error("none of the block rules matched");
    n.tight = !u, n.isEmpty(n.line - 1) && (u = !0), l = n.line, l < t && n.isEmpty(l) && (u = !0, l++, n.line = l);
  }
};
B_.prototype.parse = function(n, e, t, r) {
  var i;
  n && (i = new this.State(n, e, t, r), this.tokenize(i, i.line, i.lineMax));
};
B_.prototype.State = rvt;
var ovt = B_;
function svt(n) {
  switch (n) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
var avt = function(e, t) {
  for (var r = e.pos; r < e.posMax && !svt(e.src.charCodeAt(r)); )
    r++;
  return r === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, r)), e.pos = r, !0);
}, lvt = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i, uvt = function(e, t) {
  var r, i, o, s, a, l, u, c;
  return !e.md.options.linkify || e.linkLevel > 0 || (r = e.pos, i = e.posMax, r + 3 > i) || e.src.charCodeAt(r) !== 58 || e.src.charCodeAt(r + 1) !== 47 || e.src.charCodeAt(r + 2) !== 47 || (o = e.pending.match(lvt), !o) || (s = o[1], a = e.md.linkify.matchAtStart(e.src.slice(r - s.length)), !a) || (l = a.url, l.length <= s.length) || (l = l.replace(/\*+$/, ""), u = e.md.normalizeLink(l), !e.md.validateLink(u)) ? !1 : (t || (e.pending = e.pending.slice(0, -s.length), c = e.push("link_open", "a", 1), c.attrs = [["href", u]], c.markup = "linkify", c.info = "auto", c = e.push("text", "", 0), c.content = e.md.normalizeLinkText(l), c = e.push("link_close", "a", -1), c.markup = "linkify", c.info = "auto"), e.pos += l.length - s.length, !0);
}, cvt = tn.isSpace, hvt = function(e, t) {
  var r, i, o, s = e.pos;
  if (e.src.charCodeAt(s) !== 10)
    return !1;
  if (r = e.pending.length - 1, i = e.posMax, !t)
    if (r >= 0 && e.pending.charCodeAt(r) === 32)
      if (r >= 1 && e.pending.charCodeAt(r - 1) === 32) {
        for (o = r - 1; o >= 1 && e.pending.charCodeAt(o - 1) === 32; )
          o--;
        e.pending = e.pending.slice(0, o), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (s++; s < i && cvt(e.src.charCodeAt(s)); )
    s++;
  return e.pos = s, !0;
}, fvt = tn.isSpace, OI = [];
for (var WV = 0; WV < 256; WV++)
  OI.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(n) {
  OI[n.charCodeAt(0)] = 1;
});
var dvt = function(e, t) {
  var r, i, o, s, a, l = e.pos, u = e.posMax;
  if (e.src.charCodeAt(l) !== 92 || (l++, l >= u))
    return !1;
  if (r = e.src.charCodeAt(l), r === 10) {
    for (t || e.push("hardbreak", "br", 0), l++; l < u && (r = e.src.charCodeAt(l), !!fvt(r)); )
      l++;
    return e.pos = l, !0;
  }
  return s = e.src[l], r >= 55296 && r <= 56319 && l + 1 < u && (i = e.src.charCodeAt(l + 1), i >= 56320 && i <= 57343 && (s += e.src[l + 1], l++)), o = "\\" + s, t || (a = e.push("text_special", "", 0), r < 256 && OI[r] !== 0 ? a.content = s : a.content = o, a.markup = o, a.info = "escape"), e.pos = l + 1, !0;
}, pvt = function(e, t) {
  var r, i, o, s, a, l, u, c, h = e.pos, f = e.src.charCodeAt(h);
  if (f !== 96)
    return !1;
  for (r = h, h++, i = e.posMax; h < i && e.src.charCodeAt(h) === 96; )
    h++;
  if (o = e.src.slice(r, h), u = o.length, e.backticksScanned && (e.backticks[u] || 0) <= r)
    return t || (e.pending += o), e.pos += u, !0;
  for (l = h; (a = e.src.indexOf("`", l)) !== -1; ) {
    for (l = a + 1; l < i && e.src.charCodeAt(l) === 96; )
      l++;
    if (c = l - a, c === u)
      return t || (s = e.push("code_inline", "code", 0), s.markup = o, s.content = e.src.slice(h, a).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e.pos = l, !0;
    e.backticks[c] = a;
  }
  return e.backticksScanned = !0, t || (e.pending += o), e.pos += u, !0;
}, V_ = {};
V_.tokenize = function(e, t) {
  var r, i, o, s, a, l = e.pos, u = e.src.charCodeAt(l);
  if (t || u !== 126 || (i = e.scanDelims(e.pos, !0), s = i.length, a = String.fromCharCode(u), s < 2))
    return !1;
  for (s % 2 && (o = e.push("text", "", 0), o.content = a, s--), r = 0; r < s; r += 2)
    o = e.push("text", "", 0), o.content = a + a, e.delimiters.push({
      marker: u,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: i.can_open,
      close: i.can_close
    });
  return e.pos += i.length, !0;
};
function GV(n, e) {
  var t, r, i, o, s, a = [], l = e.length;
  for (t = 0; t < l; t++)
    i = e[t], i.marker === 126 && i.end !== -1 && (o = e[i.end], s = n.tokens[i.token], s.type = "s_open", s.tag = "s", s.nesting = 1, s.markup = "~~", s.content = "", s = n.tokens[o.token], s.type = "s_close", s.tag = "s", s.nesting = -1, s.markup = "~~", s.content = "", n.tokens[o.token - 1].type === "text" && n.tokens[o.token - 1].content === "~" && a.push(o.token - 1));
  for (; a.length; ) {
    for (t = a.pop(), r = t + 1; r < n.tokens.length && n.tokens[r].type === "s_close"; )
      r++;
    r--, t !== r && (s = n.tokens[r], n.tokens[r] = n.tokens[t], n.tokens[t] = s);
  }
}
V_.postProcess = function(e) {
  var t, r = e.tokens_meta, i = e.tokens_meta.length;
  for (GV(e, e.delimiters), t = 0; t < i; t++)
    r[t] && r[t].delimiters && GV(e, r[t].delimiters);
};
var z_ = {};
z_.tokenize = function(e, t) {
  var r, i, o, s = e.pos, a = e.src.charCodeAt(s);
  if (t || a !== 95 && a !== 42)
    return !1;
  for (i = e.scanDelims(e.pos, a === 42), r = 0; r < i.length; r++)
    o = e.push("text", "", 0), o.content = String.fromCharCode(a), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: a,
      // Total length of these series of delimiters.
      //
      length: i.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: i.can_open,
      close: i.can_close
    });
  return e.pos += i.length, !0;
};
function jV(n, e) {
  var t, r, i, o, s, a, l = e.length;
  for (t = l - 1; t >= 0; t--)
    r = e[t], !(r.marker !== 95 && r.marker !== 42) && r.end !== -1 && (i = e[r.end], a = t > 0 && e[t - 1].end === r.end + 1 && // check that first two markers match and adjacent
    e[t - 1].marker === r.marker && e[t - 1].token === r.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[r.end + 1].token === i.token + 1, s = String.fromCharCode(r.marker), o = n.tokens[r.token], o.type = a ? "strong_open" : "em_open", o.tag = a ? "strong" : "em", o.nesting = 1, o.markup = a ? s + s : s, o.content = "", o = n.tokens[i.token], o.type = a ? "strong_close" : "em_close", o.tag = a ? "strong" : "em", o.nesting = -1, o.markup = a ? s + s : s, o.content = "", a && (n.tokens[e[t - 1].token].content = "", n.tokens[e[r.end + 1].token].content = "", t--));
}
z_.postProcess = function(e) {
  var t, r = e.tokens_meta, i = e.tokens_meta.length;
  for (jV(e, e.delimiters), t = 0; t < i; t++)
    r[t] && r[t].delimiters && jV(e, r[t].delimiters);
};
var gvt = tn.normalizeReference, V2 = tn.isSpace, vvt = function(e, t) {
  var r, i, o, s, a, l, u, c, h, f = "", d = "", p = e.pos, g = e.posMax, v = e.pos, m = !0;
  if (e.src.charCodeAt(e.pos) !== 91 || (a = e.pos + 1, s = e.md.helpers.parseLinkLabel(e, e.pos, !0), s < 0))
    return !1;
  if (l = s + 1, l < g && e.src.charCodeAt(l) === 40) {
    for (m = !1, l++; l < g && (i = e.src.charCodeAt(l), !(!V2(i) && i !== 10)); l++)
      ;
    if (l >= g)
      return !1;
    if (v = l, u = e.md.helpers.parseLinkDestination(e.src, l, e.posMax), u.ok) {
      for (f = e.md.normalizeLink(u.str), e.md.validateLink(f) ? l = u.pos : f = "", v = l; l < g && (i = e.src.charCodeAt(l), !(!V2(i) && i !== 10)); l++)
        ;
      if (u = e.md.helpers.parseLinkTitle(e.src, l, e.posMax), l < g && v !== l && u.ok)
        for (d = u.str, l = u.pos; l < g && (i = e.src.charCodeAt(l), !(!V2(i) && i !== 10)); l++)
          ;
    }
    (l >= g || e.src.charCodeAt(l) !== 41) && (m = !0), l++;
  }
  if (m) {
    if (typeof e.env.references > "u")
      return !1;
    if (l < g && e.src.charCodeAt(l) === 91 ? (v = l + 1, l = e.md.helpers.parseLinkLabel(e, l), l >= 0 ? o = e.src.slice(v, l++) : l = s + 1) : l = s + 1, o || (o = e.src.slice(a, s)), c = e.env.references[gvt(o)], !c)
      return e.pos = p, !1;
    f = c.href, d = c.title;
  }
  return t || (e.pos = a, e.posMax = s, h = e.push("link_open", "a", 1), h.attrs = r = [["href", f]], d && r.push(["title", d]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, h = e.push("link_close", "a", -1)), e.pos = l, e.posMax = g, !0;
}, mvt = tn.normalizeReference, z2 = tn.isSpace, yvt = function(e, t) {
  var r, i, o, s, a, l, u, c, h, f, d, p, g, v = "", m = e.pos, y = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91 || (l = e.pos + 2, a = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1), a < 0))
    return !1;
  if (u = a + 1, u < y && e.src.charCodeAt(u) === 40) {
    for (u++; u < y && (i = e.src.charCodeAt(u), !(!z2(i) && i !== 10)); u++)
      ;
    if (u >= y)
      return !1;
    for (g = u, h = e.md.helpers.parseLinkDestination(e.src, u, e.posMax), h.ok && (v = e.md.normalizeLink(h.str), e.md.validateLink(v) ? u = h.pos : v = ""), g = u; u < y && (i = e.src.charCodeAt(u), !(!z2(i) && i !== 10)); u++)
      ;
    if (h = e.md.helpers.parseLinkTitle(e.src, u, e.posMax), u < y && g !== u && h.ok)
      for (f = h.str, u = h.pos; u < y && (i = e.src.charCodeAt(u), !(!z2(i) && i !== 10)); u++)
        ;
    else
      f = "";
    if (u >= y || e.src.charCodeAt(u) !== 41)
      return e.pos = m, !1;
    u++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (u < y && e.src.charCodeAt(u) === 91 ? (g = u + 1, u = e.md.helpers.parseLinkLabel(e, u), u >= 0 ? s = e.src.slice(g, u++) : u = a + 1) : u = a + 1, s || (s = e.src.slice(l, a)), c = e.env.references[mvt(s)], !c)
      return e.pos = m, !1;
    v = c.href, f = c.title;
  }
  return t || (o = e.src.slice(l, a), e.md.inline.parse(
    o,
    e.md,
    e.env,
    p = []
  ), d = e.push("image", "img", 0), d.attrs = r = [["src", v], ["alt", ""]], d.children = p, d.content = o, f && r.push(["title", f])), e.pos = u, e.posMax = y, !0;
}, bvt = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, Ovt = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, wvt = function(e, t) {
  var r, i, o, s, a, l, u = e.pos;
  if (e.src.charCodeAt(u) !== 60)
    return !1;
  for (a = e.pos, l = e.posMax; ; ) {
    if (++u >= l || (s = e.src.charCodeAt(u), s === 60))
      return !1;
    if (s === 62)
      break;
  }
  return r = e.src.slice(a + 1, u), Ovt.test(r) ? (i = e.md.normalizeLink(r), e.md.validateLink(i) ? (t || (o = e.push("link_open", "a", 1), o.attrs = [["href", i]], o.markup = "autolink", o.info = "auto", o = e.push("text", "", 0), o.content = e.md.normalizeLinkText(r), o = e.push("link_close", "a", -1), o.markup = "autolink", o.info = "auto"), e.pos += r.length + 2, !0) : !1) : bvt.test(r) ? (i = e.md.normalizeLink("mailto:" + r), e.md.validateLink(i) ? (t || (o = e.push("link_open", "a", 1), o.attrs = [["href", i]], o.markup = "autolink", o.info = "auto", o = e.push("text", "", 0), o.content = e.md.normalizeLinkText(r), o = e.push("link_close", "a", -1), o.markup = "autolink", o.info = "auto"), e.pos += r.length + 2, !0) : !1) : !1;
}, xvt = $_.HTML_TAG_RE;
function Svt(n) {
  return /^<a[>\s]/i.test(n);
}
function _vt(n) {
  return /^<\/a\s*>/i.test(n);
}
function Cvt(n) {
  var e = n | 32;
  return e >= 97 && e <= 122;
}
var Avt = function(e, t) {
  var r, i, o, s, a = e.pos;
  return !e.md.options.html || (o = e.posMax, e.src.charCodeAt(a) !== 60 || a + 2 >= o) || (r = e.src.charCodeAt(a + 1), r !== 33 && r !== 63 && r !== 47 && !Cvt(r)) || (i = e.src.slice(a).match(xvt), !i) ? !1 : (t || (s = e.push("html_inline", "", 0), s.content = i[0], Svt(s.content) && e.linkLevel++, _vt(s.content) && e.linkLevel--), e.pos += i[0].length, !0);
}, HV = FX, Tvt = tn.has, Pvt = tn.isValidEntityCode, qV = tn.fromCodePoint, Evt = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, kvt = /^&([a-z][a-z0-9]{1,31});/i, Mvt = function(e, t) {
  var r, i, o, s, a = e.pos, l = e.posMax;
  if (e.src.charCodeAt(a) !== 38 || a + 1 >= l)
    return !1;
  if (r = e.src.charCodeAt(a + 1), r === 35) {
    if (o = e.src.slice(a).match(Evt), o)
      return t || (i = o[1][0].toLowerCase() === "x" ? parseInt(o[1].slice(1), 16) : parseInt(o[1], 10), s = e.push("text_special", "", 0), s.content = Pvt(i) ? qV(i) : qV(65533), s.markup = o[0], s.info = "entity"), e.pos += o[0].length, !0;
  } else if (o = e.src.slice(a).match(kvt), o && Tvt(HV, o[1]))
    return t || (s = e.push("text_special", "", 0), s.content = HV[o[1]], s.markup = o[0], s.info = "entity"), e.pos += o[0].length, !0;
  return !1;
};
function YV(n) {
  var e, t, r, i, o, s, a, l, u = {}, c = n.length;
  if (c) {
    var h = 0, f = -2, d = [];
    for (e = 0; e < c; e++)
      if (r = n[e], d.push(0), (n[h].marker !== r.marker || f !== r.token - 1) && (h = e), f = r.token, r.length = r.length || 0, !!r.close) {
        for (u.hasOwnProperty(r.marker) || (u[r.marker] = [-1, -1, -1, -1, -1, -1]), o = u[r.marker][(r.open ? 3 : 0) + r.length % 3], t = h - d[h] - 1, s = t; t > o; t -= d[t] + 1)
          if (i = n[t], i.marker === r.marker && i.open && i.end < 0 && (a = !1, (i.close || r.open) && (i.length + r.length) % 3 === 0 && (i.length % 3 !== 0 || r.length % 3 !== 0) && (a = !0), !a)) {
            l = t > 0 && !n[t - 1].open ? d[t - 1] + 1 : 0, d[e] = e - t + l, d[t] = l, r.open = !1, i.end = e, i.close = !1, s = -1, f = -2;
            break;
          }
        s !== -1 && (u[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = s);
      }
  }
}
var Dvt = function(e) {
  var t, r = e.tokens_meta, i = e.tokens_meta.length;
  for (YV(e.delimiters), t = 0; t < i; t++)
    r[t] && r[t].delimiters && YV(r[t].delimiters);
}, Lvt = function(e) {
  var t, r, i = 0, o = e.tokens, s = e.tokens.length;
  for (t = r = 0; t < s; t++)
    o[t].nesting < 0 && i--, o[t].level = i, o[t].nesting > 0 && i++, o[t].type === "text" && t + 1 < s && o[t + 1].type === "text" ? o[t + 1].content = o[t].content + o[t + 1].content : (t !== r && (o[r] = o[t]), r++);
  t !== r && (o.length = r);
}, wI = yI, XV = tn.isWhiteSpace, UV = tn.isPunctChar, KV = tn.isMdAsciiPunct;
function yb(n, e, t, r) {
  this.src = n, this.env = t, this.md = e, this.tokens = r, this.tokens_meta = Array(r.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
yb.prototype.pushPending = function() {
  var n = new wI("text", "", 0);
  return n.content = this.pending, n.level = this.pendingLevel, this.tokens.push(n), this.pending = "", n;
};
yb.prototype.push = function(n, e, t) {
  this.pending && this.pushPending();
  var r = new wI(n, e, t), i = null;
  return t < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), r.level = this.level, t > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], i = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(r), this.tokens_meta.push(i), r;
};
yb.prototype.scanDelims = function(n, e) {
  var t = n, r, i, o, s, a, l, u, c, h, f = !0, d = !0, p = this.posMax, g = this.src.charCodeAt(n);
  for (r = n > 0 ? this.src.charCodeAt(n - 1) : 32; t < p && this.src.charCodeAt(t) === g; )
    t++;
  return o = t - n, i = t < p ? this.src.charCodeAt(t) : 32, u = KV(r) || UV(String.fromCharCode(r)), h = KV(i) || UV(String.fromCharCode(i)), l = XV(r), c = XV(i), c ? f = !1 : h && (l || u || (f = !1)), l ? d = !1 : u && (c || h || (d = !1)), e ? (s = f, a = d) : (s = f && (!d || u), a = d && (!f || h)), {
    can_open: s,
    can_close: a,
    length: o
  };
};
yb.prototype.Token = wI;
var Ivt = yb, JV = mI, F2 = [
  ["text", avt],
  ["linkify", uvt],
  ["newline", hvt],
  ["escape", dvt],
  ["backticks", pvt],
  ["strikethrough", V_.tokenize],
  ["emphasis", z_.tokenize],
  ["link", vvt],
  ["image", yvt],
  ["autolink", wvt],
  ["html_inline", Avt],
  ["entity", Mvt]
], Q2 = [
  ["balance_pairs", Dvt],
  ["strikethrough", V_.postProcess],
  ["emphasis", z_.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", Lvt]
];
function bb() {
  var n;
  for (this.ruler = new JV(), n = 0; n < F2.length; n++)
    this.ruler.push(F2[n][0], F2[n][1]);
  for (this.ruler2 = new JV(), n = 0; n < Q2.length; n++)
    this.ruler2.push(Q2[n][0], Q2[n][1]);
}
bb.prototype.skipToken = function(n) {
  var e, t, r = n.pos, i = this.ruler.getRules(""), o = i.length, s = n.md.options.maxNesting, a = n.cache;
  if (typeof a[r] < "u") {
    n.pos = a[r];
    return;
  }
  if (n.level < s) {
    for (t = 0; t < o; t++)
      if (n.level++, e = i[t](n, !0), n.level--, e) {
        if (r >= n.pos)
          throw new Error("inline rule didn't increment state.pos");
        break;
      }
  } else
    n.pos = n.posMax;
  e || n.pos++, a[r] = n.pos;
};
bb.prototype.tokenize = function(n) {
  for (var e, t, r, i = this.ruler.getRules(""), o = i.length, s = n.posMax, a = n.md.options.maxNesting; n.pos < s; ) {
    if (r = n.pos, n.level < a) {
      for (t = 0; t < o; t++)
        if (e = i[t](n, !1), e) {
          if (r >= n.pos)
            throw new Error("inline rule didn't increment state.pos");
          break;
        }
    }
    if (e) {
      if (n.pos >= s)
        break;
      continue;
    }
    n.pending += n.src[n.pos++];
  }
  n.pending && n.pushPending();
};
bb.prototype.parse = function(n, e, t, r) {
  var i, o, s, a = new this.State(n, e, t, r);
  for (this.tokenize(a), o = this.ruler2.getRules(""), s = o.length, i = 0; i < s; i++)
    o[i](a);
};
bb.prototype.State = Ivt;
var Rvt = bb, Z2, e4;
function $vt() {
  return e4 || (e4 = 1, Z2 = function(n) {
    var e = {};
    n = n || {}, e.src_Any = QX().source, e.src_Cc = ZX().source, e.src_Z = WX().source, e.src_P = vI.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
    var t = "[><｜]";
    return e.src_pseudo_letter = "(?:(?!" + t + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + t + "|" + e.src_ZPCc + ")(?!" + (n["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + t + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (n["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
    "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + t + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
  }), Z2;
}
function mk(n) {
  var e = Array.prototype.slice.call(arguments, 1);
  return e.forEach(function(t) {
    t && Object.keys(t).forEach(function(r) {
      n[r] = t[r];
    });
  }), n;
}
function F_(n) {
  return Object.prototype.toString.call(n);
}
function Nvt(n) {
  return F_(n) === "[object String]";
}
function Bvt(n) {
  return F_(n) === "[object Object]";
}
function Vvt(n) {
  return F_(n) === "[object RegExp]";
}
function t4(n) {
  return F_(n) === "[object Function]";
}
function zvt(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var UX = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function Fvt(n) {
  return Object.keys(n || {}).reduce(function(e, t) {
    return e || UX.hasOwnProperty(t);
  }, !1);
}
var Qvt = {
  "http:": {
    validate: function(n, e, t) {
      var r = n.slice(e);
      return t.re.http || (t.re.http = new RegExp(
        "^\\/\\/" + t.re.src_auth + t.re.src_host_port_strict + t.re.src_path,
        "i"
      )), t.re.http.test(r) ? r.match(t.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(n, e, t) {
      var r = n.slice(e);
      return t.re.no_http || (t.re.no_http = new RegExp(
        "^" + t.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + t.re.src_domain + ")\\.)+" + t.re.src_domain_root + ")" + t.re.src_port + t.re.src_host_terminator + t.re.src_path,
        "i"
      )), t.re.no_http.test(r) ? e >= 3 && n[e - 3] === ":" || e >= 3 && n[e - 3] === "/" ? 0 : r.match(t.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(n, e, t) {
      var r = n.slice(e);
      return t.re.mailto || (t.re.mailto = new RegExp(
        "^" + t.re.src_email_name + "@" + t.re.src_host_strict,
        "i"
      )), t.re.mailto.test(r) ? r.match(t.re.mailto)[0].length : 0;
    }
  }
}, Zvt = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", Wvt = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function Gvt(n) {
  n.__index__ = -1, n.__text_cache__ = "";
}
function jvt(n) {
  return function(e, t) {
    var r = e.slice(t);
    return n.test(r) ? r.match(n)[0].length : 0;
  };
}
function n4() {
  return function(n, e) {
    e.normalize(n);
  };
}
function Ix(n) {
  var e = n.re = $vt()(n.__opts__), t = n.__tlds__.slice();
  n.onCompile(), n.__tlds_replaced__ || t.push(Zvt), t.push(e.src_xn), e.src_tlds = t.join("|");
  function r(a) {
    return a.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(r(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(r(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(r(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(r(e.tpl_host_fuzzy_test), "i");
  var i = [];
  n.__compiled__ = {};
  function o(a, l) {
    throw new Error('(LinkifyIt) Invalid schema "' + a + '": ' + l);
  }
  Object.keys(n.__schemas__).forEach(function(a) {
    var l = n.__schemas__[a];
    if (l !== null) {
      var u = { validate: null, link: null };
      if (n.__compiled__[a] = u, Bvt(l)) {
        Vvt(l.validate) ? u.validate = jvt(l.validate) : t4(l.validate) ? u.validate = l.validate : o(a, l), t4(l.normalize) ? u.normalize = l.normalize : l.normalize ? o(a, l) : u.normalize = n4();
        return;
      }
      if (Nvt(l)) {
        i.push(a);
        return;
      }
      o(a, l);
    }
  }), i.forEach(function(a) {
    n.__compiled__[n.__schemas__[a]] && (n.__compiled__[a].validate = n.__compiled__[n.__schemas__[a]].validate, n.__compiled__[a].normalize = n.__compiled__[n.__schemas__[a]].normalize);
  }), n.__compiled__[""] = { validate: null, normalize: n4() };
  var s = Object.keys(n.__compiled__).filter(function(a) {
    return a.length > 0 && n.__compiled__[a];
  }).map(zvt).join("|");
  n.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + s + ")", "i"), n.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + s + ")", "ig"), n.re.schema_at_start = RegExp("^" + n.re.schema_search.source, "i"), n.re.pretest = RegExp(
    "(" + n.re.schema_test.source + ")|(" + n.re.host_fuzzy_test.source + ")|@",
    "i"
  ), Gvt(n);
}
function Hvt(n, e) {
  var t = n.__index__, r = n.__last_index__, i = n.__text_cache__.slice(t, r);
  this.schema = n.__schema__.toLowerCase(), this.index = t + e, this.lastIndex = r + e, this.raw = i, this.text = i, this.url = i;
}
function yk(n, e) {
  var t = new Hvt(n, e);
  return n.__compiled__[t.schema].normalize(t, n), t;
}
function Wo(n, e) {
  if (!(this instanceof Wo))
    return new Wo(n, e);
  e || Fvt(n) && (e = n, n = {}), this.__opts__ = mk({}, UX, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = mk({}, Qvt, n), this.__compiled__ = {}, this.__tlds__ = Wvt, this.__tlds_replaced__ = !1, this.re = {}, Ix(this);
}
Wo.prototype.add = function(e, t) {
  return this.__schemas__[e] = t, Ix(this), this;
};
Wo.prototype.set = function(e) {
  return this.__opts__ = mk(this.__opts__, e), this;
};
Wo.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  var t, r, i, o, s, a, l, u, c;
  if (this.re.schema_test.test(e)) {
    for (l = this.re.schema_search, l.lastIndex = 0; (t = l.exec(e)) !== null; )
      if (o = this.testSchemaAt(e, t[2], l.lastIndex), o) {
        this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + o;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (u = e.search(this.re.host_fuzzy_test), u >= 0 && (this.__index__ < 0 || u < this.__index__) && (r = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (s = r.index + r[1].length, (this.__index__ < 0 || s < this.__index__) && (this.__schema__ = "", this.__index__ = s, this.__last_index__ = r.index + r[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (c = e.indexOf("@"), c >= 0 && (i = e.match(this.re.email_fuzzy)) !== null && (s = i.index + i[1].length, a = i.index + i[0].length, (this.__index__ < 0 || s < this.__index__ || s === this.__index__ && a > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = s, this.__last_index__ = a))), this.__index__ >= 0;
};
Wo.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
Wo.prototype.testSchemaAt = function(e, t, r) {
  return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, r, this) : 0;
};
Wo.prototype.match = function(e) {
  var t = 0, r = [];
  this.__index__ >= 0 && this.__text_cache__ === e && (r.push(yk(this, t)), t = this.__last_index__);
  for (var i = t ? e.slice(t) : e; this.test(i); )
    r.push(yk(this, t)), i = i.slice(this.__last_index__), t += this.__last_index__;
  return r.length ? r : null;
};
Wo.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return null;
  var t = this.re.schema_at_start.exec(e);
  if (!t)
    return null;
  var r = this.testSchemaAt(e, t[2], t[0].length);
  return r ? (this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + r, yk(this, 0)) : null;
};
Wo.prototype.tlds = function(e, t) {
  return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(r, i, o) {
    return r !== o[i - 1];
  }).reverse(), Ix(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, Ix(this), this);
};
Wo.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
Wo.prototype.onCompile = function() {
};
var qvt = Wo;
const Lp = 2147483647, Ga = 36, xI = 1, p0 = 26, Yvt = 38, Xvt = 700, KX = 72, JX = 128, eU = "-", Uvt = /^xn--/, Kvt = /[^\0-\x7F]/, Jvt = /[\x2E\u3002\uFF0E\uFF61]/g, emt = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, W2 = Ga - xI, ja = Math.floor, G2 = String.fromCharCode;
function Zu(n) {
  throw new RangeError(emt[n]);
}
function tmt(n, e) {
  const t = [];
  let r = n.length;
  for (; r--; )
    t[r] = e(n[r]);
  return t;
}
function tU(n, e) {
  const t = n.split("@");
  let r = "";
  t.length > 1 && (r = t[0] + "@", n = t[1]), n = n.replace(Jvt, ".");
  const i = n.split("."), o = tmt(i, e).join(".");
  return r + o;
}
function SI(n) {
  const e = [];
  let t = 0;
  const r = n.length;
  for (; t < r; ) {
    const i = n.charCodeAt(t++);
    if (i >= 55296 && i <= 56319 && t < r) {
      const o = n.charCodeAt(t++);
      (o & 64512) == 56320 ? e.push(((i & 1023) << 10) + (o & 1023) + 65536) : (e.push(i), t--);
    } else
      e.push(i);
  }
  return e;
}
const nU = (n) => String.fromCodePoint(...n), nmt = function(n) {
  return n >= 48 && n < 58 ? 26 + (n - 48) : n >= 65 && n < 91 ? n - 65 : n >= 97 && n < 123 ? n - 97 : Ga;
}, r4 = function(n, e) {
  return n + 22 + 75 * (n < 26) - ((e != 0) << 5);
}, rU = function(n, e, t) {
  let r = 0;
  for (n = t ? ja(n / Xvt) : n >> 1, n += ja(n / e); n > W2 * p0 >> 1; r += Ga)
    n = ja(n / W2);
  return ja(r + (W2 + 1) * n / (n + Yvt));
}, _I = function(n) {
  const e = [], t = n.length;
  let r = 0, i = JX, o = KX, s = n.lastIndexOf(eU);
  s < 0 && (s = 0);
  for (let a = 0; a < s; ++a)
    n.charCodeAt(a) >= 128 && Zu("not-basic"), e.push(n.charCodeAt(a));
  for (let a = s > 0 ? s + 1 : 0; a < t; ) {
    const l = r;
    for (let c = 1, h = Ga; ; h += Ga) {
      a >= t && Zu("invalid-input");
      const f = nmt(n.charCodeAt(a++));
      f >= Ga && Zu("invalid-input"), f > ja((Lp - r) / c) && Zu("overflow"), r += f * c;
      const d = h <= o ? xI : h >= o + p0 ? p0 : h - o;
      if (f < d)
        break;
      const p = Ga - d;
      c > ja(Lp / p) && Zu("overflow"), c *= p;
    }
    const u = e.length + 1;
    o = rU(r - l, u, l == 0), ja(r / u) > Lp - i && Zu("overflow"), i += ja(r / u), r %= u, e.splice(r++, 0, i);
  }
  return String.fromCodePoint(...e);
}, CI = function(n) {
  const e = [];
  n = SI(n);
  const t = n.length;
  let r = JX, i = 0, o = KX;
  for (const l of n)
    l < 128 && e.push(G2(l));
  const s = e.length;
  let a = s;
  for (s && e.push(eU); a < t; ) {
    let l = Lp;
    for (const c of n)
      c >= r && c < l && (l = c);
    const u = a + 1;
    l - r > ja((Lp - i) / u) && Zu("overflow"), i += (l - r) * u, r = l;
    for (const c of n)
      if (c < r && ++i > Lp && Zu("overflow"), c === r) {
        let h = i;
        for (let f = Ga; ; f += Ga) {
          const d = f <= o ? xI : f >= o + p0 ? p0 : f - o;
          if (h < d)
            break;
          const p = h - d, g = Ga - d;
          e.push(
            G2(r4(d + p % g, 0))
          ), h = ja(p / g);
        }
        e.push(G2(r4(h, 0))), o = rU(i, u, a === s), i = 0, ++a;
      }
    ++i, ++r;
  }
  return e.join("");
}, iU = function(n) {
  return tU(n, function(e) {
    return Uvt.test(e) ? _I(e.slice(4).toLowerCase()) : e;
  });
}, oU = function(n) {
  return tU(n, function(e) {
    return Kvt.test(e) ? "xn--" + CI(e) : e;
  });
}, rmt = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.3.1",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: SI,
    encode: nU
  },
  decode: _I,
  encode: CI,
  toASCII: oU,
  toUnicode: iU
}, imt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: _I,
  default: rmt,
  encode: CI,
  toASCII: oU,
  toUnicode: iU,
  ucs2decode: SI,
  ucs2encode: nU
}, Symbol.toStringTag, { value: "Module" })), omt = /* @__PURE__ */ o0e(imt);
var smt = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 100
    // Internal protection, recursion limit
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, amt = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, lmt = {
  options: {
    html: !0,
    // Enable HTML tags in source
    xhtmlOut: !0,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, uy = tn, umt = R_, cmt = ngt, hmt = Agt, fmt = ovt, dmt = Rvt, pmt = qvt, lf = sv, sU = omt, gmt = {
  default: smt,
  zero: amt,
  commonmark: lmt
}, vmt = /^(vbscript|javascript|file|data):/, mmt = /^data:image\/(gif|png|jpeg|webp);/;
function ymt(n) {
  var e = n.trim().toLowerCase();
  return vmt.test(e) ? !!mmt.test(e) : !0;
}
var aU = ["http:", "https:", "mailto:"];
function bmt(n) {
  var e = lf.parse(n, !0);
  if (e.hostname && (!e.protocol || aU.indexOf(e.protocol) >= 0))
    try {
      e.hostname = sU.toASCII(e.hostname);
    } catch {
    }
  return lf.encode(lf.format(e));
}
function Omt(n) {
  var e = lf.parse(n, !0);
  if (e.hostname && (!e.protocol || aU.indexOf(e.protocol) >= 0))
    try {
      e.hostname = sU.toUnicode(e.hostname);
    } catch {
    }
  return lf.decode(lf.format(e), lf.decode.defaultChars + "%");
}
function Cs(n, e) {
  if (!(this instanceof Cs))
    return new Cs(n, e);
  e || uy.isString(n) || (e = n || {}, n = "default"), this.inline = new dmt(), this.block = new fmt(), this.core = new hmt(), this.renderer = new cmt(), this.linkify = new pmt(), this.validateLink = ymt, this.normalizeLink = bmt, this.normalizeLinkText = Omt, this.utils = uy, this.helpers = uy.assign({}, umt), this.options = {}, this.configure(n), e && this.set(e);
}
Cs.prototype.set = function(n) {
  return uy.assign(this.options, n), this;
};
Cs.prototype.configure = function(n) {
  var e = this, t;
  if (uy.isString(n) && (t = n, n = gmt[t], !n))
    throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
  if (!n)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return n.options && e.set(n.options), n.components && Object.keys(n.components).forEach(function(r) {
    n.components[r].rules && e[r].ruler.enableOnly(n.components[r].rules), n.components[r].rules2 && e[r].ruler2.enableOnly(n.components[r].rules2);
  }), this;
};
Cs.prototype.enable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(i) {
    t = t.concat(this[i].ruler.enable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.enable(n, !0));
  var r = n.filter(function(i) {
    return t.indexOf(i) < 0;
  });
  if (r.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + r);
  return this;
};
Cs.prototype.disable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(i) {
    t = t.concat(this[i].ruler.disable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.disable(n, !0));
  var r = n.filter(function(i) {
    return t.indexOf(i) < 0;
  });
  if (r.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + r);
  return this;
};
Cs.prototype.use = function(n) {
  var e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return n.apply(n, e), this;
};
Cs.prototype.parse = function(n, e) {
  if (typeof n != "string")
    throw new Error("Input data should be a String");
  var t = new this.core.State(n, this, e);
  return this.core.process(t), t.tokens;
};
Cs.prototype.render = function(n, e) {
  return e = e || {}, this.renderer.render(this.parse(n, e), this.options, e);
};
Cs.prototype.parseInline = function(n, e) {
  var t = new this.core.State(n, this, e);
  return t.inlineMode = !0, this.core.process(t), t.tokens;
};
Cs.prototype.renderInline = function(n, e) {
  return e = e || {}, this.renderer.render(this.parseInline(n, e), this.options, e);
};
var wmt = Cs, xmt = wmt;
const Smt = /* @__PURE__ */ ab(xmt), i4 = /* @__PURE__ */ new Set([!0, !1, "alt", "title"]);
function lU(n, e) {
  return (Array.isArray(n) ? n : []).filter(([t]) => t !== e);
}
function uU(n, e) {
  n && n.attrs && (n.attrs = lU(n.attrs, e));
}
function _mt(n, e) {
  if (!i4.has(n))
    throw new TypeError(`figcaption must be one of: ${[...i4]}.`);
  if (n === "alt")
    return e.content;
  const t = e.attrs.find(([r]) => r === "title");
  return Array.isArray(t) && t[1] ? (uU(e, "title"), t[1]) : void 0;
}
function Cmt(n, e) {
  e = e || {}, n.core.ruler.before("linkify", "image_figures", function(t) {
    let r = 1;
    for (let i = 1, o = t.tokens.length; i < o - 1; ++i) {
      const s = t.tokens[i];
      if (s.type !== "inline" || !s.children || s.children.length !== 1 && s.children.length !== 3 || s.children.length === 1 && s.children[0].type !== "image")
        continue;
      if (s.children.length === 3) {
        const [u, c, h] = s.children;
        if (u.type !== "link_open" || c.type !== "image" || h.type !== "link_close")
          continue;
      }
      if (i !== 0 && t.tokens[i - 1].type !== "paragraph_open" || i !== o - 1 && t.tokens[i + 1].type !== "paragraph_close")
        continue;
      const a = t.tokens[i - 1];
      let l;
      if (a.type = "figure_open", a.tag = "figure", t.tokens[i + 1].type = "figure_close", t.tokens[i + 1].tag = "figure", e.dataType && t.tokens[i - 1].attrPush(["data-type", "image"]), e.link && s.children.length === 1) {
        [l] = s.children;
        const u = new t.Token("link_open", "a", 1);
        u.attrPush(["href", l.attrGet("src")]), s.children.unshift(u), s.children.push(new t.Token("link_close", "a", -1));
      }
      if (l = s.children.length === 1 ? s.children[0] : s.children[1], e.figcaption) {
        const u = _mt(e.figcaption, l);
        if (u) {
          const [c] = n.parseInline(u, t.env);
          s.children.push(new t.Token("figcaption_open", "figcaption", 1)), s.children.push(...c.children), s.children.push(new t.Token("figcaption_close", "figcaption", -1)), l.attrs && (l.attrs = lU(l.attrs, "title"));
        }
      }
      if (e.copyAttrs && l.attrs) {
        const u = e.copyAttrs === !0 ? "" : e.copyAttrs;
        a.attrs = l.attrs.filter(([c]) => c.match(u)).map((c) => Array.from(c));
      }
      if (e.tabindex && (t.tokens[i - 1].attrPush(["tabindex", r]), r++), e.lazy && (l.attrs.some(([u]) => u === "loading") || l.attrs.push(["loading", "lazy"])), e.async && (l.attrs.some(([u]) => u === "decoding") || l.attrs.push(["decoding", "async"])), e.classes && typeof e.classes == "string") {
        let u = !1;
        for (let c = 0, h = l.attrs.length; c < h && !u; c++) {
          const f = l.attrs[c];
          f[0] === "class" && (f[1] = `${f[1]} ${e.classes}`, u = !0);
        }
        u || l.attrs.push(["class", e.classes]);
      }
      if (e.removeSrc) {
        const u = l.attrs.find(([c]) => c === "src");
        l.attrs.push(["data-src", u[1]]), uU(l, "src");
      }
    }
  });
}
var bk = !0, cU = !1, hU = !1, Amt = function(n, e) {
  e && (bk = !e.enabled, cU = !!e.label, hU = !!e.labelAfter), n.core.ruler.after("inline", "github-task-lists", function(t) {
    for (var r = t.tokens, i = 2; i < r.length; i++)
      Pmt(r, i) && (Emt(r[i], t.Token), o4(r[i - 2], "class", "task-list-item" + (bk ? "" : " enabled")), o4(r[Tmt(r, i - 2)], "class", "contains-task-list"));
  });
};
function o4(n, e, t) {
  var r = n.attrIndex(e), i = [e, t];
  r < 0 ? n.attrPush(i) : n.attrs[r] = i;
}
function Tmt(n, e) {
  for (var t = n[e].level - 1, r = e - 1; r >= 0; r--)
    if (n[r].level === t)
      return r;
  return -1;
}
function Pmt(n, e) {
  return Imt(n[e]) && Rmt(n[e - 1]) && $mt(n[e - 2]) && Nmt(n[e]);
}
function Emt(n, e) {
  if (n.children.unshift(kmt(n, e)), n.children[1].content = n.children[1].content.slice(3), n.content = n.content.slice(3), cU)
    if (hU) {
      n.children.pop();
      var t = "task-item-" + Math.ceil(Math.random() * (1e4 * 1e3) - 1e3);
      n.children[0].content = n.children[0].content.slice(0, -1) + ' id="' + t + '">', n.children.push(Lmt(n.content, t, e));
    } else
      n.children.unshift(Mmt(e)), n.children.push(Dmt(e));
}
function kmt(n, e) {
  var t = new e("html_inline", "", 0), r = bk ? ' disabled="" ' : "";
  return n.content.indexOf("[ ] ") === 0 ? t.content = '<input class="task-list-item-checkbox"' + r + 'type="checkbox">' : (n.content.indexOf("[x] ") === 0 || n.content.indexOf("[X] ") === 0) && (t.content = '<input class="task-list-item-checkbox" checked=""' + r + 'type="checkbox">'), t;
}
function Mmt(n) {
  var e = new n("html_inline", "", 0);
  return e.content = "<label>", e;
}
function Dmt(n) {
  var e = new n("html_inline", "", 0);
  return e.content = "</label>", e;
}
function Lmt(n, e, t) {
  var r = new t("html_inline", "", 0);
  return r.content = '<label class="task-list-item-label" for="' + e + '">' + n + "</label>", r.attrs = [{ for: e }], r;
}
function Imt(n) {
  return n.type === "inline";
}
function Rmt(n) {
  return n.type === "paragraph_open";
}
function $mt(n) {
  return n.type === "list_item_open";
}
function Nmt(n) {
  return n.content.indexOf("[ ] ") === 0 || n.content.indexOf("[x] ") === 0 || n.content.indexOf("[X] ") === 0;
}
const Bmt = /* @__PURE__ */ ab(Amt);
var Ok = { exports: {} }, Qn = {}, wk = { exports: {} }, gd = {};
function fU() {
  var n = {};
  return n["align-content"] = !1, n["align-items"] = !1, n["align-self"] = !1, n["alignment-adjust"] = !1, n["alignment-baseline"] = !1, n.all = !1, n["anchor-point"] = !1, n.animation = !1, n["animation-delay"] = !1, n["animation-direction"] = !1, n["animation-duration"] = !1, n["animation-fill-mode"] = !1, n["animation-iteration-count"] = !1, n["animation-name"] = !1, n["animation-play-state"] = !1, n["animation-timing-function"] = !1, n.azimuth = !1, n["backface-visibility"] = !1, n.background = !0, n["background-attachment"] = !0, n["background-clip"] = !0, n["background-color"] = !0, n["background-image"] = !0, n["background-origin"] = !0, n["background-position"] = !0, n["background-repeat"] = !0, n["background-size"] = !0, n["baseline-shift"] = !1, n.binding = !1, n.bleed = !1, n["bookmark-label"] = !1, n["bookmark-level"] = !1, n["bookmark-state"] = !1, n.border = !0, n["border-bottom"] = !0, n["border-bottom-color"] = !0, n["border-bottom-left-radius"] = !0, n["border-bottom-right-radius"] = !0, n["border-bottom-style"] = !0, n["border-bottom-width"] = !0, n["border-collapse"] = !0, n["border-color"] = !0, n["border-image"] = !0, n["border-image-outset"] = !0, n["border-image-repeat"] = !0, n["border-image-slice"] = !0, n["border-image-source"] = !0, n["border-image-width"] = !0, n["border-left"] = !0, n["border-left-color"] = !0, n["border-left-style"] = !0, n["border-left-width"] = !0, n["border-radius"] = !0, n["border-right"] = !0, n["border-right-color"] = !0, n["border-right-style"] = !0, n["border-right-width"] = !0, n["border-spacing"] = !0, n["border-style"] = !0, n["border-top"] = !0, n["border-top-color"] = !0, n["border-top-left-radius"] = !0, n["border-top-right-radius"] = !0, n["border-top-style"] = !0, n["border-top-width"] = !0, n["border-width"] = !0, n.bottom = !1, n["box-decoration-break"] = !0, n["box-shadow"] = !0, n["box-sizing"] = !0, n["box-snap"] = !0, n["box-suppress"] = !0, n["break-after"] = !0, n["break-before"] = !0, n["break-inside"] = !0, n["caption-side"] = !1, n.chains = !1, n.clear = !0, n.clip = !1, n["clip-path"] = !1, n["clip-rule"] = !1, n.color = !0, n["color-interpolation-filters"] = !0, n["column-count"] = !1, n["column-fill"] = !1, n["column-gap"] = !1, n["column-rule"] = !1, n["column-rule-color"] = !1, n["column-rule-style"] = !1, n["column-rule-width"] = !1, n["column-span"] = !1, n["column-width"] = !1, n.columns = !1, n.contain = !1, n.content = !1, n["counter-increment"] = !1, n["counter-reset"] = !1, n["counter-set"] = !1, n.crop = !1, n.cue = !1, n["cue-after"] = !1, n["cue-before"] = !1, n.cursor = !1, n.direction = !1, n.display = !0, n["display-inside"] = !0, n["display-list"] = !0, n["display-outside"] = !0, n["dominant-baseline"] = !1, n.elevation = !1, n["empty-cells"] = !1, n.filter = !1, n.flex = !1, n["flex-basis"] = !1, n["flex-direction"] = !1, n["flex-flow"] = !1, n["flex-grow"] = !1, n["flex-shrink"] = !1, n["flex-wrap"] = !1, n.float = !1, n["float-offset"] = !1, n["flood-color"] = !1, n["flood-opacity"] = !1, n["flow-from"] = !1, n["flow-into"] = !1, n.font = !0, n["font-family"] = !0, n["font-feature-settings"] = !0, n["font-kerning"] = !0, n["font-language-override"] = !0, n["font-size"] = !0, n["font-size-adjust"] = !0, n["font-stretch"] = !0, n["font-style"] = !0, n["font-synthesis"] = !0, n["font-variant"] = !0, n["font-variant-alternates"] = !0, n["font-variant-caps"] = !0, n["font-variant-east-asian"] = !0, n["font-variant-ligatures"] = !0, n["font-variant-numeric"] = !0, n["font-variant-position"] = !0, n["font-weight"] = !0, n.grid = !1, n["grid-area"] = !1, n["grid-auto-columns"] = !1, n["grid-auto-flow"] = !1, n["grid-auto-rows"] = !1, n["grid-column"] = !1, n["grid-column-end"] = !1, n["grid-column-start"] = !1, n["grid-row"] = !1, n["grid-row-end"] = !1, n["grid-row-start"] = !1, n["grid-template"] = !1, n["grid-template-areas"] = !1, n["grid-template-columns"] = !1, n["grid-template-rows"] = !1, n["hanging-punctuation"] = !1, n.height = !0, n.hyphens = !1, n.icon = !1, n["image-orientation"] = !1, n["image-resolution"] = !1, n["ime-mode"] = !1, n["initial-letters"] = !1, n["inline-box-align"] = !1, n["justify-content"] = !1, n["justify-items"] = !1, n["justify-self"] = !1, n.left = !1, n["letter-spacing"] = !0, n["lighting-color"] = !0, n["line-box-contain"] = !1, n["line-break"] = !1, n["line-grid"] = !1, n["line-height"] = !1, n["line-snap"] = !1, n["line-stacking"] = !1, n["line-stacking-ruby"] = !1, n["line-stacking-shift"] = !1, n["line-stacking-strategy"] = !1, n["list-style"] = !0, n["list-style-image"] = !0, n["list-style-position"] = !0, n["list-style-type"] = !0, n.margin = !0, n["margin-bottom"] = !0, n["margin-left"] = !0, n["margin-right"] = !0, n["margin-top"] = !0, n["marker-offset"] = !1, n["marker-side"] = !1, n.marks = !1, n.mask = !1, n["mask-box"] = !1, n["mask-box-outset"] = !1, n["mask-box-repeat"] = !1, n["mask-box-slice"] = !1, n["mask-box-source"] = !1, n["mask-box-width"] = !1, n["mask-clip"] = !1, n["mask-image"] = !1, n["mask-origin"] = !1, n["mask-position"] = !1, n["mask-repeat"] = !1, n["mask-size"] = !1, n["mask-source-type"] = !1, n["mask-type"] = !1, n["max-height"] = !0, n["max-lines"] = !1, n["max-width"] = !0, n["min-height"] = !0, n["min-width"] = !0, n["move-to"] = !1, n["nav-down"] = !1, n["nav-index"] = !1, n["nav-left"] = !1, n["nav-right"] = !1, n["nav-up"] = !1, n["object-fit"] = !1, n["object-position"] = !1, n.opacity = !1, n.order = !1, n.orphans = !1, n.outline = !1, n["outline-color"] = !1, n["outline-offset"] = !1, n["outline-style"] = !1, n["outline-width"] = !1, n.overflow = !1, n["overflow-wrap"] = !1, n["overflow-x"] = !1, n["overflow-y"] = !1, n.padding = !0, n["padding-bottom"] = !0, n["padding-left"] = !0, n["padding-right"] = !0, n["padding-top"] = !0, n.page = !1, n["page-break-after"] = !1, n["page-break-before"] = !1, n["page-break-inside"] = !1, n["page-policy"] = !1, n.pause = !1, n["pause-after"] = !1, n["pause-before"] = !1, n.perspective = !1, n["perspective-origin"] = !1, n.pitch = !1, n["pitch-range"] = !1, n["play-during"] = !1, n.position = !1, n["presentation-level"] = !1, n.quotes = !1, n["region-fragment"] = !1, n.resize = !1, n.rest = !1, n["rest-after"] = !1, n["rest-before"] = !1, n.richness = !1, n.right = !1, n.rotation = !1, n["rotation-point"] = !1, n["ruby-align"] = !1, n["ruby-merge"] = !1, n["ruby-position"] = !1, n["shape-image-threshold"] = !1, n["shape-outside"] = !1, n["shape-margin"] = !1, n.size = !1, n.speak = !1, n["speak-as"] = !1, n["speak-header"] = !1, n["speak-numeral"] = !1, n["speak-punctuation"] = !1, n["speech-rate"] = !1, n.stress = !1, n["string-set"] = !1, n["tab-size"] = !1, n["table-layout"] = !1, n["text-align"] = !0, n["text-align-last"] = !0, n["text-combine-upright"] = !0, n["text-decoration"] = !0, n["text-decoration-color"] = !0, n["text-decoration-line"] = !0, n["text-decoration-skip"] = !0, n["text-decoration-style"] = !0, n["text-emphasis"] = !0, n["text-emphasis-color"] = !0, n["text-emphasis-position"] = !0, n["text-emphasis-style"] = !0, n["text-height"] = !0, n["text-indent"] = !0, n["text-justify"] = !0, n["text-orientation"] = !0, n["text-overflow"] = !0, n["text-shadow"] = !0, n["text-space-collapse"] = !0, n["text-transform"] = !0, n["text-underline-position"] = !0, n["text-wrap"] = !0, n.top = !1, n.transform = !1, n["transform-origin"] = !1, n["transform-style"] = !1, n.transition = !1, n["transition-delay"] = !1, n["transition-duration"] = !1, n["transition-property"] = !1, n["transition-timing-function"] = !1, n["unicode-bidi"] = !1, n["vertical-align"] = !1, n.visibility = !1, n["voice-balance"] = !1, n["voice-duration"] = !1, n["voice-family"] = !1, n["voice-pitch"] = !1, n["voice-range"] = !1, n["voice-rate"] = !1, n["voice-stress"] = !1, n["voice-volume"] = !1, n.volume = !1, n["white-space"] = !1, n.widows = !1, n.width = !0, n["will-change"] = !1, n["word-break"] = !0, n["word-spacing"] = !0, n["word-wrap"] = !0, n["wrap-flow"] = !1, n["wrap-through"] = !1, n["writing-mode"] = !1, n["z-index"] = !1, n;
}
function Vmt(n, e, t) {
}
function zmt(n, e, t) {
}
var Fmt = /javascript\s*\:/img;
function Qmt(n, e) {
  return Fmt.test(e) ? "" : e;
}
gd.whiteList = fU();
gd.getDefaultWhiteList = fU;
gd.onAttr = Vmt;
gd.onIgnoreAttr = zmt;
gd.safeAttrValue = Qmt;
var Zmt = {
  indexOf: function(n, e) {
    var t, r;
    if (Array.prototype.indexOf)
      return n.indexOf(e);
    for (t = 0, r = n.length; t < r; t++)
      if (n[t] === e)
        return t;
    return -1;
  },
  forEach: function(n, e, t) {
    var r, i;
    if (Array.prototype.forEach)
      return n.forEach(e, t);
    for (r = 0, i = n.length; r < i; r++)
      e.call(t, n[r], r, n);
  },
  trim: function(n) {
    return String.prototype.trim ? n.trim() : n.replace(/(^\s*)|(\s*$)/g, "");
  },
  trimRight: function(n) {
    return String.prototype.trimRight ? n.trimRight() : n.replace(/(\s*$)/g, "");
  }
}, Bv = Zmt;
function Wmt(n, e) {
  n = Bv.trimRight(n), n[n.length - 1] !== ";" && (n += ";");
  var t = n.length, r = !1, i = 0, o = 0, s = "";
  function a() {
    if (!r) {
      var c = Bv.trim(n.slice(i, o)), h = c.indexOf(":");
      if (h !== -1) {
        var f = Bv.trim(c.slice(0, h)), d = Bv.trim(c.slice(h + 1));
        if (f) {
          var p = e(i, s.length, f, d, c);
          p && (s += p + "; ");
        }
      }
    }
    i = o + 1;
  }
  for (; o < t; o++) {
    var l = n[o];
    if (l === "/" && n[o + 1] === "*") {
      var u = n.indexOf("*/", o + 2);
      if (u === -1)
        break;
      o = u + 1, i = o + 1, r = !1;
    } else
      l === "(" ? r = !0 : l === ")" ? r = !1 : l === ";" ? r || a() : l === `
` && a();
  }
  return Bv.trim(s);
}
var Gmt = Wmt, D1 = gd, jmt = Gmt;
function s4(n) {
  return n == null;
}
function Hmt(n) {
  var e = {};
  for (var t in n)
    e[t] = n[t];
  return e;
}
function dU(n) {
  n = Hmt(n || {}), n.whiteList = n.whiteList || D1.whiteList, n.onAttr = n.onAttr || D1.onAttr, n.onIgnoreAttr = n.onIgnoreAttr || D1.onIgnoreAttr, n.safeAttrValue = n.safeAttrValue || D1.safeAttrValue, this.options = n;
}
dU.prototype.process = function(n) {
  if (n = n || "", n = n.toString(), !n)
    return "";
  var e = this, t = e.options, r = t.whiteList, i = t.onAttr, o = t.onIgnoreAttr, s = t.safeAttrValue, a = jmt(n, function(l, u, c, h, f) {
    var d = r[c], p = !1;
    if (d === !0 ? p = d : typeof d == "function" ? p = d(h) : d instanceof RegExp && (p = d.test(h)), p !== !0 && (p = !1), h = s(c, h), !!h) {
      var g = {
        position: u,
        sourcePosition: l,
        source: f,
        isWhite: p
      };
      if (p) {
        var v = i(c, h, g);
        return s4(v) ? c + ":" + h : v;
      } else {
        var v = o(c, h, g);
        if (!s4(v))
          return v;
      }
    }
  });
  return a;
};
var qmt = dU;
(function(n, e) {
  var t = gd, r = qmt;
  function i(s, a) {
    var l = new r(a);
    return l.process(s);
  }
  e = n.exports = i, e.FilterCSS = r;
  for (var o in t)
    e[o] = t[o];
  typeof window < "u" && (window.filterCSS = n.exports);
})(wk, wk.exports);
var AI = wk.exports, TI = {
  indexOf: function(n, e) {
    var t, r;
    if (Array.prototype.indexOf)
      return n.indexOf(e);
    for (t = 0, r = n.length; t < r; t++)
      if (n[t] === e)
        return t;
    return -1;
  },
  forEach: function(n, e, t) {
    var r, i;
    if (Array.prototype.forEach)
      return n.forEach(e, t);
    for (r = 0, i = n.length; r < i; r++)
      e.call(t, n[r], r, n);
  },
  trim: function(n) {
    return String.prototype.trim ? n.trim() : n.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function(n) {
    var e = /\s|\n|\t/, t = e.exec(n);
    return t ? t.index : -1;
  }
}, Ymt = AI.FilterCSS, Xmt = AI.getDefaultWhiteList, Rx = TI;
function pU() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "preload",
      "src"
    ],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "playsinline",
      "poster",
      "preload",
      "src",
      "height",
      "width"
    ]
  };
}
var gU = new Ymt();
function Umt(n, e, t) {
}
function Kmt(n, e, t) {
}
function Jmt(n, e, t) {
}
function eyt(n, e, t) {
}
function vU(n) {
  return n.replace(nyt, "&lt;").replace(ryt, "&gt;");
}
function tyt(n, e, t, r) {
  if (t = xU(t), e === "href" || e === "src") {
    if (t = Rx.trim(t), t === "#")
      return "#";
    if (!(t.substr(0, 7) === "http://" || t.substr(0, 8) === "https://" || t.substr(0, 7) === "mailto:" || t.substr(0, 4) === "tel:" || t.substr(0, 11) === "data:image/" || t.substr(0, 6) === "ftp://" || t.substr(0, 2) === "./" || t.substr(0, 3) === "../" || t[0] === "#" || t[0] === "/"))
      return "";
  } else if (e === "background") {
    if (L1.lastIndex = 0, L1.test(t))
      return "";
  } else if (e === "style") {
    if (a4.lastIndex = 0, a4.test(t) || (l4.lastIndex = 0, l4.test(t) && (L1.lastIndex = 0, L1.test(t))))
      return "";
    r !== !1 && (r = r || gU, t = r.process(t));
  }
  return t = SU(t), t;
}
var nyt = /</g, ryt = />/g, iyt = /"/g, oyt = /&quot;/g, syt = /&#([a-zA-Z0-9]*);?/gim, ayt = /&colon;?/gim, lyt = /&newline;?/gim, L1 = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi, a4 = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi, l4 = /u\s*r\s*l\s*\(.*/gi;
function mU(n) {
  return n.replace(iyt, "&quot;");
}
function yU(n) {
  return n.replace(oyt, '"');
}
function bU(n) {
  return n.replace(syt, function(t, r) {
    return r[0] === "x" || r[0] === "X" ? String.fromCharCode(parseInt(r.substr(1), 16)) : String.fromCharCode(parseInt(r, 10));
  });
}
function OU(n) {
  return n.replace(ayt, ":").replace(lyt, " ");
}
function wU(n) {
  for (var e = "", t = 0, r = n.length; t < r; t++)
    e += n.charCodeAt(t) < 32 ? " " : n.charAt(t);
  return Rx.trim(e);
}
function xU(n) {
  return n = yU(n), n = bU(n), n = OU(n), n = wU(n), n;
}
function SU(n) {
  return n = mU(n), n = vU(n), n;
}
function uyt() {
  return "";
}
function cyt(n, e) {
  typeof e != "function" && (e = function() {
  });
  var t = !Array.isArray(n);
  function r(s) {
    return t ? !0 : Rx.indexOf(n, s) !== -1;
  }
  var i = [], o = !1;
  return {
    onIgnoreTag: function(s, a, l) {
      if (r(s))
        if (l.isClosing) {
          var u = "[/removed]", c = l.position + u.length;
          return i.push([
            o !== !1 ? o : l.position,
            c
          ]), o = !1, u;
        } else
          return o || (o = l.position), "[removed]";
      else
        return e(s, a, l);
    },
    remove: function(s) {
      var a = "", l = 0;
      return Rx.forEach(i, function(u) {
        a += s.slice(l, u[0]), l = u[1];
      }), a += s.slice(l), a;
    }
  };
}
function hyt(n) {
  for (var e = "", t = 0; t < n.length; ) {
    var r = n.indexOf("<!--", t);
    if (r === -1) {
      e += n.slice(t);
      break;
    }
    e += n.slice(t, r);
    var i = n.indexOf("-->", r);
    if (i === -1)
      break;
    t = i + 3;
  }
  return e;
}
function fyt(n) {
  var e = n.split("");
  return e = e.filter(function(t) {
    var r = t.charCodeAt(0);
    return r === 127 ? !1 : r <= 31 ? r === 10 || r === 13 : !0;
  }), e.join("");
}
Qn.whiteList = pU();
Qn.getDefaultWhiteList = pU;
Qn.onTag = Umt;
Qn.onIgnoreTag = Kmt;
Qn.onTagAttr = Jmt;
Qn.onIgnoreTagAttr = eyt;
Qn.safeAttrValue = tyt;
Qn.escapeHtml = vU;
Qn.escapeQuote = mU;
Qn.unescapeQuote = yU;
Qn.escapeHtmlEntities = bU;
Qn.escapeDangerHtml5Entities = OU;
Qn.clearNonPrintableCharacter = wU;
Qn.friendlyAttrValue = xU;
Qn.escapeAttrValue = SU;
Qn.onIgnoreTagStripAll = uyt;
Qn.StripTagBody = cyt;
Qn.stripCommentTag = hyt;
Qn.stripBlankChar = fyt;
Qn.cssFilter = gU;
Qn.getDefaultCSSWhiteList = Xmt;
var Q_ = {}, Wu = TI;
function dyt(n) {
  var e = Wu.spaceIndex(n), t;
  return e === -1 ? t = n.slice(1, -1) : t = n.slice(1, e + 1), t = Wu.trim(t).toLowerCase(), t.slice(0, 1) === "/" && (t = t.slice(1)), t.slice(-1) === "/" && (t = t.slice(0, -1)), t;
}
function pyt(n) {
  return n.slice(0, 2) === "</";
}
function gyt(n, e, t) {
  var r = "", i = 0, o = !1, s = !1, a = 0, l = n.length, u = "", c = "";
  e:
    for (a = 0; a < l; a++) {
      var h = n.charAt(a);
      if (o === !1) {
        if (h === "<") {
          o = a;
          continue;
        }
      } else if (s === !1) {
        if (h === "<") {
          r += t(n.slice(i, a)), o = a, i = a;
          continue;
        }
        if (h === ">" || a === l - 1) {
          r += t(n.slice(i, o)), c = n.slice(o, a + 1), u = dyt(c), r += e(
            o,
            r.length,
            u,
            c,
            pyt(c)
          ), i = a + 1, o = !1;
          continue;
        }
        if (h === '"' || h === "'")
          for (var f = 1, d = n.charAt(a - f); d.trim() === "" || d === "="; ) {
            if (d === "=") {
              s = h;
              continue e;
            }
            d = n.charAt(a - ++f);
          }
      } else if (h === s) {
        s = !1;
        continue;
      }
    }
  return i < l && (r += t(n.substr(i))), r;
}
var vyt = /[^a-zA-Z0-9\\_:.-]/gim;
function myt(n, e) {
  var t = 0, r = 0, i = [], o = !1, s = n.length;
  function a(f, d) {
    if (f = Wu.trim(f), f = f.replace(vyt, "").toLowerCase(), !(f.length < 1)) {
      var p = e(f, d || "");
      p && i.push(p);
    }
  }
  for (var l = 0; l < s; l++) {
    var u = n.charAt(l), c, h;
    if (o === !1 && u === "=") {
      o = n.slice(t, l), t = l + 1, r = n.charAt(t) === '"' || n.charAt(t) === "'" ? t : byt(n, l + 1);
      continue;
    }
    if (o !== !1 && l === r) {
      if (h = n.indexOf(u, l + 1), h === -1)
        break;
      c = Wu.trim(n.slice(r + 1, h)), a(o, c), o = !1, l = h, t = l + 1;
      continue;
    }
    if (/\s|\n|\t/.test(u))
      if (n = n.replace(/\s|\n|\t/g, " "), o === !1)
        if (h = yyt(n, l), h === -1) {
          c = Wu.trim(n.slice(t, l)), a(c), o = !1, t = l + 1;
          continue;
        } else {
          l = h - 1;
          continue;
        }
      else if (h = Oyt(n, l - 1), h === -1) {
        c = Wu.trim(n.slice(t, l)), c = u4(c), a(o, c), o = !1, t = l + 1;
        continue;
      } else
        continue;
  }
  return t < n.length && (o === !1 ? a(n.slice(t)) : a(o, u4(Wu.trim(n.slice(t))))), Wu.trim(i.join(" "));
}
function yyt(n, e) {
  for (; e < n.length; e++) {
    var t = n[e];
    if (t !== " ")
      return t === "=" ? e : -1;
  }
}
function byt(n, e) {
  for (; e < n.length; e++) {
    var t = n[e];
    if (t !== " ")
      return t === "'" || t === '"' ? e : -1;
  }
}
function Oyt(n, e) {
  for (; e > 0; e--) {
    var t = n[e];
    if (t !== " ")
      return t === "=" ? e : -1;
  }
}
function wyt(n) {
  return n[0] === '"' && n[n.length - 1] === '"' || n[0] === "'" && n[n.length - 1] === "'";
}
function u4(n) {
  return wyt(n) ? n.substr(1, n.length - 2) : n;
}
Q_.parseTag = gyt;
Q_.parseAttr = myt;
var xyt = AI.FilterCSS, zs = Qn, _U = Q_, Syt = _U.parseTag, _yt = _U.parseAttr, hw = TI;
function I1(n) {
  return n == null;
}
function Cyt(n) {
  var e = hw.spaceIndex(n);
  if (e === -1)
    return {
      html: "",
      closing: n[n.length - 2] === "/"
    };
  n = hw.trim(n.slice(e + 1, -1));
  var t = n[n.length - 1] === "/";
  return t && (n = hw.trim(n.slice(0, -1))), {
    html: n,
    closing: t
  };
}
function Ayt(n) {
  var e = {};
  for (var t in n)
    e[t] = n[t];
  return e;
}
function Tyt(n) {
  var e = {};
  for (var t in n)
    Array.isArray(n[t]) ? e[t.toLowerCase()] = n[t].map(function(r) {
      return r.toLowerCase();
    }) : e[t.toLowerCase()] = n[t];
  return e;
}
function CU(n) {
  n = Ayt(n || {}), n.stripIgnoreTag && (n.onIgnoreTag && console.error(
    'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
  ), n.onIgnoreTag = zs.onIgnoreTagStripAll), n.whiteList || n.allowList ? n.whiteList = Tyt(n.whiteList || n.allowList) : n.whiteList = zs.whiteList, n.onTag = n.onTag || zs.onTag, n.onTagAttr = n.onTagAttr || zs.onTagAttr, n.onIgnoreTag = n.onIgnoreTag || zs.onIgnoreTag, n.onIgnoreTagAttr = n.onIgnoreTagAttr || zs.onIgnoreTagAttr, n.safeAttrValue = n.safeAttrValue || zs.safeAttrValue, n.escapeHtml = n.escapeHtml || zs.escapeHtml, this.options = n, n.css === !1 ? this.cssFilter = !1 : (n.css = n.css || {}, this.cssFilter = new xyt(n.css));
}
CU.prototype.process = function(n) {
  if (n = n || "", n = n.toString(), !n)
    return "";
  var e = this, t = e.options, r = t.whiteList, i = t.onTag, o = t.onIgnoreTag, s = t.onTagAttr, a = t.onIgnoreTagAttr, l = t.safeAttrValue, u = t.escapeHtml, c = e.cssFilter;
  t.stripBlankChar && (n = zs.stripBlankChar(n)), t.allowCommentTag || (n = zs.stripCommentTag(n));
  var h = !1;
  t.stripIgnoreTagBody && (h = zs.StripTagBody(
    t.stripIgnoreTagBody,
    o
  ), o = h.onIgnoreTag);
  var f = Syt(
    n,
    function(d, p, g, v, m) {
      var y = {
        sourcePosition: d,
        position: p,
        isClosing: m,
        isWhite: Object.prototype.hasOwnProperty.call(r, g)
      }, b = i(g, v, y);
      if (!I1(b))
        return b;
      if (y.isWhite) {
        if (y.isClosing)
          return "</" + g + ">";
        var O = Cyt(v), w = r[g], x = _yt(O.html, function(S, _) {
          var C = hw.indexOf(w, S) !== -1, A = s(g, S, _, C);
          return I1(A) ? C ? (_ = l(g, S, _, c), _ ? S + '="' + _ + '"' : S) : (A = a(g, S, _, C), I1(A) ? void 0 : A) : A;
        });
        return v = "<" + g, x && (v += " " + x), O.closing && (v += " /"), v += ">", v;
      } else
        return b = o(g, v, y), I1(b) ? u(v) : b;
    },
    u
  );
  return h && (f = h.remove(f)), f;
};
var Pyt = CU;
(function(n, e) {
  var t = Qn, r = Q_, i = Pyt;
  function o(a, l) {
    var u = new i(l);
    return u.process(a);
  }
  e = n.exports = o, e.filterXSS = o, e.FilterXSS = i, function() {
    for (var a in t)
      e[a] = t[a];
    for (var l in r)
      e[l] = r[l];
  }(), typeof window < "u" && (window.filterXSS = n.exports);
  function s() {
    return typeof self < "u" && typeof DedicatedWorkerGlobalScope < "u" && self instanceof DedicatedWorkerGlobalScope;
  }
  s() && (self.filterXSS = n.exports);
})(Ok, Ok.exports);
var Eyt = Ok.exports;
const c4 = Eyt;
var kyt = function(e, { xss: t } = {}) {
  const r = new c4.FilterXSS(typeof t == "function" ? t(c4) : t);
  function i(s) {
    return s = r.process(s), s;
  }
  function o(s) {
    for (let a = 0; a < s.tokens.length; a++) {
      let l = s.tokens[a];
      if (l.type === "html_block" && (l.content = i(l.content)), l.type === "inline") {
        let u = l.children;
        for (let c = 0; c < u.length; c++)
          u[c].type === "html_inline" && (u[c].content = i(u[c].content));
      }
    }
  }
  e.core.ruler.after("linkify", "xss", o);
};
const Myt = /* @__PURE__ */ ab(kyt), Vv = typeof performance == "object" && performance && typeof performance.now == "function" ? performance : Date, AU = /* @__PURE__ */ new Set(), Dyt = (n, e, t, r) => {
  typeof process == "object" && process && typeof process.emitWarning == "function" ? process.emitWarning(n, e, t, r) : console.error(`[${t}] ${e}: ${n}`);
}, Lyt = (n) => !AU.has(n), Ru = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n), TU = (n) => Ru(n) ? n <= Math.pow(2, 8) ? Uint8Array : n <= Math.pow(2, 16) ? Uint16Array : n <= Math.pow(2, 32) ? Uint32Array : n <= Number.MAX_SAFE_INTEGER ? fw : null : null;
class fw extends Array {
  constructor(e) {
    super(e), this.fill(0);
  }
}
var zp;
const Kh = class Kh {
  constructor(e, t) {
    Lr(this, "heap");
    Lr(this, "length");
    if (!Q(Kh, zp))
      throw new TypeError("instantiate Stack using Stack.create(n)");
    this.heap = new t(e), this.length = 0;
  }
  static create(e) {
    const t = TU(e);
    if (!t)
      return [];
    it(Kh, zp, !0);
    const r = new Kh(e, t);
    return it(Kh, zp, !1), r;
  }
  push(e) {
    this.heap[this.length++] = e;
  }
  pop() {
    return this.heap[--this.length];
  }
};
zp = new WeakMap(), // private constructor
St(Kh, zp, !1);
let xk = Kh;
var Qs, _o, La, Zs, Fp, Or, Ws, wr, _n, bt, ki, Co, gi, Rr, Gs, Gr, Rl, $l, js, Ia, Xu, eo, F0, _k, mf, Nl, Q0, Ao, RS, PU, yf, Qp, Z0, Ra, $u, $a, Nu, W0, Ck, Zp, dw, Wp, pw, mn, In, G0, Ak, bf, Am;
const z$ = class z$ {
  constructor(e) {
    St(this, F0);
    St(this, RS);
    St(this, Ra);
    St(this, $a);
    St(this, W0);
    St(this, Zp);
    St(this, Wp);
    St(this, mn);
    St(this, G0);
    St(this, bf);
    // properties coming in from the options of these, only max and maxSize
    // really *need* to be protected. The rest can be modified, as they just
    // set defaults for various methods.
    St(this, Qs, void 0);
    St(this, _o, void 0);
    St(this, La, void 0);
    St(this, Zs, void 0);
    St(this, Fp, void 0);
    /**
     * {@link LRUCache.OptionsBase.ttl}
     */
    Lr(this, "ttl");
    /**
     * {@link LRUCache.OptionsBase.ttlResolution}
     */
    Lr(this, "ttlResolution");
    /**
     * {@link LRUCache.OptionsBase.ttlAutopurge}
     */
    Lr(this, "ttlAutopurge");
    /**
     * {@link LRUCache.OptionsBase.updateAgeOnGet}
     */
    Lr(this, "updateAgeOnGet");
    /**
     * {@link LRUCache.OptionsBase.updateAgeOnHas}
     */
    Lr(this, "updateAgeOnHas");
    /**
     * {@link LRUCache.OptionsBase.allowStale}
     */
    Lr(this, "allowStale");
    /**
     * {@link LRUCache.OptionsBase.noDisposeOnSet}
     */
    Lr(this, "noDisposeOnSet");
    /**
     * {@link LRUCache.OptionsBase.noUpdateTTL}
     */
    Lr(this, "noUpdateTTL");
    /**
     * {@link LRUCache.OptionsBase.maxEntrySize}
     */
    Lr(this, "maxEntrySize");
    /**
     * {@link LRUCache.OptionsBase.sizeCalculation}
     */
    Lr(this, "sizeCalculation");
    /**
     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}
     */
    Lr(this, "noDeleteOnFetchRejection");
    /**
     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}
     */
    Lr(this, "noDeleteOnStaleGet");
    /**
     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}
     */
    Lr(this, "allowStaleOnFetchAbort");
    /**
     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}
     */
    Lr(this, "allowStaleOnFetchRejection");
    /**
     * {@link LRUCache.OptionsBase.ignoreFetchAbort}
     */
    Lr(this, "ignoreFetchAbort");
    // computed properties
    St(this, Or, void 0);
    St(this, Ws, void 0);
    St(this, wr, void 0);
    St(this, _n, void 0);
    St(this, bt, void 0);
    St(this, ki, void 0);
    St(this, Co, void 0);
    St(this, gi, void 0);
    St(this, Rr, void 0);
    St(this, Gs, void 0);
    St(this, Gr, void 0);
    St(this, Rl, void 0);
    St(this, $l, void 0);
    St(this, js, void 0);
    St(this, Ia, void 0);
    St(this, Xu, void 0);
    St(this, eo, void 0);
    // conditionally set private methods related to TTL
    St(this, mf, () => {
    });
    St(this, Nl, () => {
    });
    St(this, Q0, () => {
    });
    /* c8 ignore stop */
    St(this, Ao, () => !1);
    St(this, yf, (e) => {
    });
    St(this, Qp, (e, t, r) => {
    });
    St(this, Z0, (e, t, r, i) => {
      if (r || i)
        throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
      return 0;
    });
    const { max: t = 0, ttl: r, ttlResolution: i = 1, ttlAutopurge: o, updateAgeOnGet: s, updateAgeOnHas: a, allowStale: l, dispose: u, disposeAfter: c, noDisposeOnSet: h, noUpdateTTL: f, maxSize: d = 0, maxEntrySize: p = 0, sizeCalculation: g, fetchMethod: v, noDeleteOnFetchRejection: m, noDeleteOnStaleGet: y, allowStaleOnFetchRejection: b, allowStaleOnFetchAbort: O, ignoreFetchAbort: w } = e;
    if (t !== 0 && !Ru(t))
      throw new TypeError("max option must be a nonnegative integer");
    const x = t ? TU(t) : Array;
    if (!x)
      throw new Error("invalid max value: " + t);
    if (it(this, Qs, t), it(this, _o, d), this.maxEntrySize = p || Q(this, _o), this.sizeCalculation = g, this.sizeCalculation) {
      if (!Q(this, _o) && !this.maxEntrySize)
        throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
      if (typeof this.sizeCalculation != "function")
        throw new TypeError("sizeCalculation set to non-function");
    }
    if (v !== void 0 && typeof v != "function")
      throw new TypeError("fetchMethod must be a function if specified");
    if (it(this, Fp, v), it(this, Xu, !!v), it(this, wr, /* @__PURE__ */ new Map()), it(this, _n, new Array(t).fill(void 0)), it(this, bt, new Array(t).fill(void 0)), it(this, ki, new x(t)), it(this, Co, new x(t)), it(this, gi, 0), it(this, Rr, 0), it(this, Gs, xk.create(t)), it(this, Or, 0), it(this, Ws, 0), typeof u == "function" && it(this, La, u), typeof c == "function" ? (it(this, Zs, c), it(this, Gr, [])) : (it(this, Zs, void 0), it(this, Gr, void 0)), it(this, Ia, !!Q(this, La)), it(this, eo, !!Q(this, Zs)), this.noDisposeOnSet = !!h, this.noUpdateTTL = !!f, this.noDeleteOnFetchRejection = !!m, this.allowStaleOnFetchRejection = !!b, this.allowStaleOnFetchAbort = !!O, this.ignoreFetchAbort = !!w, this.maxEntrySize !== 0) {
      if (Q(this, _o) !== 0 && !Ru(Q(this, _o)))
        throw new TypeError("maxSize must be a positive integer if specified");
      if (!Ru(this.maxEntrySize))
        throw new TypeError("maxEntrySize must be a positive integer if specified");
      Ye(this, RS, PU).call(this);
    }
    if (this.allowStale = !!l, this.noDeleteOnStaleGet = !!y, this.updateAgeOnGet = !!s, this.updateAgeOnHas = !!a, this.ttlResolution = Ru(i) || i === 0 ? i : 1, this.ttlAutopurge = !!o, this.ttl = r || 0, this.ttl) {
      if (!Ru(this.ttl))
        throw new TypeError("ttl must be a positive integer if specified");
      Ye(this, F0, _k).call(this);
    }
    if (Q(this, Qs) === 0 && this.ttl === 0 && Q(this, _o) === 0)
      throw new TypeError("At least one of max, maxSize, or ttl is required");
    if (!this.ttlAutopurge && !Q(this, Qs) && !Q(this, _o)) {
      const S = "LRU_CACHE_UNBOUNDED";
      Lyt(S) && (AU.add(S), Dyt("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", S, z$));
    }
  }
  /**
   * Do not call this method unless you need to inspect the
   * inner workings of the cache.  If anything returned by this
   * object is modified in any way, strange breakage may occur.
   *
   * These fields are private for a reason!
   *
   * @internal
   */
  static unsafeExposeInternals(e) {
    return {
      // properties
      starts: Q(e, $l),
      ttls: Q(e, js),
      sizes: Q(e, Rl),
      keyMap: Q(e, wr),
      keyList: Q(e, _n),
      valList: Q(e, bt),
      next: Q(e, ki),
      prev: Q(e, Co),
      get head() {
        return Q(e, gi);
      },
      get tail() {
        return Q(e, Rr);
      },
      free: Q(e, Gs),
      // methods
      isBackgroundFetch: (t) => {
        var r;
        return Ye(r = e, mn, In).call(r, t);
      },
      backgroundFetch: (t, r, i, o) => {
        var s;
        return Ye(s = e, Wp, pw).call(s, t, r, i, o);
      },
      moveToTail: (t) => {
        var r;
        return Ye(r = e, bf, Am).call(r, t);
      },
      indexes: (t) => {
        var r;
        return Ye(r = e, Ra, $u).call(r, t);
      },
      rindexes: (t) => {
        var r;
        return Ye(r = e, $a, Nu).call(r, t);
      },
      isStale: (t) => {
        var r;
        return Q(r = e, Ao).call(r, t);
      }
    };
  }
  // Protected read-only members
  /**
   * {@link LRUCache.OptionsBase.max} (read-only)
   */
  get max() {
    return Q(this, Qs);
  }
  /**
   * {@link LRUCache.OptionsBase.maxSize} (read-only)
   */
  get maxSize() {
    return Q(this, _o);
  }
  /**
   * The total computed size of items in the cache (read-only)
   */
  get calculatedSize() {
    return Q(this, Ws);
  }
  /**
   * The number of items stored in the cache (read-only)
   */
  get size() {
    return Q(this, Or);
  }
  /**
   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)
   */
  get fetchMethod() {
    return Q(this, Fp);
  }
  /**
   * {@link LRUCache.OptionsBase.dispose} (read-only)
   */
  get dispose() {
    return Q(this, La);
  }
  /**
   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)
   */
  get disposeAfter() {
    return Q(this, Zs);
  }
  /**
   * Return the remaining TTL time for a given entry key
   */
  getRemainingTTL(e) {
    return Q(this, wr).has(e) ? 1 / 0 : 0;
  }
  /**
   * Return a generator yielding `[key, value]` pairs,
   * in order from most recently used to least recently used.
   */
  *entries() {
    for (const e of Ye(this, Ra, $u).call(this))
      Q(this, bt)[e] !== void 0 && Q(this, _n)[e] !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield [Q(this, _n)[e], Q(this, bt)[e]]);
  }
  /**
   * Inverse order version of {@link LRUCache.entries}
   *
   * Return a generator yielding `[key, value]` pairs,
   * in order from least recently used to most recently used.
   */
  *rentries() {
    for (const e of Ye(this, $a, Nu).call(this))
      Q(this, bt)[e] !== void 0 && Q(this, _n)[e] !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield [Q(this, _n)[e], Q(this, bt)[e]]);
  }
  /**
   * Return a generator yielding the keys in the cache,
   * in order from most recently used to least recently used.
   */
  *keys() {
    for (const e of Ye(this, Ra, $u).call(this)) {
      const t = Q(this, _n)[e];
      t !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield t);
    }
  }
  /**
   * Inverse order version of {@link LRUCache.keys}
   *
   * Return a generator yielding the keys in the cache,
   * in order from least recently used to most recently used.
   */
  *rkeys() {
    for (const e of Ye(this, $a, Nu).call(this)) {
      const t = Q(this, _n)[e];
      t !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield t);
    }
  }
  /**
   * Return a generator yielding the values in the cache,
   * in order from most recently used to least recently used.
   */
  *values() {
    for (const e of Ye(this, Ra, $u).call(this))
      Q(this, bt)[e] !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield Q(this, bt)[e]);
  }
  /**
   * Inverse order version of {@link LRUCache.values}
   *
   * Return a generator yielding the values in the cache,
   * in order from least recently used to most recently used.
   */
  *rvalues() {
    for (const e of Ye(this, $a, Nu).call(this))
      Q(this, bt)[e] !== void 0 && !Ye(this, mn, In).call(this, Q(this, bt)[e]) && (yield Q(this, bt)[e]);
  }
  /**
   * Iterating over the cache itself yields the same results as
   * {@link LRUCache.entries}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * Find a value for which the supplied fn method returns a truthy value,
   * similar to Array.find().  fn is called as fn(value, key, cache).
   */
  find(e, t = {}) {
    for (const r of Ye(this, Ra, $u).call(this)) {
      const i = Q(this, bt)[r], o = Ye(this, mn, In).call(this, i) ? i.__staleWhileFetching : i;
      if (o !== void 0 && e(o, Q(this, _n)[r], this))
        return this.get(Q(this, _n)[r], t);
    }
  }
  /**
   * Call the supplied function on each item in the cache, in order from
   * most recently used to least recently used.  fn is called as
   * fn(value, key, cache).  Does not update age or recenty of use.
   * Does not iterate over stale values.
   */
  forEach(e, t = this) {
    for (const r of Ye(this, Ra, $u).call(this)) {
      const i = Q(this, bt)[r], o = Ye(this, mn, In).call(this, i) ? i.__staleWhileFetching : i;
      o !== void 0 && e.call(t, o, Q(this, _n)[r], this);
    }
  }
  /**
   * The same as {@link LRUCache.forEach} but items are iterated over in
   * reverse order.  (ie, less recently used items are iterated over first.)
   */
  rforEach(e, t = this) {
    for (const r of Ye(this, $a, Nu).call(this)) {
      const i = Q(this, bt)[r], o = Ye(this, mn, In).call(this, i) ? i.__staleWhileFetching : i;
      o !== void 0 && e.call(t, o, Q(this, _n)[r], this);
    }
  }
  /**
   * Delete any stale entries. Returns true if anything was removed,
   * false otherwise.
   */
  purgeStale() {
    let e = !1;
    for (const t of Ye(this, $a, Nu).call(this, { allowStale: !0 }))
      Q(this, Ao).call(this, t) && (this.delete(Q(this, _n)[t]), e = !0);
    return e;
  }
  /**
   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be
   * passed to cache.load()
   */
  dump() {
    const e = [];
    for (const t of Ye(this, Ra, $u).call(this, { allowStale: !0 })) {
      const r = Q(this, _n)[t], i = Q(this, bt)[t], o = Ye(this, mn, In).call(this, i) ? i.__staleWhileFetching : i;
      if (o === void 0 || r === void 0)
        continue;
      const s = { value: o };
      if (Q(this, js) && Q(this, $l)) {
        s.ttl = Q(this, js)[t];
        const a = Vv.now() - Q(this, $l)[t];
        s.start = Math.floor(Date.now() - a);
      }
      Q(this, Rl) && (s.size = Q(this, Rl)[t]), e.unshift([r, s]);
    }
    return e;
  }
  /**
   * Reset the cache and load in the items in entries in the order listed.
   * Note that the shape of the resulting cache may be different if the
   * same options are not used in both caches.
   */
  load(e) {
    this.clear();
    for (const [t, r] of e) {
      if (r.start) {
        const i = Date.now() - r.start;
        r.start = Vv.now() - i;
      }
      this.set(t, r.value, r);
    }
  }
  /**
   * Add a value to the cache.
   */
  set(e, t, r = {}) {
    var f, d, p;
    const { ttl: i = this.ttl, start: o, noDisposeOnSet: s = this.noDisposeOnSet, sizeCalculation: a = this.sizeCalculation, status: l } = r;
    let { noUpdateTTL: u = this.noUpdateTTL } = r;
    const c = Q(this, Z0).call(this, e, t, r.size || 0, a);
    if (this.maxEntrySize && c > this.maxEntrySize)
      return l && (l.set = "miss", l.maxEntrySizeExceeded = !0), this.delete(e), this;
    let h = Q(this, Or) === 0 ? void 0 : Q(this, wr).get(e);
    if (h === void 0)
      h = Q(this, Or) === 0 ? Q(this, Rr) : Q(this, Gs).length !== 0 ? Q(this, Gs).pop() : Q(this, Or) === Q(this, Qs) ? Ye(this, Zp, dw).call(this, !1) : Q(this, Or), Q(this, _n)[h] = e, Q(this, bt)[h] = t, Q(this, wr).set(e, h), Q(this, ki)[Q(this, Rr)] = h, Q(this, Co)[h] = Q(this, Rr), it(this, Rr, h), Fb(this, Or)._++, Q(this, Qp).call(this, h, c, l), l && (l.set = "add"), u = !1;
    else {
      Ye(this, bf, Am).call(this, h);
      const g = Q(this, bt)[h];
      if (t !== g) {
        if (Q(this, Xu) && Ye(this, mn, In).call(this, g) ? g.__abortController.abort(new Error("replaced")) : s || (Q(this, Ia) && ((f = Q(this, La)) == null || f.call(this, g, e, "set")), Q(this, eo) && ((d = Q(this, Gr)) == null || d.push([g, e, "set"]))), Q(this, yf).call(this, h), Q(this, Qp).call(this, h, c, l), Q(this, bt)[h] = t, l) {
          l.set = "replace";
          const v = g && Ye(this, mn, In).call(this, g) ? g.__staleWhileFetching : g;
          v !== void 0 && (l.oldValue = v);
        }
      } else
        l && (l.set = "update");
    }
    if (i !== 0 && !Q(this, js) && Ye(this, F0, _k).call(this), Q(this, js) && (u || Q(this, Q0).call(this, h, i, o), l && Q(this, Nl).call(this, l, h)), !s && Q(this, eo) && Q(this, Gr)) {
      const g = Q(this, Gr);
      let v;
      for (; v = g == null ? void 0 : g.shift(); )
        (p = Q(this, Zs)) == null || p.call(this, ...v);
    }
    return this;
  }
  /**
   * Evict the least recently used item, returning its value or
   * `undefined` if cache is empty.
   */
  pop() {
    var e;
    try {
      for (; Q(this, Or); ) {
        const t = Q(this, bt)[Q(this, gi)];
        if (Ye(this, Zp, dw).call(this, !0), Ye(this, mn, In).call(this, t)) {
          if (t.__staleWhileFetching)
            return t.__staleWhileFetching;
        } else if (t !== void 0)
          return t;
      }
    } finally {
      if (Q(this, eo) && Q(this, Gr)) {
        const t = Q(this, Gr);
        let r;
        for (; r = t == null ? void 0 : t.shift(); )
          (e = Q(this, Zs)) == null || e.call(this, ...r);
      }
    }
  }
  /**
   * Check if a key is in the cache, without updating the recency of use.
   * Will return false if the item is stale, even though it is technically
   * in the cache.
   *
   * Will not update item age unless
   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.
   */
  has(e, t = {}) {
    const { updateAgeOnHas: r = this.updateAgeOnHas, status: i } = t, o = Q(this, wr).get(e);
    if (o !== void 0) {
      const s = Q(this, bt)[o];
      if (Ye(this, mn, In).call(this, s) && s.__staleWhileFetching === void 0)
        return !1;
      if (Q(this, Ao).call(this, o))
        i && (i.has = "stale", Q(this, Nl).call(this, i, o));
      else
        return r && Q(this, mf).call(this, o), i && (i.has = "hit", Q(this, Nl).call(this, i, o)), !0;
    } else
      i && (i.has = "miss");
    return !1;
  }
  /**
   * Like {@link LRUCache#get} but doesn't update recency or delete stale
   * items.
   *
   * Returns `undefined` if the item is stale, unless
   * {@link LRUCache.OptionsBase.allowStale} is set.
   */
  peek(e, t = {}) {
    const { allowStale: r = this.allowStale } = t, i = Q(this, wr).get(e);
    if (i !== void 0 && (r || !Q(this, Ao).call(this, i))) {
      const o = Q(this, bt)[i];
      return Ye(this, mn, In).call(this, o) ? o.__staleWhileFetching : o;
    }
  }
  async fetch(e, t = {}) {
    const {
      // get options
      allowStale: r = this.allowStale,
      updateAgeOnGet: i = this.updateAgeOnGet,
      noDeleteOnStaleGet: o = this.noDeleteOnStaleGet,
      // set options
      ttl: s = this.ttl,
      noDisposeOnSet: a = this.noDisposeOnSet,
      size: l = 0,
      sizeCalculation: u = this.sizeCalculation,
      noUpdateTTL: c = this.noUpdateTTL,
      // fetch exclusive options
      noDeleteOnFetchRejection: h = this.noDeleteOnFetchRejection,
      allowStaleOnFetchRejection: f = this.allowStaleOnFetchRejection,
      ignoreFetchAbort: d = this.ignoreFetchAbort,
      allowStaleOnFetchAbort: p = this.allowStaleOnFetchAbort,
      context: g,
      forceRefresh: v = !1,
      status: m,
      signal: y
    } = t;
    if (!Q(this, Xu))
      return m && (m.fetch = "get"), this.get(e, {
        allowStale: r,
        updateAgeOnGet: i,
        noDeleteOnStaleGet: o,
        status: m
      });
    const b = {
      allowStale: r,
      updateAgeOnGet: i,
      noDeleteOnStaleGet: o,
      ttl: s,
      noDisposeOnSet: a,
      size: l,
      sizeCalculation: u,
      noUpdateTTL: c,
      noDeleteOnFetchRejection: h,
      allowStaleOnFetchRejection: f,
      allowStaleOnFetchAbort: p,
      ignoreFetchAbort: d,
      status: m,
      signal: y
    };
    let O = Q(this, wr).get(e);
    if (O === void 0) {
      m && (m.fetch = "miss");
      const w = Ye(this, Wp, pw).call(this, e, O, b, g);
      return w.__returned = w;
    } else {
      const w = Q(this, bt)[O];
      if (Ye(this, mn, In).call(this, w)) {
        const A = r && w.__staleWhileFetching !== void 0;
        return m && (m.fetch = "inflight", A && (m.returnedStale = !0)), A ? w.__staleWhileFetching : w.__returned = w;
      }
      const x = Q(this, Ao).call(this, O);
      if (!v && !x)
        return m && (m.fetch = "hit"), Ye(this, bf, Am).call(this, O), i && Q(this, mf).call(this, O), m && Q(this, Nl).call(this, m, O), w;
      const S = Ye(this, Wp, pw).call(this, e, O, b, g), C = S.__staleWhileFetching !== void 0 && r;
      return m && (m.fetch = x ? "stale" : "refresh", C && x && (m.returnedStale = !0)), C ? S.__staleWhileFetching : S.__returned = S;
    }
  }
  /**
   * Return a value from the cache. Will update the recency of the cache
   * entry found.
   *
   * If the key is not found, get() will return `undefined`.
   */
  get(e, t = {}) {
    const { allowStale: r = this.allowStale, updateAgeOnGet: i = this.updateAgeOnGet, noDeleteOnStaleGet: o = this.noDeleteOnStaleGet, status: s } = t, a = Q(this, wr).get(e);
    if (a !== void 0) {
      const l = Q(this, bt)[a], u = Ye(this, mn, In).call(this, l);
      return s && Q(this, Nl).call(this, s, a), Q(this, Ao).call(this, a) ? (s && (s.get = "stale"), u ? (s && r && l.__staleWhileFetching !== void 0 && (s.returnedStale = !0), r ? l.__staleWhileFetching : void 0) : (o || this.delete(e), s && r && (s.returnedStale = !0), r ? l : void 0)) : (s && (s.get = "hit"), u ? l.__staleWhileFetching : (Ye(this, bf, Am).call(this, a), i && Q(this, mf).call(this, a), l));
    } else
      s && (s.get = "miss");
  }
  /**
   * Deletes a key out of the cache.
   * Returns true if the key was deleted, false otherwise.
   */
  delete(e) {
    var r, i, o, s;
    let t = !1;
    if (Q(this, Or) !== 0) {
      const a = Q(this, wr).get(e);
      if (a !== void 0)
        if (t = !0, Q(this, Or) === 1)
          this.clear();
        else {
          Q(this, yf).call(this, a);
          const l = Q(this, bt)[a];
          Ye(this, mn, In).call(this, l) ? l.__abortController.abort(new Error("deleted")) : (Q(this, Ia) || Q(this, eo)) && (Q(this, Ia) && ((r = Q(this, La)) == null || r.call(this, l, e, "delete")), Q(this, eo) && ((i = Q(this, Gr)) == null || i.push([l, e, "delete"]))), Q(this, wr).delete(e), Q(this, _n)[a] = void 0, Q(this, bt)[a] = void 0, a === Q(this, Rr) ? it(this, Rr, Q(this, Co)[a]) : a === Q(this, gi) ? it(this, gi, Q(this, ki)[a]) : (Q(this, ki)[Q(this, Co)[a]] = Q(this, ki)[a], Q(this, Co)[Q(this, ki)[a]] = Q(this, Co)[a]), Fb(this, Or)._--, Q(this, Gs).push(a);
        }
    }
    if (Q(this, eo) && ((o = Q(this, Gr)) != null && o.length)) {
      const a = Q(this, Gr);
      let l;
      for (; l = a == null ? void 0 : a.shift(); )
        (s = Q(this, Zs)) == null || s.call(this, ...l);
    }
    return t;
  }
  /**
   * Clear the cache entirely, throwing away all values.
   */
  clear() {
    var e, t, r;
    for (const i of Ye(this, $a, Nu).call(this, { allowStale: !0 })) {
      const o = Q(this, bt)[i];
      if (Ye(this, mn, In).call(this, o))
        o.__abortController.abort(new Error("deleted"));
      else {
        const s = Q(this, _n)[i];
        Q(this, Ia) && ((e = Q(this, La)) == null || e.call(this, o, s, "delete")), Q(this, eo) && ((t = Q(this, Gr)) == null || t.push([o, s, "delete"]));
      }
    }
    if (Q(this, wr).clear(), Q(this, bt).fill(void 0), Q(this, _n).fill(void 0), Q(this, js) && Q(this, $l) && (Q(this, js).fill(0), Q(this, $l).fill(0)), Q(this, Rl) && Q(this, Rl).fill(0), it(this, gi, 0), it(this, Rr, 0), Q(this, Gs).length = 0, it(this, Ws, 0), it(this, Or, 0), Q(this, eo) && Q(this, Gr)) {
      const i = Q(this, Gr);
      let o;
      for (; o = i == null ? void 0 : i.shift(); )
        (r = Q(this, Zs)) == null || r.call(this, ...o);
    }
  }
};
Qs = new WeakMap(), _o = new WeakMap(), La = new WeakMap(), Zs = new WeakMap(), Fp = new WeakMap(), Or = new WeakMap(), Ws = new WeakMap(), wr = new WeakMap(), _n = new WeakMap(), bt = new WeakMap(), ki = new WeakMap(), Co = new WeakMap(), gi = new WeakMap(), Rr = new WeakMap(), Gs = new WeakMap(), Gr = new WeakMap(), Rl = new WeakMap(), $l = new WeakMap(), js = new WeakMap(), Ia = new WeakMap(), Xu = new WeakMap(), eo = new WeakMap(), F0 = new WeakSet(), _k = function() {
  const e = new fw(Q(this, Qs)), t = new fw(Q(this, Qs));
  it(this, js, e), it(this, $l, t), it(this, Q0, (o, s, a = Vv.now()) => {
    if (t[o] = s !== 0 ? a : 0, e[o] = s, s !== 0 && this.ttlAutopurge) {
      const l = setTimeout(() => {
        Q(this, Ao).call(this, o) && this.delete(Q(this, _n)[o]);
      }, s + 1);
      l.unref && l.unref();
    }
  }), it(this, mf, (o) => {
    t[o] = e[o] !== 0 ? Vv.now() : 0;
  }), it(this, Nl, (o, s) => {
    if (e[s]) {
      const a = e[s], l = t[s];
      o.ttl = a, o.start = l, o.now = r || i(), o.remainingTTL = o.now + a - l;
    }
  });
  let r = 0;
  const i = () => {
    const o = Vv.now();
    if (this.ttlResolution > 0) {
      r = o;
      const s = setTimeout(() => r = 0, this.ttlResolution);
      s.unref && s.unref();
    }
    return o;
  };
  this.getRemainingTTL = (o) => {
    const s = Q(this, wr).get(o);
    return s === void 0 ? 0 : e[s] === 0 || t[s] === 0 ? 1 / 0 : t[s] + e[s] - (r || i());
  }, it(this, Ao, (o) => e[o] !== 0 && t[o] !== 0 && (r || i()) - t[o] > e[o]);
}, mf = new WeakMap(), Nl = new WeakMap(), Q0 = new WeakMap(), Ao = new WeakMap(), RS = new WeakSet(), PU = function() {
  const e = new fw(Q(this, Qs));
  it(this, Ws, 0), it(this, Rl, e), it(this, yf, (t) => {
    it(this, Ws, Q(this, Ws) - e[t]), e[t] = 0;
  }), it(this, Z0, (t, r, i, o) => {
    if (Ye(this, mn, In).call(this, r))
      return 0;
    if (!Ru(i))
      if (o) {
        if (typeof o != "function")
          throw new TypeError("sizeCalculation must be a function");
        if (i = o(r, t), !Ru(i))
          throw new TypeError("sizeCalculation return invalid (expect positive integer)");
      } else
        throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
    return i;
  }), it(this, Qp, (t, r, i) => {
    if (e[t] = r, Q(this, _o)) {
      const o = Q(this, _o) - e[t];
      for (; Q(this, Ws) > o; )
        Ye(this, Zp, dw).call(this, !0);
    }
    it(this, Ws, Q(this, Ws) + e[t]), i && (i.entrySize = r, i.totalCalculatedSize = Q(this, Ws));
  });
}, yf = new WeakMap(), Qp = new WeakMap(), Z0 = new WeakMap(), Ra = new WeakSet(), $u = function* ({ allowStale: e = this.allowStale } = {}) {
  if (Q(this, Or))
    for (let t = Q(this, Rr); !(!Ye(this, W0, Ck).call(this, t) || ((e || !Q(this, Ao).call(this, t)) && (yield t), t === Q(this, gi))); )
      t = Q(this, Co)[t];
}, $a = new WeakSet(), Nu = function* ({ allowStale: e = this.allowStale } = {}) {
  if (Q(this, Or))
    for (let t = Q(this, gi); !(!Ye(this, W0, Ck).call(this, t) || ((e || !Q(this, Ao).call(this, t)) && (yield t), t === Q(this, Rr))); )
      t = Q(this, ki)[t];
}, W0 = new WeakSet(), Ck = function(e) {
  return e !== void 0 && Q(this, wr).get(Q(this, _n)[e]) === e;
}, Zp = new WeakSet(), dw = function(e) {
  var o, s;
  const t = Q(this, gi), r = Q(this, _n)[t], i = Q(this, bt)[t];
  return Q(this, Xu) && Ye(this, mn, In).call(this, i) ? i.__abortController.abort(new Error("evicted")) : (Q(this, Ia) || Q(this, eo)) && (Q(this, Ia) && ((o = Q(this, La)) == null || o.call(this, i, r, "evict")), Q(this, eo) && ((s = Q(this, Gr)) == null || s.push([i, r, "evict"]))), Q(this, yf).call(this, t), e && (Q(this, _n)[t] = void 0, Q(this, bt)[t] = void 0, Q(this, Gs).push(t)), Q(this, Or) === 1 ? (it(this, gi, it(this, Rr, 0)), Q(this, Gs).length = 0) : it(this, gi, Q(this, ki)[t]), Q(this, wr).delete(r), Fb(this, Or)._--, t;
}, Wp = new WeakSet(), pw = function(e, t, r, i) {
  const o = t === void 0 ? void 0 : Q(this, bt)[t];
  if (Ye(this, mn, In).call(this, o))
    return o;
  const s = new AbortController(), { signal: a } = r;
  a == null || a.addEventListener("abort", () => s.abort(a.reason), {
    signal: s.signal
  });
  const l = {
    signal: s.signal,
    options: r,
    context: i
  }, u = (g, v = !1) => {
    const { aborted: m } = s.signal, y = r.ignoreFetchAbort && g !== void 0;
    if (r.status && (m && !v ? (r.status.fetchAborted = !0, r.status.fetchError = s.signal.reason, y && (r.status.fetchAbortIgnored = !0)) : r.status.fetchResolved = !0), m && !y && !v)
      return h(s.signal.reason);
    const b = d;
    return Q(this, bt)[t] === d && (g === void 0 ? b.__staleWhileFetching ? Q(this, bt)[t] = b.__staleWhileFetching : this.delete(e) : (r.status && (r.status.fetchUpdated = !0), this.set(e, g, l.options))), g;
  }, c = (g) => (r.status && (r.status.fetchRejected = !0, r.status.fetchError = g), h(g)), h = (g) => {
    const { aborted: v } = s.signal, m = v && r.allowStaleOnFetchAbort, y = m || r.allowStaleOnFetchRejection, b = y || r.noDeleteOnFetchRejection, O = d;
    if (Q(this, bt)[t] === d && (!b || O.__staleWhileFetching === void 0 ? this.delete(e) : m || (Q(this, bt)[t] = O.__staleWhileFetching)), y)
      return r.status && O.__staleWhileFetching !== void 0 && (r.status.returnedStale = !0), O.__staleWhileFetching;
    if (O.__returned === O)
      throw g;
  }, f = (g, v) => {
    var y;
    const m = (y = Q(this, Fp)) == null ? void 0 : y.call(this, e, o, l);
    m && m instanceof Promise && m.then((b) => g(b), v), s.signal.addEventListener("abort", () => {
      (!r.ignoreFetchAbort || r.allowStaleOnFetchAbort) && (g(), r.allowStaleOnFetchAbort && (g = (b) => u(b, !0)));
    });
  };
  r.status && (r.status.fetchDispatched = !0);
  const d = new Promise(f).then(u, c), p = Object.assign(d, {
    __abortController: s,
    __staleWhileFetching: o,
    __returned: void 0
  });
  return t === void 0 ? (this.set(e, p, { ...l.options, status: void 0 }), t = Q(this, wr).get(e)) : Q(this, bt)[t] = p, p;
}, mn = new WeakSet(), In = function(e) {
  if (!Q(this, Xu))
    return !1;
  const t = e;
  return !!t && t instanceof Promise && t.hasOwnProperty("__staleWhileFetching") && t.__abortController instanceof AbortController;
}, G0 = new WeakSet(), Ak = function(e, t) {
  Q(this, Co)[t] = e, Q(this, ki)[e] = t;
}, bf = new WeakSet(), Am = function(e) {
  e !== Q(this, Rr) && (e === Q(this, gi) ? it(this, gi, Q(this, ki)[e]) : Ye(this, G0, Ak).call(this, Q(this, Co)[e], Q(this, ki)[e]), Ye(this, G0, Ak).call(this, Q(this, Rr), e), it(this, Rr, e));
};
let Sk = z$;
const Iyt = (n, e) => {
  const t = $e("editorId"), { noImgZoomIn: r } = n, i = LL(() => {
    const o = document.querySelectorAll(`#${t}-preview img`);
    o.length !== 0 && o$e(o, {
      background: "#00000073"
    });
  });
  dt(() => {
    !r && n.setting.preview && i();
  }), de([e], () => {
    !r && i();
  });
}, Ryt = Iyt, $yt = (n, e) => {
  if (typeof e[n] == "string")
    return e[n];
  const t = `<i class="${on}-iconfont ${on}-icon-${n}"></i>`;
  switch (tl.iconfontType) {
    case "svg":
      return `<svg class="${on}-icon" aria-hidden="true"><use xlink:href="#${on}-icon-${n}"></use></svg>`;
    default:
      return t;
  }
}, Nyt = (n, e, t) => {
  const r = $e("editorId"), i = $e("usedLanguageText"), o = $e("customIcon"), s = () => {
    document.querySelectorAll(`#${r}-preview pre`).forEach((u) => {
      var c, h;
      let f = -1;
      (c = u.querySelector(".copy-button")) == null || c.remove();
      const d = ((h = i.value.copyCode) == null ? void 0 : h.text) || "复制代码", p = document.createElement("span");
      p.setAttribute("class", "copy-button"), p.dataset.tips = d, p.innerHTML = $yt("copy", o.value), p.addEventListener("click", () => {
        var g, v;
        clearTimeout(f);
        const m = u.querySelector("code").innerText, y = f$e(n.formatCopiedText(m)), b = ((g = i.value.copyCode) == null ? void 0 : g.successTips) || "已复制！", O = ((v = i.value.copyCode) == null ? void 0 : v.failTips) || "已复制！";
        p.dataset.tips = y ? b : O, f = window.setTimeout(() => {
          p.dataset.tips = d;
        }, 1500);
      }), u.appendChild(p);
    });
  }, a = () => {
    ut(s);
  }, l = (u) => {
    u && ut(s);
  };
  de([e, t], a), de(() => n.setting.preview, l), de(() => n.setting.htmlPreview, l), de(() => i.value, s), dt(s);
}, Byt = Nyt, Vyt = (n) => {
  var e;
  const t = (e = tl.editorExtensions) == null ? void 0 : e.highlight, r = t == null ? void 0 : t.instance, i = $e("highlight"), o = lo(r);
  return dt(() => {
    if (!n.noHighlight && !o.value) {
      const s = document.createElement("script");
      s.src = i.value.js, s.onload = () => {
        o.value = window.hljs;
      }, s.id = `${on}-hljs`, Hf(s, "hljs");
      const a = document.createElement("link");
      a.rel = "stylesheet", a.href = i.value.css, a.id = `${on}-hlCss`, Hf(a);
    }
  }), de(
    () => i.value.css,
    (s) => {
      mPe(`${on}-hlCss`, "href", s);
    }
  ), o;
}, zyt = Vyt, Fyt = (n) => {
  const e = $e("theme"), { editorExtensions: t, mermaidConfig: r } = tl, i = t == null ? void 0 : t.mermaid, o = lo(i == null ? void 0 : i.instance), s = lo(-1), a = new Sk({
    max: 1e3,
    // 缓存10分钟
    ttl: 6e5
  }), l = () => {
    const u = o.value;
    !n.noMermaid && u && (u.initialize(
      r({
        startOnLoad: !1,
        theme: e.value === "dark" ? "dark" : "default"
      })
    ), s.value = s.value + 1);
  };
  return de(
    () => e.value,
    () => {
      a.clear(), l();
    }
  ), dt(() => {
    if (!n.noMermaid && !(i != null && i.instance)) {
      const u = (i == null ? void 0 : i.js) || uPe;
      if (/\.mjs/.test(u))
        import(
          /* @vite-ignore */
          /* webpackIgnore: true */
          u
        ).then((c) => {
          o.value = c.default, l();
        });
      else {
        const c = document.createElement("script");
        c.id = `${on}-mermaid`, c.src = u, c.onload = () => {
          o.value = window.mermaid, l();
        }, Hf(c, "mermaid");
      }
    }
  }), { mermaidRef: o, reRenderRef: s, replaceMermaid: () => {
    ut(() => {
      if (!n.noMermaid && o.value) {
        const u = document.querySelectorAll(
          `div.${on}-mermaid`
        ), c = document.createElement("div");
        c.style.width = document.body.offsetWidth + "px", c.style.height = document.body.offsetHeight + "px", c.style.position = "fixed", c.style.zIndex = "-10000", c.style.top = "-10000";
        let h = u.length;
        h > 0 && document.body.appendChild(c), u.forEach(async (f) => {
          let d = a.get(f.innerText);
          if (!d) {
            const g = vE(), v = o.value.renderAsync || o.value.render;
            let m = "";
            try {
              m = await v(g, f.innerText, c);
            } catch {
            }
            d = await n.sanitizeMermaid(
              typeof m == "string" ? m : m.svg
            ), a.set(f.innerText, d);
          }
          const p = document.createElement("p");
          p.className = `${on}-mermaid`, p.setAttribute("data-processed", ""), p.innerHTML = d, f.dataset.line !== void 0 && (p.dataset.line = f.dataset.line), f.replaceWith(p), --h === 0 && c.remove();
        });
      }
    });
  } };
}, Qyt = Fyt, Zyt = (n) => {
  var e;
  const t = (e = tl.editorExtensions) == null ? void 0 : e.katex, r = t == null ? void 0 : t.instance, i = lo(r);
  return dt(() => {
    if (!n.noKatex && !i.value) {
      const o = document.createElement("script");
      o.src = (t == null ? void 0 : t.js) || _5.js, o.onload = () => {
        i.value = window.katex;
      }, o.id = `${on}-katex`;
      const s = document.createElement("link");
      s.rel = "stylesheet", s.href = (t == null ? void 0 : t.css) || _5.css, s.id = `${on}-katexCss`, Hf(o, "katex"), Hf(s);
    }
  }), i;
}, Wyt = Zyt, Gyt = (n, e) => {
  const t = n.renderer.rules.fence.bind(n.renderer.rules);
  n.renderer.rules.fence = (r, i, o, s, a) => {
    const l = r[i], u = l.content.trim();
    if (l.info === "mermaid") {
      let c;
      return r[i].map && r[i].level === 0 && (c = r[i].map[0], r[i].attrSet("data-line", String(c))), `<div class="${on}-mermaid" ${c !== void 0 ? "data-line=" + c : ""} data-mermaid-theme=${e.themeRef.value}>${u}</div>`;
    }
    return t(r, i, o, s, a);
  };
}, jyt = Gyt, h4 = (n, e) => {
  let t = !0, r = !0;
  const i = n.posMax, o = e > 0 ? n.src.charCodeAt(e - 1) : -1, s = e + 1 <= i ? n.src.charCodeAt(e + 1) : -1;
  return (o === 32 || o === 9 || s >= 48 && s <= 57) && (r = !1), (s === 32 || s === 9) && (t = !1), {
    can_open: t,
    can_close: r
  };
}, Hyt = (n, e) => {
  let t, r, i, o;
  if (n.src[n.pos] !== "$")
    return !1;
  if (i = h4(n, n.pos), !i.can_open)
    return e || (n.pending += "$"), n.pos += 1, !0;
  const s = n.pos + 1;
  for (t = s; (t = n.src.indexOf("$", t)) !== -1; ) {
    for (o = t - 1; n.src[o] === "\\"; )
      o -= 1;
    if ((t - o) % 2 == 1)
      break;
    t += 1;
  }
  return t === -1 ? (e || (n.pending += "$"), n.pos = s, !0) : t - s === 0 ? (e || (n.pending += "$$"), n.pos = s + 1, !0) : (i = h4(n, t), i.can_close ? (e || (r = n.push("math_inline", "math", 0), r.markup = "$", r.content = n.src.slice(s, t)), n.pos = t + 1, !0) : (e || (n.pending += "$"), n.pos = s, !0));
}, qyt = (n, e, t, r) => {
  let i, o, s, a, l = !1, u = n.bMarks[e] + n.tShift[e], c = n.eMarks[e];
  if (u + 2 > c || n.src.slice(u, u + 2) !== "$$")
    return !1;
  if (u += 2, i = n.src.slice(u, c), r)
    return !0;
  for (i.trim().slice(-2) === "$$" && (i = i.trim().slice(0, -2), l = !0), s = e; !l && (s++, !(s >= t || (u = n.bMarks[s] + n.tShift[s], c = n.eMarks[s], u < c && n.tShift[s] < n.blkIndent))); )
    n.src.slice(u, c).trim().slice(-2) === "$$" && (a = n.src.slice(0, c).lastIndexOf("$$"), o = n.src.slice(u, a), l = !0);
  n.line = s + 1;
  const h = n.push("math_block", "math", 0);
  return h.block = !0, h.content = (i && i.trim() ? i + `
` : "") + n.getLines(e + 1, s, n.tShift[e], !0) + (o && o.trim() ? o : ""), h.map = [e, n.line], h.markup = "$$", !0;
}, Yyt = (n, e) => {
  const t = (i) => {
    if (e.katexRef.value) {
      const o = e.katexRef.value.renderToString(i, {
        throwOnError: !1
      });
      return `<span class="${on}-katex-inline" data-processed>${o}</span>`;
    } else
      return `<span class="${on}-katex-inline">${i}</span>`;
  }, r = (i, o) => {
    if (e.katexRef.value) {
      const s = e.katexRef.value.renderToString(i, {
        throwOnError: !1,
        displayMode: !0
      });
      return `<p class="${on}-katex-block" data-line=${o} data-processed>${s}</p>`;
    } else
      return `<p class="${on}-katex-block" data-line=${o}>${i}</p>`;
  };
  n.inline.ruler.after("escape", "math_inline", Hyt), n.block.ruler.after("blockquote", "math_block", qyt, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), n.renderer.rules.math_inline = (i, o) => t(i[o].content), n.renderer.rules.math_block = (i, o) => r(i[o].content, i[o].map[0]) + `
`;
}, Xyt = Yyt, Uyt = (n, e) => {
  e = e || {};
  const t = 3, r = e.marker || "!", i = r.charCodeAt(0), o = r.length;
  let s = "", a = "";
  const l = (c, h, f, d, p) => {
    const g = c[h];
    return g.type === "admonition_open" ? (c[h].attrPush([
      "class",
      `${on}-admonition ${on}-admonition-${g.info}`
    ]), c[h].attrSet("data-line", String(c[h].map[0]))) : g.type === "admonition_title_open" && c[h].attrPush(["class", `${on}-admonition-title`]), p.renderToken(c, h, f);
  }, u = (c) => {
    const h = c.trim().split(" ", 2);
    a = "", s = h[0], h.length > 1 && (a = c.substring(s.length + 2)), (a === "" || !a) && (a = s);
  };
  n.block.ruler.before(
    "code",
    "admonition",
    (c, h, f, d) => {
      let p, g, v, m = !1, y = c.bMarks[h] + c.tShift[h], b = c.eMarks[h];
      if (i !== c.src.charCodeAt(y))
        return !1;
      for (p = y + 1; p <= b && r[(p - y) % o] === c.src[p]; p++)
        ;
      const O = Math.floor((p - y) / o);
      if (O !== t)
        return !1;
      p -= (p - y) % o;
      const w = c.src.slice(y, p), x = c.src.slice(p, b);
      if (u(x), d)
        return !0;
      for (g = h; g++, !(g >= f || (y = c.bMarks[g] + c.tShift[g], b = c.eMarks[g], y < b && c.sCount[g] < c.blkIndent)); )
        if (i === c.src.charCodeAt(y) && !(c.sCount[g] - c.blkIndent >= 4)) {
          for (p = y + 1; p <= b && r[(p - y) % o] === c.src[p]; p++)
            ;
          if (!(Math.floor((p - y) / o) < O) && (p -= (p - y) % o, p = c.skipSpaces(p), !(p < b))) {
            m = !0;
            break;
          }
        }
      const S = c.parentType, _ = c.lineMax;
      return c.parentType = "root", c.lineMax = g, v = c.push("admonition_open", "div", 1), v.markup = w, v.block = !0, v.info = s, v.map = [h, g], v = c.push("admonition_title_open", "p", 1), v.markup = w + " " + s, v.map = [h, g], v = c.push("inline", "", 0), v.content = a, v.map = [h, c.line - 1], v.children = [], v = c.push("admonition_title_close", "p", -1), v.markup = w + " " + s, c.md.block.tokenize(c, h + 1, g), v = c.push("admonition_close", "div", -1), v.markup = c.src.slice(y, p), v.block = !0, c.parentType = S, c.lineMax = _, c.line = g + (m ? 1 : 0), !0;
    },
    {
      alt: ["paragraph", "reference", "blockquote", "list"]
    }
  ), n.renderer.rules.admonition_open = l, n.renderer.rules.admonition_title_open = l, n.renderer.rules.admonition_title_close = l, n.renderer.rules.admonition_close = l;
}, Kyt = Uyt, Jyt = (n, e) => {
  n.renderer.rules.heading_open = (t, r) => {
    var i;
    const o = t[r], s = ((i = t[r + 1].children) == null ? void 0 : i.reduce((l, u) => l + (u.content || ""), "")) || "", a = o.markup.length;
    return e.headsRef.value.push({
      text: s,
      level: a
    }), o.map && o.level === 0 && (o.attrSet("data-line", String(o.map[0])), o.attrSet(
      "id",
      e.mdHeadingId(s, a, e.headsRef.value.length)
    )), n.renderer.renderToken(t, r, e);
  }, n.renderer.rules.heading_close = (t, r, i, o, s) => s.renderToken(t, r, i);
}, e0t = Jyt, t0t = (n, e) => {
  const t = n.renderer.rules.fence, r = n.utils.unescapeAll, i = /\[(\w*)(?::([\w ]*))?\]/;
  function o(u) {
    return u.info ? r(u.info).trim() : "";
  }
  function s(u) {
    const c = o(u), [h = null, f = ""] = (i.exec(c) || []).slice(1);
    return [h, f];
  }
  function a(u) {
    const c = o(u);
    return c ? c.split(/(\s+)/g)[0] : "";
  }
  const l = (u, c, h, f, d) => {
    if (u[c].hidden)
      return "";
    const [p, g] = s(u[c]);
    if (p === null)
      return t(u, c, h, f, d);
    let v, m, y, b, O = "", w = "";
    for (let x = c; x < u.length && (v = u[x], [m, y] = s(v), m === p); x++)
      v.info = v.info.replace(i, ""), v.hidden = !0, b = x - c > 0 ? "" : " checked", O += `<li><input type="radio" name="label-group-${e.editorId}-${c}"${b}><label for="group-${e.editorId}-${c}-tab-${x - c}" onclick="this.previousElementSibling.click()">${y || a(v)}</label></li>
`, w += `<input type="radio" id="group-${e.editorId}-${c}-tab-${x - c}" name="group-${e.editorId}-${c}"${b}>
` + t(u, x, h, f, d);
    return `<div class="code-tabs">
<ul>
` + O + `</ul>
` + w + "</div>";
  };
  n.renderer.rules.fence = l;
}, n0t = t0t, r0t = (n) => {
  [
    "paragraph_open",
    "table_open",
    "ordered_list_open",
    "bullet_list_open",
    "blockquote_open",
    "hr",
    "html_block",
    "fence"
  ].forEach((e) => {
    const t = n.renderer.rules[e];
    t ? n.renderer.rules[e] = (r, i, o, s, a) => {
      let l;
      const u = t(r, i, o, s, a);
      return r[i].map && r[i].level === 0 && !/^<!--/.test(u) ? (l = r[i].map[0], u.replace(/^(<[^>]*)/, `$1 data-line="${l}"`)) : u;
    } : n.renderer.rules[e] = (r, i, o, s, a) => {
      let l;
      return r[i].map && r[i].level === 0 && (l = r[i].map[0], r[i].attrSet("data-line", String(l))), a.renderToken(r, i, o);
    };
  });
}, i0t = (n, e) => {
  const { editorConfig: t, markdownItConfig: r, markdownItPlugins: i } = tl, o = $e("editorId"), s = $e("showCodeRowNumber"), a = $e("theme"), l = F([]), u = zyt(n), c = Wyt(n), { reRenderRef: h, replaceMermaid: f } = Qyt(n), d = Smt({
    html: !0,
    breaks: !0
  });
  r(d, {
    editorId: o
  });
  const p = [
    {
      type: "katex",
      plugin: Xyt,
      options: { katexRef: c }
    },
    {
      type: "image",
      plugin: Cmt,
      options: { figcaption: !0, classes: "md-zoom" }
    },
    {
      type: "admonition",
      plugin: Kyt,
      options: {}
    },
    {
      type: "taskList",
      plugin: Bmt,
      options: {}
    },
    {
      type: "heading",
      plugin: e0t,
      options: { mdHeadingId: n.mdHeadingId, headsRef: l }
    },
    {
      type: "codeTabs",
      plugin: n0t,
      options: { editorId: o }
    },
    {
      type: "xss",
      plugin: Myt,
      options: {
        // https://github.com/leizongmin/js-xss/blob/master/README.zh.md
        xss(w) {
          return {
            whiteList: Object.assign({}, w.getDefaultWhiteList(), {
              input: ["class", "disabled", "type", "checked"]
            })
          };
        }
      }
    }
  ];
  n.noMermaid || p.push({
    type: "mermaid",
    plugin: jyt,
    options: { themeRef: a }
  }), i(p, {
    editorId: o
  }).forEach((w) => {
    d.use(w.plugin, w.options);
  });
  const g = d.options.highlight;
  d.set({
    highlight: (w, x, S) => {
      if (g) {
        const A = g(w, x, S);
        if (A)
          return A;
      }
      let _;
      !n.noHighlight && u.value ? u.value.getLanguage(x) ? _ = u.value.highlight(w, {
        language: x,
        ignoreIllegals: !0
      }).value : _ = u.value.highlightAuto(w).value : _ = d.utils.escapeHtml(w);
      const C = s ? vPe(_.replace(/^\n+|\n+$/g, "")) : `<span class="code-block">${_.replace(/^\n+|\n+$/g, "")}</span>`;
      return `<pre><code class="language-${x}" language=${x}>${C}</code></pre>`;
    }
  }), r0t(d);
  const v = F(`_article-key_${vE()}`), m = F(n.sanitize(d.render(n.modelValue))), y = () => {
    Gh.emit(o, pPe, m.value), n.onHtmlChanged(m.value), n.onGetCatalog(l.value), Gh.emit(o, A5, l.value), f();
  };
  dt(y);
  const b = () => {
    l.value = [], m.value = n.sanitize(d.render(n.modelValue)), y();
  }, O = B(() => (n.noKatex || c.value) && (n.noHighlight || u.value));
  return de(
    [hs(n, "modelValue"), O, h],
    LL(
      b,
      (t == null ? void 0 : t.renderDelay) !== void 0 ? t == null ? void 0 : t.renderDelay : e ? 0 : 500
    )
  ), dt(() => {
    Gh.on(o, {
      name: gPe,
      callback() {
        Gh.emit(o, A5, l.value);
      }
    }), Gh.on(o, {
      name: Dq,
      callback: () => {
        b(), v.value = `_article-key_${vE()}`;
      }
    });
  }), { html: m, key: v };
}, o0t = i0t, EU = {
  modelValue: {
    type: String,
    default: ""
  },
  setting: {
    type: Object,
    default: () => ({})
  },
  onHtmlChanged: {
    type: Function,
    default: () => {
    }
  },
  onGetCatalog: {
    type: Function,
    default: () => {
    }
  },
  mdHeadingId: {
    type: Function,
    default: () => ""
  },
  noMermaid: {
    type: Boolean,
    default: !1
  },
  sanitize: {
    type: Function,
    default: (n) => n
  },
  // 不使用该函数功能
  noKatex: {
    type: Boolean,
    default: !1
  },
  formatCopiedText: {
    type: Function,
    default: (n) => n
  },
  noHighlight: {
    type: Boolean,
    default: !1
  },
  previewOnly: {
    type: Boolean,
    default: !1
  },
  noImgZoomIn: {
    type: Boolean
  },
  sanitizeMermaid: {
    type: Function
  }
};
({
  ...EU
});
const s0t = /* @__PURE__ */ U({
  name: "ContentPreview",
  props: EU,
  setup(n) {
    const e = $e("editorId"), t = $e("previewTheme"), r = $e("showCodeRowNumber"), {
      html: i,
      key: o
    } = o0t(n, n.previewOnly);
    return Byt(n, i, o), Ryt(n, i), () => pe(pr, null, [pe("div", {
      id: `${e}-preview-wrapper`,
      class: `${on}-preview-wrapper`,
      "data-show": n.setting.preview,
      key: "content-preview-wrapper"
    }, [pe("div", {
      key: o.value,
      id: `${e}-preview`,
      class: [`${on}-preview`, `${t == null ? void 0 : t.value}-theme`, r && `${on}-scrn`],
      innerHTML: i.value
    }, null)]), !n.previewOnly && pe("div", {
      id: `${e}-html-wrapper`,
      class: `${on}-preview-wrapper`,
      "data-show": n.setting.htmlPreview,
      key: "html-preview-wrapper"
    }, [pe("div", {
      class: `${on}-html`
    }, [i.value])])]);
  }
}), a0t = (n) => {
  var e, t;
  const { editorId: r } = n, i = (t = (e = tl) == null ? void 0 : e.editorExtensions) == null ? void 0 : t.highlight;
  Jt("editorId", r), Jt(
    "theme",
    B(() => n.theme)
  ), Jt(
    "language",
    B(() => n.language)
  ), Jt(
    "highlight",
    B(() => {
      const s = {
        ...C5,
        ...i == null ? void 0 : i.css
      }, a = n.codeStyleReverse && n.codeStyleReverseList.includes(n.previewTheme) ? "dark" : n.theme;
      return {
        js: (i == null ? void 0 : i.js) || sPe,
        css: s[n.codeTheme] ? s[n.codeTheme][a] : C5.atom[a]
      };
    })
  ), Jt("showCodeRowNumber", n.showCodeRowNumber);
  const o = B(() => {
    var s, a;
    const l = {
      ...S5,
      ...(a = (s = tl) == null ? void 0 : s.editorConfig) == null ? void 0 : a.languageUserDefined
    };
    return l[n.language] ? l[n.language] : S5["zh-CN"];
  });
  Jt("usedLanguageText", o), Jt(
    "previewTheme",
    B(() => n.previewTheme)
  ), Jt(
    "customIcon",
    B(() => n.customIcon)
  );
}, l0t = (n) => {
  dt(() => {
    var e, t;
    if (!n.noIconfont)
      if (tl.iconfontType === "svg") {
        const r = document.createElement("script");
        r.src = ((e = tl.editorExtensions) == null ? void 0 : e.iconfont) || iPe, r.id = `${on}-icon`, Hf(r);
      } else {
        const r = document.createElement("link");
        r.rel = "stylesheet", r.href = ((t = tl.editorExtensions) == null ? void 0 : t.iconfontClass) || oPe, r.id = `${on}-icon-class`, Hf(r);
      }
  });
}, u0t = (n) => n, kU = {
  /**
   * markdown content.
   *
   * @default ''
   */
  modelValue: {
    type: String,
    default: ""
  },
  /**
   * 主题，支持light和dark
   *
   * @default 'light'
   */
  theme: {
    type: String,
    default: "light"
  },
  /**
   * 外层类名
   *
   * @default ''
   */
  class: {
    type: String,
    default: ""
  },
  /**
   * 预设语言名称
   *
   * @default 'zh-CN'
   */
  language: {
    type: String,
    default: "zh-CN"
  },
  /**
   * html变化事件
   */
  onHtmlChanged: {
    type: Function
  },
  /**
   * 获取目录结构
   */
  onGetCatalog: {
    type: Function
  },
  /**
   * 编辑器唯一标识
   *
   * @default 'md-editor-v3'
   */
  editorId: {
    type: String,
    default: rPe
  },
  /**
   * 预览中代码是否显示行号
   *
   * @default false
   */
  showCodeRowNumber: {
    type: Boolean,
    default: !1
  },
  /**
   * 预览内容样式
   *
   * @default 'default'
   */
  previewTheme: {
    type: String,
    default: "default"
  },
  /**
   * 编辑器样式
   */
  style: {
    type: Object,
    default: () => ({})
  },
  /**
   * 标题的id生成方式
   *
   * @default (text: string) => text
   */
  mdHeadingId: {
    type: Function,
    default: u0t
  },
  /**
   *
   * 不能保证文本正确的情况，在marked编译md文本后通过该方法处理
   * 推荐DOMPurify、sanitize-html
   *
   * @default (text: string) => text
   */
  sanitize: {
    type: Function,
    default: (n) => n
  },
  /**
   * 不使用该mermaid
   *
   * @default false
   */
  noMermaid: {
    type: Boolean,
    default: !1
  },
  /**
   * 不使用katex
   *
   * @default false
   */
  noKatex: {
    type: Boolean,
    default: !1
  },
  /**
   * 代码主题
   *
   * @default 'atom'
   */
  codeTheme: {
    type: String,
    default: "atom"
  },
  /**
   * 不插入iconfont链接
   *
   * @default false
   */
  noIconfont: {
    type: Boolean
  },
  /**
   * 复制代码格式化方法
   *
   * @default (text) => text
   */
  formatCopiedText: {
    type: Function,
    default: (n) => n
  },
  /**
   * 某些预览主题的代码模块背景是暗色系
   * 将这个属性设置为true，会自动在该主题下的light模式下使用暗色系的代码风格
   *
   * @default true
   */
  codeStyleReverse: {
    type: Boolean,
    default: !0
  },
  /**
   * 需要自动调整的预览主题
   *
   * @default ['default', 'mk-cute']
   */
  codeStyleReverseList: {
    type: Array,
    default: ["default", "mk-cute"]
  },
  noHighlight: {
    type: Boolean,
    default: !1
  },
  /**
   * 是否关闭编辑器默认的放大缩小功能
   */
  noImgZoomIn: {
    type: Boolean,
    default: !1
  },
  /**
   * 自定义的图标
   */
  customIcon: {
    type: Object,
    default: {}
  },
  sanitizeMermaid: {
    type: Function,
    default: (n) => Promise.resolve(n)
  }
};
({
  ...kU
});
const MU = ["onHtmlChanged", "onGetCatalog"];
[
  ...MU
];
const c0t = (n, e) => {
  const { editorId: t } = n, r = {
    rerender() {
      Gh.emit(t, Dq);
    }
  };
  e.expose(r);
}, h0t = /* @__PURE__ */ U({
  name: "MdPreview",
  props: kU,
  emits: MU,
  setup(n, e) {
    const {
      editorId: t,
      noKatex: r,
      noMermaid: i,
      noHighlight: o
    } = n;
    return a0t(n), l0t(n), c0t(n, e), hi(() => {
      Gh.clear(t);
    }), () => pe("div", {
      id: t,
      class: [on, n.class, n.theme === "dark" && `${on}-dark`, `${on}-previewOnly`],
      style: n.style
    }, [pe(s0t, {
      modelValue: n.modelValue,
      onHtmlChanged: (s) => {
        n.onHtmlChanged ? n.onHtmlChanged(s) : e.emit("onHtmlChanged", s);
      },
      onGetCatalog: (s) => {
        n.onGetCatalog ? n.onGetCatalog(s) : e.emit("onGetCatalog", s);
      },
      mdHeadingId: n.mdHeadingId,
      noMermaid: i,
      sanitize: n.sanitize,
      noKatex: r,
      formatCopiedText: n.formatCopiedText,
      noHighlight: o,
      noImgZoomIn: n.noImgZoomIn,
      previewOnly: !0,
      sanitizeMermaid: n.sanitizeMermaid
    }, null)]);
  }
}), j2 = h0t;
j2.install = (n) => (n.component(j2.name, j2), n);
const f0t = UL({
  String: ee.string,
  Number: ee.number,
  "True False": ee.bool,
  PropertyName: ee.propertyName,
  Null: ee.null,
  ",": ee.separator,
  "[ ]": ee.squareBracket,
  "{ }": ee.brace
}), d0t = d0.deserialize({
  version: 14,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",
  stateData: "#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",
  goto: "!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array",
  maxTerm: 25,
  nodeProps: [
    ["isolate", -2, 6, 11, ""],
    ["openedBy", 7, "{", 12, "["],
    ["closedBy", 8, "}", 13, "]"]
  ],
  propSources: [f0t],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",
  tokenizers: [0],
  topRules: { JsonText: [0, 1] },
  tokenPrec: 0
}), p0t = /* @__PURE__ */ a0.define({
  name: "json",
  parser: /* @__PURE__ */ d0t.configure({
    props: [
      /* @__PURE__ */ eI.add({
        Object: /* @__PURE__ */ ly({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ ly({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ nI.add({
        "Object Array": gY
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function k4t() {
  return new fY(p0t);
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var Tk = function(n, e) {
  return Tk = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t, r) {
    t.__proto__ = r;
  } || function(t, r) {
    for (var i in r)
      Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]);
  }, Tk(n, e);
};
function j(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
  Tk(n, e);
  function t() {
    this.constructor = n;
  }
  n.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
}
var g0t = /* @__PURE__ */ function() {
  function n() {
    this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1;
  }
  return n;
}(), v0t = /* @__PURE__ */ function() {
  function n() {
    this.browser = new g0t(), this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = typeof window < "u";
  }
  return n;
}(), ht = new v0t();
typeof wx == "object" && typeof wx.getSystemInfoSync == "function" ? (ht.wxa = !0, ht.touchEventsSupported = !0) : typeof document > "u" && typeof self < "u" ? ht.worker = !0 : typeof navigator > "u" || navigator.userAgent.indexOf("Node.js") === 0 ? (ht.node = !0, ht.svgSupported = !0) : m0t(navigator.userAgent, ht);
function m0t(n, e) {
  var t = e.browser, r = n.match(/Firefox\/([\d.]+)/), i = n.match(/MSIE\s([\d.]+)/) || n.match(/Trident\/.+?rv:(([\d.]+))/), o = n.match(/Edge?\/([\d.]+)/), s = /micromessenger/i.test(n);
  r && (t.firefox = !0, t.version = r[1]), i && (t.ie = !0, t.version = i[1]), o && (t.edge = !0, t.version = o[1], t.newEdge = +o[1].split(".")[0] > 18), s && (t.weChat = !0), e.svgSupported = typeof SVGRect < "u", e.touchEventsSupported = "ontouchstart" in window && !t.ie && !t.edge, e.pointerEventsSupported = "onpointerdown" in window && (t.edge || t.ie && +t.version >= 11), e.domSupported = typeof document < "u";
  var a = document.documentElement.style;
  e.transform3dSupported = (t.ie && "transition" in a || t.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in a) && !("OTransition" in a), e.transformSupported = e.transform3dSupported || t.ie && +t.version >= 9;
}
var PI = 12, DU = "sans-serif", Rc = PI + "px " + DU, y0t = 20, b0t = 100, O0t = "007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N";
function w0t(n) {
  var e = {};
  if (typeof JSON > "u")
    return e;
  for (var t = 0; t < n.length; t++) {
    var r = String.fromCharCode(t + 32), i = (n.charCodeAt(t) - y0t) / b0t;
    e[r] = i;
  }
  return e;
}
var x0t = w0t(O0t), $c = {
  createCanvas: function() {
    return typeof document < "u" && document.createElement("canvas");
  },
  measureText: /* @__PURE__ */ function() {
    var n, e;
    return function(t, r) {
      if (!n) {
        var i = $c.createCanvas();
        n = i && i.getContext("2d");
      }
      if (n)
        return e !== r && (e = n.font = r || Rc), n.measureText(t);
      t = t || "", r = r || Rc;
      var o = /(\d+)px/.exec(r), s = o && +o[1] || PI, a = 0;
      if (r.indexOf("mono") >= 0)
        a = s * t.length;
      else
        for (var l = 0; l < t.length; l++) {
          var u = x0t[t[l]];
          a += u == null ? s : u * s;
        }
      return { width: a };
    };
  }(),
  loadImage: function(n, e, t) {
    var r = new Image();
    return r.onload = e, r.onerror = t, r.src = n, r;
  }
}, LU = fl([
  "Function",
  "RegExp",
  "Date",
  "Error",
  "CanvasGradient",
  "CanvasPattern",
  "Image",
  "Canvas"
], function(n, e) {
  return n["[object " + e + "]"] = !0, n;
}, {}), IU = fl([
  "Int8",
  "Uint8",
  "Uint8Clamped",
  "Int16",
  "Uint16",
  "Int32",
  "Uint32",
  "Float32",
  "Float64"
], function(n, e) {
  return n["[object " + e + "Array]"] = !0, n;
}, {}), uv = Object.prototype.toString, Z_ = Array.prototype, S0t = Z_.forEach, _0t = Z_.filter, EI = Z_.slice, C0t = Z_.map, f4 = (function() {
}).constructor, R1 = f4 ? f4.prototype : null, kI = "__proto__", A0t = 2311;
function RU() {
  return A0t++;
}
function Js() {
  for (var n = [], e = 0; e < arguments.length; e++)
    n[e] = arguments[e];
  typeof console < "u" && console.error.apply(console, n);
}
function Re(n) {
  if (n == null || typeof n != "object")
    return n;
  var e = n, t = uv.call(n);
  if (t === "[object Array]") {
    if (!cy(n)) {
      e = [];
      for (var r = 0, i = n.length; r < i; r++)
        e[r] = Re(n[r]);
    }
  } else if (IU[t]) {
    if (!cy(n)) {
      var o = n.constructor;
      if (o.from)
        e = o.from(n);
      else {
        e = new o(n.length);
        for (var r = 0, i = n.length; r < i; r++)
          e[r] = n[r];
      }
    }
  } else if (!LU[t] && !cy(n) && !Jf(n)) {
    e = {};
    for (var s in n)
      n.hasOwnProperty(s) && s !== kI && (e[s] = Re(n[s]));
  }
  return e;
}
function Je(n, e, t) {
  if (!Me(e) || !Me(n))
    return t ? Re(e) : n;
  for (var r in e)
    if (e.hasOwnProperty(r) && r !== kI) {
      var i = n[r], o = e[r];
      Me(o) && Me(i) && !oe(o) && !oe(i) && !Jf(o) && !Jf(i) && !d4(o) && !d4(i) && !cy(o) && !cy(i) ? Je(i, o, t) : (t || !(r in n)) && (n[r] = Re(e[r]));
    }
  return n;
}
function MI(n, e) {
  for (var t = n[0], r = 1, i = n.length; r < i; r++)
    t = Je(t, n[r], e);
  return t;
}
function te(n, e) {
  if (Object.assign)
    Object.assign(n, e);
  else
    for (var t in e)
      e.hasOwnProperty(t) && t !== kI && (n[t] = e[t]);
  return n;
}
function Le(n, e, t) {
  for (var r = ft(e), i = 0; i < r.length; i++) {
    var o = r[i];
    (t ? e[o] != null : n[o] == null) && (n[o] = e[o]);
  }
  return n;
}
function ot(n, e) {
  if (n) {
    if (n.indexOf)
      return n.indexOf(e);
    for (var t = 0, r = n.length; t < r; t++)
      if (n[t] === e)
        return t;
  }
  return -1;
}
function T0t(n, e) {
  var t = n.prototype;
  function r() {
  }
  r.prototype = e.prototype, n.prototype = new r();
  for (var i in t)
    t.hasOwnProperty(i) && (n.prototype[i] = t[i]);
  n.prototype.constructor = n, n.superClass = e;
}
function lr(n, e, t) {
  if (n = "prototype" in n ? n.prototype : n, e = "prototype" in e ? e.prototype : e, Object.getOwnPropertyNames)
    for (var r = Object.getOwnPropertyNames(e), i = 0; i < r.length; i++) {
      var o = r[i];
      o !== "constructor" && (t ? e[o] != null : n[o] == null) && (n[o] = e[o]);
    }
  else
    Le(n, e, t);
}
function _i(n) {
  return !n || typeof n == "string" ? !1 : typeof n.length == "number";
}
function I(n, e, t) {
  if (n && e)
    if (n.forEach && n.forEach === S0t)
      n.forEach(e, t);
    else if (n.length === +n.length)
      for (var r = 0, i = n.length; r < i; r++)
        e.call(t, n[r], r, n);
    else
      for (var o in n)
        n.hasOwnProperty(o) && e.call(t, n[o], o, n);
}
function ae(n, e, t) {
  if (!n)
    return [];
  if (!e)
    return DI(n);
  if (n.map && n.map === C0t)
    return n.map(e, t);
  for (var r = [], i = 0, o = n.length; i < o; i++)
    r.push(e.call(t, n[i], i, n));
  return r;
}
function fl(n, e, t, r) {
  if (n && e) {
    for (var i = 0, o = n.length; i < o; i++)
      t = e.call(r, t, n[i], i, n);
    return t;
  }
}
function Gt(n, e, t) {
  if (!n)
    return [];
  if (!e)
    return DI(n);
  if (n.filter && n.filter === _0t)
    return n.filter(e, t);
  for (var r = [], i = 0, o = n.length; i < o; i++)
    e.call(t, n[i], i, n) && r.push(n[i]);
  return r;
}
function P0t(n, e, t) {
  if (n && e) {
    for (var r = 0, i = n.length; r < i; r++)
      if (e.call(t, n[r], r, n))
        return n[r];
  }
}
function ft(n) {
  if (!n)
    return [];
  if (Object.keys)
    return Object.keys(n);
  var e = [];
  for (var t in n)
    n.hasOwnProperty(t) && e.push(t);
  return e;
}
function E0t(n, e) {
  for (var t = [], r = 2; r < arguments.length; r++)
    t[r - 2] = arguments[r];
  return function() {
    return n.apply(e, t.concat(EI.call(arguments)));
  };
}
var Oe = R1 && Pe(R1.bind) ? R1.call.bind(R1.bind) : E0t;
function je(n) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  return function() {
    return n.apply(this, e.concat(EI.call(arguments)));
  };
}
function oe(n) {
  return Array.isArray ? Array.isArray(n) : uv.call(n) === "[object Array]";
}
function Pe(n) {
  return typeof n == "function";
}
function be(n) {
  return typeof n == "string";
}
function $x(n) {
  return uv.call(n) === "[object String]";
}
function Tt(n) {
  return typeof n == "number";
}
function Me(n) {
  var e = typeof n;
  return e === "function" || !!n && e === "object";
}
function d4(n) {
  return !!LU[uv.call(n)];
}
function zi(n) {
  return !!IU[uv.call(n)];
}
function Jf(n) {
  return typeof n == "object" && typeof n.nodeType == "number" && typeof n.ownerDocument == "object";
}
function W_(n) {
  return n.colorStops != null;
}
function k0t(n) {
  return n.image != null;
}
function $U(n) {
  return uv.call(n) === "[object RegExp]";
}
function ed(n) {
  return n !== n;
}
function tr() {
  for (var n = [], e = 0; e < arguments.length; e++)
    n[e] = arguments[e];
  for (var t = 0, r = n.length; t < r; t++)
    if (n[t] != null)
      return n[t];
}
function Qe(n, e) {
  return n ?? e;
}
function ys(n, e, t) {
  return n ?? e ?? t;
}
function DI(n) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  return EI.apply(n, e);
}
function LI(n) {
  if (typeof n == "number")
    return [n, n, n, n];
  var e = n.length;
  return e === 2 ? [n[0], n[1], n[0], n[1]] : e === 3 ? [n[0], n[1], n[2], n[1]] : n;
}
function De(n, e) {
  if (!n)
    throw new Error(e);
}
function Ys(n) {
  return n == null ? null : typeof n.trim == "function" ? n.trim() : n.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
}
var NU = "__ec_primitive__";
function Nx(n) {
  n[NU] = !0;
}
function cy(n) {
  return n[NU];
}
var M0t = function() {
  function n() {
    this.data = {};
  }
  return n.prototype.delete = function(e) {
    var t = this.has(e);
    return t && delete this.data[e], t;
  }, n.prototype.has = function(e) {
    return this.data.hasOwnProperty(e);
  }, n.prototype.get = function(e) {
    return this.data[e];
  }, n.prototype.set = function(e, t) {
    return this.data[e] = t, this;
  }, n.prototype.keys = function() {
    return ft(this.data);
  }, n.prototype.forEach = function(e) {
    var t = this.data;
    for (var r in t)
      t.hasOwnProperty(r) && e(t[r], r);
  }, n;
}(), BU = typeof Map == "function";
function D0t() {
  return BU ? /* @__PURE__ */ new Map() : new M0t();
}
var L0t = function() {
  function n(e) {
    var t = oe(e);
    this.data = D0t();
    var r = this;
    e instanceof n ? e.each(i) : e && I(e, i);
    function i(o, s) {
      t ? r.set(o, s) : r.set(s, o);
    }
  }
  return n.prototype.hasKey = function(e) {
    return this.data.has(e);
  }, n.prototype.get = function(e) {
    return this.data.get(e);
  }, n.prototype.set = function(e, t) {
    return this.data.set(e, t), t;
  }, n.prototype.each = function(e, t) {
    this.data.forEach(function(r, i) {
      e.call(t, r, i);
    });
  }, n.prototype.keys = function() {
    var e = this.data.keys();
    return BU ? Array.from(e) : e;
  }, n.prototype.removeKey = function(e) {
    this.data.delete(e);
  }, n;
}();
function _e(n) {
  return new L0t(n);
}
function Bx(n, e) {
  for (var t = new n.constructor(n.length + e.length), r = 0; r < n.length; r++)
    t[r] = n[r];
  for (var i = n.length, r = 0; r < e.length; r++)
    t[r + i] = e[r];
  return t;
}
function G_(n, e) {
  var t;
  if (Object.create)
    t = Object.create(n);
  else {
    var r = function() {
    };
    r.prototype = n, t = new r();
  }
  return e && te(t, e), t;
}
function VU(n) {
  var e = n.style;
  e.webkitUserSelect = "none", e.userSelect = "none", e.webkitTapHighlightColor = "rgba(0,0,0,0)", e["-webkit-touch-callout"] = "none";
}
function we(n, e) {
  return n.hasOwnProperty(e);
}
function qn() {
}
var gw = 180 / Math.PI;
function vd(n, e) {
  return n == null && (n = 0), e == null && (e = 0), [n, e];
}
function Di(n, e) {
  return n[0] = e[0], n[1] = e[1], n;
}
function Wl(n) {
  return [n[0], n[1]];
}
function I0t(n, e, t) {
  return n[0] = e, n[1] = t, n;
}
function p4(n, e, t) {
  return n[0] = e[0] + t[0], n[1] = e[1] + t[1], n;
}
function Pk(n, e, t, r) {
  return n[0] = e[0] + t[0] * r, n[1] = e[1] + t[1] * r, n;
}
function uf(n, e, t) {
  return n[0] = e[0] - t[0], n[1] = e[1] - t[1], n;
}
function Ek(n) {
  return Math.sqrt(R0t(n));
}
function R0t(n) {
  return n[0] * n[0] + n[1] * n[1];
}
function vw(n, e, t) {
  return n[0] = e[0] * t, n[1] = e[1] * t, n;
}
function cv(n, e) {
  var t = Ek(e);
  return t === 0 ? (n[0] = 0, n[1] = 0) : (n[0] = e[0] / t, n[1] = e[1] / t), n;
}
function kk(n, e) {
  return Math.sqrt((n[0] - e[0]) * (n[0] - e[0]) + (n[1] - e[1]) * (n[1] - e[1]));
}
var ic = kk;
function $0t(n, e) {
  return (n[0] - e[0]) * (n[0] - e[0]) + (n[1] - e[1]) * (n[1] - e[1]);
}
var Pf = $0t;
function mw(n, e, t, r) {
  return n[0] = e[0] + r * (t[0] - e[0]), n[1] = e[1] + r * (t[1] - e[1]), n;
}
function si(n, e, t) {
  var r = e[0], i = e[1];
  return n[0] = t[0] * r + t[2] * i + t[4], n[1] = t[1] * r + t[3] * i + t[5], n;
}
function oc(n, e, t) {
  return n[0] = Math.min(e[0], t[0]), n[1] = Math.min(e[1], t[1]), n;
}
function sc(n, e, t) {
  return n[0] = Math.max(e[0], t[0]), n[1] = Math.max(e[1], t[1]), n;
}
var $d = /* @__PURE__ */ function() {
  function n(e, t) {
    this.target = e, this.topTarget = t && t.topTarget;
  }
  return n;
}(), N0t = function() {
  function n(e) {
    this.handler = e, e.on("mousedown", this._dragStart, this), e.on("mousemove", this._drag, this), e.on("mouseup", this._dragEnd, this);
  }
  return n.prototype._dragStart = function(e) {
    for (var t = e.target; t && !t.draggable; )
      t = t.parent || t.__hostTarget;
    t && (this._draggingTarget = t, t.dragging = !0, this._x = e.offsetX, this._y = e.offsetY, this.handler.dispatchToElement(new $d(t, e), "dragstart", e.event));
  }, n.prototype._drag = function(e) {
    var t = this._draggingTarget;
    if (t) {
      var r = e.offsetX, i = e.offsetY, o = r - this._x, s = i - this._y;
      this._x = r, this._y = i, t.drift(o, s, e), this.handler.dispatchToElement(new $d(t, e), "drag", e.event);
      var a = this.handler.findHover(r, i, t).target, l = this._dropTarget;
      this._dropTarget = a, t !== a && (l && a !== l && this.handler.dispatchToElement(new $d(l, e), "dragleave", e.event), a && a !== l && this.handler.dispatchToElement(new $d(a, e), "dragenter", e.event));
    }
  }, n.prototype._dragEnd = function(e) {
    var t = this._draggingTarget;
    t && (t.dragging = !1), this.handler.dispatchToElement(new $d(t, e), "dragend", e.event), this._dropTarget && this.handler.dispatchToElement(new $d(this._dropTarget, e), "drop", e.event), this._draggingTarget = null, this._dropTarget = null;
  }, n;
}(), B0t = function() {
  function n(e) {
    e && (this._$eventProcessor = e);
  }
  return n.prototype.on = function(e, t, r, i) {
    this._$handlers || (this._$handlers = {});
    var o = this._$handlers;
    if (typeof t == "function" && (i = r, r = t, t = null), !r || !e)
      return this;
    var s = this._$eventProcessor;
    t != null && s && s.normalizeQuery && (t = s.normalizeQuery(t)), o[e] || (o[e] = []);
    for (var a = 0; a < o[e].length; a++)
      if (o[e][a].h === r)
        return this;
    var l = {
      h: r,
      query: t,
      ctx: i || this,
      callAtLast: r.zrEventfulCallAtLast
    }, u = o[e].length - 1, c = o[e][u];
    return c && c.callAtLast ? o[e].splice(u, 0, l) : o[e].push(l), this;
  }, n.prototype.isSilent = function(e) {
    var t = this._$handlers;
    return !t || !t[e] || !t[e].length;
  }, n.prototype.off = function(e, t) {
    var r = this._$handlers;
    if (!r)
      return this;
    if (!e)
      return this._$handlers = {}, this;
    if (t) {
      if (r[e]) {
        for (var i = [], o = 0, s = r[e].length; o < s; o++)
          r[e][o].h !== t && i.push(r[e][o]);
        r[e] = i;
      }
      r[e] && r[e].length === 0 && delete r[e];
    } else
      delete r[e];
    return this;
  }, n.prototype.trigger = function(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
      t[r - 1] = arguments[r];
    if (!this._$handlers)
      return this;
    var i = this._$handlers[e], o = this._$eventProcessor;
    if (i)
      for (var s = t.length, a = i.length, l = 0; l < a; l++) {
        var u = i[l];
        if (!(o && o.filter && u.query != null && !o.filter(e, u.query)))
          switch (s) {
            case 0:
              u.h.call(u.ctx);
              break;
            case 1:
              u.h.call(u.ctx, t[0]);
              break;
            case 2:
              u.h.call(u.ctx, t[0], t[1]);
              break;
            default:
              u.h.apply(u.ctx, t);
              break;
          }
      }
    return o && o.afterTrigger && o.afterTrigger(e), this;
  }, n.prototype.triggerWithContext = function(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
      t[r - 1] = arguments[r];
    if (!this._$handlers)
      return this;
    var i = this._$handlers[e], o = this._$eventProcessor;
    if (i)
      for (var s = t.length, a = t[s - 1], l = i.length, u = 0; u < l; u++) {
        var c = i[u];
        if (!(o && o.filter && c.query != null && !o.filter(e, c.query)))
          switch (s) {
            case 0:
              c.h.call(a);
              break;
            case 1:
              c.h.call(a, t[0]);
              break;
            case 2:
              c.h.call(a, t[0], t[1]);
              break;
            default:
              c.h.apply(a, t.slice(1, s - 1));
              break;
          }
      }
    return o && o.afterTrigger && o.afterTrigger(e), this;
  }, n;
}();
const Ps = B0t;
var V0t = Math.log(2);
function Mk(n, e, t, r, i, o) {
  var s = r + "-" + i, a = n.length;
  if (o.hasOwnProperty(s))
    return o[s];
  if (e === 1) {
    var l = Math.round(Math.log((1 << a) - 1 & ~i) / V0t);
    return n[t][l];
  }
  for (var u = r | 1 << t, c = t + 1; r & 1 << c; )
    c++;
  for (var h = 0, f = 0, d = 0; f < a; f++) {
    var p = 1 << f;
    p & i || (h += (d % 2 ? -1 : 1) * n[t][f] * Mk(n, e - 1, c, u, i | p, o), d++);
  }
  return o[s] = h, h;
}
function g4(n, e) {
  var t = [
    [n[0], n[1], 1, 0, 0, 0, -e[0] * n[0], -e[0] * n[1]],
    [0, 0, 0, n[0], n[1], 1, -e[1] * n[0], -e[1] * n[1]],
    [n[2], n[3], 1, 0, 0, 0, -e[2] * n[2], -e[2] * n[3]],
    [0, 0, 0, n[2], n[3], 1, -e[3] * n[2], -e[3] * n[3]],
    [n[4], n[5], 1, 0, 0, 0, -e[4] * n[4], -e[4] * n[5]],
    [0, 0, 0, n[4], n[5], 1, -e[5] * n[4], -e[5] * n[5]],
    [n[6], n[7], 1, 0, 0, 0, -e[6] * n[6], -e[6] * n[7]],
    [0, 0, 0, n[6], n[7], 1, -e[7] * n[6], -e[7] * n[7]]
  ], r = {}, i = Mk(t, 8, 0, 0, 0, r);
  if (i !== 0) {
    for (var o = [], s = 0; s < 8; s++)
      for (var a = 0; a < 8; a++)
        o[a] == null && (o[a] = 0), o[a] += ((s + a) % 2 ? -1 : 1) * Mk(t, 7, s === 0 ? 1 : 0, 1 << s, 1 << a, r) / i * e[s];
    return function(l, u, c) {
      var h = u * o[6] + c * o[7] + 1;
      l[0] = (u * o[0] + c * o[1] + o[2]) / h, l[1] = (u * o[3] + c * o[4] + o[5]) / h;
    };
  }
}
var v4 = "___zrEVENTSAVED", H2 = [];
function z0t(n, e, t, r, i) {
  return Dk(H2, e, r, i, !0) && Dk(n, t, H2[0], H2[1]);
}
function Dk(n, e, t, r, i) {
  if (e.getBoundingClientRect && ht.domSupported && !zU(e)) {
    var o = e[v4] || (e[v4] = {}), s = F0t(e, o), a = Q0t(s, o, i);
    if (a)
      return a(n, t, r), !0;
  }
  return !1;
}
function F0t(n, e) {
  var t = e.markers;
  if (t)
    return t;
  t = e.markers = [];
  for (var r = ["left", "right"], i = ["top", "bottom"], o = 0; o < 4; o++) {
    var s = document.createElement("div"), a = s.style, l = o % 2, u = (o >> 1) % 2;
    a.cssText = [
      "position: absolute",
      "visibility: hidden",
      "padding: 0",
      "margin: 0",
      "border-width: 0",
      "user-select: none",
      "width:0",
      "height:0",
      r[l] + ":0",
      i[u] + ":0",
      r[1 - l] + ":auto",
      i[1 - u] + ":auto",
      ""
    ].join("!important;"), n.appendChild(s), t.push(s);
  }
  return t;
}
function Q0t(n, e, t) {
  for (var r = t ? "invTrans" : "trans", i = e[r], o = e.srcCoords, s = [], a = [], l = !0, u = 0; u < 4; u++) {
    var c = n[u].getBoundingClientRect(), h = 2 * u, f = c.left, d = c.top;
    s.push(f, d), l = l && o && f === o[h] && d === o[h + 1], a.push(n[u].offsetLeft, n[u].offsetTop);
  }
  return l && i ? i : (e.srcCoords = s, e[r] = t ? g4(a, s) : g4(s, a));
}
function zU(n) {
  return n.nodeName.toUpperCase() === "CANVAS";
}
var Z0t = /([&<>"'])/g, W0t = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function no(n) {
  return n == null ? "" : (n + "").replace(Z0t, function(e, t) {
    return W0t[t];
  });
}
var G0t = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, q2 = [], j0t = ht.browser.firefox && +ht.browser.version.split(".")[0] < 39;
function Lk(n, e, t, r) {
  return t = t || {}, r ? m4(n, e, t) : j0t && e.layerX != null && e.layerX !== e.offsetX ? (t.zrX = e.layerX, t.zrY = e.layerY) : e.offsetX != null ? (t.zrX = e.offsetX, t.zrY = e.offsetY) : m4(n, e, t), t;
}
function m4(n, e, t) {
  if (ht.domSupported && n.getBoundingClientRect) {
    var r = e.clientX, i = e.clientY;
    if (zU(n)) {
      var o = n.getBoundingClientRect();
      t.zrX = r - o.left, t.zrY = i - o.top;
      return;
    } else if (Dk(q2, n, r, i)) {
      t.zrX = q2[0], t.zrY = q2[1];
      return;
    }
  }
  t.zrX = t.zrY = 0;
}
function II(n) {
  return n || window.event;
}
function Jo(n, e, t) {
  if (e = II(e), e.zrX != null)
    return e;
  var r = e.type, i = r && r.indexOf("touch") >= 0;
  if (i) {
    var s = r !== "touchend" ? e.targetTouches[0] : e.changedTouches[0];
    s && Lk(n, s, e, t);
  } else {
    Lk(n, e, e, t);
    var o = H0t(e);
    e.zrDelta = o ? o / 120 : -(e.detail || 0) / 3;
  }
  var a = e.button;
  return e.which == null && a !== void 0 && G0t.test(e.type) && (e.which = a & 1 ? 1 : a & 2 ? 3 : a & 4 ? 2 : 0), e;
}
function H0t(n) {
  var e = n.wheelDelta;
  if (e)
    return e;
  var t = n.deltaX, r = n.deltaY;
  if (t == null || r == null)
    return e;
  var i = Math.abs(r !== 0 ? r : t), o = r > 0 ? -1 : r < 0 ? 1 : t > 0 ? -1 : 1;
  return 3 * i * o;
}
function Ik(n, e, t, r) {
  n.addEventListener(e, t, r);
}
function q0t(n, e, t, r) {
  n.removeEventListener(e, t, r);
}
var iu = function(n) {
  n.preventDefault(), n.stopPropagation(), n.cancelBubble = !0;
};
function y4(n) {
  return n.which === 2 || n.which === 3;
}
var Y0t = function() {
  function n() {
    this._track = [];
  }
  return n.prototype.recognize = function(e, t, r) {
    return this._doTrack(e, t, r), this._recognize(e);
  }, n.prototype.clear = function() {
    return this._track.length = 0, this;
  }, n.prototype._doTrack = function(e, t, r) {
    var i = e.touches;
    if (i) {
      for (var o = {
        points: [],
        touches: [],
        target: t,
        event: e
      }, s = 0, a = i.length; s < a; s++) {
        var l = i[s], u = Lk(r, l, {});
        o.points.push([u.zrX, u.zrY]), o.touches.push(l);
      }
      this._track.push(o);
    }
  }, n.prototype._recognize = function(e) {
    for (var t in Y2)
      if (Y2.hasOwnProperty(t)) {
        var r = Y2[t](this._track, e);
        if (r)
          return r;
      }
  }, n;
}();
function b4(n) {
  var e = n[1][0] - n[0][0], t = n[1][1] - n[0][1];
  return Math.sqrt(e * e + t * t);
}
function X0t(n) {
  return [
    (n[0][0] + n[1][0]) / 2,
    (n[0][1] + n[1][1]) / 2
  ];
}
var Y2 = {
  pinch: function(n, e) {
    var t = n.length;
    if (t) {
      var r = (n[t - 1] || {}).points, i = (n[t - 2] || {}).points || r;
      if (i && i.length > 1 && r && r.length > 1) {
        var o = b4(r) / b4(i);
        !isFinite(o) && (o = 1), e.pinchScale = o;
        var s = X0t(r);
        return e.pinchX = s[0], e.pinchY = s[1], {
          type: "pinch",
          target: n[0].target,
          event: e
        };
      }
    }
  }
};
function Bo() {
  return [1, 0, 0, 1, 0, 0];
}
function j_(n) {
  return n[0] = 1, n[1] = 0, n[2] = 0, n[3] = 1, n[4] = 0, n[5] = 0, n;
}
function RI(n, e) {
  return n[0] = e[0], n[1] = e[1], n[2] = e[2], n[3] = e[3], n[4] = e[4], n[5] = e[5], n;
}
function Gl(n, e, t) {
  var r = e[0] * t[0] + e[2] * t[1], i = e[1] * t[0] + e[3] * t[1], o = e[0] * t[2] + e[2] * t[3], s = e[1] * t[2] + e[3] * t[3], a = e[0] * t[4] + e[2] * t[5] + e[4], l = e[1] * t[4] + e[3] * t[5] + e[5];
  return n[0] = r, n[1] = i, n[2] = o, n[3] = s, n[4] = a, n[5] = l, n;
}
function dl(n, e, t) {
  return n[0] = e[0], n[1] = e[1], n[2] = e[2], n[3] = e[3], n[4] = e[4] + t[0], n[5] = e[5] + t[1], n;
}
function md(n, e, t, r) {
  r === void 0 && (r = [0, 0]);
  var i = e[0], o = e[2], s = e[4], a = e[1], l = e[3], u = e[5], c = Math.sin(t), h = Math.cos(t);
  return n[0] = i * h + a * c, n[1] = -i * c + a * h, n[2] = o * h + l * c, n[3] = -o * c + h * l, n[4] = h * (s - r[0]) + c * (u - r[1]) + r[0], n[5] = h * (u - r[1]) - c * (s - r[0]) + r[1], n;
}
function $I(n, e, t) {
  var r = t[0], i = t[1];
  return n[0] = e[0] * r, n[1] = e[1] * i, n[2] = e[2] * r, n[3] = e[3] * i, n[4] = e[4] * r, n[5] = e[5] * i, n;
}
function hv(n, e) {
  var t = e[0], r = e[2], i = e[4], o = e[1], s = e[3], a = e[5], l = t * s - o * r;
  return l ? (l = 1 / l, n[0] = s * l, n[1] = -o * l, n[2] = -r * l, n[3] = t * l, n[4] = (r * a - s * i) * l, n[5] = (o * i - t * a) * l, n) : null;
}
function U0t(n) {
  var e = Bo();
  return RI(e, n), e;
}
var Xe = function() {
  function n(e, t) {
    this.x = e || 0, this.y = t || 0;
  }
  return n.prototype.copy = function(e) {
    return this.x = e.x, this.y = e.y, this;
  }, n.prototype.clone = function() {
    return new n(this.x, this.y);
  }, n.prototype.set = function(e, t) {
    return this.x = e, this.y = t, this;
  }, n.prototype.equal = function(e) {
    return e.x === this.x && e.y === this.y;
  }, n.prototype.add = function(e) {
    return this.x += e.x, this.y += e.y, this;
  }, n.prototype.scale = function(e) {
    this.x *= e, this.y *= e;
  }, n.prototype.scaleAndAdd = function(e, t) {
    this.x += e.x * t, this.y += e.y * t;
  }, n.prototype.sub = function(e) {
    return this.x -= e.x, this.y -= e.y, this;
  }, n.prototype.dot = function(e) {
    return this.x * e.x + this.y * e.y;
  }, n.prototype.len = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }, n.prototype.lenSquare = function() {
    return this.x * this.x + this.y * this.y;
  }, n.prototype.normalize = function() {
    var e = this.len();
    return this.x /= e, this.y /= e, this;
  }, n.prototype.distance = function(e) {
    var t = this.x - e.x, r = this.y - e.y;
    return Math.sqrt(t * t + r * r);
  }, n.prototype.distanceSquare = function(e) {
    var t = this.x - e.x, r = this.y - e.y;
    return t * t + r * r;
  }, n.prototype.negate = function() {
    return this.x = -this.x, this.y = -this.y, this;
  }, n.prototype.transform = function(e) {
    if (e) {
      var t = this.x, r = this.y;
      return this.x = e[0] * t + e[2] * r + e[4], this.y = e[1] * t + e[3] * r + e[5], this;
    }
  }, n.prototype.toArray = function(e) {
    return e[0] = this.x, e[1] = this.y, e;
  }, n.prototype.fromArray = function(e) {
    this.x = e[0], this.y = e[1];
  }, n.set = function(e, t, r) {
    e.x = t, e.y = r;
  }, n.copy = function(e, t) {
    e.x = t.x, e.y = t.y;
  }, n.len = function(e) {
    return Math.sqrt(e.x * e.x + e.y * e.y);
  }, n.lenSquare = function(e) {
    return e.x * e.x + e.y * e.y;
  }, n.dot = function(e, t) {
    return e.x * t.x + e.y * t.y;
  }, n.add = function(e, t, r) {
    e.x = t.x + r.x, e.y = t.y + r.y;
  }, n.sub = function(e, t, r) {
    e.x = t.x - r.x, e.y = t.y - r.y;
  }, n.scale = function(e, t, r) {
    e.x = t.x * r, e.y = t.y * r;
  }, n.scaleAndAdd = function(e, t, r, i) {
    e.x = t.x + r.x * i, e.y = t.y + r.y * i;
  }, n.lerp = function(e, t, r, i) {
    var o = 1 - i;
    e.x = o * t.x + i * r.x, e.y = o * t.y + i * r.y;
  }, n;
}(), $1 = Math.min, N1 = Math.max, hh = new Xe(), fh = new Xe(), dh = new Xe(), ph = new Xe(), zv = new Xe(), Fv = new Xe(), K0t = function() {
  function n(e, t, r, i) {
    r < 0 && (e = e + r, r = -r), i < 0 && (t = t + i, i = -i), this.x = e, this.y = t, this.width = r, this.height = i;
  }
  return n.prototype.union = function(e) {
    var t = $1(e.x, this.x), r = $1(e.y, this.y);
    isFinite(this.x) && isFinite(this.width) ? this.width = N1(e.x + e.width, this.x + this.width) - t : this.width = e.width, isFinite(this.y) && isFinite(this.height) ? this.height = N1(e.y + e.height, this.y + this.height) - r : this.height = e.height, this.x = t, this.y = r;
  }, n.prototype.applyTransform = function(e) {
    n.applyTransform(this, this, e);
  }, n.prototype.calculateTransform = function(e) {
    var t = this, r = e.width / t.width, i = e.height / t.height, o = Bo();
    return dl(o, o, [-t.x, -t.y]), $I(o, o, [r, i]), dl(o, o, [e.x, e.y]), o;
  }, n.prototype.intersect = function(e, t) {
    if (!e)
      return !1;
    e instanceof n || (e = n.create(e));
    var r = this, i = r.x, o = r.x + r.width, s = r.y, a = r.y + r.height, l = e.x, u = e.x + e.width, c = e.y, h = e.y + e.height, f = !(o < l || u < i || a < c || h < s);
    if (t) {
      var d = 1 / 0, p = 0, g = Math.abs(o - l), v = Math.abs(u - i), m = Math.abs(a - c), y = Math.abs(h - s), b = Math.min(g, v), O = Math.min(m, y);
      o < l || u < i ? b > p && (p = b, g < v ? Xe.set(Fv, -g, 0) : Xe.set(Fv, v, 0)) : b < d && (d = b, g < v ? Xe.set(zv, g, 0) : Xe.set(zv, -v, 0)), a < c || h < s ? O > p && (p = O, m < y ? Xe.set(Fv, 0, -m) : Xe.set(Fv, 0, y)) : b < d && (d = b, m < y ? Xe.set(zv, 0, m) : Xe.set(zv, 0, -y));
    }
    return t && Xe.copy(t, f ? zv : Fv), f;
  }, n.prototype.contain = function(e, t) {
    var r = this;
    return e >= r.x && e <= r.x + r.width && t >= r.y && t <= r.y + r.height;
  }, n.prototype.clone = function() {
    return new n(this.x, this.y, this.width, this.height);
  }, n.prototype.copy = function(e) {
    n.copy(this, e);
  }, n.prototype.plain = function() {
    return {
      x: this.x,
      y: this.y,
      width: this.width,
      height: this.height
    };
  }, n.prototype.isFinite = function() {
    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
  }, n.prototype.isZero = function() {
    return this.width === 0 || this.height === 0;
  }, n.create = function(e) {
    return new n(e.x, e.y, e.width, e.height);
  }, n.copy = function(e, t) {
    e.x = t.x, e.y = t.y, e.width = t.width, e.height = t.height;
  }, n.applyTransform = function(e, t, r) {
    if (!r) {
      e !== t && n.copy(e, t);
      return;
    }
    if (r[1] < 1e-5 && r[1] > -1e-5 && r[2] < 1e-5 && r[2] > -1e-5) {
      var i = r[0], o = r[3], s = r[4], a = r[5];
      e.x = t.x * i + s, e.y = t.y * o + a, e.width = t.width * i, e.height = t.height * o, e.width < 0 && (e.x += e.width, e.width = -e.width), e.height < 0 && (e.y += e.height, e.height = -e.height);
      return;
    }
    hh.x = dh.x = t.x, hh.y = ph.y = t.y, fh.x = ph.x = t.x + t.width, fh.y = dh.y = t.y + t.height, hh.transform(r), ph.transform(r), fh.transform(r), dh.transform(r), e.x = $1(hh.x, fh.x, dh.x, ph.x), e.y = $1(hh.y, fh.y, dh.y, ph.y);
    var l = N1(hh.x, fh.x, dh.x, ph.x), u = N1(hh.y, fh.y, dh.y, ph.y);
    e.width = l - e.x, e.height = u - e.y;
  }, n;
}();
const et = K0t;
var FU = "silent";
function J0t(n, e, t) {
  return {
    type: n,
    event: t,
    target: e.target,
    topTarget: e.topTarget,
    cancelBubble: !1,
    offsetX: t.zrX,
    offsetY: t.zrY,
    gestureEvent: t.gestureEvent,
    pinchX: t.pinchX,
    pinchY: t.pinchY,
    pinchScale: t.pinchScale,
    wheelDelta: t.zrDelta,
    zrByTouch: t.zrByTouch,
    which: t.which,
    stop: ebt
  };
}
function ebt() {
  iu(this.event);
}
var tbt = function(n) {
  j(e, n);
  function e() {
    var t = n !== null && n.apply(this, arguments) || this;
    return t.handler = null, t;
  }
  return e.prototype.dispose = function() {
  }, e.prototype.setCursor = function() {
  }, e;
}(Ps), Qv = /* @__PURE__ */ function() {
  function n(e, t) {
    this.x = e, this.y = t;
  }
  return n;
}(), nbt = [
  "click",
  "dblclick",
  "mousewheel",
  "mouseout",
  "mouseup",
  "mousedown",
  "mousemove",
  "contextmenu"
], X2 = new et(0, 0, 0, 0), QU = function(n) {
  j(e, n);
  function e(t, r, i, o, s) {
    var a = n.call(this) || this;
    return a._hovered = new Qv(0, 0), a.storage = t, a.painter = r, a.painterRoot = o, a._pointerSize = s, i = i || new tbt(), a.proxy = null, a.setHandlerProxy(i), a._draggingMgr = new N0t(a), a;
  }
  return e.prototype.setHandlerProxy = function(t) {
    this.proxy && this.proxy.dispose(), t && (I(nbt, function(r) {
      t.on && t.on(r, this[r], this);
    }, this), t.handler = this), this.proxy = t;
  }, e.prototype.mousemove = function(t) {
    var r = t.zrX, i = t.zrY, o = ZU(this, r, i), s = this._hovered, a = s.target;
    a && !a.__zr && (s = this.findHover(s.x, s.y), a = s.target);
    var l = this._hovered = o ? new Qv(r, i) : this.findHover(r, i), u = l.target, c = this.proxy;
    c.setCursor && c.setCursor(u ? u.cursor : "default"), a && u !== a && this.dispatchToElement(s, "mouseout", t), this.dispatchToElement(l, "mousemove", t), u && u !== a && this.dispatchToElement(l, "mouseover", t);
  }, e.prototype.mouseout = function(t) {
    var r = t.zrEventControl;
    r !== "only_globalout" && this.dispatchToElement(this._hovered, "mouseout", t), r !== "no_globalout" && this.trigger("globalout", { type: "globalout", event: t });
  }, e.prototype.resize = function() {
    this._hovered = new Qv(0, 0);
  }, e.prototype.dispatch = function(t, r) {
    var i = this[t];
    i && i.call(this, r);
  }, e.prototype.dispose = function() {
    this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
  }, e.prototype.setCursorStyle = function(t) {
    var r = this.proxy;
    r.setCursor && r.setCursor(t);
  }, e.prototype.dispatchToElement = function(t, r, i) {
    t = t || {};
    var o = t.target;
    if (!(o && o.silent)) {
      for (var s = "on" + r, a = J0t(r, t, i); o && (o[s] && (a.cancelBubble = !!o[s].call(o, a)), o.trigger(r, a), o = o.__hostTarget ? o.__hostTarget : o.parent, !a.cancelBubble); )
        ;
      a.cancelBubble || (this.trigger(r, a), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function(l) {
        typeof l[s] == "function" && l[s].call(l, a), l.trigger && l.trigger(r, a);
      }));
    }
  }, e.prototype.findHover = function(t, r, i) {
    var o = this.storage.getDisplayList(), s = new Qv(t, r);
    if (O4(o, s, t, r, i), this._pointerSize && !s.target) {
      for (var a = [], l = this._pointerSize, u = l / 2, c = new et(t - u, r - u, l, l), h = o.length - 1; h >= 0; h--) {
        var f = o[h];
        f !== i && !f.ignore && !f.ignoreCoarsePointer && (!f.parent || !f.parent.ignoreCoarsePointer) && (X2.copy(f.getBoundingRect()), f.transform && X2.applyTransform(f.transform), X2.intersect(c) && a.push(f));
      }
      if (a.length)
        for (var d = 4, p = Math.PI / 12, g = Math.PI * 2, v = 0; v < u; v += d)
          for (var m = 0; m < g; m += p) {
            var y = t + v * Math.cos(m), b = r + v * Math.sin(m);
            if (O4(a, s, y, b, i), s.target)
              return s;
          }
    }
    return s;
  }, e.prototype.processGesture = function(t, r) {
    this._gestureMgr || (this._gestureMgr = new Y0t());
    var i = this._gestureMgr;
    r === "start" && i.clear();
    var o = i.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom);
    if (r === "end" && i.clear(), o) {
      var s = o.type;
      t.gestureEvent = s;
      var a = new Qv();
      a.target = o.target, this.dispatchToElement(a, s, o.event);
    }
  }, e;
}(Ps);
I(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(n) {
  QU.prototype[n] = function(e) {
    var t = e.zrX, r = e.zrY, i = ZU(this, t, r), o, s;
    if ((n !== "mouseup" || !i) && (o = this.findHover(t, r), s = o.target), n === "mousedown")
      this._downEl = s, this._downPoint = [e.zrX, e.zrY], this._upEl = s;
    else if (n === "mouseup")
      this._upEl = s;
    else if (n === "click") {
      if (this._downEl !== this._upEl || !this._downPoint || ic(this._downPoint, [e.zrX, e.zrY]) > 4)
        return;
      this._downPoint = null;
    }
    this.dispatchToElement(o, n, e);
  };
});
function rbt(n, e, t) {
  if (n[n.rectHover ? "rectContain" : "contain"](e, t)) {
    for (var r = n, i = void 0, o = !1; r; ) {
      if (r.ignoreClip && (o = !0), !o) {
        var s = r.getClipPath();
        if (s && !s.contain(e, t))
          return !1;
      }
      r.silent && (i = !0);
      var a = r.__hostTarget;
      r = a || r.parent;
    }
    return i ? FU : !0;
  }
  return !1;
}
function O4(n, e, t, r, i) {
  for (var o = n.length - 1; o >= 0; o--) {
    var s = n[o], a = void 0;
    if (s !== i && !s.ignore && (a = rbt(s, t, r)) && (!e.topTarget && (e.topTarget = s), a !== FU)) {
      e.target = s;
      break;
    }
  }
}
function ZU(n, e, t) {
  var r = n.painter;
  return e < 0 || e > r.getWidth() || t < 0 || t > r.getHeight();
}
const ibt = QU;
var WU = 32, Zv = 7;
function obt(n) {
  for (var e = 0; n >= WU; )
    e |= n & 1, n >>= 1;
  return n + e;
}
function w4(n, e, t, r) {
  var i = e + 1;
  if (i === t)
    return 1;
  if (r(n[i++], n[e]) < 0) {
    for (; i < t && r(n[i], n[i - 1]) < 0; )
      i++;
    sbt(n, e, i);
  } else
    for (; i < t && r(n[i], n[i - 1]) >= 0; )
      i++;
  return i - e;
}
function sbt(n, e, t) {
  for (t--; e < t; ) {
    var r = n[e];
    n[e++] = n[t], n[t--] = r;
  }
}
function x4(n, e, t, r, i) {
  for (r === e && r++; r < t; r++) {
    for (var o = n[r], s = e, a = r, l; s < a; )
      l = s + a >>> 1, i(o, n[l]) < 0 ? a = l : s = l + 1;
    var u = r - s;
    switch (u) {
      case 3:
        n[s + 3] = n[s + 2];
      case 2:
        n[s + 2] = n[s + 1];
      case 1:
        n[s + 1] = n[s];
        break;
      default:
        for (; u > 0; )
          n[s + u] = n[s + u - 1], u--;
    }
    n[s] = o;
  }
}
function U2(n, e, t, r, i, o) {
  var s = 0, a = 0, l = 1;
  if (o(n, e[t + i]) > 0) {
    for (a = r - i; l < a && o(n, e[t + i + l]) > 0; )
      s = l, l = (l << 1) + 1, l <= 0 && (l = a);
    l > a && (l = a), s += i, l += i;
  } else {
    for (a = i + 1; l < a && o(n, e[t + i - l]) <= 0; )
      s = l, l = (l << 1) + 1, l <= 0 && (l = a);
    l > a && (l = a);
    var u = s;
    s = i - l, l = i - u;
  }
  for (s++; s < l; ) {
    var c = s + (l - s >>> 1);
    o(n, e[t + c]) > 0 ? s = c + 1 : l = c;
  }
  return l;
}
function K2(n, e, t, r, i, o) {
  var s = 0, a = 0, l = 1;
  if (o(n, e[t + i]) < 0) {
    for (a = i + 1; l < a && o(n, e[t + i - l]) < 0; )
      s = l, l = (l << 1) + 1, l <= 0 && (l = a);
    l > a && (l = a);
    var u = s;
    s = i - l, l = i - u;
  } else {
    for (a = r - i; l < a && o(n, e[t + i + l]) >= 0; )
      s = l, l = (l << 1) + 1, l <= 0 && (l = a);
    l > a && (l = a), s += i, l += i;
  }
  for (s++; s < l; ) {
    var c = s + (l - s >>> 1);
    o(n, e[t + c]) < 0 ? l = c : s = c + 1;
  }
  return l;
}
function abt(n, e) {
  var t = Zv, r, i, o = 0, s = [];
  r = [], i = [];
  function a(d, p) {
    r[o] = d, i[o] = p, o += 1;
  }
  function l() {
    for (; o > 1; ) {
      var d = o - 2;
      if (d >= 1 && i[d - 1] <= i[d] + i[d + 1] || d >= 2 && i[d - 2] <= i[d] + i[d - 1])
        i[d - 1] < i[d + 1] && d--;
      else if (i[d] > i[d + 1])
        break;
      c(d);
    }
  }
  function u() {
    for (; o > 1; ) {
      var d = o - 2;
      d > 0 && i[d - 1] < i[d + 1] && d--, c(d);
    }
  }
  function c(d) {
    var p = r[d], g = i[d], v = r[d + 1], m = i[d + 1];
    i[d] = g + m, d === o - 3 && (r[d + 1] = r[d + 2], i[d + 1] = i[d + 2]), o--;
    var y = K2(n[v], n, p, g, 0, e);
    p += y, g -= y, g !== 0 && (m = U2(n[p + g - 1], n, v, m, m - 1, e), m !== 0 && (g <= m ? h(p, g, v, m) : f(p, g, v, m)));
  }
  function h(d, p, g, v) {
    var m = 0;
    for (m = 0; m < p; m++)
      s[m] = n[d + m];
    var y = 0, b = g, O = d;
    if (n[O++] = n[b++], --v === 0) {
      for (m = 0; m < p; m++)
        n[O + m] = s[y + m];
      return;
    }
    if (p === 1) {
      for (m = 0; m < v; m++)
        n[O + m] = n[b + m];
      n[O + v] = s[y];
      return;
    }
    for (var w = t, x, S, _; ; ) {
      x = 0, S = 0, _ = !1;
      do
        if (e(n[b], s[y]) < 0) {
          if (n[O++] = n[b++], S++, x = 0, --v === 0) {
            _ = !0;
            break;
          }
        } else if (n[O++] = s[y++], x++, S = 0, --p === 1) {
          _ = !0;
          break;
        }
      while ((x | S) < w);
      if (_)
        break;
      do {
        if (x = K2(n[b], s, y, p, 0, e), x !== 0) {
          for (m = 0; m < x; m++)
            n[O + m] = s[y + m];
          if (O += x, y += x, p -= x, p <= 1) {
            _ = !0;
            break;
          }
        }
        if (n[O++] = n[b++], --v === 0) {
          _ = !0;
          break;
        }
        if (S = U2(s[y], n, b, v, 0, e), S !== 0) {
          for (m = 0; m < S; m++)
            n[O + m] = n[b + m];
          if (O += S, b += S, v -= S, v === 0) {
            _ = !0;
            break;
          }
        }
        if (n[O++] = s[y++], --p === 1) {
          _ = !0;
          break;
        }
        w--;
      } while (x >= Zv || S >= Zv);
      if (_)
        break;
      w < 0 && (w = 0), w += 2;
    }
    if (t = w, t < 1 && (t = 1), p === 1) {
      for (m = 0; m < v; m++)
        n[O + m] = n[b + m];
      n[O + v] = s[y];
    } else {
      if (p === 0)
        throw new Error();
      for (m = 0; m < p; m++)
        n[O + m] = s[y + m];
    }
  }
  function f(d, p, g, v) {
    var m = 0;
    for (m = 0; m < v; m++)
      s[m] = n[g + m];
    var y = d + p - 1, b = v - 1, O = g + v - 1, w = 0, x = 0;
    if (n[O--] = n[y--], --p === 0) {
      for (w = O - (v - 1), m = 0; m < v; m++)
        n[w + m] = s[m];
      return;
    }
    if (v === 1) {
      for (O -= p, y -= p, x = O + 1, w = y + 1, m = p - 1; m >= 0; m--)
        n[x + m] = n[w + m];
      n[O] = s[b];
      return;
    }
    for (var S = t; ; ) {
      var _ = 0, C = 0, A = !1;
      do
        if (e(s[b], n[y]) < 0) {
          if (n[O--] = n[y--], _++, C = 0, --p === 0) {
            A = !0;
            break;
          }
        } else if (n[O--] = s[b--], C++, _ = 0, --v === 1) {
          A = !0;
          break;
        }
      while ((_ | C) < S);
      if (A)
        break;
      do {
        if (_ = p - K2(s[b], n, d, p, p - 1, e), _ !== 0) {
          for (O -= _, y -= _, p -= _, x = O + 1, w = y + 1, m = _ - 1; m >= 0; m--)
            n[x + m] = n[w + m];
          if (p === 0) {
            A = !0;
            break;
          }
        }
        if (n[O--] = s[b--], --v === 1) {
          A = !0;
          break;
        }
        if (C = v - U2(n[y], s, 0, v, v - 1, e), C !== 0) {
          for (O -= C, b -= C, v -= C, x = O + 1, w = b + 1, m = 0; m < C; m++)
            n[x + m] = s[w + m];
          if (v <= 1) {
            A = !0;
            break;
          }
        }
        if (n[O--] = n[y--], --p === 0) {
          A = !0;
          break;
        }
        S--;
      } while (_ >= Zv || C >= Zv);
      if (A)
        break;
      S < 0 && (S = 0), S += 2;
    }
    if (t = S, t < 1 && (t = 1), v === 1) {
      for (O -= p, y -= p, x = O + 1, w = y + 1, m = p - 1; m >= 0; m--)
        n[x + m] = n[w + m];
      n[O] = s[b];
    } else {
      if (v === 0)
        throw new Error();
      for (w = O - (v - 1), m = 0; m < v; m++)
        n[w + m] = s[m];
    }
  }
  return {
    mergeRuns: l,
    forceMergeRuns: u,
    pushRun: a
  };
}
function yw(n, e, t, r) {
  t || (t = 0), r || (r = n.length);
  var i = r - t;
  if (!(i < 2)) {
    var o = 0;
    if (i < WU) {
      o = w4(n, t, r, e), x4(n, t, r, t + o, e);
      return;
    }
    var s = abt(n, e), a = obt(i);
    do {
      if (o = w4(n, t, r, e), o < a) {
        var l = i;
        l > a && (l = a), x4(n, t, t + l, t + o, e), o = l;
      }
      s.pushRun(t, o), s.mergeRuns(), i -= o, t += o;
    } while (i !== 0);
    s.forceMergeRuns();
  }
}
var Do = 1, Tm = 2, up = 4, S4 = !1;
function J2() {
  S4 || (S4 = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
}
function _4(n, e) {
  return n.zlevel === e.zlevel ? n.z === e.z ? n.z2 - e.z2 : n.z - e.z : n.zlevel - e.zlevel;
}
var lbt = function() {
  function n() {
    this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = _4;
  }
  return n.prototype.traverse = function(e, t) {
    for (var r = 0; r < this._roots.length; r++)
      this._roots[r].traverse(e, t);
  }, n.prototype.getDisplayList = function(e, t) {
    t = t || !1;
    var r = this._displayList;
    return (e || !r.length) && this.updateDisplayList(t), r;
  }, n.prototype.updateDisplayList = function(e) {
    this._displayListLen = 0;
    for (var t = this._roots, r = this._displayList, i = 0, o = t.length; i < o; i++)
      this._updateAndAddDisplayable(t[i], null, e);
    r.length = this._displayListLen, yw(r, _4);
  }, n.prototype._updateAndAddDisplayable = function(e, t, r) {
    if (!(e.ignore && !r)) {
      e.beforeUpdate(), e.update(), e.afterUpdate();
      var i = e.getClipPath();
      if (e.ignoreClip)
        t = null;
      else if (i) {
        t ? t = t.slice() : t = [];
        for (var o = i, s = e; o; )
          o.parent = s, o.updateTransform(), t.push(o), s = o, o = o.getClipPath();
      }
      if (e.childrenRef) {
        for (var a = e.childrenRef(), l = 0; l < a.length; l++) {
          var u = a[l];
          e.__dirty && (u.__dirty |= Do), this._updateAndAddDisplayable(u, t, r);
        }
        e.__dirty = 0;
      } else {
        var c = e;
        t && t.length ? c.__clipPaths = t : c.__clipPaths && c.__clipPaths.length > 0 && (c.__clipPaths = []), isNaN(c.z) && (J2(), c.z = 0), isNaN(c.z2) && (J2(), c.z2 = 0), isNaN(c.zlevel) && (J2(), c.zlevel = 0), this._displayList[this._displayListLen++] = c;
      }
      var h = e.getDecalElement && e.getDecalElement();
      h && this._updateAndAddDisplayable(h, t, r);
      var f = e.getTextGuideLine();
      f && this._updateAndAddDisplayable(f, t, r);
      var d = e.getTextContent();
      d && this._updateAndAddDisplayable(d, t, r);
    }
  }, n.prototype.addRoot = function(e) {
    e.__zr && e.__zr.storage === this || this._roots.push(e);
  }, n.prototype.delRoot = function(e) {
    if (e instanceof Array) {
      for (var t = 0, r = e.length; t < r; t++)
        this.delRoot(e[t]);
      return;
    }
    var i = ot(this._roots, e);
    i >= 0 && this._roots.splice(i, 1);
  }, n.prototype.delAllRoots = function() {
    this._roots = [], this._displayList = [], this._displayListLen = 0;
  }, n.prototype.getRoots = function() {
    return this._roots;
  }, n.prototype.dispose = function() {
    this._displayList = null, this._roots = null;
  }, n;
}(), GU;
GU = ht.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(n) {
  return setTimeout(n, 16);
};
const Rk = GU;
var hy = {
  linear: function(n) {
    return n;
  },
  quadraticIn: function(n) {
    return n * n;
  },
  quadraticOut: function(n) {
    return n * (2 - n);
  },
  quadraticInOut: function(n) {
    return (n *= 2) < 1 ? 0.5 * n * n : -0.5 * (--n * (n - 2) - 1);
  },
  cubicIn: function(n) {
    return n * n * n;
  },
  cubicOut: function(n) {
    return --n * n * n + 1;
  },
  cubicInOut: function(n) {
    return (n *= 2) < 1 ? 0.5 * n * n * n : 0.5 * ((n -= 2) * n * n + 2);
  },
  quarticIn: function(n) {
    return n * n * n * n;
  },
  quarticOut: function(n) {
    return 1 - --n * n * n * n;
  },
  quarticInOut: function(n) {
    return (n *= 2) < 1 ? 0.5 * n * n * n * n : -0.5 * ((n -= 2) * n * n * n - 2);
  },
  quinticIn: function(n) {
    return n * n * n * n * n;
  },
  quinticOut: function(n) {
    return --n * n * n * n * n + 1;
  },
  quinticInOut: function(n) {
    return (n *= 2) < 1 ? 0.5 * n * n * n * n * n : 0.5 * ((n -= 2) * n * n * n * n + 2);
  },
  sinusoidalIn: function(n) {
    return 1 - Math.cos(n * Math.PI / 2);
  },
  sinusoidalOut: function(n) {
    return Math.sin(n * Math.PI / 2);
  },
  sinusoidalInOut: function(n) {
    return 0.5 * (1 - Math.cos(Math.PI * n));
  },
  exponentialIn: function(n) {
    return n === 0 ? 0 : Math.pow(1024, n - 1);
  },
  exponentialOut: function(n) {
    return n === 1 ? 1 : 1 - Math.pow(2, -10 * n);
  },
  exponentialInOut: function(n) {
    return n === 0 ? 0 : n === 1 ? 1 : (n *= 2) < 1 ? 0.5 * Math.pow(1024, n - 1) : 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);
  },
  circularIn: function(n) {
    return 1 - Math.sqrt(1 - n * n);
  },
  circularOut: function(n) {
    return Math.sqrt(1 - --n * n);
  },
  circularInOut: function(n) {
    return (n *= 2) < 1 ? -0.5 * (Math.sqrt(1 - n * n) - 1) : 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);
  },
  elasticIn: function(n) {
    var e, t = 0.1, r = 0.4;
    return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, e = r / 4) : e = r * Math.asin(1 / t) / (2 * Math.PI), -(t * Math.pow(2, 10 * (n -= 1)) * Math.sin((n - e) * (2 * Math.PI) / r)));
  },
  elasticOut: function(n) {
    var e, t = 0.1, r = 0.4;
    return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, e = r / 4) : e = r * Math.asin(1 / t) / (2 * Math.PI), t * Math.pow(2, -10 * n) * Math.sin((n - e) * (2 * Math.PI) / r) + 1);
  },
  elasticInOut: function(n) {
    var e, t = 0.1, r = 0.4;
    return n === 0 ? 0 : n === 1 ? 1 : (!t || t < 1 ? (t = 1, e = r / 4) : e = r * Math.asin(1 / t) / (2 * Math.PI), (n *= 2) < 1 ? -0.5 * (t * Math.pow(2, 10 * (n -= 1)) * Math.sin((n - e) * (2 * Math.PI) / r)) : t * Math.pow(2, -10 * (n -= 1)) * Math.sin((n - e) * (2 * Math.PI) / r) * 0.5 + 1);
  },
  backIn: function(n) {
    var e = 1.70158;
    return n * n * ((e + 1) * n - e);
  },
  backOut: function(n) {
    var e = 1.70158;
    return --n * n * ((e + 1) * n + e) + 1;
  },
  backInOut: function(n) {
    var e = 2.5949095;
    return (n *= 2) < 1 ? 0.5 * (n * n * ((e + 1) * n - e)) : 0.5 * ((n -= 2) * n * ((e + 1) * n + e) + 2);
  },
  bounceIn: function(n) {
    return 1 - hy.bounceOut(1 - n);
  },
  bounceOut: function(n) {
    return n < 1 / 2.75 ? 7.5625 * n * n : n < 2 / 2.75 ? 7.5625 * (n -= 1.5 / 2.75) * n + 0.75 : n < 2.5 / 2.75 ? 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375 : 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;
  },
  bounceInOut: function(n) {
    return n < 0.5 ? hy.bounceIn(n * 2) * 0.5 : hy.bounceOut(n * 2 - 1) * 0.5 + 0.5;
  }
}, B1 = Math.pow, vc = Math.sqrt, Vx = 1e-8, jU = 1e-4, C4 = vc(3), V1 = 1 / 3, za = vd(), os = vd(), Ip = vd();
function ac(n) {
  return n > -Vx && n < Vx;
}
function HU(n) {
  return n > Vx || n < -Vx;
}
function Sr(n, e, t, r, i) {
  var o = 1 - i;
  return o * o * (o * n + 3 * i * e) + i * i * (i * r + 3 * o * t);
}
function A4(n, e, t, r, i) {
  var o = 1 - i;
  return 3 * (((e - n) * o + 2 * (t - e) * i) * o + (r - t) * i * i);
}
function zx(n, e, t, r, i, o) {
  var s = r + 3 * (e - t) - n, a = 3 * (t - e * 2 + n), l = 3 * (e - n), u = n - i, c = a * a - 3 * s * l, h = a * l - 9 * s * u, f = l * l - 3 * a * u, d = 0;
  if (ac(c) && ac(h))
    if (ac(a))
      o[0] = 0;
    else {
      var p = -l / a;
      p >= 0 && p <= 1 && (o[d++] = p);
    }
  else {
    var g = h * h - 4 * c * f;
    if (ac(g)) {
      var v = h / c, p = -a / s + v, m = -v / 2;
      p >= 0 && p <= 1 && (o[d++] = p), m >= 0 && m <= 1 && (o[d++] = m);
    } else if (g > 0) {
      var y = vc(g), b = c * a + 1.5 * s * (-h + y), O = c * a + 1.5 * s * (-h - y);
      b < 0 ? b = -B1(-b, V1) : b = B1(b, V1), O < 0 ? O = -B1(-O, V1) : O = B1(O, V1);
      var p = (-a - (b + O)) / (3 * s);
      p >= 0 && p <= 1 && (o[d++] = p);
    } else {
      var w = (2 * c * a - 3 * s * h) / (2 * vc(c * c * c)), x = Math.acos(w) / 3, S = vc(c), _ = Math.cos(x), p = (-a - 2 * S * _) / (3 * s), m = (-a + S * (_ + C4 * Math.sin(x))) / (3 * s), C = (-a + S * (_ - C4 * Math.sin(x))) / (3 * s);
      p >= 0 && p <= 1 && (o[d++] = p), m >= 0 && m <= 1 && (o[d++] = m), C >= 0 && C <= 1 && (o[d++] = C);
    }
  }
  return d;
}
function qU(n, e, t, r, i) {
  var o = 6 * t - 12 * e + 6 * n, s = 9 * e + 3 * r - 3 * n - 9 * t, a = 3 * e - 3 * n, l = 0;
  if (ac(s)) {
    if (HU(o)) {
      var u = -a / o;
      u >= 0 && u <= 1 && (i[l++] = u);
    }
  } else {
    var c = o * o - 4 * s * a;
    if (ac(c))
      i[0] = -o / (2 * s);
    else if (c > 0) {
      var h = vc(c), u = (-o + h) / (2 * s), f = (-o - h) / (2 * s);
      u >= 0 && u <= 1 && (i[l++] = u), f >= 0 && f <= 1 && (i[l++] = f);
    }
  }
  return l;
}
function Nc(n, e, t, r, i, o) {
  var s = (e - n) * i + n, a = (t - e) * i + e, l = (r - t) * i + t, u = (a - s) * i + s, c = (l - a) * i + a, h = (c - u) * i + u;
  o[0] = n, o[1] = s, o[2] = u, o[3] = h, o[4] = h, o[5] = c, o[6] = l, o[7] = r;
}
function YU(n, e, t, r, i, o, s, a, l, u, c) {
  var h, f = 5e-3, d = 1 / 0, p, g, v, m;
  za[0] = l, za[1] = u;
  for (var y = 0; y < 1; y += 0.05)
    os[0] = Sr(n, t, i, s, y), os[1] = Sr(e, r, o, a, y), v = Pf(za, os), v < d && (h = y, d = v);
  d = 1 / 0;
  for (var b = 0; b < 32 && !(f < jU); b++)
    p = h - f, g = h + f, os[0] = Sr(n, t, i, s, p), os[1] = Sr(e, r, o, a, p), v = Pf(os, za), p >= 0 && v < d ? (h = p, d = v) : (Ip[0] = Sr(n, t, i, s, g), Ip[1] = Sr(e, r, o, a, g), m = Pf(Ip, za), g <= 1 && m < d ? (h = g, d = m) : f *= 0.5);
  return c && (c[0] = Sr(n, t, i, s, h), c[1] = Sr(e, r, o, a, h)), vc(d);
}
function ubt(n, e, t, r, i, o, s, a, l) {
  for (var u = n, c = e, h = 0, f = 1 / l, d = 1; d <= l; d++) {
    var p = d * f, g = Sr(n, t, i, s, p), v = Sr(e, r, o, a, p), m = g - u, y = v - c;
    h += Math.sqrt(m * m + y * y), u = g, c = v;
  }
  return h;
}
function $r(n, e, t, r) {
  var i = 1 - r;
  return i * (i * n + 2 * r * e) + r * r * t;
}
function $k(n, e, t, r) {
  return 2 * ((1 - r) * (e - n) + r * (t - e));
}
function cbt(n, e, t, r, i) {
  var o = n - 2 * e + t, s = 2 * (e - n), a = n - r, l = 0;
  if (ac(o)) {
    if (HU(s)) {
      var u = -a / s;
      u >= 0 && u <= 1 && (i[l++] = u);
    }
  } else {
    var c = s * s - 4 * o * a;
    if (ac(c)) {
      var u = -s / (2 * o);
      u >= 0 && u <= 1 && (i[l++] = u);
    } else if (c > 0) {
      var h = vc(c), u = (-s + h) / (2 * o), f = (-s - h) / (2 * o);
      u >= 0 && u <= 1 && (i[l++] = u), f >= 0 && f <= 1 && (i[l++] = f);
    }
  }
  return l;
}
function XU(n, e, t) {
  var r = n + t - 2 * e;
  return r === 0 ? 0.5 : (n - e) / r;
}
function g0(n, e, t, r, i) {
  var o = (e - n) * r + n, s = (t - e) * r + e, a = (s - o) * r + o;
  i[0] = n, i[1] = o, i[2] = a, i[3] = a, i[4] = s, i[5] = t;
}
function UU(n, e, t, r, i, o, s, a, l) {
  var u, c = 5e-3, h = 1 / 0;
  za[0] = s, za[1] = a;
  for (var f = 0; f < 1; f += 0.05) {
    os[0] = $r(n, t, i, f), os[1] = $r(e, r, o, f);
    var d = Pf(za, os);
    d < h && (u = f, h = d);
  }
  h = 1 / 0;
  for (var p = 0; p < 32 && !(c < jU); p++) {
    var g = u - c, v = u + c;
    os[0] = $r(n, t, i, g), os[1] = $r(e, r, o, g);
    var d = Pf(os, za);
    if (g >= 0 && d < h)
      u = g, h = d;
    else {
      Ip[0] = $r(n, t, i, v), Ip[1] = $r(e, r, o, v);
      var m = Pf(Ip, za);
      v <= 1 && m < h ? (u = v, h = m) : c *= 0.5;
    }
  }
  return l && (l[0] = $r(n, t, i, u), l[1] = $r(e, r, o, u)), vc(h);
}
function hbt(n, e, t, r, i, o, s) {
  for (var a = n, l = e, u = 0, c = 1 / s, h = 1; h <= s; h++) {
    var f = h * c, d = $r(n, t, i, f), p = $r(e, r, o, f), g = d - a, v = p - l;
    u += Math.sqrt(g * g + v * v), a = d, l = p;
  }
  return u;
}
var fbt = /cubic-bezier\(([0-9,\.e ]+)\)/;
function NI(n) {
  var e = n && fbt.exec(n);
  if (e) {
    var t = e[1].split(","), r = +Ys(t[0]), i = +Ys(t[1]), o = +Ys(t[2]), s = +Ys(t[3]);
    if (isNaN(r + i + o + s))
      return;
    var a = [];
    return function(l) {
      return l <= 0 ? 0 : l >= 1 ? 1 : zx(0, r, o, 1, l, a) && Sr(0, i, s, 1, a[0]);
    };
  }
}
var dbt = function() {
  function n(e) {
    this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = e.life || 1e3, this._delay = e.delay || 0, this.loop = e.loop || !1, this.onframe = e.onframe || qn, this.ondestroy = e.ondestroy || qn, this.onrestart = e.onrestart || qn, e.easing && this.setEasing(e.easing);
  }
  return n.prototype.step = function(e, t) {
    if (this._inited || (this._startTime = e + this._delay, this._inited = !0), this._paused) {
      this._pausedTime += t;
      return;
    }
    var r = this._life, i = e - this._startTime - this._pausedTime, o = i / r;
    o < 0 && (o = 0), o = Math.min(o, 1);
    var s = this.easingFunc, a = s ? s(o) : o;
    if (this.onframe(a), o === 1)
      if (this.loop) {
        var l = i % r;
        this._startTime = e - l, this._pausedTime = 0, this.onrestart();
      } else
        return !0;
    return !1;
  }, n.prototype.pause = function() {
    this._paused = !0;
  }, n.prototype.resume = function() {
    this._paused = !1;
  }, n.prototype.setEasing = function(e) {
    this.easing = e, this.easingFunc = Pe(e) ? e : hy[e] || NI(e);
  }, n;
}();
const pbt = dbt;
var KU = /* @__PURE__ */ function() {
  function n(e) {
    this.value = e;
  }
  return n;
}(), gbt = function() {
  function n() {
    this._len = 0;
  }
  return n.prototype.insert = function(e) {
    var t = new KU(e);
    return this.insertEntry(t), t;
  }, n.prototype.insertEntry = function(e) {
    this.head ? (this.tail.next = e, e.prev = this.tail, e.next = null, this.tail = e) : this.head = this.tail = e, this._len++;
  }, n.prototype.remove = function(e) {
    var t = e.prev, r = e.next;
    t ? t.next = r : this.head = r, r ? r.prev = t : this.tail = t, e.next = e.prev = null, this._len--;
  }, n.prototype.len = function() {
    return this._len;
  }, n.prototype.clear = function() {
    this.head = this.tail = null, this._len = 0;
  }, n;
}(), Ob = function() {
  function n(e) {
    this._list = new gbt(), this._maxSize = 10, this._map = {}, this._maxSize = e;
  }
  return n.prototype.put = function(e, t) {
    var r = this._list, i = this._map, o = null;
    if (i[e] == null) {
      var s = r.len(), a = this._lastRemovedEntry;
      if (s >= this._maxSize && s > 0) {
        var l = r.head;
        r.remove(l), delete i[l.key], o = l.value, this._lastRemovedEntry = l;
      }
      a ? a.value = t : a = new KU(t), a.key = e, r.insertEntry(a), i[e] = a;
    }
    return o;
  }, n.prototype.get = function(e) {
    var t = this._map[e], r = this._list;
    if (t != null)
      return t !== r.tail && (r.remove(t), r.insertEntry(t)), t.value;
  }, n.prototype.clear = function() {
    this._list.clear(), this._map = {};
  }, n.prototype.len = function() {
    return this._list.len();
  }, n;
}(), T4 = {
  transparent: [0, 0, 0, 0],
  aliceblue: [240, 248, 255, 1],
  antiquewhite: [250, 235, 215, 1],
  aqua: [0, 255, 255, 1],
  aquamarine: [127, 255, 212, 1],
  azure: [240, 255, 255, 1],
  beige: [245, 245, 220, 1],
  bisque: [255, 228, 196, 1],
  black: [0, 0, 0, 1],
  blanchedalmond: [255, 235, 205, 1],
  blue: [0, 0, 255, 1],
  blueviolet: [138, 43, 226, 1],
  brown: [165, 42, 42, 1],
  burlywood: [222, 184, 135, 1],
  cadetblue: [95, 158, 160, 1],
  chartreuse: [127, 255, 0, 1],
  chocolate: [210, 105, 30, 1],
  coral: [255, 127, 80, 1],
  cornflowerblue: [100, 149, 237, 1],
  cornsilk: [255, 248, 220, 1],
  crimson: [220, 20, 60, 1],
  cyan: [0, 255, 255, 1],
  darkblue: [0, 0, 139, 1],
  darkcyan: [0, 139, 139, 1],
  darkgoldenrod: [184, 134, 11, 1],
  darkgray: [169, 169, 169, 1],
  darkgreen: [0, 100, 0, 1],
  darkgrey: [169, 169, 169, 1],
  darkkhaki: [189, 183, 107, 1],
  darkmagenta: [139, 0, 139, 1],
  darkolivegreen: [85, 107, 47, 1],
  darkorange: [255, 140, 0, 1],
  darkorchid: [153, 50, 204, 1],
  darkred: [139, 0, 0, 1],
  darksalmon: [233, 150, 122, 1],
  darkseagreen: [143, 188, 143, 1],
  darkslateblue: [72, 61, 139, 1],
  darkslategray: [47, 79, 79, 1],
  darkslategrey: [47, 79, 79, 1],
  darkturquoise: [0, 206, 209, 1],
  darkviolet: [148, 0, 211, 1],
  deeppink: [255, 20, 147, 1],
  deepskyblue: [0, 191, 255, 1],
  dimgray: [105, 105, 105, 1],
  dimgrey: [105, 105, 105, 1],
  dodgerblue: [30, 144, 255, 1],
  firebrick: [178, 34, 34, 1],
  floralwhite: [255, 250, 240, 1],
  forestgreen: [34, 139, 34, 1],
  fuchsia: [255, 0, 255, 1],
  gainsboro: [220, 220, 220, 1],
  ghostwhite: [248, 248, 255, 1],
  gold: [255, 215, 0, 1],
  goldenrod: [218, 165, 32, 1],
  gray: [128, 128, 128, 1],
  green: [0, 128, 0, 1],
  greenyellow: [173, 255, 47, 1],
  grey: [128, 128, 128, 1],
  honeydew: [240, 255, 240, 1],
  hotpink: [255, 105, 180, 1],
  indianred: [205, 92, 92, 1],
  indigo: [75, 0, 130, 1],
  ivory: [255, 255, 240, 1],
  khaki: [240, 230, 140, 1],
  lavender: [230, 230, 250, 1],
  lavenderblush: [255, 240, 245, 1],
  lawngreen: [124, 252, 0, 1],
  lemonchiffon: [255, 250, 205, 1],
  lightblue: [173, 216, 230, 1],
  lightcoral: [240, 128, 128, 1],
  lightcyan: [224, 255, 255, 1],
  lightgoldenrodyellow: [250, 250, 210, 1],
  lightgray: [211, 211, 211, 1],
  lightgreen: [144, 238, 144, 1],
  lightgrey: [211, 211, 211, 1],
  lightpink: [255, 182, 193, 1],
  lightsalmon: [255, 160, 122, 1],
  lightseagreen: [32, 178, 170, 1],
  lightskyblue: [135, 206, 250, 1],
  lightslategray: [119, 136, 153, 1],
  lightslategrey: [119, 136, 153, 1],
  lightsteelblue: [176, 196, 222, 1],
  lightyellow: [255, 255, 224, 1],
  lime: [0, 255, 0, 1],
  limegreen: [50, 205, 50, 1],
  linen: [250, 240, 230, 1],
  magenta: [255, 0, 255, 1],
  maroon: [128, 0, 0, 1],
  mediumaquamarine: [102, 205, 170, 1],
  mediumblue: [0, 0, 205, 1],
  mediumorchid: [186, 85, 211, 1],
  mediumpurple: [147, 112, 219, 1],
  mediumseagreen: [60, 179, 113, 1],
  mediumslateblue: [123, 104, 238, 1],
  mediumspringgreen: [0, 250, 154, 1],
  mediumturquoise: [72, 209, 204, 1],
  mediumvioletred: [199, 21, 133, 1],
  midnightblue: [25, 25, 112, 1],
  mintcream: [245, 255, 250, 1],
  mistyrose: [255, 228, 225, 1],
  moccasin: [255, 228, 181, 1],
  navajowhite: [255, 222, 173, 1],
  navy: [0, 0, 128, 1],
  oldlace: [253, 245, 230, 1],
  olive: [128, 128, 0, 1],
  olivedrab: [107, 142, 35, 1],
  orange: [255, 165, 0, 1],
  orangered: [255, 69, 0, 1],
  orchid: [218, 112, 214, 1],
  palegoldenrod: [238, 232, 170, 1],
  palegreen: [152, 251, 152, 1],
  paleturquoise: [175, 238, 238, 1],
  palevioletred: [219, 112, 147, 1],
  papayawhip: [255, 239, 213, 1],
  peachpuff: [255, 218, 185, 1],
  peru: [205, 133, 63, 1],
  pink: [255, 192, 203, 1],
  plum: [221, 160, 221, 1],
  powderblue: [176, 224, 230, 1],
  purple: [128, 0, 128, 1],
  red: [255, 0, 0, 1],
  rosybrown: [188, 143, 143, 1],
  royalblue: [65, 105, 225, 1],
  saddlebrown: [139, 69, 19, 1],
  salmon: [250, 128, 114, 1],
  sandybrown: [244, 164, 96, 1],
  seagreen: [46, 139, 87, 1],
  seashell: [255, 245, 238, 1],
  sienna: [160, 82, 45, 1],
  silver: [192, 192, 192, 1],
  skyblue: [135, 206, 235, 1],
  slateblue: [106, 90, 205, 1],
  slategray: [112, 128, 144, 1],
  slategrey: [112, 128, 144, 1],
  snow: [255, 250, 250, 1],
  springgreen: [0, 255, 127, 1],
  steelblue: [70, 130, 180, 1],
  tan: [210, 180, 140, 1],
  teal: [0, 128, 128, 1],
  thistle: [216, 191, 216, 1],
  tomato: [255, 99, 71, 1],
  turquoise: [64, 224, 208, 1],
  violet: [238, 130, 238, 1],
  wheat: [245, 222, 179, 1],
  white: [255, 255, 255, 1],
  whitesmoke: [245, 245, 245, 1],
  yellow: [255, 255, 0, 1],
  yellowgreen: [154, 205, 50, 1]
};
function ea(n) {
  return n = Math.round(n), n < 0 ? 0 : n > 255 ? 255 : n;
}
function vbt(n) {
  return n = Math.round(n), n < 0 ? 0 : n > 360 ? 360 : n;
}
function v0(n) {
  return n < 0 ? 0 : n > 1 ? 1 : n;
}
function eA(n) {
  var e = n;
  return e.length && e.charAt(e.length - 1) === "%" ? ea(parseFloat(e) / 100 * 255) : ea(parseInt(e, 10));
}
function Ef(n) {
  var e = n;
  return e.length && e.charAt(e.length - 1) === "%" ? v0(parseFloat(e) / 100) : v0(parseFloat(e));
}
function tA(n, e, t) {
  return t < 0 ? t += 1 : t > 1 && (t -= 1), t * 6 < 1 ? n + (e - n) * t * 6 : t * 2 < 1 ? e : t * 3 < 2 ? n + (e - n) * (2 / 3 - t) * 6 : n;
}
function lc(n, e, t) {
  return n + (e - n) * t;
}
function Uo(n, e, t, r, i) {
  return n[0] = e, n[1] = t, n[2] = r, n[3] = i, n;
}
function Nk(n, e) {
  return n[0] = e[0], n[1] = e[1], n[2] = e[2], n[3] = e[3], n;
}
var JU = new Ob(20), z1 = null;
function Nd(n, e) {
  z1 && Nk(z1, e), z1 = JU.put(n, z1 || e.slice());
}
function Vo(n, e) {
  if (n) {
    e = e || [];
    var t = JU.get(n);
    if (t)
      return Nk(e, t);
    n = n + "";
    var r = n.replace(/ /g, "").toLowerCase();
    if (r in T4)
      return Nk(e, T4[r]), Nd(n, e), e;
    var i = r.length;
    if (r.charAt(0) === "#") {
      if (i === 4 || i === 5) {
        var o = parseInt(r.slice(1, 4), 16);
        if (!(o >= 0 && o <= 4095)) {
          Uo(e, 0, 0, 0, 1);
          return;
        }
        return Uo(e, (o & 3840) >> 4 | (o & 3840) >> 8, o & 240 | (o & 240) >> 4, o & 15 | (o & 15) << 4, i === 5 ? parseInt(r.slice(4), 16) / 15 : 1), Nd(n, e), e;
      } else if (i === 7 || i === 9) {
        var o = parseInt(r.slice(1, 7), 16);
        if (!(o >= 0 && o <= 16777215)) {
          Uo(e, 0, 0, 0, 1);
          return;
        }
        return Uo(e, (o & 16711680) >> 16, (o & 65280) >> 8, o & 255, i === 9 ? parseInt(r.slice(7), 16) / 255 : 1), Nd(n, e), e;
      }
      return;
    }
    var s = r.indexOf("("), a = r.indexOf(")");
    if (s !== -1 && a + 1 === i) {
      var l = r.substr(0, s), u = r.substr(s + 1, a - (s + 1)).split(","), c = 1;
      switch (l) {
        case "rgba":
          if (u.length !== 4)
            return u.length === 3 ? Uo(e, +u[0], +u[1], +u[2], 1) : Uo(e, 0, 0, 0, 1);
          c = Ef(u.pop());
        case "rgb":
          if (u.length >= 3)
            return Uo(e, eA(u[0]), eA(u[1]), eA(u[2]), u.length === 3 ? c : Ef(u[3])), Nd(n, e), e;
          Uo(e, 0, 0, 0, 1);
          return;
        case "hsla":
          if (u.length !== 4) {
            Uo(e, 0, 0, 0, 1);
            return;
          }
          return u[3] = Ef(u[3]), Bk(u, e), Nd(n, e), e;
        case "hsl":
          if (u.length !== 3) {
            Uo(e, 0, 0, 0, 1);
            return;
          }
          return Bk(u, e), Nd(n, e), e;
        default:
          return;
      }
    }
    Uo(e, 0, 0, 0, 1);
  }
}
function Bk(n, e) {
  var t = (parseFloat(n[0]) % 360 + 360) % 360 / 360, r = Ef(n[1]), i = Ef(n[2]), o = i <= 0.5 ? i * (r + 1) : i + r - i * r, s = i * 2 - o;
  return e = e || [], Uo(e, ea(tA(s, o, t + 1 / 3) * 255), ea(tA(s, o, t) * 255), ea(tA(s, o, t - 1 / 3) * 255), 1), n.length === 4 && (e[3] = n[3]), e;
}
function mbt(n) {
  if (n) {
    var e = n[0] / 255, t = n[1] / 255, r = n[2] / 255, i = Math.min(e, t, r), o = Math.max(e, t, r), s = o - i, a = (o + i) / 2, l, u;
    if (s === 0)
      l = 0, u = 0;
    else {
      a < 0.5 ? u = s / (o + i) : u = s / (2 - o - i);
      var c = ((o - e) / 6 + s / 2) / s, h = ((o - t) / 6 + s / 2) / s, f = ((o - r) / 6 + s / 2) / s;
      e === o ? l = f - h : t === o ? l = 1 / 3 + c - f : r === o && (l = 2 / 3 + h - c), l < 0 && (l += 1), l > 1 && (l -= 1);
    }
    var d = [l * 360, u, a];
    return n[3] != null && d.push(n[3]), d;
  }
}
function Vk(n, e) {
  var t = Vo(n);
  if (t) {
    for (var r = 0; r < 3; r++)
      e < 0 ? t[r] = t[r] * (1 - e) | 0 : t[r] = (255 - t[r]) * e + t[r] | 0, t[r] > 255 ? t[r] = 255 : t[r] < 0 && (t[r] = 0);
    return jl(t, t.length === 4 ? "rgba" : "rgb");
  }
}
function nA(n, e, t) {
  if (!(!(e && e.length) || !(n >= 0 && n <= 1))) {
    t = t || [];
    var r = n * (e.length - 1), i = Math.floor(r), o = Math.ceil(r), s = e[i], a = e[o], l = r - i;
    return t[0] = ea(lc(s[0], a[0], l)), t[1] = ea(lc(s[1], a[1], l)), t[2] = ea(lc(s[2], a[2], l)), t[3] = v0(lc(s[3], a[3], l)), t;
  }
}
function ybt(n, e, t) {
  if (!(!(e && e.length) || !(n >= 0 && n <= 1))) {
    var r = n * (e.length - 1), i = Math.floor(r), o = Math.ceil(r), s = Vo(e[i]), a = Vo(e[o]), l = r - i, u = jl([
      ea(lc(s[0], a[0], l)),
      ea(lc(s[1], a[1], l)),
      ea(lc(s[2], a[2], l)),
      v0(lc(s[3], a[3], l))
    ], "rgba");
    return t ? {
      color: u,
      leftIndex: i,
      rightIndex: o,
      value: r
    } : u;
  }
}
function fy(n, e, t, r) {
  var i = Vo(n);
  if (n)
    return i = mbt(i), e != null && (i[0] = vbt(e)), t != null && (i[1] = Ef(t)), r != null && (i[2] = Ef(r)), jl(Bk(i), "rgba");
}
function Fx(n, e) {
  var t = Vo(n);
  if (t && e != null)
    return t[3] = v0(e), jl(t, "rgba");
}
function jl(n, e) {
  if (!(!n || !n.length)) {
    var t = n[0] + "," + n[1] + "," + n[2];
    return (e === "rgba" || e === "hsva" || e === "hsla") && (t += "," + n[3]), e + "(" + t + ")";
  }
}
function Qx(n, e) {
  var t = Vo(n);
  return t ? (0.299 * t[0] + 0.587 * t[1] + 0.114 * t[2]) * t[3] / 255 + (1 - t[3]) * e : 0;
}
var P4 = new Ob(100);
function zk(n) {
  if (be(n)) {
    var e = P4.get(n);
    return e || (e = Vk(n, -0.1), P4.put(n, e)), e;
  } else if (W_(n)) {
    var t = te({}, n);
    return t.colorStops = ae(n.colorStops, function(r) {
      return {
        offset: r.offset,
        color: Vk(r.color, -0.1)
      };
    }), t;
  }
  return n;
}
var Zx = Math.round;
function m0(n) {
  var e;
  if (!n || n === "transparent")
    n = "none";
  else if (typeof n == "string" && n.indexOf("rgba") > -1) {
    var t = Vo(n);
    t && (n = "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")", e = t[3]);
  }
  return {
    color: n,
    opacity: e ?? 1
  };
}
var E4 = 1e-4;
function uc(n) {
  return n < E4 && n > -E4;
}
function F1(n) {
  return Zx(n * 1e3) / 1e3;
}
function Fk(n) {
  return Zx(n * 1e4) / 1e4;
}
function bbt(n) {
  return "matrix(" + F1(n[0]) + "," + F1(n[1]) + "," + F1(n[2]) + "," + F1(n[3]) + "," + Fk(n[4]) + "," + Fk(n[5]) + ")";
}
var Obt = {
  left: "start",
  right: "end",
  center: "middle",
  middle: "middle"
};
function wbt(n, e, t) {
  return t === "top" ? n += e / 2 : t === "bottom" && (n -= e / 2), n;
}
function xbt(n) {
  return n && (n.shadowBlur || n.shadowOffsetX || n.shadowOffsetY);
}
function Sbt(n) {
  var e = n.style, t = n.getGlobalScale();
  return [
    e.shadowColor,
    (e.shadowBlur || 0).toFixed(2),
    (e.shadowOffsetX || 0).toFixed(2),
    (e.shadowOffsetY || 0).toFixed(2),
    t[0],
    t[1]
  ].join(",");
}
function eK(n) {
  return n && !!n.image;
}
function _bt(n) {
  return n && !!n.svgElement;
}
function BI(n) {
  return eK(n) || _bt(n);
}
function tK(n) {
  return n.type === "linear";
}
function nK(n) {
  return n.type === "radial";
}
function rK(n) {
  return n && (n.type === "linear" || n.type === "radial");
}
function H_(n) {
  return "url(#" + n + ")";
}
function iK(n) {
  var e = n.getGlobalScale(), t = Math.max(e[0], e[1]);
  return Math.max(Math.ceil(Math.log(t) / Math.log(10)), 1);
}
function oK(n) {
  var e = n.x || 0, t = n.y || 0, r = (n.rotation || 0) * gw, i = Qe(n.scaleX, 1), o = Qe(n.scaleY, 1), s = n.skewX || 0, a = n.skewY || 0, l = [];
  return (e || t) && l.push("translate(" + e + "px," + t + "px)"), r && l.push("rotate(" + r + ")"), (i !== 1 || o !== 1) && l.push("scale(" + i + "," + o + ")"), (s || a) && l.push("skew(" + Zx(s * gw) + "deg, " + Zx(a * gw) + "deg)"), l.join(" ");
}
var Cbt = function() {
  return ht.hasGlobalWindow && Pe(window.btoa) ? function(n) {
    return window.btoa(unescape(encodeURIComponent(n)));
  } : typeof Buffer < "u" ? function(n) {
    return Buffer.from(n).toString("base64");
  } : function(n) {
    return process.env.NODE_ENV !== "production" && Js("Base64 isn't natively supported in the current environment."), null;
  };
}(), Qk = Array.prototype.slice;
function Ml(n, e, t) {
  return (e - n) * t + n;
}
function rA(n, e, t, r) {
  for (var i = e.length, o = 0; o < i; o++)
    n[o] = Ml(e[o], t[o], r);
  return n;
}
function Abt(n, e, t, r) {
  for (var i = e.length, o = i && e[0].length, s = 0; s < i; s++) {
    n[s] || (n[s] = []);
    for (var a = 0; a < o; a++)
      n[s][a] = Ml(e[s][a], t[s][a], r);
  }
  return n;
}
function Q1(n, e, t, r) {
  for (var i = e.length, o = 0; o < i; o++)
    n[o] = e[o] + t[o] * r;
  return n;
}
function k4(n, e, t, r) {
  for (var i = e.length, o = i && e[0].length, s = 0; s < i; s++) {
    n[s] || (n[s] = []);
    for (var a = 0; a < o; a++)
      n[s][a] = e[s][a] + t[s][a] * r;
  }
  return n;
}
function Tbt(n, e) {
  for (var t = n.length, r = e.length, i = t > r ? e : n, o = Math.min(t, r), s = i[o - 1] || { color: [0, 0, 0, 0], offset: 0 }, a = o; a < Math.max(t, r); a++)
    i.push({
      offset: s.offset,
      color: s.color.slice()
    });
}
function Pbt(n, e, t) {
  var r = n, i = e;
  if (!(!r.push || !i.push)) {
    var o = r.length, s = i.length;
    if (o !== s) {
      var a = o > s;
      if (a)
        r.length = s;
      else
        for (var l = o; l < s; l++)
          r.push(t === 1 ? i[l] : Qk.call(i[l]));
    }
    for (var u = r[0] && r[0].length, l = 0; l < r.length; l++)
      if (t === 1)
        isNaN(r[l]) && (r[l] = i[l]);
      else
        for (var c = 0; c < u; c++)
          isNaN(r[l][c]) && (r[l][c] = i[l][c]);
  }
}
function dy(n) {
  if (_i(n)) {
    var e = n.length;
    if (_i(n[0])) {
      for (var t = [], r = 0; r < e; r++)
        t.push(Qk.call(n[r]));
      return t;
    }
    return Qk.call(n);
  }
  return n;
}
function bw(n) {
  return n[0] = Math.floor(n[0]) || 0, n[1] = Math.floor(n[1]) || 0, n[2] = Math.floor(n[2]) || 0, n[3] = n[3] == null ? 1 : n[3], "rgba(" + n.join(",") + ")";
}
function Ebt(n) {
  return _i(n && n[0]) ? 2 : 1;
}
var Z1 = 0, Ow = 1, sK = 2, Pm = 3, Zk = 4, Wk = 5, M4 = 6;
function D4(n) {
  return n === Zk || n === Wk;
}
function W1(n) {
  return n === Ow || n === sK;
}
var Wv = [0, 0, 0, 0], kbt = function() {
  function n(e) {
    this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = e;
  }
  return n.prototype.isFinished = function() {
    return this._finished;
  }, n.prototype.setFinished = function() {
    this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished();
  }, n.prototype.needsAnimate = function() {
    return this.keyframes.length >= 1;
  }, n.prototype.getAdditiveTrack = function() {
    return this._additiveTrack;
  }, n.prototype.addKeyframe = function(e, t, r) {
    this._needsSort = !0;
    var i = this.keyframes, o = i.length, s = !1, a = M4, l = t;
    if (_i(t)) {
      var u = Ebt(t);
      a = u, (u === 1 && !Tt(t[0]) || u === 2 && !Tt(t[0][0])) && (s = !0);
    } else if (Tt(t) && !ed(t))
      a = Z1;
    else if (be(t))
      if (!isNaN(+t))
        a = Z1;
      else {
        var c = Vo(t);
        c && (l = c, a = Pm);
      }
    else if (W_(t)) {
      var h = te({}, l);
      h.colorStops = ae(t.colorStops, function(d) {
        return {
          offset: d.offset,
          color: Vo(d.color)
        };
      }), tK(t) ? a = Zk : nK(t) && (a = Wk), l = h;
    }
    o === 0 ? this.valType = a : (a !== this.valType || a === M4) && (s = !0), this.discrete = this.discrete || s;
    var f = {
      time: e,
      value: l,
      rawValue: t,
      percent: 0
    };
    return r && (f.easing = r, f.easingFunc = Pe(r) ? r : hy[r] || NI(r)), i.push(f), f;
  }, n.prototype.prepare = function(e, t) {
    var r = this.keyframes;
    this._needsSort && r.sort(function(g, v) {
      return g.time - v.time;
    });
    for (var i = this.valType, o = r.length, s = r[o - 1], a = this.discrete, l = W1(i), u = D4(i), c = 0; c < o; c++) {
      var h = r[c], f = h.value, d = s.value;
      h.percent = h.time / e, a || (l && c !== o - 1 ? Pbt(f, d, i) : u && Tbt(f.colorStops, d.colorStops));
    }
    if (!a && i !== Wk && t && this.needsAnimate() && t.needsAnimate() && i === t.valType && !t._finished) {
      this._additiveTrack = t;
      for (var p = r[0].value, c = 0; c < o; c++)
        i === Z1 ? r[c].additiveValue = r[c].value - p : i === Pm ? r[c].additiveValue = Q1([], r[c].value, p, -1) : W1(i) && (r[c].additiveValue = i === Ow ? Q1([], r[c].value, p, -1) : k4([], r[c].value, p, -1));
    }
  }, n.prototype.step = function(e, t) {
    if (!this._finished) {
      this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
      var r = this._additiveTrack != null, i = r ? "additiveValue" : "value", o = this.valType, s = this.keyframes, a = s.length, l = this.propName, u = o === Pm, c, h = this._lastFr, f = Math.min, d, p;
      if (a === 1)
        d = p = s[0];
      else {
        if (t < 0)
          c = 0;
        else if (t < this._lastFrP) {
          var g = f(h + 1, a - 1);
          for (c = g; c >= 0 && !(s[c].percent <= t); c--)
            ;
          c = f(c, a - 2);
        } else {
          for (c = h; c < a && !(s[c].percent > t); c++)
            ;
          c = f(c - 1, a - 2);
        }
        p = s[c + 1], d = s[c];
      }
      if (d && p) {
        this._lastFr = c, this._lastFrP = t;
        var v = p.percent - d.percent, m = v === 0 ? 1 : f((t - d.percent) / v, 1);
        p.easingFunc && (m = p.easingFunc(m));
        var y = r ? this._additiveValue : u ? Wv : e[l];
        if ((W1(o) || u) && !y && (y = this._additiveValue = []), this.discrete)
          e[l] = m < 1 ? d.rawValue : p.rawValue;
        else if (W1(o))
          o === Ow ? rA(y, d[i], p[i], m) : Abt(y, d[i], p[i], m);
        else if (D4(o)) {
          var b = d[i], O = p[i], w = o === Zk;
          e[l] = {
            type: w ? "linear" : "radial",
            x: Ml(b.x, O.x, m),
            y: Ml(b.y, O.y, m),
            colorStops: ae(b.colorStops, function(S, _) {
              var C = O.colorStops[_];
              return {
                offset: Ml(S.offset, C.offset, m),
                color: bw(rA([], S.color, C.color, m))
              };
            }),
            global: O.global
          }, w ? (e[l].x2 = Ml(b.x2, O.x2, m), e[l].y2 = Ml(b.y2, O.y2, m)) : e[l].r = Ml(b.r, O.r, m);
        } else if (u)
          rA(y, d[i], p[i], m), r || (e[l] = bw(y));
        else {
          var x = Ml(d[i], p[i], m);
          r ? this._additiveValue = x : e[l] = x;
        }
        r && this._addToTarget(e);
      }
    }
  }, n.prototype._addToTarget = function(e) {
    var t = this.valType, r = this.propName, i = this._additiveValue;
    t === Z1 ? e[r] = e[r] + i : t === Pm ? (Vo(e[r], Wv), Q1(Wv, Wv, i, 1), e[r] = bw(Wv)) : t === Ow ? Q1(e[r], e[r], i, 1) : t === sK && k4(e[r], e[r], i, 1);
  }, n;
}(), VI = function() {
  function n(e, t, r, i) {
    if (this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = e, this._loop = t, t && i) {
      Js("Can' use additive animation on looped animation.");
      return;
    }
    this._additiveAnimators = i, this._allowDiscrete = r;
  }
  return n.prototype.getMaxTime = function() {
    return this._maxTime;
  }, n.prototype.getDelay = function() {
    return this._delay;
  }, n.prototype.getLoop = function() {
    return this._loop;
  }, n.prototype.getTarget = function() {
    return this._target;
  }, n.prototype.changeTarget = function(e) {
    this._target = e;
  }, n.prototype.when = function(e, t, r) {
    return this.whenWithKeys(e, t, ft(t), r);
  }, n.prototype.whenWithKeys = function(e, t, r, i) {
    for (var o = this._tracks, s = 0; s < r.length; s++) {
      var a = r[s], l = o[a];
      if (!l) {
        l = o[a] = new kbt(a);
        var u = void 0, c = this._getAdditiveTrack(a);
        if (c) {
          var h = c.keyframes, f = h[h.length - 1];
          u = f && f.value, c.valType === Pm && u && (u = bw(u));
        } else
          u = this._target[a];
        if (u == null)
          continue;
        e > 0 && l.addKeyframe(0, dy(u), i), this._trackKeys.push(a);
      }
      l.addKeyframe(e, dy(t[a]), i);
    }
    return this._maxTime = Math.max(this._maxTime, e), this;
  }, n.prototype.pause = function() {
    this._clip.pause(), this._paused = !0;
  }, n.prototype.resume = function() {
    this._clip.resume(), this._paused = !1;
  }, n.prototype.isPaused = function() {
    return !!this._paused;
  }, n.prototype.duration = function(e) {
    return this._maxTime = e, this._force = !0, this;
  }, n.prototype._doneCallback = function() {
    this._setTracksFinished(), this._clip = null;
    var e = this._doneCbs;
    if (e)
      for (var t = e.length, r = 0; r < t; r++)
        e[r].call(this);
  }, n.prototype._abortedCallback = function() {
    this._setTracksFinished();
    var e = this.animation, t = this._abortedCbs;
    if (e && e.removeClip(this._clip), this._clip = null, t)
      for (var r = 0; r < t.length; r++)
        t[r].call(this);
  }, n.prototype._setTracksFinished = function() {
    for (var e = this._tracks, t = this._trackKeys, r = 0; r < t.length; r++)
      e[t[r]].setFinished();
  }, n.prototype._getAdditiveTrack = function(e) {
    var t, r = this._additiveAnimators;
    if (r)
      for (var i = 0; i < r.length; i++) {
        var o = r[i].getTrack(e);
        o && (t = o);
      }
    return t;
  }, n.prototype.start = function(e) {
    if (!(this._started > 0)) {
      this._started = 1;
      for (var t = this, r = [], i = this._maxTime || 0, o = 0; o < this._trackKeys.length; o++) {
        var s = this._trackKeys[o], a = this._tracks[s], l = this._getAdditiveTrack(s), u = a.keyframes, c = u.length;
        if (a.prepare(i, l), a.needsAnimate())
          if (!this._allowDiscrete && a.discrete) {
            var h = u[c - 1];
            h && (t._target[a.propName] = h.rawValue), a.setFinished();
          } else
            r.push(a);
      }
      if (r.length || this._force) {
        var f = new pbt({
          life: i,
          loop: this._loop,
          delay: this._delay || 0,
          onframe: function(d) {
            t._started = 2;
            var p = t._additiveAnimators;
            if (p) {
              for (var g = !1, v = 0; v < p.length; v++)
                if (p[v]._clip) {
                  g = !0;
                  break;
                }
              g || (t._additiveAnimators = null);
            }
            for (var v = 0; v < r.length; v++)
              r[v].step(t._target, d);
            var m = t._onframeCbs;
            if (m)
              for (var v = 0; v < m.length; v++)
                m[v](t._target, d);
          },
          ondestroy: function() {
            t._doneCallback();
          }
        });
        this._clip = f, this.animation && this.animation.addClip(f), e && f.setEasing(e);
      } else
        this._doneCallback();
      return this;
    }
  }, n.prototype.stop = function(e) {
    if (this._clip) {
      var t = this._clip;
      e && t.onframe(1), this._abortedCallback();
    }
  }, n.prototype.delay = function(e) {
    return this._delay = e, this;
  }, n.prototype.during = function(e) {
    return e && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(e)), this;
  }, n.prototype.done = function(e) {
    return e && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(e)), this;
  }, n.prototype.aborted = function(e) {
    return e && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(e)), this;
  }, n.prototype.getClip = function() {
    return this._clip;
  }, n.prototype.getTrack = function(e) {
    return this._tracks[e];
  }, n.prototype.getTracks = function() {
    var e = this;
    return ae(this._trackKeys, function(t) {
      return e._tracks[t];
    });
  }, n.prototype.stopTracks = function(e, t) {
    if (!e.length || !this._clip)
      return !0;
    for (var r = this._tracks, i = this._trackKeys, o = 0; o < e.length; o++) {
      var s = r[e[o]];
      s && !s.isFinished() && (t ? s.step(this._target, 1) : this._started === 1 && s.step(this._target, 0), s.setFinished());
    }
    for (var a = !0, o = 0; o < i.length; o++)
      if (!r[i[o]].isFinished()) {
        a = !1;
        break;
      }
    return a && this._abortedCallback(), a;
  }, n.prototype.saveTo = function(e, t, r) {
    if (e) {
      t = t || this._trackKeys;
      for (var i = 0; i < t.length; i++) {
        var o = t[i], s = this._tracks[o];
        if (!(!s || s.isFinished())) {
          var a = s.keyframes, l = a[r ? 0 : a.length - 1];
          l && (e[o] = dy(l.rawValue));
        }
      }
    }
  }, n.prototype.__changeFinalValue = function(e, t) {
    t = t || ft(e);
    for (var r = 0; r < t.length; r++) {
      var i = t[r], o = this._tracks[i];
      if (o) {
        var s = o.keyframes;
        if (s.length > 1) {
          var a = s.pop();
          o.addKeyframe(a.time, e[i]), o.prepare(this._maxTime, o.getAdditiveTrack());
        }
      }
    }
  }, n;
}();
function mp() {
  return (/* @__PURE__ */ new Date()).getTime();
}
var Mbt = function(n) {
  j(e, n);
  function e(t) {
    var r = n.call(this) || this;
    return r._running = !1, r._time = 0, r._pausedTime = 0, r._pauseStart = 0, r._paused = !1, t = t || {}, r.stage = t.stage || {}, r;
  }
  return e.prototype.addClip = function(t) {
    t.animation && this.removeClip(t), this._head ? (this._tail.next = t, t.prev = this._tail, t.next = null, this._tail = t) : this._head = this._tail = t, t.animation = this;
  }, e.prototype.addAnimator = function(t) {
    t.animation = this;
    var r = t.getClip();
    r && this.addClip(r);
  }, e.prototype.removeClip = function(t) {
    if (t.animation) {
      var r = t.prev, i = t.next;
      r ? r.next = i : this._head = i, i ? i.prev = r : this._tail = r, t.next = t.prev = t.animation = null;
    }
  }, e.prototype.removeAnimator = function(t) {
    var r = t.getClip();
    r && this.removeClip(r), t.animation = null;
  }, e.prototype.update = function(t) {
    for (var r = mp() - this._pausedTime, i = r - this._time, o = this._head; o; ) {
      var s = o.next, a = o.step(r, i);
      a && (o.ondestroy(), this.removeClip(o)), o = s;
    }
    this._time = r, t || (this.trigger("frame", i), this.stage.update && this.stage.update());
  }, e.prototype._startLoop = function() {
    var t = this;
    this._running = !0;
    function r() {
      t._running && (Rk(r), !t._paused && t.update());
    }
    Rk(r);
  }, e.prototype.start = function() {
    this._running || (this._time = mp(), this._pausedTime = 0, this._startLoop());
  }, e.prototype.stop = function() {
    this._running = !1;
  }, e.prototype.pause = function() {
    this._paused || (this._pauseStart = mp(), this._paused = !0);
  }, e.prototype.resume = function() {
    this._paused && (this._pausedTime += mp() - this._pauseStart, this._paused = !1);
  }, e.prototype.clear = function() {
    for (var t = this._head; t; ) {
      var r = t.next;
      t.prev = t.next = t.animation = null, t = r;
    }
    this._head = this._tail = null;
  }, e.prototype.isFinished = function() {
    return this._head == null;
  }, e.prototype.animate = function(t, r) {
    r = r || {}, this.start();
    var i = new VI(t, r.loop);
    return this.addAnimator(i), i;
  }, e;
}(Ps), Dbt = 300, iA = ht.domSupported, oA = function() {
  var n = [
    "click",
    "dblclick",
    "mousewheel",
    "wheel",
    "mouseout",
    "mouseup",
    "mousedown",
    "mousemove",
    "contextmenu"
  ], e = [
    "touchstart",
    "touchend",
    "touchmove"
  ], t = {
    pointerdown: 1,
    pointerup: 1,
    pointermove: 1,
    pointerout: 1
  }, r = ae(n, function(i) {
    var o = i.replace("mouse", "pointer");
    return t.hasOwnProperty(o) ? o : i;
  });
  return {
    mouse: n,
    touch: e,
    pointer: r
  };
}(), L4 = {
  mouse: ["mousemove", "mouseup"],
  pointer: ["pointermove", "pointerup"]
}, I4 = !1;
function Gk(n) {
  var e = n.pointerType;
  return e === "pen" || e === "touch";
}
function Lbt(n) {
  n.touching = !0, n.touchTimer != null && (clearTimeout(n.touchTimer), n.touchTimer = null), n.touchTimer = setTimeout(function() {
    n.touching = !1, n.touchTimer = null;
  }, 700);
}
function sA(n) {
  n && (n.zrByTouch = !0);
}
function Ibt(n, e) {
  return Jo(n.dom, new Rbt(n, e), !0);
}
function aK(n, e) {
  for (var t = e, r = !1; t && t.nodeType !== 9 && !(r = t.domBelongToZr || t !== e && t === n.painterRoot); )
    t = t.parentNode;
  return r;
}
var Rbt = /* @__PURE__ */ function() {
  function n(e, t) {
    this.stopPropagation = qn, this.stopImmediatePropagation = qn, this.preventDefault = qn, this.type = t.type, this.target = this.currentTarget = e.dom, this.pointerType = t.pointerType, this.clientX = t.clientX, this.clientY = t.clientY;
  }
  return n;
}(), Bs = {
  mousedown: function(n) {
    n = Jo(this.dom, n), this.__mayPointerCapture = [n.zrX, n.zrY], this.trigger("mousedown", n);
  },
  mousemove: function(n) {
    n = Jo(this.dom, n);
    var e = this.__mayPointerCapture;
    e && (n.zrX !== e[0] || n.zrY !== e[1]) && this.__togglePointerCapture(!0), this.trigger("mousemove", n);
  },
  mouseup: function(n) {
    n = Jo(this.dom, n), this.__togglePointerCapture(!1), this.trigger("mouseup", n);
  },
  mouseout: function(n) {
    n = Jo(this.dom, n);
    var e = n.toElement || n.relatedTarget;
    aK(this, e) || (this.__pointerCapturing && (n.zrEventControl = "no_globalout"), this.trigger("mouseout", n));
  },
  wheel: function(n) {
    I4 = !0, n = Jo(this.dom, n), this.trigger("mousewheel", n);
  },
  mousewheel: function(n) {
    I4 || (n = Jo(this.dom, n), this.trigger("mousewheel", n));
  },
  touchstart: function(n) {
    n = Jo(this.dom, n), sA(n), this.__lastTouchMoment = /* @__PURE__ */ new Date(), this.handler.processGesture(n, "start"), Bs.mousemove.call(this, n), Bs.mousedown.call(this, n);
  },
  touchmove: function(n) {
    n = Jo(this.dom, n), sA(n), this.handler.processGesture(n, "change"), Bs.mousemove.call(this, n);
  },
  touchend: function(n) {
    n = Jo(this.dom, n), sA(n), this.handler.processGesture(n, "end"), Bs.mouseup.call(this, n), +/* @__PURE__ */ new Date() - +this.__lastTouchMoment < Dbt && Bs.click.call(this, n);
  },
  pointerdown: function(n) {
    Bs.mousedown.call(this, n);
  },
  pointermove: function(n) {
    Gk(n) || Bs.mousemove.call(this, n);
  },
  pointerup: function(n) {
    Bs.mouseup.call(this, n);
  },
  pointerout: function(n) {
    Gk(n) || Bs.mouseout.call(this, n);
  }
};
I(["click", "dblclick", "contextmenu"], function(n) {
  Bs[n] = function(e) {
    e = Jo(this.dom, e), this.trigger(n, e);
  };
});
var jk = {
  pointermove: function(n) {
    Gk(n) || jk.mousemove.call(this, n);
  },
  pointerup: function(n) {
    jk.mouseup.call(this, n);
  },
  mousemove: function(n) {
    this.trigger("mousemove", n);
  },
  mouseup: function(n) {
    var e = this.__pointerCapturing;
    this.__togglePointerCapture(!1), this.trigger("mouseup", n), e && (n.zrEventControl = "only_globalout", this.trigger("mouseout", n));
  }
};
function $bt(n, e) {
  var t = e.domHandlers;
  ht.pointerEventsSupported ? I(oA.pointer, function(r) {
    ww(e, r, function(i) {
      t[r].call(n, i);
    });
  }) : (ht.touchEventsSupported && I(oA.touch, function(r) {
    ww(e, r, function(i) {
      t[r].call(n, i), Lbt(e);
    });
  }), I(oA.mouse, function(r) {
    ww(e, r, function(i) {
      i = II(i), e.touching || t[r].call(n, i);
    });
  }));
}
function Nbt(n, e) {
  ht.pointerEventsSupported ? I(L4.pointer, t) : ht.touchEventsSupported || I(L4.mouse, t);
  function t(r) {
    function i(o) {
      o = II(o), aK(n, o.target) || (o = Ibt(n, o), e.domHandlers[r].call(n, o));
    }
    ww(e, r, i, { capture: !0 });
  }
}
function ww(n, e, t, r) {
  n.mounted[e] = t, n.listenerOpts[e] = r, Ik(n.domTarget, e, t, r);
}
function aA(n) {
  var e = n.mounted;
  for (var t in e)
    e.hasOwnProperty(t) && q0t(n.domTarget, t, e[t], n.listenerOpts[t]);
  n.mounted = {};
}
var R4 = /* @__PURE__ */ function() {
  function n(e, t) {
    this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = e, this.domHandlers = t;
  }
  return n;
}(), Bbt = function(n) {
  j(e, n);
  function e(t, r) {
    var i = n.call(this) || this;
    return i.__pointerCapturing = !1, i.dom = t, i.painterRoot = r, i._localHandlerScope = new R4(t, Bs), iA && (i._globalHandlerScope = new R4(document, jk)), $bt(i, i._localHandlerScope), i;
  }
  return e.prototype.dispose = function() {
    aA(this._localHandlerScope), iA && aA(this._globalHandlerScope);
  }, e.prototype.setCursor = function(t) {
    this.dom.style && (this.dom.style.cursor = t || "default");
  }, e.prototype.__togglePointerCapture = function(t) {
    if (this.__mayPointerCapture = null, iA && +this.__pointerCapturing ^ +t) {
      this.__pointerCapturing = t;
      var r = this._globalHandlerScope;
      t ? Nbt(this, r) : aA(r);
    }
  }, e;
}(Ps);
const Vbt = Bbt;
var lK = 1;
ht.hasGlobalWindow && (lK = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
var Wx = lK, Hk = 0.4, qk = "#333", Yk = "#ccc", zbt = "#eee", $4 = j_, N4 = 5e-5;
function gh(n) {
  return n > N4 || n < -N4;
}
var vh = [], Bd = [], lA = Bo(), uA = Math.abs, zl = function() {
  function n() {
  }
  return n.prototype.getLocalTransform = function(e) {
    return n.getLocalTransform(this, e);
  }, n.prototype.setPosition = function(e) {
    this.x = e[0], this.y = e[1];
  }, n.prototype.setScale = function(e) {
    this.scaleX = e[0], this.scaleY = e[1];
  }, n.prototype.setSkew = function(e) {
    this.skewX = e[0], this.skewY = e[1];
  }, n.prototype.setOrigin = function(e) {
    this.originX = e[0], this.originY = e[1];
  }, n.prototype.needLocalTransform = function() {
    return gh(this.rotation) || gh(this.x) || gh(this.y) || gh(this.scaleX - 1) || gh(this.scaleY - 1) || gh(this.skewX) || gh(this.skewY);
  }, n.prototype.updateTransform = function() {
    var e = this.parent && this.parent.transform, t = this.needLocalTransform(), r = this.transform;
    if (!(t || e)) {
      r && ($4(r), this.invTransform = null);
      return;
    }
    r = r || Bo(), t ? this.getLocalTransform(r) : $4(r), e && (t ? Gl(r, e, r) : RI(r, e)), this.transform = r, this._resolveGlobalScaleRatio(r);
  }, n.prototype._resolveGlobalScaleRatio = function(e) {
    var t = this.globalScaleRatio;
    if (t != null && t !== 1) {
      this.getGlobalScale(vh);
      var r = vh[0] < 0 ? -1 : 1, i = vh[1] < 0 ? -1 : 1, o = ((vh[0] - r) * t + r) / vh[0] || 0, s = ((vh[1] - i) * t + i) / vh[1] || 0;
      e[0] *= o, e[1] *= o, e[2] *= s, e[3] *= s;
    }
    this.invTransform = this.invTransform || Bo(), hv(this.invTransform, e);
  }, n.prototype.getComputedTransform = function() {
    for (var e = this, t = []; e; )
      t.push(e), e = e.parent;
    for (; e = t.pop(); )
      e.updateTransform();
    return this.transform;
  }, n.prototype.setLocalTransform = function(e) {
    if (e) {
      var t = e[0] * e[0] + e[1] * e[1], r = e[2] * e[2] + e[3] * e[3], i = Math.atan2(e[1], e[0]), o = Math.PI / 2 + i - Math.atan2(e[3], e[2]);
      r = Math.sqrt(r) * Math.cos(o), t = Math.sqrt(t), this.skewX = o, this.skewY = 0, this.rotation = -i, this.x = +e[4], this.y = +e[5], this.scaleX = t, this.scaleY = r, this.originX = 0, this.originY = 0;
    }
  }, n.prototype.decomposeTransform = function() {
    if (this.transform) {
      var e = this.parent, t = this.transform;
      e && e.transform && (e.invTransform = e.invTransform || Bo(), Gl(Bd, e.invTransform, t), t = Bd);
      var r = this.originX, i = this.originY;
      (r || i) && (lA[4] = r, lA[5] = i, Gl(Bd, t, lA), Bd[4] -= r, Bd[5] -= i, t = Bd), this.setLocalTransform(t);
    }
  }, n.prototype.getGlobalScale = function(e) {
    var t = this.transform;
    return e = e || [], t ? (e[0] = Math.sqrt(t[0] * t[0] + t[1] * t[1]), e[1] = Math.sqrt(t[2] * t[2] + t[3] * t[3]), t[0] < 0 && (e[0] = -e[0]), t[3] < 0 && (e[1] = -e[1]), e) : (e[0] = 1, e[1] = 1, e);
  }, n.prototype.transformCoordToLocal = function(e, t) {
    var r = [e, t], i = this.invTransform;
    return i && si(r, r, i), r;
  }, n.prototype.transformCoordToGlobal = function(e, t) {
    var r = [e, t], i = this.transform;
    return i && si(r, r, i), r;
  }, n.prototype.getLineScale = function() {
    var e = this.transform;
    return e && uA(e[0] - 1) > 1e-10 && uA(e[3] - 1) > 1e-10 ? Math.sqrt(uA(e[0] * e[3] - e[2] * e[1])) : 1;
  }, n.prototype.copyTransform = function(e) {
    uK(this, e);
  }, n.getLocalTransform = function(e, t) {
    t = t || [];
    var r = e.originX || 0, i = e.originY || 0, o = e.scaleX, s = e.scaleY, a = e.anchorX, l = e.anchorY, u = e.rotation || 0, c = e.x, h = e.y, f = e.skewX ? Math.tan(e.skewX) : 0, d = e.skewY ? Math.tan(-e.skewY) : 0;
    if (r || i || a || l) {
      var p = r + a, g = i + l;
      t[4] = -p * o - f * g * s, t[5] = -g * s - d * p * o;
    } else
      t[4] = t[5] = 0;
    return t[0] = o, t[3] = s, t[1] = d * o, t[2] = f * s, u && md(t, t, u), t[4] += r + c, t[5] += i + h, t;
  }, n.initDefaultProps = function() {
    var e = n.prototype;
    e.scaleX = e.scaleY = e.globalScaleRatio = 1, e.x = e.y = e.originX = e.originY = e.skewX = e.skewY = e.rotation = e.anchorX = e.anchorY = 0;
  }(), n;
}(), pl = [
  "x",
  "y",
  "originX",
  "originY",
  "anchorX",
  "anchorY",
  "rotation",
  "scaleX",
  "scaleY",
  "skewX",
  "skewY"
];
function uK(n, e) {
  for (var t = 0; t < pl.length; t++) {
    var r = pl[t];
    n[r] = e[r];
  }
}
var B4 = {};
function zo(n, e) {
  e = e || Rc;
  var t = B4[e];
  t || (t = B4[e] = new Ob(500));
  var r = t.get(n);
  return r == null && (r = $c.measureText(n, e).width, t.put(n, r)), r;
}
function V4(n, e, t, r) {
  var i = zo(n, e), o = q_(e), s = Em(0, i, t), a = cp(0, o, r), l = new et(s, a, i, o);
  return l;
}
function wb(n, e, t, r) {
  var i = ((n || "") + "").split(`
`), o = i.length;
  if (o === 1)
    return V4(i[0], e, t, r);
  for (var s = new et(0, 0, 0, 0), a = 0; a < i.length; a++) {
    var l = V4(i[a], e, t, r);
    a === 0 ? s.copy(l) : s.union(l);
  }
  return s;
}
function Em(n, e, t) {
  return t === "right" ? n -= e : t === "center" && (n -= e / 2), n;
}
function cp(n, e, t) {
  return t === "middle" ? n -= e / 2 : t === "bottom" && (n -= e), n;
}
function q_(n) {
  return zo("国", n);
}
function aa(n, e) {
  return typeof n == "string" ? n.lastIndexOf("%") >= 0 ? parseFloat(n) / 100 * e : parseFloat(n) : n;
}
function Gx(n, e, t) {
  var r = e.position || "inside", i = e.distance != null ? e.distance : 5, o = t.height, s = t.width, a = o / 2, l = t.x, u = t.y, c = "left", h = "top";
  if (r instanceof Array)
    l += aa(r[0], t.width), u += aa(r[1], t.height), c = null, h = null;
  else
    switch (r) {
      case "left":
        l -= i, u += a, c = "right", h = "middle";
        break;
      case "right":
        l += i + s, u += a, h = "middle";
        break;
      case "top":
        l += s / 2, u -= i, c = "center", h = "bottom";
        break;
      case "bottom":
        l += s / 2, u += o + i, c = "center";
        break;
      case "inside":
        l += s / 2, u += a, c = "center", h = "middle";
        break;
      case "insideLeft":
        l += i, u += a, h = "middle";
        break;
      case "insideRight":
        l += s - i, u += a, c = "right", h = "middle";
        break;
      case "insideTop":
        l += s / 2, u += i, c = "center";
        break;
      case "insideBottom":
        l += s / 2, u += o - i, c = "center", h = "bottom";
        break;
      case "insideTopLeft":
        l += i, u += i;
        break;
      case "insideTopRight":
        l += s - i, u += i, c = "right";
        break;
      case "insideBottomLeft":
        l += i, u += o - i, h = "bottom";
        break;
      case "insideBottomRight":
        l += s - i, u += o - i, c = "right", h = "bottom";
        break;
    }
  return n = n || {}, n.x = l, n.y = u, n.align = c, n.verticalAlign = h, n;
}
var cA = "__zr_normal__", hA = pl.concat(["ignore"]), Fbt = fl(pl, function(n, e) {
  return n[e] = !0, n;
}, { ignore: !1 }), Vd = {}, Qbt = new et(0, 0, 0, 0), zI = function() {
  function n(e) {
    this.id = RU(), this.animators = [], this.currentStates = [], this.states = {}, this._init(e);
  }
  return n.prototype._init = function(e) {
    this.attr(e);
  }, n.prototype.drift = function(e, t, r) {
    switch (this.draggable) {
      case "horizontal":
        t = 0;
        break;
      case "vertical":
        e = 0;
        break;
    }
    var i = this.transform;
    i || (i = this.transform = [1, 0, 0, 1, 0, 0]), i[4] += e, i[5] += t, this.decomposeTransform(), this.markRedraw();
  }, n.prototype.beforeUpdate = function() {
  }, n.prototype.afterUpdate = function() {
  }, n.prototype.update = function() {
    this.updateTransform(), this.__dirty && this.updateInnerText();
  }, n.prototype.updateInnerText = function(e) {
    var t = this._textContent;
    if (t && (!t.ignore || e)) {
      this.textConfig || (this.textConfig = {});
      var r = this.textConfig, i = r.local, o = t.innerTransformable, s = void 0, a = void 0, l = !1;
      o.parent = i ? this : null;
      var u = !1;
      if (o.copyTransform(t), r.position != null) {
        var c = Qbt;
        r.layoutRect ? c.copy(r.layoutRect) : c.copy(this.getBoundingRect()), i || c.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Vd, r, c) : Gx(Vd, r, c), o.x = Vd.x, o.y = Vd.y, s = Vd.align, a = Vd.verticalAlign;
        var h = r.origin;
        if (h && r.rotation != null) {
          var f = void 0, d = void 0;
          h === "center" ? (f = c.width * 0.5, d = c.height * 0.5) : (f = aa(h[0], c.width), d = aa(h[1], c.height)), u = !0, o.originX = -o.x + f + (i ? 0 : c.x), o.originY = -o.y + d + (i ? 0 : c.y);
        }
      }
      r.rotation != null && (o.rotation = r.rotation);
      var p = r.offset;
      p && (o.x += p[0], o.y += p[1], u || (o.originX = -p[0], o.originY = -p[1]));
      var g = r.inside == null ? typeof r.position == "string" && r.position.indexOf("inside") >= 0 : r.inside, v = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), m = void 0, y = void 0, b = void 0;
      g && this.canBeInsideText() ? (m = r.insideFill, y = r.insideStroke, (m == null || m === "auto") && (m = this.getInsideTextFill()), (y == null || y === "auto") && (y = this.getInsideTextStroke(m), b = !0)) : (m = r.outsideFill, y = r.outsideStroke, (m == null || m === "auto") && (m = this.getOutsideFill()), (y == null || y === "auto") && (y = this.getOutsideStroke(m), b = !0)), m = m || "#000", (m !== v.fill || y !== v.stroke || b !== v.autoStroke || s !== v.align || a !== v.verticalAlign) && (l = !0, v.fill = m, v.stroke = y, v.autoStroke = b, v.align = s, v.verticalAlign = a, t.setDefaultTextStyle(v)), t.__dirty |= Do, l && t.dirtyStyle(!0);
    }
  }, n.prototype.canBeInsideText = function() {
    return !0;
  }, n.prototype.getInsideTextFill = function() {
    return "#fff";
  }, n.prototype.getInsideTextStroke = function(e) {
    return "#000";
  }, n.prototype.getOutsideFill = function() {
    return this.__zr && this.__zr.isDarkMode() ? Yk : qk;
  }, n.prototype.getOutsideStroke = function(e) {
    var t = this.__zr && this.__zr.getBackgroundColor(), r = typeof t == "string" && Vo(t);
    r || (r = [255, 255, 255, 1]);
    for (var i = r[3], o = this.__zr.isDarkMode(), s = 0; s < 3; s++)
      r[s] = r[s] * i + (o ? 0 : 255) * (1 - i);
    return r[3] = 1, jl(r, "rgba");
  }, n.prototype.traverse = function(e, t) {
  }, n.prototype.attrKV = function(e, t) {
    e === "textConfig" ? this.setTextConfig(t) : e === "textContent" ? this.setTextContent(t) : e === "clipPath" ? this.setClipPath(t) : e === "extra" ? (this.extra = this.extra || {}, te(this.extra, t)) : this[e] = t;
  }, n.prototype.hide = function() {
    this.ignore = !0, this.markRedraw();
  }, n.prototype.show = function() {
    this.ignore = !1, this.markRedraw();
  }, n.prototype.attr = function(e, t) {
    if (typeof e == "string")
      this.attrKV(e, t);
    else if (Me(e))
      for (var r = e, i = ft(r), o = 0; o < i.length; o++) {
        var s = i[o];
        this.attrKV(s, e[s]);
      }
    return this.markRedraw(), this;
  }, n.prototype.saveCurrentToNormalState = function(e) {
    this._innerSaveToNormal(e);
    for (var t = this._normalState, r = 0; r < this.animators.length; r++) {
      var i = this.animators[r], o = i.__fromStateTransition;
      if (!(i.getLoop() || o && o !== cA)) {
        var s = i.targetName, a = s ? t[s] : t;
        i.saveTo(a);
      }
    }
  }, n.prototype._innerSaveToNormal = function(e) {
    var t = this._normalState;
    t || (t = this._normalState = {}), e.textConfig && !t.textConfig && (t.textConfig = this.textConfig), this._savePrimaryToNormal(e, t, hA);
  }, n.prototype._savePrimaryToNormal = function(e, t, r) {
    for (var i = 0; i < r.length; i++) {
      var o = r[i];
      e[o] != null && !(o in t) && (t[o] = this[o]);
    }
  }, n.prototype.hasState = function() {
    return this.currentStates.length > 0;
  }, n.prototype.getState = function(e) {
    return this.states[e];
  }, n.prototype.ensureState = function(e) {
    var t = this.states;
    return t[e] || (t[e] = {}), t[e];
  }, n.prototype.clearStates = function(e) {
    this.useState(cA, !1, e);
  }, n.prototype.useState = function(e, t, r, i) {
    var o = e === cA, s = this.hasState();
    if (!(!s && o)) {
      var a = this.currentStates, l = this.stateTransition;
      if (!(ot(a, e) >= 0 && (t || a.length === 1))) {
        var u;
        if (this.stateProxy && !o && (u = this.stateProxy(e)), u || (u = this.states && this.states[e]), !u && !o) {
          Js("State " + e + " not exists.");
          return;
        }
        o || this.saveCurrentToNormalState(u);
        var c = !!(u && u.hoverLayer || i);
        c && this._toggleHoverLayerFlag(!0), this._applyStateObj(e, u, this._normalState, t, !r && !this.__inHover && l && l.duration > 0, l);
        var h = this._textContent, f = this._textGuide;
        return h && h.useState(e, t, r, c), f && f.useState(e, t, r, c), o ? (this.currentStates = [], this._normalState = {}) : t ? this.currentStates.push(e) : this.currentStates = [e], this._updateAnimationTargets(), this.markRedraw(), !c && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~Do), u;
      }
    }
  }, n.prototype.useStates = function(e, t, r) {
    if (!e.length)
      this.clearStates();
    else {
      var i = [], o = this.currentStates, s = e.length, a = s === o.length;
      if (a) {
        for (var l = 0; l < s; l++)
          if (e[l] !== o[l]) {
            a = !1;
            break;
          }
      }
      if (a)
        return;
      for (var l = 0; l < s; l++) {
        var u = e[l], c = void 0;
        this.stateProxy && (c = this.stateProxy(u, e)), c || (c = this.states[u]), c && i.push(c);
      }
      var h = i[s - 1], f = !!(h && h.hoverLayer || r);
      f && this._toggleHoverLayerFlag(!0);
      var d = this._mergeStates(i), p = this.stateTransition;
      this.saveCurrentToNormalState(d), this._applyStateObj(e.join(","), d, this._normalState, !1, !t && !this.__inHover && p && p.duration > 0, p);
      var g = this._textContent, v = this._textGuide;
      g && g.useStates(e, t, f), v && v.useStates(e, t, f), this._updateAnimationTargets(), this.currentStates = e.slice(), this.markRedraw(), !f && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~Do);
    }
  }, n.prototype.isSilent = function() {
    for (var e = this.silent, t = this.parent; !e && t; ) {
      if (t.silent) {
        e = !0;
        break;
      }
      t = t.parent;
    }
    return e;
  }, n.prototype._updateAnimationTargets = function() {
    for (var e = 0; e < this.animators.length; e++) {
      var t = this.animators[e];
      t.targetName && t.changeTarget(this[t.targetName]);
    }
  }, n.prototype.removeState = function(e) {
    var t = ot(this.currentStates, e);
    if (t >= 0) {
      var r = this.currentStates.slice();
      r.splice(t, 1), this.useStates(r);
    }
  }, n.prototype.replaceState = function(e, t, r) {
    var i = this.currentStates.slice(), o = ot(i, e), s = ot(i, t) >= 0;
    o >= 0 ? s ? i.splice(o, 1) : i[o] = t : r && !s && i.push(t), this.useStates(i);
  }, n.prototype.toggleState = function(e, t) {
    t ? this.useState(e, !0) : this.removeState(e);
  }, n.prototype._mergeStates = function(e) {
    for (var t = {}, r, i = 0; i < e.length; i++) {
      var o = e[i];
      te(t, o), o.textConfig && (r = r || {}, te(r, o.textConfig));
    }
    return r && (t.textConfig = r), t;
  }, n.prototype._applyStateObj = function(e, t, r, i, o, s) {
    var a = !(t && i);
    t && t.textConfig ? (this.textConfig = te({}, i ? this.textConfig : r.textConfig), te(this.textConfig, t.textConfig)) : a && r.textConfig && (this.textConfig = r.textConfig);
    for (var l = {}, u = !1, c = 0; c < hA.length; c++) {
      var h = hA[c], f = o && Fbt[h];
      t && t[h] != null ? f ? (u = !0, l[h] = t[h]) : this[h] = t[h] : a && r[h] != null && (f ? (u = !0, l[h] = r[h]) : this[h] = r[h]);
    }
    if (!o)
      for (var c = 0; c < this.animators.length; c++) {
        var d = this.animators[c], p = d.targetName;
        d.getLoop() || d.__changeFinalValue(p ? (t || r)[p] : t || r);
      }
    u && this._transitionState(e, l, s);
  }, n.prototype._attachComponent = function(e) {
    if (e.__zr && !e.__hostTarget) {
      if (process.env.NODE_ENV !== "production")
        throw new Error("Text element has been added to zrender.");
      return;
    }
    if (e === this) {
      if (process.env.NODE_ENV !== "production")
        throw new Error("Recursive component attachment.");
      return;
    }
    var t = this.__zr;
    t && e.addSelfToZr(t), e.__zr = t, e.__hostTarget = this;
  }, n.prototype._detachComponent = function(e) {
    e.__zr && e.removeSelfFromZr(e.__zr), e.__zr = null, e.__hostTarget = null;
  }, n.prototype.getClipPath = function() {
    return this._clipPath;
  }, n.prototype.setClipPath = function(e) {
    this._clipPath && this._clipPath !== e && this.removeClipPath(), this._attachComponent(e), this._clipPath = e, this.markRedraw();
  }, n.prototype.removeClipPath = function() {
    var e = this._clipPath;
    e && (this._detachComponent(e), this._clipPath = null, this.markRedraw());
  }, n.prototype.getTextContent = function() {
    return this._textContent;
  }, n.prototype.setTextContent = function(e) {
    var t = this._textContent;
    if (t !== e) {
      if (t && t !== e && this.removeTextContent(), process.env.NODE_ENV !== "production" && e.__zr && !e.__hostTarget)
        throw new Error("Text element has been added to zrender.");
      e.innerTransformable = new zl(), this._attachComponent(e), this._textContent = e, this.markRedraw();
    }
  }, n.prototype.setTextConfig = function(e) {
    this.textConfig || (this.textConfig = {}), te(this.textConfig, e), this.markRedraw();
  }, n.prototype.removeTextConfig = function() {
    this.textConfig = null, this.markRedraw();
  }, n.prototype.removeTextContent = function() {
    var e = this._textContent;
    e && (e.innerTransformable = null, this._detachComponent(e), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
  }, n.prototype.getTextGuideLine = function() {
    return this._textGuide;
  }, n.prototype.setTextGuideLine = function(e) {
    this._textGuide && this._textGuide !== e && this.removeTextGuideLine(), this._attachComponent(e), this._textGuide = e, this.markRedraw();
  }, n.prototype.removeTextGuideLine = function() {
    var e = this._textGuide;
    e && (this._detachComponent(e), this._textGuide = null, this.markRedraw());
  }, n.prototype.markRedraw = function() {
    this.__dirty |= Do;
    var e = this.__zr;
    e && (this.__inHover ? e.refreshHover() : e.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
  }, n.prototype.dirty = function() {
    this.markRedraw();
  }, n.prototype._toggleHoverLayerFlag = function(e) {
    this.__inHover = e;
    var t = this._textContent, r = this._textGuide;
    t && (t.__inHover = e), r && (r.__inHover = e);
  }, n.prototype.addSelfToZr = function(e) {
    if (this.__zr !== e) {
      this.__zr = e;
      var t = this.animators;
      if (t)
        for (var r = 0; r < t.length; r++)
          e.animation.addAnimator(t[r]);
      this._clipPath && this._clipPath.addSelfToZr(e), this._textContent && this._textContent.addSelfToZr(e), this._textGuide && this._textGuide.addSelfToZr(e);
    }
  }, n.prototype.removeSelfFromZr = function(e) {
    if (this.__zr) {
      this.__zr = null;
      var t = this.animators;
      if (t)
        for (var r = 0; r < t.length; r++)
          e.animation.removeAnimator(t[r]);
      this._clipPath && this._clipPath.removeSelfFromZr(e), this._textContent && this._textContent.removeSelfFromZr(e), this._textGuide && this._textGuide.removeSelfFromZr(e);
    }
  }, n.prototype.animate = function(e, t, r) {
    var i = e ? this[e] : this;
    if (process.env.NODE_ENV !== "production" && !i) {
      Js('Property "' + e + '" is not existed in element ' + this.id);
      return;
    }
    var o = new VI(i, t, r);
    return e && (o.targetName = e), this.addAnimator(o, e), o;
  }, n.prototype.addAnimator = function(e, t) {
    var r = this.__zr, i = this;
    e.during(function() {
      i.updateDuringAnimation(t);
    }).done(function() {
      var o = i.animators, s = ot(o, e);
      s >= 0 && o.splice(s, 1);
    }), this.animators.push(e), r && r.animation.addAnimator(e), r && r.wakeUp();
  }, n.prototype.updateDuringAnimation = function(e) {
    this.markRedraw();
  }, n.prototype.stopAnimation = function(e, t) {
    for (var r = this.animators, i = r.length, o = [], s = 0; s < i; s++) {
      var a = r[s];
      !e || e === a.scope ? a.stop(t) : o.push(a);
    }
    return this.animators = o, this;
  }, n.prototype.animateTo = function(e, t, r) {
    fA(this, e, t, r);
  }, n.prototype.animateFrom = function(e, t, r) {
    fA(this, e, t, r, !0);
  }, n.prototype._transitionState = function(e, t, r, i) {
    for (var o = fA(this, t, r, i), s = 0; s < o.length; s++)
      o[s].__fromStateTransition = e;
  }, n.prototype.getBoundingRect = function() {
    return null;
  }, n.prototype.getPaintRect = function() {
    return null;
  }, n.initDefaultProps = function() {
    var e = n.prototype;
    e.type = "element", e.name = "", e.ignore = e.silent = e.isGroup = e.draggable = e.dragging = e.ignoreClip = e.__inHover = !1, e.__dirty = Do;
    var t = {};
    function r(o, s, a) {
      t[o + s + a] || (console.warn("DEPRECATED: '" + o + "' has been deprecated. use '" + s + "', '" + a + "' instead"), t[o + s + a] = !0);
    }
    function i(o, s, a, l) {
      Object.defineProperty(e, o, {
        get: function() {
          if (process.env.NODE_ENV !== "production" && r(o, a, l), !this[s]) {
            var c = this[s] = [];
            u(this, c);
          }
          return this[s];
        },
        set: function(c) {
          process.env.NODE_ENV !== "production" && r(o, a, l), this[a] = c[0], this[l] = c[1], this[s] = c, u(this, c);
        }
      });
      function u(c, h) {
        Object.defineProperty(h, 0, {
          get: function() {
            return c[a];
          },
          set: function(f) {
            c[a] = f;
          }
        }), Object.defineProperty(h, 1, {
          get: function() {
            return c[l];
          },
          set: function(f) {
            c[l] = f;
          }
        });
      }
    }
    Object.defineProperty && (i("position", "_legacyPos", "x", "y"), i("scale", "_legacyScale", "scaleX", "scaleY"), i("origin", "_legacyOrigin", "originX", "originY"));
  }(), n;
}();
lr(zI, Ps);
lr(zI, zl);
function fA(n, e, t, r, i) {
  t = t || {};
  var o = [];
  cK(n, "", n, e, t, r, o, i);
  var s = o.length, a = !1, l = t.done, u = t.aborted, c = function() {
    a = !0, s--, s <= 0 && (a ? l && l() : u && u());
  }, h = function() {
    s--, s <= 0 && (a ? l && l() : u && u());
  };
  s || l && l(), o.length > 0 && t.during && o[0].during(function(p, g) {
    t.during(g);
  });
  for (var f = 0; f < o.length; f++) {
    var d = o[f];
    c && d.done(c), h && d.aborted(h), t.force && d.duration(t.duration), d.start(t.easing);
  }
  return o;
}
function dA(n, e, t) {
  for (var r = 0; r < t; r++)
    n[r] = e[r];
}
function Zbt(n) {
  return _i(n[0]);
}
function Wbt(n, e, t) {
  if (_i(e[t]))
    if (_i(n[t]) || (n[t] = []), zi(e[t])) {
      var r = e[t].length;
      n[t].length !== r && (n[t] = new e[t].constructor(r), dA(n[t], e[t], r));
    } else {
      var i = e[t], o = n[t], s = i.length;
      if (Zbt(i))
        for (var a = i[0].length, l = 0; l < s; l++)
          o[l] ? dA(o[l], i[l], a) : o[l] = Array.prototype.slice.call(i[l]);
      else
        dA(o, i, s);
      o.length = i.length;
    }
  else
    n[t] = e[t];
}
function Gbt(n, e) {
  return n === e || _i(n) && _i(e) && jbt(n, e);
}
function jbt(n, e) {
  var t = n.length;
  if (t !== e.length)
    return !1;
  for (var r = 0; r < t; r++)
    if (n[r] !== e[r])
      return !1;
  return !0;
}
function cK(n, e, t, r, i, o, s, a) {
  for (var l = ft(r), u = i.duration, c = i.delay, h = i.additive, f = i.setToFinal, d = !Me(o), p = n.animators, g = [], v = 0; v < l.length; v++) {
    var m = l[v], y = r[m];
    if (y != null && t[m] != null && (d || o[m]))
      if (Me(y) && !_i(y) && !W_(y)) {
        if (e) {
          a || (t[m] = y, n.updateDuringAnimation(e));
          continue;
        }
        cK(n, m, t[m], y, i, o && o[m], s, a);
      } else
        g.push(m);
    else
      a || (t[m] = y, n.updateDuringAnimation(e), g.push(m));
  }
  var b = g.length;
  if (!h && b)
    for (var O = 0; O < p.length; O++) {
      var w = p[O];
      if (w.targetName === e) {
        var x = w.stopTracks(g);
        if (x) {
          var S = ot(p, w);
          p.splice(S, 1);
        }
      }
    }
  if (i.force || (g = Gt(g, function(T) {
    return !Gbt(r[T], t[T]);
  }), b = g.length), b > 0 || i.force && !s.length) {
    var _ = void 0, C = void 0, A = void 0;
    if (a) {
      C = {}, f && (_ = {});
      for (var O = 0; O < b; O++) {
        var m = g[O];
        C[m] = t[m], f ? _[m] = r[m] : t[m] = r[m];
      }
    } else if (f) {
      A = {};
      for (var O = 0; O < b; O++) {
        var m = g[O];
        A[m] = dy(t[m]), Wbt(t, r, m);
      }
    }
    var w = new VI(t, !1, !1, h ? Gt(p, function(k) {
      return k.targetName === e;
    }) : null);
    w.targetName = e, i.scope && (w.scope = i.scope), f && _ && w.whenWithKeys(0, _, g), A && w.whenWithKeys(0, A, g), w.whenWithKeys(u ?? 500, a ? C : r, g).delay(c || 0), n.addAnimator(w, e), s.push(w);
  }
}
const hK = zI;
var Ve = function(n) {
  j(e, n);
  function e(t) {
    var r = n.call(this) || this;
    return r.isGroup = !0, r._children = [], r.attr(t), r;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.children = function() {
    return this._children.slice();
  }, e.prototype.childAt = function(t) {
    return this._children[t];
  }, e.prototype.childOfName = function(t) {
    for (var r = this._children, i = 0; i < r.length; i++)
      if (r[i].name === t)
        return r[i];
  }, e.prototype.childCount = function() {
    return this._children.length;
  }, e.prototype.add = function(t) {
    if (t && (t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), process.env.NODE_ENV !== "production" && t.__hostTarget))
      throw "This elemenet has been used as an attachment";
    return this;
  }, e.prototype.addBefore = function(t, r) {
    if (t && t !== this && t.parent !== this && r && r.parent === this) {
      var i = this._children, o = i.indexOf(r);
      o >= 0 && (i.splice(o, 0, t), this._doAdd(t));
    }
    return this;
  }, e.prototype.replace = function(t, r) {
    var i = ot(this._children, t);
    return i >= 0 && this.replaceAt(r, i), this;
  }, e.prototype.replaceAt = function(t, r) {
    var i = this._children, o = i[r];
    if (t && t !== this && t.parent !== this && t !== o) {
      i[r] = t, o.parent = null;
      var s = this.__zr;
      s && o.removeSelfFromZr(s), this._doAdd(t);
    }
    return this;
  }, e.prototype._doAdd = function(t) {
    t.parent && t.parent.remove(t), t.parent = this;
    var r = this.__zr;
    r && r !== t.__zr && t.addSelfToZr(r), r && r.refresh();
  }, e.prototype.remove = function(t) {
    var r = this.__zr, i = this._children, o = ot(i, t);
    return o < 0 ? this : (i.splice(o, 1), t.parent = null, r && t.removeSelfFromZr(r), r && r.refresh(), this);
  }, e.prototype.removeAll = function() {
    for (var t = this._children, r = this.__zr, i = 0; i < t.length; i++) {
      var o = t[i];
      r && o.removeSelfFromZr(r), o.parent = null;
    }
    return t.length = 0, this;
  }, e.prototype.eachChild = function(t, r) {
    for (var i = this._children, o = 0; o < i.length; o++) {
      var s = i[o];
      t.call(r, s, o);
    }
    return this;
  }, e.prototype.traverse = function(t, r) {
    for (var i = 0; i < this._children.length; i++) {
      var o = this._children[i], s = t.call(r, o);
      o.isGroup && !s && o.traverse(t, r);
    }
    return this;
  }, e.prototype.addSelfToZr = function(t) {
    n.prototype.addSelfToZr.call(this, t);
    for (var r = 0; r < this._children.length; r++) {
      var i = this._children[r];
      i.addSelfToZr(t);
    }
  }, e.prototype.removeSelfFromZr = function(t) {
    n.prototype.removeSelfFromZr.call(this, t);
    for (var r = 0; r < this._children.length; r++) {
      var i = this._children[r];
      i.removeSelfFromZr(t);
    }
  }, e.prototype.getBoundingRect = function(t) {
    for (var r = new et(0, 0, 0, 0), i = t || this._children, o = [], s = null, a = 0; a < i.length; a++) {
      var l = i[a];
      if (!(l.ignore || l.invisible)) {
        var u = l.getBoundingRect(), c = l.getLocalTransform(o);
        c ? (et.applyTransform(r, u, c), s = s || r.clone(), s.union(r)) : (s = s || u.clone(), s.union(u));
      }
    }
    return s || r;
  }, e;
}(hK);
Ve.prototype.type = "group";
/*!
* ZRender, a high performance 2d drawing library.
*
* Copyright (c) 2013, Baidu Inc.
* All rights reserved.
*
* LICENSE
* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
*/
var km = {}, fK = {};
function Hbt(n) {
  delete fK[n];
}
function qbt(n) {
  if (!n)
    return !1;
  if (typeof n == "string")
    return Qx(n, 1) < Hk;
  if (n.colorStops) {
    for (var e = n.colorStops, t = 0, r = e.length, i = 0; i < r; i++)
      t += Qx(e[i].color, 1);
    return t /= r, t < Hk;
  }
  return !1;
}
var Ybt = function() {
  function n(e, t, r) {
    var i = this;
    this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, r = r || {}, this.dom = t, this.id = e;
    var o = new lbt(), s = r.renderer || "canvas";
    if (km[s] || (s = ft(km)[0]), process.env.NODE_ENV !== "production" && !km[s])
      throw new Error("Renderer '" + s + "' is not imported. Please import it first.");
    r.useDirtyRect = r.useDirtyRect == null ? !1 : r.useDirtyRect;
    var a = new km[s](t, o, r, e), l = r.ssr || a.ssrOnly;
    this.storage = o, this.painter = a;
    var u = !ht.node && !ht.worker && !l ? new Vbt(a.getViewportRoot(), a.root) : null, c = r.useCoarsePointer, h = c == null || c === "auto" ? ht.touchEventsSupported : !!c, f = 44, d;
    h && (d = Qe(r.pointerSize, f)), this.handler = new ibt(o, a, u, a.root, d), this.animation = new Mbt({
      stage: {
        update: l ? null : function() {
          return i._flush(!0);
        }
      }
    }), l || this.animation.start();
  }
  return n.prototype.add = function(e) {
    this._disposed || !e || (this.storage.addRoot(e), e.addSelfToZr(this), this.refresh());
  }, n.prototype.remove = function(e) {
    this._disposed || !e || (this.storage.delRoot(e), e.removeSelfFromZr(this), this.refresh());
  }, n.prototype.configLayer = function(e, t) {
    this._disposed || (this.painter.configLayer && this.painter.configLayer(e, t), this.refresh());
  }, n.prototype.setBackgroundColor = function(e) {
    this._disposed || (this.painter.setBackgroundColor && this.painter.setBackgroundColor(e), this.refresh(), this._backgroundColor = e, this._darkMode = qbt(e));
  }, n.prototype.getBackgroundColor = function() {
    return this._backgroundColor;
  }, n.prototype.setDarkMode = function(e) {
    this._darkMode = e;
  }, n.prototype.isDarkMode = function() {
    return this._darkMode;
  }, n.prototype.refreshImmediately = function(e) {
    this._disposed || (e || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1);
  }, n.prototype.refresh = function() {
    this._disposed || (this._needsRefresh = !0, this.animation.start());
  }, n.prototype.flush = function() {
    this._disposed || this._flush(!1);
  }, n.prototype._flush = function(e) {
    var t, r = mp();
    this._needsRefresh && (t = !0, this.refreshImmediately(e)), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately());
    var i = mp();
    t ? (this._stillFrameAccum = 0, this.trigger("rendered", {
      elapsedTime: i - r
    })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop());
  }, n.prototype.setSleepAfterStill = function(e) {
    this._sleepAfterStill = e;
  }, n.prototype.wakeUp = function() {
    this._disposed || (this.animation.start(), this._stillFrameAccum = 0);
  }, n.prototype.refreshHover = function() {
    this._needsRefreshHover = !0;
  }, n.prototype.refreshHoverImmediately = function() {
    this._disposed || (this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.getType() === "canvas" && this.painter.refreshHover());
  }, n.prototype.resize = function(e) {
    this._disposed || (e = e || {}, this.painter.resize(e.width, e.height), this.handler.resize());
  }, n.prototype.clearAnimation = function() {
    this._disposed || this.animation.clear();
  }, n.prototype.getWidth = function() {
    if (!this._disposed)
      return this.painter.getWidth();
  }, n.prototype.getHeight = function() {
    if (!this._disposed)
      return this.painter.getHeight();
  }, n.prototype.setCursorStyle = function(e) {
    this._disposed || this.handler.setCursorStyle(e);
  }, n.prototype.findHover = function(e, t) {
    if (!this._disposed)
      return this.handler.findHover(e, t);
  }, n.prototype.on = function(e, t, r) {
    return this._disposed || this.handler.on(e, t, r), this;
  }, n.prototype.off = function(e, t) {
    this._disposed || this.handler.off(e, t);
  }, n.prototype.trigger = function(e, t) {
    this._disposed || this.handler.trigger(e, t);
  }, n.prototype.clear = function() {
    if (!this._disposed) {
      for (var e = this.storage.getRoots(), t = 0; t < e.length; t++)
        e[t] instanceof Ve && e[t].removeSelfFromZr(this);
      this.storage.delAllRoots(), this.painter.clear();
    }
  }, n.prototype.dispose = function() {
    this._disposed || (this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, this._disposed = !0, Hbt(this.id));
  }, n;
}();
function z4(n, e) {
  var t = new Ybt(RU(), n, e);
  return fK[t.id] = t, t;
}
function Xbt(n, e) {
  km[n] = e;
}
var Xk;
function Ubt(n) {
  if (typeof Xk == "function")
    return Xk(n);
}
function Kbt(n) {
  Xk = n;
}
var F4 = 1e-4, dK = 20;
function Jbt(n) {
  return n.replace(/^\s+|\s+$/g, "");
}
function Ft(n, e, t, r) {
  var i = e[0], o = e[1], s = t[0], a = t[1], l = o - i, u = a - s;
  if (l === 0)
    return u === 0 ? s : (s + a) / 2;
  if (r)
    if (l > 0) {
      if (n <= i)
        return s;
      if (n >= o)
        return a;
    } else {
      if (n >= i)
        return s;
      if (n <= o)
        return a;
    }
  else {
    if (n === i)
      return s;
    if (n === o)
      return a;
  }
  return (n - i) / l * u + s;
}
function fe(n, e) {
  switch (n) {
    case "center":
    case "middle":
      n = "50%";
      break;
    case "left":
    case "top":
      n = "0%";
      break;
    case "right":
    case "bottom":
      n = "100%";
      break;
  }
  return be(n) ? Jbt(n).match(/%$/) ? parseFloat(n) / 100 * e : parseFloat(n) : n == null ? NaN : +n;
}
function zn(n, e, t) {
  return e == null && (e = 10), e = Math.min(Math.max(0, e), dK), n = (+n).toFixed(e), t ? n : +n;
}
function ds(n) {
  return n.sort(function(e, t) {
    return e - t;
  }), n;
}
function Ha(n) {
  if (n = +n, isNaN(n))
    return 0;
  if (n > 1e-14) {
    for (var e = 1, t = 0; t < 15; t++, e *= 10)
      if (Math.round(n * e) / e === n)
        return t;
  }
  return Uk(n);
}
function Uk(n) {
  var e = n.toString().toLowerCase(), t = e.indexOf("e"), r = t > 0 ? +e.slice(t + 1) : 0, i = t > 0 ? t : e.length, o = e.indexOf("."), s = o < 0 ? 0 : i - 1 - o;
  return Math.max(0, s - r);
}
function pK(n, e) {
  var t = Math.log, r = Math.LN10, i = Math.floor(t(n[1] - n[0]) / r), o = Math.round(t(Math.abs(e[1] - e[0])) / r), s = Math.min(Math.max(-i + o, 0), 20);
  return isFinite(s) ? s : 20;
}
function e1t(n, e) {
  var t = fl(n, function(d, p) {
    return d + (isNaN(p) ? 0 : p);
  }, 0);
  if (t === 0)
    return [];
  for (var r = Math.pow(10, e), i = ae(n, function(d) {
    return (isNaN(d) ? 0 : d) / t * r * 100;
  }), o = r * 100, s = ae(i, function(d) {
    return Math.floor(d);
  }), a = fl(s, function(d, p) {
    return d + p;
  }, 0), l = ae(i, function(d, p) {
    return d - s[p];
  }); a < o; ) {
    for (var u = Number.NEGATIVE_INFINITY, c = null, h = 0, f = l.length; h < f; ++h)
      l[h] > u && (u = l[h], c = h);
    ++s[c], l[c] = 0, ++a;
  }
  return ae(s, function(d) {
    return d / r;
  });
}
function t1t(n, e) {
  var t = Math.max(Ha(n), Ha(e)), r = n + e;
  return t > dK ? r : zn(r, t);
}
var Q4 = 9007199254740991;
function gK(n) {
  var e = Math.PI * 2;
  return (n % e + e) % e;
}
function y0(n) {
  return n > -F4 && n < F4;
}
var n1t = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
function gl(n) {
  if (n instanceof Date)
    return n;
  if (be(n)) {
    var e = n1t.exec(n);
    if (!e)
      return /* @__PURE__ */ new Date(NaN);
    if (e[8]) {
      var t = +e[4] || 0;
      return e[8].toUpperCase() !== "Z" && (t -= +e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, t, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0));
    } else
      return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0);
  } else if (n == null)
    return /* @__PURE__ */ new Date(NaN);
  return new Date(Math.round(n));
}
function r1t(n) {
  return Math.pow(10, Y_(n));
}
function Y_(n) {
  if (n === 0)
    return 0;
  var e = Math.floor(Math.log(n) / Math.LN10);
  return n / Math.pow(10, e) >= 10 && e++, e;
}
function vK(n, e) {
  var t = Y_(n), r = Math.pow(10, t), i = n / r, o;
  return e ? i < 1.5 ? o = 1 : i < 2.5 ? o = 2 : i < 4 ? o = 3 : i < 7 ? o = 5 : o = 10 : i < 1 ? o = 1 : i < 2 ? o = 2 : i < 3 ? o = 3 : i < 5 ? o = 5 : o = 10, n = o * r, t >= -20 ? +n.toFixed(t < 0 ? -t : 0) : n;
}
function pA(n, e) {
  var t = (n.length - 1) * e + 1, r = Math.floor(t), i = +n[r - 1], o = t - r;
  return o ? i + o * (n[r] - i) : i;
}
function Z4(n) {
  n.sort(function(l, u) {
    return a(l, u, 0) ? -1 : 1;
  });
  for (var e = -1 / 0, t = 1, r = 0; r < n.length; ) {
    for (var i = n[r].interval, o = n[r].close, s = 0; s < 2; s++)
      i[s] <= e && (i[s] = e, o[s] = s ? 1 : 1 - t), e = i[s], t = o[s];
    i[0] === i[1] && o[0] * o[1] !== 1 ? n.splice(r, 1) : r++;
  }
  return n;
  function a(l, u, c) {
    return l.interval[c] < u.interval[c] || l.interval[c] === u.interval[c] && (l.close[c] - u.close[c] === (c ? -1 : 1) || !c && a(l, u, 1));
  }
}
function ou(n) {
  var e = parseFloat(n);
  return e == n && (e !== 0 || !be(n) || n.indexOf("x") <= 0) ? e : NaN;
}
function FI(n) {
  return !isNaN(ou(n));
}
function mK() {
  return Math.round(Math.random() * 9);
}
function yK(n, e) {
  return e === 0 ? n : yK(e, n % e);
}
function W4(n, e) {
  return n == null ? e : e == null ? n : n * e / yK(n, e);
}
var i1t = "[ECharts] ", G4 = {}, o1t = typeof console < "u" && console.warn && console.log;
function X_(n, e, t) {
  if (o1t) {
    if (t) {
      if (G4[e])
        return;
      G4[e] = !0;
    }
    console[n](i1t + e);
  }
}
function s1t(n, e) {
  X_("log", n, e);
}
function En(n, e) {
  X_("warn", n, e);
}
function li(n, e) {
  X_("error", n, e);
}
function la(n) {
  process.env.NODE_ENV !== "production" && X_("warn", "DEPRECATED: " + n, !0);
}
function er(n, e, t) {
  process.env.NODE_ENV !== "production" && la((t ? "[" + t + "]" : "") + (n + " is deprecated, use " + e + " instead."));
}
function Fi() {
  for (var n = [], e = 0; e < arguments.length; e++)
    n[e] = arguments[e];
  var t = "";
  if (process.env.NODE_ENV !== "production") {
    var r = function(i) {
      return i === void 0 ? "undefined" : i === 1 / 0 ? "Infinity" : i === -1 / 0 ? "-Infinity" : ed(i) ? "NaN" : i instanceof Date ? "Date(" + i.toISOString() + ")" : Pe(i) ? "function () { ... }" : $U(i) ? i + "" : null;
    };
    t = ae(n, function(i) {
      if (be(i))
        return i;
      var o = r(i);
      if (o != null)
        return o;
      if (typeof JSON < "u" && JSON.stringify)
        try {
          return JSON.stringify(i, function(s, a) {
            var l = r(a);
            return l ?? a;
          });
        } catch {
          return "?";
        }
      else
        return "?";
    }).join(" ");
  }
  return t;
}
function Nt(n) {
  throw new Error(n);
}
function j4(n, e, t) {
  return (e - n) * t + n;
}
var bK = "series\0", OK = "\0_ec_\0";
function Kt(n) {
  return n instanceof Array ? n : n == null ? [] : [n];
}
function td(n, e, t) {
  if (n) {
    n[e] = n[e] || {}, n.emphasis = n.emphasis || {}, n.emphasis[e] = n.emphasis[e] || {};
    for (var r = 0, i = t.length; r < i; r++) {
      var o = t[r];
      !n.emphasis[e].hasOwnProperty(o) && n[e].hasOwnProperty(o) && (n.emphasis[e][o] = n[e][o]);
    }
  }
}
var H4 = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
function fv(n) {
  return Me(n) && !oe(n) && !(n instanceof Date) ? n.value : n;
}
function a1t(n) {
  return Me(n) && !(n instanceof Array);
}
function wK(n, e, t) {
  var r = t === "normalMerge", i = t === "replaceMerge", o = t === "replaceAll";
  n = n || [], e = (e || []).slice();
  var s = _e();
  I(e, function(l, u) {
    if (!Me(l)) {
      e[u] = null;
      return;
    }
    process.env.NODE_ENV !== "production" && (l.id != null && !Y4(l.id) && q4(l.id), l.name != null && !Y4(l.name) && q4(l.name));
  });
  var a = l1t(n, s, t);
  return (r || i) && u1t(a, n, s, e), r && c1t(a, e), r || i ? h1t(a, e, i) : o && f1t(a, e), d1t(a), a;
}
function l1t(n, e, t) {
  var r = [];
  if (t === "replaceAll")
    return r;
  for (var i = 0; i < n.length; i++) {
    var o = n[i];
    o && o.id != null && e.set(o.id, i), r.push({
      existing: t === "replaceMerge" || Mg(o) ? null : o,
      newOption: null,
      keyInfo: null,
      brandNew: null
    });
  }
  return r;
}
function u1t(n, e, t, r) {
  I(r, function(i, o) {
    if (!(!i || i.id == null)) {
      var s = py(i.id), a = t.get(s);
      if (a != null) {
        var l = n[a];
        De(!l.newOption, 'Duplicated option on id "' + s + '".'), l.newOption = i, l.existing = e[a], r[o] = null;
      }
    }
  });
}
function c1t(n, e) {
  I(e, function(t, r) {
    if (!(!t || t.name == null))
      for (var i = 0; i < n.length; i++) {
        var o = n[i].existing;
        if (!n[i].newOption && o && (o.id == null || t.id == null) && !Mg(t) && !Mg(o) && xK("name", o, t)) {
          n[i].newOption = t, e[r] = null;
          return;
        }
      }
  });
}
function h1t(n, e, t) {
  I(e, function(r) {
    if (r) {
      for (
        var i, o = 0;
        // Be `!resultItem` only when `nextIdx >= result.length`.
        (i = n[o]) && (i.newOption || Mg(i.existing) || // In mode "replaceMerge", here no not-mapped-non-internal-existing.
        i.existing && r.id != null && !xK("id", r, i.existing));
      )
        o++;
      i ? (i.newOption = r, i.brandNew = t) : n.push({
        newOption: r,
        brandNew: t,
        existing: null,
        keyInfo: null
      }), o++;
    }
  });
}
function f1t(n, e) {
  I(e, function(t) {
    n.push({
      newOption: t,
      brandNew: !0,
      existing: null,
      keyInfo: null
    });
  });
}
function d1t(n) {
  var e = _e();
  I(n, function(t) {
    var r = t.existing;
    r && e.set(r.id, t);
  }), I(n, function(t) {
    var r = t.newOption;
    De(!r || r.id == null || !e.get(r.id) || e.get(r.id) === t, "id duplicates: " + (r && r.id)), r && r.id != null && e.set(r.id, t), !t.keyInfo && (t.keyInfo = {});
  }), I(n, function(t, r) {
    var i = t.existing, o = t.newOption, s = t.keyInfo;
    if (Me(o)) {
      if (s.name = o.name != null ? py(o.name) : i ? i.name : bK + r, i)
        s.id = py(i.id);
      else if (o.id != null)
        s.id = py(o.id);
      else {
        var a = 0;
        do
          s.id = "\0" + s.name + "\0" + a++;
        while (e.get(s.id));
      }
      e.set(s.id, t);
    }
  });
}
function xK(n, e, t) {
  var r = dr(e[n], null), i = dr(t[n], null);
  return r != null && i != null && r === i;
}
function py(n) {
  if (process.env.NODE_ENV !== "production" && n == null)
    throw new Error();
  return dr(n, "");
}
function dr(n, e) {
  return n == null ? e : be(n) ? n : Tt(n) || $x(n) ? n + "" : e;
}
function q4(n) {
  process.env.NODE_ENV !== "production" && En("`" + n + "` is invalid id or name. Must be a string or number.");
}
function Y4(n) {
  return $x(n) || FI(n);
}
function QI(n) {
  var e = n.name;
  return !!(e && e.indexOf(bK));
}
function Mg(n) {
  return n && n.id != null && py(n.id).indexOf(OK) === 0;
}
function p1t(n) {
  return OK + n;
}
function g1t(n, e, t) {
  I(n, function(r) {
    var i = r.newOption;
    Me(i) && (r.keyInfo.mainType = e, r.keyInfo.subType = v1t(e, i, r.existing, t));
  });
}
function v1t(n, e, t, r) {
  var i = e.type ? e.type : t ? t.subType : r.determineSubType(n, e);
  return i;
}
function m1t(n, e) {
  var t = {}, r = {};
  return i(n || [], t), i(e || [], r, t), [o(t), o(r)];
  function i(s, a, l) {
    for (var u = 0, c = s.length; u < c; u++) {
      var h = dr(s[u].seriesId, null);
      if (h == null)
        return;
      for (var f = Kt(s[u].dataIndex), d = l && l[h], p = 0, g = f.length; p < g; p++) {
        var v = f[p];
        d && d[v] ? d[v] = null : (a[h] || (a[h] = {}))[v] = 1;
      }
    }
  }
  function o(s, a) {
    var l = [];
    for (var u in s)
      if (s.hasOwnProperty(u) && s[u] != null)
        if (a)
          l.push(+u);
        else {
          var c = o(s[u], !0);
          c.length && l.push({
            seriesId: u,
            dataIndex: c
          });
        }
    return l;
  }
}
function nd(n, e) {
  if (e.dataIndexInside != null)
    return e.dataIndexInside;
  if (e.dataIndex != null)
    return oe(e.dataIndex) ? ae(e.dataIndex, function(t) {
      return n.indexOfRawIndex(t);
    }) : n.indexOfRawIndex(e.dataIndex);
  if (e.name != null)
    return oe(e.name) ? ae(e.name, function(t) {
      return n.indexOfName(t);
    }) : n.indexOfName(e.name);
}
function Ct() {
  var n = "__ec_inner_" + y1t++;
  return function(e) {
    return e[n] || (e[n] = {});
  };
}
var y1t = mK();
function gy(n, e, t) {
  var r = ZI(e, t), i = r.mainTypeSpecified, o = r.queryOptionMap, s = r.others, a = s, l = t ? t.defaultMainType : null;
  return !i && l && o.set(l, {}), o.each(function(u, c) {
    var h = xb(n, c, u, {
      useDefault: l === c,
      enableAll: t && t.enableAll != null ? t.enableAll : !0,
      enableNone: t && t.enableNone != null ? t.enableNone : !0
    });
    a[c + "Models"] = h.models, a[c + "Model"] = h.models[0];
  }), a;
}
function ZI(n, e) {
  var t;
  if (be(n)) {
    var r = {};
    r[n + "Index"] = 0, t = r;
  } else
    t = n;
  var i = _e(), o = {}, s = !1;
  return I(t, function(a, l) {
    if (l === "dataIndex" || l === "dataIndexInside") {
      o[l] = a;
      return;
    }
    var u = l.match(/^(\w+)(Index|Id|Name)$/) || [], c = u[1], h = (u[2] || "").toLowerCase();
    if (!(!c || !h || e && e.includeMainTypes && ot(e.includeMainTypes, c) < 0)) {
      s = s || !!c;
      var f = i.get(c) || i.set(c, {});
      f[h] = a;
    }
  }), {
    mainTypeSpecified: s,
    queryOptionMap: i,
    others: o
  };
}
var nr = {
  useDefault: !0,
  enableAll: !1,
  enableNone: !1
}, b1t = {
  useDefault: !1,
  enableAll: !0,
  enableNone: !0
};
function xb(n, e, t, r) {
  r = r || nr;
  var i = t.index, o = t.id, s = t.name, a = {
    models: null,
    specified: i != null || o != null || s != null
  };
  if (!a.specified) {
    var l = void 0;
    return a.models = r.useDefault && (l = n.getComponent(e)) ? [l] : [], a;
  }
  return i === "none" || i === !1 ? (De(r.enableNone, '`"none"` or `false` is not a valid value on index option.'), a.models = [], a) : (i === "all" && (De(r.enableAll, '`"all"` is not a valid value on index option.'), i = o = s = null), a.models = n.queryComponents({
    mainType: e,
    index: i,
    id: o,
    name: s
  }), a);
}
function SK(n, e, t) {
  n.setAttribute ? n.setAttribute(e, t) : n[e] = t;
}
function O1t(n, e) {
  return n.getAttribute ? n.getAttribute(e) : n[e];
}
function w1t(n) {
  return n === "auto" ? ht.domSupported ? "html" : "richText" : n || "html";
}
function Kk(n, e) {
  var t = _e(), r = [];
  return I(n, function(i) {
    var o = e(i);
    (t.get(o) || (r.push(o), t.set(o, []))).push(i);
  }), {
    keys: r,
    buckets: t
  };
}
function _K(n, e, t, r, i) {
  var o = e == null || e === "auto";
  if (r == null)
    return r;
  if (Tt(r)) {
    var s = j4(t || 0, r, i);
    return zn(s, o ? Math.max(Ha(t || 0), Ha(r)) : e);
  } else {
    if (be(r))
      return i < 1 ? t : r;
    for (var a = [], l = t, u = r, c = Math.max(l ? l.length : 0, u.length), h = 0; h < c; ++h) {
      var f = n.getDimensionInfo(h);
      if (f && f.type === "ordinal")
        a[h] = (i < 1 && l ? l : u)[h];
      else {
        var d = l && l[h] ? l[h] : 0, p = u[h], s = j4(d, p, i);
        a[h] = zn(s, o ? Math.max(Ha(d), Ha(p)) : e);
      }
    }
    return a;
  }
}
var x1t = ".", mh = "___EC__COMPONENT__CONTAINER___", CK = "___EC__EXTENDED_CLASS___";
function qa(n) {
  var e = {
    main: "",
    sub: ""
  };
  if (n) {
    var t = n.split(x1t);
    e.main = t[0] || "", e.sub = t[1] || "";
  }
  return e;
}
function S1t(n) {
  De(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(n), 'componentType "' + n + '" illegal');
}
function _1t(n) {
  return !!(n && n[CK]);
}
function WI(n, e) {
  n.$constructor = n, n.extend = function(t) {
    process.env.NODE_ENV !== "production" && I(e, function(o) {
      t[o] || console.warn("Method `" + o + "` should be implemented" + (t.type ? " in " + t.type : "") + ".");
    });
    var r = this, i;
    return C1t(r) ? i = /** @class */
    function(o) {
      j(s, o);
      function s() {
        return o.apply(this, arguments) || this;
      }
      return s;
    }(r) : (i = function() {
      (t.$constructor || r).apply(this, arguments);
    }, T0t(i, this)), te(i.prototype, t), i[CK] = !0, i.extend = this.extend, i.superCall = P1t, i.superApply = E1t, i.superClass = r, i;
  };
}
function C1t(n) {
  return Pe(n) && /^class\s/.test(Function.prototype.toString.call(n));
}
function AK(n, e) {
  n.extend = e.extend;
}
var A1t = Math.round(Math.random() * 10);
function T1t(n) {
  var e = ["__\0is_clz", A1t++].join("_");
  n.prototype[e] = !0, process.env.NODE_ENV !== "production" && De(!n.isInstance, 'The method "is" can not be defined.'), n.isInstance = function(t) {
    return !!(t && t[e]);
  };
}
function P1t(n, e) {
  for (var t = [], r = 2; r < arguments.length; r++)
    t[r - 2] = arguments[r];
  return this.superClass.prototype[e].apply(n, t);
}
function E1t(n, e, t) {
  return this.superClass.prototype[e].apply(n, t);
}
function U_(n) {
  var e = {};
  n.registerClass = function(r) {
    var i = r.type || r.prototype.type;
    if (i) {
      S1t(i), r.prototype.type = i;
      var o = qa(i);
      if (!o.sub)
        process.env.NODE_ENV !== "production" && e[o.main] && console.warn(o.main + " exists."), e[o.main] = r;
      else if (o.sub !== mh) {
        var s = t(o);
        s[o.sub] = r;
      }
    }
    return r;
  }, n.getClass = function(r, i, o) {
    var s = e[r];
    if (s && s[mh] && (s = i ? s[i] : null), o && !s)
      throw new Error(i ? "Component " + r + "." + (i || "") + " is used but not imported." : r + ".type should be specified.");
    return s;
  }, n.getClassesByMainType = function(r) {
    var i = qa(r), o = [], s = e[i.main];
    return s && s[mh] ? I(s, function(a, l) {
      l !== mh && o.push(a);
    }) : o.push(s), o;
  }, n.hasClass = function(r) {
    var i = qa(r);
    return !!e[i.main];
  }, n.getAllClassMainTypes = function() {
    var r = [];
    return I(e, function(i, o) {
      r.push(o);
    }), r;
  }, n.hasSubTypes = function(r) {
    var i = qa(r), o = e[i.main];
    return o && o[mh];
  };
  function t(r) {
    var i = e[r.main];
    return (!i || !i[mh]) && (i = e[r.main] = {}, i[mh] = !0), i;
  }
}
function rd(n, e) {
  for (var t = 0; t < n.length; t++)
    n[t][1] || (n[t][1] = n[t][0]);
  return e = e || !1, function(r, i, o) {
    for (var s = {}, a = 0; a < n.length; a++) {
      var l = n[a][1];
      if (!(i && ot(i, l) >= 0 || o && ot(o, l) < 0)) {
        var u = r.getShallow(l, e);
        u != null && (s[n[a][0]] = u);
      }
    }
    return s;
  };
}
var k1t = [
  ["fill", "color"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["opacity"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], M1t = rd(k1t), D1t = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getAreaStyle = function(e, t) {
      return M1t(this, e, t);
    }, n;
  }()
), Jk = new Ob(50);
function L1t(n) {
  if (typeof n == "string") {
    var e = Jk.get(n);
    return e && e.image;
  } else
    return n;
}
function GI(n, e, t, r, i) {
  if (n)
    if (typeof n == "string") {
      if (e && e.__zrImageSrc === n || !t)
        return e;
      var o = Jk.get(n), s = { hostEl: t, cb: r, cbPayload: i };
      return o ? (e = o.image, !K_(e) && o.pending.push(s)) : (e = $c.loadImage(n, X4, X4), e.__zrImageSrc = n, Jk.put(n, e.__cachedImgObj = {
        image: e,
        pending: [s]
      })), e;
    } else
      return n;
  else
    return e;
}
function X4() {
  var n = this.__cachedImgObj;
  this.onload = this.onerror = this.__cachedImgObj = null;
  for (var e = 0; e < n.pending.length; e++) {
    var t = n.pending[e], r = t.cb;
    r && r(this, t.cbPayload), t.hostEl.dirty();
  }
  n.pending.length = 0;
}
function K_(n) {
  return n && n.width && n.height;
}
var gA = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
function I1t(n, e, t, r, i) {
  if (!e)
    return "";
  var o = (n + "").split(`
`);
  i = TK(e, t, r, i);
  for (var s = 0, a = o.length; s < a; s++)
    o[s] = PK(o[s], i);
  return o.join(`
`);
}
function TK(n, e, t, r) {
  r = r || {};
  var i = te({}, r);
  i.font = e, t = Qe(t, "..."), i.maxIterations = Qe(r.maxIterations, 2);
  var o = i.minChar = Qe(r.minChar, 0);
  i.cnCharWidth = zo("国", e);
  var s = i.ascCharWidth = zo("a", e);
  i.placeholder = Qe(r.placeholder, "");
  for (var a = n = Math.max(0, n - 1), l = 0; l < o && a >= s; l++)
    a -= s;
  var u = zo(t, e);
  return u > a && (t = "", u = 0), a = n - u, i.ellipsis = t, i.ellipsisWidth = u, i.contentWidth = a, i.containerWidth = n, i;
}
function PK(n, e) {
  var t = e.containerWidth, r = e.font, i = e.contentWidth;
  if (!t)
    return "";
  var o = zo(n, r);
  if (o <= t)
    return n;
  for (var s = 0; ; s++) {
    if (o <= i || s >= e.maxIterations) {
      n += e.ellipsis;
      break;
    }
    var a = s === 0 ? R1t(n, i, e.ascCharWidth, e.cnCharWidth) : o > 0 ? Math.floor(n.length * i / o) : 0;
    n = n.substr(0, a), o = zo(n, r);
  }
  return n === "" && (n = e.placeholder), n;
}
function R1t(n, e, t, r) {
  for (var i = 0, o = 0, s = n.length; o < s && i < e; o++) {
    var a = n.charCodeAt(o);
    i += 0 <= a && a <= 127 ? t : r;
  }
  return o;
}
function $1t(n, e) {
  n != null && (n += "");
  var t = e.overflow, r = e.padding, i = e.font, o = t === "truncate", s = q_(i), a = Qe(e.lineHeight, s), l = !!e.backgroundColor, u = e.lineOverflow === "truncate", c = e.width, h;
  c != null && (t === "break" || t === "breakAll") ? h = n ? EK(n, e.font, c, t === "breakAll", 0).lines : [] : h = n ? n.split(`
`) : [];
  var f = h.length * a, d = Qe(e.height, f);
  if (f > d && u) {
    var p = Math.floor(d / a);
    h = h.slice(0, p);
  }
  if (n && o && c != null)
    for (var g = TK(c, i, e.ellipsis, {
      minChar: e.truncateMinChar,
      placeholder: e.placeholder
    }), v = 0; v < h.length; v++)
      h[v] = PK(h[v], g);
  for (var m = d, y = 0, v = 0; v < h.length; v++)
    y = Math.max(zo(h[v], i), y);
  c == null && (c = y);
  var b = y;
  return r && (m += r[0] + r[2], b += r[1] + r[3], c += r[1] + r[3]), l && (b = c), {
    lines: h,
    height: d,
    outerWidth: b,
    outerHeight: m,
    lineHeight: a,
    calculatedLineHeight: s,
    contentWidth: y,
    contentHeight: f,
    width: c
  };
}
var N1t = /* @__PURE__ */ function() {
  function n() {
  }
  return n;
}(), U4 = /* @__PURE__ */ function() {
  function n(e) {
    this.tokens = [], e && (this.tokens = e);
  }
  return n;
}(), B1t = /* @__PURE__ */ function() {
  function n() {
    this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [];
  }
  return n;
}();
function V1t(n, e) {
  var t = new B1t();
  if (n != null && (n += ""), !n)
    return t;
  for (var r = e.width, i = e.height, o = e.overflow, s = (o === "break" || o === "breakAll") && r != null ? { width: r, accumWidth: 0, breakAll: o === "breakAll" } : null, a = gA.lastIndex = 0, l; (l = gA.exec(n)) != null; ) {
    var u = l.index;
    u > a && vA(t, n.substring(a, u), e, s), vA(t, l[2], e, s, l[1]), a = gA.lastIndex;
  }
  a < n.length && vA(t, n.substring(a, n.length), e, s);
  var c = [], h = 0, f = 0, d = e.padding, p = o === "truncate", g = e.lineOverflow === "truncate";
  function v(N, $, V) {
    N.width = $, N.lineHeight = V, h += V, f = Math.max(f, $);
  }
  e:
    for (var m = 0; m < t.lines.length; m++) {
      for (var y = t.lines[m], b = 0, O = 0, w = 0; w < y.tokens.length; w++) {
        var x = y.tokens[w], S = x.styleName && e.rich[x.styleName] || {}, _ = x.textPadding = S.padding, C = _ ? _[1] + _[3] : 0, A = x.font = S.font || e.font;
        x.contentHeight = q_(A);
        var T = Qe(S.height, x.contentHeight);
        if (x.innerHeight = T, _ && (T += _[0] + _[2]), x.height = T, x.lineHeight = ys(S.lineHeight, e.lineHeight, T), x.align = S && S.align || e.align, x.verticalAlign = S && S.verticalAlign || "middle", g && i != null && h + x.lineHeight > i) {
          w > 0 ? (y.tokens = y.tokens.slice(0, w), v(y, O, b), t.lines = t.lines.slice(0, m + 1)) : t.lines = t.lines.slice(0, m);
          break e;
        }
        var k = S.width, L = k == null || k === "auto";
        if (typeof k == "string" && k.charAt(k.length - 1) === "%")
          x.percentWidth = k, c.push(x), x.contentWidth = zo(x.text, A);
        else {
          if (L) {
            var D = S.backgroundColor, E = D && D.image;
            E && (E = L1t(E), K_(E) && (x.width = Math.max(x.width, E.width * T / E.height)));
          }
          var M = p && r != null ? r - O : null;
          M != null && M < x.width ? !L || M < C ? (x.text = "", x.width = x.contentWidth = 0) : (x.text = I1t(x.text, M - C, A, e.ellipsis, { minChar: e.truncateMinChar }), x.width = x.contentWidth = zo(x.text, A)) : x.contentWidth = zo(x.text, A);
        }
        x.width += C, O += x.width, S && (b = Math.max(b, x.lineHeight));
      }
      v(y, O, b);
    }
  t.outerWidth = t.width = Qe(r, f), t.outerHeight = t.height = Qe(i, h), t.contentHeight = h, t.contentWidth = f, d && (t.outerWidth += d[1] + d[3], t.outerHeight += d[0] + d[2]);
  for (var m = 0; m < c.length; m++) {
    var x = c[m], R = x.percentWidth;
    x.width = parseInt(R, 10) / 100 * t.width;
  }
  return t;
}
function vA(n, e, t, r, i) {
  var o = e === "", s = i && t.rich[i] || {}, a = n.lines, l = s.font || t.font, u = !1, c, h;
  if (r) {
    var f = s.padding, d = f ? f[1] + f[3] : 0;
    if (s.width != null && s.width !== "auto") {
      var p = aa(s.width, r.width) + d;
      a.length > 0 && p + r.accumWidth > r.width && (c = e.split(`
`), u = !0), r.accumWidth = p;
    } else {
      var g = EK(e, l, r.width, r.breakAll, r.accumWidth);
      r.accumWidth = g.accumWidth + d, h = g.linesWidths, c = g.lines;
    }
  } else
    c = e.split(`
`);
  for (var v = 0; v < c.length; v++) {
    var m = c[v], y = new N1t();
    if (y.styleName = i, y.text = m, y.isLineHolder = !m && !o, typeof s.width == "number" ? y.width = s.width : y.width = h ? h[v] : zo(m, l), !v && !u) {
      var b = (a[a.length - 1] || (a[0] = new U4())).tokens, O = b.length;
      O === 1 && b[0].isLineHolder ? b[0] = y : (m || !O || o) && b.push(y);
    } else
      a.push(new U4([y]));
  }
}
function z1t(n) {
  var e = n.charCodeAt(0);
  return e >= 32 && e <= 591 || e >= 880 && e <= 4351 || e >= 4608 && e <= 5119 || e >= 7680 && e <= 8303;
}
var F1t = fl(",&?/;] ".split(""), function(n, e) {
  return n[e] = !0, n;
}, {});
function Q1t(n) {
  return z1t(n) ? !!F1t[n] : !0;
}
function EK(n, e, t, r, i) {
  for (var o = [], s = [], a = "", l = "", u = 0, c = 0, h = 0; h < n.length; h++) {
    var f = n.charAt(h);
    if (f === `
`) {
      l && (a += l, c += u), o.push(a), s.push(c), a = "", l = "", u = 0, c = 0;
      continue;
    }
    var d = zo(f, e), p = r ? !1 : !Q1t(f);
    if (o.length ? c + d > t : i + c + d > t) {
      c ? (a || l) && (p ? (a || (a = l, l = "", u = 0, c = u), o.push(a), s.push(c - u), l += f, u += d, a = "", c = u) : (l && (a += l, l = "", u = 0), o.push(a), s.push(c), a = f, c = d)) : p ? (o.push(l), s.push(u), l = f, u = d) : (o.push(f), s.push(d));
      continue;
    }
    c += d, p ? (l += f, u += d) : (l && (a += l, l = "", u = 0), a += f);
  }
  return !o.length && !a && (a = n, l = "", u = 0), l && (a += l), a && (o.push(a), s.push(c)), o.length === 1 && (c += i), {
    accumWidth: c,
    lines: o,
    linesWidths: s
  };
}
var eM = "__zr_style_" + Math.round(Math.random() * 10), kf = {
  shadowBlur: 0,
  shadowOffsetX: 0,
  shadowOffsetY: 0,
  shadowColor: "#000",
  opacity: 1,
  blend: "source-over"
}, J_ = {
  style: {
    shadowBlur: !0,
    shadowOffsetX: !0,
    shadowOffsetY: !0,
    shadowColor: !0,
    opacity: !0
  }
};
kf[eM] = !0;
var K4 = ["z", "z2", "invisible"], Z1t = ["invisible"], As = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype._init = function(t) {
    for (var r = ft(t), i = 0; i < r.length; i++) {
      var o = r[i];
      o === "style" ? this.useStyle(t[o]) : n.prototype.attrKV.call(this, o, t[o]);
    }
    this.style || this.useStyle({});
  }, e.prototype.beforeBrush = function() {
  }, e.prototype.afterBrush = function() {
  }, e.prototype.innerBeforeBrush = function() {
  }, e.prototype.innerAfterBrush = function() {
  }, e.prototype.shouldBePainted = function(t, r, i, o) {
    var s = this.transform;
    if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && W1t(this, t, r) || s && !s[0] && !s[3])
      return !1;
    if (i && this.__clipPaths) {
      for (var a = 0; a < this.__clipPaths.length; ++a)
        if (this.__clipPaths[a].isZeroArea())
          return !1;
    }
    if (o && this.parent)
      for (var l = this.parent; l; ) {
        if (l.ignore)
          return !1;
        l = l.parent;
      }
    return !0;
  }, e.prototype.contain = function(t, r) {
    return this.rectContain(t, r);
  }, e.prototype.traverse = function(t, r) {
    t.call(r, this);
  }, e.prototype.rectContain = function(t, r) {
    var i = this.transformCoordToLocal(t, r), o = this.getBoundingRect();
    return o.contain(i[0], i[1]);
  }, e.prototype.getPaintRect = function() {
    var t = this._paintRect;
    if (!this._paintRect || this.__dirty) {
      var r = this.transform, i = this.getBoundingRect(), o = this.style, s = o.shadowBlur || 0, a = o.shadowOffsetX || 0, l = o.shadowOffsetY || 0;
      t = this._paintRect || (this._paintRect = new et(0, 0, 0, 0)), r ? et.applyTransform(t, i, r) : t.copy(i), (s || a || l) && (t.width += s * 2 + Math.abs(a), t.height += s * 2 + Math.abs(l), t.x = Math.min(t.x, t.x + a - s), t.y = Math.min(t.y, t.y + l - s));
      var u = this.dirtyRectTolerance;
      t.isZero() || (t.x = Math.floor(t.x - u), t.y = Math.floor(t.y - u), t.width = Math.ceil(t.width + 1 + u * 2), t.height = Math.ceil(t.height + 1 + u * 2));
    }
    return t;
  }, e.prototype.setPrevPaintRect = function(t) {
    t ? (this._prevPaintRect = this._prevPaintRect || new et(0, 0, 0, 0), this._prevPaintRect.copy(t)) : this._prevPaintRect = null;
  }, e.prototype.getPrevPaintRect = function() {
    return this._prevPaintRect;
  }, e.prototype.animateStyle = function(t) {
    return this.animate("style", t);
  }, e.prototype.updateDuringAnimation = function(t) {
    t === "style" ? this.dirtyStyle() : this.markRedraw();
  }, e.prototype.attrKV = function(t, r) {
    t !== "style" ? n.prototype.attrKV.call(this, t, r) : this.style ? this.setStyle(r) : this.useStyle(r);
  }, e.prototype.setStyle = function(t, r) {
    return typeof t == "string" ? this.style[t] = r : te(this.style, t), this.dirtyStyle(), this;
  }, e.prototype.dirtyStyle = function(t) {
    t || this.markRedraw(), this.__dirty |= Tm, this._rect && (this._rect = null);
  }, e.prototype.dirty = function() {
    this.dirtyStyle();
  }, e.prototype.styleChanged = function() {
    return !!(this.__dirty & Tm);
  }, e.prototype.styleUpdated = function() {
    this.__dirty &= ~Tm;
  }, e.prototype.createStyle = function(t) {
    return G_(kf, t);
  }, e.prototype.useStyle = function(t) {
    t[eM] || (t = this.createStyle(t)), this.__inHover ? this.__hoverStyle = t : this.style = t, this.dirtyStyle();
  }, e.prototype.isStyleObject = function(t) {
    return t[eM];
  }, e.prototype._innerSaveToNormal = function(t) {
    n.prototype._innerSaveToNormal.call(this, t);
    var r = this._normalState;
    t.style && !r.style && (r.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(t, r, K4);
  }, e.prototype._applyStateObj = function(t, r, i, o, s, a) {
    n.prototype._applyStateObj.call(this, t, r, i, o, s, a);
    var l = !(r && o), u;
    if (r && r.style ? s ? o ? u = r.style : (u = this._mergeStyle(this.createStyle(), i.style), this._mergeStyle(u, r.style)) : (u = this._mergeStyle(this.createStyle(), o ? this.style : i.style), this._mergeStyle(u, r.style)) : l && (u = i.style), u)
      if (s) {
        var c = this.style;
        if (this.style = this.createStyle(l ? {} : c), l)
          for (var h = ft(c), f = 0; f < h.length; f++) {
            var d = h[f];
            d in u && (u[d] = u[d], this.style[d] = c[d]);
          }
        for (var p = ft(u), f = 0; f < p.length; f++) {
          var d = p[f];
          this.style[d] = this.style[d];
        }
        this._transitionState(t, {
          style: u
        }, a, this.getAnimationStyleProps());
      } else
        this.useStyle(u);
    for (var g = this.__inHover ? Z1t : K4, f = 0; f < g.length; f++) {
      var d = g[f];
      r && r[d] != null ? this[d] = r[d] : l && i[d] != null && (this[d] = i[d]);
    }
  }, e.prototype._mergeStates = function(t) {
    for (var r = n.prototype._mergeStates.call(this, t), i, o = 0; o < t.length; o++) {
      var s = t[o];
      s.style && (i = i || {}, this._mergeStyle(i, s.style));
    }
    return i && (r.style = i), r;
  }, e.prototype._mergeStyle = function(t, r) {
    return te(t, r), t;
  }, e.prototype.getAnimationStyleProps = function() {
    return J_;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.type = "displayable", t.invisible = !1, t.z = 0, t.z2 = 0, t.zlevel = 0, t.culling = !1, t.cursor = "pointer", t.rectHover = !1, t.incremental = !1, t._rect = null, t.dirtyRectTolerance = 0, t.__dirty = Do | Tm;
  }(), e;
}(hK), mA = new et(0, 0, 0, 0), yA = new et(0, 0, 0, 0);
function W1t(n, e, t) {
  return mA.copy(n.getBoundingRect()), n.transform && mA.applyTransform(n.transform), yA.width = e, yA.height = t, !mA.intersect(yA);
}
var ro = Math.min, io = Math.max, bA = Math.sin, OA = Math.cos, yh = Math.PI * 2, G1 = vd(), j1 = vd(), H1 = vd();
function eC(n, e, t) {
  if (n.length !== 0) {
    for (var r = n[0], i = r[0], o = r[0], s = r[1], a = r[1], l = 1; l < n.length; l++)
      r = n[l], i = ro(i, r[0]), o = io(o, r[0]), s = ro(s, r[1]), a = io(a, r[1]);
    e[0] = i, e[1] = s, t[0] = o, t[1] = a;
  }
}
function J4(n, e, t, r, i, o) {
  i[0] = ro(n, t), i[1] = ro(e, r), o[0] = io(n, t), o[1] = io(e, r);
}
var ez = [], tz = [];
function G1t(n, e, t, r, i, o, s, a, l, u) {
  var c = qU, h = Sr, f = c(n, t, i, s, ez);
  l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0;
  for (var d = 0; d < f; d++) {
    var p = h(n, t, i, s, ez[d]);
    l[0] = ro(p, l[0]), u[0] = io(p, u[0]);
  }
  f = c(e, r, o, a, tz);
  for (var d = 0; d < f; d++) {
    var g = h(e, r, o, a, tz[d]);
    l[1] = ro(g, l[1]), u[1] = io(g, u[1]);
  }
  l[0] = ro(n, l[0]), u[0] = io(n, u[0]), l[0] = ro(s, l[0]), u[0] = io(s, u[0]), l[1] = ro(e, l[1]), u[1] = io(e, u[1]), l[1] = ro(a, l[1]), u[1] = io(a, u[1]);
}
function j1t(n, e, t, r, i, o, s, a) {
  var l = XU, u = $r, c = io(ro(l(n, t, i), 1), 0), h = io(ro(l(e, r, o), 1), 0), f = u(n, t, i, c), d = u(e, r, o, h);
  s[0] = ro(n, i, f), s[1] = ro(e, o, d), a[0] = io(n, i, f), a[1] = io(e, o, d);
}
function H1t(n, e, t, r, i, o, s, a, l) {
  var u = oc, c = sc, h = Math.abs(i - o);
  if (h % yh < 1e-4 && h > 1e-4) {
    a[0] = n - t, a[1] = e - r, l[0] = n + t, l[1] = e + r;
    return;
  }
  if (G1[0] = OA(i) * t + n, G1[1] = bA(i) * r + e, j1[0] = OA(o) * t + n, j1[1] = bA(o) * r + e, u(a, G1, j1), c(l, G1, j1), i = i % yh, i < 0 && (i = i + yh), o = o % yh, o < 0 && (o = o + yh), i > o && !s ? o += yh : i < o && s && (i += yh), s) {
    var f = o;
    o = i, i = f;
  }
  for (var d = 0; d < o; d += Math.PI / 2)
    d > i && (H1[0] = OA(d) * t + n, H1[1] = bA(d) * r + e, u(a, H1, a), c(l, H1, l));
}
var nn = {
  M: 1,
  L: 2,
  C: 3,
  Q: 4,
  A: 5,
  Z: 6,
  R: 7
}, bh = [], Oh = [], _a = [], Su = [], Ca = [], Aa = [], wA = Math.min, xA = Math.max, wh = Math.cos, xh = Math.sin, Tl = Math.abs, tM = Math.PI, Bu = tM * 2, SA = typeof Float32Array < "u", Gv = [];
function _A(n) {
  var e = Math.round(n / tM * 1e8) / 1e8;
  return e % 2 * tM;
}
function jI(n, e) {
  var t = _A(n[0]);
  t < 0 && (t += Bu);
  var r = t - n[0], i = n[1];
  i += r, !e && i - t >= Bu ? i = t + Bu : e && t - i >= Bu ? i = t - Bu : !e && t > i ? i = t + (Bu - _A(t - i)) : e && t < i && (i = t - (Bu - _A(i - t))), n[0] = t, n[1] = i;
}
var vl = function() {
  function n(e) {
    this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, e && (this._saveData = !1), this._saveData && (this.data = []);
  }
  return n.prototype.increaseVersion = function() {
    this._version++;
  }, n.prototype.getVersion = function() {
    return this._version;
  }, n.prototype.setScale = function(e, t, r) {
    r = r || 0, r > 0 && (this._ux = Tl(r / Wx / e) || 0, this._uy = Tl(r / Wx / t) || 0);
  }, n.prototype.setDPR = function(e) {
    this.dpr = e;
  }, n.prototype.setContext = function(e) {
    this._ctx = e;
  }, n.prototype.getContext = function() {
    return this._ctx;
  }, n.prototype.beginPath = function() {
    return this._ctx && this._ctx.beginPath(), this.reset(), this;
  }, n.prototype.reset = function() {
    this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
  }, n.prototype.moveTo = function(e, t) {
    return this._drawPendingPt(), this.addData(nn.M, e, t), this._ctx && this._ctx.moveTo(e, t), this._x0 = e, this._y0 = t, this._xi = e, this._yi = t, this;
  }, n.prototype.lineTo = function(e, t) {
    var r = Tl(e - this._xi), i = Tl(t - this._yi), o = r > this._ux || i > this._uy;
    if (this.addData(nn.L, e, t), this._ctx && o && this._ctx.lineTo(e, t), o)
      this._xi = e, this._yi = t, this._pendingPtDist = 0;
    else {
      var s = r * r + i * i;
      s > this._pendingPtDist && (this._pendingPtX = e, this._pendingPtY = t, this._pendingPtDist = s);
    }
    return this;
  }, n.prototype.bezierCurveTo = function(e, t, r, i, o, s) {
    return this._drawPendingPt(), this.addData(nn.C, e, t, r, i, o, s), this._ctx && this._ctx.bezierCurveTo(e, t, r, i, o, s), this._xi = o, this._yi = s, this;
  }, n.prototype.quadraticCurveTo = function(e, t, r, i) {
    return this._drawPendingPt(), this.addData(nn.Q, e, t, r, i), this._ctx && this._ctx.quadraticCurveTo(e, t, r, i), this._xi = r, this._yi = i, this;
  }, n.prototype.arc = function(e, t, r, i, o, s) {
    this._drawPendingPt(), Gv[0] = i, Gv[1] = o, jI(Gv, s), i = Gv[0], o = Gv[1];
    var a = o - i;
    return this.addData(nn.A, e, t, r, r, i, a, 0, s ? 0 : 1), this._ctx && this._ctx.arc(e, t, r, i, o, s), this._xi = wh(o) * r + e, this._yi = xh(o) * r + t, this;
  }, n.prototype.arcTo = function(e, t, r, i, o) {
    return this._drawPendingPt(), this._ctx && this._ctx.arcTo(e, t, r, i, o), this;
  }, n.prototype.rect = function(e, t, r, i) {
    return this._drawPendingPt(), this._ctx && this._ctx.rect(e, t, r, i), this.addData(nn.R, e, t, r, i), this;
  }, n.prototype.closePath = function() {
    this._drawPendingPt(), this.addData(nn.Z);
    var e = this._ctx, t = this._x0, r = this._y0;
    return e && e.closePath(), this._xi = t, this._yi = r, this;
  }, n.prototype.fill = function(e) {
    e && e.fill(), this.toStatic();
  }, n.prototype.stroke = function(e) {
    e && e.stroke(), this.toStatic();
  }, n.prototype.len = function() {
    return this._len;
  }, n.prototype.setData = function(e) {
    var t = e.length;
    !(this.data && this.data.length === t) && SA && (this.data = new Float32Array(t));
    for (var r = 0; r < t; r++)
      this.data[r] = e[r];
    this._len = t;
  }, n.prototype.appendPath = function(e) {
    e instanceof Array || (e = [e]);
    for (var t = e.length, r = 0, i = this._len, o = 0; o < t; o++)
      r += e[o].len();
    SA && this.data instanceof Float32Array && (this.data = new Float32Array(i + r));
    for (var o = 0; o < t; o++)
      for (var s = e[o].data, a = 0; a < s.length; a++)
        this.data[i++] = s[a];
    this._len = i;
  }, n.prototype.addData = function(e, t, r, i, o, s, a, l, u) {
    if (this._saveData) {
      var c = this.data;
      this._len + arguments.length > c.length && (this._expandData(), c = this.data);
      for (var h = 0; h < arguments.length; h++)
        c[this._len++] = arguments[h];
    }
  }, n.prototype._drawPendingPt = function() {
    this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
  }, n.prototype._expandData = function() {
    if (!(this.data instanceof Array)) {
      for (var e = [], t = 0; t < this._len; t++)
        e[t] = this.data[t];
      this.data = e;
    }
  }, n.prototype.toStatic = function() {
    if (this._saveData) {
      this._drawPendingPt();
      var e = this.data;
      e instanceof Array && (e.length = this._len, SA && this._len > 11 && (this.data = new Float32Array(e)));
    }
  }, n.prototype.getBoundingRect = function() {
    _a[0] = _a[1] = Ca[0] = Ca[1] = Number.MAX_VALUE, Su[0] = Su[1] = Aa[0] = Aa[1] = -Number.MAX_VALUE;
    var e = this.data, t = 0, r = 0, i = 0, o = 0, s;
    for (s = 0; s < this._len; ) {
      var a = e[s++], l = s === 1;
      switch (l && (t = e[s], r = e[s + 1], i = t, o = r), a) {
        case nn.M:
          t = i = e[s++], r = o = e[s++], Ca[0] = i, Ca[1] = o, Aa[0] = i, Aa[1] = o;
          break;
        case nn.L:
          J4(t, r, e[s], e[s + 1], Ca, Aa), t = e[s++], r = e[s++];
          break;
        case nn.C:
          G1t(t, r, e[s++], e[s++], e[s++], e[s++], e[s], e[s + 1], Ca, Aa), t = e[s++], r = e[s++];
          break;
        case nn.Q:
          j1t(t, r, e[s++], e[s++], e[s], e[s + 1], Ca, Aa), t = e[s++], r = e[s++];
          break;
        case nn.A:
          var u = e[s++], c = e[s++], h = e[s++], f = e[s++], d = e[s++], p = e[s++] + d;
          s += 1;
          var g = !e[s++];
          l && (i = wh(d) * h + u, o = xh(d) * f + c), H1t(u, c, h, f, d, p, g, Ca, Aa), t = wh(p) * h + u, r = xh(p) * f + c;
          break;
        case nn.R:
          i = t = e[s++], o = r = e[s++];
          var v = e[s++], m = e[s++];
          J4(i, o, i + v, o + m, Ca, Aa);
          break;
        case nn.Z:
          t = i, r = o;
          break;
      }
      oc(_a, _a, Ca), sc(Su, Su, Aa);
    }
    return s === 0 && (_a[0] = _a[1] = Su[0] = Su[1] = 0), new et(_a[0], _a[1], Su[0] - _a[0], Su[1] - _a[1]);
  }, n.prototype._calculateLength = function() {
    var e = this.data, t = this._len, r = this._ux, i = this._uy, o = 0, s = 0, a = 0, l = 0;
    this._pathSegLen || (this._pathSegLen = []);
    for (var u = this._pathSegLen, c = 0, h = 0, f = 0; f < t; ) {
      var d = e[f++], p = f === 1;
      p && (o = e[f], s = e[f + 1], a = o, l = s);
      var g = -1;
      switch (d) {
        case nn.M:
          o = a = e[f++], s = l = e[f++];
          break;
        case nn.L: {
          var v = e[f++], m = e[f++], y = v - o, b = m - s;
          (Tl(y) > r || Tl(b) > i || f === t - 1) && (g = Math.sqrt(y * y + b * b), o = v, s = m);
          break;
        }
        case nn.C: {
          var O = e[f++], w = e[f++], v = e[f++], m = e[f++], x = e[f++], S = e[f++];
          g = ubt(o, s, O, w, v, m, x, S, 10), o = x, s = S;
          break;
        }
        case nn.Q: {
          var O = e[f++], w = e[f++], v = e[f++], m = e[f++];
          g = hbt(o, s, O, w, v, m, 10), o = v, s = m;
          break;
        }
        case nn.A:
          var _ = e[f++], C = e[f++], A = e[f++], T = e[f++], k = e[f++], L = e[f++], D = L + k;
          f += 1, p && (a = wh(k) * A + _, l = xh(k) * T + C), g = xA(A, T) * wA(Bu, Math.abs(L)), o = wh(D) * A + _, s = xh(D) * T + C;
          break;
        case nn.R: {
          a = o = e[f++], l = s = e[f++];
          var E = e[f++], M = e[f++];
          g = E * 2 + M * 2;
          break;
        }
        case nn.Z: {
          var y = a - o, b = l - s;
          g = Math.sqrt(y * y + b * b), o = a, s = l;
          break;
        }
      }
      g >= 0 && (u[h++] = g, c += g);
    }
    return this._pathLen = c, c;
  }, n.prototype.rebuildPath = function(e, t) {
    var r = this.data, i = this._ux, o = this._uy, s = this._len, a, l, u, c, h, f, d = t < 1, p, g, v = 0, m = 0, y, b = 0, O, w;
    if (!(d && (this._pathSegLen || this._calculateLength(), p = this._pathSegLen, g = this._pathLen, y = t * g, !y)))
      e:
        for (var x = 0; x < s; ) {
          var S = r[x++], _ = x === 1;
          switch (_ && (u = r[x], c = r[x + 1], a = u, l = c), S !== nn.L && b > 0 && (e.lineTo(O, w), b = 0), S) {
            case nn.M:
              a = u = r[x++], l = c = r[x++], e.moveTo(u, c);
              break;
            case nn.L: {
              h = r[x++], f = r[x++];
              var C = Tl(h - u), A = Tl(f - c);
              if (C > i || A > o) {
                if (d) {
                  var T = p[m++];
                  if (v + T > y) {
                    var k = (y - v) / T;
                    e.lineTo(u * (1 - k) + h * k, c * (1 - k) + f * k);
                    break e;
                  }
                  v += T;
                }
                e.lineTo(h, f), u = h, c = f, b = 0;
              } else {
                var L = C * C + A * A;
                L > b && (O = h, w = f, b = L);
              }
              break;
            }
            case nn.C: {
              var D = r[x++], E = r[x++], M = r[x++], R = r[x++], N = r[x++], $ = r[x++];
              if (d) {
                var T = p[m++];
                if (v + T > y) {
                  var k = (y - v) / T;
                  Nc(u, D, M, N, k, bh), Nc(c, E, R, $, k, Oh), e.bezierCurveTo(bh[1], Oh[1], bh[2], Oh[2], bh[3], Oh[3]);
                  break e;
                }
                v += T;
              }
              e.bezierCurveTo(D, E, M, R, N, $), u = N, c = $;
              break;
            }
            case nn.Q: {
              var D = r[x++], E = r[x++], M = r[x++], R = r[x++];
              if (d) {
                var T = p[m++];
                if (v + T > y) {
                  var k = (y - v) / T;
                  g0(u, D, M, k, bh), g0(c, E, R, k, Oh), e.quadraticCurveTo(bh[1], Oh[1], bh[2], Oh[2]);
                  break e;
                }
                v += T;
              }
              e.quadraticCurveTo(D, E, M, R), u = M, c = R;
              break;
            }
            case nn.A:
              var V = r[x++], H = r[x++], G = r[x++], q = r[x++], Y = r[x++], ie = r[x++], se = r[x++], K = !r[x++], re = G > q ? G : q, ge = Tl(G - q) > 1e-3, ne = Y + ie, ue = !1;
              if (d) {
                var T = p[m++];
                v + T > y && (ne = Y + ie * (y - v) / T, ue = !0), v += T;
              }
              if (ge && e.ellipse ? e.ellipse(V, H, G, q, se, Y, ne, K) : e.arc(V, H, re, Y, ne, K), ue)
                break e;
              _ && (a = wh(Y) * G + V, l = xh(Y) * q + H), u = wh(ne) * G + V, c = xh(ne) * q + H;
              break;
            case nn.R:
              a = u = r[x], l = c = r[x + 1], h = r[x++], f = r[x++];
              var xe = r[x++], gt = r[x++];
              if (d) {
                var T = p[m++];
                if (v + T > y) {
                  var He = y - v;
                  e.moveTo(h, f), e.lineTo(h + wA(He, xe), f), He -= xe, He > 0 && e.lineTo(h + xe, f + wA(He, gt)), He -= gt, He > 0 && e.lineTo(h + xA(xe - He, 0), f + gt), He -= xe, He > 0 && e.lineTo(h, f + xA(gt - He, 0));
                  break e;
                }
                v += T;
              }
              e.rect(h, f, xe, gt);
              break;
            case nn.Z:
              if (d) {
                var T = p[m++];
                if (v + T > y) {
                  var k = (y - v) / T;
                  e.lineTo(u * (1 - k) + a * k, c * (1 - k) + l * k);
                  break e;
                }
                v += T;
              }
              e.closePath(), u = a, c = l;
          }
        }
  }, n.prototype.clone = function() {
    var e = new n(), t = this.data;
    return e.data = t.slice ? t.slice() : Array.prototype.slice.call(t), e._len = this._len, e;
  }, n.CMD = nn, n.initDefaultProps = function() {
    var e = n.prototype;
    e._saveData = !0, e._ux = 0, e._uy = 0, e._pendingPtDist = 0, e._version = 0;
  }(), n;
}();
function Gu(n, e, t, r, i, o, s) {
  if (i === 0)
    return !1;
  var a = i, l = 0, u = n;
  if (s > e + a && s > r + a || s < e - a && s < r - a || o > n + a && o > t + a || o < n - a && o < t - a)
    return !1;
  if (n !== t)
    l = (e - r) / (n - t), u = (n * r - t * e) / (n - t);
  else
    return Math.abs(o - n) <= a / 2;
  var c = l * o - s + u, h = c * c / (l * l + 1);
  return h <= a / 2 * a / 2;
}
function q1t(n, e, t, r, i, o, s, a, l, u, c) {
  if (l === 0)
    return !1;
  var h = l;
  if (c > e + h && c > r + h && c > o + h && c > a + h || c < e - h && c < r - h && c < o - h && c < a - h || u > n + h && u > t + h && u > i + h && u > s + h || u < n - h && u < t - h && u < i - h && u < s - h)
    return !1;
  var f = YU(n, e, t, r, i, o, s, a, u, c, null);
  return f <= h / 2;
}
function kK(n, e, t, r, i, o, s, a, l) {
  if (s === 0)
    return !1;
  var u = s;
  if (l > e + u && l > r + u && l > o + u || l < e - u && l < r - u && l < o - u || a > n + u && a > t + u && a > i + u || a < n - u && a < t - u && a < i - u)
    return !1;
  var c = UU(n, e, t, r, i, o, a, l, null);
  return c <= u / 2;
}
var nz = Math.PI * 2;
function $o(n) {
  return n %= nz, n < 0 && (n += nz), n;
}
var jv = Math.PI * 2;
function Y1t(n, e, t, r, i, o, s, a, l) {
  if (s === 0)
    return !1;
  var u = s;
  a -= n, l -= e;
  var c = Math.sqrt(a * a + l * l);
  if (c - u > t || c + u < t)
    return !1;
  if (Math.abs(r - i) % jv < 1e-4)
    return !0;
  if (o) {
    var h = r;
    r = $o(i), i = $o(h);
  } else
    r = $o(r), i = $o(i);
  r > i && (i += jv);
  var f = Math.atan2(l, a);
  return f < 0 && (f += jv), f >= r && f <= i || f + jv >= r && f + jv <= i;
}
function Dl(n, e, t, r, i, o) {
  if (o > e && o > r || o < e && o < r || r === e)
    return 0;
  var s = (o - e) / (r - e), a = r < e ? 1 : -1;
  (s === 1 || s === 0) && (a = r < e ? 0.5 : -0.5);
  var l = s * (t - n) + n;
  return l === i ? 1 / 0 : l > i ? a : 0;
}
var _u = vl.CMD, Sh = Math.PI * 2, X1t = 1e-4;
function U1t(n, e) {
  return Math.abs(n - e) < X1t;
}
var Li = [-1, -1, -1], ts = [-1, -1];
function K1t() {
  var n = ts[0];
  ts[0] = ts[1], ts[1] = n;
}
function J1t(n, e, t, r, i, o, s, a, l, u) {
  if (u > e && u > r && u > o && u > a || u < e && u < r && u < o && u < a)
    return 0;
  var c = zx(e, r, o, a, u, Li);
  if (c === 0)
    return 0;
  for (var h = 0, f = -1, d = void 0, p = void 0, g = 0; g < c; g++) {
    var v = Li[g], m = v === 0 || v === 1 ? 0.5 : 1, y = Sr(n, t, i, s, v);
    y < l || (f < 0 && (f = qU(e, r, o, a, ts), ts[1] < ts[0] && f > 1 && K1t(), d = Sr(e, r, o, a, ts[0]), f > 1 && (p = Sr(e, r, o, a, ts[1]))), f === 2 ? v < ts[0] ? h += d < e ? m : -m : v < ts[1] ? h += p < d ? m : -m : h += a < p ? m : -m : v < ts[0] ? h += d < e ? m : -m : h += a < d ? m : -m);
  }
  return h;
}
function eOt(n, e, t, r, i, o, s, a) {
  if (a > e && a > r && a > o || a < e && a < r && a < o)
    return 0;
  var l = cbt(e, r, o, a, Li);
  if (l === 0)
    return 0;
  var u = XU(e, r, o);
  if (u >= 0 && u <= 1) {
    for (var c = 0, h = $r(e, r, o, u), f = 0; f < l; f++) {
      var d = Li[f] === 0 || Li[f] === 1 ? 0.5 : 1, p = $r(n, t, i, Li[f]);
      p < s || (Li[f] < u ? c += h < e ? d : -d : c += o < h ? d : -d);
    }
    return c;
  } else {
    var d = Li[0] === 0 || Li[0] === 1 ? 0.5 : 1, p = $r(n, t, i, Li[0]);
    return p < s ? 0 : o < e ? d : -d;
  }
}
function tOt(n, e, t, r, i, o, s, a) {
  if (a -= e, a > t || a < -t)
    return 0;
  var l = Math.sqrt(t * t - a * a);
  Li[0] = -l, Li[1] = l;
  var u = Math.abs(r - i);
  if (u < 1e-4)
    return 0;
  if (u >= Sh - 1e-4) {
    r = 0, i = Sh;
    var c = o ? 1 : -1;
    return s >= Li[0] + n && s <= Li[1] + n ? c : 0;
  }
  if (r > i) {
    var h = r;
    r = i, i = h;
  }
  r < 0 && (r += Sh, i += Sh);
  for (var f = 0, d = 0; d < 2; d++) {
    var p = Li[d];
    if (p + n > s) {
      var g = Math.atan2(a, p), c = o ? 1 : -1;
      g < 0 && (g = Sh + g), (g >= r && g <= i || g + Sh >= r && g + Sh <= i) && (g > Math.PI / 2 && g < Math.PI * 1.5 && (c = -c), f += c);
    }
  }
  return f;
}
function MK(n, e, t, r, i) {
  for (var o = n.data, s = n.len(), a = 0, l = 0, u = 0, c = 0, h = 0, f, d, p = 0; p < s; ) {
    var g = o[p++], v = p === 1;
    switch (g === _u.M && p > 1 && (t || (a += Dl(l, u, c, h, r, i))), v && (l = o[p], u = o[p + 1], c = l, h = u), g) {
      case _u.M:
        c = o[p++], h = o[p++], l = c, u = h;
        break;
      case _u.L:
        if (t) {
          if (Gu(l, u, o[p], o[p + 1], e, r, i))
            return !0;
        } else
          a += Dl(l, u, o[p], o[p + 1], r, i) || 0;
        l = o[p++], u = o[p++];
        break;
      case _u.C:
        if (t) {
          if (q1t(l, u, o[p++], o[p++], o[p++], o[p++], o[p], o[p + 1], e, r, i))
            return !0;
        } else
          a += J1t(l, u, o[p++], o[p++], o[p++], o[p++], o[p], o[p + 1], r, i) || 0;
        l = o[p++], u = o[p++];
        break;
      case _u.Q:
        if (t) {
          if (kK(l, u, o[p++], o[p++], o[p], o[p + 1], e, r, i))
            return !0;
        } else
          a += eOt(l, u, o[p++], o[p++], o[p], o[p + 1], r, i) || 0;
        l = o[p++], u = o[p++];
        break;
      case _u.A:
        var m = o[p++], y = o[p++], b = o[p++], O = o[p++], w = o[p++], x = o[p++];
        p += 1;
        var S = !!(1 - o[p++]);
        f = Math.cos(w) * b + m, d = Math.sin(w) * O + y, v ? (c = f, h = d) : a += Dl(l, u, f, d, r, i);
        var _ = (r - m) * O / b + m;
        if (t) {
          if (Y1t(m, y, O, w, w + x, S, e, _, i))
            return !0;
        } else
          a += tOt(m, y, O, w, w + x, S, _, i);
        l = Math.cos(w + x) * b + m, u = Math.sin(w + x) * O + y;
        break;
      case _u.R:
        c = l = o[p++], h = u = o[p++];
        var C = o[p++], A = o[p++];
        if (f = c + C, d = h + A, t) {
          if (Gu(c, h, f, h, e, r, i) || Gu(f, h, f, d, e, r, i) || Gu(f, d, c, d, e, r, i) || Gu(c, d, c, h, e, r, i))
            return !0;
        } else
          a += Dl(f, h, f, d, r, i), a += Dl(c, d, c, h, r, i);
        break;
      case _u.Z:
        if (t) {
          if (Gu(l, u, c, h, e, r, i))
            return !0;
        } else
          a += Dl(l, u, c, h, r, i);
        l = c, u = h;
        break;
    }
  }
  return !t && !U1t(u, h) && (a += Dl(l, u, c, h, r, i) || 0), a !== 0;
}
function nOt(n, e, t) {
  return MK(n, 0, !1, e, t);
}
function rOt(n, e, t, r) {
  return MK(n, e, !0, t, r);
}
var jx = Le({
  fill: "#000",
  stroke: null,
  strokePercent: 1,
  fillOpacity: 1,
  strokeOpacity: 1,
  lineDashOffset: 0,
  lineWidth: 1,
  lineCap: "butt",
  miterLimit: 10,
  strokeNoScale: !1,
  strokeFirst: !1
}, kf), iOt = {
  style: Le({
    fill: !0,
    stroke: !0,
    strokePercent: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineDashOffset: !0,
    lineWidth: !0,
    miterLimit: !0
  }, J_.style)
}, CA = pl.concat([
  "invisible",
  "culling",
  "z",
  "z2",
  "zlevel",
  "parent"
]), oOt = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.update = function() {
    var t = this;
    n.prototype.update.call(this);
    var r = this.style;
    if (r.decal) {
      var i = this._decalEl = this._decalEl || new e();
      i.buildPath === e.prototype.buildPath && (i.buildPath = function(l) {
        t.buildPath(l, t.shape);
      }), i.silent = !0;
      var o = i.style;
      for (var s in r)
        o[s] !== r[s] && (o[s] = r[s]);
      o.fill = r.fill ? r.decal : null, o.decal = null, o.shadowColor = null, r.strokeFirst && (o.stroke = null);
      for (var a = 0; a < CA.length; ++a)
        i[CA[a]] = this[CA[a]];
      i.__dirty |= Do;
    } else
      this._decalEl && (this._decalEl = null);
  }, e.prototype.getDecalElement = function() {
    return this._decalEl;
  }, e.prototype._init = function(t) {
    var r = ft(t);
    this.shape = this.getDefaultShape();
    var i = this.getDefaultStyle();
    i && this.useStyle(i);
    for (var o = 0; o < r.length; o++) {
      var s = r[o], a = t[s];
      s === "style" ? this.style ? te(this.style, a) : this.useStyle(a) : s === "shape" ? te(this.shape, a) : n.prototype.attrKV.call(this, s, a);
    }
    this.style || this.useStyle({});
  }, e.prototype.getDefaultStyle = function() {
    return null;
  }, e.prototype.getDefaultShape = function() {
    return {};
  }, e.prototype.canBeInsideText = function() {
    return this.hasFill();
  }, e.prototype.getInsideTextFill = function() {
    var t = this.style.fill;
    if (t !== "none") {
      if (be(t)) {
        var r = Qx(t, 0);
        return r > 0.5 ? qk : r > 0.2 ? zbt : Yk;
      } else if (t)
        return Yk;
    }
    return qk;
  }, e.prototype.getInsideTextStroke = function(t) {
    var r = this.style.fill;
    if (be(r)) {
      var i = this.__zr, o = !!(i && i.isDarkMode()), s = Qx(t, 0) < Hk;
      if (o === s)
        return r;
    }
  }, e.prototype.buildPath = function(t, r, i) {
  }, e.prototype.pathUpdated = function() {
    this.__dirty &= ~up;
  }, e.prototype.getUpdatedPathProxy = function(t) {
    return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, t), this.path;
  }, e.prototype.createPathProxy = function() {
    this.path = new vl(!1);
  }, e.prototype.hasStroke = function() {
    var t = this.style, r = t.stroke;
    return !(r == null || r === "none" || !(t.lineWidth > 0));
  }, e.prototype.hasFill = function() {
    var t = this.style, r = t.fill;
    return r != null && r !== "none";
  }, e.prototype.getBoundingRect = function() {
    var t = this._rect, r = this.style, i = !t;
    if (i) {
      var o = !1;
      this.path || (o = !0, this.createPathProxy());
      var s = this.path;
      (o || this.__dirty & up) && (s.beginPath(), this.buildPath(s, this.shape, !1), this.pathUpdated()), t = s.getBoundingRect();
    }
    if (this._rect = t, this.hasStroke() && this.path && this.path.len() > 0) {
      var a = this._rectStroke || (this._rectStroke = t.clone());
      if (this.__dirty || i) {
        a.copy(t);
        var l = r.strokeNoScale ? this.getLineScale() : 1, u = r.lineWidth;
        if (!this.hasFill()) {
          var c = this.strokeContainThreshold;
          u = Math.max(u, c ?? 4);
        }
        l > 1e-10 && (a.width += u / l, a.height += u / l, a.x -= u / l / 2, a.y -= u / l / 2);
      }
      return a;
    }
    return t;
  }, e.prototype.contain = function(t, r) {
    var i = this.transformCoordToLocal(t, r), o = this.getBoundingRect(), s = this.style;
    if (t = i[0], r = i[1], o.contain(t, r)) {
      var a = this.path;
      if (this.hasStroke()) {
        var l = s.lineWidth, u = s.strokeNoScale ? this.getLineScale() : 1;
        if (u > 1e-10 && (this.hasFill() || (l = Math.max(l, this.strokeContainThreshold)), rOt(a, l / u, t, r)))
          return !0;
      }
      if (this.hasFill())
        return nOt(a, t, r);
    }
    return !1;
  }, e.prototype.dirtyShape = function() {
    this.__dirty |= up, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
  }, e.prototype.dirty = function() {
    this.dirtyStyle(), this.dirtyShape();
  }, e.prototype.animateShape = function(t) {
    return this.animate("shape", t);
  }, e.prototype.updateDuringAnimation = function(t) {
    t === "style" ? this.dirtyStyle() : t === "shape" ? this.dirtyShape() : this.markRedraw();
  }, e.prototype.attrKV = function(t, r) {
    t === "shape" ? this.setShape(r) : n.prototype.attrKV.call(this, t, r);
  }, e.prototype.setShape = function(t, r) {
    var i = this.shape;
    return i || (i = this.shape = {}), typeof t == "string" ? i[t] = r : te(i, t), this.dirtyShape(), this;
  }, e.prototype.shapeChanged = function() {
    return !!(this.__dirty & up);
  }, e.prototype.createStyle = function(t) {
    return G_(jx, t);
  }, e.prototype._innerSaveToNormal = function(t) {
    n.prototype._innerSaveToNormal.call(this, t);
    var r = this._normalState;
    t.shape && !r.shape && (r.shape = te({}, this.shape));
  }, e.prototype._applyStateObj = function(t, r, i, o, s, a) {
    n.prototype._applyStateObj.call(this, t, r, i, o, s, a);
    var l = !(r && o), u;
    if (r && r.shape ? s ? o ? u = r.shape : (u = te({}, i.shape), te(u, r.shape)) : (u = te({}, o ? this.shape : i.shape), te(u, r.shape)) : l && (u = i.shape), u)
      if (s) {
        this.shape = te({}, this.shape);
        for (var c = {}, h = ft(u), f = 0; f < h.length; f++) {
          var d = h[f];
          typeof u[d] == "object" ? this.shape[d] = u[d] : c[d] = u[d];
        }
        this._transitionState(t, {
          shape: c
        }, a);
      } else
        this.shape = u, this.dirtyShape();
  }, e.prototype._mergeStates = function(t) {
    for (var r = n.prototype._mergeStates.call(this, t), i, o = 0; o < t.length; o++) {
      var s = t[o];
      s.shape && (i = i || {}, this._mergeStyle(i, s.shape));
    }
    return i && (r.shape = i), r;
  }, e.prototype.getAnimationStyleProps = function() {
    return iOt;
  }, e.prototype.isZeroArea = function() {
    return !1;
  }, e.extend = function(t) {
    var r = function(o) {
      j(s, o);
      function s(a) {
        var l = o.call(this, a) || this;
        return t.init && t.init.call(l, a), l;
      }
      return s.prototype.getDefaultStyle = function() {
        return Re(t.style);
      }, s.prototype.getDefaultShape = function() {
        return Re(t.shape);
      }, s;
    }(e);
    for (var i in t)
      typeof t[i] == "function" && (r.prototype[i] = t[i]);
    return r;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.type = "path", t.strokeContainThreshold = 5, t.segmentIgnoreThreshold = 0, t.subPixelOptimize = !1, t.autoBatch = !1, t.__dirty = Do | Tm | up;
  }(), e;
}(As);
const ct = oOt;
var sOt = Le({
  strokeFirst: !0,
  font: Rc,
  x: 0,
  y: 0,
  textAlign: "left",
  textBaseline: "top",
  miterLimit: 2
}, jx), DK = function(n) {
  j(e, n);
  function e() {
    return n !== null && n.apply(this, arguments) || this;
  }
  return e.prototype.hasStroke = function() {
    var t = this.style, r = t.stroke;
    return r != null && r !== "none" && t.lineWidth > 0;
  }, e.prototype.hasFill = function() {
    var t = this.style, r = t.fill;
    return r != null && r !== "none";
  }, e.prototype.createStyle = function(t) {
    return G_(sOt, t);
  }, e.prototype.setBoundingRect = function(t) {
    this._rect = t;
  }, e.prototype.getBoundingRect = function() {
    var t = this.style;
    if (!this._rect) {
      var r = t.text;
      r != null ? r += "" : r = "";
      var i = wb(r, t.font, t.textAlign, t.textBaseline);
      if (i.x += t.x || 0, i.y += t.y || 0, this.hasStroke()) {
        var o = t.lineWidth;
        i.x -= o / 2, i.y -= o / 2, i.width += o, i.height += o;
      }
      this._rect = i;
    }
    return this._rect;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.dirtyRectTolerance = 10;
  }(), e;
}(As);
DK.prototype.type = "tspan";
const b0 = DK;
var aOt = Le({
  x: 0,
  y: 0
}, kf), lOt = {
  style: Le({
    x: !0,
    y: !0,
    width: !0,
    height: !0,
    sx: !0,
    sy: !0,
    sWidth: !0,
    sHeight: !0
  }, J_.style)
};
function uOt(n) {
  return !!(n && typeof n != "string" && n.width && n.height);
}
var LK = function(n) {
  j(e, n);
  function e() {
    return n !== null && n.apply(this, arguments) || this;
  }
  return e.prototype.createStyle = function(t) {
    return G_(aOt, t);
  }, e.prototype._getSize = function(t) {
    var r = this.style, i = r[t];
    if (i != null)
      return i;
    var o = uOt(r.image) ? r.image : this.__image;
    if (!o)
      return 0;
    var s = t === "width" ? "height" : "width", a = r[s];
    return a == null ? o[t] : o[t] / o[s] * a;
  }, e.prototype.getWidth = function() {
    return this._getSize("width");
  }, e.prototype.getHeight = function() {
    return this._getSize("height");
  }, e.prototype.getAnimationStyleProps = function() {
    return lOt;
  }, e.prototype.getBoundingRect = function() {
    var t = this.style;
    return this._rect || (this._rect = new et(t.x || 0, t.y || 0, this.getWidth(), this.getHeight())), this._rect;
  }, e;
}(As);
LK.prototype.type = "image";
const fi = LK;
function cOt(n, e) {
  var t = e.x, r = e.y, i = e.width, o = e.height, s = e.r, a, l, u, c;
  i < 0 && (t = t + i, i = -i), o < 0 && (r = r + o, o = -o), typeof s == "number" ? a = l = u = c = s : s instanceof Array ? s.length === 1 ? a = l = u = c = s[0] : s.length === 2 ? (a = u = s[0], l = c = s[1]) : s.length === 3 ? (a = s[0], l = c = s[1], u = s[2]) : (a = s[0], l = s[1], u = s[2], c = s[3]) : a = l = u = c = 0;
  var h;
  a + l > i && (h = a + l, a *= i / h, l *= i / h), u + c > i && (h = u + c, u *= i / h, c *= i / h), l + u > o && (h = l + u, l *= o / h, u *= o / h), a + c > o && (h = a + c, a *= o / h, c *= o / h), n.moveTo(t + a, r), n.lineTo(t + i - l, r), l !== 0 && n.arc(t + i - l, r + l, l, -Math.PI / 2, 0), n.lineTo(t + i, r + o - u), u !== 0 && n.arc(t + i - u, r + o - u, u, 0, Math.PI / 2), n.lineTo(t + c, r + o), c !== 0 && n.arc(t + c, r + o - c, c, Math.PI / 2, Math.PI), n.lineTo(t, r + a), a !== 0 && n.arc(t + a, r + a, a, Math.PI, Math.PI * 1.5);
}
var yp = Math.round;
function IK(n, e, t) {
  if (e) {
    var r = e.x1, i = e.x2, o = e.y1, s = e.y2;
    n.x1 = r, n.x2 = i, n.y1 = o, n.y2 = s;
    var a = t && t.lineWidth;
    return a && (yp(r * 2) === yp(i * 2) && (n.x1 = n.x2 = cf(r, a, !0)), yp(o * 2) === yp(s * 2) && (n.y1 = n.y2 = cf(o, a, !0))), n;
  }
}
function RK(n, e, t) {
  if (e) {
    var r = e.x, i = e.y, o = e.width, s = e.height;
    n.x = r, n.y = i, n.width = o, n.height = s;
    var a = t && t.lineWidth;
    return a && (n.x = cf(r, a, !0), n.y = cf(i, a, !0), n.width = Math.max(cf(r + o, a, !1) - n.x, o === 0 ? 0 : 1), n.height = Math.max(cf(i + s, a, !1) - n.y, s === 0 ? 0 : 1)), n;
  }
}
function cf(n, e, t) {
  if (!e)
    return n;
  var r = yp(n * 2);
  return (r + yp(e)) % 2 === 0 ? r / 2 : (r + (t ? 1 : -1)) / 2;
}
var hOt = /* @__PURE__ */ function() {
  function n() {
    this.x = 0, this.y = 0, this.width = 0, this.height = 0;
  }
  return n;
}(), fOt = {}, $K = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new hOt();
  }, e.prototype.buildPath = function(t, r) {
    var i, o, s, a;
    if (this.subPixelOptimize) {
      var l = RK(fOt, r, this.style);
      i = l.x, o = l.y, s = l.width, a = l.height, l.r = r.r, r = l;
    } else
      i = r.x, o = r.y, s = r.width, a = r.height;
    r.r ? cOt(t, r) : t.rect(i, o, s, a);
  }, e.prototype.isZeroArea = function() {
    return !this.shape.width || !this.shape.height;
  }, e;
}(ct);
$K.prototype.type = "rect";
const _t = $K;
var rz = {
  fill: "#000"
}, iz = 2, dOt = {
  style: Le({
    fill: !0,
    stroke: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineWidth: !0,
    fontSize: !0,
    lineHeight: !0,
    width: !0,
    height: !0,
    textShadowColor: !0,
    textShadowBlur: !0,
    textShadowOffsetX: !0,
    textShadowOffsetY: !0,
    backgroundColor: !0,
    padding: !0,
    borderColor: !0,
    borderWidth: !0,
    borderRadius: !0
  }, J_.style)
}, NK = function(n) {
  j(e, n);
  function e(t) {
    var r = n.call(this) || this;
    return r.type = "text", r._children = [], r._defaultStyle = rz, r.attr(t), r;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.update = function() {
    n.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
    for (var t = 0; t < this._children.length; t++) {
      var r = this._children[t];
      r.zlevel = this.zlevel, r.z = this.z, r.z2 = this.z2, r.culling = this.culling, r.cursor = this.cursor, r.invisible = this.invisible;
    }
  }, e.prototype.updateTransform = function() {
    var t = this.innerTransformable;
    t ? (t.updateTransform(), t.transform && (this.transform = t.transform)) : n.prototype.updateTransform.call(this);
  }, e.prototype.getLocalTransform = function(t) {
    var r = this.innerTransformable;
    return r ? r.getLocalTransform(t) : n.prototype.getLocalTransform.call(this, t);
  }, e.prototype.getComputedTransform = function() {
    return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), n.prototype.getComputedTransform.call(this);
  }, e.prototype._updateSubTexts = function() {
    this._childCursor = 0, vOt(this.style), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
  }, e.prototype.addSelfToZr = function(t) {
    n.prototype.addSelfToZr.call(this, t);
    for (var r = 0; r < this._children.length; r++)
      this._children[r].__zr = t;
  }, e.prototype.removeSelfFromZr = function(t) {
    n.prototype.removeSelfFromZr.call(this, t);
    for (var r = 0; r < this._children.length; r++)
      this._children[r].__zr = null;
  }, e.prototype.getBoundingRect = function() {
    if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
      for (var t = new et(0, 0, 0, 0), r = this._children, i = [], o = null, s = 0; s < r.length; s++) {
        var a = r[s], l = a.getBoundingRect(), u = a.getLocalTransform(i);
        u ? (t.copy(l), t.applyTransform(u), o = o || t.clone(), o.union(t)) : (o = o || l.clone(), o.union(l));
      }
      this._rect = o || t;
    }
    return this._rect;
  }, e.prototype.setDefaultTextStyle = function(t) {
    this._defaultStyle = t || rz;
  }, e.prototype.setTextContent = function(t) {
    if (process.env.NODE_ENV !== "production")
      throw new Error("Can't attach text on another text");
  }, e.prototype._mergeStyle = function(t, r) {
    if (!r)
      return t;
    var i = r.rich, o = t.rich || i && {};
    return te(t, r), i && o ? (this._mergeRich(o, i), t.rich = o) : o && (t.rich = o), t;
  }, e.prototype._mergeRich = function(t, r) {
    for (var i = ft(r), o = 0; o < i.length; o++) {
      var s = i[o];
      t[s] = t[s] || {}, te(t[s], r[s]);
    }
  }, e.prototype.getAnimationStyleProps = function() {
    return dOt;
  }, e.prototype._getOrCreateChild = function(t) {
    var r = this._children[this._childCursor];
    return (!r || !(r instanceof t)) && (r = new t()), this._children[this._childCursor++] = r, r.__zr = this.__zr, r.parent = this, r;
  }, e.prototype._updatePlainTexts = function() {
    var t = this.style, r = t.font || Rc, i = t.padding, o = hz(t), s = $1t(o, t), a = AA(t), l = !!t.backgroundColor, u = s.outerHeight, c = s.outerWidth, h = s.contentWidth, f = s.lines, d = s.lineHeight, p = this._defaultStyle, g = t.x || 0, v = t.y || 0, m = t.align || p.align || "left", y = t.verticalAlign || p.verticalAlign || "top", b = g, O = cp(v, s.contentHeight, y);
    if (a || i) {
      var w = Em(g, c, m), x = cp(v, u, y);
      a && this._renderBackground(t, t, w, x, c, u);
    }
    O += d / 2, i && (b = cz(g, m, i), y === "top" ? O += i[0] : y === "bottom" && (O -= i[2]));
    for (var S = 0, _ = !1, C = uz("fill" in t ? t.fill : (_ = !0, p.fill)), A = lz("stroke" in t ? t.stroke : !l && (!p.autoStroke || _) ? (S = iz, p.stroke) : null), T = t.textShadowBlur > 0, k = t.width != null && (t.overflow === "truncate" || t.overflow === "break" || t.overflow === "breakAll"), L = s.calculatedLineHeight, D = 0; D < f.length; D++) {
      var E = this._getOrCreateChild(b0), M = E.createStyle();
      E.useStyle(M), M.text = f[D], M.x = b, M.y = O, m && (M.textAlign = m), M.textBaseline = "middle", M.opacity = t.opacity, M.strokeFirst = !0, T && (M.shadowBlur = t.textShadowBlur || 0, M.shadowColor = t.textShadowColor || "transparent", M.shadowOffsetX = t.textShadowOffsetX || 0, M.shadowOffsetY = t.textShadowOffsetY || 0), M.stroke = A, M.fill = C, A && (M.lineWidth = t.lineWidth || S, M.lineDash = t.lineDash, M.lineDashOffset = t.lineDashOffset || 0), M.font = r, sz(M, t), O += d, k && E.setBoundingRect(new et(Em(M.x, t.width, M.textAlign), cp(M.y, L, M.textBaseline), h, L));
    }
  }, e.prototype._updateRichTexts = function() {
    var t = this.style, r = hz(t), i = V1t(r, t), o = i.width, s = i.outerWidth, a = i.outerHeight, l = t.padding, u = t.x || 0, c = t.y || 0, h = this._defaultStyle, f = t.align || h.align, d = t.verticalAlign || h.verticalAlign, p = Em(u, s, f), g = cp(c, a, d), v = p, m = g;
    l && (v += l[3], m += l[0]);
    var y = v + o;
    AA(t) && this._renderBackground(t, t, p, g, s, a);
    for (var b = !!t.backgroundColor, O = 0; O < i.lines.length; O++) {
      for (var w = i.lines[O], x = w.tokens, S = x.length, _ = w.lineHeight, C = w.width, A = 0, T = v, k = y, L = S - 1, D = void 0; A < S && (D = x[A], !D.align || D.align === "left"); )
        this._placeToken(D, t, _, m, T, "left", b), C -= D.width, T += D.width, A++;
      for (; L >= 0 && (D = x[L], D.align === "right"); )
        this._placeToken(D, t, _, m, k, "right", b), C -= D.width, k -= D.width, L--;
      for (T += (o - (T - v) - (y - k) - C) / 2; A <= L; )
        D = x[A], this._placeToken(D, t, _, m, T + D.width / 2, "center", b), T += D.width, A++;
      m += _;
    }
  }, e.prototype._placeToken = function(t, r, i, o, s, a, l) {
    var u = r.rich[t.styleName] || {};
    u.text = t.text;
    var c = t.verticalAlign, h = o + i / 2;
    c === "top" ? h = o + t.height / 2 : c === "bottom" && (h = o + i - t.height / 2);
    var f = !t.isLineHolder && AA(u);
    f && this._renderBackground(u, r, a === "right" ? s - t.width : a === "center" ? s - t.width / 2 : s, h - t.height / 2, t.width, t.height);
    var d = !!u.backgroundColor, p = t.textPadding;
    p && (s = cz(s, a, p), h -= t.height / 2 - p[0] - t.innerHeight / 2);
    var g = this._getOrCreateChild(b0), v = g.createStyle();
    g.useStyle(v);
    var m = this._defaultStyle, y = !1, b = 0, O = uz("fill" in u ? u.fill : "fill" in r ? r.fill : (y = !0, m.fill)), w = lz("stroke" in u ? u.stroke : "stroke" in r ? r.stroke : !d && !l && (!m.autoStroke || y) ? (b = iz, m.stroke) : null), x = u.textShadowBlur > 0 || r.textShadowBlur > 0;
    v.text = t.text, v.x = s, v.y = h, x && (v.shadowBlur = u.textShadowBlur || r.textShadowBlur || 0, v.shadowColor = u.textShadowColor || r.textShadowColor || "transparent", v.shadowOffsetX = u.textShadowOffsetX || r.textShadowOffsetX || 0, v.shadowOffsetY = u.textShadowOffsetY || r.textShadowOffsetY || 0), v.textAlign = a, v.textBaseline = "middle", v.font = t.font || Rc, v.opacity = ys(u.opacity, r.opacity, 1), sz(v, u), w && (v.lineWidth = ys(u.lineWidth, r.lineWidth, b), v.lineDash = Qe(u.lineDash, r.lineDash), v.lineDashOffset = r.lineDashOffset || 0, v.stroke = w), O && (v.fill = O);
    var S = t.contentWidth, _ = t.contentHeight;
    g.setBoundingRect(new et(Em(v.x, S, v.textAlign), cp(v.y, _, v.textBaseline), S, _));
  }, e.prototype._renderBackground = function(t, r, i, o, s, a) {
    var l = t.backgroundColor, u = t.borderWidth, c = t.borderColor, h = l && l.image, f = l && !h, d = t.borderRadius, p = this, g, v;
    if (f || t.lineHeight || u && c) {
      g = this._getOrCreateChild(_t), g.useStyle(g.createStyle()), g.style.fill = null;
      var m = g.shape;
      m.x = i, m.y = o, m.width = s, m.height = a, m.r = d, g.dirtyShape();
    }
    if (f) {
      var y = g.style;
      y.fill = l || null, y.fillOpacity = Qe(t.fillOpacity, 1);
    } else if (h) {
      v = this._getOrCreateChild(fi), v.onload = function() {
        p.dirtyStyle();
      };
      var b = v.style;
      b.image = l.image, b.x = i, b.y = o, b.width = s, b.height = a;
    }
    if (u && c) {
      var y = g.style;
      y.lineWidth = u, y.stroke = c, y.strokeOpacity = Qe(t.strokeOpacity, 1), y.lineDash = t.borderDash, y.lineDashOffset = t.borderDashOffset || 0, g.strokeContainThreshold = 0, g.hasFill() && g.hasStroke() && (y.strokeFirst = !0, y.lineWidth *= 2);
    }
    var O = (g || v).style;
    O.shadowBlur = t.shadowBlur || 0, O.shadowColor = t.shadowColor || "transparent", O.shadowOffsetX = t.shadowOffsetX || 0, O.shadowOffsetY = t.shadowOffsetY || 0, O.opacity = ys(t.opacity, r.opacity, 1);
  }, e.makeFont = function(t) {
    var r = "";
    return VK(t) && (r = [
      t.fontStyle,
      t.fontWeight,
      BK(t.fontSize),
      t.fontFamily || "sans-serif"
    ].join(" ")), r && Ys(r) || t.textFont || t.font;
  }, e;
}(As), pOt = { left: !0, right: 1, center: 1 }, gOt = { top: 1, bottom: 1, middle: 1 }, oz = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
function BK(n) {
  return typeof n == "string" && (n.indexOf("px") !== -1 || n.indexOf("rem") !== -1 || n.indexOf("em") !== -1) ? n : isNaN(+n) ? PI + "px" : n + "px";
}
function sz(n, e) {
  for (var t = 0; t < oz.length; t++) {
    var r = oz[t], i = e[r];
    i != null && (n[r] = i);
  }
}
function VK(n) {
  return n.fontSize != null || n.fontFamily || n.fontWeight;
}
function vOt(n) {
  return az(n), I(n.rich, az), n;
}
function az(n) {
  if (n) {
    n.font = NK.makeFont(n);
    var e = n.align;
    e === "middle" && (e = "center"), n.align = e == null || pOt[e] ? e : "left";
    var t = n.verticalAlign;
    t === "center" && (t = "middle"), n.verticalAlign = t == null || gOt[t] ? t : "top";
    var r = n.padding;
    r && (n.padding = LI(n.padding));
  }
}
function lz(n, e) {
  return n == null || e <= 0 || n === "transparent" || n === "none" ? null : n.image || n.colorStops ? "#000" : n;
}
function uz(n) {
  return n == null || n === "none" ? null : n.image || n.colorStops ? "#000" : n;
}
function cz(n, e, t) {
  return e === "right" ? n - t[1] : e === "center" ? n + t[3] / 2 - t[1] / 2 : n + t[3];
}
function hz(n) {
  var e = n.text;
  return e != null && (e += ""), e;
}
function AA(n) {
  return !!(n.backgroundColor || n.lineHeight || n.borderWidth && n.borderColor);
}
const At = NK;
var Fe = Ct(), nM = function(n, e, t, r) {
  if (r) {
    var i = Fe(r);
    i.dataIndex = t, i.dataType = e, i.seriesIndex = n, i.ssrType = "chart", r.type === "group" && r.traverse(function(o) {
      var s = Fe(o);
      s.seriesIndex = n, s.dataIndex = t, s.dataType = e, s.ssrType = "chart";
    });
  }
}, fz = 1, dz = {}, zK = Ct(), HI = Ct(), qI = 0, Sb = 1, tC = 2, Qi = ["emphasis", "blur", "select"], O0 = ["normal", "emphasis", "blur", "select"], dv = 10, mOt = 9, Mf = "highlight", xw = "downplay", vy = "select", Sw = "unselect", my = "toggleSelect";
function zd(n) {
  return n != null && n !== "none";
}
function nC(n, e, t) {
  n.onHoverStateChange && (n.hoverState || 0) !== t && n.onHoverStateChange(e), n.hoverState = t;
}
function FK(n) {
  nC(n, "emphasis", tC);
}
function QK(n) {
  n.hoverState === tC && nC(n, "normal", qI);
}
function YI(n) {
  nC(n, "blur", Sb);
}
function ZK(n) {
  n.hoverState === Sb && nC(n, "normal", qI);
}
function yOt(n) {
  n.selected = !0;
}
function bOt(n) {
  n.selected = !1;
}
function pz(n, e, t) {
  e(n, t);
}
function mu(n, e, t) {
  pz(n, e, t), n.isGroup && n.traverse(function(r) {
    pz(r, e, t);
  });
}
function Hx(n, e) {
  switch (e) {
    case "emphasis":
      n.hoverState = tC;
      break;
    case "normal":
      n.hoverState = qI;
      break;
    case "blur":
      n.hoverState = Sb;
      break;
    case "select":
      n.selected = !0;
  }
}
function OOt(n, e, t, r) {
  for (var i = n.style, o = {}, s = 0; s < e.length; s++) {
    var a = e[s], l = i[a];
    o[a] = l ?? (r && r[a]);
  }
  for (var s = 0; s < n.animators.length; s++) {
    var u = n.animators[s];
    u.__fromStateTransition && u.__fromStateTransition.indexOf(t) < 0 && u.targetName === "style" && u.saveTo(o, e);
  }
  return o;
}
function wOt(n, e, t, r) {
  var i = t && ot(t, "select") >= 0, o = !1;
  if (n instanceof ct) {
    var s = zK(n), a = i && s.selectFill || s.normalFill, l = i && s.selectStroke || s.normalStroke;
    if (zd(a) || zd(l)) {
      r = r || {};
      var u = r.style || {};
      u.fill === "inherit" ? (o = !0, r = te({}, r), u = te({}, u), u.fill = a) : !zd(u.fill) && zd(a) ? (o = !0, r = te({}, r), u = te({}, u), u.fill = zk(a)) : !zd(u.stroke) && zd(l) && (o || (r = te({}, r), u = te({}, u)), u.stroke = zk(l)), r.style = u;
    }
  }
  if (r && r.z2 == null) {
    o || (r = te({}, r));
    var c = n.z2EmphasisLift;
    r.z2 = n.z2 + (c ?? dv);
  }
  return r;
}
function xOt(n, e, t) {
  if (t && t.z2 == null) {
    t = te({}, t);
    var r = n.z2SelectLift;
    t.z2 = n.z2 + (r ?? mOt);
  }
  return t;
}
function SOt(n, e, t) {
  var r = ot(n.currentStates, e) >= 0, i = n.style.opacity, o = r ? null : OOt(n, ["opacity"], e, {
    opacity: 1
  });
  t = t || {};
  var s = t.style || {};
  return s.opacity == null && (t = te({}, t), s = te({
    // Already being applied 'emphasis'. DON'T mul opacity multiple times.
    opacity: r ? i : o.opacity * 0.1
  }, s), t.style = s), t;
}
function TA(n, e) {
  var t = this.states[n];
  if (this.style) {
    if (n === "emphasis")
      return wOt(this, n, e, t);
    if (n === "blur")
      return SOt(this, n, t);
    if (n === "select")
      return xOt(this, n, t);
  }
  return t;
}
function id(n) {
  n.stateProxy = TA;
  var e = n.getTextContent(), t = n.getTextGuideLine();
  e && (e.stateProxy = TA), t && (t.stateProxy = TA);
}
function gz(n, e) {
  !HK(n, e) && !n.__highByOuter && mu(n, FK);
}
function vz(n, e) {
  !HK(n, e) && !n.__highByOuter && mu(n, QK);
}
function su(n, e) {
  n.__highByOuter |= 1 << (e || 0), mu(n, FK);
}
function au(n, e) {
  !(n.__highByOuter &= ~(1 << (e || 0))) && mu(n, QK);
}
function WK(n) {
  mu(n, YI);
}
function XI(n) {
  mu(n, ZK);
}
function GK(n) {
  mu(n, yOt);
}
function jK(n) {
  mu(n, bOt);
}
function HK(n, e) {
  return n.__highDownSilentOnTouch && e.zrByTouch;
}
function qK(n) {
  var e = n.getModel(), t = [], r = [];
  e.eachComponent(function(i, o) {
    var s = HI(o), a = i === "series", l = a ? n.getViewOfSeriesModel(o) : n.getViewOfComponentModel(o);
    !a && r.push(l), s.isBlured && (l.group.traverse(function(u) {
      ZK(u);
    }), a && t.push(o)), s.isBlured = !1;
  }), I(r, function(i) {
    i && i.toggleBlurSeries && i.toggleBlurSeries(t, !1, e);
  });
}
function rM(n, e, t, r) {
  var i = r.getModel();
  t = t || "coordinateSystem";
  function o(u, c) {
    for (var h = 0; h < c.length; h++) {
      var f = u.getItemGraphicEl(c[h]);
      f && XI(f);
    }
  }
  if (n != null && !(!e || e === "none")) {
    var s = i.getSeriesByIndex(n), a = s.coordinateSystem;
    a && a.master && (a = a.master);
    var l = [];
    i.eachSeries(function(u) {
      var c = s === u, h = u.coordinateSystem;
      h && h.master && (h = h.master);
      var f = h && a ? h === a : c;
      if (!// Not blur other series if blurScope series
      (t === "series" && !c || t === "coordinateSystem" && !f || e === "series" && c)) {
        var d = r.getViewOfSeriesModel(u);
        if (d.group.traverse(function(v) {
          v.__highByOuter && c && e === "self" || YI(v);
        }), _i(e))
          o(u.getData(), e);
        else if (Me(e))
          for (var p = ft(e), g = 0; g < p.length; g++)
            o(u.getData(p[g]), e[p[g]]);
        l.push(u), HI(u).isBlured = !0;
      }
    }), i.eachComponent(function(u, c) {
      if (u !== "series") {
        var h = r.getViewOfComponentModel(c);
        h && h.toggleBlurSeries && h.toggleBlurSeries(l, !0, i);
      }
    });
  }
}
function iM(n, e, t) {
  if (!(n == null || e == null)) {
    var r = t.getModel().getComponent(n, e);
    if (r) {
      HI(r).isBlured = !0;
      var i = t.getViewOfComponentModel(r);
      !i || !i.focusBlurEnabled || i.group.traverse(function(o) {
        YI(o);
      });
    }
  }
}
function _Ot(n, e, t) {
  var r = n.seriesIndex, i = n.getData(e.dataType);
  if (!i) {
    process.env.NODE_ENV !== "production" && li("Unknown dataType " + e.dataType);
    return;
  }
  var o = nd(i, e);
  o = (oe(o) ? o[0] : o) || 0;
  var s = i.getItemGraphicEl(o);
  if (!s)
    for (var a = i.count(), l = 0; !s && l < a; )
      s = i.getItemGraphicEl(l++);
  if (s) {
    var u = Fe(s);
    rM(r, u.focus, u.blurScope, t);
  } else {
    var c = n.get(["emphasis", "focus"]), h = n.get(["emphasis", "blurScope"]);
    c != null && rM(r, c, h, t);
  }
}
function UI(n, e, t, r) {
  var i = {
    focusSelf: !1,
    dispatchers: null
  };
  if (n == null || n === "series" || e == null || t == null)
    return i;
  var o = r.getModel().getComponent(n, e);
  if (!o)
    return i;
  var s = r.getViewOfComponentModel(o);
  if (!s || !s.findHighDownDispatchers)
    return i;
  for (var a = s.findHighDownDispatchers(t), l, u = 0; u < a.length; u++)
    if (process.env.NODE_ENV !== "production" && !Bc(a[u]) && li("param should be highDownDispatcher"), Fe(a[u]).focus === "self") {
      l = !0;
      break;
    }
  return {
    focusSelf: l,
    dispatchers: a
  };
}
function COt(n, e, t) {
  process.env.NODE_ENV !== "production" && !Bc(n) && li("param should be highDownDispatcher");
  var r = Fe(n), i = UI(r.componentMainType, r.componentIndex, r.componentHighDownName, t), o = i.dispatchers, s = i.focusSelf;
  o ? (s && iM(r.componentMainType, r.componentIndex, t), I(o, function(a) {
    return gz(a, e);
  })) : (rM(r.seriesIndex, r.focus, r.blurScope, t), r.focus === "self" && iM(r.componentMainType, r.componentIndex, t), gz(n, e));
}
function AOt(n, e, t) {
  process.env.NODE_ENV !== "production" && !Bc(n) && li("param should be highDownDispatcher"), qK(t);
  var r = Fe(n), i = UI(r.componentMainType, r.componentIndex, r.componentHighDownName, t).dispatchers;
  i ? I(i, function(o) {
    return vz(o, e);
  }) : vz(n, e);
}
function TOt(n, e, t) {
  if (sM(e)) {
    var r = e.dataType, i = n.getData(r), o = nd(i, e);
    oe(o) || (o = [o]), n[e.type === my ? "toggleSelect" : e.type === vy ? "select" : "unselect"](o, r);
  }
}
function mz(n) {
  var e = n.getAllData();
  I(e, function(t) {
    var r = t.data, i = t.type;
    r.eachItemGraphicEl(function(o, s) {
      n.isSelected(s, i) ? GK(o) : jK(o);
    });
  });
}
function POt(n) {
  var e = [];
  return n.eachSeries(function(t) {
    var r = t.getAllData();
    I(r, function(i) {
      i.data;
      var o = i.type, s = t.getSelectedDataIndices();
      if (s.length > 0) {
        var a = {
          dataIndex: s,
          seriesIndex: t.seriesIndex
        };
        o != null && (a.dataType = o), e.push(a);
      }
    });
  }), e;
}
function Df(n, e, t) {
  hf(n, !0), mu(n, id), oM(n, e, t);
}
function EOt(n) {
  hf(n, !1);
}
function $n(n, e, t, r) {
  r ? EOt(n) : Df(n, e, t);
}
function oM(n, e, t) {
  var r = Fe(n);
  e != null ? (r.focus = e, r.blurScope = t) : r.focus && (r.focus = null);
}
var yz = ["emphasis", "blur", "select"], kOt = {
  itemStyle: "getItemStyle",
  lineStyle: "getLineStyle",
  areaStyle: "getAreaStyle"
};
function ui(n, e, t, r) {
  t = t || "itemStyle";
  for (var i = 0; i < yz.length; i++) {
    var o = yz[i], s = e.getModel([o, t]), a = n.ensureState(o);
    a.style = r ? r(s) : s[kOt[t]]();
  }
}
function hf(n, e) {
  var t = e === !1, r = n;
  n.highDownSilentOnTouch && (r.__highDownSilentOnTouch = n.highDownSilentOnTouch), (!t || r.__highDownDispatcher) && (r.__highByOuter = r.__highByOuter || 0, r.__highDownDispatcher = !t);
}
function Bc(n) {
  return !!(n && n.__highDownDispatcher);
}
function MOt(n, e, t) {
  var r = Fe(n);
  r.componentMainType = e.mainType, r.componentIndex = e.componentIndex, r.componentHighDownName = t;
}
function DOt(n) {
  var e = dz[n];
  return e == null && fz <= 32 && (e = dz[n] = fz++), e;
}
function sM(n) {
  var e = n.type;
  return e === vy || e === Sw || e === my;
}
function bz(n) {
  var e = n.type;
  return e === Mf || e === xw;
}
function LOt(n) {
  var e = zK(n);
  e.normalFill = n.style.fill, e.normalStroke = n.style.stroke;
  var t = n.states.select || {};
  e.selectFill = t.style && t.style.fill || null, e.selectStroke = t.style && t.style.stroke || null;
}
var Fd = vl.CMD, IOt = [[], [], []], Oz = Math.sqrt, ROt = Math.atan2;
function YK(n, e) {
  if (e) {
    var t = n.data, r = n.len(), i, o, s, a, l, u, c = Fd.M, h = Fd.C, f = Fd.L, d = Fd.R, p = Fd.A, g = Fd.Q;
    for (s = 0, a = 0; s < r; ) {
      switch (i = t[s++], a = s, o = 0, i) {
        case c:
          o = 1;
          break;
        case f:
          o = 1;
          break;
        case h:
          o = 3;
          break;
        case g:
          o = 2;
          break;
        case p:
          var v = e[4], m = e[5], y = Oz(e[0] * e[0] + e[1] * e[1]), b = Oz(e[2] * e[2] + e[3] * e[3]), O = ROt(-e[1] / b, e[0] / y);
          t[s] *= y, t[s++] += v, t[s] *= b, t[s++] += m, t[s++] *= y, t[s++] *= b, t[s++] += O, t[s++] += O, s += 2, a = s;
          break;
        case d:
          u[0] = t[s++], u[1] = t[s++], si(u, u, e), t[a++] = u[0], t[a++] = u[1], u[0] += t[s++], u[1] += t[s++], si(u, u, e), t[a++] = u[0], t[a++] = u[1];
      }
      for (l = 0; l < o; l++) {
        var w = IOt[l];
        w[0] = t[s++], w[1] = t[s++], si(w, w, e), t[a++] = w[0], t[a++] = w[1];
      }
    }
    n.increaseVersion();
  }
}
var PA = Math.sqrt, q1 = Math.sin, Y1 = Math.cos, Hv = Math.PI;
function wz(n) {
  return Math.sqrt(n[0] * n[0] + n[1] * n[1]);
}
function aM(n, e) {
  return (n[0] * e[0] + n[1] * e[1]) / (wz(n) * wz(e));
}
function xz(n, e) {
  return (n[0] * e[1] < n[1] * e[0] ? -1 : 1) * Math.acos(aM(n, e));
}
function Sz(n, e, t, r, i, o, s, a, l, u, c) {
  var h = l * (Hv / 180), f = Y1(h) * (n - t) / 2 + q1(h) * (e - r) / 2, d = -1 * q1(h) * (n - t) / 2 + Y1(h) * (e - r) / 2, p = f * f / (s * s) + d * d / (a * a);
  p > 1 && (s *= PA(p), a *= PA(p));
  var g = (i === o ? -1 : 1) * PA((s * s * (a * a) - s * s * (d * d) - a * a * (f * f)) / (s * s * (d * d) + a * a * (f * f))) || 0, v = g * s * d / a, m = g * -a * f / s, y = (n + t) / 2 + Y1(h) * v - q1(h) * m, b = (e + r) / 2 + q1(h) * v + Y1(h) * m, O = xz([1, 0], [(f - v) / s, (d - m) / a]), w = [(f - v) / s, (d - m) / a], x = [(-1 * f - v) / s, (-1 * d - m) / a], S = xz(w, x);
  if (aM(w, x) <= -1 && (S = Hv), aM(w, x) >= 1 && (S = 0), S < 0) {
    var _ = Math.round(S / Hv * 1e6) / 1e6;
    S = Hv * 2 + _ % 2 * Hv;
  }
  c.addData(u, y, b, s, a, O, S, h, o);
}
var $Ot = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig, NOt = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function BOt(n) {
  var e = new vl();
  if (!n)
    return e;
  var t = 0, r = 0, i = t, o = r, s, a = vl.CMD, l = n.match($Ot);
  if (!l)
    return e;
  for (var u = 0; u < l.length; u++) {
    for (var c = l[u], h = c.charAt(0), f = void 0, d = c.match(NOt) || [], p = d.length, g = 0; g < p; g++)
      d[g] = parseFloat(d[g]);
    for (var v = 0; v < p; ) {
      var m = void 0, y = void 0, b = void 0, O = void 0, w = void 0, x = void 0, S = void 0, _ = t, C = r, A = void 0, T = void 0;
      switch (h) {
        case "l":
          t += d[v++], r += d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "L":
          t = d[v++], r = d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "m":
          t += d[v++], r += d[v++], f = a.M, e.addData(f, t, r), i = t, o = r, h = "l";
          break;
        case "M":
          t = d[v++], r = d[v++], f = a.M, e.addData(f, t, r), i = t, o = r, h = "L";
          break;
        case "h":
          t += d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "H":
          t = d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "v":
          r += d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "V":
          r = d[v++], f = a.L, e.addData(f, t, r);
          break;
        case "C":
          f = a.C, e.addData(f, d[v++], d[v++], d[v++], d[v++], d[v++], d[v++]), t = d[v - 2], r = d[v - 1];
          break;
        case "c":
          f = a.C, e.addData(f, d[v++] + t, d[v++] + r, d[v++] + t, d[v++] + r, d[v++] + t, d[v++] + r), t += d[v - 2], r += d[v - 1];
          break;
        case "S":
          m = t, y = r, A = e.len(), T = e.data, s === a.C && (m += t - T[A - 4], y += r - T[A - 3]), f = a.C, _ = d[v++], C = d[v++], t = d[v++], r = d[v++], e.addData(f, m, y, _, C, t, r);
          break;
        case "s":
          m = t, y = r, A = e.len(), T = e.data, s === a.C && (m += t - T[A - 4], y += r - T[A - 3]), f = a.C, _ = t + d[v++], C = r + d[v++], t += d[v++], r += d[v++], e.addData(f, m, y, _, C, t, r);
          break;
        case "Q":
          _ = d[v++], C = d[v++], t = d[v++], r = d[v++], f = a.Q, e.addData(f, _, C, t, r);
          break;
        case "q":
          _ = d[v++] + t, C = d[v++] + r, t += d[v++], r += d[v++], f = a.Q, e.addData(f, _, C, t, r);
          break;
        case "T":
          m = t, y = r, A = e.len(), T = e.data, s === a.Q && (m += t - T[A - 4], y += r - T[A - 3]), t = d[v++], r = d[v++], f = a.Q, e.addData(f, m, y, t, r);
          break;
        case "t":
          m = t, y = r, A = e.len(), T = e.data, s === a.Q && (m += t - T[A - 4], y += r - T[A - 3]), t += d[v++], r += d[v++], f = a.Q, e.addData(f, m, y, t, r);
          break;
        case "A":
          b = d[v++], O = d[v++], w = d[v++], x = d[v++], S = d[v++], _ = t, C = r, t = d[v++], r = d[v++], f = a.A, Sz(_, C, t, r, x, S, b, O, w, f, e);
          break;
        case "a":
          b = d[v++], O = d[v++], w = d[v++], x = d[v++], S = d[v++], _ = t, C = r, t += d[v++], r += d[v++], f = a.A, Sz(_, C, t, r, x, S, b, O, w, f, e);
          break;
      }
    }
    (h === "z" || h === "Z") && (f = a.Z, e.addData(f), t = i, r = o), s = f;
  }
  return e.toStatic(), e;
}
var XK = function(n) {
  j(e, n);
  function e() {
    return n !== null && n.apply(this, arguments) || this;
  }
  return e.prototype.applyTransform = function(t) {
  }, e;
}(ct);
function UK(n) {
  return n.setData != null;
}
function KK(n, e) {
  var t = BOt(n), r = te({}, e);
  return r.buildPath = function(i) {
    if (UK(i)) {
      i.setData(t.data);
      var o = i.getContext();
      o && i.rebuildPath(o, 1);
    } else {
      var o = i;
      t.rebuildPath(o, 1);
    }
  }, r.applyTransform = function(i) {
    YK(t, i), this.dirtyShape();
  }, r;
}
function JK(n, e) {
  return new XK(KK(n, e));
}
function VOt(n, e) {
  var t = KK(n, e), r = function(i) {
    j(o, i);
    function o(s) {
      var a = i.call(this, s) || this;
      return a.applyTransform = t.applyTransform, a.buildPath = t.buildPath, a;
    }
    return o;
  }(XK);
  return r;
}
function zOt(n, e) {
  for (var t = [], r = n.length, i = 0; i < r; i++) {
    var o = n[i];
    t.push(o.getUpdatedPathProxy(!0));
  }
  var s = new ct(e);
  return s.createPathProxy(), s.buildPath = function(a) {
    if (UK(a)) {
      a.appendPath(t);
      var l = a.getContext();
      l && a.rebuildPath(l, 1);
    }
  }, s;
}
function KI(n, e) {
  e = e || {};
  var t = new ct();
  return n.shape && t.setShape(n.shape), t.setStyle(n.style), e.bakeTransform ? YK(t.path, n.getComputedTransform()) : e.toLocal ? t.setLocalTransform(n.getComputedTransform()) : t.copyTransform(n), t.buildPath = n.buildPath, t.applyTransform = t.applyTransform, t.z = n.z, t.z2 = n.z2, t.zlevel = n.zlevel, t;
}
var FOt = /* @__PURE__ */ function() {
  function n() {
    this.cx = 0, this.cy = 0, this.r = 0;
  }
  return n;
}(), eJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new FOt();
  }, e.prototype.buildPath = function(t, r) {
    t.moveTo(r.cx + r.r, r.cy), t.arc(r.cx, r.cy, r.r, 0, Math.PI * 2);
  }, e;
}(ct);
eJ.prototype.type = "circle";
const rh = eJ;
var QOt = /* @__PURE__ */ function() {
  function n() {
    this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
  }
  return n;
}(), tJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new QOt();
  }, e.prototype.buildPath = function(t, r) {
    var i = 0.5522848, o = r.cx, s = r.cy, a = r.rx, l = r.ry, u = a * i, c = l * i;
    t.moveTo(o - a, s), t.bezierCurveTo(o - a, s - c, o - u, s - l, o, s - l), t.bezierCurveTo(o + u, s - l, o + a, s - c, o + a, s), t.bezierCurveTo(o + a, s + c, o + u, s + l, o, s + l), t.bezierCurveTo(o - u, s + l, o - a, s + c, o - a, s), t.closePath();
  }, e;
}(ct);
tJ.prototype.type = "ellipse";
const JI = tJ;
var nJ = Math.PI, EA = nJ * 2, _h = Math.sin, Qd = Math.cos, ZOt = Math.acos, di = Math.atan2, _z = Math.abs, yy = Math.sqrt, Mm = Math.max, Ta = Math.min, Ns = 1e-4;
function WOt(n, e, t, r, i, o, s, a) {
  var l = t - n, u = r - e, c = s - i, h = a - o, f = h * l - c * u;
  if (!(f * f < Ns))
    return f = (c * (e - o) - h * (n - i)) / f, [n + f * l, e + f * u];
}
function X1(n, e, t, r, i, o, s) {
  var a = n - t, l = e - r, u = (s ? o : -o) / yy(a * a + l * l), c = u * l, h = -u * a, f = n + c, d = e + h, p = t + c, g = r + h, v = (f + p) / 2, m = (d + g) / 2, y = p - f, b = g - d, O = y * y + b * b, w = i - o, x = f * g - p * d, S = (b < 0 ? -1 : 1) * yy(Mm(0, w * w * O - x * x)), _ = (x * b - y * S) / O, C = (-x * y - b * S) / O, A = (x * b + y * S) / O, T = (-x * y + b * S) / O, k = _ - v, L = C - m, D = A - v, E = T - m;
  return k * k + L * L > D * D + E * E && (_ = A, C = T), {
    cx: _,
    cy: C,
    x0: -c,
    y0: -h,
    x1: _ * (i / w - 1),
    y1: C * (i / w - 1)
  };
}
function GOt(n) {
  var e;
  if (oe(n)) {
    var t = n.length;
    if (!t)
      return n;
    t === 1 ? e = [n[0], n[0], 0, 0] : t === 2 ? e = [n[0], n[0], n[1], n[1]] : t === 3 ? e = n.concat(n[2]) : e = n;
  } else
    e = [n, n, n, n];
  return e;
}
function jOt(n, e) {
  var t, r = Mm(e.r, 0), i = Mm(e.r0 || 0, 0), o = r > 0, s = i > 0;
  if (!(!o && !s)) {
    if (o || (r = i, i = 0), i > r) {
      var a = r;
      r = i, i = a;
    }
    var l = e.startAngle, u = e.endAngle;
    if (!(isNaN(l) || isNaN(u))) {
      var c = e.cx, h = e.cy, f = !!e.clockwise, d = _z(u - l), p = d > EA && d % EA;
      if (p > Ns && (d = p), !(r > Ns))
        n.moveTo(c, h);
      else if (d > EA - Ns)
        n.moveTo(c + r * Qd(l), h + r * _h(l)), n.arc(c, h, r, l, u, !f), i > Ns && (n.moveTo(c + i * Qd(u), h + i * _h(u)), n.arc(c, h, i, u, l, f));
      else {
        var g = void 0, v = void 0, m = void 0, y = void 0, b = void 0, O = void 0, w = void 0, x = void 0, S = void 0, _ = void 0, C = void 0, A = void 0, T = void 0, k = void 0, L = void 0, D = void 0, E = r * Qd(l), M = r * _h(l), R = i * Qd(u), N = i * _h(u), $ = d > Ns;
        if ($) {
          var V = e.cornerRadius;
          V && (t = GOt(V), g = t[0], v = t[1], m = t[2], y = t[3]);
          var H = _z(r - i) / 2;
          if (b = Ta(H, m), O = Ta(H, y), w = Ta(H, g), x = Ta(H, v), C = S = Mm(b, O), A = _ = Mm(w, x), (S > Ns || _ > Ns) && (T = r * Qd(u), k = r * _h(u), L = i * Qd(l), D = i * _h(l), d < nJ)) {
            var G = WOt(E, M, L, D, T, k, R, N);
            if (G) {
              var q = E - G[0], Y = M - G[1], ie = T - G[0], se = k - G[1], K = 1 / _h(ZOt((q * ie + Y * se) / (yy(q * q + Y * Y) * yy(ie * ie + se * se))) / 2), re = yy(G[0] * G[0] + G[1] * G[1]);
              C = Ta(S, (r - re) / (K + 1)), A = Ta(_, (i - re) / (K - 1));
            }
          }
        }
        if (!$)
          n.moveTo(c + E, h + M);
        else if (C > Ns) {
          var ge = Ta(m, C), ne = Ta(y, C), ue = X1(L, D, E, M, r, ge, f), xe = X1(T, k, R, N, r, ne, f);
          n.moveTo(c + ue.cx + ue.x0, h + ue.cy + ue.y0), C < S && ge === ne ? n.arc(c + ue.cx, h + ue.cy, C, di(ue.y0, ue.x0), di(xe.y0, xe.x0), !f) : (ge > 0 && n.arc(c + ue.cx, h + ue.cy, ge, di(ue.y0, ue.x0), di(ue.y1, ue.x1), !f), n.arc(c, h, r, di(ue.cy + ue.y1, ue.cx + ue.x1), di(xe.cy + xe.y1, xe.cx + xe.x1), !f), ne > 0 && n.arc(c + xe.cx, h + xe.cy, ne, di(xe.y1, xe.x1), di(xe.y0, xe.x0), !f));
        } else
          n.moveTo(c + E, h + M), n.arc(c, h, r, l, u, !f);
        if (!(i > Ns) || !$)
          n.lineTo(c + R, h + N);
        else if (A > Ns) {
          var ge = Ta(g, A), ne = Ta(v, A), ue = X1(R, N, T, k, i, -ne, f), xe = X1(E, M, L, D, i, -ge, f);
          n.lineTo(c + ue.cx + ue.x0, h + ue.cy + ue.y0), A < _ && ge === ne ? n.arc(c + ue.cx, h + ue.cy, A, di(ue.y0, ue.x0), di(xe.y0, xe.x0), !f) : (ne > 0 && n.arc(c + ue.cx, h + ue.cy, ne, di(ue.y0, ue.x0), di(ue.y1, ue.x1), !f), n.arc(c, h, i, di(ue.cy + ue.y1, ue.cx + ue.x1), di(xe.cy + xe.y1, xe.cx + xe.x1), f), ge > 0 && n.arc(c + xe.cx, h + xe.cy, ge, di(xe.y1, xe.x1), di(xe.y0, xe.x0), !f));
        } else
          n.lineTo(c + R, h + N), n.arc(c, h, i, u, l, f);
      }
      n.closePath();
    }
  }
}
var HOt = /* @__PURE__ */ function() {
  function n() {
    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0, this.cornerRadius = 0;
  }
  return n;
}(), rJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new HOt();
  }, e.prototype.buildPath = function(t, r) {
    jOt(t, r);
  }, e.prototype.isZeroArea = function() {
    return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
  }, e;
}(ct);
rJ.prototype.type = "sector";
const go = rJ;
var qOt = /* @__PURE__ */ function() {
  function n() {
    this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
  }
  return n;
}(), iJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new qOt();
  }, e.prototype.buildPath = function(t, r) {
    var i = r.cx, o = r.cy, s = Math.PI * 2;
    t.moveTo(i + r.r, o), t.arc(i, o, r.r, 0, s, !1), t.moveTo(i + r.r0, o), t.arc(i, o, r.r0, 0, s, !0);
  }, e;
}(ct);
iJ.prototype.type = "ring";
const rC = iJ;
function YOt(n, e, t, r) {
  var i = [], o = [], s = [], a = [], l, u, c, h;
  if (r) {
    c = [1 / 0, 1 / 0], h = [-1 / 0, -1 / 0];
    for (var f = 0, d = n.length; f < d; f++)
      oc(c, c, n[f]), sc(h, h, n[f]);
    oc(c, c, r[0]), sc(h, h, r[1]);
  }
  for (var f = 0, d = n.length; f < d; f++) {
    var p = n[f];
    if (t)
      l = n[f ? f - 1 : d - 1], u = n[(f + 1) % d];
    else if (f === 0 || f === d - 1) {
      i.push(Wl(n[f]));
      continue;
    } else
      l = n[f - 1], u = n[f + 1];
    uf(o, u, l), vw(o, o, e);
    var g = kk(p, l), v = kk(p, u), m = g + v;
    m !== 0 && (g /= m, v /= m), vw(s, o, -g), vw(a, o, v);
    var y = p4([], p, s), b = p4([], p, a);
    r && (sc(y, y, c), oc(y, y, h), sc(b, b, c), oc(b, b, h)), i.push(y), i.push(b);
  }
  return t && i.push(i.shift()), i;
}
function oJ(n, e, t) {
  var r = e.smooth, i = e.points;
  if (i && i.length >= 2) {
    if (r) {
      var o = YOt(i, r, t, e.smoothConstraint);
      n.moveTo(i[0][0], i[0][1]);
      for (var s = i.length, a = 0; a < (t ? s : s - 1); a++) {
        var l = o[a * 2], u = o[a * 2 + 1], c = i[(a + 1) % s];
        n.bezierCurveTo(l[0], l[1], u[0], u[1], c[0], c[1]);
      }
    } else {
      n.moveTo(i[0][0], i[0][1]);
      for (var a = 1, h = i.length; a < h; a++)
        n.lineTo(i[a][0], i[a][1]);
    }
    t && n.closePath();
  }
}
var XOt = /* @__PURE__ */ function() {
  function n() {
    this.points = null, this.smooth = 0, this.smoothConstraint = null;
  }
  return n;
}(), Zi = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new XOt();
  }, e.prototype.buildPath = function(t, r) {
    oJ(t, r, !0);
  }, e;
}(ct);
Zi.prototype.type = "polygon";
var UOt = /* @__PURE__ */ function() {
  function n() {
    this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
  }
  return n;
}(), Gi = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new UOt();
  }, e.prototype.buildPath = function(t, r) {
    oJ(t, r, !1);
  }, e;
}(ct);
Gi.prototype.type = "polyline";
var KOt = {}, JOt = /* @__PURE__ */ function() {
  function n() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
  }
  return n;
}(), Ar = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new JOt();
  }, e.prototype.buildPath = function(t, r) {
    var i, o, s, a;
    if (this.subPixelOptimize) {
      var l = IK(KOt, r, this.style);
      i = l.x1, o = l.y1, s = l.x2, a = l.y2;
    } else
      i = r.x1, o = r.y1, s = r.x2, a = r.y2;
    var u = r.percent;
    u !== 0 && (t.moveTo(i, o), u < 1 && (s = i * (1 - u) + s * u, a = o * (1 - u) + a * u), t.lineTo(s, a));
  }, e.prototype.pointAt = function(t) {
    var r = this.shape;
    return [
      r.x1 * (1 - t) + r.x2 * t,
      r.y1 * (1 - t) + r.y2 * t
    ];
  }, e;
}(ct);
Ar.prototype.type = "line";
var Yi = [], ewt = /* @__PURE__ */ function() {
  function n() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
  }
  return n;
}();
function Cz(n, e, t) {
  var r = n.cpx2, i = n.cpy2;
  return r != null || i != null ? [
    (t ? A4 : Sr)(n.x1, n.cpx1, n.cpx2, n.x2, e),
    (t ? A4 : Sr)(n.y1, n.cpy1, n.cpy2, n.y2, e)
  ] : [
    (t ? $k : $r)(n.x1, n.cpx1, n.x2, e),
    (t ? $k : $r)(n.y1, n.cpy1, n.y2, e)
  ];
}
var sJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new ewt();
  }, e.prototype.buildPath = function(t, r) {
    var i = r.x1, o = r.y1, s = r.x2, a = r.y2, l = r.cpx1, u = r.cpy1, c = r.cpx2, h = r.cpy2, f = r.percent;
    f !== 0 && (t.moveTo(i, o), c == null || h == null ? (f < 1 && (g0(i, l, s, f, Yi), l = Yi[1], s = Yi[2], g0(o, u, a, f, Yi), u = Yi[1], a = Yi[2]), t.quadraticCurveTo(l, u, s, a)) : (f < 1 && (Nc(i, l, c, s, f, Yi), l = Yi[1], c = Yi[2], s = Yi[3], Nc(o, u, h, a, f, Yi), u = Yi[1], h = Yi[2], a = Yi[3]), t.bezierCurveTo(l, u, c, h, s, a)));
  }, e.prototype.pointAt = function(t) {
    return Cz(this.shape, t, !1);
  }, e.prototype.tangentAt = function(t) {
    var r = Cz(this.shape, t, !0);
    return cv(r, r);
  }, e;
}(ct);
sJ.prototype.type = "bezier-curve";
const iC = sJ;
var twt = /* @__PURE__ */ function() {
  function n() {
    this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
  }
  return n;
}(), aJ = function(n) {
  j(e, n);
  function e(t) {
    return n.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new twt();
  }, e.prototype.buildPath = function(t, r) {
    var i = r.cx, o = r.cy, s = Math.max(r.r, 0), a = r.startAngle, l = r.endAngle, u = r.clockwise, c = Math.cos(a), h = Math.sin(a);
    t.moveTo(c * s + i, h * s + o), t.arc(i, o, s, a, l, !u);
  }, e;
}(ct);
aJ.prototype.type = "arc";
const eR = aJ;
var nwt = function(n) {
  j(e, n);
  function e() {
    var t = n !== null && n.apply(this, arguments) || this;
    return t.type = "compound", t;
  }
  return e.prototype._updatePathDirty = function() {
    for (var t = this.shape.paths, r = this.shapeChanged(), i = 0; i < t.length; i++)
      r = r || t[i].shapeChanged();
    r && this.dirtyShape();
  }, e.prototype.beforeBrush = function() {
    this._updatePathDirty();
    for (var t = this.shape.paths || [], r = this.getGlobalScale(), i = 0; i < t.length; i++)
      t[i].path || t[i].createPathProxy(), t[i].path.setScale(r[0], r[1], t[i].segmentIgnoreThreshold);
  }, e.prototype.buildPath = function(t, r) {
    for (var i = r.paths || [], o = 0; o < i.length; o++)
      i[o].buildPath(t, i[o].shape, !0);
  }, e.prototype.afterBrush = function() {
    for (var t = this.shape.paths || [], r = 0; r < t.length; r++)
      t[r].pathUpdated();
  }, e.prototype.getBoundingRect = function() {
    return this._updatePathDirty.call(this), ct.prototype.getBoundingRect.call(this);
  }, e;
}(ct);
const tR = nwt;
var rwt = function() {
  function n(e) {
    this.colorStops = e || [];
  }
  return n.prototype.addColorStop = function(e, t) {
    this.colorStops.push({
      offset: e,
      color: t
    });
  }, n;
}();
const lJ = rwt;
var _b = function(n) {
  j(e, n);
  function e(t, r, i, o, s, a) {
    var l = n.call(this, s) || this;
    return l.x = t ?? 0, l.y = r ?? 0, l.x2 = i ?? 1, l.y2 = o ?? 0, l.type = "linear", l.global = a || !1, l;
  }
  return e;
}(lJ), iwt = function(n) {
  j(e, n);
  function e(t, r, i, o, s) {
    var a = n.call(this, o) || this;
    return a.x = t ?? 0.5, a.y = r ?? 0.5, a.r = i ?? 0.5, a.type = "radial", a.global = s || !1, a;
  }
  return e;
}(lJ);
const uJ = iwt;
var Ch = [0, 0], Ah = [0, 0], U1 = new Xe(), K1 = new Xe(), owt = function() {
  function n(e, t) {
    this._corners = [], this._axes = [], this._origin = [0, 0];
    for (var r = 0; r < 4; r++)
      this._corners[r] = new Xe();
    for (var r = 0; r < 2; r++)
      this._axes[r] = new Xe();
    e && this.fromBoundingRect(e, t);
  }
  return n.prototype.fromBoundingRect = function(e, t) {
    var r = this._corners, i = this._axes, o = e.x, s = e.y, a = o + e.width, l = s + e.height;
    if (r[0].set(o, s), r[1].set(a, s), r[2].set(a, l), r[3].set(o, l), t)
      for (var u = 0; u < 4; u++)
        r[u].transform(t);
    Xe.sub(i[0], r[1], r[0]), Xe.sub(i[1], r[3], r[0]), i[0].normalize(), i[1].normalize();
    for (var u = 0; u < 2; u++)
      this._origin[u] = i[u].dot(r[0]);
  }, n.prototype.intersect = function(e, t) {
    var r = !0, i = !t;
    return U1.set(1 / 0, 1 / 0), K1.set(0, 0), !this._intersectCheckOneSide(this, e, U1, K1, i, 1) && (r = !1, i) || !this._intersectCheckOneSide(e, this, U1, K1, i, -1) && (r = !1, i) || i || Xe.copy(t, r ? U1 : K1), r;
  }, n.prototype._intersectCheckOneSide = function(e, t, r, i, o, s) {
    for (var a = !0, l = 0; l < 2; l++) {
      var u = this._axes[l];
      if (this._getProjMinMaxOnAxis(l, e._corners, Ch), this._getProjMinMaxOnAxis(l, t._corners, Ah), Ch[1] < Ah[0] || Ch[0] > Ah[1]) {
        if (a = !1, o)
          return a;
        var c = Math.abs(Ah[0] - Ch[1]), h = Math.abs(Ch[0] - Ah[1]);
        Math.min(c, h) > i.len() && (c < h ? Xe.scale(i, u, -c * s) : Xe.scale(i, u, h * s));
      } else if (r) {
        var c = Math.abs(Ah[0] - Ch[1]), h = Math.abs(Ch[0] - Ah[1]);
        Math.min(c, h) < r.len() && (c < h ? Xe.scale(r, u, c * s) : Xe.scale(r, u, -h * s));
      }
    }
    return a;
  }, n.prototype._getProjMinMaxOnAxis = function(e, t, r) {
    for (var i = this._axes[e], o = this._origin, s = t[0].dot(i) + o[e], a = s, l = s, u = 1; u < t.length; u++) {
      var c = t[u].dot(i) + o[e];
      a = Math.min(c, a), l = Math.max(c, l);
    }
    r[0] = a, r[1] = l;
  }, n;
}();
const qx = owt;
var swt = [], awt = function(n) {
  j(e, n);
  function e() {
    var t = n !== null && n.apply(this, arguments) || this;
    return t.notClear = !0, t.incremental = !0, t._displayables = [], t._temporaryDisplayables = [], t._cursor = 0, t;
  }
  return e.prototype.traverse = function(t, r) {
    t.call(r, this);
  }, e.prototype.useStyle = function() {
    this.style = {};
  }, e.prototype.getCursor = function() {
    return this._cursor;
  }, e.prototype.innerAfterBrush = function() {
    this._cursor = this._displayables.length;
  }, e.prototype.clearDisplaybles = function() {
    this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1;
  }, e.prototype.clearTemporalDisplayables = function() {
    this._temporaryDisplayables = [];
  }, e.prototype.addDisplayable = function(t, r) {
    r ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.markRedraw();
  }, e.prototype.addDisplayables = function(t, r) {
    r = r || !1;
    for (var i = 0; i < t.length; i++)
      this.addDisplayable(t[i], r);
  }, e.prototype.getDisplayables = function() {
    return this._displayables;
  }, e.prototype.getTemporalDisplayables = function() {
    return this._temporaryDisplayables;
  }, e.prototype.eachPendingDisplayable = function(t) {
    for (var r = this._cursor; r < this._displayables.length; r++)
      t && t(this._displayables[r]);
    for (var r = 0; r < this._temporaryDisplayables.length; r++)
      t && t(this._temporaryDisplayables[r]);
  }, e.prototype.update = function() {
    this.updateTransform();
    for (var t = this._cursor; t < this._displayables.length; t++) {
      var r = this._displayables[t];
      r.parent = this, r.update(), r.parent = null;
    }
    for (var t = 0; t < this._temporaryDisplayables.length; t++) {
      var r = this._temporaryDisplayables[t];
      r.parent = this, r.update(), r.parent = null;
    }
  }, e.prototype.getBoundingRect = function() {
    if (!this._rect) {
      for (var t = new et(1 / 0, 1 / 0, -1 / 0, -1 / 0), r = 0; r < this._displayables.length; r++) {
        var i = this._displayables[r], o = i.getBoundingRect().clone();
        i.needLocalTransform() && o.applyTransform(i.getLocalTransform(swt)), t.union(o);
      }
      this._rect = t;
    }
    return this._rect;
  }, e.prototype.contain = function(t, r) {
    var i = this.transformCoordToLocal(t, r), o = this.getBoundingRect();
    if (o.contain(i[0], i[1]))
      for (var s = 0; s < this._displayables.length; s++) {
        var a = this._displayables[s];
        if (a.contain(t, r))
          return !0;
      }
    return !1;
  }, e;
}(As);
const lwt = awt;
var cJ = Ct();
function pv(n, e, t, r, i) {
  var o;
  if (e && e.ecModel) {
    var s = e.ecModel.getUpdatePayload();
    o = s && s.animation;
  }
  var a = e && e.isAnimationEnabled(), l = n === "update";
  if (a) {
    var u = void 0, c = void 0, h = void 0;
    r ? (u = Qe(r.duration, 200), c = Qe(r.easing, "cubicOut"), h = 0) : (u = e.getShallow(l ? "animationDurationUpdate" : "animationDuration"), c = e.getShallow(l ? "animationEasingUpdate" : "animationEasing"), h = e.getShallow(l ? "animationDelayUpdate" : "animationDelay")), o && (o.duration != null && (u = o.duration), o.easing != null && (c = o.easing), o.delay != null && (h = o.delay)), Pe(h) && (h = h(t, i)), Pe(u) && (u = u(t));
    var f = {
      duration: u || 0,
      delay: h,
      easing: c
    };
    return f;
  } else
    return null;
}
function nR(n, e, t, r, i, o, s) {
  var a = !1, l;
  Pe(i) ? (s = o, o = i, i = null) : Me(i) && (o = i.cb, s = i.during, a = i.isFrom, l = i.removeOpt, i = i.dataIndex);
  var u = n === "leave";
  u || e.stopAnimation("leave");
  var c = pv(n, r, i, u ? l || {} : null, r && r.getAnimationDelayParams ? r.getAnimationDelayParams(e, i) : null);
  if (c && c.duration > 0) {
    var h = c.duration, f = c.delay, d = c.easing, p = {
      duration: h,
      delay: f || 0,
      easing: d,
      done: o,
      force: !!o || !!s,
      // Set to final state in update/init animation.
      // So the post processing based on the path shape can be done correctly.
      setToFinal: !u,
      scope: n,
      during: s
    };
    a ? e.animateFrom(t, p) : e.animateTo(t, p);
  } else
    e.stopAnimation(), !a && e.attr(t), s && s(1), o && o();
}
function kt(n, e, t, r, i, o) {
  nR("update", n, e, t, r, i, o);
}
function vn(n, e, t, r, i, o) {
  nR("enter", n, e, t, r, i, o);
}
function Rp(n) {
  if (!n.__zr)
    return !0;
  for (var e = 0; e < n.animators.length; e++) {
    var t = n.animators[e];
    if (t.scope === "leave")
      return !0;
  }
  return !1;
}
function Vc(n, e, t, r, i, o) {
  Rp(n) || nR("leave", n, e, t, r, i, o);
}
function Az(n, e, t, r) {
  n.removeTextContent(), n.removeTextGuideLine(), Vc(n, {
    style: {
      opacity: 0
    }
  }, e, t, r);
}
function w0(n, e, t) {
  function r() {
    n.parent && n.parent.remove(n);
  }
  n.isGroup ? n.traverse(function(i) {
    i.isGroup || Az(i, e, t, r);
  }) : Az(n, e, t, r);
}
function ua(n) {
  cJ(n).oldStyle = n.style;
}
function uwt(n) {
  return cJ(n).oldStyle;
}
var Yx = Math.max, Xx = Math.min, lM = {};
function cwt(n) {
  return ct.extend(n);
}
var hwt = VOt;
function fwt(n, e) {
  return hwt(n, e);
}
function ya(n, e) {
  lM[n] = e;
}
function rR(n) {
  if (lM.hasOwnProperty(n))
    return lM[n];
}
function oC(n, e, t, r) {
  var i = JK(n, e);
  return t && (r === "center" && (t = fJ(t, i.getBoundingRect())), dJ(i, t)), i;
}
function hJ(n, e, t) {
  var r = new fi({
    style: {
      image: n,
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    onload: function(i) {
      if (t === "center") {
        var o = {
          width: i.width,
          height: i.height
        };
        r.setStyle(fJ(e, o));
      }
    }
  });
  return r;
}
function fJ(n, e) {
  var t = e.width / e.height, r = n.height * t, i;
  r <= n.width ? i = n.height : (r = n.width, i = r / t);
  var o = n.x + n.width / 2, s = n.y + n.height / 2;
  return {
    x: o - r / 2,
    y: s - i / 2,
    width: r,
    height: i
  };
}
var us = zOt;
function dJ(n, e) {
  if (n.applyTransform) {
    var t = n.getBoundingRect(), r = t.calculateTransform(e);
    n.applyTransform(r);
  }
}
function Dg(n, e) {
  return IK(n, n, {
    lineWidth: e
  }), n;
}
function dwt(n) {
  return RK(n.shape, n.shape, n.style), n;
}
var _w = cf;
function Lf(n, e) {
  for (var t = j_([]); n && n !== e; )
    Gl(t, n.getLocalTransform(), t), n = n.parent;
  return t;
}
function ta(n, e, t) {
  return e && !_i(e) && (e = zl.getLocalTransform(e)), t && (e = hv([], e)), si([], n, e);
}
function sC(n, e, t) {
  var r = e[4] === 0 || e[5] === 0 || e[0] === 0 ? 1 : Math.abs(2 * e[4] / e[0]), i = e[4] === 0 || e[5] === 0 || e[2] === 0 ? 1 : Math.abs(2 * e[4] / e[2]), o = [n === "left" ? -r : n === "right" ? r : 0, n === "top" ? -i : n === "bottom" ? i : 0];
  return o = ta(o, e, t), Math.abs(o[0]) > Math.abs(o[1]) ? o[0] > 0 ? "right" : "left" : o[1] > 0 ? "bottom" : "top";
}
function Tz(n) {
  return !n.isGroup;
}
function pwt(n) {
  return n.shape != null;
}
function Cb(n, e, t) {
  if (!n || !e)
    return;
  function r(s) {
    var a = {};
    return s.traverse(function(l) {
      Tz(l) && l.anid && (a[l.anid] = l);
    }), a;
  }
  function i(s) {
    var a = {
      x: s.x,
      y: s.y,
      rotation: s.rotation
    };
    return pwt(s) && (a.shape = te({}, s.shape)), a;
  }
  var o = r(n);
  e.traverse(function(s) {
    if (Tz(s) && s.anid) {
      var a = o[s.anid];
      if (a) {
        var l = i(s);
        s.attr(i(a)), kt(s, l, t, Fe(s).dataIndex);
      }
    }
  });
}
function pJ(n, e) {
  return ae(n, function(t) {
    var r = t[0];
    r = Yx(r, e.x), r = Xx(r, e.x + e.width);
    var i = t[1];
    return i = Yx(i, e.y), i = Xx(i, e.y + e.height), [r, i];
  });
}
function gwt(n, e) {
  var t = Yx(n.x, e.x), r = Xx(n.x + n.width, e.x + e.width), i = Yx(n.y, e.y), o = Xx(n.y + n.height, e.y + e.height);
  if (r >= t && o >= i)
    return {
      x: t,
      y: i,
      width: r - t,
      height: o - i
    };
}
function Ab(n, e, t) {
  var r = te({
    rectHover: !0
  }, e), i = r.style = {
    strokeNoScale: !0
  };
  if (t = t || {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }, n)
    return n.indexOf("image://") === 0 ? (i.image = n.slice(8), Le(i, t), new fi(r)) : oC(n.replace("path://", ""), r, t, "center");
}
function Dm(n, e, t, r, i) {
  for (var o = 0, s = i[i.length - 1]; o < i.length; o++) {
    var a = i[o];
    if (gJ(n, e, t, r, a[0], a[1], s[0], s[1]))
      return !0;
    s = a;
  }
}
function gJ(n, e, t, r, i, o, s, a) {
  var l = t - n, u = r - e, c = s - i, h = a - o, f = kA(c, h, l, u);
  if (vwt(f))
    return !1;
  var d = n - i, p = e - o, g = kA(d, p, l, u) / f;
  if (g < 0 || g > 1)
    return !1;
  var v = kA(d, p, c, h) / f;
  return !(v < 0 || v > 1);
}
function kA(n, e, t, r) {
  return n * r - t * e;
}
function vwt(n) {
  return n <= 1e-6 && n >= -1e-6;
}
function gv(n) {
  var e = n.itemTooltipOption, t = n.componentModel, r = n.itemName, i = be(e) ? {
    formatter: e
  } : e, o = t.mainType, s = t.componentIndex, a = {
    componentType: o,
    name: r,
    $vars: ["name"]
  };
  a[o + "Index"] = s;
  var l = n.formatterParamsExtra;
  l && I(ft(l), function(c) {
    we(a, c) || (a[c] = l[c], a.$vars.push(c));
  });
  var u = Fe(n.el);
  u.componentMainType = o, u.componentIndex = s, u.tooltipConfig = {
    name: r,
    option: Le({
      content: r,
      formatterParams: a
    }, i)
  };
}
function Pz(n, e) {
  var t;
  n.isGroup && (t = e(n)), t || n.traverse(e);
}
function ih(n, e) {
  if (n)
    if (oe(n))
      for (var t = 0; t < n.length; t++)
        Pz(n[t], e);
    else
      Pz(n, e);
}
ya("circle", rh);
ya("ellipse", JI);
ya("sector", go);
ya("ring", rC);
ya("polygon", Zi);
ya("polyline", Gi);
ya("rect", _t);
ya("line", Ar);
ya("bezierCurve", iC);
ya("arc", eR);
const yd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Arc: eR,
  BezierCurve: iC,
  BoundingRect: et,
  Circle: rh,
  CompoundPath: tR,
  Ellipse: JI,
  Group: Ve,
  Image: fi,
  IncrementalDisplayable: lwt,
  Line: Ar,
  LinearGradient: _b,
  OrientedBoundingRect: qx,
  Path: ct,
  Point: Xe,
  Polygon: Zi,
  Polyline: Gi,
  RadialGradient: uJ,
  Rect: _t,
  Ring: rC,
  Sector: go,
  Text: At,
  applyTransform: ta,
  clipPointsByRect: pJ,
  clipRectByRect: gwt,
  createIcon: Ab,
  extendPath: fwt,
  extendShape: cwt,
  getShapeClass: rR,
  getTransform: Lf,
  groupTransition: Cb,
  initProps: vn,
  isElementRemoved: Rp,
  lineLineIntersect: gJ,
  linePolygonIntersect: Dm,
  makeImage: hJ,
  makePath: oC,
  mergePath: us,
  registerShape: ya,
  removeElement: Vc,
  removeElementWithFadeOut: w0,
  resizePath: dJ,
  setTooltipConfig: gv,
  subPixelOptimize: _w,
  subPixelOptimizeLine: Dg,
  subPixelOptimizeRect: dwt,
  transformDirection: sC,
  traverseElements: ih,
  updateProps: kt
}, Symbol.toStringTag, { value: "Module" }));
var aC = {};
function vJ(n, e) {
  for (var t = 0; t < Qi.length; t++) {
    var r = Qi[t], i = e[r], o = n.ensureState(r);
    o.style = o.style || {}, o.style.text = i;
  }
  var s = n.currentStates.slice();
  n.clearStates(!0), n.setStyle({
    text: e.normal
  }), n.useStates(s, !0);
}
function uM(n, e, t) {
  var r = n.labelFetcher, i = n.labelDataIndex, o = n.labelDimIndex, s = e.normal, a;
  r && (a = r.getFormattedLabel(i, "normal", null, o, s && s.get("formatter"), t != null ? {
    interpolatedValue: t
  } : null)), a == null && (a = Pe(n.defaultText) ? n.defaultText(i, n, t) : n.defaultText);
  for (var l = {
    normal: a
  }, u = 0; u < Qi.length; u++) {
    var c = Qi[u], h = e[c];
    l[c] = Qe(r ? r.getFormattedLabel(i, c, null, o, h && h.get("formatter")) : null, a);
  }
  return l;
}
function ci(n, e, t, r) {
  t = t || aC;
  for (var i = n instanceof At, o = !1, s = 0; s < O0.length; s++) {
    var a = e[O0[s]];
    if (a && a.getShallow("show")) {
      o = !0;
      break;
    }
  }
  var l = i ? n : n.getTextContent();
  if (o) {
    i || (l || (l = new At(), n.setTextContent(l)), n.stateProxy && (l.stateProxy = n.stateProxy));
    var u = uM(t, e), c = e.normal, h = !!c.getShallow("show"), f = hn(c, r && r.normal, t, !1, !i);
    f.text = u.normal, i || n.setTextConfig(Ux(c, t, !1));
    for (var s = 0; s < Qi.length; s++) {
      var d = Qi[s], a = e[d];
      if (a) {
        var p = l.ensureState(d), g = !!Qe(a.getShallow("show"), h);
        if (g !== h && (p.ignore = !g), p.style = hn(a, r && r[d], t, !0, !i), p.style.text = u[d], !i) {
          var v = n.ensureState(d);
          v.textConfig = Ux(a, t, !0);
        }
      }
    }
    l.silent = !!c.getShallow("silent"), l.style.x != null && (f.x = l.style.x), l.style.y != null && (f.y = l.style.y), l.ignore = !h, l.useStyle(f), l.dirty(), t.enableTextSetter && (vv(l).setLabelText = function(m) {
      var y = uM(t, e, m);
      vJ(l, y);
    });
  } else
    l && (l.ignore = !0);
  n.dirty();
}
function kr(n, e) {
  e = e || "label";
  for (var t = {
    normal: n.getModel(e)
  }, r = 0; r < Qi.length; r++) {
    var i = Qi[r];
    t[i] = n.getModel([i, e]);
  }
  return t;
}
function hn(n, e, t, r, i) {
  var o = {};
  return mwt(o, n, t, r, i), e && te(o, e), o;
}
function Ux(n, e, t) {
  e = e || {};
  var r = {}, i, o = n.getShallow("rotate"), s = Qe(n.getShallow("distance"), t ? null : 5), a = n.getShallow("offset");
  return i = n.getShallow("position") || (t ? null : "inside"), i === "outside" && (i = e.defaultOutsidePosition || "top"), i != null && (r.position = i), a != null && (r.offset = a), o != null && (o *= Math.PI / 180, r.rotation = o), s != null && (r.distance = s), r.outsideFill = n.get("color") === "inherit" ? e.inheritColor || null : "auto", r;
}
function mwt(n, e, t, r, i) {
  t = t || aC;
  var o = e.ecModel, s = o && o.option.textStyle, a = ywt(e), l;
  if (a) {
    l = {};
    for (var u in a)
      if (a.hasOwnProperty(u)) {
        var c = e.getModel(["rich", u]);
        Dz(l[u] = {}, c, s, t, r, i, !1, !0);
      }
  }
  l && (n.rich = l);
  var h = e.get("overflow");
  h && (n.overflow = h);
  var f = e.get("minMargin");
  f != null && (n.margin = f), Dz(n, e, s, t, r, i, !0, !1);
}
function ywt(n) {
  for (var e; n && n !== n.ecModel; ) {
    var t = (n.option || aC).rich;
    if (t) {
      e = e || {};
      for (var r = ft(t), i = 0; i < r.length; i++) {
        var o = r[i];
        e[o] = 1;
      }
    }
    n = n.parentModel;
  }
  return e;
}
var Ez = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], kz = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"], Mz = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
function Dz(n, e, t, r, i, o, s, a) {
  t = !i && t || aC;
  var l = r && r.inheritColor, u = e.getShallow("color"), c = e.getShallow("textBorderColor"), h = Qe(e.getShallow("opacity"), t.opacity);
  (u === "inherit" || u === "auto") && (process.env.NODE_ENV !== "production" && u === "auto" && er("color: 'auto'", "color: 'inherit'"), l ? u = l : u = null), (c === "inherit" || c === "auto") && (process.env.NODE_ENV !== "production" && c === "auto" && er("color: 'auto'", "color: 'inherit'"), l ? c = l : c = null), o || (u = u || t.color, c = c || t.textBorderColor), u != null && (n.fill = u), c != null && (n.stroke = c);
  var f = Qe(e.getShallow("textBorderWidth"), t.textBorderWidth);
  f != null && (n.lineWidth = f);
  var d = Qe(e.getShallow("textBorderType"), t.textBorderType);
  d != null && (n.lineDash = d);
  var p = Qe(e.getShallow("textBorderDashOffset"), t.textBorderDashOffset);
  p != null && (n.lineDashOffset = p), !i && h == null && !a && (h = r && r.defaultOpacity), h != null && (n.opacity = h), !i && !o && n.fill == null && r.inheritColor && (n.fill = r.inheritColor);
  for (var g = 0; g < Ez.length; g++) {
    var v = Ez[g], m = Qe(e.getShallow(v), t[v]);
    m != null && (n[v] = m);
  }
  for (var g = 0; g < kz.length; g++) {
    var v = kz[g], m = e.getShallow(v);
    m != null && (n[v] = m);
  }
  if (n.verticalAlign == null) {
    var y = e.getShallow("baseline");
    y != null && (n.verticalAlign = y);
  }
  if (!s || !r.disableBox) {
    for (var g = 0; g < Mz.length; g++) {
      var v = Mz[g], m = e.getShallow(v);
      m != null && (n[v] = m);
    }
    var b = e.getShallow("borderType");
    b != null && (n.borderDash = b), (n.backgroundColor === "auto" || n.backgroundColor === "inherit") && l && (process.env.NODE_ENV !== "production" && n.backgroundColor === "auto" && er("backgroundColor: 'auto'", "backgroundColor: 'inherit'"), n.backgroundColor = l), (n.borderColor === "auto" || n.borderColor === "inherit") && l && (process.env.NODE_ENV !== "production" && n.borderColor === "auto" && er("borderColor: 'auto'", "borderColor: 'inherit'"), n.borderColor = l);
  }
}
function iR(n, e) {
  var t = e && e.getModel("textStyle");
  return Ys([
    // FIXME in node-canvas fontWeight is before fontStyle
    n.fontStyle || t && t.getShallow("fontStyle") || "",
    n.fontWeight || t && t.getShallow("fontWeight") || "",
    (n.fontSize || t && t.getShallow("fontSize") || 12) + "px",
    n.fontFamily || t && t.getShallow("fontFamily") || "sans-serif"
  ].join(" "));
}
var vv = Ct();
function mJ(n, e, t, r) {
  if (n) {
    var i = vv(n);
    i.prevValue = i.value, i.value = t;
    var o = e.normal;
    i.valueAnimation = o.get("valueAnimation"), i.valueAnimation && (i.precision = o.get("precision"), i.defaultInterpolatedText = r, i.statesModels = e);
  }
}
function yJ(n, e, t, r, i) {
  var o = vv(n);
  if (!o.valueAnimation || o.prevValue === o.value)
    return;
  var s = o.defaultInterpolatedText, a = Qe(o.interpolatedValue, o.prevValue), l = o.value;
  function u(c) {
    var h = _K(t, o.precision, a, l, c);
    o.interpolatedValue = c === 1 ? null : h;
    var f = uM({
      labelDataIndex: e,
      labelFetcher: i,
      defaultText: s ? s(h) : h + ""
    }, o.statesModels, h);
    vJ(n, f);
  }
  n.percent = 0, (o.prevValue == null ? vn : kt)(n, {
    // percent is used to prevent animation from being aborted #15916
    percent: 1
  }, r, e, null, u);
}
var bwt = ["textStyle", "color"], MA = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"], DA = new At(), Owt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getTextColor = function(e) {
      var t = this.ecModel;
      return this.getShallow("color") || (!e && t ? t.get(bwt) : null);
    }, n.prototype.getFont = function() {
      return iR({
        fontStyle: this.getShallow("fontStyle"),
        fontWeight: this.getShallow("fontWeight"),
        fontSize: this.getShallow("fontSize"),
        fontFamily: this.getShallow("fontFamily")
      }, this.ecModel);
    }, n.prototype.getTextRect = function(e) {
      for (var t = {
        text: e,
        verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
      }, r = 0; r < MA.length; r++)
        t[MA[r]] = this.getShallow(MA[r]);
      return DA.useStyle(t), DA.update(), DA.getBoundingRect();
    }, n;
  }()
);
const wwt = Owt;
var bJ = [
  ["lineWidth", "width"],
  ["stroke", "color"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "type"],
  ["lineDashOffset", "dashOffset"],
  ["lineCap", "cap"],
  ["lineJoin", "join"],
  ["miterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], xwt = rd(bJ), Swt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getLineStyle = function(e) {
      return xwt(this, e);
    }, n;
  }()
), OJ = [
  ["fill", "color"],
  ["stroke", "borderColor"],
  ["lineWidth", "borderWidth"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "borderType"],
  ["lineDashOffset", "borderDashOffset"],
  ["lineCap", "borderCap"],
  ["lineJoin", "borderJoin"],
  ["miterLimit", "borderMiterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], _wt = rd(OJ), Cwt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getItemStyle = function(e, t) {
      return _wt(this, e, t);
    }, n;
  }()
), bd = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.parentModel = t, this.ecModel = r, this.option = e;
    }
    return n.prototype.init = function(e, t, r) {
    }, n.prototype.mergeOption = function(e, t) {
      Je(this.option, e, !0);
    }, n.prototype.get = function(e, t) {
      return e == null ? this.option : this._doGet(this.parsePath(e), !t && this.parentModel);
    }, n.prototype.getShallow = function(e, t) {
      var r = this.option, i = r == null ? r : r[e];
      if (i == null && !t) {
        var o = this.parentModel;
        o && (i = o.getShallow(e));
      }
      return i;
    }, n.prototype.getModel = function(e, t) {
      var r = e != null, i = r ? this.parsePath(e) : null, o = r ? this._doGet(i) : this.option;
      return t = t || this.parentModel && this.parentModel.getModel(this.resolveParentPath(i)), new n(o, t, this.ecModel);
    }, n.prototype.isEmpty = function() {
      return this.option == null;
    }, n.prototype.restoreData = function() {
    }, n.prototype.clone = function() {
      var e = this.constructor;
      return new e(Re(this.option));
    }, n.prototype.parsePath = function(e) {
      return typeof e == "string" ? e.split(".") : e;
    }, n.prototype.resolveParentPath = function(e) {
      return e;
    }, n.prototype.isAnimationEnabled = function() {
      if (!ht.node && this.option) {
        if (this.option.animation != null)
          return !!this.option.animation;
        if (this.parentModel)
          return this.parentModel.isAnimationEnabled();
      }
    }, n.prototype._doGet = function(e, t) {
      var r = this.option;
      if (!e)
        return r;
      for (var i = 0; i < e.length && !(e[i] && (r = r && typeof r == "object" ? r[e[i]] : null, r == null)); i++)
        ;
      return r == null && t && (r = t._doGet(this.resolveParentPath(e), t.parentModel)), r;
    }, n;
  }()
);
WI(bd);
T1t(bd);
lr(bd, Swt);
lr(bd, Cwt);
lr(bd, D1t);
lr(bd, wwt);
const fn = bd;
var Awt = Math.round(Math.random() * 10);
function mv(n) {
  return [n || "", Awt++].join("_");
}
function Twt(n) {
  var e = {};
  n.registerSubTypeDefaulter = function(t, r) {
    var i = qa(t);
    e[i.main] = r;
  }, n.determineSubType = function(t, r) {
    var i = r.type;
    if (!i) {
      var o = qa(t).main;
      n.hasSubTypes(t) && e[o] && (i = e[o](r));
    }
    return i;
  };
}
function Pwt(n, e) {
  n.topologicalTravel = function(o, s, a, l) {
    if (!o.length)
      return;
    var u = t(s), c = u.graph, h = u.noEntryList, f = {};
    for (I(o, function(y) {
      f[y] = !0;
    }); h.length; ) {
      var d = h.pop(), p = c[d], g = !!f[d];
      g && (a.call(l, d, p.originalDeps.slice()), delete f[d]), I(p.successor, g ? m : v);
    }
    I(f, function() {
      var y = "";
      throw process.env.NODE_ENV !== "production" && (y = Fi("Circular dependency may exists: ", f, o, s)), new Error(y);
    });
    function v(y) {
      c[y].entryCount--, c[y].entryCount === 0 && h.push(y);
    }
    function m(y) {
      f[y] = !0, v(y);
    }
  };
  function t(o) {
    var s = {}, a = [];
    return I(o, function(l) {
      var u = r(s, l), c = u.originalDeps = e(l), h = i(c, o);
      u.entryCount = h.length, u.entryCount === 0 && a.push(l), I(h, function(f) {
        ot(u.predecessor, f) < 0 && u.predecessor.push(f);
        var d = r(s, f);
        ot(d.successor, f) < 0 && d.successor.push(l);
      });
    }), {
      graph: s,
      noEntryList: a
    };
  }
  function r(o, s) {
    return o[s] || (o[s] = {
      predecessor: [],
      successor: []
    }), o[s];
  }
  function i(o, s) {
    var a = [];
    return I(o, function(l) {
      ot(s, l) >= 0 && a.push(l);
    }), a;
  }
}
function oh(n, e) {
  return Je(Je({}, n, !0), e, !0);
}
const Ewt = {
  time: {
    month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
  },
  legend: {
    selector: {
      all: "All",
      inverse: "Inv"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "Box Select",
        polygon: "Lasso Select",
        lineX: "Horizontally Select",
        lineY: "Vertically Select",
        keep: "Keep Selections",
        clear: "Clear Selections"
      }
    },
    dataView: {
      title: "Data View",
      lang: ["Data View", "Close", "Refresh"]
    },
    dataZoom: {
      title: {
        zoom: "Zoom",
        back: "Zoom Reset"
      }
    },
    magicType: {
      title: {
        line: "Switch to Line Chart",
        bar: "Switch to Bar Chart",
        stack: "Stack",
        tiled: "Tile"
      }
    },
    restore: {
      title: "Restore"
    },
    saveAsImage: {
      title: "Save as Image",
      lang: ["Right Click to Save Image"]
    }
  },
  series: {
    typeNames: {
      pie: "Pie chart",
      bar: "Bar chart",
      line: "Line chart",
      scatter: "Scatter plot",
      effectScatter: "Ripple scatter plot",
      radar: "Radar chart",
      tree: "Tree",
      treemap: "Treemap",
      boxplot: "Boxplot",
      candlestick: "Candlestick",
      k: "K line chart",
      heatmap: "Heat map",
      map: "Map",
      parallel: "Parallel coordinate map",
      lines: "Line graph",
      graph: "Relationship graph",
      sankey: "Sankey diagram",
      funnel: "Funnel chart",
      gauge: "Gauge",
      pictorialBar: "Pictorial bar",
      themeRiver: "Theme River Map",
      sunburst: "Sunburst",
      custom: "Custom chart",
      chart: "Chart"
    }
  },
  aria: {
    general: {
      withTitle: 'This is a chart about "{title}"',
      withoutTitle: "This is a chart"
    },
    series: {
      single: {
        prefix: "",
        withName: " with type {seriesType} named {seriesName}.",
        withoutName: " with type {seriesType}."
      },
      multiple: {
        prefix: ". It consists of {seriesCount} series count.",
        withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
        withoutName: " The {seriesId} series is a {seriesType}.",
        separator: {
          middle: "",
          end: ""
        }
      }
    },
    data: {
      allData: "The data is as follows: ",
      partialData: "The first {displayCnt} items are: ",
      withName: "the data for {name} is {value}",
      withoutName: "{value}",
      separator: {
        middle: ", ",
        end: ". "
      }
    }
  }
}, kwt = {
  time: {
    month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
    dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
  },
  legend: {
    selector: {
      all: "全选",
      inverse: "反选"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "矩形选择",
        polygon: "圈选",
        lineX: "横向选择",
        lineY: "纵向选择",
        keep: "保持选择",
        clear: "清除选择"
      }
    },
    dataView: {
      title: "数据视图",
      lang: ["数据视图", "关闭", "刷新"]
    },
    dataZoom: {
      title: {
        zoom: "区域缩放",
        back: "区域缩放还原"
      }
    },
    magicType: {
      title: {
        line: "切换为折线图",
        bar: "切换为柱状图",
        stack: "切换为堆叠",
        tiled: "切换为平铺"
      }
    },
    restore: {
      title: "还原"
    },
    saveAsImage: {
      title: "保存为图片",
      lang: ["右键另存为图片"]
    }
  },
  series: {
    typeNames: {
      pie: "饼图",
      bar: "柱状图",
      line: "折线图",
      scatter: "散点图",
      effectScatter: "涟漪散点图",
      radar: "雷达图",
      tree: "树图",
      treemap: "矩形树图",
      boxplot: "箱型图",
      candlestick: "K线图",
      k: "K线图",
      heatmap: "热力图",
      map: "地图",
      parallel: "平行坐标图",
      lines: "线图",
      graph: "关系图",
      sankey: "桑基图",
      funnel: "漏斗图",
      gauge: "仪表盘图",
      pictorialBar: "象形柱图",
      themeRiver: "主题河流图",
      sunburst: "旭日图",
      custom: "自定义图表",
      chart: "图表"
    }
  },
  aria: {
    general: {
      withTitle: "这是一个关于“{title}”的图表。",
      withoutTitle: "这是一个图表，"
    },
    series: {
      single: {
        prefix: "",
        withName: "图表类型是{seriesType}，表示{seriesName}。",
        withoutName: "图表类型是{seriesType}。"
      },
      multiple: {
        prefix: "它由{seriesCount}个图表系列组成。",
        withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
        withoutName: "第{seriesId}个系列是一个{seriesType}，",
        separator: {
          middle: "；",
          end: "。"
        }
      }
    },
    data: {
      allData: "其数据是——",
      partialData: "其中，前{displayCnt}项是——",
      withName: "{name}的数据是{value}",
      withoutName: "{value}",
      separator: {
        middle: "，",
        end: ""
      }
    }
  }
};
var Kx = "ZH", oR = "EN", $p = oR, Cw = {}, sR = {}, wJ = ht.domSupported ? function() {
  var n = (
    /* eslint-disable-next-line */
    (document.documentElement.lang || navigator.language || navigator.browserLanguage || $p).toUpperCase()
  );
  return n.indexOf(Kx) > -1 ? Kx : $p;
}() : $p;
function xJ(n, e) {
  n = n.toUpperCase(), sR[n] = new fn(e), Cw[n] = e;
}
function Mwt(n) {
  if (be(n)) {
    var e = Cw[n.toUpperCase()] || {};
    return n === Kx || n === oR ? Re(e) : Je(Re(e), Re(Cw[$p]), !1);
  } else
    return Je(Re(n), Re(Cw[$p]), !1);
}
function cM(n) {
  return sR[n];
}
function Dwt() {
  return sR[$p];
}
xJ(oR, Ewt);
xJ(Kx, kwt);
var aR = 1e3, lR = aR * 60, by = lR * 60, cs = by * 24, Lz = cs * 365, Lm = {
  year: "{yyyy}",
  month: "{MMM}",
  day: "{d}",
  hour: "{HH}:{mm}",
  minute: "{HH}:{mm}",
  second: "{HH}:{mm}:{ss}",
  millisecond: "{HH}:{mm}:{ss} {SSS}",
  none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
}, J1 = "{yyyy}-{MM}-{dd}", Iz = {
  year: "{yyyy}",
  month: "{yyyy}-{MM}",
  day: J1,
  hour: J1 + " " + Lm.hour,
  minute: J1 + " " + Lm.minute,
  second: J1 + " " + Lm.second,
  millisecond: Lm.none
}, LA = ["year", "month", "day", "hour", "minute", "second", "millisecond"], SJ = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
function Cu(n, e) {
  return n += "", "0000".substr(0, e - n.length) + n;
}
function Np(n) {
  switch (n) {
    case "half-year":
    case "quarter":
      return "month";
    case "week":
    case "half-week":
      return "day";
    case "half-day":
    case "quarter-day":
      return "hour";
    default:
      return n;
  }
}
function Lwt(n) {
  return n === Np(n);
}
function Iwt(n) {
  switch (n) {
    case "year":
    case "month":
      return "day";
    case "millisecond":
      return "millisecond";
    default:
      return "second";
  }
}
function lC(n, e, t, r) {
  var i = gl(n), o = i[uR(t)](), s = i[Bp(t)]() + 1, a = Math.floor((s - 1) / 3) + 1, l = i[uC(t)](), u = i["get" + (t ? "UTC" : "") + "Day"](), c = i[x0(t)](), h = (c - 1) % 12 + 1, f = i[cC(t)](), d = i[hC(t)](), p = i[fC(t)](), g = r instanceof fn ? r : cM(r || wJ) || Dwt(), v = g.getModel("time"), m = v.get("month"), y = v.get("monthAbbr"), b = v.get("dayOfWeek"), O = v.get("dayOfWeekAbbr");
  return (e || "").replace(/{yyyy}/g, o + "").replace(/{yy}/g, Cu(o % 100 + "", 2)).replace(/{Q}/g, a + "").replace(/{MMMM}/g, m[s - 1]).replace(/{MMM}/g, y[s - 1]).replace(/{MM}/g, Cu(s, 2)).replace(/{M}/g, s + "").replace(/{dd}/g, Cu(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, b[u]).replace(/{ee}/g, O[u]).replace(/{e}/g, u + "").replace(/{HH}/g, Cu(c, 2)).replace(/{H}/g, c + "").replace(/{hh}/g, Cu(h + "", 2)).replace(/{h}/g, h + "").replace(/{mm}/g, Cu(f, 2)).replace(/{m}/g, f + "").replace(/{ss}/g, Cu(d, 2)).replace(/{s}/g, d + "").replace(/{SSS}/g, Cu(p, 3)).replace(/{S}/g, p + "");
}
function Rwt(n, e, t, r, i) {
  var o = null;
  if (be(t))
    o = t;
  else if (Pe(t))
    o = t(n.value, e, {
      level: n.level
    });
  else {
    var s = te({}, Lm);
    if (n.level > 0)
      for (var a = 0; a < LA.length; ++a)
        s[LA[a]] = "{primary|" + s[LA[a]] + "}";
    var l = t ? t.inherit === !1 ? t : Le(t, s) : s, u = _J(n.value, i);
    if (l[u])
      o = l[u];
    else if (l.inherit) {
      for (var c = SJ.indexOf(u), a = c - 1; a >= 0; --a)
        if (l[u]) {
          o = l[u];
          break;
        }
      o = o || s.none;
    }
    if (oe(o)) {
      var h = n.level == null ? 0 : n.level >= 0 ? n.level : o.length + n.level;
      h = Math.min(h, o.length - 1), o = o[h];
    }
  }
  return lC(new Date(n.value), o, i, r);
}
function _J(n, e) {
  var t = gl(n), r = t[Bp(e)]() + 1, i = t[uC(e)](), o = t[x0(e)](), s = t[cC(e)](), a = t[hC(e)](), l = t[fC(e)](), u = l === 0, c = u && a === 0, h = c && s === 0, f = h && o === 0, d = f && i === 1, p = d && r === 1;
  return p ? "year" : d ? "month" : f ? "day" : h ? "hour" : c ? "minute" : u ? "second" : "millisecond";
}
function Rz(n, e, t) {
  var r = Tt(n) ? gl(n) : n;
  switch (e = e || _J(n, t), e) {
    case "year":
      return r[uR(t)]();
    case "half-year":
      return r[Bp(t)]() >= 6 ? 1 : 0;
    case "quarter":
      return Math.floor((r[Bp(t)]() + 1) / 4);
    case "month":
      return r[Bp(t)]();
    case "day":
      return r[uC(t)]();
    case "half-day":
      return r[x0(t)]() / 24;
    case "hour":
      return r[x0(t)]();
    case "minute":
      return r[cC(t)]();
    case "second":
      return r[hC(t)]();
    case "millisecond":
      return r[fC(t)]();
  }
}
function uR(n) {
  return n ? "getUTCFullYear" : "getFullYear";
}
function Bp(n) {
  return n ? "getUTCMonth" : "getMonth";
}
function uC(n) {
  return n ? "getUTCDate" : "getDate";
}
function x0(n) {
  return n ? "getUTCHours" : "getHours";
}
function cC(n) {
  return n ? "getUTCMinutes" : "getMinutes";
}
function hC(n) {
  return n ? "getUTCSeconds" : "getSeconds";
}
function fC(n) {
  return n ? "getUTCMilliseconds" : "getMilliseconds";
}
function $wt(n) {
  return n ? "setUTCFullYear" : "setFullYear";
}
function CJ(n) {
  return n ? "setUTCMonth" : "setMonth";
}
function AJ(n) {
  return n ? "setUTCDate" : "setDate";
}
function TJ(n) {
  return n ? "setUTCHours" : "setHours";
}
function PJ(n) {
  return n ? "setUTCMinutes" : "setMinutes";
}
function EJ(n) {
  return n ? "setUTCSeconds" : "setSeconds";
}
function kJ(n) {
  return n ? "setUTCMilliseconds" : "setMilliseconds";
}
function MJ(n) {
  if (!FI(n))
    return be(n) ? n : "-";
  var e = (n + "").split(".");
  return e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e.length > 1 ? "." + e[1] : "");
}
function DJ(n, e) {
  return n = (n || "").toLowerCase().replace(/-(.)/g, function(t, r) {
    return r.toUpperCase();
  }), e && n && (n = n.charAt(0).toUpperCase() + n.slice(1)), n;
}
var yv = LI;
function hM(n, e, t) {
  var r = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}";
  function i(c) {
    return c && Ys(c) ? c : "-";
  }
  function o(c) {
    return !!(c != null && !isNaN(c) && isFinite(c));
  }
  var s = e === "time", a = n instanceof Date;
  if (s || a) {
    var l = s ? gl(n) : n;
    if (isNaN(+l)) {
      if (a)
        return "-";
    } else
      return lC(l, r, t);
  }
  if (e === "ordinal")
    return $x(n) ? i(n) : Tt(n) && o(n) ? n + "" : "-";
  var u = ou(n);
  return o(u) ? MJ(u) : $x(n) ? i(n) : typeof n == "boolean" ? n + "" : "-";
}
var $z = ["a", "b", "c", "d", "e", "f", "g"], IA = function(n, e) {
  return "{" + n + (e ?? "") + "}";
};
function LJ(n, e, t) {
  oe(e) || (e = [e]);
  var r = e.length;
  if (!r)
    return "";
  for (var i = e[0].$vars || [], o = 0; o < i.length; o++) {
    var s = $z[o];
    n = n.replace(IA(s), IA(s, 0));
  }
  for (var a = 0; a < r; a++)
    for (var l = 0; l < i.length; l++) {
      var u = e[a][i[l]];
      n = n.replace(IA($z[l], a), t ? no(u) : u);
    }
  return n;
}
function Nwt(n, e, t) {
  return I(e, function(r, i) {
    n = n.replace("{" + i + "}", t ? no(r) : r);
  }), n;
}
function Bwt(n, e) {
  var t = be(n) ? {
    color: n,
    extraCssText: e
  } : n || {}, r = t.color, i = t.type;
  e = t.extraCssText;
  var o = t.renderMode || "html";
  if (!r)
    return "";
  if (o === "html")
    return i === "subItem" ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + no(r) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + no(r) + ";" + (e || "") + '"></span>';
  var s = t.markerId || "markerX";
  return {
    renderMode: o,
    content: "{" + s + "|}  ",
    style: i === "subItem" ? {
      width: 4,
      height: 4,
      borderRadius: 2,
      backgroundColor: r
    } : {
      width: 10,
      height: 10,
      borderRadius: 5,
      backgroundColor: r
    }
  };
}
function od(n, e) {
  return e = e || "transparent", be(n) ? n : Me(n) && n.colorStops && (n.colorStops[0] || {}).color || e;
}
function Jx(n, e) {
  if (e === "_blank" || e === "blank") {
    var t = window.open();
    t.opener = null, t.location.href = n;
  } else
    window.open(n, e);
}
var Aw = I, IJ = ["left", "right", "top", "bottom", "width", "height"], ff = [["width", "left", "right"], ["height", "top", "bottom"]];
function cR(n, e, t, r, i) {
  var o = 0, s = 0;
  r == null && (r = 1 / 0), i == null && (i = 1 / 0);
  var a = 0;
  e.eachChild(function(l, u) {
    var c = l.getBoundingRect(), h = e.childAt(u + 1), f = h && h.getBoundingRect(), d, p;
    if (n === "horizontal") {
      var g = c.width + (f ? -f.x + c.x : 0);
      d = o + g, d > r || l.newline ? (o = 0, d = g, s += a + t, a = c.height) : a = Math.max(a, c.height);
    } else {
      var v = c.height + (f ? -f.y + c.y : 0);
      p = s + v, p > i || l.newline ? (o += a + t, s = 0, p = v, a = c.width) : a = Math.max(a, c.width);
    }
    l.newline || (l.x = o, l.y = s, l.markRedraw(), n === "horizontal" ? o = d + t : s = p + t);
  });
}
var If = cR;
je(cR, "vertical");
je(cR, "horizontal");
function Vwt(n, e, t) {
  var r = e.width, i = e.height, o = fe(n.left, r), s = fe(n.top, i), a = fe(n.right, r), l = fe(n.bottom, i);
  return (isNaN(o) || isNaN(parseFloat(n.left))) && (o = 0), (isNaN(a) || isNaN(parseFloat(n.right))) && (a = r), (isNaN(s) || isNaN(parseFloat(n.top))) && (s = 0), (isNaN(l) || isNaN(parseFloat(n.bottom))) && (l = i), t = yv(t || 0), {
    width: Math.max(a - o - t[1] - t[3], 0),
    height: Math.max(l - s - t[0] - t[2], 0)
  };
}
function mr(n, e, t) {
  t = yv(t || 0);
  var r = e.width, i = e.height, o = fe(n.left, r), s = fe(n.top, i), a = fe(n.right, r), l = fe(n.bottom, i), u = fe(n.width, r), c = fe(n.height, i), h = t[2] + t[0], f = t[1] + t[3], d = n.aspect;
  switch (isNaN(u) && (u = r - a - f - o), isNaN(c) && (c = i - l - h - s), d != null && (isNaN(u) && isNaN(c) && (d > r / i ? u = r * 0.8 : c = i * 0.8), isNaN(u) && (u = d * c), isNaN(c) && (c = u / d)), isNaN(o) && (o = r - a - u - f), isNaN(s) && (s = i - l - c - h), n.left || n.right) {
    case "center":
      o = r / 2 - u / 2 - t[3];
      break;
    case "right":
      o = r - u - f;
      break;
  }
  switch (n.top || n.bottom) {
    case "middle":
    case "center":
      s = i / 2 - c / 2 - t[0];
      break;
    case "bottom":
      s = i - c - h;
      break;
  }
  o = o || 0, s = s || 0, isNaN(u) && (u = r - f - o - (a || 0)), isNaN(c) && (c = i - h - s - (l || 0));
  var p = new et(o + t[3], s + t[0], u, c);
  return p.margin = t, p;
}
function dC(n, e, t, r, i, o) {
  var s = !i || !i.hv || i.hv[0], a = !i || !i.hv || i.hv[1], l = i && i.boundingMode || "all";
  if (o = o || n, o.x = n.x, o.y = n.y, !s && !a)
    return !1;
  var u;
  if (l === "raw")
    u = n.type === "group" ? new et(0, 0, +e.width || 0, +e.height || 0) : n.getBoundingRect();
  else if (u = n.getBoundingRect(), n.needLocalTransform()) {
    var c = n.getLocalTransform();
    u = u.clone(), u.applyTransform(c);
  }
  var h = mr(Le({
    width: u.width,
    height: u.height
  }, e), t, r), f = s ? h.x - u.x : 0, d = a ? h.y - u.y : 0;
  return l === "raw" ? (o.x = f, o.y = d) : (o.x += f, o.y += d), o === n && n.markRedraw(), !0;
}
function zwt(n, e) {
  return n[ff[e][0]] != null || n[ff[e][1]] != null && n[ff[e][2]] != null;
}
function S0(n) {
  var e = n.layoutMode || n.constructor.layoutMode;
  return Me(e) ? e : e ? {
    type: e
  } : null;
}
function zc(n, e, t) {
  var r = t && t.ignoreSize;
  !oe(r) && (r = [r, r]);
  var i = s(ff[0], 0), o = s(ff[1], 1);
  u(ff[0], n, i), u(ff[1], n, o);
  function s(c, h) {
    var f = {}, d = 0, p = {}, g = 0, v = 2;
    if (Aw(c, function(b) {
      p[b] = n[b];
    }), Aw(c, function(b) {
      a(e, b) && (f[b] = p[b] = e[b]), l(f, b) && d++, l(p, b) && g++;
    }), r[h])
      return l(e, c[1]) ? p[c[2]] = null : l(e, c[2]) && (p[c[1]] = null), p;
    if (g === v || !d)
      return p;
    if (d >= v)
      return f;
    for (var m = 0; m < c.length; m++) {
      var y = c[m];
      if (!a(f, y) && a(n, y)) {
        f[y] = n[y];
        break;
      }
    }
    return f;
  }
  function a(c, h) {
    return c.hasOwnProperty(h);
  }
  function l(c, h) {
    return c[h] != null && c[h] !== "auto";
  }
  function u(c, h, f) {
    Aw(c, function(d) {
      h[d] = f[d];
    });
  }
}
function bv(n) {
  return RJ({}, n);
}
function RJ(n, e) {
  return e && n && Aw(IJ, function(t) {
    e.hasOwnProperty(t) && (n[t] = e[t]);
  }), n;
}
var Fwt = Ct(), Ov = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this, t, r, i) || this;
      return o.uid = mv("ec_cpt_model"), o;
    }
    return e.prototype.init = function(t, r, i) {
      this.mergeDefaultAndTheme(t, i);
    }, e.prototype.mergeDefaultAndTheme = function(t, r) {
      var i = S0(this), o = i ? bv(t) : {}, s = r.getTheme();
      Je(t, s.get(this.mainType)), Je(t, this.getDefaultOption()), i && zc(t, o, i);
    }, e.prototype.mergeOption = function(t, r) {
      Je(this.option, t, !0);
      var i = S0(this);
      i && zc(this.option, t, i);
    }, e.prototype.optionUpdated = function(t, r) {
    }, e.prototype.getDefaultOption = function() {
      var t = this.constructor;
      if (!_1t(t))
        return t.defaultOption;
      var r = Fwt(this);
      if (!r.defaultOption) {
        for (var i = [], o = t; o; ) {
          var s = o.prototype.defaultOption;
          s && i.push(s), o = o.superClass;
        }
        for (var a = {}, l = i.length - 1; l >= 0; l--)
          a = Je(a, i[l], !0);
        r.defaultOption = a;
      }
      return r.defaultOption;
    }, e.prototype.getReferringComponents = function(t, r) {
      var i = t + "Index", o = t + "Id";
      return xb(this.ecModel, t, {
        index: this.get(i, !0),
        id: this.get(o, !0)
      }, r);
    }, e.prototype.getBoxLayoutParams = function() {
      var t = this;
      return {
        left: t.get("left"),
        top: t.get("top"),
        right: t.get("right"),
        bottom: t.get("bottom"),
        width: t.get("width"),
        height: t.get("height")
      };
    }, e.prototype.getZLevelKey = function() {
      return "";
    }, e.prototype.setZLevel = function(t) {
      this.option.zlevel = t;
    }, e.protoInitialize = function() {
      var t = e.prototype;
      t.type = "component", t.id = "", t.name = "", t.mainType = "", t.subType = "", t.componentIndex = 0;
    }(), e;
  }(fn)
);
AK(Ov, fn);
U_(Ov);
Twt(Ov);
Pwt(Ov, Qwt);
function Qwt(n) {
  var e = [];
  return I(Ov.getClassesByMainType(n), function(t) {
    e = e.concat(t.dependencies || t.prototype.dependencies || []);
  }), e = ae(e, function(t) {
    return qa(t).main;
  }), n !== "dataset" && ot(e, "dataset") <= 0 && e.unshift("dataset"), e;
}
const Ot = Ov;
var $J = "";
typeof navigator < "u" && ($J = navigator.platform || "");
var Zd = "rgba(0, 0, 0, 0.2)";
const Zwt = {
  darkMode: "auto",
  // backgroundColor: 'rgba(0,0,0,0)',
  colorBy: "series",
  color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
  gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
  aria: {
    decal: {
      decals: [{
        color: Zd,
        dashArrayX: [1, 0],
        dashArrayY: [2, 5],
        symbolSize: 1,
        rotation: Math.PI / 6
      }, {
        color: Zd,
        symbol: "circle",
        dashArrayX: [[8, 8], [0, 8, 8, 0]],
        dashArrayY: [6, 0],
        symbolSize: 0.8
      }, {
        color: Zd,
        dashArrayX: [1, 0],
        dashArrayY: [4, 3],
        rotation: -Math.PI / 4
      }, {
        color: Zd,
        dashArrayX: [[6, 6], [0, 6, 6, 0]],
        dashArrayY: [6, 0]
      }, {
        color: Zd,
        dashArrayX: [[1, 0], [1, 6]],
        dashArrayY: [1, 0, 6, 0],
        rotation: Math.PI / 4
      }, {
        color: Zd,
        symbol: "triangle",
        dashArrayX: [[9, 9], [0, 9, 9, 0]],
        dashArrayY: [7, 2],
        symbolSize: 0.75
      }]
    }
  },
  // If xAxis and yAxis declared, grid is created by default.
  // grid: {},
  textStyle: {
    // color: '#000',
    // decoration: 'none',
    // PENDING
    fontFamily: $J.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
    // fontFamily: 'Arial, Verdana, sans-serif',
    fontSize: 12,
    fontStyle: "normal",
    fontWeight: "normal"
  },
  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
  // Default is source-over
  blendMode: null,
  stateAnimation: {
    duration: 300,
    easing: "cubicOut"
  },
  animation: "auto",
  animationDuration: 1e3,
  animationDurationUpdate: 500,
  animationEasing: "cubicInOut",
  animationEasingUpdate: "cubicInOut",
  animationThreshold: 2e3,
  // Configuration for progressive/incremental rendering
  progressiveThreshold: 3e3,
  progressive: 400,
  // Threshold of if use single hover layer to optimize.
  // It is recommended that `hoverLayerThreshold` is equivalent to or less than
  // `progressiveThreshold`, otherwise hover will cause restart of progressive,
  // which is unexpected.
  // see example <echarts/test/heatmap-large.html>.
  hoverLayerThreshold: 3e3,
  // See: module:echarts/scale/Time
  useUTC: !1
};
var fM = _e(["tooltip", "label", "itemName", "itemId", "itemGroupId", "itemChildGroupId", "seriesName"]), Es = "original", Ci = "arrayRows", ks = "objectRows", _l = "keyedColumns", Hl = "typedArray", NJ = "unknown", rl = "column", wv = "row", jr = {
  Must: 1,
  Might: 2,
  Not: 3
  // Other cases
}, BJ = Ct();
function Wwt(n) {
  BJ(n).datasetMap = _e();
}
function VJ(n, e, t) {
  var r = {}, i = fR(e);
  if (!i || !n)
    return r;
  var o = [], s = [], a = e.ecModel, l = BJ(a).datasetMap, u = i.uid + "_" + t.seriesLayoutBy, c, h;
  n = n.slice(), I(n, function(g, v) {
    var m = Me(g) ? g : n[v] = {
      name: g
    };
    m.type === "ordinal" && c == null && (c = v, h = p(m)), r[m.name] = [];
  });
  var f = l.get(u) || l.set(u, {
    categoryWayDim: h,
    valueWayDim: 0
  });
  I(n, function(g, v) {
    var m = g.name, y = p(g);
    if (c == null) {
      var b = f.valueWayDim;
      d(r[m], b, y), d(s, b, y), f.valueWayDim += y;
    } else if (c === v)
      d(r[m], 0, y), d(o, 0, y);
    else {
      var b = f.categoryWayDim;
      d(r[m], b, y), d(s, b, y), f.categoryWayDim += y;
    }
  });
  function d(g, v, m) {
    for (var y = 0; y < m; y++)
      g.push(v + y);
  }
  function p(g) {
    var v = g.dimsDef;
    return v ? v.length : 1;
  }
  return o.length && (r.itemName = o), s.length && (r.seriesName = s), r;
}
function hR(n, e, t) {
  var r = {}, i = fR(n);
  if (!i)
    return r;
  var o = e.sourceFormat, s = e.dimensionsDefine, a;
  (o === ks || o === _l) && I(s, function(c, h) {
    (Me(c) ? c.name : c) === "name" && (a = h);
  });
  var l = function() {
    for (var c = {}, h = {}, f = [], d = 0, p = Math.min(5, t); d < p; d++) {
      var g = FJ(e.data, o, e.seriesLayoutBy, s, e.startIndex, d);
      f.push(g);
      var v = g === jr.Not;
      if (v && c.v == null && d !== a && (c.v = d), (c.n == null || c.n === c.v || !v && f[c.n] === jr.Not) && (c.n = d), m(c) && f[c.n] !== jr.Not)
        return c;
      v || (g === jr.Might && h.v == null && d !== a && (h.v = d), (h.n == null || h.n === h.v) && (h.n = d));
    }
    function m(y) {
      return y.v != null && y.n != null;
    }
    return m(c) ? c : m(h) ? h : null;
  }();
  if (l) {
    r.value = [l.v];
    var u = a ?? l.n;
    r.itemName = [u], r.seriesName = [u];
  }
  return r;
}
function fR(n) {
  var e = n.get("data", !0);
  if (!e)
    return xb(n.ecModel, "dataset", {
      index: n.get("datasetIndex", !0),
      id: n.get("datasetId", !0)
    }, nr).models[0];
}
function Gwt(n) {
  return !n.get("transform", !0) && !n.get("fromTransformResult", !0) ? [] : xb(n.ecModel, "dataset", {
    index: n.get("fromDatasetIndex", !0),
    id: n.get("fromDatasetId", !0)
  }, nr).models;
}
function zJ(n, e) {
  return FJ(n.data, n.sourceFormat, n.seriesLayoutBy, n.dimensionsDefine, n.startIndex, e);
}
function FJ(n, e, t, r, i, o) {
  var s, a = 5;
  if (zi(n))
    return jr.Not;
  var l, u;
  if (r) {
    var c = r[o];
    Me(c) ? (l = c.name, u = c.type) : be(c) && (l = c);
  }
  if (u != null)
    return u === "ordinal" ? jr.Must : jr.Not;
  if (e === Ci) {
    var h = n;
    if (t === wv) {
      for (var f = h[o], d = 0; d < (f || []).length && d < a; d++)
        if ((s = O(f[i + d])) != null)
          return s;
    } else
      for (var d = 0; d < h.length && d < a; d++) {
        var p = h[i + d];
        if (p && (s = O(p[o])) != null)
          return s;
      }
  } else if (e === ks) {
    var g = n;
    if (!l)
      return jr.Not;
    for (var d = 0; d < g.length && d < a; d++) {
      var v = g[d];
      if (v && (s = O(v[l])) != null)
        return s;
    }
  } else if (e === _l) {
    var m = n;
    if (!l)
      return jr.Not;
    var f = m[l];
    if (!f || zi(f))
      return jr.Not;
    for (var d = 0; d < f.length && d < a; d++)
      if ((s = O(f[d])) != null)
        return s;
  } else if (e === Es)
    for (var y = n, d = 0; d < y.length && d < a; d++) {
      var v = y[d], b = fv(v);
      if (!oe(b))
        return jr.Not;
      if ((s = O(b[o])) != null)
        return s;
    }
  function O(w) {
    var x = be(w);
    if (w != null && isFinite(w) && w !== "")
      return x ? jr.Might : jr.Not;
    if (x && w !== "-")
      return jr.Must;
  }
  return jr.Not;
}
var dM = _e();
function jwt(n, e) {
  De(dM.get(n) == null && e), dM.set(n, e);
}
function Hwt(n, e, t) {
  var r = dM.get(e);
  if (!r)
    return t;
  var i = r(n);
  if (!i)
    return t;
  if (process.env.NODE_ENV !== "production")
    for (var o = 0; o < i.length; o++)
      De(Mg(i[o]));
  return t.concat(i);
}
var Nz = Ct(), qwt = Ct(), dR = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getColorFromPalette = function(e, t, r) {
      var i = Kt(this.get("color", !0)), o = this.get("colorLayer", !0);
      return QJ(this, Nz, i, o, e, t, r);
    }, n.prototype.clearColorPalette = function() {
      Xwt(this, Nz);
    }, n;
  }()
);
function pM(n, e, t, r) {
  var i = Kt(n.get(["aria", "decal", "decals"]));
  return QJ(n, qwt, i, null, e, t, r);
}
function Ywt(n, e) {
  for (var t = n.length, r = 0; r < t; r++)
    if (n[r].length > e)
      return n[r];
  return n[t - 1];
}
function QJ(n, e, t, r, i, o, s) {
  o = o || n;
  var a = e(o), l = a.paletteIdx || 0, u = a.paletteNameMap = a.paletteNameMap || {};
  if (u.hasOwnProperty(i))
    return u[i];
  var c = s == null || !r ? t : Ywt(r, s);
  if (c = c || t, !(!c || !c.length)) {
    var h = c[l];
    return i && (u[i] = h), a.paletteIdx = (l + 1) % c.length, h;
  }
}
function Xwt(n, e) {
  e(n).paletteIdx = 0, e(n).paletteNameMap = {};
}
var eO, qv, Bz, RA = "\0_ec_inner", Vz = 1, Uwt = {
  grid: "GridComponent",
  polar: "PolarComponent",
  geo: "GeoComponent",
  singleAxis: "SingleAxisComponent",
  parallel: "ParallelComponent",
  calendar: "CalendarComponent",
  graphic: "GraphicComponent",
  toolbox: "ToolboxComponent",
  tooltip: "TooltipComponent",
  axisPointer: "AxisPointerComponent",
  brush: "BrushComponent",
  title: "TitleComponent",
  timeline: "TimelineComponent",
  markPoint: "MarkPointComponent",
  markLine: "MarkLineComponent",
  markArea: "MarkAreaComponent",
  legend: "LegendComponent",
  dataZoom: "DataZoomComponent",
  visualMap: "VisualMapComponent",
  // aria: 'AriaComponent',
  // dataset: 'DatasetComponent',
  // Dependencies
  xAxis: "GridComponent",
  yAxis: "GridComponent",
  angleAxis: "PolarComponent",
  radiusAxis: "PolarComponent"
}, Kwt = {
  line: "LineChart",
  bar: "BarChart",
  pie: "PieChart",
  scatter: "ScatterChart",
  radar: "RadarChart",
  map: "MapChart",
  tree: "TreeChart",
  treemap: "TreemapChart",
  graph: "GraphChart",
  gauge: "GaugeChart",
  funnel: "FunnelChart",
  parallel: "ParallelChart",
  sankey: "SankeyChart",
  boxplot: "BoxplotChart",
  candlestick: "CandlestickChart",
  effectScatter: "EffectScatterChart",
  lines: "LinesChart",
  heatmap: "HeatmapChart",
  pictorialBar: "PictorialBarChart",
  themeRiver: "ThemeRiverChart",
  sunburst: "SunburstChart",
  custom: "CustomChart"
}, eS = {};
function Jwt(n) {
  I(n, function(e, t) {
    if (!Ot.hasClass(t)) {
      var r = Uwt[t];
      r && !eS[r] && (li("Component " + t + ` is used but not imported.
import { ` + r + ` } from 'echarts/components';
echarts.use([` + r + "]);"), eS[r] = !0);
    }
  });
}
var pR = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.init = function(t, r, i, o, s, a) {
      o = o || {}, this.option = null, this._theme = new fn(o), this._locale = new fn(s), this._optionManager = a;
    }, e.prototype.setOption = function(t, r, i) {
      process.env.NODE_ENV !== "production" && (De(t != null, "option is null/undefined"), De(t[RA] !== Vz, "please use chart.getOption()"));
      var o = Qz(r);
      this._optionManager.setOption(t, i, o), this._resetOption(null, o);
    }, e.prototype.resetOption = function(t, r) {
      return this._resetOption(t, Qz(r));
    }, e.prototype._resetOption = function(t, r) {
      var i = !1, o = this._optionManager;
      if (!t || t === "recreate") {
        var s = o.mountOption(t === "recreate");
        process.env.NODE_ENV !== "production" && Jwt(s), !this.option || t === "recreate" ? Bz(this, s) : (this.restoreData(), this._mergeOption(s, r)), i = !0;
      }
      if ((t === "timeline" || t === "media") && this.restoreData(), !t || t === "recreate" || t === "timeline") {
        var a = o.getTimelineOption(this);
        a && (i = !0, this._mergeOption(a, r));
      }
      if (!t || t === "recreate" || t === "media") {
        var l = o.getMediaOption(this);
        l.length && I(l, function(u) {
          i = !0, this._mergeOption(u, r);
        }, this);
      }
      return i;
    }, e.prototype.mergeOption = function(t) {
      this._mergeOption(t, null);
    }, e.prototype._mergeOption = function(t, r) {
      var i = this.option, o = this._componentsMap, s = this._componentsCount, a = [], l = _e(), u = r && r.replaceMergeMainTypeMap;
      Wwt(this), I(t, function(h, f) {
        h != null && (Ot.hasClass(f) ? f && (a.push(f), l.set(f, !0)) : i[f] = i[f] == null ? Re(h) : Je(i[f], h, !0));
      }), u && u.each(function(h, f) {
        Ot.hasClass(f) && !l.get(f) && (a.push(f), l.set(f, !0));
      }), Ot.topologicalTravel(a, Ot.getAllClassMainTypes(), c, this);
      function c(h) {
        var f = Hwt(this, h, Kt(t[h])), d = o.get(h), p = (
          // `!oldCmptList` means init. See the comment in `mappingToExists`
          d ? u && u.get(h) ? "replaceMerge" : "normalMerge" : "replaceAll"
        ), g = wK(d, f, p);
        g1t(g, h, Ot), i[h] = null, o.set(h, null), s.set(h, 0);
        var v = [], m = [], y = 0, b, O;
        I(g, function(w, x) {
          var S = w.existing, _ = w.newOption;
          if (!_)
            S && (S.mergeOption({}, this), S.optionUpdated({}, !1));
          else {
            var C = h === "series", A = Ot.getClass(
              h,
              w.keyInfo.subType,
              !C
              // Give a more detailed warn later if series don't exists
            );
            if (!A) {
              if (process.env.NODE_ENV !== "production") {
                var T = w.keyInfo.subType, k = Kwt[T];
                eS[T] || (eS[T] = !0, li(k ? "Series " + T + ` is used but not imported.
import { ` + k + ` } from 'echarts/charts';
echarts.use([` + k + "]);" : "Unknown series " + T));
              }
              return;
            }
            if (h === "tooltip") {
              if (b) {
                process.env.NODE_ENV !== "production" && (O || (En("Currently only one tooltip component is allowed."), O = !0));
                return;
              }
              b = !0;
            }
            if (S && S.constructor === A)
              S.name = w.keyInfo.name, S.mergeOption(_, this), S.optionUpdated(_, !1);
            else {
              var L = te({
                componentIndex: x
              }, w.keyInfo);
              S = new A(_, this, this, L), te(S, L), w.brandNew && (S.__requireNewView = !0), S.init(_, this, this), S.optionUpdated(null, !0);
            }
          }
          S ? (v.push(S.option), m.push(S), y++) : (v.push(void 0), m.push(void 0));
        }, this), i[h] = v, o.set(h, m), s.set(h, y), h === "series" && eO(this);
      }
      this._seriesIndices || eO(this);
    }, e.prototype.getOption = function() {
      var t = Re(this.option);
      return I(t, function(r, i) {
        if (Ot.hasClass(i)) {
          for (var o = Kt(r), s = o.length, a = !1, l = s - 1; l >= 0; l--)
            o[l] && !Mg(o[l]) ? a = !0 : (o[l] = null, !a && s--);
          o.length = s, t[i] = o;
        }
      }), delete t[RA], t;
    }, e.prototype.getTheme = function() {
      return this._theme;
    }, e.prototype.getLocaleModel = function() {
      return this._locale;
    }, e.prototype.setUpdatePayload = function(t) {
      this._payload = t;
    }, e.prototype.getUpdatePayload = function() {
      return this._payload;
    }, e.prototype.getComponent = function(t, r) {
      var i = this._componentsMap.get(t);
      if (i) {
        var o = i[r || 0];
        if (o)
          return o;
        if (r == null) {
          for (var s = 0; s < i.length; s++)
            if (i[s])
              return i[s];
        }
      }
    }, e.prototype.queryComponents = function(t) {
      var r = t.mainType;
      if (!r)
        return [];
      var i = t.index, o = t.id, s = t.name, a = this._componentsMap.get(r);
      if (!a || !a.length)
        return [];
      var l;
      return i != null ? (l = [], I(Kt(i), function(u) {
        a[u] && l.push(a[u]);
      })) : o != null ? l = zz("id", o, a) : s != null ? l = zz("name", s, a) : l = Gt(a, function(u) {
        return !!u;
      }), Fz(l, t);
    }, e.prototype.findComponents = function(t) {
      var r = t.query, i = t.mainType, o = a(r), s = o ? this.queryComponents(o) : Gt(this._componentsMap.get(i), function(u) {
        return !!u;
      });
      return l(Fz(s, t));
      function a(u) {
        var c = i + "Index", h = i + "Id", f = i + "Name";
        return u && (u[c] != null || u[h] != null || u[f] != null) ? {
          mainType: i,
          // subType will be filtered finally.
          index: u[c],
          id: u[h],
          name: u[f]
        } : null;
      }
      function l(u) {
        return t.filter ? Gt(u, t.filter) : u;
      }
    }, e.prototype.eachComponent = function(t, r, i) {
      var o = this._componentsMap;
      if (Pe(t)) {
        var s = r, a = t;
        o.each(function(h, f) {
          for (var d = 0; h && d < h.length; d++) {
            var p = h[d];
            p && a.call(s, f, p, p.componentIndex);
          }
        });
      } else
        for (var l = be(t) ? o.get(t) : Me(t) ? this.findComponents(t) : null, u = 0; l && u < l.length; u++) {
          var c = l[u];
          c && r.call(i, c, c.componentIndex);
        }
    }, e.prototype.getSeriesByName = function(t) {
      var r = dr(t, null);
      return Gt(this._componentsMap.get("series"), function(i) {
        return !!i && r != null && i.name === r;
      });
    }, e.prototype.getSeriesByIndex = function(t) {
      return this._componentsMap.get("series")[t];
    }, e.prototype.getSeriesByType = function(t) {
      return Gt(this._componentsMap.get("series"), function(r) {
        return !!r && r.subType === t;
      });
    }, e.prototype.getSeries = function() {
      return Gt(this._componentsMap.get("series"), function(t) {
        return !!t;
      });
    }, e.prototype.getSeriesCount = function() {
      return this._componentsCount.get("series");
    }, e.prototype.eachSeries = function(t, r) {
      qv(this), I(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        t.call(r, o, i);
      }, this);
    }, e.prototype.eachRawSeries = function(t, r) {
      I(this._componentsMap.get("series"), function(i) {
        i && t.call(r, i, i.componentIndex);
      });
    }, e.prototype.eachSeriesByType = function(t, r, i) {
      qv(this), I(this._seriesIndices, function(o) {
        var s = this._componentsMap.get("series")[o];
        s.subType === t && r.call(i, s, o);
      }, this);
    }, e.prototype.eachRawSeriesByType = function(t, r, i) {
      return I(this.getSeriesByType(t), r, i);
    }, e.prototype.isSeriesFiltered = function(t) {
      return qv(this), this._seriesIndicesMap.get(t.componentIndex) == null;
    }, e.prototype.getCurrentSeriesIndices = function() {
      return (this._seriesIndices || []).slice();
    }, e.prototype.filterSeries = function(t, r) {
      qv(this);
      var i = [];
      I(this._seriesIndices, function(o) {
        var s = this._componentsMap.get("series")[o];
        t.call(r, s, o) && i.push(o);
      }, this), this._seriesIndices = i, this._seriesIndicesMap = _e(i);
    }, e.prototype.restoreData = function(t) {
      eO(this);
      var r = this._componentsMap, i = [];
      r.each(function(o, s) {
        Ot.hasClass(s) && i.push(s);
      }), Ot.topologicalTravel(i, Ot.getAllClassMainTypes(), function(o) {
        I(r.get(o), function(s) {
          s && (o !== "series" || !ext(s, t)) && s.restoreData();
        });
      });
    }, e.internalField = function() {
      eO = function(t) {
        var r = t._seriesIndices = [];
        I(t._componentsMap.get("series"), function(i) {
          i && r.push(i.componentIndex);
        }), t._seriesIndicesMap = _e(r);
      }, qv = function(t) {
        if (process.env.NODE_ENV !== "production" && !t._seriesIndices)
          throw new Error("Option should contains series.");
      }, Bz = function(t, r) {
        t.option = {}, t.option[RA] = Vz, t._componentsMap = _e({
          series: []
        }), t._componentsCount = _e();
        var i = r.aria;
        Me(i) && i.enabled == null && (i.enabled = !0), txt(r, t._theme.option), Je(r, Zwt, !1), t._mergeOption(r, null);
      };
    }(), e;
  }(fn)
);
function ext(n, e) {
  if (e) {
    var t = e.seriesIndex, r = e.seriesId, i = e.seriesName;
    return t != null && n.componentIndex !== t || r != null && n.id !== r || i != null && n.name !== i;
  }
}
function txt(n, e) {
  var t = n.color && !n.colorLayer;
  I(e, function(r, i) {
    i === "colorLayer" && t || Ot.hasClass(i) || (typeof r == "object" ? n[i] = n[i] ? Je(n[i], r, !1) : Re(r) : n[i] == null && (n[i] = r));
  });
}
function zz(n, e, t) {
  if (oe(e)) {
    var r = _e();
    return I(e, function(o) {
      if (o != null) {
        var s = dr(o, null);
        s != null && r.set(o, !0);
      }
    }), Gt(t, function(o) {
      return o && r.get(o[n]);
    });
  } else {
    var i = dr(e, null);
    return Gt(t, function(o) {
      return o && i != null && o[n] === i;
    });
  }
}
function Fz(n, e) {
  return e.hasOwnProperty("subType") ? Gt(n, function(t) {
    return t && t.subType === e.subType;
  }) : n;
}
function Qz(n) {
  var e = _e();
  return n && I(Kt(n.replaceMerge), function(t) {
    process.env.NODE_ENV !== "production" && De(Ot.hasClass(t), '"' + t + '" is not valid component main type in "replaceMerge"'), e.set(t, !0);
  }), {
    replaceMergeMainTypeMap: e
  };
}
lr(pR, dR);
var nxt = [
  "getDom",
  "getZr",
  "getWidth",
  "getHeight",
  "getDevicePixelRatio",
  "dispatchAction",
  "isSSR",
  "isDisposed",
  "on",
  "off",
  "getDataURL",
  "getConnectedDataURL",
  // 'getModel',
  "getOption",
  // 'getViewOfComponentModel',
  // 'getViewOfSeriesModel',
  "getId",
  "updateLabelLayout"
], rxt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e) {
      I(nxt, function(t) {
        this[t] = Oe(e[t], e);
      }, this);
    }
    return n;
  }()
);
const ZJ = rxt;
var $A = {}, xv = (
  /** @class */
  function() {
    function n() {
      this._coordinateSystems = [];
    }
    return n.prototype.create = function(e, t) {
      var r = [];
      I($A, function(i, o) {
        var s = i.create(e, t);
        r = r.concat(s || []);
      }), this._coordinateSystems = r;
    }, n.prototype.update = function(e, t) {
      I(this._coordinateSystems, function(r) {
        r.update && r.update(e, t);
      });
    }, n.prototype.getCoordinateSystems = function() {
      return this._coordinateSystems.slice();
    }, n.register = function(e, t) {
      $A[e] = t;
    }, n.get = function(e) {
      return $A[e];
    }, n;
  }()
), ixt = /^(min|max)?(.+)$/, oxt = (
  /** @class */
  function() {
    function n(e) {
      this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = e;
    }
    return n.prototype.setOption = function(e, t, r) {
      e && (I(Kt(e.series), function(s) {
        s && s.data && zi(s.data) && Nx(s.data);
      }), I(Kt(e.dataset), function(s) {
        s && s.source && zi(s.source) && Nx(s.source);
      })), e = Re(e);
      var i = this._optionBackup, o = sxt(e, t, !i);
      this._newBaseOption = o.baseOption, i ? (o.timelineOptions.length && (i.timelineOptions = o.timelineOptions), o.mediaList.length && (i.mediaList = o.mediaList), o.mediaDefault && (i.mediaDefault = o.mediaDefault)) : this._optionBackup = o;
    }, n.prototype.mountOption = function(e) {
      var t = this._optionBackup;
      return this._timelineOptions = t.timelineOptions, this._mediaList = t.mediaList, this._mediaDefault = t.mediaDefault, this._currentMediaIndices = [], Re(e ? t.baseOption : this._newBaseOption);
    }, n.prototype.getTimelineOption = function(e) {
      var t, r = this._timelineOptions;
      if (r.length) {
        var i = e.getComponent("timeline");
        i && (t = Re(
          // FIXME:TS as TimelineModel or quivlant interface
          r[i.getCurrentIndex()]
        ));
      }
      return t;
    }, n.prototype.getMediaOption = function(e) {
      var t = this._api.getWidth(), r = this._api.getHeight(), i = this._mediaList, o = this._mediaDefault, s = [], a = [];
      if (!i.length && !o)
        return a;
      for (var l = 0, u = i.length; l < u; l++)
        axt(i[l].query, t, r) && s.push(l);
      return !s.length && o && (s = [-1]), s.length && !uxt(s, this._currentMediaIndices) && (a = ae(s, function(c) {
        return Re(c === -1 ? o.option : i[c].option);
      })), this._currentMediaIndices = s, a;
    }, n;
  }()
);
function sxt(n, e, t) {
  var r = [], i, o, s = n.baseOption, a = n.timeline, l = n.options, u = n.media, c = !!n.media, h = !!(l || a || s && s.timeline);
  s ? (o = s, o.timeline || (o.timeline = a)) : ((h || c) && (n.options = n.media = null), o = n), c && (oe(u) ? I(u, function(d) {
    process.env.NODE_ENV !== "production" && d && !d.option && Me(d.query) && Me(d.query.option) && li("Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }"), d && d.option && (d.query ? r.push(d) : i || (i = d));
  }) : process.env.NODE_ENV !== "production" && li("Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }")), f(o), I(l, function(d) {
    return f(d);
  }), I(r, function(d) {
    return f(d.option);
  });
  function f(d) {
    I(e, function(p) {
      p(d, t);
    });
  }
  return {
    baseOption: o,
    timelineOptions: l || [],
    mediaDefault: i,
    mediaList: r
  };
}
function axt(n, e, t) {
  var r = {
    width: e,
    height: t,
    aspectratio: e / t
    // lower case for convenience.
  }, i = !0;
  return I(n, function(o, s) {
    var a = s.match(ixt);
    if (!(!a || !a[1] || !a[2])) {
      var l = a[1], u = a[2].toLowerCase();
      lxt(r[u], o, l) || (i = !1);
    }
  }), i;
}
function lxt(n, e, t) {
  return t === "min" ? n >= e : t === "max" ? n <= e : n === e;
}
function uxt(n, e) {
  return n.join(",") === e.join(",");
}
const cxt = oxt;
var Go = I, _0 = Me, Zz = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
function NA(n) {
  var e = n && n.itemStyle;
  if (e)
    for (var t = 0, r = Zz.length; t < r; t++) {
      var i = Zz[t], o = e.normal, s = e.emphasis;
      o && o[i] && (process.env.NODE_ENV !== "production" && er("itemStyle.normal." + i, i), n[i] = n[i] || {}, n[i].normal ? Je(n[i].normal, o[i]) : n[i].normal = o[i], o[i] = null), s && s[i] && (process.env.NODE_ENV !== "production" && er("itemStyle.emphasis." + i, "emphasis." + i), n[i] = n[i] || {}, n[i].emphasis ? Je(n[i].emphasis, s[i]) : n[i].emphasis = s[i], s[i] = null);
    }
}
function vi(n, e, t) {
  if (n && n[e] && (n[e].normal || n[e].emphasis)) {
    var r = n[e].normal, i = n[e].emphasis;
    r && (process.env.NODE_ENV !== "production" && la("'normal' hierarchy in " + e + " has been removed since 4.0. All style properties are configured in " + e + " directly now."), t ? (n[e].normal = n[e].emphasis = null, Le(n[e], r)) : n[e] = r), i && (process.env.NODE_ENV !== "production" && la(e + ".emphasis has been changed to emphasis." + e + " since 4.0"), n.emphasis = n.emphasis || {}, n.emphasis[e] = i, i.focus && (n.emphasis.focus = i.focus), i.blurScope && (n.emphasis.blurScope = i.blurScope));
  }
}
function Im(n) {
  vi(n, "itemStyle"), vi(n, "lineStyle"), vi(n, "areaStyle"), vi(n, "label"), vi(n, "labelLine"), vi(n, "upperLabel"), vi(n, "edgeLabel");
}
function Kn(n, e) {
  var t = _0(n) && n[e], r = _0(t) && t.textStyle;
  if (r) {
    process.env.NODE_ENV !== "production" && la("textStyle hierarchy in " + e + " has been removed since 4.0. All textStyle properties are configured in " + e + " directly now.");
    for (var i = 0, o = H4.length; i < o; i++) {
      var s = H4[i];
      r.hasOwnProperty(s) && (t[s] = r[s]);
    }
  }
}
function es(n) {
  n && (Im(n), Kn(n, "label"), n.emphasis && Kn(n.emphasis, "label"));
}
function hxt(n) {
  if (_0(n)) {
    NA(n), Im(n), Kn(n, "label"), Kn(n, "upperLabel"), Kn(n, "edgeLabel"), n.emphasis && (Kn(n.emphasis, "label"), Kn(n.emphasis, "upperLabel"), Kn(n.emphasis, "edgeLabel"));
    var e = n.markPoint;
    e && (NA(e), es(e));
    var t = n.markLine;
    t && (NA(t), es(t));
    var r = n.markArea;
    r && es(r);
    var i = n.data;
    if (n.type === "graph") {
      i = i || n.nodes;
      var o = n.links || n.edges;
      if (o && !zi(o))
        for (var s = 0; s < o.length; s++)
          es(o[s]);
      I(n.categories, function(u) {
        Im(u);
      });
    }
    if (i && !zi(i))
      for (var s = 0; s < i.length; s++)
        es(i[s]);
    if (e = n.markPoint, e && e.data)
      for (var a = e.data, s = 0; s < a.length; s++)
        es(a[s]);
    if (t = n.markLine, t && t.data)
      for (var l = t.data, s = 0; s < l.length; s++)
        oe(l[s]) ? (es(l[s][0]), es(l[s][1])) : es(l[s]);
    n.type === "gauge" ? (Kn(n, "axisLabel"), Kn(n, "title"), Kn(n, "detail")) : n.type === "treemap" ? (vi(n.breadcrumb, "itemStyle"), I(n.levels, function(u) {
      Im(u);
    })) : n.type === "tree" && Im(n.leaves);
  }
}
function Pl(n) {
  return oe(n) ? n : n ? [n] : [];
}
function Wz(n) {
  return (oe(n) ? n[0] : n) || {};
}
function fxt(n, e) {
  Go(Pl(n.series), function(r) {
    _0(r) && hxt(r);
  });
  var t = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
  e && t.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), Go(t, function(r) {
    Go(Pl(n[r]), function(i) {
      i && (Kn(i, "axisLabel"), Kn(i.axisPointer, "label"));
    });
  }), Go(Pl(n.parallel), function(r) {
    var i = r && r.parallelAxisDefault;
    Kn(i, "axisLabel"), Kn(i && i.axisPointer, "label");
  }), Go(Pl(n.calendar), function(r) {
    vi(r, "itemStyle"), Kn(r, "dayLabel"), Kn(r, "monthLabel"), Kn(r, "yearLabel");
  }), Go(Pl(n.radar), function(r) {
    Kn(r, "name"), r.name && r.axisName == null && (r.axisName = r.name, delete r.name, process.env.NODE_ENV !== "production" && la("name property in radar component has been changed to axisName")), r.nameGap != null && r.axisNameGap == null && (r.axisNameGap = r.nameGap, delete r.nameGap, process.env.NODE_ENV !== "production" && la("nameGap property in radar component has been changed to axisNameGap")), process.env.NODE_ENV !== "production" && Go(r.indicator, function(i) {
      i.text && er("text", "name", "radar.indicator");
    });
  }), Go(Pl(n.geo), function(r) {
    _0(r) && (es(r), Go(Pl(r.regions), function(i) {
      es(i);
    }));
  }), Go(Pl(n.timeline), function(r) {
    es(r), vi(r, "label"), vi(r, "itemStyle"), vi(r, "controlStyle", !0);
    var i = r.data;
    oe(i) && I(i, function(o) {
      Me(o) && (vi(o, "label"), vi(o, "itemStyle"));
    });
  }), Go(Pl(n.toolbox), function(r) {
    vi(r, "iconStyle"), Go(r.feature, function(i) {
      vi(i, "iconStyle");
    });
  }), Kn(Wz(n.axisPointer), "label"), Kn(Wz(n.tooltip).axisPointer, "label");
}
function dxt(n, e) {
  for (var t = e.split(","), r = n, i = 0; i < t.length && (r = r && r[t[i]], r != null); i++)
    ;
  return r;
}
function pxt(n, e, t, r) {
  for (var i = e.split(","), o = n, s, a = 0; a < i.length - 1; a++)
    s = i[a], o[s] == null && (o[s] = {}), o = o[s];
  (r || o[i[a]] == null) && (o[i[a]] = t);
}
function Gz(n) {
  n && I(gxt, function(e) {
    e[0] in n && !(e[1] in n) && (n[e[1]] = n[e[0]]);
  });
}
var gxt = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]], vxt = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"], BA = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
function Yv(n) {
  var e = n && n.itemStyle;
  if (e)
    for (var t = 0; t < BA.length; t++) {
      var r = BA[t][1], i = BA[t][0];
      e[r] != null && (e[i] = e[r], process.env.NODE_ENV !== "production" && er(r, i));
    }
}
function jz(n) {
  n && n.alignTo === "edge" && n.margin != null && n.edgeDistance == null && (process.env.NODE_ENV !== "production" && er("label.margin", "label.edgeDistance", "pie"), n.edgeDistance = n.margin);
}
function Hz(n) {
  n && n.downplay && !n.blur && (n.blur = n.downplay, process.env.NODE_ENV !== "production" && er("downplay", "blur", "sunburst"));
}
function mxt(n) {
  n && n.focusNodeAdjacency != null && (n.emphasis = n.emphasis || {}, n.emphasis.focus == null && (process.env.NODE_ENV !== "production" && er("focusNodeAdjacency", "emphasis: { focus: 'adjacency'}", "graph/sankey"), n.emphasis.focus = "adjacency"));
}
function WJ(n, e) {
  if (n)
    for (var t = 0; t < n.length; t++)
      e(n[t]), n[t] && WJ(n[t].children, e);
}
function GJ(n, e) {
  fxt(n, e), n.series = Kt(n.series), I(n.series, function(t) {
    if (Me(t)) {
      var r = t.type;
      if (r === "line")
        t.clipOverflow != null && (t.clip = t.clipOverflow, process.env.NODE_ENV !== "production" && er("clipOverflow", "clip", "line"));
      else if (r === "pie" || r === "gauge") {
        t.clockWise != null && (t.clockwise = t.clockWise, process.env.NODE_ENV !== "production" && er("clockWise", "clockwise")), jz(t.label);
        var i = t.data;
        if (i && !zi(i))
          for (var o = 0; o < i.length; o++)
            jz(i[o]);
        t.hoverOffset != null && (t.emphasis = t.emphasis || {}, (t.emphasis.scaleSize = null) && (process.env.NODE_ENV !== "production" && er("hoverOffset", "emphasis.scaleSize"), t.emphasis.scaleSize = t.hoverOffset));
      } else if (r === "gauge") {
        var s = dxt(t, "pointer.color");
        s != null && pxt(t, "itemStyle.color", s);
      } else if (r === "bar") {
        Yv(t), Yv(t.backgroundStyle), Yv(t.emphasis);
        var i = t.data;
        if (i && !zi(i))
          for (var o = 0; o < i.length; o++)
            typeof i[o] == "object" && (Yv(i[o]), Yv(i[o] && i[o].emphasis));
      } else if (r === "sunburst") {
        var a = t.highlightPolicy;
        a && (t.emphasis = t.emphasis || {}, t.emphasis.focus || (t.emphasis.focus = a, process.env.NODE_ENV !== "production" && er("highlightPolicy", "emphasis.focus", "sunburst"))), Hz(t), WJ(t.data, Hz);
      } else
        r === "graph" || r === "sankey" ? mxt(t) : r === "map" && (t.mapType && !t.map && (process.env.NODE_ENV !== "production" && er("mapType", "map", "map"), t.map = t.mapType), t.mapLocation && (process.env.NODE_ENV !== "production" && la("`mapLocation` is not used anymore."), Le(t, t.mapLocation)));
      t.hoverAnimation != null && (t.emphasis = t.emphasis || {}, t.emphasis && t.emphasis.scale == null && (process.env.NODE_ENV !== "production" && er("hoverAnimation", "emphasis.scale"), t.emphasis.scale = t.hoverAnimation)), Gz(t);
    }
  }), n.dataRange && (n.visualMap = n.dataRange), I(vxt, function(t) {
    var r = n[t];
    r && (oe(r) || (r = [r]), I(r, function(i) {
      Gz(i);
    }));
  });
}
function yxt(n) {
  var e = _e();
  n.eachSeries(function(t) {
    var r = t.get("stack");
    if (r) {
      var i = e.get(r) || e.set(r, []), o = t.getData(), s = {
        // Used for calculate axis extent automatically.
        // TODO: Type getCalculationInfo return more specific type?
        stackResultDimension: o.getCalculationInfo("stackResultDimension"),
        stackedOverDimension: o.getCalculationInfo("stackedOverDimension"),
        stackedDimension: o.getCalculationInfo("stackedDimension"),
        stackedByDimension: o.getCalculationInfo("stackedByDimension"),
        isStackedByIndex: o.getCalculationInfo("isStackedByIndex"),
        data: o,
        seriesModel: t
      };
      if (!s.stackedDimension || !(s.isStackedByIndex || s.stackedByDimension))
        return;
      i.length && o.setCalculationInfo("stackedOnSeries", i[i.length - 1].seriesModel), i.push(s);
    }
  }), e.each(bxt);
}
function bxt(n) {
  I(n, function(e, t) {
    var r = [], i = [NaN, NaN], o = [e.stackResultDimension, e.stackedOverDimension], s = e.data, a = e.isStackedByIndex, l = e.seriesModel.get("stackStrategy") || "samesign";
    s.modify(o, function(u, c, h) {
      var f = s.get(e.stackedDimension, h);
      if (isNaN(f))
        return i;
      var d, p;
      a ? p = s.getRawIndex(h) : d = s.get(e.stackedByDimension, h);
      for (var g = NaN, v = t - 1; v >= 0; v--) {
        var m = n[v];
        if (a || (p = m.data.rawIndexOf(m.stackedByDimension, d)), p >= 0) {
          var y = m.data.getByRawIndex(m.stackResultDimension, p);
          if (l === "all" || l === "positive" && y > 0 || l === "negative" && y < 0 || l === "samesign" && f >= 0 && y > 0 || l === "samesign" && f <= 0 && y < 0) {
            f = t1t(f, y), g = y;
            break;
          }
        }
      }
      return r[0] = f, r[1] = g, r;
    });
  });
}
var pC = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e) {
      this.data = e.data || (e.sourceFormat === _l ? {} : []), this.sourceFormat = e.sourceFormat || NJ, this.seriesLayoutBy = e.seriesLayoutBy || rl, this.startIndex = e.startIndex || 0, this.dimensionsDetectedCount = e.dimensionsDetectedCount, this.metaRawOption = e.metaRawOption;
      var t = this.dimensionsDefine = e.dimensionsDefine;
      if (t)
        for (var r = 0; r < t.length; r++) {
          var i = t[r];
          i.type == null && zJ(this, r) === jr.Must && (i.type = "ordinal");
        }
    }
    return n;
  }()
);
function gR(n) {
  return n instanceof pC;
}
function gM(n, e, t) {
  t = t || jJ(n);
  var r = e.seriesLayoutBy, i = wxt(n, t, r, e.sourceHeader, e.dimensions), o = new pC({
    data: n,
    sourceFormat: t,
    seriesLayoutBy: r,
    dimensionsDefine: i.dimensionsDefine,
    startIndex: i.startIndex,
    dimensionsDetectedCount: i.dimensionsDetectedCount,
    metaRawOption: Re(e)
  });
  return o;
}
function vR(n) {
  return new pC({
    data: n,
    sourceFormat: zi(n) ? Hl : Es
  });
}
function Oxt(n) {
  return new pC({
    data: n.data,
    sourceFormat: n.sourceFormat,
    seriesLayoutBy: n.seriesLayoutBy,
    dimensionsDefine: Re(n.dimensionsDefine),
    startIndex: n.startIndex,
    dimensionsDetectedCount: n.dimensionsDetectedCount
  });
}
function jJ(n) {
  var e = NJ;
  if (zi(n))
    e = Hl;
  else if (oe(n)) {
    n.length === 0 && (e = Ci);
    for (var t = 0, r = n.length; t < r; t++) {
      var i = n[t];
      if (i != null) {
        if (oe(i) || zi(i)) {
          e = Ci;
          break;
        } else if (Me(i)) {
          e = ks;
          break;
        }
      }
    }
  } else if (Me(n)) {
    for (var o in n)
      if (we(n, o) && _i(n[o])) {
        e = _l;
        break;
      }
  }
  return e;
}
function wxt(n, e, t, r, i) {
  var o, s;
  if (!n)
    return {
      dimensionsDefine: qz(i),
      startIndex: s,
      dimensionsDetectedCount: o
    };
  if (e === Ci) {
    var a = n;
    r === "auto" || r == null ? Yz(function(u) {
      u != null && u !== "-" && (be(u) ? s == null && (s = 1) : s = 0);
    }, t, a, 10) : s = Tt(r) ? r : r ? 1 : 0, !i && s === 1 && (i = [], Yz(function(u, c) {
      i[c] = u != null ? u + "" : "";
    }, t, a, 1 / 0)), o = i ? i.length : t === wv ? a.length : a[0] ? a[0].length : null;
  } else if (e === ks)
    i || (i = xxt(n));
  else if (e === _l)
    i || (i = [], I(n, function(u, c) {
      i.push(c);
    }));
  else if (e === Es) {
    var l = fv(n[0]);
    o = oe(l) && l.length || 1;
  } else
    e === Hl && process.env.NODE_ENV !== "production" && De(!!i, "dimensions must be given if data is TypedArray.");
  return {
    startIndex: s,
    dimensionsDefine: qz(i),
    dimensionsDetectedCount: o
  };
}
function xxt(n) {
  for (var e = 0, t; e < n.length && !(t = n[e++]); )
    ;
  if (t)
    return ft(t);
}
function qz(n) {
  if (n) {
    var e = _e();
    return ae(n, function(t, r) {
      t = Me(t) ? t : {
        name: t
      };
      var i = {
        name: t.name,
        displayName: t.displayName,
        type: t.type
      };
      if (i.name == null)
        return i;
      i.name += "", i.displayName == null && (i.displayName = i.name);
      var o = e.get(i.name);
      return o ? i.name += "-" + o.count++ : e.set(i.name, {
        count: 1
      }), i;
    });
  }
}
function Yz(n, e, t, r) {
  if (e === wv)
    for (var i = 0; i < t.length && i < r; i++)
      n(t[i] ? t[i][0] : null, i);
  else
    for (var o = t[0] || [], i = 0; i < o.length && i < r; i++)
      n(o[i], i);
}
function HJ(n) {
  var e = n.sourceFormat;
  return e === ks || e === _l;
}
var Th, Ph, Eh, Xz, Uz, qJ = (
  /** @class */
  function() {
    function n(e, t) {
      var r = gR(e) ? e : vR(e);
      this._source = r;
      var i = this._data = r.data;
      if (r.sourceFormat === Hl) {
        if (process.env.NODE_ENV !== "production" && t == null)
          throw new Error("Typed array data must specify dimension size");
        this._offset = 0, this._dimSize = t, this._data = i;
      }
      Uz(this, i, r);
    }
    return n.prototype.getSource = function() {
      return this._source;
    }, n.prototype.count = function() {
      return 0;
    }, n.prototype.getItem = function(e, t) {
    }, n.prototype.appendData = function(e) {
    }, n.prototype.clean = function() {
    }, n.protoInitialize = function() {
      var e = n.prototype;
      e.pure = !1, e.persistent = !0;
    }(), n.internalField = function() {
      var e;
      Uz = function(s, a, l) {
        var u = l.sourceFormat, c = l.seriesLayoutBy, h = l.startIndex, f = l.dimensionsDefine, d = Xz[mR(u, c)];
        if (process.env.NODE_ENV !== "production" && De(d, "Invalide sourceFormat: " + u), te(s, d), u === Hl)
          s.getItem = t, s.count = i, s.fillStorage = r;
        else {
          var p = YJ(u, c);
          s.getItem = Oe(p, null, a, h, f);
          var g = XJ(u, c);
          s.count = Oe(g, null, a, h, f);
        }
      };
      var t = function(s, a) {
        s = s - this._offset, a = a || [];
        for (var l = this._data, u = this._dimSize, c = u * s, h = 0; h < u; h++)
          a[h] = l[c + h];
        return a;
      }, r = function(s, a, l, u) {
        for (var c = this._data, h = this._dimSize, f = 0; f < h; f++) {
          for (var d = u[f], p = d[0] == null ? 1 / 0 : d[0], g = d[1] == null ? -1 / 0 : d[1], v = a - s, m = l[f], y = 0; y < v; y++) {
            var b = c[y * h + f];
            m[s + y] = b, b < p && (p = b), b > g && (g = b);
          }
          d[0] = p, d[1] = g;
        }
      }, i = function() {
        return this._data ? this._data.length / this._dimSize : 0;
      };
      Xz = (e = {}, e[Ci + "_" + rl] = {
        pure: !0,
        appendData: o
      }, e[Ci + "_" + wv] = {
        pure: !0,
        appendData: function() {
          throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
        }
      }, e[ks] = {
        pure: !0,
        appendData: o
      }, e[_l] = {
        pure: !0,
        appendData: function(s) {
          var a = this._data;
          I(s, function(l, u) {
            for (var c = a[u] || (a[u] = []), h = 0; h < (l || []).length; h++)
              c.push(l[h]);
          });
        }
      }, e[Es] = {
        appendData: o
      }, e[Hl] = {
        persistent: !1,
        pure: !0,
        appendData: function(s) {
          process.env.NODE_ENV !== "production" && De(zi(s), "Added data must be TypedArray if data in initialization is TypedArray"), this._data = s;
        },
        // Clean self if data is already used.
        clean: function() {
          this._offset += this.count(), this._data = null;
        }
      }, e);
      function o(s) {
        for (var a = 0; a < s.length; a++)
          this._data.push(s[a]);
      }
    }(), n;
  }()
), Kz = function(n, e, t, r) {
  return n[r];
}, Sxt = (Th = {}, Th[Ci + "_" + rl] = function(n, e, t, r) {
  return n[r + e];
}, Th[Ci + "_" + wv] = function(n, e, t, r, i) {
  r += e;
  for (var o = i || [], s = n, a = 0; a < s.length; a++) {
    var l = s[a];
    o[a] = l ? l[r] : null;
  }
  return o;
}, Th[ks] = Kz, Th[_l] = function(n, e, t, r, i) {
  for (var o = i || [], s = 0; s < t.length; s++) {
    var a = t[s].name;
    if (process.env.NODE_ENV !== "production" && a == null)
      throw new Error();
    var l = n[a];
    o[s] = l ? l[r] : null;
  }
  return o;
}, Th[Es] = Kz, Th);
function YJ(n, e) {
  var t = Sxt[mR(n, e)];
  return process.env.NODE_ENV !== "production" && De(t, 'Do not support get item on "' + n + '", "' + e + '".'), t;
}
var Jz = function(n, e, t) {
  return n.length;
}, _xt = (Ph = {}, Ph[Ci + "_" + rl] = function(n, e, t) {
  return Math.max(0, n.length - e);
}, Ph[Ci + "_" + wv] = function(n, e, t) {
  var r = n[0];
  return r ? Math.max(0, r.length - e) : 0;
}, Ph[ks] = Jz, Ph[_l] = function(n, e, t) {
  var r = t[0].name;
  if (process.env.NODE_ENV !== "production" && r == null)
    throw new Error();
  var i = n[r];
  return i ? i.length : 0;
}, Ph[Es] = Jz, Ph);
function XJ(n, e) {
  var t = _xt[mR(n, e)];
  return process.env.NODE_ENV !== "production" && De(t, 'Do not support count on "' + n + '", "' + e + '".'), t;
}
var VA = function(n, e, t) {
  return n[e];
}, Cxt = (Eh = {}, Eh[Ci] = VA, Eh[ks] = function(n, e, t) {
  return n[t];
}, Eh[_l] = VA, Eh[Es] = function(n, e, t) {
  var r = fv(n);
  return r instanceof Array ? r[e] : r;
}, Eh[Hl] = VA, Eh);
function UJ(n) {
  var e = Cxt[n];
  return process.env.NODE_ENV !== "production" && De(e, 'Do not support get value on "' + n + '".'), e;
}
function mR(n, e) {
  return n === Ci ? n + "_" + e : n;
}
function Lg(n, e, t) {
  if (n) {
    var r = n.getRawDataItem(e);
    if (r != null) {
      var i = n.getStore(), o = i.getSource().sourceFormat;
      if (t != null) {
        var s = n.getDimensionIndex(t), a = i.getDimensionProperty(s);
        return UJ(o)(r, s, a);
      } else {
        var l = r;
        return o === Es && (l = fv(r)), l;
      }
    }
  }
}
var Axt = /\{@(.+?)\}/g, yR = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getDataParams = function(e, t) {
      var r = this.getData(t), i = this.getRawValue(e, t), o = r.getRawIndex(e), s = r.getName(e), a = r.getRawDataItem(e), l = r.getItemVisual(e, "style"), u = l && l[r.getItemVisual(e, "drawType") || "fill"], c = l && l.stroke, h = this.mainType, f = h === "series", d = r.userOutput && r.userOutput.get();
      return {
        componentType: h,
        componentSubType: this.subType,
        componentIndex: this.componentIndex,
        seriesType: f ? this.subType : null,
        seriesIndex: this.seriesIndex,
        seriesId: f ? this.id : null,
        seriesName: f ? this.name : null,
        name: s,
        dataIndex: o,
        data: a,
        dataType: t,
        value: i,
        color: u,
        borderColor: c,
        dimensionNames: d ? d.fullDimensions : null,
        encode: d ? d.encode : null,
        // Param name list for mapping `a`, `b`, `c`, `d`, `e`
        $vars: ["seriesName", "name", "value"]
      };
    }, n.prototype.getFormattedLabel = function(e, t, r, i, o, s) {
      t = t || "normal";
      var a = this.getData(r), l = this.getDataParams(e, r);
      if (s && (l.value = s.interpolatedValue), i != null && oe(l.value) && (l.value = l.value[i]), !o) {
        var u = a.getItemModel(e);
        o = u.get(t === "normal" ? ["label", "formatter"] : [t, "label", "formatter"]);
      }
      if (Pe(o))
        return l.status = t, l.dimensionIndex = i, o(l);
      if (be(o)) {
        var c = LJ(o, l);
        return c.replace(Axt, function(h, f) {
          var d = f.length, p = f;
          p.charAt(0) === "[" && p.charAt(d - 1) === "]" && (p = +p.slice(1, d - 1), process.env.NODE_ENV !== "production" && isNaN(p) && li("Invalide label formatter: @" + f + ", only support @[0], @[1], @[2], ..."));
          var g = Lg(a, e, p);
          if (s && oe(s.interpolatedValue)) {
            var v = a.getDimensionIndex(p);
            v >= 0 && (g = s.interpolatedValue[v]);
          }
          return g != null ? g + "" : "";
        });
      }
    }, n.prototype.getRawValue = function(e, t) {
      return Lg(this.getData(t), e);
    }, n.prototype.formatTooltip = function(e, t, r) {
    }, n;
  }()
);
function eF(n) {
  var e, t;
  return Me(n) ? n.type ? t = n : process.env.NODE_ENV !== "production" && console.warn("The return type of `formatTooltip` is not supported: " + Fi(n)) : e = n, {
    text: e,
    // markers: markers || markersExisting,
    frag: t
  };
}
function Oy(n) {
  return new Txt(n);
}
var Txt = (
  /** @class */
  function() {
    function n(e) {
      e = e || {}, this._reset = e.reset, this._plan = e.plan, this._count = e.count, this._onDirty = e.onDirty, this._dirty = !0;
    }
    return n.prototype.perform = function(e) {
      var t = this._upstream, r = e && e.skip;
      if (this._dirty && t) {
        var i = this.context;
        i.data = i.outputData = t.context.outputData;
      }
      this.__pipeline && (this.__pipeline.currentTask = this);
      var o;
      this._plan && !r && (o = this._plan(this.context));
      var s = c(this._modBy), a = this._modDataCount || 0, l = c(e && e.modBy), u = e && e.modDataCount || 0;
      (s !== l || a !== u) && (o = "reset");
      function c(y) {
        return !(y >= 1) && (y = 1), y;
      }
      var h;
      (this._dirty || o === "reset") && (this._dirty = !1, h = this._doReset(r)), this._modBy = l, this._modDataCount = u;
      var f = e && e.step;
      if (t ? (process.env.NODE_ENV !== "production" && De(t._outputDueEnd != null), this._dueEnd = t._outputDueEnd) : (process.env.NODE_ENV !== "production" && De(!this._progress || this._count), this._dueEnd = this._count ? this._count(this.context) : 1 / 0), this._progress) {
        var d = this._dueIndex, p = Math.min(f != null ? this._dueIndex + f : 1 / 0, this._dueEnd);
        if (!r && (h || d < p)) {
          var g = this._progress;
          if (oe(g))
            for (var v = 0; v < g.length; v++)
              this._doProgress(g[v], d, p, l, u);
          else
            this._doProgress(g, d, p, l, u);
        }
        this._dueIndex = p;
        var m = this._settedOutputEnd != null ? this._settedOutputEnd : p;
        process.env.NODE_ENV !== "production" && De(m >= this._outputDueEnd), this._outputDueEnd = m;
      } else
        this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
      return this.unfinished();
    }, n.prototype.dirty = function() {
      this._dirty = !0, this._onDirty && this._onDirty(this.context);
    }, n.prototype._doProgress = function(e, t, r, i, o) {
      tF.reset(t, r, i, o), this._callingProgress = e, this._callingProgress({
        start: t,
        end: r,
        count: r - t,
        next: tF.next
      }, this.context);
    }, n.prototype._doReset = function(e) {
      this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null;
      var t, r;
      !e && this._reset && (t = this._reset(this.context), t && t.progress && (r = t.forceFirstProgress, t = t.progress), oe(t) && !t.length && (t = null)), this._progress = t, this._modBy = this._modDataCount = null;
      var i = this._downstream;
      return i && i.dirty(), r;
    }, n.prototype.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }, n.prototype.pipe = function(e) {
      process.env.NODE_ENV !== "production" && De(e && !e._disposed && e !== this), (this._downstream !== e || this._dirty) && (this._downstream = e, e._upstream = this, e.dirty());
    }, n.prototype.dispose = function() {
      this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
    }, n.prototype.getUpstream = function() {
      return this._upstream;
    }, n.prototype.getDownstream = function() {
      return this._downstream;
    }, n.prototype.setOutputEnd = function(e) {
      this._outputDueEnd = this._settedOutputEnd = e;
    }, n;
  }()
), tF = /* @__PURE__ */ function() {
  var n, e, t, r, i, o = {
    reset: function(l, u, c, h) {
      e = l, n = u, t = c, r = h, i = Math.ceil(r / t), o.next = t > 1 && r > 0 ? a : s;
    }
  };
  return o;
  function s() {
    return e < n ? e++ : null;
  }
  function a() {
    var l = e % i * t + Math.ceil(e / i), u = e >= n ? null : l < r ? l : e;
    return e++, u;
  }
}();
function mc(n, e) {
  var t = e && e.type;
  return t === "ordinal" ? n : (t === "time" && !Tt(n) && n != null && n !== "-" && (n = +gl(n)), n == null || n === "" ? NaN : +n);
}
var Pxt = _e({
  number: function(n) {
    return parseFloat(n);
  },
  time: function(n) {
    return +gl(n);
  },
  trim: function(n) {
    return be(n) ? Ys(n) : n;
  }
});
function KJ(n) {
  return Pxt.get(n);
}
var JJ = {
  lt: function(n, e) {
    return n < e;
  },
  lte: function(n, e) {
    return n <= e;
  },
  gt: function(n, e) {
    return n > e;
  },
  gte: function(n, e) {
    return n >= e;
  }
}, Ext = (
  /** @class */
  function() {
    function n(e, t) {
      if (!Tt(t)) {
        var r = "";
        process.env.NODE_ENV !== "production" && (r = 'rvalue of "<", ">", "<=", ">=" can only be number in filter.'), Nt(r);
      }
      this._opFn = JJ[e], this._rvalFloat = ou(t);
    }
    return n.prototype.evaluate = function(e) {
      return Tt(e) ? this._opFn(e, this._rvalFloat) : this._opFn(ou(e), this._rvalFloat);
    }, n;
  }()
), eee = (
  /** @class */
  function() {
    function n(e, t) {
      var r = e === "desc";
      this._resultLT = r ? 1 : -1, t == null && (t = r ? "min" : "max"), this._incomparable = t === "min" ? -1 / 0 : 1 / 0;
    }
    return n.prototype.evaluate = function(e, t) {
      var r = Tt(e) ? e : ou(e), i = Tt(t) ? t : ou(t), o = isNaN(r), s = isNaN(i);
      if (o && (r = this._incomparable), s && (i = this._incomparable), o && s) {
        var a = be(e), l = be(t);
        a && (r = l ? e : 0), l && (i = a ? t : 0);
      }
      return r < i ? this._resultLT : r > i ? -this._resultLT : 0;
    }, n;
  }()
), kxt = (
  /** @class */
  function() {
    function n(e, t) {
      this._rval = t, this._isEQ = e, this._rvalTypeof = typeof t, this._rvalFloat = ou(t);
    }
    return n.prototype.evaluate = function(e) {
      var t = e === this._rval;
      if (!t) {
        var r = typeof e;
        r !== this._rvalTypeof && (r === "number" || this._rvalTypeof === "number") && (t = ou(e) === this._rvalFloat);
      }
      return this._isEQ ? t : !t;
    }, n;
  }()
);
function Mxt(n, e) {
  return n === "eq" || n === "ne" ? new kxt(n === "eq", e) : we(JJ, n) ? new Ext(n, e) : null;
}
var Dxt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getRawData = function() {
      throw new Error("not supported");
    }, n.prototype.getRawDataItem = function(e) {
      throw new Error("not supported");
    }, n.prototype.cloneRawData = function() {
    }, n.prototype.getDimensionInfo = function(e) {
    }, n.prototype.cloneAllDimensionInfo = function() {
    }, n.prototype.count = function() {
    }, n.prototype.retrieveValue = function(e, t) {
    }, n.prototype.retrieveValueFromItem = function(e, t) {
    }, n.prototype.convertValue = function(e, t) {
      return mc(e, t);
    }, n;
  }()
);
function Lxt(n, e) {
  var t = new Dxt(), r = n.data, i = t.sourceFormat = n.sourceFormat, o = n.startIndex, s = "";
  n.seriesLayoutBy !== rl && (process.env.NODE_ENV !== "production" && (s = '`seriesLayoutBy` of upstream dataset can only be "column" in data transform.'), Nt(s));
  var a = [], l = {}, u = n.dimensionsDefine;
  if (u)
    I(u, function(g, v) {
      var m = g.name, y = {
        index: v,
        name: m,
        displayName: g.displayName
      };
      if (a.push(y), m != null) {
        var b = "";
        we(l, m) && (process.env.NODE_ENV !== "production" && (b = 'dimension name "' + m + '" duplicated.'), Nt(b)), l[m] = y;
      }
    });
  else
    for (var c = 0; c < n.dimensionsDetectedCount; c++)
      a.push({
        index: c
      });
  var h = YJ(i, rl);
  e.__isBuiltIn && (t.getRawDataItem = function(g) {
    return h(r, o, a, g);
  }, t.getRawData = Oe(Ixt, null, n)), t.cloneRawData = Oe(Rxt, null, n);
  var f = XJ(i, rl);
  t.count = Oe(f, null, r, o, a);
  var d = UJ(i);
  t.retrieveValue = function(g, v) {
    var m = h(r, o, a, g);
    return p(m, v);
  };
  var p = t.retrieveValueFromItem = function(g, v) {
    if (g != null) {
      var m = a[v];
      if (m)
        return d(g, v, m.name);
    }
  };
  return t.getDimensionInfo = Oe($xt, null, a, l), t.cloneAllDimensionInfo = Oe(Nxt, null, a), t;
}
function Ixt(n) {
  var e = n.sourceFormat;
  if (!bR(e)) {
    var t = "";
    process.env.NODE_ENV !== "production" && (t = "`getRawData` is not supported in source format " + e), Nt(t);
  }
  return n.data;
}
function Rxt(n) {
  var e = n.sourceFormat, t = n.data;
  if (!bR(e)) {
    var r = "";
    process.env.NODE_ENV !== "production" && (r = "`cloneRawData` is not supported in source format " + e), Nt(r);
  }
  if (e === Ci) {
    for (var i = [], o = 0, s = t.length; o < s; o++)
      i.push(t[o].slice());
    return i;
  } else if (e === ks) {
    for (var i = [], o = 0, s = t.length; o < s; o++)
      i.push(te({}, t[o]));
    return i;
  }
}
function $xt(n, e, t) {
  if (t != null) {
    if (Tt(t) || !isNaN(t) && !we(e, t))
      return n[t];
    if (we(e, t))
      return e[t];
  }
}
function Nxt(n) {
  return Re(n);
}
var tee = _e();
function Bxt(n) {
  n = Re(n);
  var e = n.type, t = "";
  e || (process.env.NODE_ENV !== "production" && (t = "Must have a `type` when `registerTransform`."), Nt(t));
  var r = e.split(":");
  r.length !== 2 && (process.env.NODE_ENV !== "production" && (t = 'Name must include namespace like "ns:regression".'), Nt(t));
  var i = !1;
  r[0] === "echarts" && (e = r[1], i = !0), n.__isBuiltIn = i, tee.set(e, n);
}
function Vxt(n, e, t) {
  var r = Kt(n), i = r.length, o = "";
  i || (process.env.NODE_ENV !== "production" && (o = "If `transform` declared, it should at least contain one transform."), Nt(o));
  for (var s = 0, a = i; s < a; s++) {
    var l = r[s];
    e = zxt(l, e, t, i === 1 ? null : s), s !== a - 1 && (e.length = Math.max(e.length, 1));
  }
  return e;
}
function zxt(n, e, t, r) {
  var i = "";
  e.length || (process.env.NODE_ENV !== "production" && (i = "Must have at least one upstream dataset."), Nt(i)), Me(n) || (process.env.NODE_ENV !== "production" && (i = "transform declaration must be an object rather than " + typeof n + "."), Nt(i));
  var o = n.type, s = tee.get(o);
  s || (process.env.NODE_ENV !== "production" && (i = 'Can not find transform on type "' + o + '".'), Nt(i));
  var a = ae(e, function(c) {
    return Lxt(c, s);
  }), l = Kt(s.transform({
    upstream: a[0],
    upstreamList: a,
    config: Re(n.config)
  }));
  if (process.env.NODE_ENV !== "production" && n.print) {
    var u = ae(l, function(c) {
      var h = r != null ? " === pipe index: " + r : "";
      return ["=== dataset index: " + t.datasetIndex + h + " ===", "- transform result data:", Fi(c.data), "- transform result dimensions:", Fi(c.dimensions)].join(`
`);
    }).join(`
`);
    s1t(u);
  }
  return ae(l, function(c, h) {
    var f = "";
    Me(c) || (process.env.NODE_ENV !== "production" && (f = "A transform should not return some empty results."), Nt(f)), c.data || (process.env.NODE_ENV !== "production" && (f = "Transform result data should be not be null or undefined"), Nt(f));
    var d = jJ(c.data);
    bR(d) || (process.env.NODE_ENV !== "production" && (f = "Transform result data should be array rows or object rows."), Nt(f));
    var p, g = e[0];
    if (g && h === 0 && !c.dimensions) {
      var v = g.startIndex;
      v && (c.data = g.data.slice(0, v).concat(c.data)), p = {
        seriesLayoutBy: rl,
        sourceHeader: v,
        dimensions: g.metaRawOption.dimensions
      };
    } else
      p = {
        seriesLayoutBy: rl,
        sourceHeader: 0,
        dimensions: c.dimensions
      };
    return gM(c.data, p, null);
  });
}
function bR(n) {
  return n === Ci || n === ks;
}
var gC = "undefined", Fxt = typeof Uint32Array === gC ? Array : Uint32Array, Qxt = typeof Uint16Array === gC ? Array : Uint16Array, nee = typeof Int32Array === gC ? Array : Int32Array, nF = typeof Float64Array === gC ? Array : Float64Array, ree = {
  float: nF,
  int: nee,
  // Ordinal data type can be string or int
  ordinal: Array,
  number: Array,
  time: nF
}, zA;
function Xv(n) {
  return n > 65535 ? Fxt : Qxt;
}
function Wd() {
  return [1 / 0, -1 / 0];
}
function Zxt(n) {
  var e = n.constructor;
  return e === Array ? n.slice() : new e(n);
}
function rF(n, e, t, r, i) {
  var o = ree[t || "float"];
  if (i) {
    var s = n[e], a = s && s.length;
    if (a !== r) {
      for (var l = new o(r), u = 0; u < a; u++)
        l[u] = s[u];
      n[e] = l;
    }
  } else
    n[e] = new o(r);
}
var vM = (
  /** @class */
  function() {
    function n() {
      this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = _e();
    }
    return n.prototype.initData = function(e, t, r) {
      process.env.NODE_ENV !== "production" && De(Pe(e.getItem) && Pe(e.count), "Invalid data provider."), this._provider = e, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
      var i = e.getSource(), o = this.defaultDimValueGetter = zA[i.sourceFormat];
      this._dimValueGetter = r || o, this._rawExtent = [];
      var s = HJ(i);
      this._dimensions = ae(t, function(a) {
        return process.env.NODE_ENV !== "production" && s && De(a.property != null), {
          // Only pick these two props. Not leak other properties like orderMeta.
          type: a.type,
          property: a.property
        };
      }), this._initDataFromProvider(0, e.count());
    }, n.prototype.getProvider = function() {
      return this._provider;
    }, n.prototype.getSource = function() {
      return this._provider.getSource();
    }, n.prototype.ensureCalculationDimension = function(e, t) {
      var r = this._calcDimNameToIdx, i = this._dimensions, o = r.get(e);
      if (o != null) {
        if (i[o].type === t)
          return o;
      } else
        o = i.length;
      return i[o] = {
        type: t
      }, r.set(e, o), this._chunks[o] = new ree[t || "float"](this._rawCount), this._rawExtent[o] = Wd(), o;
    }, n.prototype.collectOrdinalMeta = function(e, t) {
      var r = this._chunks[e], i = this._dimensions[e], o = this._rawExtent, s = i.ordinalOffset || 0, a = r.length;
      s === 0 && (o[e] = Wd());
      for (var l = o[e], u = s; u < a; u++) {
        var c = r[u] = t.parseAndCollect(r[u]);
        isNaN(c) || (l[0] = Math.min(c, l[0]), l[1] = Math.max(c, l[1]));
      }
      i.ordinalMeta = t, i.ordinalOffset = a, i.type = "ordinal";
    }, n.prototype.getOrdinalMeta = function(e) {
      var t = this._dimensions[e], r = t.ordinalMeta;
      return r;
    }, n.prototype.getDimensionProperty = function(e) {
      var t = this._dimensions[e];
      return t && t.property;
    }, n.prototype.appendData = function(e) {
      process.env.NODE_ENV !== "production" && De(!this._indices, "appendData can only be called on raw data.");
      var t = this._provider, r = this.count();
      t.appendData(e);
      var i = t.count();
      return t.persistent || (i += r), r < i && this._initDataFromProvider(r, i, !0), [r, i];
    }, n.prototype.appendValues = function(e, t) {
      for (var r = this._chunks, i = this._dimensions, o = i.length, s = this._rawExtent, a = this.count(), l = a + Math.max(e.length, t || 0), u = 0; u < o; u++) {
        var c = i[u];
        rF(r, u, c.type, l, !0);
      }
      for (var h = [], f = a; f < l; f++)
        for (var d = f - a, p = 0; p < o; p++) {
          var c = i[p], g = zA.arrayRows.call(this, e[d] || h, c.property, d, p);
          r[p][f] = g;
          var v = s[p];
          g < v[0] && (v[0] = g), g > v[1] && (v[1] = g);
        }
      return this._rawCount = this._count = l, {
        start: a,
        end: l
      };
    }, n.prototype._initDataFromProvider = function(e, t, r) {
      for (var i = this._provider, o = this._chunks, s = this._dimensions, a = s.length, l = this._rawExtent, u = ae(s, function(y) {
        return y.property;
      }), c = 0; c < a; c++) {
        var h = s[c];
        l[c] || (l[c] = Wd()), rF(o, c, h.type, t, r);
      }
      if (i.fillStorage)
        i.fillStorage(e, t, o, l);
      else
        for (var f = [], d = e; d < t; d++) {
          f = i.getItem(d, f);
          for (var p = 0; p < a; p++) {
            var g = o[p], v = this._dimValueGetter(f, u[p], d, p);
            g[d] = v;
            var m = l[p];
            v < m[0] && (m[0] = v), v > m[1] && (m[1] = v);
          }
        }
      !i.persistent && i.clean && i.clean(), this._rawCount = this._count = t, this._extent = [];
    }, n.prototype.count = function() {
      return this._count;
    }, n.prototype.get = function(e, t) {
      if (!(t >= 0 && t < this._count))
        return NaN;
      var r = this._chunks[e];
      return r ? r[this.getRawIndex(t)] : NaN;
    }, n.prototype.getValues = function(e, t) {
      var r = [], i = [];
      if (t == null) {
        t = e, e = [];
        for (var o = 0; o < this._dimensions.length; o++)
          i.push(o);
      } else
        i = e;
      for (var o = 0, s = i.length; o < s; o++)
        r.push(this.get(i[o], t));
      return r;
    }, n.prototype.getByRawIndex = function(e, t) {
      if (!(t >= 0 && t < this._rawCount))
        return NaN;
      var r = this._chunks[e];
      return r ? r[t] : NaN;
    }, n.prototype.getSum = function(e) {
      var t = this._chunks[e], r = 0;
      if (t)
        for (var i = 0, o = this.count(); i < o; i++) {
          var s = this.get(e, i);
          isNaN(s) || (r += s);
        }
      return r;
    }, n.prototype.getMedian = function(e) {
      var t = [];
      this.each([e], function(o) {
        isNaN(o) || t.push(o);
      });
      var r = t.sort(function(o, s) {
        return o - s;
      }), i = this.count();
      return i === 0 ? 0 : i % 2 === 1 ? r[(i - 1) / 2] : (r[i / 2] + r[i / 2 - 1]) / 2;
    }, n.prototype.indexOfRawIndex = function(e) {
      if (e >= this._rawCount || e < 0)
        return -1;
      if (!this._indices)
        return e;
      var t = this._indices, r = t[e];
      if (r != null && r < this._count && r === e)
        return e;
      for (var i = 0, o = this._count - 1; i <= o; ) {
        var s = (i + o) / 2 | 0;
        if (t[s] < e)
          i = s + 1;
        else if (t[s] > e)
          o = s - 1;
        else
          return s;
      }
      return -1;
    }, n.prototype.indicesOfNearest = function(e, t, r) {
      var i = this._chunks, o = i[e], s = [];
      if (!o)
        return s;
      r == null && (r = 1 / 0);
      for (var a = 1 / 0, l = -1, u = 0, c = 0, h = this.count(); c < h; c++) {
        var f = this.getRawIndex(c), d = t - o[f], p = Math.abs(d);
        p <= r && ((p < a || p === a && d >= 0 && l < 0) && (a = p, l = d, u = 0), d === l && (s[u++] = c));
      }
      return s.length = u, s;
    }, n.prototype.getIndices = function() {
      var e, t = this._indices;
      if (t) {
        var r = t.constructor, i = this._count;
        if (r === Array) {
          e = new r(i);
          for (var o = 0; o < i; o++)
            e[o] = t[o];
        } else
          e = new r(t.buffer, 0, i);
      } else {
        var r = Xv(this._rawCount);
        e = new r(this.count());
        for (var o = 0; o < e.length; o++)
          e[o] = o;
      }
      return e;
    }, n.prototype.filter = function(e, t) {
      if (!this._count)
        return this;
      for (var r = this.clone(), i = r.count(), o = Xv(r._rawCount), s = new o(i), a = [], l = e.length, u = 0, c = e[0], h = r._chunks, f = 0; f < i; f++) {
        var d = void 0, p = r.getRawIndex(f);
        if (l === 0)
          d = t(f);
        else if (l === 1) {
          var g = h[c][p];
          d = t(g, f);
        } else {
          for (var v = 0; v < l; v++)
            a[v] = h[e[v]][p];
          a[v] = f, d = t.apply(null, a);
        }
        d && (s[u++] = p);
      }
      return u < i && (r._indices = s), r._count = u, r._extent = [], r._updateGetRawIdx(), r;
    }, n.prototype.selectRange = function(e) {
      var t = this.clone(), r = t._count;
      if (!r)
        return this;
      var i = ft(e), o = i.length;
      if (!o)
        return this;
      var s = t.count(), a = Xv(t._rawCount), l = new a(s), u = 0, c = i[0], h = e[c][0], f = e[c][1], d = t._chunks, p = !1;
      if (!t._indices) {
        var g = 0;
        if (o === 1) {
          for (var v = d[i[0]], m = 0; m < r; m++) {
            var y = v[m];
            (y >= h && y <= f || isNaN(y)) && (l[u++] = g), g++;
          }
          p = !0;
        } else if (o === 2) {
          for (var v = d[i[0]], b = d[i[1]], O = e[i[1]][0], w = e[i[1]][1], m = 0; m < r; m++) {
            var y = v[m], x = b[m];
            (y >= h && y <= f || isNaN(y)) && (x >= O && x <= w || isNaN(x)) && (l[u++] = g), g++;
          }
          p = !0;
        }
      }
      if (!p)
        if (o === 1)
          for (var m = 0; m < s; m++) {
            var S = t.getRawIndex(m), y = d[i[0]][S];
            (y >= h && y <= f || isNaN(y)) && (l[u++] = S);
          }
        else
          for (var m = 0; m < s; m++) {
            for (var _ = !0, S = t.getRawIndex(m), C = 0; C < o; C++) {
              var A = i[C], y = d[A][S];
              (y < e[A][0] || y > e[A][1]) && (_ = !1);
            }
            _ && (l[u++] = t.getRawIndex(m));
          }
      return u < s && (t._indices = l), t._count = u, t._extent = [], t._updateGetRawIdx(), t;
    }, n.prototype.map = function(e, t) {
      var r = this.clone(e);
      return this._updateDims(r, e, t), r;
    }, n.prototype.modify = function(e, t) {
      this._updateDims(this, e, t);
    }, n.prototype._updateDims = function(e, t, r) {
      for (var i = e._chunks, o = [], s = t.length, a = e.count(), l = [], u = e._rawExtent, c = 0; c < t.length; c++)
        u[t[c]] = Wd();
      for (var h = 0; h < a; h++) {
        for (var f = e.getRawIndex(h), d = 0; d < s; d++)
          l[d] = i[t[d]][f];
        l[s] = h;
        var p = r && r.apply(null, l);
        if (p != null) {
          typeof p != "object" && (o[0] = p, p = o);
          for (var c = 0; c < p.length; c++) {
            var g = t[c], v = p[c], m = u[g], y = i[g];
            y && (y[f] = v), v < m[0] && (m[0] = v), v > m[1] && (m[1] = v);
          }
        }
      }
    }, n.prototype.lttbDownSample = function(e, t) {
      var r = this.clone([e], !0), i = r._chunks, o = i[e], s = this.count(), a = 0, l = Math.floor(1 / t), u = this.getRawIndex(0), c, h, f, d = new (Xv(this._rawCount))(Math.min((Math.ceil(s / l) + 2) * 2, s));
      d[a++] = u;
      for (var p = 1; p < s - 1; p += l) {
        for (var g = Math.min(p + l, s - 1), v = Math.min(p + l * 2, s), m = (v + g) / 2, y = 0, b = g; b < v; b++) {
          var O = this.getRawIndex(b), w = o[O];
          isNaN(w) || (y += w);
        }
        y /= v - g;
        var x = p, S = Math.min(p + l, s), _ = p - 1, C = o[u];
        c = -1, f = x;
        for (var A = -1, T = 0, b = x; b < S; b++) {
          var O = this.getRawIndex(b), w = o[O];
          if (isNaN(w)) {
            T++, A < 0 && (A = O);
            continue;
          }
          h = Math.abs((_ - m) * (w - C) - (_ - b) * (y - C)), h > c && (c = h, f = O);
        }
        T > 0 && T < S - x && (d[a++] = Math.min(A, f), f = Math.max(A, f)), d[a++] = f, u = f;
      }
      return d[a++] = this.getRawIndex(s - 1), r._count = a, r._indices = d, r.getRawIndex = this._getRawIdx, r;
    }, n.prototype.downSample = function(e, t, r, i) {
      for (var o = this.clone([e], !0), s = o._chunks, a = [], l = Math.floor(1 / t), u = s[e], c = this.count(), h = o._rawExtent[e] = Wd(), f = new (Xv(this._rawCount))(Math.ceil(c / l)), d = 0, p = 0; p < c; p += l) {
        l > c - p && (l = c - p, a.length = l);
        for (var g = 0; g < l; g++) {
          var v = this.getRawIndex(p + g);
          a[g] = u[v];
        }
        var m = r(a), y = this.getRawIndex(Math.min(p + i(a, m) || 0, c - 1));
        u[y] = m, m < h[0] && (h[0] = m), m > h[1] && (h[1] = m), f[d++] = y;
      }
      return o._count = d, o._indices = f, o._updateGetRawIdx(), o;
    }, n.prototype.each = function(e, t) {
      if (this._count)
        for (var r = e.length, i = this._chunks, o = 0, s = this.count(); o < s; o++) {
          var a = this.getRawIndex(o);
          switch (r) {
            case 0:
              t(o);
              break;
            case 1:
              t(i[e[0]][a], o);
              break;
            case 2:
              t(i[e[0]][a], i[e[1]][a], o);
              break;
            default:
              for (var l = 0, u = []; l < r; l++)
                u[l] = i[e[l]][a];
              u[l] = o, t.apply(null, u);
          }
        }
    }, n.prototype.getDataExtent = function(e) {
      var t = this._chunks[e], r = Wd();
      if (!t)
        return r;
      var i = this.count(), o = !this._indices, s;
      if (o)
        return this._rawExtent[e].slice();
      if (s = this._extent[e], s)
        return s.slice();
      s = r;
      for (var a = s[0], l = s[1], u = 0; u < i; u++) {
        var c = this.getRawIndex(u), h = t[c];
        h < a && (a = h), h > l && (l = h);
      }
      return s = [a, l], this._extent[e] = s, s;
    }, n.prototype.getRawDataItem = function(e) {
      var t = this.getRawIndex(e);
      if (this._provider.persistent)
        return this._provider.getItem(t);
      for (var r = [], i = this._chunks, o = 0; o < i.length; o++)
        r.push(i[o][t]);
      return r;
    }, n.prototype.clone = function(e, t) {
      var r = new n(), i = this._chunks, o = e && fl(e, function(a, l) {
        return a[l] = !0, a;
      }, {});
      if (o)
        for (var s = 0; s < i.length; s++)
          r._chunks[s] = o[s] ? Zxt(i[s]) : i[s];
      else
        r._chunks = i;
      return this._copyCommonProps(r), t || (r._indices = this._cloneIndices()), r._updateGetRawIdx(), r;
    }, n.prototype._copyCommonProps = function(e) {
      e._count = this._count, e._rawCount = this._rawCount, e._provider = this._provider, e._dimensions = this._dimensions, e._extent = Re(this._extent), e._rawExtent = Re(this._rawExtent);
    }, n.prototype._cloneIndices = function() {
      if (this._indices) {
        var e = this._indices.constructor, t = void 0;
        if (e === Array) {
          var r = this._indices.length;
          t = new e(r);
          for (var i = 0; i < r; i++)
            t[i] = this._indices[i];
        } else
          t = new e(this._indices);
        return t;
      }
      return null;
    }, n.prototype._getRawIdxIdentity = function(e) {
      return e;
    }, n.prototype._getRawIdx = function(e) {
      return e < this._count && e >= 0 ? this._indices[e] : -1;
    }, n.prototype._updateGetRawIdx = function() {
      this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
    }, n.internalField = function() {
      function e(t, r, i, o) {
        return mc(t[o], this._dimensions[o]);
      }
      zA = {
        arrayRows: e,
        objectRows: function(t, r, i, o) {
          return mc(t[r], this._dimensions[o]);
        },
        keyedColumns: e,
        original: function(t, r, i, o) {
          var s = t && (t.value == null ? t : t.value);
          return mc(s instanceof Array ? s[o] : s, this._dimensions[o]);
        },
        typedArray: function(t, r, i, o) {
          return t[o];
        }
      };
    }(), n;
  }()
), iee = (
  /** @class */
  function() {
    function n(e) {
      this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = e;
    }
    return n.prototype.dirty = function() {
      this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
    }, n.prototype._setLocalSource = function(e, t) {
      this._sourceList = e, this._upstreamSignList = t, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
    }, n.prototype._getVersionSign = function() {
      return this._sourceHost.uid + "_" + this._versionSignBase;
    }, n.prototype.prepareSource = function() {
      this._isDirty() && (this._createSource(), this._dirty = !1);
    }, n.prototype._createSource = function() {
      this._setLocalSource([], []);
      var e = this._sourceHost, t = this._getUpstreamSourceManagers(), r = !!t.length, i, o;
      if (Uv(e)) {
        var s = e, a = void 0, l = void 0, u = void 0;
        if (r) {
          var c = t[0];
          c.prepareSource(), u = c.getSource(), a = u.data, l = u.sourceFormat, o = [c._getVersionSign()];
        } else
          a = s.get("data", !0), l = zi(a) ? Hl : Es, o = [];
        var h = this._getSourceMetaRawOption() || {}, f = u && u.metaRawOption || {}, d = Qe(h.seriesLayoutBy, f.seriesLayoutBy) || null, p = Qe(h.sourceHeader, f.sourceHeader), g = Qe(h.dimensions, f.dimensions), v = d !== f.seriesLayoutBy || !!p != !!f.sourceHeader || g;
        i = v ? [gM(a, {
          seriesLayoutBy: d,
          sourceHeader: p,
          dimensions: g
        }, l)] : [];
      } else {
        var m = e;
        if (r) {
          var y = this._applyTransform(t);
          i = y.sourceList, o = y.upstreamSignList;
        } else {
          var b = m.get("source", !0);
          i = [gM(b, this._getSourceMetaRawOption(), null)], o = [];
        }
      }
      process.env.NODE_ENV !== "production" && De(i && o), this._setLocalSource(i, o);
    }, n.prototype._applyTransform = function(e) {
      var t = this._sourceHost, r = t.get("transform", !0), i = t.get("fromTransformResult", !0);
      if (process.env.NODE_ENV !== "production" && De(i != null || r != null), i != null) {
        var o = "";
        e.length !== 1 && (process.env.NODE_ENV !== "production" && (o = "When using `fromTransformResult`, there should be only one upstream dataset"), oF(o));
      }
      var s, a = [], l = [];
      return I(e, function(u) {
        u.prepareSource();
        var c = u.getSource(i || 0), h = "";
        i != null && !c && (process.env.NODE_ENV !== "production" && (h = "Can not retrieve result by `fromTransformResult`: " + i), oF(h)), a.push(c), l.push(u._getVersionSign());
      }), r ? s = Vxt(r, a, {
        datasetIndex: t.componentIndex
      }) : i != null && (s = [Oxt(a[0])]), {
        sourceList: s,
        upstreamSignList: l
      };
    }, n.prototype._isDirty = function() {
      if (this._dirty)
        return !0;
      for (var e = this._getUpstreamSourceManagers(), t = 0; t < e.length; t++) {
        var r = e[t];
        if (
          // Consider the case that there is ancestor diry, call it recursively.
          // The performance is probably not an issue because usually the chain is not long.
          r._isDirty() || this._upstreamSignList[t] !== r._getVersionSign()
        )
          return !0;
      }
    }, n.prototype.getSource = function(e) {
      e = e || 0;
      var t = this._sourceList[e];
      if (!t) {
        var r = this._getUpstreamSourceManagers();
        return r[0] && r[0].getSource(e);
      }
      return t;
    }, n.prototype.getSharedDataStore = function(e) {
      process.env.NODE_ENV !== "production" && De(Uv(this._sourceHost), "Can only call getDataStore on series source manager.");
      var t = e.makeStoreSchema();
      return this._innerGetDataStore(t.dimensions, e.source, t.hash);
    }, n.prototype._innerGetDataStore = function(e, t, r) {
      var i = 0, o = this._storeList, s = o[i];
      s || (s = o[i] = {});
      var a = s[r];
      if (!a) {
        var l = this._getUpstreamSourceManagers()[0];
        Uv(this._sourceHost) && l ? a = l._innerGetDataStore(e, t, r) : (a = new vM(), a.initData(new qJ(t, e.length), e)), s[r] = a;
      }
      return a;
    }, n.prototype._getUpstreamSourceManagers = function() {
      var e = this._sourceHost;
      if (Uv(e)) {
        var t = fR(e);
        return t ? [t.getSourceManager()] : [];
      } else
        return ae(Gwt(e), function(r) {
          return r.getSourceManager();
        });
    }, n.prototype._getSourceMetaRawOption = function() {
      var e = this._sourceHost, t, r, i;
      if (Uv(e))
        t = e.get("seriesLayoutBy", !0), r = e.get("sourceHeader", !0), i = e.get("dimensions", !0);
      else if (!this._getUpstreamSourceManagers().length) {
        var o = e;
        t = o.get("seriesLayoutBy", !0), r = o.get("sourceHeader", !0), i = o.get("dimensions", !0);
      }
      return {
        seriesLayoutBy: t,
        sourceHeader: r,
        dimensions: i
      };
    }, n;
  }()
);
function iF(n) {
  var e = n.option.transform;
  e && Nx(n.option.transform);
}
function Uv(n) {
  return n.mainType === "series";
}
function oF(n) {
  throw new Error(n);
}
var oee = "line-height:1";
function see(n, e) {
  var t = n.color || "#6e7079", r = n.fontSize || 12, i = n.fontWeight || "400", o = n.color || "#464646", s = n.fontSize || 14, a = n.fontWeight || "900";
  return e === "html" ? {
    // eslint-disable-next-line max-len
    nameStyle: "font-size:" + no(r + "") + "px;color:" + no(t) + ";font-weight:" + no(i + ""),
    // eslint-disable-next-line max-len
    valueStyle: "font-size:" + no(s + "") + "px;color:" + no(o) + ";font-weight:" + no(a + "")
  } : {
    nameStyle: {
      fontSize: r,
      fill: t,
      fontWeight: i
    },
    valueStyle: {
      fontSize: s,
      fill: o,
      fontWeight: a
    }
  };
}
var Wxt = [0, 10, 20, 30], Gxt = ["", `
`, `

`, `


`];
function Mr(n, e) {
  return e.type = n, e;
}
function mM(n) {
  return n.type === "section";
}
function aee(n) {
  return mM(n) ? jxt : Hxt;
}
function lee(n) {
  if (mM(n)) {
    var e = 0, t = n.blocks.length, r = t > 1 || t > 0 && !n.noHeader;
    return I(n.blocks, function(i) {
      var o = lee(i);
      o >= e && (e = o + +(r && // 0 always can not be readable gap level.
      (!o || mM(i) && !i.noHeader)));
    }), e;
  }
  return 0;
}
function jxt(n, e, t, r) {
  var i = e.noHeader, o = qxt(lee(e)), s = [], a = e.blocks || [];
  De(!a || oe(a)), a = a || [];
  var l = n.orderMode;
  if (e.sortBlocks && l) {
    a = a.slice();
    var u = {
      valueAsc: "asc",
      valueDesc: "desc"
    };
    if (we(u, l)) {
      var c = new eee(u[l], null);
      a.sort(function(p, g) {
        return c.evaluate(p.sortParam, g.sortParam);
      });
    } else
      l === "seriesDesc" && a.reverse();
  }
  I(a, function(p, g) {
    var v = e.valueFormatter, m = aee(p)(
      // Inherit valueFormatter
      v ? te(te({}, n), {
        valueFormatter: v
      }) : n,
      p,
      g > 0 ? o.html : 0,
      r
    );
    m != null && s.push(m);
  });
  var h = n.renderMode === "richText" ? s.join(o.richText) : yM(s.join(""), i ? t : o.html);
  if (i)
    return h;
  var f = hM(e.header, "ordinal", n.useUTC), d = see(r, n.renderMode).nameStyle;
  return n.renderMode === "richText" ? uee(n, f, d) + o.richText + h : yM('<div style="' + d + ";" + oee + ';">' + no(f) + "</div>" + h, t);
}
function Hxt(n, e, t, r) {
  var i = n.renderMode, o = e.noName, s = e.noValue, a = !e.markerType, l = e.name, u = n.useUTC, c = e.valueFormatter || n.valueFormatter || function(O) {
    return O = oe(O) ? O : [O], ae(O, function(w, x) {
      return hM(w, oe(d) ? d[x] : d, u);
    });
  };
  if (!(o && s)) {
    var h = a ? "" : n.markupStyleCreator.makeTooltipMarker(e.markerType, e.markerColor || "#333", i), f = o ? "" : hM(l, "ordinal", u), d = e.valueType, p = s ? [] : c(e.value, e.dataIndex), g = !a || !o, v = !a && o, m = see(r, i), y = m.nameStyle, b = m.valueStyle;
    return i === "richText" ? (a ? "" : h) + (o ? "" : uee(n, f, y)) + (s ? "" : Uxt(n, p, g, v, b)) : yM((a ? "" : h) + (o ? "" : Yxt(f, !a, y)) + (s ? "" : Xxt(p, g, v, b)), t);
  }
}
function sF(n, e, t, r, i, o) {
  if (n) {
    var s = aee(n), a = {
      useUTC: i,
      renderMode: t,
      orderMode: r,
      markupStyleCreator: e,
      valueFormatter: n.valueFormatter
    };
    return s(a, n, 0, o);
  }
}
function qxt(n) {
  return {
    html: Wxt[n],
    richText: Gxt[n]
  };
}
function yM(n, e) {
  var t = '<div style="clear:both"></div>', r = "margin: " + e + "px 0 0";
  return '<div style="' + r + ";" + oee + ';">' + n + t + "</div>";
}
function Yxt(n, e, t) {
  var r = e ? "margin-left:2px" : "";
  return '<span style="' + t + ";" + r + '">' + no(n) + "</span>";
}
function Xxt(n, e, t, r) {
  var i = t ? "10px" : "20px", o = e ? "float:right;margin-left:" + i : "";
  return n = oe(n) ? n : [n], '<span style="' + o + ";" + r + '">' + ae(n, function(s) {
    return no(s);
  }).join("&nbsp;&nbsp;") + "</span>";
}
function uee(n, e, t) {
  return n.markupStyleCreator.wrapRichTextStyle(e, t);
}
function Uxt(n, e, t, r, i) {
  var o = [i], s = r ? 10 : 20;
  return t && o.push({
    padding: [0, 0, 0, s],
    align: "right"
  }), n.markupStyleCreator.wrapRichTextStyle(oe(e) ? e.join("  ") : e, o);
}
function cee(n, e) {
  var t = n.getData().getItemVisual(e, "style"), r = t[n.visualDrawType];
  return od(r);
}
function hee(n, e) {
  var t = n.get("padding");
  return t ?? (e === "richText" ? [8, 10] : 10);
}
var FA = (
  /** @class */
  function() {
    function n() {
      this.richTextStyles = {}, this._nextStyleNameId = mK();
    }
    return n.prototype._generateStyleName = function() {
      return "__EC_aUTo_" + this._nextStyleNameId++;
    }, n.prototype.makeTooltipMarker = function(e, t, r) {
      var i = r === "richText" ? this._generateStyleName() : null, o = Bwt({
        color: t,
        type: e,
        renderMode: r,
        markerId: i
      });
      return be(o) ? o : (process.env.NODE_ENV !== "production" && De(i), this.richTextStyles[i] = o.style, o.content);
    }, n.prototype.wrapRichTextStyle = function(e, t) {
      var r = {};
      oe(t) ? I(t, function(o) {
        return te(r, o);
      }) : te(r, t);
      var i = this._generateStyleName();
      return this.richTextStyles[i] = r, "{" + i + "|" + e + "}";
    }, n;
  }()
);
function fee(n) {
  var e = n.series, t = n.dataIndex, r = n.multipleSeries, i = e.getData(), o = i.mapDimensionsAll("defaultedTooltip"), s = o.length, a = e.getRawValue(t), l = oe(a), u = cee(e, t), c, h, f, d;
  if (s > 1 || l && !s) {
    var p = Kxt(a, e, t, o, u);
    c = p.inlineValues, h = p.inlineValueTypes, f = p.blocks, d = p.inlineValues[0];
  } else if (s) {
    var g = i.getDimensionInfo(o[0]);
    d = c = Lg(i, t, o[0]), h = g.type;
  } else
    d = c = l ? a[0] : a;
  var v = QI(e), m = v && e.name || "", y = i.getName(t), b = r ? m : y;
  return Mr("section", {
    header: m,
    // When series name is not specified, do not show a header line with only '-'.
    // This case always happens in tooltip.trigger: 'item'.
    noHeader: r || !v,
    sortParam: d,
    blocks: [Mr("nameValue", {
      markerType: "item",
      markerColor: u,
      // Do not mix display seriesName and itemName in one tooltip,
      // which might confuses users.
      name: b,
      // name dimension might be auto assigned, where the name might
      // be not readable. So we check trim here.
      noName: !Ys(b),
      value: c,
      valueType: h,
      dataIndex: t
    })].concat(f || [])
  });
}
function Kxt(n, e, t, r, i) {
  var o = e.getData(), s = fl(n, function(h, f, d) {
    var p = o.getDimensionInfo(d);
    return h = h || p && p.tooltip !== !1 && p.displayName != null;
  }, !1), a = [], l = [], u = [];
  r.length ? I(r, function(h) {
    c(Lg(o, t, h), h);
  }) : I(n, c);
  function c(h, f) {
    var d = o.getDimensionInfo(f);
    !d || d.otherDims.tooltip === !1 || (s ? u.push(Mr("nameValue", {
      markerType: "subItem",
      markerColor: i,
      name: d.displayName,
      value: h,
      valueType: d.type
    })) : (a.push(h), l.push(d.type)));
  }
  return {
    inlineValues: a,
    inlineValueTypes: l,
    blocks: u
  };
}
var Au = Ct();
function tO(n, e) {
  return n.getName(e) || n.getId(e);
}
var Tw = "__universalTransitionEnabled", vC = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t._selectedDataIndicesMap = {}, t;
    }
    return e.prototype.init = function(t, r, i) {
      this.seriesIndex = this.componentIndex, this.dataTask = Oy({
        count: eSt,
        reset: tSt
      }), this.dataTask.context = {
        model: this
      }, this.mergeDefaultAndTheme(t, i);
      var o = Au(this).sourceManager = new iee(this);
      o.prepareSource();
      var s = this.getInitialData(t, i);
      lF(s, this), this.dataTask.context.data = s, process.env.NODE_ENV !== "production" && De(s, "getInitialData returned invalid data."), Au(this).dataBeforeProcessed = s, aF(this), this._initSelectedMapFromData(s);
    }, e.prototype.mergeDefaultAndTheme = function(t, r) {
      var i = S0(this), o = i ? bv(t) : {}, s = this.subType;
      Ot.hasClass(s) && (s += "Series"), Je(t, r.getTheme().get(this.subType)), Je(t, this.getDefaultOption()), td(t, "label", ["show"]), this.fillDataTextStyle(t.data), i && zc(t, o, i);
    }, e.prototype.mergeOption = function(t, r) {
      t = Je(this.option, t, !0), this.fillDataTextStyle(t.data);
      var i = S0(this);
      i && zc(this.option, t, i);
      var o = Au(this).sourceManager;
      o.dirty(), o.prepareSource();
      var s = this.getInitialData(t, r);
      lF(s, this), this.dataTask.dirty(), this.dataTask.context.data = s, Au(this).dataBeforeProcessed = s, aF(this), this._initSelectedMapFromData(s);
    }, e.prototype.fillDataTextStyle = function(t) {
      if (t && !zi(t))
        for (var r = ["show"], i = 0; i < t.length; i++)
          t[i] && t[i].label && td(t[i], "label", r);
    }, e.prototype.getInitialData = function(t, r) {
    }, e.prototype.appendData = function(t) {
      var r = this.getRawData();
      r.appendData(t.data);
    }, e.prototype.getData = function(t) {
      var r = bM(this);
      if (r) {
        var i = r.context.data;
        return t == null ? i : i.getLinkedData(t);
      } else
        return Au(this).data;
    }, e.prototype.getAllData = function() {
      var t = this.getData();
      return t && t.getLinkedDataAll ? t.getLinkedDataAll() : [{
        data: t
      }];
    }, e.prototype.setData = function(t) {
      var r = bM(this);
      if (r) {
        var i = r.context;
        i.outputData = t, r !== this.dataTask && (i.data = t);
      }
      Au(this).data = t;
    }, e.prototype.getEncode = function() {
      var t = this.get("encode", !0);
      if (t)
        return _e(t);
    }, e.prototype.getSourceManager = function() {
      return Au(this).sourceManager;
    }, e.prototype.getSource = function() {
      return this.getSourceManager().getSource();
    }, e.prototype.getRawData = function() {
      return Au(this).dataBeforeProcessed;
    }, e.prototype.getColorBy = function() {
      var t = this.get("colorBy");
      return t || "series";
    }, e.prototype.isColorBySeries = function() {
      return this.getColorBy() === "series";
    }, e.prototype.getBaseAxis = function() {
      var t = this.coordinateSystem;
      return t && t.getBaseAxis && t.getBaseAxis();
    }, e.prototype.formatTooltip = function(t, r, i) {
      return fee({
        series: this,
        dataIndex: t,
        multipleSeries: r
      });
    }, e.prototype.isAnimationEnabled = function() {
      var t = this.ecModel;
      if (ht.node && !(t && t.ssr))
        return !1;
      var r = this.getShallow("animation");
      return r && this.getData().count() > this.getShallow("animationThreshold") && (r = !1), !!r;
    }, e.prototype.restoreData = function() {
      this.dataTask.dirty();
    }, e.prototype.getColorFromPalette = function(t, r, i) {
      var o = this.ecModel, s = dR.prototype.getColorFromPalette.call(this, t, r, i);
      return s || (s = o.getColorFromPalette(t, r, i)), s;
    }, e.prototype.coordDimToDataDim = function(t) {
      return this.getRawData().mapDimensionsAll(t);
    }, e.prototype.getProgressive = function() {
      return this.get("progressive");
    }, e.prototype.getProgressiveThreshold = function() {
      return this.get("progressiveThreshold");
    }, e.prototype.select = function(t, r) {
      this._innerSelect(this.getData(r), t);
    }, e.prototype.unselect = function(t, r) {
      var i = this.option.selectedMap;
      if (i) {
        var o = this.option.selectedMode, s = this.getData(r);
        if (o === "series" || i === "all") {
          this.option.selectedMap = {}, this._selectedDataIndicesMap = {};
          return;
        }
        for (var a = 0; a < t.length; a++) {
          var l = t[a], u = tO(s, l);
          i[u] = !1, this._selectedDataIndicesMap[u] = -1;
        }
      }
    }, e.prototype.toggleSelect = function(t, r) {
      for (var i = [], o = 0; o < t.length; o++)
        i[0] = t[o], this.isSelected(t[o], r) ? this.unselect(i, r) : this.select(i, r);
    }, e.prototype.getSelectedDataIndices = function() {
      if (this.option.selectedMap === "all")
        return [].slice.call(this.getData().getIndices());
      for (var t = this._selectedDataIndicesMap, r = ft(t), i = [], o = 0; o < r.length; o++) {
        var s = t[r[o]];
        s >= 0 && i.push(s);
      }
      return i;
    }, e.prototype.isSelected = function(t, r) {
      var i = this.option.selectedMap;
      if (!i)
        return !1;
      var o = this.getData(r);
      return (i === "all" || i[tO(o, t)]) && !o.getItemModel(t).get(["select", "disabled"]);
    }, e.prototype.isUniversalTransitionEnabled = function() {
      if (this[Tw])
        return !0;
      var t = this.option.universalTransition;
      return t ? t === !0 ? !0 : t && t.enabled : !1;
    }, e.prototype._innerSelect = function(t, r) {
      var i, o, s = this.option, a = s.selectedMode, l = r.length;
      if (!(!a || !l)) {
        if (a === "series")
          s.selectedMap = "all";
        else if (a === "multiple") {
          Me(s.selectedMap) || (s.selectedMap = {});
          for (var u = s.selectedMap, c = 0; c < l; c++) {
            var h = r[c], f = tO(t, h);
            u[f] = !0, this._selectedDataIndicesMap[f] = t.getRawIndex(h);
          }
        } else if (a === "single" || a === !0) {
          var d = r[l - 1], f = tO(t, d);
          s.selectedMap = (i = {}, i[f] = !0, i), this._selectedDataIndicesMap = (o = {}, o[f] = t.getRawIndex(d), o);
        }
      }
    }, e.prototype._initSelectedMapFromData = function(t) {
      if (!this.option.selectedMap) {
        var r = [];
        t.hasItemOption && t.each(function(i) {
          var o = t.getRawDataItem(i);
          o && o.selected && r.push(i);
        }), r.length > 0 && this._innerSelect(t, r);
      }
    }, e.registerClass = function(t) {
      return Ot.registerClass(t);
    }, e.protoInitialize = function() {
      var t = e.prototype;
      t.type = "series.__base__", t.seriesIndex = 0, t.ignoreStyleOnData = !1, t.hasSymbolVisual = !1, t.defaultSymbol = "circle", t.visualStyleAccessPath = "itemStyle", t.visualDrawType = "fill";
    }(), e;
  }(Ot)
);
lr(vC, yR);
lr(vC, dR);
AK(vC, Ot);
function aF(n) {
  var e = n.name;
  QI(n) || (n.name = Jxt(n) || e);
}
function Jxt(n) {
  var e = n.getRawData(), t = e.mapDimensionsAll("seriesName"), r = [];
  return I(t, function(i) {
    var o = e.getDimensionInfo(i);
    o.displayName && r.push(o.displayName);
  }), r.join(" ");
}
function eSt(n) {
  return n.model.getRawData().count();
}
function tSt(n) {
  var e = n.model;
  return e.setData(e.getRawData().cloneShallow()), nSt;
}
function nSt(n, e) {
  e.outputData && n.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
}
function lF(n, e) {
  I(Bx(n.CHANGABLE_METHODS, n.DOWNSAMPLE_METHODS), function(t) {
    n.wrapMethod(t, je(rSt, e));
  });
}
function rSt(n, e) {
  var t = bM(n);
  return t && t.setOutputEnd((e || this).count()), e;
}
function bM(n) {
  var e = (n.ecModel || {}).scheduler, t = e && e.getPipeline(n.uid);
  if (t) {
    var r = t.currentTask;
    if (r) {
      var i = r.agentStubMap;
      i && (r = i.get(n.uid));
    }
    return r;
  }
}
const Sn = vC;
var OR = (
  /** @class */
  function() {
    function n() {
      this.group = new Ve(), this.uid = mv("viewComponent");
    }
    return n.prototype.init = function(e, t) {
    }, n.prototype.render = function(e, t, r, i) {
    }, n.prototype.dispose = function(e, t) {
    }, n.prototype.updateView = function(e, t, r, i) {
    }, n.prototype.updateLayout = function(e, t, r, i) {
    }, n.prototype.updateVisual = function(e, t, r, i) {
    }, n.prototype.toggleBlurSeries = function(e, t, r) {
    }, n.prototype.eachRendered = function(e) {
      var t = this.group;
      t && t.traverse(e);
    }, n;
  }()
);
WI(OR);
U_(OR);
const Nn = OR;
function Sv() {
  var n = Ct();
  return function(e) {
    var t = n(e), r = e.pipelineContext, i = !!t.large, o = !!t.progressiveRender, s = t.large = !!(r && r.large), a = t.progressiveRender = !!(r && r.progressiveRender);
    return (i !== s || o !== a) && "reset";
  };
}
var dee = Ct(), iSt = Sv(), wR = (
  /** @class */
  function() {
    function n() {
      this.group = new Ve(), this.uid = mv("viewChart"), this.renderTask = Oy({
        plan: oSt,
        reset: sSt
      }), this.renderTask.context = {
        view: this
      };
    }
    return n.prototype.init = function(e, t) {
    }, n.prototype.render = function(e, t, r, i) {
      if (process.env.NODE_ENV !== "production")
        throw new Error("render method must been implemented");
    }, n.prototype.highlight = function(e, t, r, i) {
      var o = e.getData(i && i.dataType);
      if (!o) {
        process.env.NODE_ENV !== "production" && li("Unknown dataType " + i.dataType);
        return;
      }
      cF(o, i, "emphasis");
    }, n.prototype.downplay = function(e, t, r, i) {
      var o = e.getData(i && i.dataType);
      if (!o) {
        process.env.NODE_ENV !== "production" && li("Unknown dataType " + i.dataType);
        return;
      }
      cF(o, i, "normal");
    }, n.prototype.remove = function(e, t) {
      this.group.removeAll();
    }, n.prototype.dispose = function(e, t) {
    }, n.prototype.updateView = function(e, t, r, i) {
      this.render(e, t, r, i);
    }, n.prototype.updateLayout = function(e, t, r, i) {
      this.render(e, t, r, i);
    }, n.prototype.updateVisual = function(e, t, r, i) {
      this.render(e, t, r, i);
    }, n.prototype.eachRendered = function(e) {
      ih(this.group, e);
    }, n.markUpdateMethod = function(e, t) {
      dee(e).updateMethod = t;
    }, n.protoInitialize = function() {
      var e = n.prototype;
      e.type = "chart";
    }(), n;
  }()
);
function uF(n, e, t) {
  n && Bc(n) && (e === "emphasis" ? su : au)(n, t);
}
function cF(n, e, t) {
  var r = nd(n, e), i = e && e.highlightKey != null ? DOt(e.highlightKey) : null;
  r != null ? I(Kt(r), function(o) {
    uF(n.getItemGraphicEl(o), t, i);
  }) : n.eachItemGraphicEl(function(o) {
    uF(o, t, i);
  });
}
WI(wR, ["dispose"]);
U_(wR);
function oSt(n) {
  return iSt(n.model);
}
function sSt(n) {
  var e = n.model, t = n.ecModel, r = n.api, i = n.payload, o = e.pipelineContext.progressiveRender, s = n.view, a = i && dee(i).updateMethod, l = o ? "incrementalPrepareRender" : a && s[a] ? a : "render";
  return l !== "render" && s[l](e, t, r, i), aSt[l];
}
var aSt = {
  incrementalPrepareRender: {
    progress: function(n, e) {
      e.view.incrementalRender(n, e.model, e.ecModel, e.api, e.payload);
    }
  },
  render: {
    // Put view.render in `progress` to support appendData. But in this case
    // view.render should not be called in reset, otherwise it will be called
    // twise. Use `forceFirstProgress` to make sure that view.render is called
    // in any cases.
    forceFirstProgress: !0,
    progress: function(n, e) {
      e.view.render(e.model, e.ecModel, e.api, e.payload);
    }
  }
};
const dn = wR;
var tS = "\0__throttleOriginMethod", hF = "\0__throttleRate", fF = "\0__throttleType";
function xR(n, e, t) {
  var r, i = 0, o = 0, s = null, a, l, u, c;
  e = e || 0;
  function h() {
    o = (/* @__PURE__ */ new Date()).getTime(), s = null, n.apply(l, u || []);
  }
  var f = function() {
    for (var d = [], p = 0; p < arguments.length; p++)
      d[p] = arguments[p];
    r = (/* @__PURE__ */ new Date()).getTime(), l = this, u = d;
    var g = c || e, v = c || t;
    c = null, a = r - (v ? i : o) - g, clearTimeout(s), v ? s = setTimeout(h, g) : a >= 0 ? h() : s = setTimeout(h, -a), i = r;
  };
  return f.clear = function() {
    s && (clearTimeout(s), s = null);
  }, f.debounceNextCall = function(d) {
    c = d;
  }, f;
}
function _v(n, e, t, r) {
  var i = n[e];
  if (i) {
    var o = i[tS] || i, s = i[fF], a = i[hF];
    if (a !== t || s !== r) {
      if (t == null || !r)
        return n[e] = o;
      i = n[e] = xR(o, t, r === "debounce"), i[tS] = o, i[fF] = r, i[hF] = t;
    }
    return i;
  }
}
function C0(n, e) {
  var t = n[e];
  t && t[tS] && (t.clear && t.clear(), n[e] = t[tS]);
}
var dF = Ct(), pF = {
  itemStyle: rd(OJ, !0),
  lineStyle: rd(bJ, !0)
}, lSt = {
  lineStyle: "stroke",
  itemStyle: "fill"
};
function pee(n, e) {
  var t = n.visualStyleMapper || pF[e];
  return t || (console.warn("Unknown style type '" + e + "'."), pF.itemStyle);
}
function gee(n, e) {
  var t = n.visualDrawType || lSt[e];
  return t || (console.warn("Unknown style type '" + e + "'."), "fill");
}
var uSt = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(n, e) {
    var t = n.getData(), r = n.visualStyleAccessPath || "itemStyle", i = n.getModel(r), o = pee(n, r), s = o(i), a = i.getShallow("decal");
    a && (t.setVisual("decal", a), a.dirty = !0);
    var l = gee(n, r), u = s[l], c = Pe(u) ? u : null, h = s.fill === "auto" || s.stroke === "auto";
    if (!s[l] || c || h) {
      var f = n.getColorFromPalette(
        // TODO series count changed.
        n.name,
        null,
        e.getSeriesCount()
      );
      s[l] || (s[l] = f, t.setVisual("colorFromPalette", !0)), s.fill = s.fill === "auto" || Pe(s.fill) ? f : s.fill, s.stroke = s.stroke === "auto" || Pe(s.stroke) ? f : s.stroke;
    }
    if (t.setVisual("style", s), t.setVisual("drawType", l), !e.isSeriesFiltered(n) && c)
      return t.setVisual("colorFromPalette", !1), {
        dataEach: function(d, p) {
          var g = n.getDataParams(p), v = te({}, s);
          v[l] = c(g), d.setItemVisual(p, "style", v);
        }
      };
  }
}, Kv = new fn(), cSt = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(n, e) {
    if (!(n.ignoreStyleOnData || e.isSeriesFiltered(n))) {
      var t = n.getData(), r = n.visualStyleAccessPath || "itemStyle", i = pee(n, r), o = t.getVisual("drawType");
      return {
        dataEach: t.hasItemOption ? function(s, a) {
          var l = s.getRawDataItem(a);
          if (l && l[r]) {
            Kv.option = l[r];
            var u = i(Kv), c = s.ensureUniqueItemVisual(a, "style");
            te(c, u), Kv.option.decal && (s.setItemVisual(a, "decal", Kv.option.decal), Kv.option.decal.dirty = !0), o in u && s.setItemVisual(a, "colorFromPalette", !1);
          }
        } : null
      };
    }
  }
}, hSt = {
  performRawSeries: !0,
  overallReset: function(n) {
    var e = _e();
    n.eachSeries(function(t) {
      var r = t.getColorBy();
      if (!t.isColorBySeries()) {
        var i = t.type + "-" + r, o = e.get(i);
        o || (o = {}, e.set(i, o)), dF(t).scope = o;
      }
    }), n.eachSeries(function(t) {
      if (!(t.isColorBySeries() || n.isSeriesFiltered(t))) {
        var r = t.getRawData(), i = {}, o = t.getData(), s = dF(t).scope, a = t.visualStyleAccessPath || "itemStyle", l = gee(t, a);
        o.each(function(u) {
          var c = o.getRawIndex(u);
          i[c] = u;
        }), r.each(function(u) {
          var c = i[u], h = o.getItemVisual(c, "colorFromPalette");
          if (h) {
            var f = o.ensureUniqueItemVisual(c, "style"), d = r.getName(u) || u + "", p = r.count();
            f[l] = t.getColorFromPalette(d, s, p);
          }
        });
      }
    });
  }
}, nO = Math.PI;
function fSt(n, e) {
  e = e || {}, Le(e, {
    text: "loading",
    textColor: "#000",
    fontSize: 12,
    fontWeight: "normal",
    fontStyle: "normal",
    fontFamily: "sans-serif",
    maskColor: "rgba(255, 255, 255, 0.8)",
    showSpinner: !0,
    color: "#5470c6",
    spinnerRadius: 10,
    lineWidth: 5,
    zlevel: 0
  });
  var t = new Ve(), r = new _t({
    style: {
      fill: e.maskColor
    },
    zlevel: e.zlevel,
    z: 1e4
  });
  t.add(r);
  var i = new At({
    style: {
      text: e.text,
      fill: e.textColor,
      fontSize: e.fontSize,
      fontWeight: e.fontWeight,
      fontStyle: e.fontStyle,
      fontFamily: e.fontFamily
    },
    zlevel: e.zlevel,
    z: 10001
  }), o = new _t({
    style: {
      fill: "none"
    },
    textContent: i,
    textConfig: {
      position: "right",
      distance: 10
    },
    zlevel: e.zlevel,
    z: 10001
  });
  t.add(o);
  var s;
  return e.showSpinner && (s = new eR({
    shape: {
      startAngle: -nO / 2,
      endAngle: -nO / 2 + 0.1,
      r: e.spinnerRadius
    },
    style: {
      stroke: e.color,
      lineCap: "round",
      lineWidth: e.lineWidth
    },
    zlevel: e.zlevel,
    z: 10001
  }), s.animateShape(!0).when(1e3, {
    endAngle: nO * 3 / 2
  }).start("circularInOut"), s.animateShape(!0).when(1e3, {
    startAngle: nO * 3 / 2
  }).delay(300).start("circularInOut"), t.add(s)), t.resize = function() {
    var a = i.getBoundingRect().width, l = e.showSpinner ? e.spinnerRadius : 0, u = (n.getWidth() - l * 2 - (e.showSpinner && a ? 10 : 0) - a) / 2 - (e.showSpinner && a ? 0 : 5 + a / 2) + (e.showSpinner ? 0 : a / 2) + (a ? 0 : l), c = n.getHeight() / 2;
    e.showSpinner && s.setShape({
      cx: u,
      cy: c
    }), o.setShape({
      x: u - l,
      y: c - l,
      width: l * 2,
      height: l * 2
    }), r.setShape({
      x: 0,
      y: 0,
      width: n.getWidth(),
      height: n.getHeight()
    });
  }, t.resize(), t;
}
var vee = (
  /** @class */
  function() {
    function n(e, t, r, i) {
      this._stageTaskMap = _e(), this.ecInstance = e, this.api = t, r = this._dataProcessorHandlers = r.slice(), i = this._visualHandlers = i.slice(), this._allHandlers = r.concat(i);
    }
    return n.prototype.restoreData = function(e, t) {
      e.restoreData(t), this._stageTaskMap.each(function(r) {
        var i = r.overallTask;
        i && i.dirty();
      });
    }, n.prototype.getPerformArgs = function(e, t) {
      if (e.__pipeline) {
        var r = this._pipelineMap.get(e.__pipeline.id), i = r.context, o = !t && r.progressiveEnabled && (!i || i.progressiveRender) && e.__idxInPipeline > r.blockIndex, s = o ? r.step : null, a = i && i.modDataCount, l = a != null ? Math.ceil(a / s) : null;
        return {
          step: s,
          modBy: l,
          modDataCount: a
        };
      }
    }, n.prototype.getPipeline = function(e) {
      return this._pipelineMap.get(e);
    }, n.prototype.updateStreamModes = function(e, t) {
      var r = this._pipelineMap.get(e.uid), i = e.getData(), o = i.count(), s = r.progressiveEnabled && t.incrementalPrepareRender && o >= r.threshold, a = e.get("large") && o >= e.get("largeThreshold"), l = e.get("progressiveChunkMode") === "mod" ? o : null;
      e.pipelineContext = r.context = {
        progressiveRender: s,
        modDataCount: l,
        large: a
      };
    }, n.prototype.restorePipelines = function(e) {
      var t = this, r = t._pipelineMap = _e();
      e.eachSeries(function(i) {
        var o = i.getProgressive(), s = i.uid;
        r.set(s, {
          id: s,
          head: null,
          tail: null,
          threshold: i.getProgressiveThreshold(),
          progressiveEnabled: o && !(i.preventIncremental && i.preventIncremental()),
          blockIndex: -1,
          step: Math.round(o || 700),
          count: 0
        }), t._pipe(i, i.dataTask);
      });
    }, n.prototype.prepareStageTasks = function() {
      var e = this._stageTaskMap, t = this.api.getModel(), r = this.api;
      I(this._allHandlers, function(i) {
        var o = e.get(i.uid) || e.set(i.uid, {}), s = "";
        process.env.NODE_ENV !== "production" && (s = '"reset" and "overallReset" must not be both specified.'), De(!(i.reset && i.overallReset), s), i.reset && this._createSeriesStageTask(i, o, t, r), i.overallReset && this._createOverallStageTask(i, o, t, r);
      }, this);
    }, n.prototype.prepareView = function(e, t, r, i) {
      var o = e.renderTask, s = o.context;
      s.model = t, s.ecModel = r, s.api = i, o.__block = !e.incrementalPrepareRender, this._pipe(t, o);
    }, n.prototype.performDataProcessorTasks = function(e, t) {
      this._performStageTasks(this._dataProcessorHandlers, e, t, {
        block: !0
      });
    }, n.prototype.performVisualTasks = function(e, t, r) {
      this._performStageTasks(this._visualHandlers, e, t, r);
    }, n.prototype._performStageTasks = function(e, t, r, i) {
      i = i || {};
      var o = !1, s = this;
      I(e, function(l, u) {
        if (!(i.visualType && i.visualType !== l.visualType)) {
          var c = s._stageTaskMap.get(l.uid), h = c.seriesTaskMap, f = c.overallTask;
          if (f) {
            var d, p = f.agentStubMap;
            p.each(function(v) {
              a(i, v) && (v.dirty(), d = !0);
            }), d && f.dirty(), s.updatePayload(f, r);
            var g = s.getPerformArgs(f, i.block);
            p.each(function(v) {
              v.perform(g);
            }), f.perform(g) && (o = !0);
          } else
            h && h.each(function(v, m) {
              a(i, v) && v.dirty();
              var y = s.getPerformArgs(v, i.block);
              y.skip = !l.performRawSeries && t.isSeriesFiltered(v.context.model), s.updatePayload(v, r), v.perform(y) && (o = !0);
            });
        }
      });
      function a(l, u) {
        return l.setDirty && (!l.dirtyMap || l.dirtyMap.get(u.__pipeline.id));
      }
      this.unfinished = o || this.unfinished;
    }, n.prototype.performSeriesTasks = function(e) {
      var t;
      e.eachSeries(function(r) {
        t = r.dataTask.perform() || t;
      }), this.unfinished = t || this.unfinished;
    }, n.prototype.plan = function() {
      this._pipelineMap.each(function(e) {
        var t = e.tail;
        do {
          if (t.__block) {
            e.blockIndex = t.__idxInPipeline;
            break;
          }
          t = t.getUpstream();
        } while (t);
      });
    }, n.prototype.updatePayload = function(e, t) {
      t !== "remain" && (e.context.payload = t);
    }, n.prototype._createSeriesStageTask = function(e, t, r, i) {
      var o = this, s = t.seriesTaskMap, a = t.seriesTaskMap = _e(), l = e.seriesType, u = e.getTargetSeries;
      e.createOnAllSeries ? r.eachRawSeries(c) : l ? r.eachRawSeriesByType(l, c) : u && u(r, i).each(c);
      function c(h) {
        var f = h.uid, d = a.set(f, s && s.get(f) || Oy({
          plan: mSt,
          reset: ySt,
          count: OSt
        }));
        d.context = {
          model: h,
          ecModel: r,
          api: i,
          // PENDING: `useClearVisual` not used?
          useClearVisual: e.isVisual && !e.isLayout,
          plan: e.plan,
          reset: e.reset,
          scheduler: o
        }, o._pipe(h, d);
      }
    }, n.prototype._createOverallStageTask = function(e, t, r, i) {
      var o = this, s = t.overallTask = t.overallTask || Oy({
        reset: dSt
      });
      s.context = {
        ecModel: r,
        api: i,
        overallReset: e.overallReset,
        scheduler: o
      };
      var a = s.agentStubMap, l = s.agentStubMap = _e(), u = e.seriesType, c = e.getTargetSeries, h = !0, f = !1, d = "";
      process.env.NODE_ENV !== "production" && (d = '"createOnAllSeries" is not supported for "overallReset", because it will block all streams.'), De(!e.createOnAllSeries, d), u ? r.eachRawSeriesByType(u, p) : c ? c(r, i).each(p) : (h = !1, I(r.getSeries(), p));
      function p(g) {
        var v = g.uid, m = l.set(v, a && a.get(v) || // When the result of `getTargetSeries` changed, the overallTask
        // should be set as dirty and re-performed.
        (f = !0, Oy({
          reset: pSt,
          onDirty: vSt
        })));
        m.context = {
          model: g,
          overallProgress: h
          // FIXME:TS never used, so comment it
          // modifyOutputEnd: modifyOutputEnd
        }, m.agent = s, m.__block = h, o._pipe(g, m);
      }
      f && s.dirty();
    }, n.prototype._pipe = function(e, t) {
      var r = e.uid, i = this._pipelineMap.get(r);
      !i.head && (i.head = t), i.tail && i.tail.pipe(t), i.tail = t, t.__idxInPipeline = i.count++, t.__pipeline = i;
    }, n.wrapStageHandler = function(e, t) {
      return Pe(e) && (e = {
        overallReset: e,
        seriesType: wSt(e)
      }), e.uid = mv("stageHandler"), t && (e.visualType = t), e;
    }, n;
  }()
);
function dSt(n) {
  n.overallReset(n.ecModel, n.api, n.payload);
}
function pSt(n) {
  return n.overallProgress && gSt;
}
function gSt() {
  this.agent.dirty(), this.getDownstream().dirty();
}
function vSt() {
  this.agent && this.agent.dirty();
}
function mSt(n) {
  return n.plan ? n.plan(n.model, n.ecModel, n.api, n.payload) : null;
}
function ySt(n) {
  n.useClearVisual && n.data.clearAllVisual();
  var e = n.resetDefines = Kt(n.reset(n.model, n.ecModel, n.api, n.payload));
  return e.length > 1 ? ae(e, function(t, r) {
    return mee(r);
  }) : bSt;
}
var bSt = mee(0);
function mee(n) {
  return function(e, t) {
    var r = t.data, i = t.resetDefines[n];
    if (i && i.dataEach)
      for (var o = e.start; o < e.end; o++)
        i.dataEach(r, o);
    else
      i && i.progress && i.progress(e, r);
  };
}
function OSt(n) {
  return n.data.count();
}
function wSt(n) {
  nS = null;
  try {
    n(A0, yee);
  } catch {
  }
  return nS;
}
var A0 = {}, yee = {}, nS;
bee(A0, pR);
bee(yee, ZJ);
A0.eachSeriesByType = A0.eachRawSeriesByType = function(n) {
  nS = n;
};
A0.eachComponent = function(n) {
  n.mainType === "series" && n.subType && (nS = n.subType);
};
function bee(n, e) {
  for (var t in e.prototype)
    n[t] = qn;
}
var gF = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"];
const xSt = {
  color: gF,
  colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], gF]
};
var Ei = "#B9B8CE", vF = "#100C2A", rO = function() {
  return {
    axisLine: {
      lineStyle: {
        color: Ei
      }
    },
    splitLine: {
      lineStyle: {
        color: "#484753"
      }
    },
    splitArea: {
      areaStyle: {
        color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
      }
    },
    minorSplitLine: {
      lineStyle: {
        color: "#20203B"
      }
    }
  };
}, mF = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"], Oee = {
  darkMode: !0,
  color: mF,
  backgroundColor: vF,
  axisPointer: {
    lineStyle: {
      color: "#817f91"
    },
    crossStyle: {
      color: "#817f91"
    },
    label: {
      // TODO Contrast of label backgorundColor
      color: "#fff"
    }
  },
  legend: {
    textStyle: {
      color: Ei
    }
  },
  textStyle: {
    color: Ei
  },
  title: {
    textStyle: {
      color: "#EEF1FA"
    },
    subtextStyle: {
      color: "#B9B8CE"
    }
  },
  toolbox: {
    iconStyle: {
      borderColor: Ei
    }
  },
  dataZoom: {
    borderColor: "#71708A",
    textStyle: {
      color: Ei
    },
    brushStyle: {
      color: "rgba(135,163,206,0.3)"
    },
    handleStyle: {
      color: "#353450",
      borderColor: "#C5CBE3"
    },
    moveHandleStyle: {
      color: "#B0B6C3",
      opacity: 0.3
    },
    fillerColor: "rgba(135,163,206,0.2)",
    emphasis: {
      handleStyle: {
        borderColor: "#91B7F2",
        color: "#4D587D"
      },
      moveHandleStyle: {
        color: "#636D9A",
        opacity: 0.7
      }
    },
    dataBackground: {
      lineStyle: {
        color: "#71708A",
        width: 1
      },
      areaStyle: {
        color: "#71708A"
      }
    },
    selectedDataBackground: {
      lineStyle: {
        color: "#87A3CE"
      },
      areaStyle: {
        color: "#87A3CE"
      }
    }
  },
  visualMap: {
    textStyle: {
      color: Ei
    }
  },
  timeline: {
    lineStyle: {
      color: Ei
    },
    label: {
      color: Ei
    },
    controlStyle: {
      color: Ei,
      borderColor: Ei
    }
  },
  calendar: {
    itemStyle: {
      color: vF
    },
    dayLabel: {
      color: Ei
    },
    monthLabel: {
      color: Ei
    },
    yearLabel: {
      color: Ei
    }
  },
  timeAxis: rO(),
  logAxis: rO(),
  valueAxis: rO(),
  categoryAxis: rO(),
  line: {
    symbol: "circle"
  },
  graph: {
    color: mF
  },
  gauge: {
    title: {
      color: Ei
    },
    axisLine: {
      lineStyle: {
        color: [[1, "rgba(207,212,219,0.2)"]]
      }
    },
    axisLabel: {
      color: Ei
    },
    detail: {
      color: "#EEF1FA"
    }
  },
  candlestick: {
    itemStyle: {
      color: "#f64e56",
      color0: "#54ea92",
      borderColor: "#f64e56",
      borderColor0: "#54ea92"
      // borderColor: '#ca2824',
      // borderColor0: '#09a443'
    }
  }
};
Oee.categoryAxis.splitLine.show = !1;
const SSt = Oee;
var _St = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.normalizeQuery = function(e) {
      var t = {}, r = {}, i = {};
      if (be(e)) {
        var o = qa(e);
        t.mainType = o.main || null, t.subType = o.sub || null;
      } else {
        var s = ["Index", "Name", "Id"], a = {
          name: 1,
          dataIndex: 1,
          dataType: 1
        };
        I(e, function(l, u) {
          for (var c = !1, h = 0; h < s.length; h++) {
            var f = s[h], d = u.lastIndexOf(f);
            if (d > 0 && d === u.length - f.length) {
              var p = u.slice(0, d);
              p !== "data" && (t.mainType = p, t[f.toLowerCase()] = l, c = !0);
            }
          }
          a.hasOwnProperty(u) && (r[u] = l, c = !0), c || (i[u] = l);
        });
      }
      return {
        cptQuery: t,
        dataQuery: r,
        otherQuery: i
      };
    }, n.prototype.filter = function(e, t) {
      var r = this.eventInfo;
      if (!r)
        return !0;
      var i = r.targetEl, o = r.packedEvent, s = r.model, a = r.view;
      if (!s || !a)
        return !0;
      var l = t.cptQuery, u = t.dataQuery;
      return c(l, s, "mainType") && c(l, s, "subType") && c(l, s, "index", "componentIndex") && c(l, s, "name") && c(l, s, "id") && c(u, o, "name") && c(u, o, "dataIndex") && c(u, o, "dataType") && (!a.filterForExposedEvent || a.filterForExposedEvent(e, t.otherQuery, i, o));
      function c(h, f, d, p) {
        return h[d] == null || f[p || d] === h[d];
      }
    }, n.prototype.afterTrigger = function() {
      this.eventInfo = null;
    }, n;
  }()
), OM = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"], yF = OM.concat(["symbolKeepAspect"]), CSt = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(n, e) {
    var t = n.getData();
    if (n.legendIcon && t.setVisual("legendIcon", n.legendIcon), !n.hasSymbolVisual)
      return;
    for (var r = {}, i = {}, o = !1, s = 0; s < OM.length; s++) {
      var a = OM[s], l = n.get(a);
      Pe(l) ? (o = !0, i[a] = l) : r[a] = l;
    }
    if (r.symbol = r.symbol || n.defaultSymbol, t.setVisual(te({
      legendIcon: n.legendIcon || r.symbol,
      symbolKeepAspect: n.get("symbolKeepAspect")
    }, r)), e.isSeriesFiltered(n))
      return;
    var u = ft(i);
    function c(h, f) {
      for (var d = n.getRawValue(f), p = n.getDataParams(f), g = 0; g < u.length; g++) {
        var v = u[g];
        h.setItemVisual(f, v, i[v](d, p));
      }
    }
    return {
      dataEach: o ? c : null
    };
  }
}, ASt = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(n, e) {
    if (!n.hasSymbolVisual || e.isSeriesFiltered(n))
      return;
    var t = n.getData();
    function r(i, o) {
      for (var s = i.getItemModel(o), a = 0; a < yF.length; a++) {
        var l = yF[a], u = s.getShallow(l, !0);
        u != null && i.setItemVisual(o, l, u);
      }
    }
    return {
      dataEach: t.hasItemOption ? r : null
    };
  }
};
function SR(n, e, t) {
  switch (t) {
    case "color":
      var r = n.getItemVisual(e, "style");
      return r[n.getVisual("drawType")];
    case "opacity":
      return n.getItemVisual(e, "style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return n.getItemVisual(e, t);
    default:
      process.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
function Tb(n, e) {
  switch (e) {
    case "color":
      var t = n.getVisual("style");
      return t[n.getVisual("drawType")];
    case "opacity":
      return n.getVisual("style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return n.getVisual(e);
    default:
      process.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + e);
  }
}
function wee(n, e, t, r) {
  switch (t) {
    case "color":
      var i = n.ensureUniqueItemVisual(e, "style");
      i[n.getVisual("drawType")] = r, n.setItemVisual(e, "colorFromPalette", !1);
      break;
    case "opacity":
      n.ensureUniqueItemVisual(e, "style").opacity = r;
      break;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      n.setItemVisual(e, t, r);
      break;
    default:
      process.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
function xee(n, e) {
  function t(r, i) {
    var o = [];
    return r.eachComponent({
      mainType: "series",
      subType: n,
      query: i
    }, function(s) {
      o.push(s.seriesIndex);
    }), o;
  }
  I([[n + "ToggleSelect", "toggleSelect"], [n + "Select", "select"], [n + "UnSelect", "unselect"]], function(r) {
    e(r[0], function(i, o, s) {
      i = te({}, i), process.env.NODE_ENV !== "production" && er(i.type, r[1]), s.dispatchAction(te(i, {
        type: r[1],
        seriesIndex: t(o, i)
      }));
    });
  });
}
function Gd(n, e, t, r, i) {
  var o = n + e;
  t.isSilent(o) || (process.env.NODE_ENV !== "production" && la("event " + o + " is deprecated."), r.eachComponent({
    mainType: "series",
    subType: "pie"
  }, function(s) {
    for (var a = s.seriesIndex, l = s.option.selectedMap, u = i.selected, c = 0; c < u.length; c++)
      if (u[c].seriesIndex === a) {
        var h = s.getData(), f = nd(h, i.fromActionPayload);
        t.trigger(o, {
          type: o,
          seriesId: s.id,
          name: oe(f) ? h.getName(f[0]) : h.getName(f),
          selected: be(l) ? l : te({}, l)
        });
      }
  }));
}
function TSt(n, e, t) {
  n.on("selectchanged", function(r) {
    var i = t.getModel();
    r.isFromClick ? (Gd("map", "selectchanged", e, i, r), Gd("pie", "selectchanged", e, i, r)) : r.fromAction === "select" ? (Gd("map", "selected", e, i, r), Gd("pie", "selected", e, i, r)) : r.fromAction === "unselect" && (Gd("map", "unselected", e, i, r), Gd("pie", "unselected", e, i, r));
  });
}
function df(n, e, t) {
  for (var r; n && !(e(n) && (r = n, t)); )
    n = n.__hostTarget || n.parent;
  return r;
}
var PSt = Math.round(Math.random() * 9), ESt = typeof Object.defineProperty == "function", kSt = function() {
  function n() {
    this._id = "__ec_inner_" + PSt++;
  }
  return n.prototype.get = function(e) {
    return this._guard(e)[this._id];
  }, n.prototype.set = function(e, t) {
    var r = this._guard(e);
    return ESt ? Object.defineProperty(r, this._id, {
      value: t,
      enumerable: !1,
      configurable: !0
    }) : r[this._id] = t, this;
  }, n.prototype.delete = function(e) {
    return this.has(e) ? (delete this._guard(e)[this._id], !0) : !1;
  }, n.prototype.has = function(e) {
    return !!this._guard(e)[this._id];
  }, n.prototype._guard = function(e) {
    if (e !== Object(e))
      throw TypeError("Value of WeakMap is not a non-null object.");
    return e;
  }, n;
}(), MSt = ct.extend({
  type: "triangle",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(n, e) {
    var t = e.cx, r = e.cy, i = e.width / 2, o = e.height / 2;
    n.moveTo(t, r - o), n.lineTo(t + i, r + o), n.lineTo(t - i, r + o), n.closePath();
  }
}), DSt = ct.extend({
  type: "diamond",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(n, e) {
    var t = e.cx, r = e.cy, i = e.width / 2, o = e.height / 2;
    n.moveTo(t, r - o), n.lineTo(t + i, r), n.lineTo(t, r + o), n.lineTo(t - i, r), n.closePath();
  }
}), LSt = ct.extend({
  type: "pin",
  shape: {
    // x, y on the cusp
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(n, e) {
    var t = e.x, r = e.y, i = e.width / 5 * 3, o = Math.max(i, e.height), s = i / 2, a = s * s / (o - s), l = r - o + s + a, u = Math.asin(a / s), c = Math.cos(u) * s, h = Math.sin(u), f = Math.cos(u), d = s * 0.6, p = s * 0.7;
    n.moveTo(t - c, l + a), n.arc(t, l, s, Math.PI - u, Math.PI * 2 + u), n.bezierCurveTo(t + c - h * d, l + a + f * d, t, r - p, t, r), n.bezierCurveTo(t, r - p, t - c + h * d, l + a + f * d, t - c, l + a), n.closePath();
  }
}), ISt = ct.extend({
  type: "arrow",
  shape: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(n, e) {
    var t = e.height, r = e.width, i = e.x, o = e.y, s = r / 3 * 2;
    n.moveTo(i, o), n.lineTo(i + s, o + t), n.lineTo(i, o + t / 4 * 3), n.lineTo(i - s, o + t), n.lineTo(i, o), n.closePath();
  }
}), RSt = {
  line: Ar,
  rect: _t,
  roundRect: _t,
  square: _t,
  circle: rh,
  diamond: DSt,
  pin: LSt,
  arrow: ISt,
  triangle: MSt
}, $St = {
  line: function(n, e, t, r, i) {
    i.x1 = n, i.y1 = e + r / 2, i.x2 = n + t, i.y2 = e + r / 2;
  },
  rect: function(n, e, t, r, i) {
    i.x = n, i.y = e, i.width = t, i.height = r;
  },
  roundRect: function(n, e, t, r, i) {
    i.x = n, i.y = e, i.width = t, i.height = r, i.r = Math.min(t, r) / 4;
  },
  square: function(n, e, t, r, i) {
    var o = Math.min(t, r);
    i.x = n, i.y = e, i.width = o, i.height = o;
  },
  circle: function(n, e, t, r, i) {
    i.cx = n + t / 2, i.cy = e + r / 2, i.r = Math.min(t, r) / 2;
  },
  diamond: function(n, e, t, r, i) {
    i.cx = n + t / 2, i.cy = e + r / 2, i.width = t, i.height = r;
  },
  pin: function(n, e, t, r, i) {
    i.x = n + t / 2, i.y = e + r / 2, i.width = t, i.height = r;
  },
  arrow: function(n, e, t, r, i) {
    i.x = n + t / 2, i.y = e + r / 2, i.width = t, i.height = r;
  },
  triangle: function(n, e, t, r, i) {
    i.cx = n + t / 2, i.cy = e + r / 2, i.width = t, i.height = r;
  }
}, rS = {};
I(RSt, function(n, e) {
  rS[e] = new n();
});
var NSt = ct.extend({
  type: "symbol",
  shape: {
    symbolType: "",
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  calculateTextPosition: function(n, e, t) {
    var r = Gx(n, e, t), i = this.shape;
    return i && i.symbolType === "pin" && e.position === "inside" && (r.y = t.y + t.height * 0.4), r;
  },
  buildPath: function(n, e, t) {
    var r = e.symbolType;
    if (r !== "none") {
      var i = rS[r];
      i || (r = "rect", i = rS[r]), $St[r](e.x, e.y, e.width, e.height, i.shape), i.buildPath(n, i.shape, t);
    }
  }
});
function BSt(n, e) {
  if (this.type !== "image") {
    var t = this.style;
    this.__isEmptyBrush ? (t.stroke = n, t.fill = e || "#fff", t.lineWidth = 2) : this.shape.symbolType === "line" ? t.stroke = n : t.fill = n, this.markRedraw();
  }
}
function ar(n, e, t, r, i, o, s) {
  var a = n.indexOf("empty") === 0;
  a && (n = n.substr(5, 1).toLowerCase() + n.substr(6));
  var l;
  return n.indexOf("image://") === 0 ? l = hJ(n.slice(8), new et(e, t, r, i), s ? "center" : "cover") : n.indexOf("path://") === 0 ? l = oC(n.slice(7), {}, new et(e, t, r, i), s ? "center" : "cover") : l = new NSt({
    shape: {
      symbolType: n,
      x: e,
      y: t,
      width: r,
      height: i
    }
  }), l.__isEmptyBrush = a, l.setColor = BSt, o && l.setColor(o), l;
}
function Cv(n) {
  return oe(n) || (n = [+n, +n]), [n[0] || 0, n[1] || 0];
}
function Od(n, e) {
  if (n != null)
    return oe(n) || (n = [n, n]), [fe(n[0], e[0]) || 0, fe(Qe(n[1], n[0]), e[1]) || 0];
}
function pf(n) {
  return isFinite(n);
}
function VSt(n, e, t) {
  var r = e.x == null ? 0 : e.x, i = e.x2 == null ? 1 : e.x2, o = e.y == null ? 0 : e.y, s = e.y2 == null ? 0 : e.y2;
  e.global || (r = r * t.width + t.x, i = i * t.width + t.x, o = o * t.height + t.y, s = s * t.height + t.y), r = pf(r) ? r : 0, i = pf(i) ? i : 1, o = pf(o) ? o : 0, s = pf(s) ? s : 0;
  var a = n.createLinearGradient(r, o, i, s);
  return a;
}
function zSt(n, e, t) {
  var r = t.width, i = t.height, o = Math.min(r, i), s = e.x == null ? 0.5 : e.x, a = e.y == null ? 0.5 : e.y, l = e.r == null ? 0.5 : e.r;
  e.global || (s = s * r + t.x, a = a * i + t.y, l = l * o), s = pf(s) ? s : 0.5, a = pf(a) ? a : 0.5, l = l >= 0 && pf(l) ? l : 0.5;
  var u = n.createRadialGradient(s, a, 0, s, a, l);
  return u;
}
function wM(n, e, t) {
  for (var r = e.type === "radial" ? zSt(n, e, t) : VSt(n, e, t), i = e.colorStops, o = 0; o < i.length; o++)
    r.addColorStop(i[o].offset, i[o].color);
  return r;
}
function FSt(n, e) {
  if (n === e || !n && !e)
    return !1;
  if (!n || !e || n.length !== e.length)
    return !0;
  for (var t = 0; t < n.length; t++)
    if (n[t] !== e[t])
      return !0;
  return !1;
}
function iO(n) {
  return parseInt(n, 10);
}
function bp(n, e, t) {
  var r = ["width", "height"][e], i = ["clientWidth", "clientHeight"][e], o = ["paddingLeft", "paddingTop"][e], s = ["paddingRight", "paddingBottom"][e];
  if (t[r] != null && t[r] !== "auto")
    return parseFloat(t[r]);
  var a = document.defaultView.getComputedStyle(n);
  return (n[i] || iO(a[r]) || iO(n.style[r])) - (iO(a[o]) || 0) - (iO(a[s]) || 0) | 0;
}
function QSt(n, e) {
  return !n || n === "solid" || !(e > 0) ? null : n === "dashed" ? [4 * e, 2 * e] : n === "dotted" ? [e] : Tt(n) ? [n] : oe(n) ? n : null;
}
function _R(n) {
  var e = n.style, t = e.lineDash && e.lineWidth > 0 && QSt(e.lineDash, e.lineWidth), r = e.lineDashOffset;
  if (t) {
    var i = e.strokeNoScale && n.getLineScale ? n.getLineScale() : 1;
    i && i !== 1 && (t = ae(t, function(o) {
      return o / i;
    }), r /= i);
  }
  return [t, r];
}
var ZSt = new vl(!0);
function iS(n) {
  var e = n.stroke;
  return !(e == null || e === "none" || !(n.lineWidth > 0));
}
function bF(n) {
  return typeof n == "string" && n !== "none";
}
function oS(n) {
  var e = n.fill;
  return e != null && e !== "none";
}
function OF(n, e) {
  if (e.fillOpacity != null && e.fillOpacity !== 1) {
    var t = n.globalAlpha;
    n.globalAlpha = e.fillOpacity * e.opacity, n.fill(), n.globalAlpha = t;
  } else
    n.fill();
}
function wF(n, e) {
  if (e.strokeOpacity != null && e.strokeOpacity !== 1) {
    var t = n.globalAlpha;
    n.globalAlpha = e.strokeOpacity * e.opacity, n.stroke(), n.globalAlpha = t;
  } else
    n.stroke();
}
function xM(n, e, t) {
  var r = GI(e.image, e.__image, t);
  if (K_(r)) {
    var i = n.createPattern(r, e.repeat || "repeat");
    if (typeof DOMMatrix == "function" && i && i.setTransform) {
      var o = new DOMMatrix();
      o.translateSelf(e.x || 0, e.y || 0), o.rotateSelf(0, 0, (e.rotation || 0) * gw), o.scaleSelf(e.scaleX || 1, e.scaleY || 1), i.setTransform(o);
    }
    return i;
  }
}
function WSt(n, e, t, r) {
  var i, o = iS(t), s = oS(t), a = t.strokePercent, l = a < 1, u = !e.path;
  (!e.silent || l) && u && e.createPathProxy();
  var c = e.path || ZSt, h = e.__dirty;
  if (!r) {
    var f = t.fill, d = t.stroke, p = s && !!f.colorStops, g = o && !!d.colorStops, v = s && !!f.image, m = o && !!d.image, y = void 0, b = void 0, O = void 0, w = void 0, x = void 0;
    (p || g) && (x = e.getBoundingRect()), p && (y = h ? wM(n, f, x) : e.__canvasFillGradient, e.__canvasFillGradient = y), g && (b = h ? wM(n, d, x) : e.__canvasStrokeGradient, e.__canvasStrokeGradient = b), v && (O = h || !e.__canvasFillPattern ? xM(n, f, e) : e.__canvasFillPattern, e.__canvasFillPattern = O), m && (w = h || !e.__canvasStrokePattern ? xM(n, d, e) : e.__canvasStrokePattern, e.__canvasStrokePattern = O), p ? n.fillStyle = y : v && (O ? n.fillStyle = O : s = !1), g ? n.strokeStyle = b : m && (w ? n.strokeStyle = w : o = !1);
  }
  var S = e.getGlobalScale();
  c.setScale(S[0], S[1], e.segmentIgnoreThreshold);
  var _, C;
  n.setLineDash && t.lineDash && (i = _R(e), _ = i[0], C = i[1]);
  var A = !0;
  (u || h & up) && (c.setDPR(n.dpr), l ? c.setContext(null) : (c.setContext(n), A = !1), c.reset(), e.buildPath(c, e.shape, r), c.toStatic(), e.pathUpdated()), A && c.rebuildPath(n, l ? a : 1), _ && (n.setLineDash(_), n.lineDashOffset = C), r || (t.strokeFirst ? (o && wF(n, t), s && OF(n, t)) : (s && OF(n, t), o && wF(n, t))), _ && n.setLineDash([]);
}
function GSt(n, e, t) {
  var r = e.__image = GI(t.image, e.__image, e, e.onload);
  if (!(!r || !K_(r))) {
    var i = t.x || 0, o = t.y || 0, s = e.getWidth(), a = e.getHeight(), l = r.width / r.height;
    if (s == null && a != null ? s = a * l : a == null && s != null ? a = s / l : s == null && a == null && (s = r.width, a = r.height), t.sWidth && t.sHeight) {
      var u = t.sx || 0, c = t.sy || 0;
      n.drawImage(r, u, c, t.sWidth, t.sHeight, i, o, s, a);
    } else if (t.sx && t.sy) {
      var u = t.sx, c = t.sy, h = s - u, f = a - c;
      n.drawImage(r, u, c, h, f, i, o, s, a);
    } else
      n.drawImage(r, i, o, s, a);
  }
}
function jSt(n, e, t) {
  var r, i = t.text;
  if (i != null && (i += ""), i) {
    n.font = t.font || Rc, n.textAlign = t.textAlign, n.textBaseline = t.textBaseline;
    var o = void 0, s = void 0;
    n.setLineDash && t.lineDash && (r = _R(e), o = r[0], s = r[1]), o && (n.setLineDash(o), n.lineDashOffset = s), t.strokeFirst ? (iS(t) && n.strokeText(i, t.x, t.y), oS(t) && n.fillText(i, t.x, t.y)) : (oS(t) && n.fillText(i, t.x, t.y), iS(t) && n.strokeText(i, t.x, t.y)), o && n.setLineDash([]);
  }
}
var xF = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"], SF = [
  ["lineCap", "butt"],
  ["lineJoin", "miter"],
  ["miterLimit", 10]
];
function See(n, e, t, r, i) {
  var o = !1;
  if (!r && (t = t || {}, e === t))
    return !1;
  if (r || e.opacity !== t.opacity) {
    oo(n, i), o = !0;
    var s = Math.max(Math.min(e.opacity, 1), 0);
    n.globalAlpha = isNaN(s) ? kf.opacity : s;
  }
  (r || e.blend !== t.blend) && (o || (oo(n, i), o = !0), n.globalCompositeOperation = e.blend || kf.blend);
  for (var a = 0; a < xF.length; a++) {
    var l = xF[a];
    (r || e[l] !== t[l]) && (o || (oo(n, i), o = !0), n[l] = n.dpr * (e[l] || 0));
  }
  return (r || e.shadowColor !== t.shadowColor) && (o || (oo(n, i), o = !0), n.shadowColor = e.shadowColor || kf.shadowColor), o;
}
function _F(n, e, t, r, i) {
  var o = T0(e, i.inHover), s = r ? null : t && T0(t, i.inHover) || {};
  if (o === s)
    return !1;
  var a = See(n, o, s, r, i);
  if ((r || o.fill !== s.fill) && (a || (oo(n, i), a = !0), bF(o.fill) && (n.fillStyle = o.fill)), (r || o.stroke !== s.stroke) && (a || (oo(n, i), a = !0), bF(o.stroke) && (n.strokeStyle = o.stroke)), (r || o.opacity !== s.opacity) && (a || (oo(n, i), a = !0), n.globalAlpha = o.opacity == null ? 1 : o.opacity), e.hasStroke()) {
    var l = o.lineWidth, u = l / (o.strokeNoScale && e.getLineScale ? e.getLineScale() : 1);
    n.lineWidth !== u && (a || (oo(n, i), a = !0), n.lineWidth = u);
  }
  for (var c = 0; c < SF.length; c++) {
    var h = SF[c], f = h[0];
    (r || o[f] !== s[f]) && (a || (oo(n, i), a = !0), n[f] = o[f] || h[1]);
  }
  return a;
}
function HSt(n, e, t, r, i) {
  return See(n, T0(e, i.inHover), t && T0(t, i.inHover), r, i);
}
function _ee(n, e) {
  var t = e.transform, r = n.dpr || 1;
  t ? n.setTransform(r * t[0], r * t[1], r * t[2], r * t[3], r * t[4], r * t[5]) : n.setTransform(r, 0, 0, r, 0, 0);
}
function qSt(n, e, t) {
  for (var r = !1, i = 0; i < n.length; i++) {
    var o = n[i];
    r = r || o.isZeroArea(), _ee(e, o), e.beginPath(), o.buildPath(e, o.shape), e.clip();
  }
  t.allClipped = r;
}
function YSt(n, e) {
  return n && e ? n[0] !== e[0] || n[1] !== e[1] || n[2] !== e[2] || n[3] !== e[3] || n[4] !== e[4] || n[5] !== e[5] : !(!n && !e);
}
var CF = 1, AF = 2, TF = 3, PF = 4;
function XSt(n) {
  var e = oS(n), t = iS(n);
  return !(n.lineDash || !(+e ^ +t) || e && typeof n.fill != "string" || t && typeof n.stroke != "string" || n.strokePercent < 1 || n.strokeOpacity < 1 || n.fillOpacity < 1);
}
function oo(n, e) {
  e.batchFill && n.fill(), e.batchStroke && n.stroke(), e.batchFill = "", e.batchStroke = "";
}
function T0(n, e) {
  return e && n.__hoverStyle || n.style;
}
function Cee(n, e) {
  gf(n, e, { inHover: !1, viewWidth: 0, viewHeight: 0 }, !0);
}
function gf(n, e, t, r) {
  var i = e.transform;
  if (!e.shouldBePainted(t.viewWidth, t.viewHeight, !1, !1)) {
    e.__dirty &= ~Do, e.__isRendered = !1;
    return;
  }
  var o = e.__clipPaths, s = t.prevElClipPaths, a = !1, l = !1;
  if ((!s || FSt(o, s)) && (s && s.length && (oo(n, t), n.restore(), l = a = !0, t.prevElClipPaths = null, t.allClipped = !1, t.prevEl = null), o && o.length && (oo(n, t), n.save(), qSt(o, n, t), a = !0), t.prevElClipPaths = o), t.allClipped) {
    e.__isRendered = !1;
    return;
  }
  e.beforeBrush && e.beforeBrush(), e.innerBeforeBrush();
  var u = t.prevEl;
  u || (l = a = !0);
  var c = e instanceof ct && e.autoBatch && XSt(e.style);
  a || YSt(i, u.transform) ? (oo(n, t), _ee(n, e)) : c || oo(n, t);
  var h = T0(e, t.inHover);
  e instanceof ct ? (t.lastDrawType !== CF && (l = !0, t.lastDrawType = CF), _F(n, e, u, l, t), (!c || !t.batchFill && !t.batchStroke) && n.beginPath(), WSt(n, e, h, c), c && (t.batchFill = h.fill || "", t.batchStroke = h.stroke || "")) : e instanceof b0 ? (t.lastDrawType !== TF && (l = !0, t.lastDrawType = TF), _F(n, e, u, l, t), jSt(n, e, h)) : e instanceof fi ? (t.lastDrawType !== AF && (l = !0, t.lastDrawType = AF), HSt(n, e, u, l, t), GSt(n, e, h)) : e.getTemporalDisplayables && (t.lastDrawType !== PF && (l = !0, t.lastDrawType = PF), USt(n, e, t)), c && r && oo(n, t), e.innerAfterBrush(), e.afterBrush && e.afterBrush(), t.prevEl = e, e.__dirty = 0, e.__isRendered = !0;
}
function USt(n, e, t) {
  var r = e.getDisplayables(), i = e.getTemporalDisplayables();
  n.save();
  var o = {
    prevElClipPaths: null,
    prevEl: null,
    allClipped: !1,
    viewWidth: t.viewWidth,
    viewHeight: t.viewHeight,
    inHover: t.inHover
  }, s, a;
  for (s = e.getCursor(), a = r.length; s < a; s++) {
    var l = r[s];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), gf(n, l, o, s === a - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), o.prevEl = l;
  }
  for (var u = 0, c = i.length; u < c; u++) {
    var l = i[u];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), gf(n, l, o, u === c - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), o.prevEl = l;
  }
  e.clearTemporalDisplayables(), e.notClear = !0, n.restore();
}
var QA = new kSt(), EF = new Ob(100), kF = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
function Ig(n, e) {
  if (n === "none")
    return null;
  var t = e.getDevicePixelRatio(), r = e.getZr(), i = r.painter.type === "svg";
  n.dirty && QA.delete(n);
  var o = QA.get(n);
  if (o)
    return o;
  var s = Le(n, {
    symbol: "rect",
    symbolSize: 1,
    symbolKeepAspect: !0,
    color: "rgba(0, 0, 0, 0.2)",
    backgroundColor: null,
    dashArrayX: 5,
    dashArrayY: 5,
    rotation: 0,
    maxTileWidth: 512,
    maxTileHeight: 512
  });
  s.backgroundColor === "none" && (s.backgroundColor = null);
  var a = {
    repeat: "repeat"
  };
  return l(a), a.rotation = s.rotation, a.scaleX = a.scaleY = i ? 1 : 1 / t, QA.set(n, a), n.dirty = !1, a;
  function l(u) {
    for (var c = [t], h = !0, f = 0; f < kF.length; ++f) {
      var d = s[kF[f]];
      if (d != null && !oe(d) && !be(d) && !Tt(d) && typeof d != "boolean") {
        h = !1;
        break;
      }
      c.push(d);
    }
    var p;
    if (h) {
      p = c.join(",") + (i ? "-svg" : "");
      var g = EF.get(p);
      g && (i ? u.svgElement = g : u.image = g);
    }
    var v = Tee(s.dashArrayX), m = KSt(s.dashArrayY), y = Aee(s.symbol), b = JSt(v), O = Pee(m), w = !i && $c.createCanvas(), x = i && {
      tag: "g",
      attrs: {},
      key: "dcl",
      children: []
    }, S = C(), _;
    w && (w.width = S.width * t, w.height = S.height * t, _ = w.getContext("2d")), A(), h && EF.put(p, w || x), u.image = w, u.svgElement = x, u.svgWidth = S.width, u.svgHeight = S.height;
    function C() {
      for (var T = 1, k = 0, L = b.length; k < L; ++k)
        T = W4(T, b[k]);
      for (var D = 1, k = 0, L = y.length; k < L; ++k)
        D = W4(D, y[k].length);
      T *= D;
      var E = O * b.length * y.length;
      if (process.env.NODE_ENV !== "production") {
        var M = function(R) {
          console.warn("Calculated decal size is greater than " + R + " due to decal option settings so " + R + " is used for the decal size. Please consider changing the decal option to make a smaller decal or set " + R + " to be larger to avoid incontinuity.");
        };
        T > s.maxTileWidth && M("maxTileWidth"), E > s.maxTileHeight && M("maxTileHeight");
      }
      return {
        width: Math.max(1, Math.min(T, s.maxTileWidth)),
        height: Math.max(1, Math.min(E, s.maxTileHeight))
      };
    }
    function A() {
      _ && (_.clearRect(0, 0, w.width, w.height), s.backgroundColor && (_.fillStyle = s.backgroundColor, _.fillRect(0, 0, w.width, w.height)));
      for (var T = 0, k = 0; k < m.length; ++k)
        T += m[k];
      if (T <= 0)
        return;
      for (var L = -O, D = 0, E = 0, M = 0; L < S.height; ) {
        if (D % 2 === 0) {
          for (var R = E / 2 % y.length, N = 0, $ = 0, V = 0; N < S.width * 2; ) {
            for (var H = 0, k = 0; k < v[M].length; ++k)
              H += v[M][k];
            if (H <= 0)
              break;
            if ($ % 2 === 0) {
              var G = (1 - s.symbolSize) * 0.5, q = N + v[M][$] * G, Y = L + m[D] * G, ie = v[M][$] * s.symbolSize, se = m[D] * s.symbolSize, K = V / 2 % y[R].length;
              re(q, Y, ie, se, y[R][K]);
            }
            N += v[M][$], ++V, ++$, $ === v[M].length && ($ = 0);
          }
          ++M, M === v.length && (M = 0);
        }
        L += m[D], ++E, ++D, D === m.length && (D = 0);
      }
      function re(ge, ne, ue, xe, gt) {
        var He = i ? 1 : t, It = ar(gt, ge * He, ne * He, ue * He, xe * He, s.color, s.symbolKeepAspect);
        if (i) {
          var Rt = r.painter.renderOneToVNode(It);
          Rt && x.children.push(Rt);
        } else
          Cee(_, It);
      }
    }
  }
}
function Aee(n) {
  if (!n || n.length === 0)
    return [["rect"]];
  if (be(n))
    return [[n]];
  for (var e = !0, t = 0; t < n.length; ++t)
    if (!be(n[t])) {
      e = !1;
      break;
    }
  if (e)
    return Aee([n]);
  for (var r = [], t = 0; t < n.length; ++t)
    be(n[t]) ? r.push([n[t]]) : r.push(n[t]);
  return r;
}
function Tee(n) {
  if (!n || n.length === 0)
    return [[0, 0]];
  if (Tt(n)) {
    var e = Math.ceil(n);
    return [[e, e]];
  }
  for (var t = !0, r = 0; r < n.length; ++r)
    if (!Tt(n[r])) {
      t = !1;
      break;
    }
  if (t)
    return Tee([n]);
  for (var i = [], r = 0; r < n.length; ++r)
    if (Tt(n[r])) {
      var e = Math.ceil(n[r]);
      i.push([e, e]);
    } else {
      var e = ae(n[r], function(a) {
        return Math.ceil(a);
      });
      e.length % 2 === 1 ? i.push(e.concat(e)) : i.push(e);
    }
  return i;
}
function KSt(n) {
  if (!n || typeof n == "object" && n.length === 0)
    return [0, 0];
  if (Tt(n)) {
    var e = Math.ceil(n);
    return [e, e];
  }
  var t = ae(n, function(r) {
    return Math.ceil(r);
  });
  return n.length % 2 ? t.concat(t) : t;
}
function JSt(n) {
  return ae(n, function(e) {
    return Pee(e);
  });
}
function Pee(n) {
  for (var e = 0, t = 0; t < n.length; ++t)
    e += n[t];
  return n.length % 2 === 1 ? e * 2 : e;
}
function e_t(n, e) {
  n.eachRawSeries(function(t) {
    if (!n.isSeriesFiltered(t)) {
      var r = t.getData();
      r.hasItemVisual() && r.each(function(s) {
        var a = r.getItemVisual(s, "decal");
        if (a) {
          var l = r.ensureUniqueItemVisual(s, "style");
          l.decal = Ig(a, e);
        }
      });
      var i = r.getVisual("decal");
      if (i) {
        var o = r.getVisual("style");
        o.decal = Ig(i, e);
      }
    }
  });
}
var t_t = new Ps();
const Vs = t_t;
var sS = {};
function n_t(n, e) {
  process.env.NODE_ENV !== "production" && sS[n] && li("Already has an implementation of " + n + "."), sS[n] = e;
}
function r_t(n) {
  return process.env.NODE_ENV !== "production" && (sS[n] || li("Implementation of " + n + " doesn't exists.")), sS[n];
}
var i_t = 1, o_t = 800, s_t = 900, a_t = 1e3, l_t = 2e3, u_t = 5e3, Eee = 1e3, c_t = 1100, CR = 2e3, kee = 3e3, h_t = 4e3, mC = 4500, f_t = 4600, d_t = 5e3, p_t = 6e3, Mee = 7e3, g_t = {
  PROCESSOR: {
    FILTER: a_t,
    SERIES_FILTER: o_t,
    STATISTIC: u_t
  },
  VISUAL: {
    LAYOUT: Eee,
    PROGRESSIVE_LAYOUT: c_t,
    GLOBAL: CR,
    CHART: kee,
    POST_CHART_LAYOUT: f_t,
    COMPONENT: h_t,
    BRUSH: d_t,
    CHART_ITEM: mC,
    ARIA: p_t,
    DECAL: Mee
  }
}, pi = "__flagInMainProcess", Xi = "__pendingUpdate", ZA = "__needsUpdateStatus", MF = /^[a-zA-Z0-9_]+$/, WA = "__connectUpdateStatus", DF = 0, v_t = 1, m_t = 2;
function Dee(n) {
  return function() {
    for (var e = [], t = 0; t < arguments.length; t++)
      e[t] = arguments[t];
    if (this.isDisposed()) {
      So(this.id);
      return;
    }
    return Iee(this, n, e);
  };
}
function Lee(n) {
  return function() {
    for (var e = [], t = 0; t < arguments.length; t++)
      e[t] = arguments[t];
    return Iee(this, n, e);
  };
}
function Iee(n, e, t) {
  return t[0] = t[0] && t[0].toLowerCase(), Ps.prototype[e].apply(n, t);
}
var Ree = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e;
  }(Ps)
), $ee = Ree.prototype;
$ee.on = Lee("on");
$ee.off = Lee("off");
var jd, GA, oO, Tu, jA, HA, qA, Jv, em, LF, IF, YA, RF, sO, $F, Nee, jo, NF, Bee = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this, new _St()) || this;
      o._chartsViews = [], o._chartsMap = {}, o._componentsViews = [], o._componentsMap = {}, o._pendingActions = [], i = i || {}, be(r) && (r = Vee[r]), o._dom = t;
      var s = "canvas", a = "auto", l = !1;
      if (process.env.NODE_ENV !== "production") {
        var u = (
          /* eslint-disable-next-line */
          ht.hasGlobalWindow ? window : global
        );
        u && (s = Qe(u.__ECHARTS__DEFAULT__RENDERER__, s), a = Qe(u.__ECHARTS__DEFAULT__COARSE_POINTER, a), l = Qe(u.__ECHARTS__DEFAULT__USE_DIRTY_RECT__, l));
      }
      i.ssr && Kbt(function(d) {
        var p = Fe(d), g = p.dataIndex;
        if (g != null) {
          var v = _e();
          return v.set("series_index", p.seriesIndex), v.set("data_index", g), p.ssrType && v.set("ssr_type", p.ssrType), v;
        }
      });
      var c = o._zr = z4(t, {
        renderer: i.renderer || s,
        devicePixelRatio: i.devicePixelRatio,
        width: i.width,
        height: i.height,
        ssr: i.ssr,
        useDirtyRect: Qe(i.useDirtyRect, l),
        useCoarsePointer: Qe(i.useCoarsePointer, a),
        pointerSize: i.pointerSize
      });
      o._ssr = i.ssr, o._throttledZrFlush = xR(Oe(c.flush, c), 17), r = Re(r), r && GJ(r, !0), o._theme = r, o._locale = Mwt(i.locale || wJ), o._coordSysMgr = new xv();
      var h = o._api = $F(o);
      function f(d, p) {
        return d.__prio - p.__prio;
      }
      return yw(lS, f), yw(SM, f), o._scheduler = new vee(o, h, SM, lS), o._messageCenter = new Ree(), o._initEvents(), o.resize = Oe(o.resize, o), c.animation.on("frame", o._onframe, o), LF(c, o), IF(c, o), Nx(o), o;
    }
    return e.prototype._onframe = function() {
      if (!this._disposed) {
        NF(this);
        var t = this._scheduler;
        if (this[Xi]) {
          var r = this[Xi].silent;
          this[pi] = !0;
          try {
            jd(this), Tu.update.call(this, null, this[Xi].updateParams);
          } catch (l) {
            throw this[pi] = !1, this[Xi] = null, l;
          }
          this._zr.flush(), this[pi] = !1, this[Xi] = null, Jv.call(this, r), em.call(this, r);
        } else if (t.unfinished) {
          var i = i_t, o = this._model, s = this._api;
          t.unfinished = !1;
          do {
            var a = +/* @__PURE__ */ new Date();
            t.performSeriesTasks(o), t.performDataProcessorTasks(o), HA(this, o), t.performVisualTasks(o), sO(this, this._model, s, "remain", {}), i -= +/* @__PURE__ */ new Date() - a;
          } while (i > 0 && t.unfinished);
          t.unfinished || this._zr.flush();
        }
      }
    }, e.prototype.getDom = function() {
      return this._dom;
    }, e.prototype.getId = function() {
      return this.id;
    }, e.prototype.getZr = function() {
      return this._zr;
    }, e.prototype.isSSR = function() {
      return this._ssr;
    }, e.prototype.setOption = function(t, r, i) {
      if (this[pi]) {
        process.env.NODE_ENV !== "production" && li("`setOption` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        So(this.id);
        return;
      }
      var o, s, a;
      if (Me(r) && (i = r.lazyUpdate, o = r.silent, s = r.replaceMerge, a = r.transition, r = r.notMerge), this[pi] = !0, !this._model || r) {
        var l = new cxt(this._api), u = this._theme, c = this._model = new pR();
        c.scheduler = this._scheduler, c.ssr = this._ssr, c.init(null, null, null, u, this._locale, l);
      }
      this._model.setOption(t, {
        replaceMerge: s
      }, _M);
      var h = {
        seriesTransition: a,
        optionChanged: !0
      };
      if (i)
        this[Xi] = {
          silent: o,
          updateParams: h
        }, this[pi] = !1, this.getZr().wakeUp();
      else {
        try {
          jd(this), Tu.update.call(this, null, h);
        } catch (f) {
          throw this[Xi] = null, this[pi] = !1, f;
        }
        this._ssr || this._zr.flush(), this[Xi] = null, this[pi] = !1, Jv.call(this, o), em.call(this, o);
      }
    }, e.prototype.setTheme = function() {
      la("ECharts#setTheme() is DEPRECATED in ECharts 3.0");
    }, e.prototype.getModel = function() {
      return this._model;
    }, e.prototype.getOption = function() {
      return this._model && this._model.getOption();
    }, e.prototype.getWidth = function() {
      return this._zr.getWidth();
    }, e.prototype.getHeight = function() {
      return this._zr.getHeight();
    }, e.prototype.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || ht.hasGlobalWindow && window.devicePixelRatio || 1;
    }, e.prototype.getRenderedCanvas = function(t) {
      return process.env.NODE_ENV !== "production" && er("getRenderedCanvas", "renderToCanvas"), this.renderToCanvas(t);
    }, e.prototype.renderToCanvas = function(t) {
      t = t || {};
      var r = this._zr.painter;
      if (process.env.NODE_ENV !== "production" && r.type !== "canvas")
        throw new Error("renderToCanvas can only be used in the canvas renderer.");
      return r.getRenderedCanvas({
        backgroundColor: t.backgroundColor || this._model.get("backgroundColor"),
        pixelRatio: t.pixelRatio || this.getDevicePixelRatio()
      });
    }, e.prototype.renderToSVGString = function(t) {
      t = t || {};
      var r = this._zr.painter;
      if (process.env.NODE_ENV !== "production" && r.type !== "svg")
        throw new Error("renderToSVGString can only be used in the svg renderer.");
      return r.renderToString({
        useViewBox: t.useViewBox
      });
    }, e.prototype.getSvgDataURL = function() {
      if (ht.svgSupported) {
        var t = this._zr, r = t.storage.getDisplayList();
        return I(r, function(i) {
          i.stopAnimation(null, !0);
        }), t.painter.toDataURL();
      }
    }, e.prototype.getDataURL = function(t) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      t = t || {};
      var r = t.excludeComponents, i = this._model, o = [], s = this;
      I(r, function(l) {
        i.eachComponent({
          mainType: l
        }, function(u) {
          var c = s._componentsMap[u.__viewId];
          c.group.ignore || (o.push(c), c.group.ignore = !0);
        });
      });
      var a = this._zr.painter.getType() === "svg" ? this.getSvgDataURL() : this.renderToCanvas(t).toDataURL("image/" + (t && t.type || "png"));
      return I(o, function(l) {
        l.group.ignore = !1;
      }), a;
    }, e.prototype.getConnectedDataURL = function(t) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      var r = t.type === "svg", i = this.group, o = Math.min, s = Math.max, a = 1 / 0;
      if (BF[i]) {
        var l = a, u = a, c = -a, h = -a, f = [], d = t && t.pixelRatio || this.getDevicePixelRatio();
        I(xy, function(b, O) {
          if (b.group === i) {
            var w = r ? b.getZr().painter.getSvgDom().innerHTML : b.renderToCanvas(Re(t)), x = b.getDom().getBoundingClientRect();
            l = o(x.left, l), u = o(x.top, u), c = s(x.right, c), h = s(x.bottom, h), f.push({
              dom: w,
              left: x.left,
              top: x.top
            });
          }
        }), l *= d, u *= d, c *= d, h *= d;
        var p = c - l, g = h - u, v = $c.createCanvas(), m = z4(v, {
          renderer: r ? "svg" : "canvas"
        });
        if (m.resize({
          width: p,
          height: g
        }), r) {
          var y = "";
          return I(f, function(b) {
            var O = b.left - l, w = b.top - u;
            y += '<g transform="translate(' + O + "," + w + ')">' + b.dom + "</g>";
          }), m.painter.getSvgRoot().innerHTML = y, t.connectedBackgroundColor && m.painter.setBackgroundColor(t.connectedBackgroundColor), m.refreshImmediately(), m.painter.toDataURL();
        } else
          return t.connectedBackgroundColor && m.add(new _t({
            shape: {
              x: 0,
              y: 0,
              width: p,
              height: g
            },
            style: {
              fill: t.connectedBackgroundColor
            }
          })), I(f, function(b) {
            var O = new fi({
              style: {
                x: b.left * d - l,
                y: b.top * d - u,
                image: b.dom
              }
            });
            m.add(O);
          }), m.refreshImmediately(), v.toDataURL("image/" + (t && t.type || "png"));
      } else
        return this.getDataURL(t);
    }, e.prototype.convertToPixel = function(t, r) {
      return jA(this, "convertToPixel", t, r);
    }, e.prototype.convertFromPixel = function(t, r) {
      return jA(this, "convertFromPixel", t, r);
    }, e.prototype.containPixel = function(t, r) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      var i = this._model, o, s = gy(i, t);
      return I(s, function(a, l) {
        l.indexOf("Models") >= 0 && I(a, function(u) {
          var c = u.coordinateSystem;
          if (c && c.containPoint)
            o = o || !!c.containPoint(r);
          else if (l === "seriesModels") {
            var h = this._chartsMap[u.__viewId];
            h && h.containPoint ? o = o || h.containPoint(r, u) : process.env.NODE_ENV !== "production" && En(l + ": " + (h ? "The found component do not support containPoint." : "No view mapping to the found component."));
          } else
            process.env.NODE_ENV !== "production" && En(l + ": containPoint is not supported");
        }, this);
      }, this), !!o;
    }, e.prototype.getVisual = function(t, r) {
      var i = this._model, o = gy(i, t, {
        defaultMainType: "series"
      }), s = o.seriesModel;
      process.env.NODE_ENV !== "production" && (s || En("There is no specified series model"));
      var a = s.getData(), l = o.hasOwnProperty("dataIndexInside") ? o.dataIndexInside : o.hasOwnProperty("dataIndex") ? a.indexOfRawIndex(o.dataIndex) : null;
      return l != null ? SR(a, l, r) : Tb(a, r);
    }, e.prototype.getViewOfComponentModel = function(t) {
      return this._componentsMap[t.__viewId];
    }, e.prototype.getViewOfSeriesModel = function(t) {
      return this._chartsMap[t.__viewId];
    }, e.prototype._initEvents = function() {
      var t = this;
      I(y_t, function(r) {
        var i = function(o) {
          var s = t.getModel(), a = o.target, l, u = r === "globalout";
          if (u ? l = {} : a && df(a, function(p) {
            var g = Fe(p);
            if (g && g.dataIndex != null) {
              var v = g.dataModel || s.getSeriesByIndex(g.seriesIndex);
              return l = v && v.getDataParams(g.dataIndex, g.dataType, a) || {}, !0;
            } else if (g.eventData)
              return l = te({}, g.eventData), !0;
          }, !0), l) {
            var c = l.componentType, h = l.componentIndex;
            (c === "markLine" || c === "markPoint" || c === "markArea") && (c = "series", h = l.seriesIndex);
            var f = c && h != null && s.getComponent(c, h), d = f && t[f.mainType === "series" ? "_chartsMap" : "_componentsMap"][f.__viewId];
            process.env.NODE_ENV !== "production" && !u && !(f && d) && En("model or view can not be found by params"), l.event = o, l.type = r, t._$eventProcessor.eventInfo = {
              targetEl: a,
              packedEvent: l,
              model: f,
              view: d
            }, t.trigger(r, l);
          }
        };
        i.zrEventfulCallAtLast = !0, t._zr.on(r, i, t);
      }), I(wy, function(r, i) {
        t._messageCenter.on(i, function(o) {
          this.trigger(i, o);
        }, t);
      }), I(["selectchanged"], function(r) {
        t._messageCenter.on(r, function(i) {
          this.trigger(r, i);
        }, t);
      }), TSt(this._messageCenter, this, this._api);
    }, e.prototype.isDisposed = function() {
      return this._disposed;
    }, e.prototype.clear = function() {
      if (this._disposed) {
        So(this.id);
        return;
      }
      this.setOption({
        series: []
      }, !0);
    }, e.prototype.dispose = function() {
      if (this._disposed) {
        So(this.id);
        return;
      }
      this._disposed = !0;
      var t = this.getDom();
      t && SK(this.getDom(), TR, "");
      var r = this, i = r._api, o = r._model;
      I(r._componentsViews, function(s) {
        s.dispose(o, i);
      }), I(r._chartsViews, function(s) {
        s.dispose(o, i);
      }), r._zr.dispose(), r._dom = r._model = r._chartsMap = r._componentsMap = r._chartsViews = r._componentsViews = r._scheduler = r._api = r._zr = r._throttledZrFlush = r._theme = r._coordSysMgr = r._messageCenter = null, delete xy[r.id];
    }, e.prototype.resize = function(t) {
      if (this[pi]) {
        process.env.NODE_ENV !== "production" && li("`resize` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        So(this.id);
        return;
      }
      this._zr.resize(t);
      var r = this._model;
      if (this._loadingFX && this._loadingFX.resize(), !!r) {
        var i = r.resetOption("media"), o = t && t.silent;
        this[Xi] && (o == null && (o = this[Xi].silent), i = !0, this[Xi] = null), this[pi] = !0;
        try {
          i && jd(this), Tu.update.call(this, {
            type: "resize",
            animation: te({
              // Disable animation
              duration: 0
            }, t && t.animation)
          });
        } catch (s) {
          throw this[pi] = !1, s;
        }
        this[pi] = !1, Jv.call(this, o), em.call(this, o);
      }
    }, e.prototype.showLoading = function(t, r) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      if (Me(t) && (r = t, t = ""), t = t || "default", this.hideLoading(), !CM[t]) {
        process.env.NODE_ENV !== "production" && En("Loading effects " + t + " not exists.");
        return;
      }
      var i = CM[t](this._api, r), o = this._zr;
      this._loadingFX = i, o.add(i);
    }, e.prototype.hideLoading = function() {
      if (this._disposed) {
        So(this.id);
        return;
      }
      this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null;
    }, e.prototype.makeActionFromEvent = function(t) {
      var r = te({}, t);
      return r.type = wy[t.type], r;
    }, e.prototype.dispatchAction = function(t, r) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      if (Me(r) || (r = {
        silent: !!r
      }), !!aS[t.type] && this._model) {
        if (this[pi]) {
          this._pendingActions.push(t);
          return;
        }
        var i = r.silent;
        qA.call(this, t, i);
        var o = r.flush;
        o ? this._zr.flush() : o !== !1 && ht.browser.weChat && this._throttledZrFlush(), Jv.call(this, i), em.call(this, i);
      }
    }, e.prototype.updateLabelLayout = function() {
      Vs.trigger("series:layoutlabels", this._model, this._api, {
        // Not adding series labels.
        // TODO
        updatedSeries: []
      });
    }, e.prototype.appendData = function(t) {
      if (this._disposed) {
        So(this.id);
        return;
      }
      var r = t.seriesIndex, i = this.getModel(), o = i.getSeriesByIndex(r);
      process.env.NODE_ENV !== "production" && De(t.data && o), o.appendData(t), this._scheduler.unfinished = !0, this.getZr().wakeUp();
    }, e.internalField = function() {
      jd = function(h) {
        var f = h._scheduler;
        f.restorePipelines(h._model), f.prepareStageTasks(), GA(h, !0), GA(h, !1), f.plan();
      }, GA = function(h, f) {
        for (var d = h._model, p = h._scheduler, g = f ? h._componentsViews : h._chartsViews, v = f ? h._componentsMap : h._chartsMap, m = h._zr, y = h._api, b = 0; b < g.length; b++)
          g[b].__alive = !1;
        f ? d.eachComponent(function(x, S) {
          x !== "series" && O(S);
        }) : d.eachSeries(O);
        function O(x) {
          var S = x.__requireNewView;
          x.__requireNewView = !1;
          var _ = "_ec_" + x.id + "_" + x.type, C = !S && v[_];
          if (!C) {
            var A = qa(x.type), T = f ? Nn.getClass(A.main, A.sub) : (
              // FIXME:TS
              // (ChartView as ChartViewConstructor).getClass('series', classType.sub)
              // For backward compat, still support a chart type declared as only subType
              // like "liquidfill", but recommend "series.liquidfill"
              // But need a base class to make a type series.
              dn.getClass(A.sub)
            );
            process.env.NODE_ENV !== "production" && De(T, A.sub + " does not exist."), C = new T(), C.init(d, y), v[_] = C, g.push(C), m.add(C.group);
          }
          x.__viewId = C.__id = _, C.__alive = !0, C.__model = x, C.group.__ecComponentInfo = {
            mainType: x.mainType,
            index: x.componentIndex
          }, !f && p.prepareView(C, x, d, y);
        }
        for (var b = 0; b < g.length; ) {
          var w = g[b];
          w.__alive ? b++ : (!f && w.renderTask.dispose(), m.remove(w.group), w.dispose(d, y), g.splice(b, 1), v[w.__id] === w && delete v[w.__id], w.__id = w.group.__ecComponentInfo = null);
        }
      }, oO = function(h, f, d, p, g) {
        var v = h._model;
        if (v.setUpdatePayload(d), !p) {
          I([].concat(h._componentsViews).concat(h._chartsViews), w);
          return;
        }
        var m = {};
        m[p + "Id"] = d[p + "Id"], m[p + "Index"] = d[p + "Index"], m[p + "Name"] = d[p + "Name"];
        var y = {
          mainType: p,
          query: m
        };
        g && (y.subType = g);
        var b = d.excludeSeriesId, O;
        b != null && (O = _e(), I(Kt(b), function(x) {
          var S = dr(x, null);
          S != null && O.set(S, !0);
        })), v && v.eachComponent(y, function(x) {
          var S = O && O.get(x.id) != null;
          if (!S)
            if (bz(d))
              if (x instanceof Sn)
                d.type === Mf && !d.notBlur && !x.get(["emphasis", "disabled"]) && _Ot(x, d, h._api);
              else {
                var _ = UI(x.mainType, x.componentIndex, d.name, h._api), C = _.focusSelf, A = _.dispatchers;
                d.type === Mf && C && !d.notBlur && iM(x.mainType, x.componentIndex, h._api), A && I(A, function(T) {
                  d.type === Mf ? su(T) : au(T);
                });
              }
            else
              sM(d) && x instanceof Sn && (TOt(x, d, h._api), mz(x), jo(h));
        }, h), v && v.eachComponent(y, function(x) {
          var S = O && O.get(x.id) != null;
          S || w(h[p === "series" ? "_chartsMap" : "_componentsMap"][x.__viewId]);
        }, h);
        function w(x) {
          x && x.__alive && x[f] && x[f](x.__model, v, h._api, d);
        }
      }, Tu = {
        prepareAndUpdate: function(h) {
          jd(this), Tu.update.call(this, h, {
            // Needs to mark option changed if newOption is given.
            // It's from MagicType.
            // TODO If use a separate flag optionChanged in payload?
            optionChanged: h.newOption != null
          });
        },
        update: function(h, f) {
          var d = this._model, p = this._api, g = this._zr, v = this._coordSysMgr, m = this._scheduler;
          if (d) {
            d.setUpdatePayload(h), m.restoreData(d, h), m.performSeriesTasks(d), v.create(d, p), m.performDataProcessorTasks(d, h), HA(this, d), v.update(d, p), t(d), m.performVisualTasks(d, h), YA(this, d, p, h, f);
            var y = d.get("backgroundColor") || "transparent", b = d.get("darkMode");
            g.setBackgroundColor(y), b != null && b !== "auto" && g.setDarkMode(b), Vs.trigger("afterupdate", d, p);
          }
        },
        updateTransform: function(h) {
          var f = this, d = this._model, p = this._api;
          if (d) {
            d.setUpdatePayload(h);
            var g = [];
            d.eachComponent(function(m, y) {
              if (m !== "series") {
                var b = f.getViewOfComponentModel(y);
                if (b && b.__alive)
                  if (b.updateTransform) {
                    var O = b.updateTransform(y, d, p, h);
                    O && O.update && g.push(b);
                  } else
                    g.push(b);
              }
            });
            var v = _e();
            d.eachSeries(function(m) {
              var y = f._chartsMap[m.__viewId];
              if (y.updateTransform) {
                var b = y.updateTransform(m, d, p, h);
                b && b.update && v.set(m.uid, 1);
              } else
                v.set(m.uid, 1);
            }), t(d), this._scheduler.performVisualTasks(d, h, {
              setDirty: !0,
              dirtyMap: v
            }), sO(this, d, p, h, {}, v), Vs.trigger("afterupdate", d, p);
          }
        },
        updateView: function(h) {
          var f = this._model;
          f && (f.setUpdatePayload(h), dn.markUpdateMethod(h, "updateView"), t(f), this._scheduler.performVisualTasks(f, h, {
            setDirty: !0
          }), YA(this, f, this._api, h, {}), Vs.trigger("afterupdate", f, this._api));
        },
        updateVisual: function(h) {
          var f = this, d = this._model;
          d && (d.setUpdatePayload(h), d.eachSeries(function(p) {
            p.getData().clearAllVisual();
          }), dn.markUpdateMethod(h, "updateVisual"), t(d), this._scheduler.performVisualTasks(d, h, {
            visualType: "visual",
            setDirty: !0
          }), d.eachComponent(function(p, g) {
            if (p !== "series") {
              var v = f.getViewOfComponentModel(g);
              v && v.__alive && v.updateVisual(g, d, f._api, h);
            }
          }), d.eachSeries(function(p) {
            var g = f._chartsMap[p.__viewId];
            g.updateVisual(p, d, f._api, h);
          }), Vs.trigger("afterupdate", d, this._api));
        },
        updateLayout: function(h) {
          Tu.update.call(this, h);
        }
      }, jA = function(h, f, d, p) {
        if (h._disposed) {
          So(h.id);
          return;
        }
        for (var g = h._model, v = h._coordSysMgr.getCoordinateSystems(), m, y = gy(g, d), b = 0; b < v.length; b++) {
          var O = v[b];
          if (O[f] && (m = O[f](g, y, p)) != null)
            return m;
        }
        process.env.NODE_ENV !== "production" && En("No coordinate system that supports " + f + " found by the given finder.");
      }, HA = function(h, f) {
        var d = h._chartsMap, p = h._scheduler;
        f.eachSeries(function(g) {
          p.updateStreamModes(g, d[g.__viewId]);
        });
      }, qA = function(h, f) {
        var d = this, p = this.getModel(), g = h.type, v = h.escapeConnect, m = aS[g], y = m.actionInfo, b = (y.update || "update").split(":"), O = b.pop(), w = b[0] != null && qa(b[0]);
        this[pi] = !0;
        var x = [h], S = !1;
        h.batch && (S = !0, x = ae(h.batch, function(D) {
          return D = Le(te({}, D), h), D.batch = null, D;
        }));
        var _ = [], C, A = sM(h), T = bz(h);
        if (T && qK(this._api), I(x, function(D) {
          if (C = m.action(D, d._model, d._api), C = C || te({}, D), C.type = y.event || C.type, _.push(C), T) {
            var E = ZI(h), M = E.queryOptionMap, R = E.mainTypeSpecified, N = R ? M.keys()[0] : "series";
            oO(d, O, D, N), jo(d);
          } else
            A ? (oO(d, O, D, "series"), jo(d)) : w && oO(d, O, D, w.main, w.sub);
        }), O !== "none" && !T && !A && !w)
          try {
            this[Xi] ? (jd(this), Tu.update.call(this, h), this[Xi] = null) : Tu[O].call(this, h);
          } catch (D) {
            throw this[pi] = !1, D;
          }
        if (S ? C = {
          type: y.event || g,
          escapeConnect: v,
          batch: _
        } : C = _[0], this[pi] = !1, !f) {
          var k = this._messageCenter;
          if (k.trigger(C.type, C), A) {
            var L = {
              type: "selectchanged",
              escapeConnect: v,
              selected: POt(p),
              isFromClick: h.isFromClick || !1,
              fromAction: h.type,
              fromActionPayload: h
            };
            k.trigger(L.type, L);
          }
        }
      }, Jv = function(h) {
        for (var f = this._pendingActions; f.length; ) {
          var d = f.shift();
          qA.call(this, d, h);
        }
      }, em = function(h) {
        !h && this.trigger("updated");
      }, LF = function(h, f) {
        h.on("rendered", function(d) {
          f.trigger("rendered", d), // Although zr is dirty if initial animation is not finished
          // and this checking is called on frame, we also check
          // animation finished for robustness.
          h.animation.isFinished() && !f[Xi] && !f._scheduler.unfinished && !f._pendingActions.length && f.trigger("finished");
        });
      }, IF = function(h, f) {
        h.on("mouseover", function(d) {
          var p = d.target, g = df(p, Bc);
          g && (COt(g, d, f._api), jo(f));
        }).on("mouseout", function(d) {
          var p = d.target, g = df(p, Bc);
          g && (AOt(g, d, f._api), jo(f));
        }).on("click", function(d) {
          var p = d.target, g = df(p, function(y) {
            return Fe(y).dataIndex != null;
          }, !0);
          if (g) {
            var v = g.selected ? "unselect" : "select", m = Fe(g);
            f._api.dispatchAction({
              type: v,
              dataType: m.dataType,
              dataIndexInside: m.dataIndex,
              seriesIndex: m.seriesIndex,
              isFromClick: !0
            });
          }
        });
      };
      function t(h) {
        h.clearColorPalette(), h.eachSeries(function(f) {
          f.clearColorPalette();
        });
      }
      function r(h) {
        var f = [], d = [], p = !1;
        if (h.eachComponent(function(y, b) {
          var O = b.get("zlevel") || 0, w = b.get("z") || 0, x = b.getZLevelKey();
          p = p || !!x, (y === "series" ? d : f).push({
            zlevel: O,
            z: w,
            idx: b.componentIndex,
            type: y,
            key: x
          });
        }), p) {
          var g = f.concat(d), v, m;
          yw(g, function(y, b) {
            return y.zlevel === b.zlevel ? y.z - b.z : y.zlevel - b.zlevel;
          }), I(g, function(y) {
            var b = h.getComponent(y.type, y.idx), O = y.zlevel, w = y.key;
            v != null && (O = Math.max(v, O)), w ? (O === v && w !== m && O++, m = w) : m && (O === v && O++, m = ""), v = O, b.setZLevel(O);
          });
        }
      }
      YA = function(h, f, d, p, g) {
        r(f), RF(h, f, d, p, g), I(h._chartsViews, function(v) {
          v.__alive = !1;
        }), sO(h, f, d, p, g), I(h._chartsViews, function(v) {
          v.__alive || v.remove(f, d);
        });
      }, RF = function(h, f, d, p, g, v) {
        I(v || h._componentsViews, function(m) {
          var y = m.__model;
          u(y, m), m.render(y, f, d, p), a(y, m), c(y, m);
        });
      }, sO = function(h, f, d, p, g, v) {
        var m = h._scheduler;
        g = te(g || {}, {
          updatedSeries: f.getSeries()
        }), Vs.trigger("series:beforeupdate", f, d, g);
        var y = !1;
        f.eachSeries(function(b) {
          var O = h._chartsMap[b.__viewId];
          O.__alive = !0;
          var w = O.renderTask;
          m.updatePayload(w, p), u(b, O), v && v.get(b.uid) && w.dirty(), w.perform(m.getPerformArgs(w)) && (y = !0), O.group.silent = !!b.get("silent"), s(b, O), mz(b);
        }), m.unfinished = y || m.unfinished, Vs.trigger("series:layoutlabels", f, d, g), Vs.trigger("series:transition", f, d, g), f.eachSeries(function(b) {
          var O = h._chartsMap[b.__viewId];
          a(b, O), c(b, O);
        }), o(h, f), Vs.trigger("series:afterupdate", f, d, g);
      }, jo = function(h) {
        h[ZA] = !0, h.getZr().wakeUp();
      }, NF = function(h) {
        h[ZA] && (h.getZr().storage.traverse(function(f) {
          Rp(f) || i(f);
        }), h[ZA] = !1);
      };
      function i(h) {
        for (var f = [], d = h.currentStates, p = 0; p < d.length; p++) {
          var g = d[p];
          g === "emphasis" || g === "blur" || g === "select" || f.push(g);
        }
        h.selected && h.states.select && f.push("select"), h.hoverState === tC && h.states.emphasis ? f.push("emphasis") : h.hoverState === Sb && h.states.blur && f.push("blur"), h.useStates(f);
      }
      function o(h, f) {
        var d = h._zr, p = d.storage, g = 0;
        p.traverse(function(v) {
          v.isGroup || g++;
        }), g > f.get("hoverLayerThreshold") && !ht.node && !ht.worker && f.eachSeries(function(v) {
          if (!v.preventUsingHoverLayer) {
            var m = h._chartsMap[v.__viewId];
            m.__alive && m.eachRendered(function(y) {
              y.states.emphasis && (y.states.emphasis.hoverLayer = !0);
            });
          }
        });
      }
      function s(h, f) {
        var d = h.get("blendMode") || null;
        f.eachRendered(function(p) {
          p.isGroup || (p.style.blend = d);
        });
      }
      function a(h, f) {
        if (!h.preventAutoZ) {
          var d = h.get("z") || 0, p = h.get("zlevel") || 0;
          f.eachRendered(function(g) {
            return l(g, d, p, -1 / 0), !0;
          });
        }
      }
      function l(h, f, d, p) {
        var g = h.getTextContent(), v = h.getTextGuideLine(), m = h.isGroup;
        if (m)
          for (var y = h.childrenRef(), b = 0; b < y.length; b++)
            p = Math.max(l(y[b], f, d, p), p);
        else
          h.z = f, h.zlevel = d, p = Math.max(h.z2, p);
        if (g && (g.z = f, g.zlevel = d, isFinite(p) && (g.z2 = p + 2)), v) {
          var O = h.textGuideLineConfig;
          v.z = f, v.zlevel = d, isFinite(p) && (v.z2 = p + (O && O.showAbove ? 1 : -1));
        }
        return p;
      }
      function u(h, f) {
        f.eachRendered(function(d) {
          if (!Rp(d)) {
            var p = d.getTextContent(), g = d.getTextGuideLine();
            d.stateTransition && (d.stateTransition = null), p && p.stateTransition && (p.stateTransition = null), g && g.stateTransition && (g.stateTransition = null), d.hasState() ? (d.prevStates = d.currentStates, d.clearStates()) : d.prevStates && (d.prevStates = null);
          }
        });
      }
      function c(h, f) {
        var d = h.getModel("stateAnimation"), p = h.isAnimationEnabled(), g = d.get("duration"), v = g > 0 ? {
          duration: g,
          delay: d.get("delay"),
          easing: d.get("easing")
          // additive: stateAnimationModel.get('additive')
        } : null;
        f.eachRendered(function(m) {
          if (m.states && m.states.emphasis) {
            if (Rp(m))
              return;
            if (m instanceof ct && LOt(m), m.__dirty) {
              var y = m.prevStates;
              y && m.useStates(y);
            }
            if (p) {
              m.stateTransition = v;
              var b = m.getTextContent(), O = m.getTextGuideLine();
              b && (b.stateTransition = v), O && (O.stateTransition = v);
            }
            m.__dirty && i(m);
          }
        });
      }
      $F = function(h) {
        return new /** @class */
        (function(f) {
          j(d, f);
          function d() {
            return f !== null && f.apply(this, arguments) || this;
          }
          return d.prototype.getCoordinateSystems = function() {
            return h._coordSysMgr.getCoordinateSystems();
          }, d.prototype.getComponentByElement = function(p) {
            for (; p; ) {
              var g = p.__ecComponentInfo;
              if (g != null)
                return h._model.getComponent(g.mainType, g.index);
              p = p.parent;
            }
          }, d.prototype.enterEmphasis = function(p, g) {
            su(p, g), jo(h);
          }, d.prototype.leaveEmphasis = function(p, g) {
            au(p, g), jo(h);
          }, d.prototype.enterBlur = function(p) {
            WK(p), jo(h);
          }, d.prototype.leaveBlur = function(p) {
            XI(p), jo(h);
          }, d.prototype.enterSelect = function(p) {
            GK(p), jo(h);
          }, d.prototype.leaveSelect = function(p) {
            jK(p), jo(h);
          }, d.prototype.getModel = function() {
            return h.getModel();
          }, d.prototype.getViewOfComponentModel = function(p) {
            return h.getViewOfComponentModel(p);
          }, d.prototype.getViewOfSeriesModel = function(p) {
            return h.getViewOfSeriesModel(p);
          }, d;
        }(ZJ))(h);
      }, Nee = function(h) {
        function f(d, p) {
          for (var g = 0; g < d.length; g++) {
            var v = d[g];
            v[WA] = p;
          }
        }
        I(wy, function(d, p) {
          h._messageCenter.on(p, function(g) {
            if (BF[h.group] && h[WA] !== DF) {
              if (g && g.escapeConnect)
                return;
              var v = h.makeActionFromEvent(g), m = [];
              I(xy, function(y) {
                y !== h && y.group === h.group && m.push(y);
              }), f(m, DF), I(m, function(y) {
                y[WA] !== v_t && y.dispatchAction(v);
              }), f(m, m_t);
            }
          });
        });
      };
    }(), e;
  }(Ps)
), AR = Bee.prototype;
AR.on = Dee("on");
AR.off = Dee("off");
AR.one = function(n, e, t) {
  var r = this;
  la("ECharts#one is deprecated.");
  function i() {
    for (var o = [], s = 0; s < arguments.length; s++)
      o[s] = arguments[s];
    e && e.apply && e.apply(this, o), r.off(n, i);
  }
  this.on.call(this, n, i, t);
};
var y_t = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
function So(n) {
  process.env.NODE_ENV !== "production" && En("Instance " + n + " has been disposed");
}
var aS = {}, wy = {}, SM = [], _M = [], lS = [], Vee = {}, CM = {}, xy = {}, BF = {}, b_t = +/* @__PURE__ */ new Date() - 0, TR = "_echarts_instance_";
function M4t(n, e, t) {
  var r = !(t && t.ssr);
  if (r) {
    if (process.env.NODE_ENV !== "production" && !n)
      throw new Error("Initialize failed: invalid dom.");
    var i = O_t(n);
    if (i)
      return process.env.NODE_ENV !== "production" && En("There is a chart instance already initialized on the dom."), i;
    process.env.NODE_ENV !== "production" && Jf(n) && n.nodeName.toUpperCase() !== "CANVAS" && (!n.clientWidth && (!t || t.width == null) || !n.clientHeight && (!t || t.height == null)) && En("Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.");
  }
  var o = new Bee(n, e, t);
  return o.id = "ec_" + b_t++, xy[o.id] = o, r && SK(n, TR, o.id), Nee(o), Vs.trigger("afterinit", o), o;
}
function O_t(n) {
  return xy[O1t(n, TR)];
}
function zee(n, e) {
  Vee[n] = e;
}
function Fee(n) {
  ot(_M, n) < 0 && _M.push(n);
}
function Qee(n, e) {
  ER(SM, n, e, l_t);
}
function w_t(n) {
  PR("afterinit", n);
}
function x_t(n) {
  PR("afterupdate", n);
}
function PR(n, e) {
  Vs.on(n, e);
}
function Cl(n, e, t) {
  Pe(e) && (t = e, e = "");
  var r = Me(n) ? n.type : [n, n = {
    event: e
  }][0];
  n.event = (n.event || r).toLowerCase(), e = n.event, !wy[e] && (De(MF.test(r) && MF.test(e)), aS[r] || (aS[r] = {
    action: t,
    actionInfo: n
  }), wy[e] = r);
}
function S_t(n, e) {
  xv.register(n, e);
}
function __t(n, e) {
  ER(lS, n, e, Eee, "layout");
}
function wd(n, e) {
  ER(lS, n, e, kee, "visual");
}
var VF = [];
function ER(n, e, t, r, i) {
  if ((Pe(e) || Me(e)) && (t = e, e = r), process.env.NODE_ENV !== "production") {
    if (isNaN(e) || e == null)
      throw new Error("Illegal priority");
    I(n, function(s) {
      De(s.__raw !== t);
    });
  }
  if (!(ot(VF, t) >= 0)) {
    VF.push(t);
    var o = vee.wrapStageHandler(t, i);
    o.__prio = e, o.__raw = t, n.push(o);
  }
}
function Zee(n, e) {
  CM[n] = e;
}
function C_t(n, e, t) {
  var r = r_t("registerMap");
  r && r(n, e, t);
}
var A_t = Bxt;
wd(CR, uSt);
wd(mC, cSt);
wd(mC, hSt);
wd(CR, CSt);
wd(mC, ASt);
wd(Mee, e_t);
Fee(GJ);
Qee(s_t, yxt);
Zee("default", fSt);
Cl({
  type: Mf,
  event: Mf,
  update: Mf
}, qn);
Cl({
  type: xw,
  event: xw,
  update: xw
}, qn);
Cl({
  type: vy,
  event: vy,
  update: vy
}, qn);
Cl({
  type: Sw,
  event: Sw,
  update: Sw
}, qn);
Cl({
  type: my,
  event: my,
  update: my
}, qn);
zee("light", xSt);
zee("dark", SSt);
var zF = [], T_t = {
  registerPreprocessor: Fee,
  registerProcessor: Qee,
  registerPostInit: w_t,
  registerPostUpdate: x_t,
  registerUpdateLifecycle: PR,
  registerAction: Cl,
  registerCoordinateSystem: S_t,
  registerLayout: __t,
  registerVisual: wd,
  registerTransform: A_t,
  registerLoading: Zee,
  registerMap: C_t,
  registerImpl: n_t,
  PRIORITY: g_t,
  ComponentModel: Ot,
  ComponentView: Nn,
  SeriesModel: Sn,
  ChartView: dn,
  // TODO Use ComponentModel and SeriesModel instead of Constructor
  registerComponentModel: function(n) {
    Ot.registerClass(n);
  },
  registerComponentView: function(n) {
    Nn.registerClass(n);
  },
  registerSeriesModel: function(n) {
    Sn.registerClass(n);
  },
  registerChartView: function(n) {
    dn.registerClass(n);
  },
  registerSubTypeDefaulter: function(n, e) {
    Ot.registerSubTypeDefaulter(n, e);
  },
  registerPainter: function(n, e) {
    Xbt(n, e);
  }
};
function at(n) {
  if (oe(n)) {
    I(n, function(e) {
      at(e);
    });
    return;
  }
  ot(zF, n) >= 0 || (zF.push(n), Pe(n) && (n = {
    install: n
  }), n.install(T_t));
}
function tm(n) {
  return n == null ? 0 : n.length || 1;
}
function FF(n) {
  return n;
}
var P_t = (
  /** @class */
  function() {
    function n(e, t, r, i, o, s) {
      this._old = e, this._new = t, this._oldKeyGetter = r || FF, this._newKeyGetter = i || FF, this.context = o, this._diffModeMultiple = s === "multiple";
    }
    return n.prototype.add = function(e) {
      return this._add = e, this;
    }, n.prototype.update = function(e) {
      return this._update = e, this;
    }, n.prototype.updateManyToOne = function(e) {
      return this._updateManyToOne = e, this;
    }, n.prototype.updateOneToMany = function(e) {
      return this._updateOneToMany = e, this;
    }, n.prototype.updateManyToMany = function(e) {
      return this._updateManyToMany = e, this;
    }, n.prototype.remove = function(e) {
      return this._remove = e, this;
    }, n.prototype.execute = function() {
      this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
    }, n.prototype._executeOneToOne = function() {
      var e = this._old, t = this._new, r = {}, i = new Array(e.length), o = new Array(t.length);
      this._initIndexMap(e, null, i, "_oldKeyGetter"), this._initIndexMap(t, r, o, "_newKeyGetter");
      for (var s = 0; s < e.length; s++) {
        var a = i[s], l = r[a], u = tm(l);
        if (u > 1) {
          var c = l.shift();
          l.length === 1 && (r[a] = l[0]), this._update && this._update(c, s);
        } else
          u === 1 ? (r[a] = null, this._update && this._update(l, s)) : this._remove && this._remove(s);
      }
      this._performRestAdd(o, r);
    }, n.prototype._executeMultiple = function() {
      var e = this._old, t = this._new, r = {}, i = {}, o = [], s = [];
      this._initIndexMap(e, r, o, "_oldKeyGetter"), this._initIndexMap(t, i, s, "_newKeyGetter");
      for (var a = 0; a < o.length; a++) {
        var l = o[a], u = r[l], c = i[l], h = tm(u), f = tm(c);
        if (h > 1 && f === 1)
          this._updateManyToOne && this._updateManyToOne(c, u), i[l] = null;
        else if (h === 1 && f > 1)
          this._updateOneToMany && this._updateOneToMany(c, u), i[l] = null;
        else if (h === 1 && f === 1)
          this._update && this._update(c, u), i[l] = null;
        else if (h > 1 && f > 1)
          this._updateManyToMany && this._updateManyToMany(c, u), i[l] = null;
        else if (h > 1)
          for (var d = 0; d < h; d++)
            this._remove && this._remove(u[d]);
        else
          this._remove && this._remove(u);
      }
      this._performRestAdd(s, i);
    }, n.prototype._performRestAdd = function(e, t) {
      for (var r = 0; r < e.length; r++) {
        var i = e[r], o = t[i], s = tm(o);
        if (s > 1)
          for (var a = 0; a < s; a++)
            this._add && this._add(o[a]);
        else
          s === 1 && this._add && this._add(o);
        t[i] = null;
      }
    }, n.prototype._initIndexMap = function(e, t, r, i) {
      for (var o = this._diffModeMultiple, s = 0; s < e.length; s++) {
        var a = "_ec_" + this[i](e[s], s);
        if (o || (r[s] = a), !!t) {
          var l = t[a], u = tm(l);
          u === 0 ? (t[a] = s, o && r.push(a)) : u === 1 ? t[a] = [l, s] : l.push(s);
        }
      }
    }, n;
  }()
);
const lu = P_t;
var E_t = (
  /** @class */
  function() {
    function n(e, t) {
      this._encode = e, this._schema = t;
    }
    return n.prototype.get = function() {
      return {
        // Do not generate full dimension name until fist used.
        fullDimensions: this._getFullDimensionNames(),
        encode: this._encode
      };
    }, n.prototype._getFullDimensionNames = function() {
      return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
    }, n;
  }()
);
function k_t(n, e) {
  var t = {}, r = t.encode = {}, i = _e(), o = [], s = [], a = {};
  I(n.dimensions, function(f) {
    var d = n.getDimensionInfo(f), p = d.coordDim;
    if (p) {
      process.env.NODE_ENV !== "production" && De(fM.get(p) == null);
      var g = d.coordDimIndex;
      XA(r, p)[g] = f, d.isExtraCoord || (i.set(p, 1), M_t(d.type) && (o[0] = f), XA(a, p)[g] = n.getDimensionIndex(d.name)), d.defaultTooltip && s.push(f);
    }
    fM.each(function(v, m) {
      var y = XA(r, m), b = d.otherDims[m];
      b != null && b !== !1 && (y[b] = d.name);
    });
  });
  var l = [], u = {};
  i.each(function(f, d) {
    var p = r[d];
    u[d] = p[0], l = l.concat(p);
  }), t.dataDimsOnCoord = l, t.dataDimIndicesOnCoord = ae(l, function(f) {
    return n.getDimensionInfo(f).storeDimIndex;
  }), t.encodeFirstDimNotExtra = u;
  var c = r.label;
  c && c.length && (o = c.slice());
  var h = r.tooltip;
  return h && h.length ? s = h.slice() : s.length || (s = o.slice()), r.defaultedLabel = o, r.defaultedTooltip = s, t.userOutput = new E_t(a, e), t;
}
function XA(n, e) {
  return n.hasOwnProperty(e) || (n[e] = []), n[e];
}
function uS(n) {
  return n === "category" ? "ordinal" : n === "time" ? "time" : "float";
}
function M_t(n) {
  return !(n === "ordinal" || n === "time");
}
var Pw = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e) {
      this.otherDims = {}, e != null && te(this, e);
    }
    return n;
  }()
), D_t = Ct(), L_t = {
  float: "f",
  int: "i",
  ordinal: "o",
  number: "n",
  time: "t"
}, Wee = (
  /** @class */
  function() {
    function n(e) {
      this.dimensions = e.dimensions, this._dimOmitted = e.dimensionOmitted, this.source = e.source, this._fullDimCount = e.fullDimensionCount, this._updateDimOmitted(e.dimensionOmitted);
    }
    return n.prototype.isDimensionOmitted = function() {
      return this._dimOmitted;
    }, n.prototype._updateDimOmitted = function(e) {
      this._dimOmitted = e, e && (this._dimNameMap || (this._dimNameMap = Hee(this.source)));
    }, n.prototype.getSourceDimensionIndex = function(e) {
      return Qe(this._dimNameMap.get(e), -1);
    }, n.prototype.getSourceDimension = function(e) {
      var t = this.source.dimensionsDefine;
      if (t)
        return t[e];
    }, n.prototype.makeStoreSchema = function() {
      for (var e = this._fullDimCount, t = HJ(this.source), r = !qee(e), i = "", o = [], s = 0, a = 0; s < e; s++) {
        var l = void 0, u = void 0, c = void 0, h = this.dimensions[a];
        if (h && h.storeDimIndex === s)
          l = t ? h.name : null, u = h.type, c = h.ordinalMeta, a++;
        else {
          var f = this.getSourceDimension(s);
          f && (l = t ? f.name : null, u = f.type);
        }
        o.push({
          property: l,
          type: u,
          ordinalMeta: c
        }), t && l != null && (!h || !h.isCalculationCoord) && (i += r ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), i += "$", i += L_t[u] || "f", c && (i += c.uid), i += "$";
      }
      var d = this.source, p = [d.seriesLayoutBy, d.startIndex, i].join("$$");
      return {
        dimensions: o,
        hash: p
      };
    }, n.prototype.makeOutputDimensionNames = function() {
      for (var e = [], t = 0, r = 0; t < this._fullDimCount; t++) {
        var i = void 0, o = this.dimensions[r];
        if (o && o.storeDimIndex === t)
          o.isCalculationCoord || (i = o.name), r++;
        else {
          var s = this.getSourceDimension(t);
          s && (i = s.name);
        }
        e.push(i);
      }
      return e;
    }, n.prototype.appendCalculationDimension = function(e) {
      this.dimensions.push(e), e.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
    }, n;
  }()
);
function Gee(n) {
  return n instanceof Wee;
}
function jee(n) {
  for (var e = _e(), t = 0; t < (n || []).length; t++) {
    var r = n[t], i = Me(r) ? r.name : r;
    i != null && e.get(i) == null && e.set(i, t);
  }
  return e;
}
function Hee(n) {
  var e = D_t(n);
  return e.dimNameMap || (e.dimNameMap = jee(n.dimensionsDefine));
}
function qee(n) {
  return n > 30;
}
var nm = Me, Pu = ae, I_t = typeof Int32Array > "u" ? Array : Int32Array, R_t = "e\0\0", QF = -1, $_t = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"], N_t = ["_approximateExtent"], ZF, aO, rm, Hd, UA, lO, KA, Bi = (
  /** @class */
  function() {
    function n(e, t) {
      this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
      var r, i = !1;
      Gee(e) ? (r = e.dimensions, this._dimOmitted = e.isDimensionOmitted(), this._schema = e) : (i = !0, r = e), r = r || ["x", "y"];
      for (var o = {}, s = [], a = {}, l = !1, u = {}, c = 0; c < r.length; c++) {
        var h = r[c], f = be(h) ? new Pw({
          name: h
        }) : h instanceof Pw ? h : new Pw(h), d = f.name;
        f.type = f.type || "float", f.coordDim || (f.coordDim = d, f.coordDimIndex = 0);
        var p = f.otherDims = f.otherDims || {};
        s.push(d), o[d] = f, u[d] != null && (l = !0), f.createInvertedIndices && (a[d] = []), p.itemName === 0 && (this._nameDimIdx = c), p.itemId === 0 && (this._idDimIdx = c), process.env.NODE_ENV !== "production" && De(i || f.storeDimIndex >= 0), i && (f.storeDimIndex = c);
      }
      if (this.dimensions = s, this._dimInfos = o, this._initGetDimensionInfo(l), this.hostModel = t, this._invertedIndicesMap = a, this._dimOmitted) {
        var g = this._dimIdxToName = _e();
        I(s, function(v) {
          g.set(o[v].storeDimIndex, v);
        });
      }
    }
    return n.prototype.getDimension = function(e) {
      var t = this._recognizeDimIndex(e);
      if (t == null)
        return e;
      if (t = e, !this._dimOmitted)
        return this.dimensions[t];
      var r = this._dimIdxToName.get(t);
      if (r != null)
        return r;
      var i = this._schema.getSourceDimension(t);
      if (i)
        return i.name;
    }, n.prototype.getDimensionIndex = function(e) {
      var t = this._recognizeDimIndex(e);
      if (t != null)
        return t;
      if (e == null)
        return -1;
      var r = this._getDimInfo(e);
      return r ? r.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(e) : -1;
    }, n.prototype._recognizeDimIndex = function(e) {
      if (Tt(e) || e != null && !isNaN(e) && !this._getDimInfo(e) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(e) < 0))
        return +e;
    }, n.prototype._getStoreDimIndex = function(e) {
      var t = this.getDimensionIndex(e);
      if (process.env.NODE_ENV !== "production" && t == null)
        throw new Error("Unknown dimension " + e);
      return t;
    }, n.prototype.getDimensionInfo = function(e) {
      return this._getDimInfo(this.getDimension(e));
    }, n.prototype._initGetDimensionInfo = function(e) {
      var t = this._dimInfos;
      this._getDimInfo = e ? function(r) {
        return t.hasOwnProperty(r) ? t[r] : void 0;
      } : function(r) {
        return t[r];
      };
    }, n.prototype.getDimensionsOnCoord = function() {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, n.prototype.mapDimension = function(e, t) {
      var r = this._dimSummary;
      if (t == null)
        return r.encodeFirstDimNotExtra[e];
      var i = r.encode[e];
      return i ? i[t] : null;
    }, n.prototype.mapDimensionsAll = function(e) {
      var t = this._dimSummary, r = t.encode[e];
      return (r || []).slice();
    }, n.prototype.getStore = function() {
      return this._store;
    }, n.prototype.initData = function(e, t, r) {
      var i = this, o;
      if (e instanceof vM && (o = e), !o) {
        var s = this.dimensions, a = gR(e) || _i(e) ? new qJ(e, s.length) : e;
        o = new vM();
        var l = Pu(s, function(u) {
          return {
            type: i._dimInfos[u].type,
            property: u
          };
        });
        o.initData(a, l, r);
      }
      this._store = o, this._nameList = (t || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, o.count()), this._dimSummary = k_t(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, n.prototype.appendData = function(e) {
      var t = this._store.appendData(e);
      this._doInit(t[0], t[1]);
    }, n.prototype.appendValues = function(e, t) {
      var r = this._store.appendValues(e, t.length), i = r.start, o = r.end, s = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), t)
        for (var a = i; a < o; a++) {
          var l = a - i;
          this._nameList[a] = t[l], s && KA(this, a);
        }
    }, n.prototype._updateOrdinalMeta = function() {
      for (var e = this._store, t = this.dimensions, r = 0; r < t.length; r++) {
        var i = this._dimInfos[t[r]];
        i.ordinalMeta && e.collectOrdinalMeta(i.storeDimIndex, i.ordinalMeta);
      }
    }, n.prototype._shouldMakeIdFromName = function() {
      var e = this._store.getProvider();
      return this._idDimIdx == null && e.getSource().sourceFormat !== Hl && !e.fillStorage;
    }, n.prototype._doInit = function(e, t) {
      if (!(e >= t)) {
        var r = this._store, i = r.getProvider();
        this._updateOrdinalMeta();
        var o = this._nameList, s = this._idList, a = i.getSource().sourceFormat, l = a === Es;
        if (l && !i.pure)
          for (var u = [], c = e; c < t; c++) {
            var h = i.getItem(c, u);
            if (!this.hasItemOption && a1t(h) && (this.hasItemOption = !0), h) {
              var f = h.name;
              o[c] == null && f != null && (o[c] = dr(f, null));
              var d = h.id;
              s[c] == null && d != null && (s[c] = dr(d, null));
            }
          }
        if (this._shouldMakeIdFromName())
          for (var c = e; c < t; c++)
            KA(this, c);
        ZF(this);
      }
    }, n.prototype.getApproximateExtent = function(e) {
      return this._approximateExtent[e] || this._store.getDataExtent(this._getStoreDimIndex(e));
    }, n.prototype.setApproximateExtent = function(e, t) {
      t = this.getDimension(t), this._approximateExtent[t] = e.slice();
    }, n.prototype.getCalculationInfo = function(e) {
      return this._calculationInfo[e];
    }, n.prototype.setCalculationInfo = function(e, t) {
      nm(e) ? te(this._calculationInfo, e) : this._calculationInfo[e] = t;
    }, n.prototype.getName = function(e) {
      var t = this.getRawIndex(e), r = this._nameList[t];
      return r == null && this._nameDimIdx != null && (r = rm(this, this._nameDimIdx, t)), r == null && (r = ""), r;
    }, n.prototype._getCategory = function(e, t) {
      var r = this._store.get(e, t), i = this._store.getOrdinalMeta(e);
      return i ? i.categories[r] : r;
    }, n.prototype.getId = function(e) {
      return aO(this, this.getRawIndex(e));
    }, n.prototype.count = function() {
      return this._store.count();
    }, n.prototype.get = function(e, t) {
      var r = this._store, i = this._dimInfos[e];
      if (i)
        return r.get(i.storeDimIndex, t);
    }, n.prototype.getByRawIndex = function(e, t) {
      var r = this._store, i = this._dimInfos[e];
      if (i)
        return r.getByRawIndex(i.storeDimIndex, t);
    }, n.prototype.getIndices = function() {
      return this._store.getIndices();
    }, n.prototype.getDataExtent = function(e) {
      return this._store.getDataExtent(this._getStoreDimIndex(e));
    }, n.prototype.getSum = function(e) {
      return this._store.getSum(this._getStoreDimIndex(e));
    }, n.prototype.getMedian = function(e) {
      return this._store.getMedian(this._getStoreDimIndex(e));
    }, n.prototype.getValues = function(e, t) {
      var r = this, i = this._store;
      return oe(e) ? i.getValues(Pu(e, function(o) {
        return r._getStoreDimIndex(o);
      }), t) : i.getValues(e);
    }, n.prototype.hasValue = function(e) {
      for (var t = this._dimSummary.dataDimIndicesOnCoord, r = 0, i = t.length; r < i; r++)
        if (isNaN(this._store.get(t[r], e)))
          return !1;
      return !0;
    }, n.prototype.indexOfName = function(e) {
      for (var t = 0, r = this._store.count(); t < r; t++)
        if (this.getName(t) === e)
          return t;
      return -1;
    }, n.prototype.getRawIndex = function(e) {
      return this._store.getRawIndex(e);
    }, n.prototype.indexOfRawIndex = function(e) {
      return this._store.indexOfRawIndex(e);
    }, n.prototype.rawIndexOf = function(e, t) {
      var r = e && this._invertedIndicesMap[e];
      if (process.env.NODE_ENV !== "production" && !r)
        throw new Error("Do not supported yet");
      var i = r[t];
      return i == null || isNaN(i) ? QF : i;
    }, n.prototype.indicesOfNearest = function(e, t, r) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(e), t, r);
    }, n.prototype.each = function(e, t, r) {
      Pe(e) && (r = t, t = e, e = []);
      var i = r || this, o = Pu(Hd(e), this._getStoreDimIndex, this);
      this._store.each(o, i ? Oe(t, i) : t);
    }, n.prototype.filterSelf = function(e, t, r) {
      Pe(e) && (r = t, t = e, e = []);
      var i = r || this, o = Pu(Hd(e), this._getStoreDimIndex, this);
      return this._store = this._store.filter(o, i ? Oe(t, i) : t), this;
    }, n.prototype.selectRange = function(e) {
      var t = this, r = {}, i = ft(e);
      return I(i, function(o) {
        var s = t._getStoreDimIndex(o);
        r[s] = e[o];
      }), this._store = this._store.selectRange(r), this;
    }, n.prototype.mapArray = function(e, t, r) {
      Pe(e) && (r = t, t = e, e = []), r = r || this;
      var i = [];
      return this.each(e, function() {
        i.push(t && t.apply(this, arguments));
      }, r), i;
    }, n.prototype.map = function(e, t, r, i) {
      var o = r || i || this, s = Pu(Hd(e), this._getStoreDimIndex, this), a = lO(this);
      return a._store = this._store.map(s, o ? Oe(t, o) : t), a;
    }, n.prototype.modify = function(e, t, r, i) {
      var o = this, s = r || i || this;
      process.env.NODE_ENV !== "production" && I(Hd(e), function(l) {
        var u = o.getDimensionInfo(l);
        u.isCalculationCoord || console.error("Danger: only stack dimension can be modified");
      });
      var a = Pu(Hd(e), this._getStoreDimIndex, this);
      this._store.modify(a, s ? Oe(t, s) : t);
    }, n.prototype.downSample = function(e, t, r, i) {
      var o = lO(this);
      return o._store = this._store.downSample(this._getStoreDimIndex(e), t, r, i), o;
    }, n.prototype.lttbDownSample = function(e, t) {
      var r = lO(this);
      return r._store = this._store.lttbDownSample(this._getStoreDimIndex(e), t), r;
    }, n.prototype.getRawDataItem = function(e) {
      return this._store.getRawDataItem(e);
    }, n.prototype.getItemModel = function(e) {
      var t = this.hostModel, r = this.getRawDataItem(e);
      return new fn(r, t, t && t.ecModel);
    }, n.prototype.diff = function(e) {
      var t = this;
      return new lu(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function(r) {
        return aO(e, r);
      }, function(r) {
        return aO(t, r);
      });
    }, n.prototype.getVisual = function(e) {
      var t = this._visual;
      return t && t[e];
    }, n.prototype.setVisual = function(e, t) {
      this._visual = this._visual || {}, nm(e) ? te(this._visual, e) : this._visual[e] = t;
    }, n.prototype.getItemVisual = function(e, t) {
      var r = this._itemVisuals[e], i = r && r[t];
      return i ?? this.getVisual(t);
    }, n.prototype.hasItemVisual = function() {
      return this._itemVisuals.length > 0;
    }, n.prototype.ensureUniqueItemVisual = function(e, t) {
      var r = this._itemVisuals, i = r[e];
      i || (i = r[e] = {});
      var o = i[t];
      return o == null && (o = this.getVisual(t), oe(o) ? o = o.slice() : nm(o) && (o = te({}, o)), i[t] = o), o;
    }, n.prototype.setItemVisual = function(e, t, r) {
      var i = this._itemVisuals[e] || {};
      this._itemVisuals[e] = i, nm(t) ? te(i, t) : i[t] = r;
    }, n.prototype.clearAllVisual = function() {
      this._visual = {}, this._itemVisuals = [];
    }, n.prototype.setLayout = function(e, t) {
      nm(e) ? te(this._layout, e) : this._layout[e] = t;
    }, n.prototype.getLayout = function(e) {
      return this._layout[e];
    }, n.prototype.getItemLayout = function(e) {
      return this._itemLayouts[e];
    }, n.prototype.setItemLayout = function(e, t, r) {
      this._itemLayouts[e] = r ? te(this._itemLayouts[e] || {}, t) : t;
    }, n.prototype.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }, n.prototype.setItemGraphicEl = function(e, t) {
      var r = this.hostModel && this.hostModel.seriesIndex;
      nM(r, this.dataType, e, t), this._graphicEls[e] = t;
    }, n.prototype.getItemGraphicEl = function(e) {
      return this._graphicEls[e];
    }, n.prototype.eachItemGraphicEl = function(e, t) {
      I(this._graphicEls, function(r, i) {
        r && e && e.call(t, r, i);
      });
    }, n.prototype.cloneShallow = function(e) {
      return e || (e = new n(this._schema ? this._schema : Pu(this.dimensions, this._getDimInfo, this), this.hostModel)), UA(e, this), e._store = this._store, e;
    }, n.prototype.wrapMethod = function(e, t) {
      var r = this[e];
      Pe(r) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(e), this[e] = function() {
        var i = r.apply(this, arguments);
        return t.apply(this, [i].concat(DI(arguments)));
      });
    }, n.internalField = function() {
      ZF = function(e) {
        var t = e._invertedIndicesMap;
        I(t, function(r, i) {
          var o = e._dimInfos[i], s = o.ordinalMeta, a = e._store;
          if (s) {
            r = t[i] = new I_t(s.categories.length);
            for (var l = 0; l < r.length; l++)
              r[l] = QF;
            for (var l = 0; l < a.count(); l++)
              r[a.get(o.storeDimIndex, l)] = l;
          }
        });
      }, rm = function(e, t, r) {
        return dr(e._getCategory(t, r), null);
      }, aO = function(e, t) {
        var r = e._idList[t];
        return r == null && e._idDimIdx != null && (r = rm(e, e._idDimIdx, t)), r == null && (r = R_t + t), r;
      }, Hd = function(e) {
        return oe(e) || (e = e != null ? [e] : []), e;
      }, lO = function(e) {
        var t = new n(e._schema ? e._schema : Pu(e.dimensions, e._getDimInfo, e), e.hostModel);
        return UA(t, e), t;
      }, UA = function(e, t) {
        I($_t.concat(t.__wrappedMethods || []), function(r) {
          t.hasOwnProperty(r) && (e[r] = t[r]);
        }), e.__wrappedMethods = t.__wrappedMethods, I(N_t, function(r) {
          e[r] = Re(t[r]);
        }), e._calculationInfo = te({}, t._calculationInfo);
      }, KA = function(e, t) {
        var r = e._nameList, i = e._idList, o = e._nameDimIdx, s = e._idDimIdx, a = r[t], l = i[t];
        if (a == null && o != null && (r[t] = a = rm(e, o, t)), l == null && s != null && (i[t] = l = rm(e, s, t)), l == null && a != null) {
          var u = e._nameRepeatCount, c = u[a] = (u[a] || 0) + 1;
          l = a, c > 1 && (l += "__ec__" + c), i[t] = l;
        }
      };
    }(), n;
  }()
);
function Pb(n, e) {
  gR(n) || (n = vR(n)), e = e || {};
  var t = e.coordDimensions || [], r = e.dimensionsDefine || n.dimensionsDefine || [], i = _e(), o = [], s = V_t(n, t, r, e.dimensionsCount), a = e.canOmitUnusedDimensions && qee(s), l = r === n.dimensionsDefine, u = l ? Hee(n) : jee(r), c = e.encodeDefine;
  !c && e.encodeDefaulter && (c = e.encodeDefaulter(n, s));
  for (var h = _e(c), f = new nee(s), d = 0; d < f.length; d++)
    f[d] = -1;
  function p(C) {
    var A = f[C];
    if (A < 0) {
      var T = r[C], k = Me(T) ? T : {
        name: T
      }, L = new Pw(), D = k.name;
      D != null && u.get(D) != null && (L.name = L.displayName = D), k.type != null && (L.type = k.type), k.displayName != null && (L.displayName = k.displayName);
      var E = o.length;
      return f[C] = E, L.storeDimIndex = C, o.push(L), L;
    }
    return o[A];
  }
  if (!a)
    for (var d = 0; d < s; d++)
      p(d);
  h.each(function(C, A) {
    var T = Kt(C).slice();
    if (T.length === 1 && !be(T[0]) && T[0] < 0) {
      h.set(A, !1);
      return;
    }
    var k = h.set(A, []);
    I(T, function(L, D) {
      var E = be(L) ? u.get(L) : L;
      E != null && E < s && (k[D] = E, v(p(E), A, D));
    });
  });
  var g = 0;
  I(t, function(C) {
    var A, T, k, L;
    if (be(C))
      A = C, L = {};
    else {
      L = C, A = L.name;
      var D = L.ordinalMeta;
      L.ordinalMeta = null, L = te({}, L), L.ordinalMeta = D, T = L.dimsDef, k = L.otherDims, L.name = L.coordDim = L.coordDimIndex = L.dimsDef = L.otherDims = null;
    }
    var E = h.get(A);
    if (E !== !1) {
      if (E = Kt(E), !E.length)
        for (var M = 0; M < (T && T.length || 1); M++) {
          for (; g < s && p(g).coordDim != null; )
            g++;
          g < s && E.push(g++);
        }
      I(E, function(R, N) {
        var $ = p(R);
        if (l && L.type != null && ($.type = L.type), v(Le($, L), A, N), $.name == null && T) {
          var V = T[N];
          !Me(V) && (V = {
            name: V
          }), $.name = $.displayName = V.name, $.defaultTooltip = V.defaultTooltip;
        }
        k && Le($.otherDims, k);
      });
    }
  });
  function v(C, A, T) {
    fM.get(A) != null ? C.otherDims[A] = T : (C.coordDim = A, C.coordDimIndex = T, i.set(A, !0));
  }
  var m = e.generateCoord, y = e.generateCoordCount, b = y != null;
  y = m ? y || 1 : 0;
  var O = m || "value";
  function w(C) {
    C.name == null && (C.name = C.coordDim);
  }
  if (a)
    I(o, function(C) {
      w(C);
    }), o.sort(function(C, A) {
      return C.storeDimIndex - A.storeDimIndex;
    });
  else
    for (var x = 0; x < s; x++) {
      var S = p(x), _ = S.coordDim;
      _ == null && (S.coordDim = z_t(O, i, b), S.coordDimIndex = 0, (!m || y <= 0) && (S.isExtraCoord = !0), y--), w(S), S.type == null && (zJ(n, x) === jr.Must || S.isExtraCoord && (S.otherDims.itemName != null || S.otherDims.seriesName != null)) && (S.type = "ordinal");
    }
  return B_t(o), new Wee({
    source: n,
    dimensions: o,
    fullDimensionCount: s,
    dimensionOmitted: a
  });
}
function B_t(n) {
  for (var e = _e(), t = 0; t < n.length; t++) {
    var r = n[t], i = r.name, o = e.get(i) || 0;
    o > 0 && (r.name = i + (o - 1)), o++, e.set(i, o);
  }
}
function V_t(n, e, t, r) {
  var i = Math.max(n.dimensionsDetectedCount || 1, e.length, t.length, r || 0);
  return I(e, function(o) {
    var s;
    Me(o) && (s = o.dimsDef) && (i = Math.max(i, s.length));
  }), i;
}
function z_t(n, e, t) {
  if (t || e.hasKey(n)) {
    for (var r = 0; e.hasKey(n + r); )
      r++;
    n += r;
  }
  return e.set(n, !0), n;
}
var F_t = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e) {
      this.coordSysDims = [], this.axisMap = _e(), this.categoryAxisMap = _e(), this.coordSysName = e;
    }
    return n;
  }()
);
function Q_t(n) {
  var e = n.get("coordinateSystem"), t = new F_t(e), r = Z_t[e];
  if (r)
    return r(n, t, t.axisMap, t.categoryAxisMap), t;
}
var Z_t = {
  cartesian2d: function(n, e, t, r) {
    var i = n.getReferringComponents("xAxis", nr).models[0], o = n.getReferringComponents("yAxis", nr).models[0];
    if (process.env.NODE_ENV !== "production") {
      if (!i)
        throw new Error('xAxis "' + tr(n.get("xAxisIndex"), n.get("xAxisId"), 0) + '" not found');
      if (!o)
        throw new Error('yAxis "' + tr(n.get("xAxisIndex"), n.get("yAxisId"), 0) + '" not found');
    }
    e.coordSysDims = ["x", "y"], t.set("x", i), t.set("y", o), qd(i) && (r.set("x", i), e.firstCategoryDimIndex = 0), qd(o) && (r.set("y", o), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  singleAxis: function(n, e, t, r) {
    var i = n.getReferringComponents("singleAxis", nr).models[0];
    if (process.env.NODE_ENV !== "production" && !i)
      throw new Error("singleAxis should be specified.");
    e.coordSysDims = ["single"], t.set("single", i), qd(i) && (r.set("single", i), e.firstCategoryDimIndex = 0);
  },
  polar: function(n, e, t, r) {
    var i = n.getReferringComponents("polar", nr).models[0], o = i.findAxisModel("radiusAxis"), s = i.findAxisModel("angleAxis");
    if (process.env.NODE_ENV !== "production") {
      if (!s)
        throw new Error("angleAxis option not found");
      if (!o)
        throw new Error("radiusAxis option not found");
    }
    e.coordSysDims = ["radius", "angle"], t.set("radius", o), t.set("angle", s), qd(o) && (r.set("radius", o), e.firstCategoryDimIndex = 0), qd(s) && (r.set("angle", s), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  geo: function(n, e, t, r) {
    e.coordSysDims = ["lng", "lat"];
  },
  parallel: function(n, e, t, r) {
    var i = n.ecModel, o = i.getComponent("parallel", n.get("parallelIndex")), s = e.coordSysDims = o.dimensions.slice();
    I(o.parallelAxisIndex, function(a, l) {
      var u = i.getComponent("parallelAxis", a), c = s[l];
      t.set(c, u), qd(u) && (r.set(c, u), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = l));
    });
  }
};
function qd(n) {
  return n.get("type") === "category";
}
function W_t(n, e, t) {
  t = t || {};
  var r = t.byIndex, i = t.stackedCoordDimension, o, s, a;
  G_t(e) ? o = e : (s = e.schema, o = s.dimensions, a = e.store);
  var l = !!(n && n.get("stack")), u, c, h, f;
  if (I(o, function(y, b) {
    be(y) && (o[b] = y = {
      name: y
    }), l && !y.isExtraCoord && (!r && !u && y.ordinalMeta && (u = y), !c && y.type !== "ordinal" && y.type !== "time" && (!i || i === y.coordDim) && (c = y));
  }), c && !r && !u && (r = !0), c) {
    h = "__\0ecstackresult_" + n.id, f = "__\0ecstackedover_" + n.id, u && (u.createInvertedIndices = !0);
    var d = c.coordDim, p = c.type, g = 0;
    I(o, function(y) {
      y.coordDim === d && g++;
    });
    var v = {
      name: h,
      coordDim: d,
      coordDimIndex: g,
      type: p,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: o.length
    }, m = {
      name: f,
      // This dimension contains stack base (generally, 0), so do not set it as
      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
      coordDim: f,
      coordDimIndex: g + 1,
      type: p,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: o.length + 1
    };
    s ? (a && (v.storeDimIndex = a.ensureCalculationDimension(f, p), m.storeDimIndex = a.ensureCalculationDimension(h, p)), s.appendCalculationDimension(v), s.appendCalculationDimension(m)) : (o.push(v), o.push(m));
  }
  return {
    stackedDimension: c && c.name,
    stackedByDimension: u && u.name,
    isStackedByIndex: r,
    stackedOverDimension: f,
    stackResultDimension: h
  };
}
function G_t(n) {
  return !Gee(n.schema);
}
function Fc(n, e) {
  return !!e && e === n.getCalculationInfo("stackedDimension");
}
function Yee(n, e) {
  return Fc(n, e) ? n.getCalculationInfo("stackResultDimension") : e;
}
function j_t(n, e) {
  var t = n.get("coordinateSystem"), r = xv.get(t), i;
  return e && e.coordSysDims && (i = ae(e.coordSysDims, function(o) {
    var s = {
      name: o
    }, a = e.axisMap.get(o);
    if (a) {
      var l = a.get("type");
      s.type = uS(l);
    }
    return s;
  })), i || (i = r && (r.getDimensionsInfo ? r.getDimensionsInfo() : r.dimensions.slice()) || ["x", "y"]), i;
}
function H_t(n, e, t) {
  var r, i;
  return t && I(n, function(o, s) {
    var a = o.coordDim, l = t.categoryAxisMap.get(a);
    l && (r == null && (r = s), o.ordinalMeta = l.getOrdinalMeta(), e && (o.createInvertedIndices = !0)), o.otherDims.itemName != null && (i = !0);
  }), !i && r != null && (n[r].otherDims.itemName = 0), r;
}
function yu(n, e, t) {
  t = t || {};
  var r = e.getSourceManager(), i, o = !1;
  n ? (o = !0, i = vR(n)) : (i = r.getSource(), o = i.sourceFormat === Es);
  var s = Q_t(e), a = j_t(e, s), l = t.useEncodeDefaulter, u = Pe(l) ? l : l ? je(VJ, a, e) : null, c = {
    coordDimensions: a,
    generateCoord: t.generateCoord,
    encodeDefine: e.getEncode(),
    encodeDefaulter: u,
    canOmitUnusedDimensions: !o
  }, h = Pb(i, c), f = H_t(h.dimensions, t.createInvertedIndices, s), d = o ? null : r.getSharedDataStore(h), p = W_t(e, {
    schema: h,
    store: d
  }), g = new Bi(h, e);
  g.setCalculationInfo(p);
  var v = f != null && q_t(i) ? function(m, y, b, O) {
    return O === f ? b : this.defaultDimValueGetter(m, y, b, O);
  } : null;
  return g.hasItemOption = !1, g.initData(
    // Try to reuse the data store in sourceManager if using dataset.
    o ? i : d,
    null,
    v
  ), g;
}
function q_t(n) {
  if (n.sourceFormat === Es) {
    var e = Y_t(n.data || []);
    return !oe(fv(e));
  }
}
function Y_t(n) {
  for (var e = 0; e < n.length && n[e] == null; )
    e++;
  return n[e];
}
var Xee = (
  /** @class */
  function() {
    function n(e) {
      this._setting = e || {}, this._extent = [1 / 0, -1 / 0];
    }
    return n.prototype.getSetting = function(e) {
      return this._setting[e];
    }, n.prototype.unionExtent = function(e) {
      var t = this._extent;
      e[0] < t[0] && (t[0] = e[0]), e[1] > t[1] && (t[1] = e[1]);
    }, n.prototype.unionExtentFromData = function(e, t) {
      this.unionExtent(e.getApproximateExtent(t));
    }, n.prototype.getExtent = function() {
      return this._extent.slice();
    }, n.prototype.setExtent = function(e, t) {
      var r = this._extent;
      isNaN(e) || (r[0] = e), isNaN(t) || (r[1] = t);
    }, n.prototype.isInExtentRange = function(e) {
      return this._extent[0] <= e && this._extent[1] >= e;
    }, n.prototype.isBlank = function() {
      return this._isBlank;
    }, n.prototype.setBlank = function(e) {
      this._isBlank = e;
    }, n;
  }()
);
U_(Xee);
const bu = Xee;
var X_t = 0, AM = (
  /** @class */
  function() {
    function n(e) {
      this.categories = e.categories || [], this._needCollect = e.needCollect, this._deduplication = e.deduplication, this.uid = ++X_t;
    }
    return n.createByAxisModel = function(e) {
      var t = e.option, r = t.data, i = r && ae(r, U_t);
      return new n({
        categories: i,
        needCollect: !i,
        // deduplication is default in axis.
        deduplication: t.dedplication !== !1
      });
    }, n.prototype.getOrdinal = function(e) {
      return this._getOrCreateMap().get(e);
    }, n.prototype.parseAndCollect = function(e) {
      var t, r = this._needCollect;
      if (!be(e) && !r)
        return e;
      if (r && !this._deduplication)
        return t = this.categories.length, this.categories[t] = e, t;
      var i = this._getOrCreateMap();
      return t = i.get(e), t == null && (r ? (t = this.categories.length, this.categories[t] = e, i.set(e, t)) : t = NaN), t;
    }, n.prototype._getOrCreateMap = function() {
      return this._map || (this._map = _e(this.categories));
    }, n;
  }()
);
function U_t(n) {
  return Me(n) && n.value != null ? n.value : n + "";
}
function K_t(n) {
  var e = Math.pow(10, Y_(Math.abs(n))), t = Math.abs(n / e);
  return t === 0 || t === 1 || t === 2 || t === 3 || t === 5;
}
function TM(n) {
  return n.type === "interval" || n.type === "log";
}
function J_t(n, e, t, r) {
  var i = {}, o = n[1] - n[0], s = i.interval = vK(o / e, !0);
  t != null && s < t && (s = i.interval = t), r != null && s > r && (s = i.interval = r);
  var a = i.intervalPrecision = Uee(s), l = i.niceTickExtent = [zn(Math.ceil(n[0] / s) * s, a), zn(Math.floor(n[1] / s) * s, a)];
  return eCt(l, n), i;
}
function JA(n) {
  var e = Math.pow(10, Y_(n)), t = n / e;
  return t ? t === 2 ? t = 3 : t === 3 ? t = 5 : t *= 2 : t = 1, zn(t * e);
}
function Uee(n) {
  return Ha(n) + 2;
}
function WF(n, e, t) {
  n[e] = Math.max(Math.min(n[e], t[1]), t[0]);
}
function eCt(n, e) {
  !isFinite(n[0]) && (n[0] = e[0]), !isFinite(n[1]) && (n[1] = e[1]), WF(n, 0, e), WF(n, 1, e), n[0] > n[1] && (n[0] = n[1]);
}
function yC(n, e) {
  return n >= e[0] && n <= e[1];
}
function bC(n, e) {
  return e[1] === e[0] ? 0.5 : (n - e[0]) / (e[1] - e[0]);
}
function OC(n, e) {
  return n * (e[1] - e[0]) + e[0];
}
var Kee = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      r.type = "ordinal";
      var i = r.getSetting("ordinalMeta");
      return i || (i = new AM({})), oe(i) && (i = new AM({
        categories: ae(i, function(o) {
          return Me(o) ? o.value : o;
        })
      })), r._ordinalMeta = i, r._extent = r.getSetting("extent") || [0, i.categories.length - 1], r;
    }
    return e.prototype.parse = function(t) {
      return t == null ? NaN : be(t) ? this._ordinalMeta.getOrdinal(t) : Math.round(t);
    }, e.prototype.contain = function(t) {
      return t = this.parse(t), yC(t, this._extent) && this._ordinalMeta.categories[t] != null;
    }, e.prototype.normalize = function(t) {
      return t = this._getTickNumber(this.parse(t)), bC(t, this._extent);
    }, e.prototype.scale = function(t) {
      return t = Math.round(OC(t, this._extent)), this.getRawOrdinalNumber(t);
    }, e.prototype.getTicks = function() {
      for (var t = [], r = this._extent, i = r[0]; i <= r[1]; )
        t.push({
          value: i
        }), i++;
      return t;
    }, e.prototype.getMinorTicks = function(t) {
    }, e.prototype.setSortInfo = function(t) {
      if (t == null) {
        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
        return;
      }
      for (var r = t.ordinalNumbers, i = this._ordinalNumbersByTick = [], o = this._ticksByOrdinalNumber = [], s = 0, a = this._ordinalMeta.categories.length, l = Math.min(a, r.length); s < l; ++s) {
        var u = r[s];
        i[s] = u, o[u] = s;
      }
      for (var c = 0; s < a; ++s) {
        for (; o[c] != null; )
          c++;
        i.push(c), o[c] = s;
      }
    }, e.prototype._getTickNumber = function(t) {
      var r = this._ticksByOrdinalNumber;
      return r && t >= 0 && t < r.length ? r[t] : t;
    }, e.prototype.getRawOrdinalNumber = function(t) {
      var r = this._ordinalNumbersByTick;
      return r && t >= 0 && t < r.length ? r[t] : t;
    }, e.prototype.getLabel = function(t) {
      if (!this.isBlank()) {
        var r = this.getRawOrdinalNumber(t.value), i = this._ordinalMeta.categories[r];
        return i == null ? "" : i + "";
      }
    }, e.prototype.count = function() {
      return this._extent[1] - this._extent[0] + 1;
    }, e.prototype.unionExtentFromData = function(t, r) {
      this.unionExtent(t.getApproximateExtent(r));
    }, e.prototype.isInExtentRange = function(t) {
      return t = this._getTickNumber(t), this._extent[0] <= t && this._extent[1] >= t;
    }, e.prototype.getOrdinalMeta = function() {
      return this._ordinalMeta;
    }, e.prototype.calcNiceTicks = function() {
    }, e.prototype.calcNiceExtent = function() {
    }, e.type = "ordinal", e;
  }(bu)
);
bu.registerClass(Kee);
const kR = Kee;
var kh = zn, Jee = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "interval", t._interval = 0, t._intervalPrecision = 2, t;
    }
    return e.prototype.parse = function(t) {
      return t;
    }, e.prototype.contain = function(t) {
      return yC(t, this._extent);
    }, e.prototype.normalize = function(t) {
      return bC(t, this._extent);
    }, e.prototype.scale = function(t) {
      return OC(t, this._extent);
    }, e.prototype.setExtent = function(t, r) {
      var i = this._extent;
      isNaN(t) || (i[0] = parseFloat(t)), isNaN(r) || (i[1] = parseFloat(r));
    }, e.prototype.unionExtent = function(t) {
      var r = this._extent;
      t[0] < r[0] && (r[0] = t[0]), t[1] > r[1] && (r[1] = t[1]), this.setExtent(r[0], r[1]);
    }, e.prototype.getInterval = function() {
      return this._interval;
    }, e.prototype.setInterval = function(t) {
      this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = Uee(t);
    }, e.prototype.getTicks = function(t) {
      var r = this._interval, i = this._extent, o = this._niceExtent, s = this._intervalPrecision, a = [];
      if (!r)
        return a;
      var l = 1e4;
      i[0] < o[0] && (t ? a.push({
        value: kh(o[0] - r, s)
      }) : a.push({
        value: i[0]
      }));
      for (var u = o[0]; u <= o[1] && (a.push({
        value: u
      }), u = kh(u + r, s), u !== a[a.length - 1].value); )
        if (a.length > l)
          return [];
      var c = a.length ? a[a.length - 1].value : o[1];
      return i[1] > c && (t ? a.push({
        value: kh(c + r, s)
      }) : a.push({
        value: i[1]
      })), a;
    }, e.prototype.getMinorTicks = function(t) {
      for (var r = this.getTicks(!0), i = [], o = this.getExtent(), s = 1; s < r.length; s++) {
        for (var a = r[s], l = r[s - 1], u = 0, c = [], h = a.value - l.value, f = h / t; u < t - 1; ) {
          var d = kh(l.value + (u + 1) * f);
          d > o[0] && d < o[1] && c.push(d), u++;
        }
        i.push(c);
      }
      return i;
    }, e.prototype.getLabel = function(t, r) {
      if (t == null)
        return "";
      var i = r && r.precision;
      i == null ? i = Ha(t.value) || 0 : i === "auto" && (i = this._intervalPrecision);
      var o = kh(t.value, i, !0);
      return MJ(o);
    }, e.prototype.calcNiceTicks = function(t, r, i) {
      t = t || 5;
      var o = this._extent, s = o[1] - o[0];
      if (isFinite(s)) {
        s < 0 && (s = -s, o.reverse());
        var a = J_t(o, t, r, i);
        this._intervalPrecision = a.intervalPrecision, this._interval = a.interval, this._niceExtent = a.niceTickExtent;
      }
    }, e.prototype.calcNiceExtent = function(t) {
      var r = this._extent;
      if (r[0] === r[1])
        if (r[0] !== 0) {
          var i = Math.abs(r[0]);
          t.fixMax || (r[1] += i / 2), r[0] -= i / 2;
        } else
          r[1] = 1;
      var o = r[1] - r[0];
      isFinite(o) || (r[0] = 0, r[1] = 1), this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
      var s = this._interval;
      t.fixMin || (r[0] = kh(Math.floor(r[0] / s) * s)), t.fixMax || (r[1] = kh(Math.ceil(r[1] / s) * s));
    }, e.prototype.setNiceExtent = function(t, r) {
      this._niceExtent = [t, r];
    }, e.type = "interval", e;
  }(bu)
);
bu.registerClass(Jee);
const Qc = Jee;
var ete = typeof Float32Array < "u", tCt = ete ? Float32Array : Array;
function Ya(n) {
  return oe(n) ? ete ? new Float32Array(n) : n : new tCt(n);
}
var PM = "__ec_stack_";
function MR(n) {
  return n.get("stack") || PM + n.seriesIndex;
}
function DR(n) {
  return n.dim + n.index;
}
function nCt(n) {
  var e = [], t = n.axis, r = "axis0";
  if (t.type === "category") {
    for (var i = t.getBandWidth(), o = 0; o < n.count; o++)
      e.push(Le({
        bandWidth: i,
        axisKey: r,
        stackId: PM + o
      }, n));
    for (var s = rte(e), a = [], o = 0; o < n.count; o++) {
      var l = s[r][PM + o];
      l.offsetCenter = l.offset + l.width / 2, a.push(l);
    }
    return a;
  }
}
function tte(n, e) {
  var t = [];
  return e.eachSeriesByType(n, function(r) {
    ste(r) && t.push(r);
  }), t;
}
function rCt(n) {
  var e = {};
  I(n, function(l) {
    var u = l.coordinateSystem, c = u.getBaseAxis();
    if (!(c.type !== "time" && c.type !== "value"))
      for (var h = l.getData(), f = c.dim + "_" + c.index, d = h.getDimensionIndex(h.mapDimension(c.dim)), p = h.getStore(), g = 0, v = p.count(); g < v; ++g) {
        var m = p.get(d, g);
        e[f] ? e[f].push(m) : e[f] = [m];
      }
  });
  var t = {};
  for (var r in e)
    if (e.hasOwnProperty(r)) {
      var i = e[r];
      if (i) {
        i.sort(function(l, u) {
          return l - u;
        });
        for (var o = null, s = 1; s < i.length; ++s) {
          var a = i[s] - i[s - 1];
          a > 0 && (o = o === null ? a : Math.min(o, a));
        }
        t[r] = o;
      }
    }
  return t;
}
function nte(n) {
  var e = rCt(n), t = [];
  return I(n, function(r) {
    var i = r.coordinateSystem, o = i.getBaseAxis(), s = o.getExtent(), a;
    if (o.type === "category")
      a = o.getBandWidth();
    else if (o.type === "value" || o.type === "time") {
      var l = o.dim + "_" + o.index, u = e[l], c = Math.abs(s[1] - s[0]), h = o.scale.getExtent(), f = Math.abs(h[1] - h[0]);
      a = u ? c / f * u : c;
    } else {
      var d = r.getData();
      a = Math.abs(s[1] - s[0]) / d.count();
    }
    var p = fe(r.get("barWidth"), a), g = fe(r.get("barMaxWidth"), a), v = fe(
      // barMinWidth by default is 0.5 / 1 in cartesian. Because in value axis,
      // the auto-calculated bar width might be less than 0.5 / 1.
      r.get("barMinWidth") || (ate(r) ? 0.5 : 1),
      a
    ), m = r.get("barGap"), y = r.get("barCategoryGap");
    t.push({
      bandWidth: a,
      barWidth: p,
      barMaxWidth: g,
      barMinWidth: v,
      barGap: m,
      barCategoryGap: y,
      axisKey: DR(o),
      stackId: MR(r)
    });
  }), rte(t);
}
function rte(n) {
  var e = {};
  I(n, function(r, i) {
    var o = r.axisKey, s = r.bandWidth, a = e[o] || {
      bandWidth: s,
      remainedWidth: s,
      autoWidthCount: 0,
      categoryGap: null,
      gap: "20%",
      stacks: {}
    }, l = a.stacks;
    e[o] = a;
    var u = r.stackId;
    l[u] || a.autoWidthCount++, l[u] = l[u] || {
      width: 0,
      maxWidth: 0
    };
    var c = r.barWidth;
    c && !l[u].width && (l[u].width = c, c = Math.min(a.remainedWidth, c), a.remainedWidth -= c);
    var h = r.barMaxWidth;
    h && (l[u].maxWidth = h);
    var f = r.barMinWidth;
    f && (l[u].minWidth = f);
    var d = r.barGap;
    d != null && (a.gap = d);
    var p = r.barCategoryGap;
    p != null && (a.categoryGap = p);
  });
  var t = {};
  return I(e, function(r, i) {
    t[i] = {};
    var o = r.stacks, s = r.bandWidth, a = r.categoryGap;
    if (a == null) {
      var l = ft(o).length;
      a = Math.max(35 - l * 4, 15) + "%";
    }
    var u = fe(a, s), c = fe(r.gap, 1), h = r.remainedWidth, f = r.autoWidthCount, d = (h - u) / (f + (f - 1) * c);
    d = Math.max(d, 0), I(o, function(m) {
      var y = m.maxWidth, b = m.minWidth;
      if (m.width) {
        var O = m.width;
        y && (O = Math.min(O, y)), b && (O = Math.max(O, b)), m.width = O, h -= O + c * O, f--;
      } else {
        var O = d;
        y && y < O && (O = Math.min(y, h)), b && b > O && (O = b), O !== d && (m.width = O, h -= O + c * O, f--);
      }
    }), d = (h - u) / (f + (f - 1) * c), d = Math.max(d, 0);
    var p = 0, g;
    I(o, function(m, y) {
      m.width || (m.width = d), g = m, p += m.width * (1 + c);
    }), g && (p -= g.width * c);
    var v = -p / 2;
    I(o, function(m, y) {
      t[i][y] = t[i][y] || {
        bandWidth: s,
        offset: v,
        width: m.width
      }, v += m.width * (1 + c);
    });
  }), t;
}
function iCt(n, e, t) {
  if (n && e) {
    var r = n[DR(e)];
    return r != null && t != null ? r[MR(t)] : r;
  }
}
function ite(n, e) {
  var t = tte(n, e), r = nte(t);
  I(t, function(i) {
    var o = i.getData(), s = i.coordinateSystem, a = s.getBaseAxis(), l = MR(i), u = r[DR(a)][l], c = u.offset, h = u.width;
    o.setLayout({
      bandWidth: u.bandWidth,
      offset: c,
      size: h
    });
  });
}
function ote(n) {
  return {
    seriesType: n,
    plan: Sv(),
    reset: function(e) {
      if (ste(e)) {
        var t = e.getData(), r = e.coordinateSystem, i = r.getBaseAxis(), o = r.getOtherAxis(i), s = t.getDimensionIndex(t.mapDimension(o.dim)), a = t.getDimensionIndex(t.mapDimension(i.dim)), l = e.get("showBackground", !0), u = t.mapDimension(o.dim), c = t.getCalculationInfo("stackResultDimension"), h = Fc(t, u) && !!t.getCalculationInfo("stackedOnSeries"), f = o.isHorizontal(), d = oCt(i, o), p = ate(e), g = e.get("barMinHeight") || 0, v = c && t.getDimensionIndex(c), m = t.getLayout("size"), y = t.getLayout("offset");
        return {
          progress: function(b, O) {
            for (var w = b.count, x = p && Ya(w * 3), S = p && l && Ya(w * 3), _ = p && Ya(w), C = r.master.getRect(), A = f ? C.width : C.height, T, k = O.getStore(), L = 0; (T = b.next()) != null; ) {
              var D = k.get(h ? v : s, T), E = k.get(a, T), M = d, R = void 0;
              h && (R = +D - k.get(s, T));
              var N = void 0, $ = void 0, V = void 0, H = void 0;
              if (f) {
                var G = r.dataToPoint([D, E]);
                if (h) {
                  var q = r.dataToPoint([R, E]);
                  M = q[0];
                }
                N = M, $ = G[1] + y, V = G[0] - M, H = m, Math.abs(V) < g && (V = (V < 0 ? -1 : 1) * g);
              } else {
                var G = r.dataToPoint([E, D]);
                if (h) {
                  var q = r.dataToPoint([E, R]);
                  M = q[1];
                }
                N = G[0] + y, $ = M, V = m, H = G[1] - M, Math.abs(H) < g && (H = (H <= 0 ? -1 : 1) * g);
              }
              p ? (x[L] = N, x[L + 1] = $, x[L + 2] = f ? V : H, S && (S[L] = f ? C.x : N, S[L + 1] = f ? $ : C.y, S[L + 2] = A), _[T] = T) : O.setItemLayout(T, {
                x: N,
                y: $,
                width: V,
                height: H
              }), L += 3;
            }
            p && O.setLayout({
              largePoints: x,
              largeDataIndices: _,
              largeBackgroundPoints: S,
              valueAxisHorizontal: f
            });
          }
        };
      }
    }
  };
}
function ste(n) {
  return n.coordinateSystem && n.coordinateSystem.type === "cartesian2d";
}
function ate(n) {
  return n.pipelineContext && n.pipelineContext.large;
}
function oCt(n, e) {
  return e.toGlobalCoord(e.dataToCoord(e.type === "log" ? 1 : 0));
}
var sCt = function(n, e, t, r) {
  for (; t < r; ) {
    var i = t + r >>> 1;
    n[i][1] < e ? t = i + 1 : r = i;
  }
  return t;
}, lte = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "time", r;
    }
    return e.prototype.getLabel = function(t) {
      var r = this.getSetting("useUTC");
      return lC(t.value, Iz[Iwt(Np(this._minLevelUnit))] || Iz.second, r, this.getSetting("locale"));
    }, e.prototype.getFormattedLabel = function(t, r, i) {
      var o = this.getSetting("useUTC"), s = this.getSetting("locale");
      return Rwt(t, r, i, s, o);
    }, e.prototype.getTicks = function() {
      var t = this._interval, r = this._extent, i = [];
      if (!t)
        return i;
      i.push({
        value: r[0],
        level: 0
      });
      var o = this.getSetting("useUTC"), s = dCt(this._minLevelUnit, this._approxInterval, o, r);
      return i = i.concat(s), i.push({
        value: r[1],
        level: 0
      }), i;
    }, e.prototype.calcNiceExtent = function(t) {
      var r = this._extent;
      if (r[0] === r[1] && (r[0] -= cs, r[1] += cs), r[1] === -1 / 0 && r[0] === 1 / 0) {
        var i = /* @__PURE__ */ new Date();
        r[1] = +new Date(i.getFullYear(), i.getMonth(), i.getDate()), r[0] = r[1] - cs;
      }
      this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
    }, e.prototype.calcNiceTicks = function(t, r, i) {
      t = t || 10;
      var o = this._extent, s = o[1] - o[0];
      this._approxInterval = s / t, r != null && this._approxInterval < r && (this._approxInterval = r), i != null && this._approxInterval > i && (this._approxInterval = i);
      var a = uO.length, l = Math.min(sCt(uO, this._approxInterval, 0, a), a - 1);
      this._interval = uO[l][1], this._minLevelUnit = uO[Math.max(l - 1, 0)][0];
    }, e.prototype.parse = function(t) {
      return Tt(t) ? t : +gl(t);
    }, e.prototype.contain = function(t) {
      return yC(this.parse(t), this._extent);
    }, e.prototype.normalize = function(t) {
      return bC(this.parse(t), this._extent);
    }, e.prototype.scale = function(t) {
      return OC(t, this._extent);
    }, e.type = "time", e;
  }(Qc)
), uO = [
  // Format                           interval
  ["second", aR],
  ["minute", lR],
  ["hour", by],
  ["quarter-day", by * 6],
  ["half-day", by * 12],
  ["day", cs * 1.2],
  ["half-week", cs * 3.5],
  ["week", cs * 7],
  ["month", cs * 31],
  ["quarter", cs * 95],
  ["half-year", Lz / 2],
  ["year", Lz]
  // 1Y
];
function aCt(n, e, t, r) {
  var i = gl(e), o = gl(t), s = function(p) {
    return Rz(i, p, r) === Rz(o, p, r);
  }, a = function() {
    return s("year");
  }, l = function() {
    return a() && s("month");
  }, u = function() {
    return l() && s("day");
  }, c = function() {
    return u() && s("hour");
  }, h = function() {
    return c() && s("minute");
  }, f = function() {
    return h() && s("second");
  }, d = function() {
    return f() && s("millisecond");
  };
  switch (n) {
    case "year":
      return a();
    case "month":
      return l();
    case "day":
      return u();
    case "hour":
      return c();
    case "minute":
      return h();
    case "second":
      return f();
    case "millisecond":
      return d();
  }
}
function lCt(n, e) {
  return n /= cs, n > 16 ? 16 : n > 7.5 ? 7 : n > 3.5 ? 4 : n > 1.5 ? 2 : 1;
}
function uCt(n) {
  var e = 30 * cs;
  return n /= e, n > 6 ? 6 : n > 3 ? 3 : n > 2 ? 2 : 1;
}
function cCt(n) {
  return n /= by, n > 12 ? 12 : n > 6 ? 6 : n > 3.5 ? 4 : n > 2 ? 2 : 1;
}
function GF(n, e) {
  return n /= e ? lR : aR, n > 30 ? 30 : n > 20 ? 20 : n > 15 ? 15 : n > 10 ? 10 : n > 5 ? 5 : n > 2 ? 2 : 1;
}
function hCt(n) {
  return vK(n, !0);
}
function fCt(n, e, t) {
  var r = new Date(n);
  switch (Np(e)) {
    case "year":
    case "month":
      r[CJ(t)](0);
    case "day":
      r[AJ(t)](1);
    case "hour":
      r[TJ(t)](0);
    case "minute":
      r[PJ(t)](0);
    case "second":
      r[EJ(t)](0), r[kJ(t)](0);
  }
  return r.getTime();
}
function dCt(n, e, t, r) {
  var i = 1e4, o = SJ, s = 0;
  function a(A, T, k, L, D, E, M) {
    for (var R = new Date(T), N = T, $ = R[L](); N < k && N <= r[1]; )
      M.push({
        value: N
      }), $ += A, R[D]($), N = R.getTime();
    M.push({
      value: N,
      notAdd: !0
    });
  }
  function l(A, T, k) {
    var L = [], D = !T.length;
    if (!aCt(Np(A), r[0], r[1], t)) {
      D && (T = [{
        // TODO Optimize. Not include so may ticks.
        value: fCt(new Date(r[0]), A, t)
      }, {
        value: r[1]
      }]);
      for (var E = 0; E < T.length - 1; E++) {
        var M = T[E].value, R = T[E + 1].value;
        if (M !== R) {
          var N = void 0, $ = void 0, V = void 0, H = !1;
          switch (A) {
            case "year":
              N = Math.max(1, Math.round(e / cs / 365)), $ = uR(t), V = $wt(t);
              break;
            case "half-year":
            case "quarter":
            case "month":
              N = uCt(e), $ = Bp(t), V = CJ(t);
              break;
            case "week":
            case "half-week":
            case "day":
              N = lCt(e), $ = uC(t), V = AJ(t), H = !0;
              break;
            case "half-day":
            case "quarter-day":
            case "hour":
              N = cCt(e), $ = x0(t), V = TJ(t);
              break;
            case "minute":
              N = GF(e, !0), $ = cC(t), V = PJ(t);
              break;
            case "second":
              N = GF(e, !1), $ = hC(t), V = EJ(t);
              break;
            case "millisecond":
              N = hCt(e), $ = fC(t), V = kJ(t);
              break;
          }
          a(N, M, R, $, V, H, L), A === "year" && k.length > 1 && E === 0 && k.unshift({
            value: k[0].value - N
          });
        }
      }
      for (var E = 0; E < L.length; E++)
        k.push(L[E]);
      return L;
    }
  }
  for (var u = [], c = [], h = 0, f = 0, d = 0; d < o.length && s++ < i; ++d) {
    var p = Np(o[d]);
    if (Lwt(o[d])) {
      l(o[d], u[u.length - 1] || [], c);
      var g = o[d + 1] ? Np(o[d + 1]) : null;
      if (p !== g) {
        if (c.length) {
          f = h, c.sort(function(A, T) {
            return A.value - T.value;
          });
          for (var v = [], m = 0; m < c.length; ++m) {
            var y = c[m].value;
            (m === 0 || c[m - 1].value !== y) && (v.push(c[m]), y >= r[0] && y <= r[1] && h++);
          }
          var b = (r[1] - r[0]) / e;
          if (h > b * 1.5 && f > b / 1.5 || (u.push(v), h > b || n === o[d]))
            break;
        }
        c = [];
      }
    }
  }
  process.env.NODE_ENV !== "production" && s >= i && En("Exceed safe limit.");
  for (var O = Gt(ae(u, function(A) {
    return Gt(A, function(T) {
      return T.value >= r[0] && T.value <= r[1] && !T.notAdd;
    });
  }), function(A) {
    return A.length > 0;
  }), w = [], x = O.length - 1, d = 0; d < O.length; ++d)
    for (var S = O[d], _ = 0; _ < S.length; ++_)
      w.push({
        value: S[_].value,
        level: x - d
      });
  w.sort(function(A, T) {
    return A.value - T.value;
  });
  for (var C = [], d = 0; d < w.length; ++d)
    (d === 0 || w[d].value !== w[d - 1].value) && C.push(w[d]);
  return C;
}
bu.registerClass(lte);
const ute = lte;
var jF = bu.prototype, Sy = Qc.prototype, pCt = zn, gCt = Math.floor, vCt = Math.ceil, cO = Math.pow, Is = Math.log, LR = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "log", t.base = 10, t._originalScale = new Qc(), t._interval = 0, t;
    }
    return e.prototype.getTicks = function(t) {
      var r = this._originalScale, i = this._extent, o = r.getExtent(), s = Sy.getTicks.call(this, t);
      return ae(s, function(a) {
        var l = a.value, u = zn(cO(this.base, l));
        return u = l === i[0] && this._fixMin ? hO(u, o[0]) : u, u = l === i[1] && this._fixMax ? hO(u, o[1]) : u, {
          value: u
        };
      }, this);
    }, e.prototype.setExtent = function(t, r) {
      var i = Is(this.base);
      t = Is(Math.max(0, t)) / i, r = Is(Math.max(0, r)) / i, Sy.setExtent.call(this, t, r);
    }, e.prototype.getExtent = function() {
      var t = this.base, r = jF.getExtent.call(this);
      r[0] = cO(t, r[0]), r[1] = cO(t, r[1]);
      var i = this._originalScale, o = i.getExtent();
      return this._fixMin && (r[0] = hO(r[0], o[0])), this._fixMax && (r[1] = hO(r[1], o[1])), r;
    }, e.prototype.unionExtent = function(t) {
      this._originalScale.unionExtent(t);
      var r = this.base;
      t[0] = Is(t[0]) / Is(r), t[1] = Is(t[1]) / Is(r), jF.unionExtent.call(this, t);
    }, e.prototype.unionExtentFromData = function(t, r) {
      this.unionExtent(t.getApproximateExtent(r));
    }, e.prototype.calcNiceTicks = function(t) {
      t = t || 10;
      var r = this._extent, i = r[1] - r[0];
      if (!(i === 1 / 0 || i <= 0)) {
        var o = r1t(i), s = t / i * o;
        for (s <= 0.5 && (o *= 10); !isNaN(o) && Math.abs(o) < 1 && Math.abs(o) > 0; )
          o *= 10;
        var a = [zn(vCt(r[0] / o) * o), zn(gCt(r[1] / o) * o)];
        this._interval = o, this._niceExtent = a;
      }
    }, e.prototype.calcNiceExtent = function(t) {
      Sy.calcNiceExtent.call(this, t), this._fixMin = t.fixMin, this._fixMax = t.fixMax;
    }, e.prototype.parse = function(t) {
      return t;
    }, e.prototype.contain = function(t) {
      return t = Is(t) / Is(this.base), yC(t, this._extent);
    }, e.prototype.normalize = function(t) {
      return t = Is(t) / Is(this.base), bC(t, this._extent);
    }, e.prototype.scale = function(t) {
      return t = OC(t, this._extent), cO(this.base, t);
    }, e.type = "log", e;
  }(bu)
), cte = LR.prototype;
cte.getMinorTicks = Sy.getMinorTicks;
cte.getLabel = Sy.getLabel;
function hO(n, e) {
  return pCt(n, Ha(e));
}
bu.registerClass(LR);
const mCt = LR;
var yCt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this._prepareParams(e, t, r);
    }
    return n.prototype._prepareParams = function(e, t, r) {
      r[1] < r[0] && (r = [NaN, NaN]), this._dataMin = r[0], this._dataMax = r[1];
      var i = this._isOrdinal = e.type === "ordinal";
      this._needCrossZero = e.type === "interval" && t.getNeedCrossZero && t.getNeedCrossZero();
      var o = this._modelMinRaw = t.get("min", !0);
      Pe(o) ? this._modelMinNum = fO(e, o({
        min: r[0],
        max: r[1]
      })) : o !== "dataMin" && (this._modelMinNum = fO(e, o));
      var s = this._modelMaxRaw = t.get("max", !0);
      if (Pe(s) ? this._modelMaxNum = fO(e, s({
        min: r[0],
        max: r[1]
      })) : s !== "dataMax" && (this._modelMaxNum = fO(e, s)), i)
        this._axisDataLen = t.getCategories().length;
      else {
        var a = t.get("boundaryGap"), l = oe(a) ? a : [a || 0, a || 0];
        typeof l[0] == "boolean" || typeof l[1] == "boolean" ? (process.env.NODE_ENV !== "production" && console.warn('Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.'), this._boundaryGapInner = [0, 0]) : this._boundaryGapInner = [aa(l[0], 1), aa(l[1], 1)];
      }
    }, n.prototype.calculate = function() {
      var e = this._isOrdinal, t = this._dataMin, r = this._dataMax, i = this._axisDataLen, o = this._boundaryGapInner, s = e ? null : r - t || Math.abs(t), a = this._modelMinRaw === "dataMin" ? t : this._modelMinNum, l = this._modelMaxRaw === "dataMax" ? r : this._modelMaxNum, u = a != null, c = l != null;
      a == null && (a = e ? i ? 0 : NaN : t - o[0] * s), l == null && (l = e ? i ? i - 1 : NaN : r + o[1] * s), (a == null || !isFinite(a)) && (a = NaN), (l == null || !isFinite(l)) && (l = NaN);
      var h = ed(a) || ed(l) || e && !i;
      this._needCrossZero && (a > 0 && l > 0 && !u && (a = 0), a < 0 && l < 0 && !c && (l = 0));
      var f = this._determinedMin, d = this._determinedMax;
      return f != null && (a = f, u = !0), d != null && (l = d, c = !0), {
        min: a,
        max: l,
        minFixed: u,
        maxFixed: c,
        isBlank: h
      };
    }, n.prototype.modifyDataMinMax = function(e, t) {
      process.env.NODE_ENV !== "production" && De(!this.frozen), this[OCt[e]] = t;
    }, n.prototype.setDeterminedMinMax = function(e, t) {
      var r = bCt[e];
      process.env.NODE_ENV !== "production" && De(!this.frozen && this[r] == null), this[r] = t;
    }, n.prototype.freeze = function() {
      this.frozen = !0;
    }, n;
  }()
), bCt = {
  min: "_determinedMin",
  max: "_determinedMax"
}, OCt = {
  min: "_dataMin",
  max: "_dataMax"
};
function hte(n, e, t) {
  var r = n.rawExtentInfo;
  return r || (r = new yCt(n, e, t), n.rawExtentInfo = r, r);
}
function fO(n, e) {
  return e == null ? null : ed(e) ? NaN : n.parse(e);
}
function fte(n, e) {
  var t = n.type, r = hte(n, e, n.getExtent()).calculate();
  n.setBlank(r.isBlank);
  var i = r.min, o = r.max, s = e.ecModel;
  if (s && t === "time") {
    var a = tte("bar", s), l = !1;
    if (I(a, function(h) {
      l = l || h.getBaseAxis() === e.axis;
    }), l) {
      var u = nte(a), c = wCt(i, o, e, u);
      i = c.min, o = c.max;
    }
  }
  return {
    extent: [i, o],
    // "fix" means "fixed", the value should not be
    // changed in the subsequent steps.
    fixMin: r.minFixed,
    fixMax: r.maxFixed
  };
}
function wCt(n, e, t, r) {
  var i = t.axis.getExtent(), o = i[1] - i[0], s = iCt(r, t.axis);
  if (s === void 0)
    return {
      min: n,
      max: e
    };
  var a = 1 / 0;
  I(s, function(d) {
    a = Math.min(d.offset, a);
  });
  var l = -1 / 0;
  I(s, function(d) {
    l = Math.max(d.offset + d.width, l);
  }), a = Math.abs(a), l = Math.abs(l);
  var u = a + l, c = e - n, h = 1 - (a + l) / o, f = c / h - c;
  return e += f * (l / u), n -= f * (a / u), {
    min: n,
    max: e
  };
}
function Rg(n, e) {
  var t = e, r = fte(n, t), i = r.extent, o = t.get("splitNumber");
  n instanceof mCt && (n.base = t.get("logBase"));
  var s = n.type, a = t.get("interval"), l = s === "interval" || s === "time";
  n.setExtent(i[0], i[1]), n.calcNiceExtent({
    splitNumber: o,
    fixMin: r.fixMin,
    fixMax: r.fixMax,
    minInterval: l ? t.get("minInterval") : null,
    maxInterval: l ? t.get("maxInterval") : null
  }), a != null && n.setInterval && n.setInterval(a);
}
function wC(n, e) {
  if (e = e || n.get("type"), e)
    switch (e) {
      case "category":
        return new kR({
          ordinalMeta: n.getOrdinalMeta ? n.getOrdinalMeta() : n.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new ute({
          locale: n.ecModel.getLocaleModel(),
          useUTC: n.ecModel.get("useUTC")
        });
      default:
        return new (bu.getClass(e) || Qc)();
    }
}
function xCt(n) {
  var e = n.scale.getExtent(), t = e[0], r = e[1];
  return !(t > 0 && r > 0 || t < 0 && r < 0);
}
function Eb(n) {
  var e = n.getLabelModel().get("formatter"), t = n.type === "category" ? n.scale.getExtent()[0] : null;
  return n.scale.type === "time" ? /* @__PURE__ */ function(r) {
    return function(i, o) {
      return n.scale.getFormattedLabel(i, o, r);
    };
  }(e) : be(e) ? /* @__PURE__ */ function(r) {
    return function(i) {
      var o = n.scale.getLabel(i), s = r.replace("{value}", o ?? "");
      return s;
    };
  }(e) : Pe(e) ? /* @__PURE__ */ function(r) {
    return function(i, o) {
      return t != null && (o = i.value - t), r(IR(n, i), o, i.level != null ? {
        level: i.level
      } : null);
    };
  }(e) : function(r) {
    return n.scale.getLabel(r);
  };
}
function IR(n, e) {
  return n.type === "category" ? n.scale.getLabel(e) : e.value;
}
function SCt(n) {
  var e = n.model, t = n.scale;
  if (!(!e.get(["axisLabel", "show"]) || t.isBlank())) {
    var r, i, o = t.getExtent();
    t instanceof kR ? i = t.count() : (r = t.getTicks(), i = r.length);
    var s = n.getLabelModel(), a = Eb(n), l, u = 1;
    i > 40 && (u = Math.ceil(i / 40));
    for (var c = 0; c < i; c += u) {
      var h = r ? r[c] : {
        value: o[0] + c
      }, f = a(h, c), d = s.getTextRect(f), p = _Ct(d, s.get("rotate") || 0);
      l ? l.union(p) : l = p;
    }
    return l;
  }
}
function _Ct(n, e) {
  var t = e * Math.PI / 180, r = n.width, i = n.height, o = r * Math.abs(Math.cos(t)) + Math.abs(i * Math.sin(t)), s = r * Math.abs(Math.sin(t)) + Math.abs(i * Math.cos(t)), a = new et(n.x, n.y, o, s);
  return a;
}
function RR(n) {
  var e = n.get("interval");
  return e ?? "auto";
}
function dte(n) {
  return n.type === "category" && RR(n.getLabelModel()) === 0;
}
function cS(n, e) {
  var t = {};
  return I(n.mapDimensionsAll(e), function(r) {
    t[Yee(n, r)] = !0;
  }), ft(t);
}
function CCt(n, e, t) {
  e && I(cS(e, t), function(r) {
    var i = e.getApproximateExtent(r);
    i[0] < n[0] && (n[0] = i[0]), i[1] > n[1] && (n[1] = i[1]);
  });
}
var kb = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getNeedCrossZero = function() {
      var e = this.option;
      return !e.scale;
    }, n.prototype.getCoordSysModel = function() {
    }, n;
  }()
), ACt = 1e-8;
function HF(n, e) {
  return Math.abs(n - e) < ACt;
}
function qh(n, e, t) {
  var r = 0, i = n[0];
  if (!i)
    return !1;
  for (var o = 1; o < n.length; o++) {
    var s = n[o];
    r += Dl(i[0], i[1], s[0], s[1], e, t), i = s;
  }
  var a = n[0];
  return (!HF(i[0], a[0]) || !HF(i[1], a[1])) && (r += Dl(i[0], i[1], a[0], a[1], e, t)), r !== 0;
}
var TCt = [];
function eT(n, e) {
  for (var t = 0; t < n.length; t++)
    si(n[t], n[t], e);
}
function qF(n, e, t, r) {
  for (var i = 0; i < n.length; i++) {
    var o = n[i];
    r && (o = r.project(o)), o && isFinite(o[0]) && isFinite(o[1]) && (oc(e, e, o), sc(t, t, o));
  }
}
function PCt(n) {
  for (var e = 0, t = 0, r = 0, i = n.length, o = n[i - 1][0], s = n[i - 1][1], a = 0; a < i; a++) {
    var l = n[a][0], u = n[a][1], c = o * u - l * s;
    e += c, t += (o + l) * c, r += (s + u) * c, o = l, s = u;
  }
  return e ? [t / e / 3, r / e / 3, e] : [n[0][0] || 0, n[0][1] || 0];
}
var pte = (
  /** @class */
  function() {
    function n(e) {
      this.name = e;
    }
    return n.prototype.setCenter = function(e) {
      this._center = e;
    }, n.prototype.getCenter = function() {
      var e = this._center;
      return e || (e = this._center = this.calcCenter()), e;
    }, n;
  }()
), YF = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e, t) {
      this.type = "polygon", this.exterior = e, this.interiors = t;
    }
    return n;
  }()
), XF = (
  /** @class */
  /* @__PURE__ */ function() {
    function n(e) {
      this.type = "linestring", this.points = e;
    }
    return n;
  }()
), gte = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this, t) || this;
      return o.type = "geoJSON", o.geometries = r, o._center = i && [i[0], i[1]], o;
    }
    return e.prototype.calcCenter = function() {
      for (var t = this.geometries, r, i = 0, o = 0; o < t.length; o++) {
        var s = t[o], a = s.exterior, l = a && a.length;
        l > i && (r = s, i = l);
      }
      if (r)
        return PCt(r.exterior);
      var u = this.getBoundingRect();
      return [u.x + u.width / 2, u.y + u.height / 2];
    }, e.prototype.getBoundingRect = function(t) {
      var r = this._rect;
      if (r && !t)
        return r;
      var i = [1 / 0, 1 / 0], o = [-1 / 0, -1 / 0], s = this.geometries;
      return I(s, function(a) {
        a.type === "polygon" ? qF(a.exterior, i, o, t) : I(a.points, function(l) {
          qF(l, i, o, t);
        });
      }), isFinite(i[0]) && isFinite(i[1]) && isFinite(o[0]) && isFinite(o[1]) || (i[0] = i[1] = o[0] = o[1] = 0), r = new et(i[0], i[1], o[0] - i[0], o[1] - i[1]), t || (this._rect = r), r;
    }, e.prototype.contain = function(t) {
      var r = this.getBoundingRect(), i = this.geometries;
      if (!r.contain(t[0], t[1]))
        return !1;
      e:
        for (var o = 0, s = i.length; o < s; o++) {
          var a = i[o];
          if (a.type === "polygon") {
            var l = a.exterior, u = a.interiors;
            if (qh(l, t[0], t[1])) {
              for (var c = 0; c < (u ? u.length : 0); c++)
                if (qh(u[c], t[0], t[1]))
                  continue e;
              return !0;
            }
          }
        }
      return !1;
    }, e.prototype.transformTo = function(t, r, i, o) {
      var s = this.getBoundingRect(), a = s.width / s.height;
      i ? o || (o = i / a) : i = a * o;
      for (var l = new et(t, r, i, o), u = s.calculateTransform(l), c = this.geometries, h = 0; h < c.length; h++) {
        var f = c[h];
        f.type === "polygon" ? (eT(f.exterior, u), I(f.interiors, function(d) {
          eT(d, u);
        })) : I(f.points, function(d) {
          eT(d, u);
        });
      }
      s = this._rect, s.copy(l), this._center = [s.x + s.width / 2, s.y + s.height / 2];
    }, e.prototype.cloneShallow = function(t) {
      t == null && (t = this.name);
      var r = new e(t, this.geometries, this._center);
      return r._rect = this._rect, r.transformTo = null, r;
    }, e;
  }(pte)
), ECt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r) {
      var i = n.call(this, t) || this;
      return i.type = "geoSVG", i._elOnlyForCalculate = r, i;
    }
    return e.prototype.calcCenter = function() {
      for (var t = this._elOnlyForCalculate, r = t.getBoundingRect(), i = [r.x + r.width / 2, r.y + r.height / 2], o = j_(TCt), s = t; s && !s.isGeoSVGGraphicRoot; )
        Gl(o, s.getLocalTransform(), o), s = s.parent;
      return hv(o, o), si(i, i, o), i;
    }, e;
  }(pte)
);
function kCt(n) {
  if (!n.UTF8Encoding)
    return n;
  var e = n, t = e.UTF8Scale;
  t == null && (t = 1024);
  var r = e.features;
  return I(r, function(i) {
    var o = i.geometry, s = o.encodeOffsets, a = o.coordinates;
    if (s)
      switch (o.type) {
        case "LineString":
          o.coordinates = vte(a, s, t);
          break;
        case "Polygon":
          tT(a, s, t);
          break;
        case "MultiLineString":
          tT(a, s, t);
          break;
        case "MultiPolygon":
          I(a, function(l, u) {
            return tT(l, s[u], t);
          });
      }
  }), e.UTF8Encoding = !1, e;
}
function tT(n, e, t) {
  for (var r = 0; r < n.length; r++)
    n[r] = vte(n[r], e[r], t);
}
function vte(n, e, t) {
  for (var r = [], i = e[0], o = e[1], s = 0; s < n.length; s += 2) {
    var a = n.charCodeAt(s) - 64, l = n.charCodeAt(s + 1) - 64;
    a = a >> 1 ^ -(a & 1), l = l >> 1 ^ -(l & 1), a += i, l += o, i = a, o = l, r.push([a / t, l / t]);
  }
  return r;
}
function MCt(n, e) {
  return n = kCt(n), ae(Gt(n.features, function(t) {
    return t.geometry && t.properties && t.geometry.coordinates.length > 0;
  }), function(t) {
    var r = t.properties, i = t.geometry, o = [];
    switch (i.type) {
      case "Polygon":
        var s = i.coordinates;
        o.push(new YF(s[0], s.slice(1)));
        break;
      case "MultiPolygon":
        I(i.coordinates, function(l) {
          l[0] && o.push(new YF(l[0], l.slice(1)));
        });
        break;
      case "LineString":
        o.push(new XF([i.coordinates]));
        break;
      case "MultiLineString":
        o.push(new XF(i.coordinates));
    }
    var a = new gte(r[e || "name"], o, r.cp);
    return a.properties = r, a;
  });
}
var P0 = Ct();
function DCt(n) {
  return n.type === "category" ? ICt(n) : $Ct(n);
}
function LCt(n, e) {
  return n.type === "category" ? RCt(n, e) : {
    ticks: ae(n.scale.getTicks(), function(t) {
      return t.value;
    })
  };
}
function ICt(n) {
  var e = n.getLabelModel(), t = mte(n, e);
  return !e.get("show") || n.scale.isBlank() ? {
    labels: [],
    labelCategoryInterval: t.labelCategoryInterval
  } : t;
}
function mte(n, e) {
  var t = yte(n, "labels"), r = RR(e), i = bte(t, r);
  if (i)
    return i;
  var o, s;
  return Pe(r) ? o = xte(n, r) : (s = r === "auto" ? NCt(n) : r, o = wte(n, s)), Ote(t, r, {
    labels: o,
    labelCategoryInterval: s
  });
}
function RCt(n, e) {
  var t = yte(n, "ticks"), r = RR(e), i = bte(t, r);
  if (i)
    return i;
  var o, s;
  if ((!e.get("show") || n.scale.isBlank()) && (o = []), Pe(r))
    o = xte(n, r, !0);
  else if (r === "auto") {
    var a = mte(n, n.getLabelModel());
    s = a.labelCategoryInterval, o = ae(a.labels, function(l) {
      return l.tickValue;
    });
  } else
    s = r, o = wte(n, s, !0);
  return Ote(t, r, {
    ticks: o,
    tickCategoryInterval: s
  });
}
function $Ct(n) {
  var e = n.scale.getTicks(), t = Eb(n);
  return {
    labels: ae(e, function(r, i) {
      return {
        level: r.level,
        formattedLabel: t(r, i),
        rawLabel: n.scale.getLabel(r),
        tickValue: r.value
      };
    })
  };
}
function yte(n, e) {
  return P0(n)[e] || (P0(n)[e] = []);
}
function bte(n, e) {
  for (var t = 0; t < n.length; t++)
    if (n[t].key === e)
      return n[t].value;
}
function Ote(n, e, t) {
  return n.push({
    key: e,
    value: t
  }), t;
}
function NCt(n) {
  var e = P0(n).autoInterval;
  return e ?? (P0(n).autoInterval = n.calculateCategoryInterval());
}
function BCt(n) {
  var e = VCt(n), t = Eb(n), r = (e.axisRotate - e.labelRotate) / 180 * Math.PI, i = n.scale, o = i.getExtent(), s = i.count();
  if (o[1] - o[0] < 1)
    return 0;
  var a = 1;
  s > 40 && (a = Math.max(1, Math.floor(s / 40)));
  for (var l = o[0], u = n.dataToCoord(l + 1) - n.dataToCoord(l), c = Math.abs(u * Math.cos(r)), h = Math.abs(u * Math.sin(r)), f = 0, d = 0; l <= o[1]; l += a) {
    var p = 0, g = 0, v = wb(t({
      value: l
    }), e.font, "center", "top");
    p = v.width * 1.3, g = v.height * 1.3, f = Math.max(f, p, 7), d = Math.max(d, g, 7);
  }
  var m = f / c, y = d / h;
  isNaN(m) && (m = 1 / 0), isNaN(y) && (y = 1 / 0);
  var b = Math.max(0, Math.floor(Math.min(m, y))), O = P0(n.model), w = n.getExtent(), x = O.lastAutoInterval, S = O.lastTickCount;
  return x != null && S != null && Math.abs(x - b) <= 1 && Math.abs(S - s) <= 1 && x > b && O.axisExtent0 === w[0] && O.axisExtent1 === w[1] ? b = x : (O.lastTickCount = s, O.lastAutoInterval = b, O.axisExtent0 = w[0], O.axisExtent1 = w[1]), b;
}
function VCt(n) {
  var e = n.getLabelModel();
  return {
    axisRotate: n.getRotate ? n.getRotate() : n.isHorizontal && !n.isHorizontal() ? 90 : 0,
    labelRotate: e.get("rotate") || 0,
    font: e.getFont()
  };
}
function wte(n, e, t) {
  var r = Eb(n), i = n.scale, o = i.getExtent(), s = n.getLabelModel(), a = [], l = Math.max((e || 0) + 1, 1), u = o[0], c = i.count();
  u !== 0 && l > 1 && c / l > 2 && (u = Math.round(Math.ceil(u / l) * l));
  var h = dte(n), f = s.get("showMinLabel") || h, d = s.get("showMaxLabel") || h;
  f && u !== o[0] && g(o[0]);
  for (var p = u; p <= o[1]; p += l)
    g(p);
  d && p - l !== o[1] && g(o[1]);
  function g(v) {
    var m = {
      value: v
    };
    a.push(t ? v : {
      formattedLabel: r(m),
      rawLabel: i.getLabel(m),
      tickValue: v
    });
  }
  return a;
}
function xte(n, e, t) {
  var r = n.scale, i = Eb(n), o = [];
  return I(r.getTicks(), function(s) {
    var a = r.getLabel(s), l = s.value;
    e(s.value, a) && o.push(t ? l : {
      formattedLabel: i(s),
      rawLabel: a,
      tickValue: l
    });
  }), o;
}
var UF = [0, 1], zCt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.onBand = !1, this.inverse = !1, this.dim = e, this.scale = t, this._extent = r || [0, 0];
    }
    return n.prototype.contain = function(e) {
      var t = this._extent, r = Math.min(t[0], t[1]), i = Math.max(t[0], t[1]);
      return e >= r && e <= i;
    }, n.prototype.containData = function(e) {
      return this.scale.contain(e);
    }, n.prototype.getExtent = function() {
      return this._extent.slice();
    }, n.prototype.getPixelPrecision = function(e) {
      return pK(e || this.scale.getExtent(), this._extent);
    }, n.prototype.setExtent = function(e, t) {
      var r = this._extent;
      r[0] = e, r[1] = t;
    }, n.prototype.dataToCoord = function(e, t) {
      var r = this._extent, i = this.scale;
      return e = i.normalize(e), this.onBand && i.type === "ordinal" && (r = r.slice(), KF(r, i.count())), Ft(e, UF, r, t);
    }, n.prototype.coordToData = function(e, t) {
      var r = this._extent, i = this.scale;
      this.onBand && i.type === "ordinal" && (r = r.slice(), KF(r, i.count()));
      var o = Ft(e, r, UF, t);
      return this.scale.scale(o);
    }, n.prototype.pointToData = function(e, t) {
    }, n.prototype.getTicksCoords = function(e) {
      e = e || {};
      var t = e.tickModel || this.getTickModel(), r = LCt(this, t), i = r.ticks, o = ae(i, function(a) {
        return {
          coord: this.dataToCoord(this.scale.type === "ordinal" ? this.scale.getRawOrdinalNumber(a) : a),
          tickValue: a
        };
      }, this), s = t.get("alignWithLabel");
      return FCt(this, o, s, e.clamp), o;
    }, n.prototype.getMinorTicksCoords = function() {
      if (this.scale.type === "ordinal")
        return [];
      var e = this.model.getModel("minorTick"), t = e.get("splitNumber");
      t > 0 && t < 100 || (t = 5);
      var r = this.scale.getMinorTicks(t), i = ae(r, function(o) {
        return ae(o, function(s) {
          return {
            coord: this.dataToCoord(s),
            tickValue: s
          };
        }, this);
      }, this);
      return i;
    }, n.prototype.getViewLabels = function() {
      return DCt(this).labels;
    }, n.prototype.getLabelModel = function() {
      return this.model.getModel("axisLabel");
    }, n.prototype.getTickModel = function() {
      return this.model.getModel("axisTick");
    }, n.prototype.getBandWidth = function() {
      var e = this._extent, t = this.scale.getExtent(), r = t[1] - t[0] + (this.onBand ? 1 : 0);
      r === 0 && (r = 1);
      var i = Math.abs(e[1] - e[0]);
      return Math.abs(i) / r;
    }, n.prototype.calculateCategoryInterval = function() {
      return BCt(this);
    }, n;
  }()
);
function KF(n, e) {
  var t = n[1] - n[0], r = e, i = t / r / 2;
  n[0] += i, n[1] -= i;
}
function FCt(n, e, t, r) {
  var i = e.length;
  if (!n.onBand || t || !i)
    return;
  var o = n.getExtent(), s, a;
  if (i === 1)
    e[0].coord = o[0], s = e[1] = {
      coord: o[1]
    };
  else {
    var l = e[i - 1].tickValue - e[0].tickValue, u = (e[i - 1].coord - e[0].coord) / l;
    I(e, function(d) {
      d.coord -= u / 2;
    });
    var c = n.scale.getExtent();
    a = 1 + c[1] - e[i - 1].tickValue, s = {
      coord: e[i - 1].coord + u * a
    }, e.push(s);
  }
  var h = o[0] > o[1];
  f(e[0].coord, o[0]) && (r ? e[0].coord = o[0] : e.shift()), r && f(o[0], e[0].coord) && e.unshift({
    coord: o[0]
  }), f(o[1], s.coord) && (r ? s.coord = o[1] : e.pop()), r && f(s.coord, o[1]) && e.push({
    coord: o[1]
  });
  function f(d, p) {
    return d = zn(d), p = zn(p), h ? d > p : d < p;
  }
}
const ba = zCt;
var im = Math.PI * 2, Mh = vl.CMD, QCt = ["top", "right", "bottom", "left"];
function ZCt(n, e, t, r, i) {
  var o = t.width, s = t.height;
  switch (n) {
    case "top":
      r.set(t.x + o / 2, t.y - e), i.set(0, -1);
      break;
    case "bottom":
      r.set(t.x + o / 2, t.y + s + e), i.set(0, 1);
      break;
    case "left":
      r.set(t.x - e, t.y + s / 2), i.set(-1, 0);
      break;
    case "right":
      r.set(t.x + o + e, t.y + s / 2), i.set(1, 0);
      break;
  }
}
function WCt(n, e, t, r, i, o, s, a, l) {
  s -= n, a -= e;
  var u = Math.sqrt(s * s + a * a);
  s /= u, a /= u;
  var c = s * t + n, h = a * t + e;
  if (Math.abs(r - i) % im < 1e-4)
    return l[0] = c, l[1] = h, u - t;
  if (o) {
    var f = r;
    r = $o(i), i = $o(f);
  } else
    r = $o(r), i = $o(i);
  r > i && (i += im);
  var d = Math.atan2(a, s);
  if (d < 0 && (d += im), d >= r && d <= i || d + im >= r && d + im <= i)
    return l[0] = c, l[1] = h, u - t;
  var p = t * Math.cos(r) + n, g = t * Math.sin(r) + e, v = t * Math.cos(i) + n, m = t * Math.sin(i) + e, y = (p - s) * (p - s) + (g - a) * (g - a), b = (v - s) * (v - s) + (m - a) * (m - a);
  return y < b ? (l[0] = p, l[1] = g, Math.sqrt(y)) : (l[0] = v, l[1] = m, Math.sqrt(b));
}
function hS(n, e, t, r, i, o, s, a) {
  var l = i - n, u = o - e, c = t - n, h = r - e, f = Math.sqrt(c * c + h * h);
  c /= f, h /= f;
  var d = l * c + u * h, p = d / f;
  a && (p = Math.min(Math.max(p, 0), 1)), p *= f;
  var g = s[0] = n + p * c, v = s[1] = e + p * h;
  return Math.sqrt((g - i) * (g - i) + (v - o) * (v - o));
}
function Ste(n, e, t, r, i, o, s) {
  t < 0 && (n = n + t, t = -t), r < 0 && (e = e + r, r = -r);
  var a = n + t, l = e + r, u = s[0] = Math.min(Math.max(i, n), a), c = s[1] = Math.min(Math.max(o, e), l);
  return Math.sqrt((u - i) * (u - i) + (c - o) * (c - o));
}
var Fs = [];
function GCt(n, e, t) {
  var r = Ste(e.x, e.y, e.width, e.height, n.x, n.y, Fs);
  return t.set(Fs[0], Fs[1]), r;
}
function jCt(n, e, t) {
  for (var r = 0, i = 0, o = 0, s = 0, a, l, u = 1 / 0, c = e.data, h = n.x, f = n.y, d = 0; d < c.length; ) {
    var p = c[d++];
    d === 1 && (r = c[d], i = c[d + 1], o = r, s = i);
    var g = u;
    switch (p) {
      case Mh.M:
        o = c[d++], s = c[d++], r = o, i = s;
        break;
      case Mh.L:
        g = hS(r, i, c[d], c[d + 1], h, f, Fs, !0), r = c[d++], i = c[d++];
        break;
      case Mh.C:
        g = YU(r, i, c[d++], c[d++], c[d++], c[d++], c[d], c[d + 1], h, f, Fs), r = c[d++], i = c[d++];
        break;
      case Mh.Q:
        g = UU(r, i, c[d++], c[d++], c[d], c[d + 1], h, f, Fs), r = c[d++], i = c[d++];
        break;
      case Mh.A:
        var v = c[d++], m = c[d++], y = c[d++], b = c[d++], O = c[d++], w = c[d++];
        d += 1;
        var x = !!(1 - c[d++]);
        a = Math.cos(O) * y + v, l = Math.sin(O) * b + m, d <= 1 && (o = a, s = l);
        var S = (h - v) * b / y + v;
        g = WCt(v, m, b, O, O + w, x, S, f, Fs), r = Math.cos(O + w) * y + v, i = Math.sin(O + w) * b + m;
        break;
      case Mh.R:
        o = r = c[d++], s = i = c[d++];
        var _ = c[d++], C = c[d++];
        g = Ste(o, s, _, C, h, f, Fs);
        break;
      case Mh.Z:
        g = hS(r, i, o, s, h, f, Fs, !0), r = o, i = s;
        break;
    }
    g < u && (u = g, t.set(Fs[0], Fs[1]));
  }
  return u;
}
var Xs = new Xe(), ln = new Xe(), Zn = new Xe(), Xa = new Xe(), Fa = new Xe();
function JF(n, e) {
  if (n) {
    var t = n.getTextGuideLine(), r = n.getTextContent();
    if (r && t) {
      var i = n.textGuideLineConfig || {}, o = [[0, 0], [0, 0], [0, 0]], s = i.candidates || QCt, a = r.getBoundingRect().clone();
      a.applyTransform(r.getComputedTransform());
      var l = 1 / 0, u = i.anchor, c = n.getComputedTransform(), h = c && hv([], c), f = e.get("length2") || 0;
      u && Zn.copy(u);
      for (var d = 0; d < s.length; d++) {
        var p = s[d];
        ZCt(p, 0, a, Xs, Xa), Xe.scaleAndAdd(ln, Xs, Xa, f), ln.transform(h);
        var g = n.getBoundingRect(), v = u ? u.distance(ln) : n instanceof ct ? jCt(ln, n.path, Zn) : GCt(ln, g, Zn);
        v < l && (l = v, ln.transform(c), Zn.transform(c), Zn.toArray(o[0]), ln.toArray(o[1]), Xs.toArray(o[2]));
      }
      _te(o, e.get("minTurnAngle")), t.setShape({
        points: o
      });
    }
  }
}
var fS = [], Ii = new Xe();
function _te(n, e) {
  if (e <= 180 && e > 0) {
    e = e / 180 * Math.PI, Xs.fromArray(n[0]), ln.fromArray(n[1]), Zn.fromArray(n[2]), Xe.sub(Xa, Xs, ln), Xe.sub(Fa, Zn, ln);
    var t = Xa.len(), r = Fa.len();
    if (!(t < 1e-3 || r < 1e-3)) {
      Xa.scale(1 / t), Fa.scale(1 / r);
      var i = Xa.dot(Fa), o = Math.cos(e);
      if (o < i) {
        var s = hS(ln.x, ln.y, Zn.x, Zn.y, Xs.x, Xs.y, fS, !1);
        Ii.fromArray(fS), Ii.scaleAndAdd(Fa, s / Math.tan(Math.PI - e));
        var a = Zn.x !== ln.x ? (Ii.x - ln.x) / (Zn.x - ln.x) : (Ii.y - ln.y) / (Zn.y - ln.y);
        if (isNaN(a))
          return;
        a < 0 ? Xe.copy(Ii, ln) : a > 1 && Xe.copy(Ii, Zn), Ii.toArray(n[1]);
      }
    }
  }
}
function HCt(n, e, t) {
  if (t <= 180 && t > 0) {
    t = t / 180 * Math.PI, Xs.fromArray(n[0]), ln.fromArray(n[1]), Zn.fromArray(n[2]), Xe.sub(Xa, ln, Xs), Xe.sub(Fa, Zn, ln);
    var r = Xa.len(), i = Fa.len();
    if (!(r < 1e-3 || i < 1e-3)) {
      Xa.scale(1 / r), Fa.scale(1 / i);
      var o = Xa.dot(e), s = Math.cos(t);
      if (o < s) {
        var a = hS(ln.x, ln.y, Zn.x, Zn.y, Xs.x, Xs.y, fS, !1);
        Ii.fromArray(fS);
        var l = Math.PI / 2, u = Math.acos(Fa.dot(e)), c = l + u - t;
        if (c >= l)
          Xe.copy(Ii, Zn);
        else {
          Ii.scaleAndAdd(Fa, a / Math.tan(Math.PI / 2 - c));
          var h = Zn.x !== ln.x ? (Ii.x - ln.x) / (Zn.x - ln.x) : (Ii.y - ln.y) / (Zn.y - ln.y);
          if (isNaN(h))
            return;
          h < 0 ? Xe.copy(Ii, ln) : h > 1 && Xe.copy(Ii, Zn);
        }
        Ii.toArray(n[1]);
      }
    }
  }
}
function nT(n, e, t, r) {
  var i = t === "normal", o = i ? n : n.ensureState(t);
  o.ignore = e;
  var s = r.get("smooth");
  s && s === !0 && (s = 0.3), o.shape = o.shape || {}, s > 0 && (o.shape.smooth = s);
  var a = r.getModel("lineStyle").getLineStyle();
  i ? n.useStyle(a) : o.style = a;
}
function qCt(n, e) {
  var t = e.smooth, r = e.points;
  if (r)
    if (n.moveTo(r[0][0], r[0][1]), t > 0 && r.length >= 3) {
      var i = ic(r[0], r[1]), o = ic(r[1], r[2]);
      if (!i || !o) {
        n.lineTo(r[1][0], r[1][1]), n.lineTo(r[2][0], r[2][1]);
        return;
      }
      var s = Math.min(i, o) * t, a = mw([], r[1], r[0], s / i), l = mw([], r[1], r[2], s / o), u = mw([], a, l, 0.5);
      n.bezierCurveTo(a[0], a[1], a[0], a[1], u[0], u[1]), n.bezierCurveTo(l[0], l[1], l[0], l[1], r[2][0], r[2][1]);
    } else
      for (var c = 1; c < r.length; c++)
        n.lineTo(r[c][0], r[c][1]);
}
function $R(n, e, t) {
  var r = n.getTextGuideLine(), i = n.getTextContent();
  if (!i) {
    r && n.removeTextGuideLine();
    return;
  }
  for (var o = e.normal, s = o.get("show"), a = i.ignore, l = 0; l < O0.length; l++) {
    var u = O0[l], c = e[u], h = u === "normal";
    if (c) {
      var f = c.get("show"), d = h ? a : Qe(i.states[u] && i.states[u].ignore, a);
      if (d || !Qe(f, s)) {
        var p = h ? r : r && r.states[u];
        p && (p.ignore = !0), r && nT(r, !0, u, c);
        continue;
      }
      r || (r = new Gi(), n.setTextGuideLine(r), !h && (a || !s) && nT(r, !0, "normal", e.normal), n.stateProxy && (r.stateProxy = n.stateProxy)), nT(r, !1, u, c);
    }
  }
  if (r) {
    Le(r.style, t), r.style.fill = null;
    var g = o.get("showAbove"), v = n.textGuideLineConfig = n.textGuideLineConfig || {};
    v.showAbove = g || !1, r.buildPath = qCt;
  }
}
function NR(n, e) {
  e = e || "labelLine";
  for (var t = {
    normal: n.getModel(e)
  }, r = 0; r < Qi.length; r++) {
    var i = Qi[r];
    t[i] = n.getModel([i, e]);
  }
  return t;
}
function Cte(n) {
  for (var e = [], t = 0; t < n.length; t++) {
    var r = n[t];
    if (!r.defaultAttr.ignore) {
      var i = r.label, o = i.getComputedTransform(), s = i.getBoundingRect(), a = !o || o[1] < 1e-5 && o[2] < 1e-5, l = i.style.margin || 0, u = s.clone();
      u.applyTransform(o), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
      var c = a ? new qx(s, o) : null;
      e.push({
        label: i,
        labelLine: r.labelLine,
        rect: u,
        localRect: s,
        obb: c,
        priority: r.priority,
        defaultAttr: r.defaultAttr,
        layoutOption: r.computedLayoutOption,
        axisAligned: a,
        transform: o
      });
    }
  }
  return e;
}
function Ate(n, e, t, r, i, o) {
  var s = n.length;
  if (s < 2)
    return;
  n.sort(function(_, C) {
    return _.rect[e] - C.rect[e];
  });
  for (var a = 0, l, u = !1, c = 0, h = 0; h < s; h++) {
    var f = n[h], d = f.rect;
    l = d[e] - a, l < 0 && (d[e] -= l, f.label[e] -= l, u = !0);
    var p = Math.max(-l, 0);
    c += p, a = d[e] + d[t];
  }
  c > 0 && o && w(-c / s, 0, s);
  var g = n[0], v = n[s - 1], m, y;
  b(), m < 0 && x(-m, 0.8), y < 0 && x(y, 0.8), b(), O(m, y, 1), O(y, m, -1), b(), m < 0 && S(-m), y < 0 && S(y);
  function b() {
    m = g.rect[e] - r, y = i - v.rect[e] - v.rect[t];
  }
  function O(_, C, A) {
    if (_ < 0) {
      var T = Math.min(C, -_);
      if (T > 0) {
        w(T * A, 0, s);
        var k = T + _;
        k < 0 && x(-k * A, 1);
      } else
        x(-_ * A, 1);
    }
  }
  function w(_, C, A) {
    _ !== 0 && (u = !0);
    for (var T = C; T < A; T++) {
      var k = n[T], L = k.rect;
      L[e] += _, k.label[e] += _;
    }
  }
  function x(_, C) {
    for (var A = [], T = 0, k = 1; k < s; k++) {
      var L = n[k - 1].rect, D = Math.max(n[k].rect[e] - L[e] - L[t], 0);
      A.push(D), T += D;
    }
    if (T) {
      var E = Math.min(Math.abs(_) / T, C);
      if (_ > 0)
        for (var k = 0; k < s - 1; k++) {
          var M = A[k] * E;
          w(M, 0, k + 1);
        }
      else
        for (var k = s - 1; k > 0; k--) {
          var M = A[k - 1] * E;
          w(-M, k, s);
        }
    }
  }
  function S(_) {
    var C = _ < 0 ? -1 : 1;
    _ = Math.abs(_);
    for (var A = Math.ceil(_ / (s - 1)), T = 0; T < s - 1; T++)
      if (C > 0 ? w(A, 0, T + 1) : w(-A, s - T - 1, s), _ -= A, _ <= 0)
        return;
  }
  return u;
}
function YCt(n, e, t, r) {
  return Ate(n, "x", "width", e, t, r);
}
function Tte(n, e, t, r) {
  return Ate(n, "y", "height", e, t, r);
}
function Pte(n) {
  var e = [];
  n.sort(function(g, v) {
    return v.priority - g.priority;
  });
  var t = new et(0, 0, 0, 0);
  function r(g) {
    if (!g.ignore) {
      var v = g.ensureState("emphasis");
      v.ignore == null && (v.ignore = !1);
    }
    g.ignore = !0;
  }
  for (var i = 0; i < n.length; i++) {
    var o = n[i], s = o.axisAligned, a = o.localRect, l = o.transform, u = o.label, c = o.labelLine;
    t.copy(o.rect), t.width -= 0.1, t.height -= 0.1, t.x += 0.05, t.y += 0.05;
    for (var h = o.obb, f = !1, d = 0; d < e.length; d++) {
      var p = e[d];
      if (t.intersect(p.rect)) {
        if (s && p.axisAligned) {
          f = !0;
          break;
        }
        if (p.obb || (p.obb = new qx(p.localRect, p.transform)), h || (h = new qx(a, l)), h.intersect(p.obb)) {
          f = !0;
          break;
        }
      }
    }
    f ? (r(u), c && r(c)) : (u.attr("ignore", o.defaultAttr.ignore), c && c.attr("ignore", o.defaultAttr.labelGuideIgnore), e.push(o));
  }
}
function XCt(n) {
  if (n) {
    for (var e = [], t = 0; t < n.length; t++)
      e.push(n[t].slice());
    return e;
  }
}
function UCt(n, e) {
  var t = n.label, r = e && e.getTextGuideLine();
  return {
    dataIndex: n.dataIndex,
    dataType: n.dataType,
    seriesIndex: n.seriesModel.seriesIndex,
    text: n.label.style.text,
    rect: n.hostRect,
    labelRect: n.rect,
    // x: labelAttr.x,
    // y: labelAttr.y,
    align: t.style.align,
    verticalAlign: t.style.verticalAlign,
    labelLinePoints: XCt(r && r.shape.points)
  };
}
var e6 = ["align", "verticalAlign", "width", "height", "fontSize"], Pi = new zl(), rT = Ct(), KCt = Ct();
function dO(n, e, t) {
  for (var r = 0; r < t.length; r++) {
    var i = t[r];
    e[i] != null && (n[i] = e[i]);
  }
}
var pO = ["x", "y", "rotation"], JCt = (
  /** @class */
  function() {
    function n() {
      this._labelList = [], this._chartViewList = [];
    }
    return n.prototype.clearLabels = function() {
      this._labelList = [], this._chartViewList = [];
    }, n.prototype._addLabel = function(e, t, r, i, o) {
      var s = i.style, a = i.__hostTarget, l = a.textConfig || {}, u = i.getComputedTransform(), c = i.getBoundingRect().plain();
      et.applyTransform(c, c, u), u ? Pi.setLocalTransform(u) : (Pi.x = Pi.y = Pi.rotation = Pi.originX = Pi.originY = 0, Pi.scaleX = Pi.scaleY = 1), Pi.rotation = $o(Pi.rotation);
      var h = i.__hostTarget, f;
      if (h) {
        f = h.getBoundingRect().plain();
        var d = h.getComputedTransform();
        et.applyTransform(f, f, d);
      }
      var p = f && h.getTextGuideLine();
      this._labelList.push({
        label: i,
        labelLine: p,
        seriesModel: r,
        dataIndex: e,
        dataType: t,
        layoutOption: o,
        computedLayoutOption: null,
        rect: c,
        hostRect: f,
        // Label with lower priority will be hidden when overlapped
        // Use rect size as default priority
        priority: f ? f.width * f.height : 0,
        // Save default label attributes.
        // For restore if developers want get back to default value in callback.
        defaultAttr: {
          ignore: i.ignore,
          labelGuideIgnore: p && p.ignore,
          x: Pi.x,
          y: Pi.y,
          scaleX: Pi.scaleX,
          scaleY: Pi.scaleY,
          rotation: Pi.rotation,
          style: {
            x: s.x,
            y: s.y,
            align: s.align,
            verticalAlign: s.verticalAlign,
            width: s.width,
            height: s.height,
            fontSize: s.fontSize
          },
          cursor: i.cursor,
          attachedPos: l.position,
          attachedRot: l.rotation
        }
      });
    }, n.prototype.addLabelsOfSeries = function(e) {
      var t = this;
      this._chartViewList.push(e);
      var r = e.__model, i = r.get("labelLayout");
      (Pe(i) || ft(i).length) && e.group.traverse(function(o) {
        if (o.ignore)
          return !0;
        var s = o.getTextContent(), a = Fe(o);
        s && !s.disableLabelLayout && t._addLabel(a.dataIndex, a.dataType, r, s, i);
      });
    }, n.prototype.updateLayoutConfig = function(e) {
      var t = e.getWidth(), r = e.getHeight();
      function i(b, O) {
        return function() {
          JF(b, O);
        };
      }
      for (var o = 0; o < this._labelList.length; o++) {
        var s = this._labelList[o], a = s.label, l = a.__hostTarget, u = s.defaultAttr, c = void 0;
        Pe(s.layoutOption) ? c = s.layoutOption(UCt(s, l)) : c = s.layoutOption, c = c || {}, s.computedLayoutOption = c;
        var h = Math.PI / 180;
        l && l.setTextConfig({
          // Force to set local false.
          local: !1,
          // Ignore position and rotation config on the host el if x or y is changed.
          position: c.x != null || c.y != null ? null : u.attachedPos,
          // Ignore rotation config on the host el if rotation is changed.
          rotation: c.rotate != null ? c.rotate * h : u.attachedRot,
          offset: [c.dx || 0, c.dy || 0]
        });
        var f = !1;
        if (c.x != null ? (a.x = fe(c.x, t), a.setStyle("x", 0), f = !0) : (a.x = u.x, a.setStyle("x", u.style.x)), c.y != null ? (a.y = fe(c.y, r), a.setStyle("y", 0), f = !0) : (a.y = u.y, a.setStyle("y", u.style.y)), c.labelLinePoints) {
          var d = l.getTextGuideLine();
          d && (d.setShape({
            points: c.labelLinePoints
          }), f = !1);
        }
        var p = rT(a);
        p.needsUpdateLabelLine = f, a.rotation = c.rotate != null ? c.rotate * h : u.rotation, a.scaleX = u.scaleX, a.scaleY = u.scaleY;
        for (var g = 0; g < e6.length; g++) {
          var v = e6[g];
          a.setStyle(v, c[v] != null ? c[v] : u.style[v]);
        }
        if (c.draggable) {
          if (a.draggable = !0, a.cursor = "move", l) {
            var m = s.seriesModel;
            if (s.dataIndex != null) {
              var y = s.seriesModel.getData(s.dataType);
              m = y.getItemModel(s.dataIndex);
            }
            a.on("drag", i(l, m.getModel("labelLine")));
          }
        } else
          a.off("drag"), a.cursor = u.cursor;
      }
    }, n.prototype.layout = function(e) {
      var t = e.getWidth(), r = e.getHeight(), i = Cte(this._labelList), o = Gt(i, function(l) {
        return l.layoutOption.moveOverlap === "shiftX";
      }), s = Gt(i, function(l) {
        return l.layoutOption.moveOverlap === "shiftY";
      });
      YCt(o, 0, t), Tte(s, 0, r);
      var a = Gt(i, function(l) {
        return l.layoutOption.hideOverlap;
      });
      Pte(a);
    }, n.prototype.processLabelsOverall = function() {
      var e = this;
      I(this._chartViewList, function(t) {
        var r = t.__model, i = t.ignoreLabelLineUpdate, o = r.isAnimationEnabled();
        t.group.traverse(function(s) {
          if (s.ignore && !s.forceLabelAnimation)
            return !0;
          var a = !i, l = s.getTextContent();
          !a && l && (a = rT(l).needsUpdateLabelLine), a && e._updateLabelLine(s, r), o && e._animateLabels(s, r);
        });
      });
    }, n.prototype._updateLabelLine = function(e, t) {
      var r = e.getTextContent(), i = Fe(e), o = i.dataIndex;
      if (r && o != null) {
        var s = t.getData(i.dataType), a = s.getItemModel(o), l = {}, u = s.getItemVisual(o, "style");
        if (u) {
          var c = s.getVisual("drawType");
          l.stroke = u[c];
        }
        var h = a.getModel("labelLine");
        $R(e, NR(a), l), JF(e, h);
      }
    }, n.prototype._animateLabels = function(e, t) {
      var r = e.getTextContent(), i = e.getTextGuideLine();
      if (r && (e.forceLabelAnimation || !r.ignore && !r.invisible && !e.disableLabelAnimation && !Rp(e))) {
        var o = rT(r), s = o.oldLayout, a = Fe(e), l = a.dataIndex, u = {
          x: r.x,
          y: r.y,
          rotation: r.rotation
        }, c = t.getData(a.dataType);
        if (s) {
          r.attr(s);
          var f = e.prevStates;
          f && (ot(f, "select") >= 0 && r.attr(o.oldLayoutSelect), ot(f, "emphasis") >= 0 && r.attr(o.oldLayoutEmphasis)), kt(r, u, t, l);
        } else if (r.attr(u), !vv(r).valueAnimation) {
          var h = Qe(r.style.opacity, 1);
          r.style.opacity = 0, vn(r, {
            style: {
              opacity: h
            }
          }, t, l);
        }
        if (o.oldLayout = u, r.states.select) {
          var d = o.oldLayoutSelect = {};
          dO(d, u, pO), dO(d, r.states.select, pO);
        }
        if (r.states.emphasis) {
          var p = o.oldLayoutEmphasis = {};
          dO(p, u, pO), dO(p, r.states.emphasis, pO);
        }
        yJ(r, l, c, t, t);
      }
      if (i && !i.ignore && !i.invisible) {
        var o = KCt(i), s = o.oldLayout, g = {
          points: i.shape.points
        };
        s ? (i.attr({
          shape: s
        }), kt(i, {
          shape: g
        }, t)) : (i.setShape(g), i.style.strokePercent = 0, vn(i, {
          style: {
            strokePercent: 1
          }
        }, t)), o.oldLayout = g;
      }
    }, n;
  }()
), iT = Ct();
function e2t(n) {
  n.registerUpdateLifecycle("series:beforeupdate", function(e, t, r) {
    var i = iT(t).labelManager;
    i || (i = iT(t).labelManager = new JCt()), i.clearLabels();
  }), n.registerUpdateLifecycle("series:layoutlabels", function(e, t, r) {
    var i = iT(t).labelManager;
    r.updatedSeries.forEach(function(o) {
      i.addLabelsOfSeries(t.getViewOfSeriesModel(o));
    }), i.updateLayoutConfig(t), i.layout(t), i.processLabelsOverall();
  });
}
var oT = Math.sin, sT = Math.cos, Ete = Math.PI, Dh = Math.PI * 2, t2t = 180 / Ete, kte = function() {
  function n() {
  }
  return n.prototype.reset = function(e) {
    this._start = !0, this._d = [], this._str = "", this._p = Math.pow(10, e || 4);
  }, n.prototype.moveTo = function(e, t) {
    this._add("M", e, t);
  }, n.prototype.lineTo = function(e, t) {
    this._add("L", e, t);
  }, n.prototype.bezierCurveTo = function(e, t, r, i, o, s) {
    this._add("C", e, t, r, i, o, s);
  }, n.prototype.quadraticCurveTo = function(e, t, r, i) {
    this._add("Q", e, t, r, i);
  }, n.prototype.arc = function(e, t, r, i, o, s) {
    this.ellipse(e, t, r, r, 0, i, o, s);
  }, n.prototype.ellipse = function(e, t, r, i, o, s, a, l) {
    var u = a - s, c = !l, h = Math.abs(u), f = uc(h - Dh) || (c ? u >= Dh : -u >= Dh), d = u > 0 ? u % Dh : u % Dh + Dh, p = !1;
    f ? p = !0 : uc(h) ? p = !1 : p = d >= Ete == !!c;
    var g = e + r * sT(s), v = t + i * oT(s);
    this._start && this._add("M", g, v);
    var m = Math.round(o * t2t);
    if (f) {
      var y = 1 / this._p, b = (c ? 1 : -1) * (Dh - y);
      this._add("A", r, i, m, 1, +c, e + r * sT(s + b), t + i * oT(s + b)), y > 0.01 && this._add("A", r, i, m, 0, +c, g, v);
    } else {
      var O = e + r * sT(a), w = t + i * oT(a);
      this._add("A", r, i, m, +p, +c, O, w);
    }
  }, n.prototype.rect = function(e, t, r, i) {
    this._add("M", e, t), this._add("l", r, 0), this._add("l", 0, i), this._add("l", -r, 0), this._add("Z");
  }, n.prototype.closePath = function() {
    this._d.length > 0 && this._add("Z");
  }, n.prototype._add = function(e, t, r, i, o, s, a, l, u) {
    for (var c = [], h = this._p, f = 1; f < arguments.length; f++) {
      var d = arguments[f];
      if (isNaN(d)) {
        this._invalid = !0;
        return;
      }
      c.push(Math.round(d * h) / h);
    }
    this._d.push(e + c.join(" ")), this._start = e === "Z";
  }, n.prototype.generateStr = function() {
    this._str = this._invalid ? "" : this._d.join(""), this._d = [];
  }, n.prototype.getStr = function() {
    return this._str;
  }, n;
}(), _y = "none", n2t = Math.round;
function r2t(n) {
  var e = n.fill;
  return e != null && e !== _y;
}
function i2t(n) {
  var e = n.stroke;
  return e != null && e !== _y;
}
var EM = ["lineCap", "miterLimit", "lineJoin"], o2t = ae(EM, function(n) {
  return "stroke-" + n.toLowerCase();
});
function s2t(n, e, t, r) {
  var i = e.opacity == null ? 1 : e.opacity;
  if (t instanceof fi) {
    n("opacity", i);
    return;
  }
  if (r2t(e)) {
    var o = m0(e.fill);
    n("fill", o.color);
    var s = e.fillOpacity != null ? e.fillOpacity * o.opacity * i : o.opacity * i;
    (r || s < 1) && n("fill-opacity", s);
  } else
    n("fill", _y);
  if (i2t(e)) {
    var a = m0(e.stroke);
    n("stroke", a.color);
    var l = e.strokeNoScale ? t.getLineScale() : 1, u = l ? (e.lineWidth || 0) / l : 0, c = e.strokeOpacity != null ? e.strokeOpacity * a.opacity * i : a.opacity * i, h = e.strokeFirst;
    if ((r || u !== 1) && n("stroke-width", u), (r || h) && n("paint-order", h ? "stroke" : "fill"), (r || c < 1) && n("stroke-opacity", c), e.lineDash) {
      var f = _R(t), d = f[0], p = f[1];
      d && (p = n2t(p || 0), n("stroke-dasharray", d.join(",")), (p || r) && n("stroke-dashoffset", p));
    } else
      r && n("stroke-dasharray", _y);
    for (var g = 0; g < EM.length; g++) {
      var v = EM[g];
      if (r || e[v] !== jx[v]) {
        var m = e[v] || jx[v];
        m && n(o2t[g], m);
      }
    }
  } else
    r && n("stroke", _y);
}
var Mte = "http://www.w3.org/2000/svg", Dte = "http://www.w3.org/1999/xlink", a2t = "http://www.w3.org/2000/xmlns/", l2t = "http://www.w3.org/XML/1998/namespace", t6 = "ecmeta_";
function Lte(n) {
  return document.createElementNS(Mte, n);
}
function Tr(n, e, t, r, i) {
  return {
    tag: n,
    attrs: t || {},
    children: r,
    text: i,
    key: e
  };
}
function u2t(n, e) {
  var t = [];
  if (e)
    for (var r in e) {
      var i = e[r], o = r;
      i !== !1 && (i !== !0 && i != null && (o += '="' + i + '"'), t.push(o));
    }
  return "<" + n + " " + t.join(" ") + ">";
}
function c2t(n) {
  return "</" + n + ">";
}
function BR(n, e) {
  e = e || {};
  var t = e.newline ? `
` : "";
  function r(i) {
    var o = i.children, s = i.tag, a = i.attrs, l = i.text;
    return u2t(s, a) + (s !== "style" ? no(l) : l || "") + (o ? "" + t + ae(o, function(u) {
      return r(u);
    }).join(t) + t : "") + c2t(s);
  }
  return r(n);
}
function h2t(n, e, t) {
  t = t || {};
  var r = t.newline ? `
` : "", i = " {" + r, o = r + "}", s = ae(ft(n), function(l) {
    return l + i + ae(ft(n[l]), function(u) {
      return u + ":" + n[l][u] + ";";
    }).join(r) + o;
  }).join(r), a = ae(ft(e), function(l) {
    return "@keyframes " + l + i + ae(ft(e[l]), function(u) {
      return u + i + ae(ft(e[l][u]), function(c) {
        var h = e[l][u][c];
        return c === "d" && (h = 'path("' + h + '")'), c + ":" + h + ";";
      }).join(r) + o;
    }).join(r) + o;
  }).join(r);
  return !s && !a ? "" : ["<![CDATA[", s, a, "]]>"].join(r);
}
function kM(n) {
  return {
    zrId: n,
    shadowCache: {},
    patternCache: {},
    gradientCache: {},
    clipPathCache: {},
    defs: {},
    cssNodes: {},
    cssAnims: {},
    cssStyleCache: {},
    cssAnimIdx: 0,
    shadowIdx: 0,
    gradientIdx: 0,
    patternIdx: 0,
    clipPathIdx: 0
  };
}
function n6(n, e, t, r) {
  return Tr("svg", "root", {
    width: n,
    height: e,
    xmlns: Mte,
    "xmlns:xlink": Dte,
    version: "1.1",
    baseProfile: "full",
    viewBox: r ? "0 0 " + n + " " + e : !1
  }, t);
}
var f2t = 0;
function Ite() {
  return f2t++;
}
var r6 = {
  cubicIn: "0.32,0,0.67,0",
  cubicOut: "0.33,1,0.68,1",
  cubicInOut: "0.65,0,0.35,1",
  quadraticIn: "0.11,0,0.5,0",
  quadraticOut: "0.5,1,0.89,1",
  quadraticInOut: "0.45,0,0.55,1",
  quarticIn: "0.5,0,0.75,0",
  quarticOut: "0.25,1,0.5,1",
  quarticInOut: "0.76,0,0.24,1",
  quinticIn: "0.64,0,0.78,0",
  quinticOut: "0.22,1,0.36,1",
  quinticInOut: "0.83,0,0.17,1",
  sinusoidalIn: "0.12,0,0.39,0",
  sinusoidalOut: "0.61,1,0.88,1",
  sinusoidalInOut: "0.37,0,0.63,1",
  exponentialIn: "0.7,0,0.84,0",
  exponentialOut: "0.16,1,0.3,1",
  exponentialInOut: "0.87,0,0.13,1",
  circularIn: "0.55,0,1,0.45",
  circularOut: "0,0.55,0.45,1",
  circularInOut: "0.85,0,0.15,1"
}, Nh = "transform-origin";
function d2t(n, e, t) {
  var r = te({}, n.shape);
  te(r, e), n.buildPath(t, r);
  var i = new kte();
  return i.reset(iK(n)), t.rebuildPath(i, 1), i.generateStr(), i.getStr();
}
function p2t(n, e) {
  var t = e.originX, r = e.originY;
  (t || r) && (n[Nh] = t + "px " + r + "px");
}
var g2t = {
  fill: "fill",
  opacity: "opacity",
  lineWidth: "stroke-width",
  lineDashOffset: "stroke-dashoffset"
};
function Rte(n, e) {
  var t = e.zrId + "-ani-" + e.cssAnimIdx++;
  return e.cssAnims[t] = n, t;
}
function v2t(n, e, t) {
  var r = n.shape.paths, i = {}, o, s;
  if (I(r, function(l) {
    var u = kM(t.zrId);
    u.animation = !0, xC(l, {}, u, !0);
    var c = u.cssAnims, h = u.cssNodes, f = ft(c), d = f.length;
    if (d) {
      s = f[d - 1];
      var p = c[s];
      for (var g in p) {
        var v = p[g];
        i[g] = i[g] || { d: "" }, i[g].d += v.d || "";
      }
      for (var m in h) {
        var y = h[m].animation;
        y.indexOf(s) >= 0 && (o = y);
      }
    }
  }), !!o) {
    e.d = !1;
    var a = Rte(i, t);
    return o.replace(s, a);
  }
}
function i6(n) {
  return be(n) ? r6[n] ? "cubic-bezier(" + r6[n] + ")" : NI(n) ? n : "" : "";
}
function xC(n, e, t, r) {
  var i = n.animators, o = i.length, s = [];
  if (n instanceof tR) {
    var a = v2t(n, e, t);
    if (a)
      s.push(a);
    else if (!o)
      return;
  } else if (!o)
    return;
  for (var l = {}, u = 0; u < o; u++) {
    var c = i[u], h = [c.getMaxTime() / 1e3 + "s"], f = i6(c.getClip().easing), d = c.getDelay();
    f ? h.push(f) : h.push("linear"), d && h.push(d / 1e3 + "s"), c.getLoop() && h.push("infinite");
    var p = h.join(" ");
    l[p] = l[p] || [p, []], l[p][1].push(c);
  }
  function g(y) {
    var b = y[1], O = b.length, w = {}, x = {}, S = {}, _ = "animation-timing-function";
    function C(re, ge, ne) {
      for (var ue = re.getTracks(), xe = re.getMaxTime(), gt = 0; gt < ue.length; gt++) {
        var He = ue[gt];
        if (He.needsAnimate()) {
          var It = He.keyframes, Rt = He.propName;
          if (ne && (Rt = ne(Rt)), Rt)
            for (var pn = 0; pn < It.length; pn++) {
              var Xn = It[pn], Dn = Math.round(Xn.time / xe * 100) + "%", yr = i6(Xn.easing), ur = Xn.rawValue;
              (be(ur) || Tt(ur)) && (ge[Dn] = ge[Dn] || {}, ge[Dn][Rt] = Xn.rawValue, yr && (ge[Dn][_] = yr));
            }
        }
      }
    }
    for (var A = 0; A < O; A++) {
      var T = b[A], k = T.targetName;
      k ? k === "shape" && C(T, x) : !r && C(T, w);
    }
    for (var L in w) {
      var D = {};
      uK(D, n), te(D, w[L]);
      var E = oK(D), M = w[L][_];
      S[L] = E ? {
        transform: E
      } : {}, p2t(S[L], D), M && (S[L][_] = M);
    }
    var R, N = !0;
    for (var L in x) {
      S[L] = S[L] || {};
      var $ = !R, M = x[L][_];
      $ && (R = new vl());
      var V = R.len();
      R.reset(), S[L].d = d2t(n, x[L], R);
      var H = R.len();
      if (!$ && V !== H) {
        N = !1;
        break;
      }
      M && (S[L][_] = M);
    }
    if (!N)
      for (var L in S)
        delete S[L].d;
    if (!r)
      for (var A = 0; A < O; A++) {
        var T = b[A], k = T.targetName;
        k === "style" && C(T, S, function(ue) {
          return g2t[ue];
        });
      }
    for (var G = ft(S), q = !0, Y, A = 1; A < G.length; A++) {
      var ie = G[A - 1], se = G[A];
      if (S[ie][Nh] !== S[se][Nh]) {
        q = !1;
        break;
      }
      Y = S[ie][Nh];
    }
    if (q && Y) {
      for (var L in S)
        S[L][Nh] && delete S[L][Nh];
      e[Nh] = Y;
    }
    if (Gt(G, function(re) {
      return ft(S[re]).length > 0;
    }).length) {
      var K = Rte(S, t);
      return K + " " + y[0] + " both";
    }
  }
  for (var v in l) {
    var a = g(l[v]);
    a && s.push(a);
  }
  if (s.length) {
    var m = t.zrId + "-cls-" + Ite();
    t.cssNodes["." + m] = {
      animation: s.join(",")
    }, e.class = m;
  }
}
function m2t(n, e, t) {
  if (!n.ignore)
    if (n.isSilent()) {
      var r = {
        "pointer-events": "none"
      };
      o6(r, e, t, !0);
    } else {
      var i = n.states.emphasis && n.states.emphasis.style ? n.states.emphasis.style : {}, o = i.fill;
      if (!o) {
        var s = n.style && n.style.fill, a = n.states.select && n.states.select.style && n.states.select.style.fill, l = n.currentStates.indexOf("select") >= 0 && a || s;
        l && (o = zk(l));
      }
      var u = i.lineWidth;
      if (u) {
        var c = !i.strokeNoScale && n.transform ? n.transform[0] : 1;
        u = u / c;
      }
      var r = {
        cursor: "pointer"
      };
      o && (r.fill = o), i.stroke && (r.stroke = i.stroke), u && (r["stroke-width"] = u), o6(r, e, t, !0);
    }
}
function o6(n, e, t, r) {
  var i = JSON.stringify(n), o = t.cssStyleCache[i];
  o || (o = t.zrId + "-cls-" + Ite(), t.cssStyleCache[i] = o, t.cssNodes["." + o + (r ? ":hover" : "")] = n), e.class = e.class ? e.class + " " + o : o;
}
var E0 = Math.round;
function $te(n) {
  return n && be(n.src);
}
function Nte(n) {
  return n && Pe(n.toDataURL);
}
function VR(n, e, t, r) {
  s2t(function(i, o) {
    var s = i === "fill" || i === "stroke";
    s && rK(o) ? Vte(e, n, i, r) : s && BI(o) ? zte(t, n, i, r) : s && o === "none" ? n[i] = "transparent" : n[i] = o;
  }, e, t, !1), _2t(t, n, r);
}
function zR(n, e) {
  var t = Ubt(e);
  t && (t.each(function(r, i) {
    r != null && (n[(t6 + i).toLowerCase()] = r + "");
  }), e.isSilent() && (n[t6 + "silent"] = "true"));
}
function s6(n) {
  return uc(n[0] - 1) && uc(n[1]) && uc(n[2]) && uc(n[3] - 1);
}
function y2t(n) {
  return uc(n[4]) && uc(n[5]);
}
function FR(n, e, t) {
  if (e && !(y2t(e) && s6(e))) {
    var r = t ? 10 : 1e4;
    n.transform = s6(e) ? "translate(" + E0(e[4] * r) / r + " " + E0(e[5] * r) / r + ")" : bbt(e);
  }
}
function a6(n, e, t) {
  for (var r = n.points, i = [], o = 0; o < r.length; o++)
    i.push(E0(r[o][0] * t) / t), i.push(E0(r[o][1] * t) / t);
  e.points = i.join(" ");
}
function l6(n) {
  return !n.smooth;
}
function b2t(n) {
  var e = ae(n, function(t) {
    return typeof t == "string" ? [t, t] : t;
  });
  return function(t, r, i) {
    for (var o = 0; o < e.length; o++) {
      var s = e[o], a = t[s[0]];
      a != null && (r[s[1]] = E0(a * i) / i);
    }
  };
}
var O2t = {
  circle: [b2t(["cx", "cy", "r"])],
  polyline: [a6, l6],
  polygon: [a6, l6]
};
function w2t(n) {
  for (var e = n.animators, t = 0; t < e.length; t++)
    if (e[t].targetName === "shape")
      return !0;
  return !1;
}
function Bte(n, e) {
  var t = n.style, r = n.shape, i = O2t[n.type], o = {}, s = e.animation, a = "path", l = n.style.strokePercent, u = e.compress && iK(n) || 4;
  if (i && !e.willUpdate && !(i[1] && !i[1](r)) && !(s && w2t(n)) && !(l < 1)) {
    a = n.type;
    var c = Math.pow(10, u);
    i[0](r, o, c);
  } else {
    var h = !n.path || n.shapeChanged();
    n.path || n.createPathProxy();
    var f = n.path;
    h && (f.beginPath(), n.buildPath(f, n.shape), n.pathUpdated());
    var d = f.getVersion(), p = n, g = p.__svgPathBuilder;
    (p.__svgPathVersion !== d || !g || l !== p.__svgPathStrokePercent) && (g || (g = p.__svgPathBuilder = new kte()), g.reset(u), f.rebuildPath(g, l), g.generateStr(), p.__svgPathVersion = d, p.__svgPathStrokePercent = l), o.d = g.getStr();
  }
  return FR(o, n.transform), VR(o, t, n, e), zR(o, n), e.animation && xC(n, o, e), e.emphasis && m2t(n, o, e), Tr(a, n.id + "", o);
}
function x2t(n, e) {
  var t = n.style, r = t.image;
  if (r && !be(r) && ($te(r) ? r = r.src : Nte(r) && (r = r.toDataURL())), !!r) {
    var i = t.x || 0, o = t.y || 0, s = t.width, a = t.height, l = {
      href: r,
      width: s,
      height: a
    };
    return i && (l.x = i), o && (l.y = o), FR(l, n.transform), VR(l, t, n, e), zR(l, n), e.animation && xC(n, l, e), Tr("image", n.id + "", l);
  }
}
function S2t(n, e) {
  var t = n.style, r = t.text;
  if (r != null && (r += ""), !(!r || isNaN(t.x) || isNaN(t.y))) {
    var i = t.font || Rc, o = t.x || 0, s = wbt(t.y || 0, q_(i), t.textBaseline), a = Obt[t.textAlign] || t.textAlign, l = {
      "dominant-baseline": "central",
      "text-anchor": a
    };
    if (VK(t)) {
      var u = "", c = t.fontStyle, h = BK(t.fontSize);
      if (!parseFloat(h))
        return;
      var f = t.fontFamily || DU, d = t.fontWeight;
      u += "font-size:" + h + ";font-family:" + f + ";", c && c !== "normal" && (u += "font-style:" + c + ";"), d && d !== "normal" && (u += "font-weight:" + d + ";"), l.style = u;
    } else
      l.style = "font: " + i;
    return r.match(/\s/) && (l["xml:space"] = "preserve"), o && (l.x = o), s && (l.y = s), FR(l, n.transform), VR(l, t, n, e), zR(l, n), e.animation && xC(n, l, e), Tr("text", n.id + "", l, void 0, r);
  }
}
function u6(n, e) {
  if (n instanceof ct)
    return Bte(n, e);
  if (n instanceof fi)
    return x2t(n, e);
  if (n instanceof b0)
    return S2t(n, e);
}
function _2t(n, e, t) {
  var r = n.style;
  if (xbt(r)) {
    var i = Sbt(n), o = t.shadowCache, s = o[i];
    if (!s) {
      var a = n.getGlobalScale(), l = a[0], u = a[1];
      if (!l || !u)
        return;
      var c = r.shadowOffsetX || 0, h = r.shadowOffsetY || 0, f = r.shadowBlur, d = m0(r.shadowColor), p = d.opacity, g = d.color, v = f / 2 / l, m = f / 2 / u, y = v + " " + m;
      s = t.zrId + "-s" + t.shadowIdx++, t.defs[s] = Tr("filter", s, {
        id: s,
        x: "-100%",
        y: "-100%",
        width: "300%",
        height: "300%"
      }, [
        Tr("feDropShadow", "", {
          dx: c / l,
          dy: h / u,
          stdDeviation: y,
          "flood-color": g,
          "flood-opacity": p
        })
      ]), o[i] = s;
    }
    e.filter = H_(s);
  }
}
function Vte(n, e, t, r) {
  var i = n[t], o, s = {
    gradientUnits: i.global ? "userSpaceOnUse" : "objectBoundingBox"
  };
  if (tK(i))
    o = "linearGradient", s.x1 = i.x, s.y1 = i.y, s.x2 = i.x2, s.y2 = i.y2;
  else if (nK(i))
    o = "radialGradient", s.cx = Qe(i.x, 0.5), s.cy = Qe(i.y, 0.5), s.r = Qe(i.r, 0.5);
  else {
    process.env.NODE_ENV !== "production" && Js("Illegal gradient type.");
    return;
  }
  for (var a = i.colorStops, l = [], u = 0, c = a.length; u < c; ++u) {
    var h = Fk(a[u].offset) * 100 + "%", f = a[u].color, d = m0(f), p = d.color, g = d.opacity, v = {
      offset: h
    };
    v["stop-color"] = p, g < 1 && (v["stop-opacity"] = g), l.push(Tr("stop", u + "", v));
  }
  var m = Tr(o, "", s, l), y = BR(m), b = r.gradientCache, O = b[y];
  O || (O = r.zrId + "-g" + r.gradientIdx++, b[y] = O, s.id = O, r.defs[O] = Tr(o, O, s, l)), e[t] = H_(O);
}
function zte(n, e, t, r) {
  var i = n.style[t], o = n.getBoundingRect(), s = {}, a = i.repeat, l = a === "no-repeat", u = a === "repeat-x", c = a === "repeat-y", h;
  if (eK(i)) {
    var f = i.imageWidth, d = i.imageHeight, p = void 0, g = i.image;
    if (be(g) ? p = g : $te(g) ? p = g.src : Nte(g) && (p = g.toDataURL()), typeof Image > "u") {
      var v = "Image width/height must been given explictly in svg-ssr renderer.";
      De(f, v), De(d, v);
    } else if (f == null || d == null) {
      var m = function(A, T) {
        if (A) {
          var k = A.elm, L = f || T.width, D = d || T.height;
          A.tag === "pattern" && (u ? (D = 1, L /= o.width) : c && (L = 1, D /= o.height)), A.attrs.width = L, A.attrs.height = D, k && (k.setAttribute("width", L), k.setAttribute("height", D));
        }
      }, y = GI(p, null, n, function(A) {
        l || m(x, A), m(h, A);
      });
      y && y.width && y.height && (f = f || y.width, d = d || y.height);
    }
    h = Tr("image", "img", {
      href: p,
      width: f,
      height: d
    }), s.width = f, s.height = d;
  } else
    i.svgElement && (h = Re(i.svgElement), s.width = i.svgWidth, s.height = i.svgHeight);
  if (h) {
    var b, O;
    l ? b = O = 1 : u ? (O = 1, b = s.width / o.width) : c ? (b = 1, O = s.height / o.height) : s.patternUnits = "userSpaceOnUse", b != null && !isNaN(b) && (s.width = b), O != null && !isNaN(O) && (s.height = O);
    var w = oK(i);
    w && (s.patternTransform = w);
    var x = Tr("pattern", "", s, [h]), S = BR(x), _ = r.patternCache, C = _[S];
    C || (C = r.zrId + "-p" + r.patternIdx++, _[S] = C, s.id = C, x = r.defs[C] = Tr("pattern", C, s, [h])), e[t] = H_(C);
  }
}
function C2t(n, e, t) {
  var r = t.clipPathCache, i = t.defs, o = r[n.id];
  if (!o) {
    o = t.zrId + "-c" + t.clipPathIdx++;
    var s = {
      id: o
    };
    r[n.id] = o, i[o] = Tr("clipPath", o, s, [Bte(n, t)]);
  }
  e["clip-path"] = H_(o);
}
function c6(n) {
  return document.createTextNode(n);
}
function Yh(n, e, t) {
  n.insertBefore(e, t);
}
function h6(n, e) {
  n.removeChild(e);
}
function f6(n, e) {
  n.appendChild(e);
}
function Fte(n) {
  return n.parentNode;
}
function Qte(n) {
  return n.nextSibling;
}
function aT(n, e) {
  n.textContent = e;
}
var d6 = 58, A2t = 120, T2t = Tr("", "");
function MM(n) {
  return n === void 0;
}
function Da(n) {
  return n !== void 0;
}
function P2t(n, e, t) {
  for (var r = {}, i = e; i <= t; ++i) {
    var o = n[i].key;
    o !== void 0 && (process.env.NODE_ENV !== "production" && r[o] != null && console.error("Duplicate key " + o), r[o] = i);
  }
  return r;
}
function Rm(n, e) {
  var t = n.key === e.key, r = n.tag === e.tag;
  return r && t;
}
function k0(n) {
  var e, t = n.children, r = n.tag;
  if (Da(r)) {
    var i = n.elm = Lte(r);
    if (QR(T2t, n), oe(t))
      for (e = 0; e < t.length; ++e) {
        var o = t[e];
        o != null && f6(i, k0(o));
      }
    else
      Da(n.text) && !Me(n.text) && f6(i, c6(n.text));
  } else
    n.elm = c6(n.text);
  return n.elm;
}
function Zte(n, e, t, r, i) {
  for (; r <= i; ++r) {
    var o = t[r];
    o != null && Yh(n, k0(o), e);
  }
}
function dS(n, e, t, r) {
  for (; t <= r; ++t) {
    var i = e[t];
    if (i != null)
      if (Da(i.tag)) {
        var o = Fte(i.elm);
        h6(o, i.elm);
      } else
        h6(n, i.elm);
  }
}
function QR(n, e) {
  var t, r = e.elm, i = n && n.attrs || {}, o = e.attrs || {};
  if (i !== o) {
    for (t in o) {
      var s = o[t], a = i[t];
      a !== s && (s === !0 ? r.setAttribute(t, "") : s === !1 ? r.removeAttribute(t) : t === "style" ? r.style.cssText = s : t.charCodeAt(0) !== A2t ? r.setAttribute(t, s) : t === "xmlns:xlink" || t === "xmlns" ? r.setAttributeNS(a2t, t, s) : t.charCodeAt(3) === d6 ? r.setAttributeNS(l2t, t, s) : t.charCodeAt(5) === d6 ? r.setAttributeNS(Dte, t, s) : r.setAttribute(t, s));
    }
    for (t in i)
      t in o || r.removeAttribute(t);
  }
}
function E2t(n, e, t) {
  for (var r = 0, i = 0, o = e.length - 1, s = e[0], a = e[o], l = t.length - 1, u = t[0], c = t[l], h, f, d, p; r <= o && i <= l; )
    s == null ? s = e[++r] : a == null ? a = e[--o] : u == null ? u = t[++i] : c == null ? c = t[--l] : Rm(s, u) ? (hp(s, u), s = e[++r], u = t[++i]) : Rm(a, c) ? (hp(a, c), a = e[--o], c = t[--l]) : Rm(s, c) ? (hp(s, c), Yh(n, s.elm, Qte(a.elm)), s = e[++r], c = t[--l]) : Rm(a, u) ? (hp(a, u), Yh(n, a.elm, s.elm), a = e[--o], u = t[++i]) : (MM(h) && (h = P2t(e, r, o)), f = h[u.key], MM(f) ? Yh(n, k0(u), s.elm) : (d = e[f], d.tag !== u.tag ? Yh(n, k0(u), s.elm) : (hp(d, u), e[f] = void 0, Yh(n, d.elm, s.elm))), u = t[++i]);
  (r <= o || i <= l) && (r > o ? (p = t[l + 1] == null ? null : t[l + 1].elm, Zte(n, p, t, i, l)) : dS(n, e, r, o));
}
function hp(n, e) {
  var t = e.elm = n.elm, r = n.children, i = e.children;
  n !== e && (QR(n, e), MM(e.text) ? Da(r) && Da(i) ? r !== i && E2t(t, r, i) : Da(i) ? (Da(n.text) && aT(t, ""), Zte(t, null, i, 0, i.length - 1)) : Da(r) ? dS(t, r, 0, r.length - 1) : Da(n.text) && aT(t, "") : n.text !== e.text && (Da(r) && dS(t, r, 0, r.length - 1), aT(t, e.text)));
}
function k2t(n, e) {
  if (Rm(n, e))
    hp(n, e);
  else {
    var t = n.elm, r = Fte(t);
    k0(e), r !== null && (Yh(r, e.elm, Qte(t)), dS(r, [n], 0, 0));
  }
  return e;
}
var M2t = 0, D2t = function() {
  function n(e, t, r) {
    if (this.type = "svg", this.refreshHover = p6("refreshHover"), this.configLayer = p6("configLayer"), this.storage = t, this._opts = r = te({}, r), this.root = e, this._id = "zr" + M2t++, this._oldVNode = n6(r.width, r.height), e && !r.ssr) {
      var i = this._viewport = document.createElement("div");
      i.style.cssText = "position:relative;overflow:hidden";
      var o = this._svgDom = this._oldVNode.elm = Lte("svg");
      QR(null, this._oldVNode), i.appendChild(o), e.appendChild(i);
    }
    this.resize(r.width, r.height);
  }
  return n.prototype.getType = function() {
    return this.type;
  }, n.prototype.getViewportRoot = function() {
    return this._viewport;
  }, n.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, n.prototype.getSvgDom = function() {
    return this._svgDom;
  }, n.prototype.refresh = function() {
    if (this.root) {
      var e = this.renderToVNode({
        willUpdate: !0
      });
      e.attrs.style = "position:absolute;left:0;top:0;user-select:none", k2t(this._oldVNode, e), this._oldVNode = e;
    }
  }, n.prototype.renderOneToVNode = function(e) {
    return u6(e, kM(this._id));
  }, n.prototype.renderToVNode = function(e) {
    e = e || {};
    var t = this.storage.getDisplayList(!0), r = this._width, i = this._height, o = kM(this._id);
    o.animation = e.animation, o.willUpdate = e.willUpdate, o.compress = e.compress, o.emphasis = e.emphasis;
    var s = [], a = this._bgVNode = L2t(r, i, this._backgroundColor, o);
    a && s.push(a);
    var l = e.compress ? null : this._mainVNode = Tr("g", "main", {}, []);
    this._paintList(t, o, l ? l.children : s), l && s.push(l);
    var u = ae(ft(o.defs), function(f) {
      return o.defs[f];
    });
    if (u.length && s.push(Tr("defs", "defs", {}, u)), e.animation) {
      var c = h2t(o.cssNodes, o.cssAnims, { newline: !0 });
      if (c) {
        var h = Tr("style", "stl", {}, [], c);
        s.push(h);
      }
    }
    return n6(r, i, s, e.useViewBox);
  }, n.prototype.renderToString = function(e) {
    return e = e || {}, BR(this.renderToVNode({
      animation: Qe(e.cssAnimation, !0),
      emphasis: Qe(e.cssEmphasis, !0),
      willUpdate: !1,
      compress: !0,
      useViewBox: Qe(e.useViewBox, !0)
    }), { newline: !0 });
  }, n.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e;
  }, n.prototype.getSvgRoot = function() {
    return this._mainVNode && this._mainVNode.elm;
  }, n.prototype._paintList = function(e, t, r) {
    for (var i = e.length, o = [], s = 0, a, l, u = 0, c = 0; c < i; c++) {
      var h = e[c];
      if (!h.invisible) {
        var f = h.__clipPaths, d = f && f.length || 0, p = l && l.length || 0, g = void 0;
        for (g = Math.max(d - 1, p - 1); g >= 0 && !(f && l && f[g] === l[g]); g--)
          ;
        for (var v = p - 1; v > g; v--)
          s--, a = o[s - 1];
        for (var m = g + 1; m < d; m++) {
          var y = {};
          C2t(f[m], y, t);
          var b = Tr("g", "clip-g-" + u++, y, []);
          (a ? a.children : r).push(b), o[s++] = b, a = b;
        }
        l = f;
        var O = u6(h, t);
        O && (a ? a.children : r).push(O);
      }
    }
  }, n.prototype.resize = function(e, t) {
    var r = this._opts, i = this.root, o = this._viewport;
    if (e != null && (r.width = e), t != null && (r.height = t), i && o && (o.style.display = "none", e = bp(i, 0, r), t = bp(i, 1, r), o.style.display = ""), this._width !== e || this._height !== t) {
      if (this._width = e, this._height = t, o) {
        var s = o.style;
        s.width = e + "px", s.height = t + "px";
      }
      if (BI(this._backgroundColor))
        this.refresh();
      else {
        var a = this._svgDom;
        a && (a.setAttribute("width", e), a.setAttribute("height", t));
        var l = this._bgVNode && this._bgVNode.elm;
        l && (l.setAttribute("width", e), l.setAttribute("height", t));
      }
    }
  }, n.prototype.getWidth = function() {
    return this._width;
  }, n.prototype.getHeight = function() {
    return this._height;
  }, n.prototype.dispose = function() {
    this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;
  }, n.prototype.clear = function() {
    this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null;
  }, n.prototype.toDataURL = function(e) {
    var t = this.renderToString(), r = "data:image/svg+xml;";
    return e ? (t = Cbt(t), t && r + "base64," + t) : r + "charset=UTF-8," + encodeURIComponent(t);
  }, n;
}();
function p6(n) {
  return function() {
    process.env.NODE_ENV !== "production" && Js('In SVG mode painter not support method "' + n + '"');
  };
}
function L2t(n, e, t, r) {
  var i;
  if (t && t !== "none")
    if (i = Tr("rect", "bg", {
      width: n,
      height: e,
      x: "0",
      y: "0"
    }), rK(t))
      Vte({ fill: t }, i.attrs, "fill", r);
    else if (BI(t))
      zte({
        style: {
          fill: t
        },
        dirty: qn,
        getBoundingRect: function() {
          return { width: n, height: e };
        }
      }, i.attrs, "fill", r);
    else {
      var o = m0(t), s = o.color, a = o.opacity;
      i.attrs.fill = s, a < 1 && (i.attrs["fill-opacity"] = a);
    }
  return i;
}
const I2t = D2t;
function R2t(n) {
  n.registerPainter("svg", I2t);
}
function g6(n, e, t) {
  var r = $c.createCanvas(), i = e.getWidth(), o = e.getHeight(), s = r.style;
  return s && (s.position = "absolute", s.left = "0", s.top = "0", s.width = i + "px", s.height = o + "px", r.setAttribute("data-zr-dom-id", n)), r.width = i * t, r.height = o * t, r;
}
var $2t = function(n) {
  j(e, n);
  function e(t, r, i) {
    var o = n.call(this) || this;
    o.motionBlur = !1, o.lastFrameAlpha = 0.7, o.dpr = 1, o.virtual = !1, o.config = {}, o.incremental = !1, o.zlevel = 0, o.maxRepaintRectCount = 5, o.__dirty = !0, o.__firstTimePaint = !0, o.__used = !1, o.__drawIndex = 0, o.__startIndex = 0, o.__endIndex = 0, o.__prevStartIndex = null, o.__prevEndIndex = null;
    var s;
    i = i || Wx, typeof t == "string" ? s = g6(t, r, i) : Me(t) && (s = t, t = s.id), o.id = t, o.dom = s;
    var a = s.style;
    return a && (VU(s), s.onselectstart = function() {
      return !1;
    }, a.padding = "0", a.margin = "0", a.borderWidth = "0"), o.painter = r, o.dpr = i, o;
  }
  return e.prototype.getElementCount = function() {
    return this.__endIndex - this.__startIndex;
  }, e.prototype.afterBrush = function() {
    this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
  }, e.prototype.initContext = function() {
    this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
  }, e.prototype.setUnpainted = function() {
    this.__firstTimePaint = !0;
  }, e.prototype.createBackBuffer = function() {
    var t = this.dpr;
    this.domBack = g6("back-" + this.id, this.painter, t), this.ctxBack = this.domBack.getContext("2d"), t !== 1 && this.ctxBack.scale(t, t);
  }, e.prototype.createRepaintRects = function(t, r, i, o) {
    if (this.__firstTimePaint)
      return this.__firstTimePaint = !1, null;
    var s = [], a = this.maxRepaintRectCount, l = !1, u = new et(0, 0, 0, 0);
    function c(y) {
      if (!(!y.isFinite() || y.isZero()))
        if (s.length === 0) {
          var b = new et(0, 0, 0, 0);
          b.copy(y), s.push(b);
        } else {
          for (var O = !1, w = 1 / 0, x = 0, S = 0; S < s.length; ++S) {
            var _ = s[S];
            if (_.intersect(y)) {
              var C = new et(0, 0, 0, 0);
              C.copy(_), C.union(y), s[S] = C, O = !0;
              break;
            } else if (l) {
              u.copy(y), u.union(_);
              var A = y.width * y.height, T = _.width * _.height, k = u.width * u.height, L = k - A - T;
              L < w && (w = L, x = S);
            }
          }
          if (l && (s[x].union(y), O = !0), !O) {
            var b = new et(0, 0, 0, 0);
            b.copy(y), s.push(b);
          }
          l || (l = s.length >= a);
        }
    }
    for (var h = this.__startIndex; h < this.__endIndex; ++h) {
      var f = t[h];
      if (f) {
        var d = f.shouldBePainted(i, o, !0, !0), p = f.__isRendered && (f.__dirty & Do || !d) ? f.getPrevPaintRect() : null;
        p && c(p);
        var g = d && (f.__dirty & Do || !f.__isRendered) ? f.getPaintRect() : null;
        g && c(g);
      }
    }
    for (var h = this.__prevStartIndex; h < this.__prevEndIndex; ++h) {
      var f = r[h], d = f && f.shouldBePainted(i, o, !0, !0);
      if (f && (!d || !f.__zr) && f.__isRendered) {
        var p = f.getPrevPaintRect();
        p && c(p);
      }
    }
    var v;
    do {
      v = !1;
      for (var h = 0; h < s.length; ) {
        if (s[h].isZero()) {
          s.splice(h, 1);
          continue;
        }
        for (var m = h + 1; m < s.length; )
          s[h].intersect(s[m]) ? (v = !0, s[h].union(s[m]), s.splice(m, 1)) : m++;
        h++;
      }
    } while (v);
    return this._paintRects = s, s;
  }, e.prototype.debugGetPaintRects = function() {
    return (this._paintRects || []).slice();
  }, e.prototype.resize = function(t, r) {
    var i = this.dpr, o = this.dom, s = o.style, a = this.domBack;
    s && (s.width = t + "px", s.height = r + "px"), o.width = t * i, o.height = r * i, a && (a.width = t * i, a.height = r * i, i !== 1 && this.ctxBack.scale(i, i));
  }, e.prototype.clear = function(t, r, i) {
    var o = this.dom, s = this.ctx, a = o.width, l = o.height;
    r = r || this.clearColor;
    var u = this.motionBlur && !t, c = this.lastFrameAlpha, h = this.dpr, f = this;
    u && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(o, 0, 0, a / h, l / h));
    var d = this.domBack;
    function p(g, v, m, y) {
      if (s.clearRect(g, v, m, y), r && r !== "transparent") {
        var b = void 0;
        if (W_(r)) {
          var O = r.global || r.__width === m && r.__height === y;
          b = O && r.__canvasGradient || wM(s, r, {
            x: 0,
            y: 0,
            width: m,
            height: y
          }), r.__canvasGradient = b, r.__width = m, r.__height = y;
        } else
          k0t(r) && (r.scaleX = r.scaleX || h, r.scaleY = r.scaleY || h, b = xM(s, r, {
            dirty: function() {
              f.setUnpainted(), f.painter.refresh();
            }
          }));
        s.save(), s.fillStyle = b || r, s.fillRect(g, v, m, y), s.restore();
      }
      u && (s.save(), s.globalAlpha = c, s.drawImage(d, g, v, m, y), s.restore());
    }
    !i || u ? p(0, 0, a, l) : i.length && I(i, function(g) {
      p(g.x * h, g.y * h, g.width * h, g.height * h);
    });
  }, e;
}(Ps);
const lT = $2t;
var v6 = 1e5, Lh = 314159, gO = 0.01, N2t = 1e-3;
function B2t(n) {
  return n ? n.__builtin__ ? !0 : !(typeof n.resize != "function" || typeof n.refresh != "function") : !1;
}
function V2t(n, e) {
  var t = document.createElement("div");
  return t.style.cssText = [
    "position:relative",
    "width:" + n + "px",
    "height:" + e + "px",
    "padding:0",
    "margin:0",
    "border-width:0"
  ].join(";") + ";", t;
}
var z2t = function() {
  function n(e, t, r, i) {
    this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
    var o = !e.nodeName || e.nodeName.toUpperCase() === "CANVAS";
    this._opts = r = te({}, r || {}), this.dpr = r.devicePixelRatio || Wx, this._singleCanvas = o, this.root = e;
    var s = e.style;
    s && (VU(e), e.innerHTML = ""), this.storage = t;
    var a = this._zlevelList;
    this._prevDisplayList = [];
    var l = this._layers;
    if (o) {
      var c = e, h = c.width, f = c.height;
      r.width != null && (h = r.width), r.height != null && (f = r.height), this.dpr = r.devicePixelRatio || 1, c.width = h * this.dpr, c.height = f * this.dpr, this._width = h, this._height = f;
      var d = new lT(c, this, this.dpr);
      d.__builtin__ = !0, d.initContext(), l[Lh] = d, d.zlevel = Lh, a.push(Lh), this._domRoot = e;
    } else {
      this._width = bp(e, 0, r), this._height = bp(e, 1, r);
      var u = this._domRoot = V2t(this._width, this._height);
      e.appendChild(u);
    }
  }
  return n.prototype.getType = function() {
    return "canvas";
  }, n.prototype.isSingleCanvas = function() {
    return this._singleCanvas;
  }, n.prototype.getViewportRoot = function() {
    return this._domRoot;
  }, n.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, n.prototype.refresh = function(e) {
    var t = this.storage.getDisplayList(!0), r = this._prevDisplayList, i = this._zlevelList;
    this._redrawId = Math.random(), this._paintList(t, r, e, this._redrawId);
    for (var o = 0; o < i.length; o++) {
      var s = i[o], a = this._layers[s];
      if (!a.__builtin__ && a.refresh) {
        var l = o === 0 ? this._backgroundColor : null;
        a.refresh(l);
      }
    }
    return this._opts.useDirtyRect && (this._prevDisplayList = t.slice()), this;
  }, n.prototype.refreshHover = function() {
    this._paintHoverList(this.storage.getDisplayList(!1));
  }, n.prototype._paintHoverList = function(e) {
    var t = e.length, r = this._hoverlayer;
    if (r && r.clear(), !!t) {
      for (var i = {
        inHover: !0,
        viewWidth: this._width,
        viewHeight: this._height
      }, o, s = 0; s < t; s++) {
        var a = e[s];
        a.__inHover && (r || (r = this._hoverlayer = this.getLayer(v6)), o || (o = r.ctx, o.save()), gf(o, a, i, s === t - 1));
      }
      o && o.restore();
    }
  }, n.prototype.getHoverLayer = function() {
    return this.getLayer(v6);
  }, n.prototype.paintOne = function(e, t) {
    Cee(e, t);
  }, n.prototype._paintList = function(e, t, r, i) {
    if (this._redrawId === i) {
      r = r || !1, this._updateLayerStatus(e);
      var o = this._doPaintList(e, t, r), s = o.finished, a = o.needsRefreshHover;
      if (this._needsManuallyCompositing && this._compositeManually(), a && this._paintHoverList(e), s)
        this.eachLayer(function(u) {
          u.afterBrush && u.afterBrush();
        });
      else {
        var l = this;
        Rk(function() {
          l._paintList(e, t, r, i);
        });
      }
    }
  }, n.prototype._compositeManually = function() {
    var e = this.getLayer(Lh).ctx, t = this._domRoot.width, r = this._domRoot.height;
    e.clearRect(0, 0, t, r), this.eachBuiltinLayer(function(i) {
      i.virtual && e.drawImage(i.dom, 0, 0, t, r);
    });
  }, n.prototype._doPaintList = function(e, t, r) {
    for (var i = this, o = [], s = this._opts.useDirtyRect, a = 0; a < this._zlevelList.length; a++) {
      var l = this._zlevelList[a], u = this._layers[l];
      u.__builtin__ && u !== this._hoverlayer && (u.__dirty || r) && o.push(u);
    }
    for (var c = !0, h = !1, f = function(g) {
      var v = o[g], m = v.ctx, y = s && v.createRepaintRects(e, t, d._width, d._height), b = r ? v.__startIndex : v.__drawIndex, O = !r && v.incremental && Date.now, w = O && Date.now(), x = v.zlevel === d._zlevelList[0] ? d._backgroundColor : null;
      if (v.__startIndex === v.__endIndex)
        v.clear(!1, x, y);
      else if (b === v.__startIndex) {
        var S = e[b];
        (!S.incremental || !S.notClear || r) && v.clear(!1, x, y);
      }
      b === -1 && (console.error("For some unknown reason. drawIndex is -1"), b = v.__startIndex);
      var _, C = function(L) {
        var D = {
          inHover: !1,
          allClipped: !1,
          prevEl: null,
          viewWidth: i._width,
          viewHeight: i._height
        };
        for (_ = b; _ < v.__endIndex; _++) {
          var E = e[_];
          if (E.__inHover && (h = !0), i._doPaintEl(E, v, s, L, D, _ === v.__endIndex - 1), O) {
            var M = Date.now() - w;
            if (M > 15)
              break;
          }
        }
        D.prevElClipPaths && m.restore();
      };
      if (y)
        if (y.length === 0)
          _ = v.__endIndex;
        else
          for (var A = d.dpr, T = 0; T < y.length; ++T) {
            var k = y[T];
            m.save(), m.beginPath(), m.rect(k.x * A, k.y * A, k.width * A, k.height * A), m.clip(), C(k), m.restore();
          }
      else
        m.save(), C(), m.restore();
      v.__drawIndex = _, v.__drawIndex < v.__endIndex && (c = !1);
    }, d = this, p = 0; p < o.length; p++)
      f(p);
    return ht.wxa && I(this._layers, function(g) {
      g && g.ctx && g.ctx.draw && g.ctx.draw();
    }), {
      finished: c,
      needsRefreshHover: h
    };
  }, n.prototype._doPaintEl = function(e, t, r, i, o, s) {
    var a = t.ctx;
    if (r) {
      var l = e.getPaintRect();
      (!i || l && l.intersect(i)) && (gf(a, e, o, s), e.setPrevPaintRect(l));
    } else
      gf(a, e, o, s);
  }, n.prototype.getLayer = function(e, t) {
    this._singleCanvas && !this._needsManuallyCompositing && (e = Lh);
    var r = this._layers[e];
    return r || (r = new lT("zr_" + e, this, this.dpr), r.zlevel = e, r.__builtin__ = !0, this._layerConfig[e] ? Je(r, this._layerConfig[e], !0) : this._layerConfig[e - gO] && Je(r, this._layerConfig[e - gO], !0), t && (r.virtual = t), this.insertLayer(e, r), r.initContext()), r;
  }, n.prototype.insertLayer = function(e, t) {
    var r = this._layers, i = this._zlevelList, o = i.length, s = this._domRoot, a = null, l = -1;
    if (r[e]) {
      process.env.NODE_ENV !== "production" && Js("ZLevel " + e + " has been used already");
      return;
    }
    if (!B2t(t)) {
      process.env.NODE_ENV !== "production" && Js("Layer of zlevel " + e + " is not valid");
      return;
    }
    if (o > 0 && e > i[0]) {
      for (l = 0; l < o - 1 && !(i[l] < e && i[l + 1] > e); l++)
        ;
      a = r[i[l]];
    }
    if (i.splice(l + 1, 0, e), r[e] = t, !t.virtual)
      if (a) {
        var u = a.dom;
        u.nextSibling ? s.insertBefore(t.dom, u.nextSibling) : s.appendChild(t.dom);
      } else
        s.firstChild ? s.insertBefore(t.dom, s.firstChild) : s.appendChild(t.dom);
    t.painter || (t.painter = this);
  }, n.prototype.eachLayer = function(e, t) {
    for (var r = this._zlevelList, i = 0; i < r.length; i++) {
      var o = r[i];
      e.call(t, this._layers[o], o);
    }
  }, n.prototype.eachBuiltinLayer = function(e, t) {
    for (var r = this._zlevelList, i = 0; i < r.length; i++) {
      var o = r[i], s = this._layers[o];
      s.__builtin__ && e.call(t, s, o);
    }
  }, n.prototype.eachOtherLayer = function(e, t) {
    for (var r = this._zlevelList, i = 0; i < r.length; i++) {
      var o = r[i], s = this._layers[o];
      s.__builtin__ || e.call(t, s, o);
    }
  }, n.prototype.getLayers = function() {
    return this._layers;
  }, n.prototype._updateLayerStatus = function(e) {
    this.eachBuiltinLayer(function(h, f) {
      h.__dirty = h.__used = !1;
    });
    function t(h) {
      o && (o.__endIndex !== h && (o.__dirty = !0), o.__endIndex = h);
    }
    if (this._singleCanvas)
      for (var r = 1; r < e.length; r++) {
        var i = e[r];
        if (i.zlevel !== e[r - 1].zlevel || i.incremental) {
          this._needsManuallyCompositing = !0;
          break;
        }
      }
    var o = null, s = 0, a, l;
    for (l = 0; l < e.length; l++) {
      var i = e[l], u = i.zlevel, c = void 0;
      a !== u && (a = u, s = 0), i.incremental ? (c = this.getLayer(u + N2t, this._needsManuallyCompositing), c.incremental = !0, s = 1) : c = this.getLayer(u + (s > 0 ? gO : 0), this._needsManuallyCompositing), c.__builtin__ || Js("ZLevel " + u + " has been used by unkown layer " + c.id), c !== o && (c.__used = !0, c.__startIndex !== l && (c.__dirty = !0), c.__startIndex = l, c.incremental ? c.__drawIndex = -1 : c.__drawIndex = l, t(l), o = c), i.__dirty & Do && !i.__inHover && (c.__dirty = !0, c.incremental && c.__drawIndex < 0 && (c.__drawIndex = l));
    }
    t(l), this.eachBuiltinLayer(function(h, f) {
      !h.__used && h.getElementCount() > 0 && (h.__dirty = !0, h.__startIndex = h.__endIndex = h.__drawIndex = 0), h.__dirty && h.__drawIndex < 0 && (h.__drawIndex = h.__startIndex);
    });
  }, n.prototype.clear = function() {
    return this.eachBuiltinLayer(this._clearLayer), this;
  }, n.prototype._clearLayer = function(e) {
    e.clear();
  }, n.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e, I(this._layers, function(t) {
      t.setUnpainted();
    });
  }, n.prototype.configLayer = function(e, t) {
    if (t) {
      var r = this._layerConfig;
      r[e] ? Je(r[e], t, !0) : r[e] = t;
      for (var i = 0; i < this._zlevelList.length; i++) {
        var o = this._zlevelList[i];
        if (o === e || o === e + gO) {
          var s = this._layers[o];
          Je(s, r[e], !0);
        }
      }
    }
  }, n.prototype.delLayer = function(e) {
    var t = this._layers, r = this._zlevelList, i = t[e];
    i && (i.dom.parentNode.removeChild(i.dom), delete t[e], r.splice(ot(r, e), 1));
  }, n.prototype.resize = function(e, t) {
    if (this._domRoot.style) {
      var r = this._domRoot;
      r.style.display = "none";
      var i = this._opts, o = this.root;
      if (e != null && (i.width = e), t != null && (i.height = t), e = bp(o, 0, i), t = bp(o, 1, i), r.style.display = "", this._width !== e || t !== this._height) {
        r.style.width = e + "px", r.style.height = t + "px";
        for (var s in this._layers)
          this._layers.hasOwnProperty(s) && this._layers[s].resize(e, t);
        this.refresh(!0);
      }
      this._width = e, this._height = t;
    } else {
      if (e == null || t == null)
        return;
      this._width = e, this._height = t, this.getLayer(Lh).resize(e, t);
    }
    return this;
  }, n.prototype.clearLayer = function(e) {
    var t = this._layers[e];
    t && t.clear();
  }, n.prototype.dispose = function() {
    this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
  }, n.prototype.getRenderedCanvas = function(e) {
    if (e = e || {}, this._singleCanvas && !this._compositeManually)
      return this._layers[Lh].dom;
    var t = new lT("image", this, e.pixelRatio || this.dpr);
    t.initContext(), t.clear(!1, e.backgroundColor || this._backgroundColor);
    var r = t.ctx;
    if (e.pixelRatio <= this.dpr) {
      this.refresh();
      var i = t.dom.width, o = t.dom.height;
      this.eachLayer(function(h) {
        h.__builtin__ ? r.drawImage(h.dom, 0, 0, i, o) : h.renderToCanvas && (r.save(), h.renderToCanvas(r), r.restore());
      });
    } else
      for (var s = {
        inHover: !1,
        viewWidth: this._width,
        viewHeight: this._height
      }, a = this.storage.getDisplayList(!0), l = 0, u = a.length; l < u; l++) {
        var c = a[l];
        gf(r, c, s, l === u - 1);
      }
    return t.dom;
  }, n.prototype.getWidth = function() {
    return this._width;
  }, n.prototype.getHeight = function() {
    return this._height;
  }, n;
}();
const F2t = z2t;
function Q2t(n) {
  n.registerPainter("canvas", F2t);
}
var Z2t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t) {
      if (process.env.NODE_ENV !== "production") {
        var r = t.coordinateSystem;
        if (r !== "polar" && r !== "cartesian2d")
          throw new Error("Line not support coordinateSystem besides cartesian and polar");
      }
      return yu(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getLegendIcon = function(t) {
      var r = new Ve(), i = ar("line", 0, t.itemHeight / 2, t.itemWidth, 0, t.lineStyle.stroke, !1);
      r.add(i), i.setStyle(t.lineStyle);
      var o = this.getData().getVisual("symbol"), s = this.getData().getVisual("symbolRotate"), a = o === "none" ? "circle" : o, l = t.itemHeight * 0.8, u = ar(a, (t.itemWidth - l) / 2, (t.itemHeight - l) / 2, l, l, t.itemStyle.fill);
      r.add(u), u.setStyle(t.itemStyle);
      var c = t.iconRotate === "inherit" ? s : t.iconRotate || 0;
      return u.rotation = c * Math.PI / 180, u.setOrigin([t.itemWidth / 2, t.itemHeight / 2]), a.indexOf("empty") > -1 && (u.style.stroke = u.style.fill, u.style.fill = "#fff", u.style.lineWidth = 2), r;
    }, e.type = "series.line", e.dependencies = ["grid", "polar"], e.defaultOption = {
      // zlevel: 0,
      z: 3,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      clip: !0,
      label: {
        position: "top"
      },
      // itemStyle: {
      // },
      endLabel: {
        show: !1,
        valueAnimation: !0,
        distance: 8
      },
      lineStyle: {
        width: 2,
        type: "solid"
      },
      emphasis: {
        scale: !0
      },
      // areaStyle: {
      // origin of areaStyle. Valid values:
      // `'auto'/null/undefined`: from axisLine to data
      // `'start'`: from min to data
      // `'end'`: from data to max
      // origin: 'auto'
      // },
      // false, 'start', 'end', 'middle'
      step: !1,
      // Disabled if step is true
      smooth: !1,
      smoothMonotone: null,
      symbol: "emptyCircle",
      symbolSize: 4,
      symbolRotate: null,
      showSymbol: !0,
      // `false`: follow the label interval strategy.
      // `true`: show all symbols.
      // `'auto'`: If possible, show all symbols, otherwise
      //           follow the label interval strategy.
      showAllSymbol: "auto",
      // Whether to connect break point.
      connectNulls: !1,
      // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.
      sampling: "none",
      animationEasing: "linear",
      // Disable progressive
      progressive: 0,
      hoverLayerThreshold: 1 / 0,
      universalTransition: {
        divideShape: "clone"
      },
      triggerLineEvent: !1
    }, e;
  }(Sn)
);
const W2t = Z2t;
function $g(n, e) {
  var t = n.mapDimensionsAll("defaultedLabel"), r = t.length;
  if (r === 1) {
    var i = Lg(n, e, t[0]);
    return i != null ? i + "" : null;
  } else if (r) {
    for (var o = [], s = 0; s < t.length; s++)
      o.push(Lg(n, e, t[s]));
    return o.join(" ");
  }
}
function Wte(n, e) {
  var t = n.mapDimensionsAll("defaultedLabel");
  if (!oe(e))
    return e + "";
  for (var r = [], i = 0; i < t.length; i++) {
    var o = n.getDimensionIndex(t[i]);
    o >= 0 && r.push(e[o]);
  }
  return r.join(" ");
}
var Mb = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o) {
      var s = n.call(this) || this;
      return s.updateData(t, r, i, o), s;
    }
    return e.prototype._createSymbol = function(t, r, i, o, s) {
      this.removeAll();
      var a = ar(t, -1, -1, 2, 2, null, s);
      a.attr({
        z2: 100,
        culling: !0,
        scaleX: o[0] / 2,
        scaleY: o[1] / 2
      }), a.drift = G2t, this._symbolType = t, this.add(a);
    }, e.prototype.stopSymbolAnimation = function(t) {
      this.childAt(0).stopAnimation(null, t);
    }, e.prototype.getSymbolType = function() {
      return this._symbolType;
    }, e.prototype.getSymbolPath = function() {
      return this.childAt(0);
    }, e.prototype.highlight = function() {
      su(this.childAt(0));
    }, e.prototype.downplay = function() {
      au(this.childAt(0));
    }, e.prototype.setZ = function(t, r) {
      var i = this.childAt(0);
      i.zlevel = t, i.z = r;
    }, e.prototype.setDraggable = function(t, r) {
      var i = this.childAt(0);
      i.draggable = t, i.cursor = !r && t ? "move" : i.cursor;
    }, e.prototype.updateData = function(t, r, i, o) {
      this.silent = !1;
      var s = t.getItemVisual(r, "symbol") || "circle", a = t.hostModel, l = e.getSymbolSize(t, r), u = s !== this._symbolType, c = o && o.disableAnimation;
      if (u) {
        var h = t.getItemVisual(r, "symbolKeepAspect");
        this._createSymbol(s, t, r, l, h);
      } else {
        var f = this.childAt(0);
        f.silent = !1;
        var d = {
          scaleX: l[0] / 2,
          scaleY: l[1] / 2
        };
        c ? f.attr(d) : kt(f, d, a, r), ua(f);
      }
      if (this._updateCommon(t, r, l, i, o), u) {
        var f = this.childAt(0);
        if (!c) {
          var d = {
            scaleX: this._sizeX,
            scaleY: this._sizeY,
            style: {
              // Always fadeIn. Because it has fadeOut animation when symbol is removed..
              opacity: f.style.opacity
            }
          };
          f.scaleX = f.scaleY = 0, f.style.opacity = 0, vn(f, d, a, r);
        }
      }
      c && this.childAt(0).stopAnimation("leave");
    }, e.prototype._updateCommon = function(t, r, i, o, s) {
      var a = this.childAt(0), l = t.hostModel, u, c, h, f, d, p, g, v, m;
      if (o && (u = o.emphasisItemStyle, c = o.blurItemStyle, h = o.selectItemStyle, f = o.focus, d = o.blurScope, g = o.labelStatesModels, v = o.hoverScale, m = o.cursorStyle, p = o.emphasisDisabled), !o || t.hasItemOption) {
        var y = o && o.itemModel ? o.itemModel : t.getItemModel(r), b = y.getModel("emphasis");
        u = b.getModel("itemStyle").getItemStyle(), h = y.getModel(["select", "itemStyle"]).getItemStyle(), c = y.getModel(["blur", "itemStyle"]).getItemStyle(), f = b.get("focus"), d = b.get("blurScope"), p = b.get("disabled"), g = kr(y), v = b.getShallow("scale"), m = y.getShallow("cursor");
      }
      var O = t.getItemVisual(r, "symbolRotate");
      a.attr("rotation", (O || 0) * Math.PI / 180 || 0);
      var w = Od(t.getItemVisual(r, "symbolOffset"), i);
      w && (a.x = w[0], a.y = w[1]), m && a.attr("cursor", m);
      var x = t.getItemVisual(r, "style"), S = x.fill;
      if (a instanceof fi) {
        var _ = a.style;
        a.useStyle(te({
          // TODO other properties like x, y ?
          image: _.image,
          x: _.x,
          y: _.y,
          width: _.width,
          height: _.height
        }, x));
      } else
        a.__isEmptyBrush ? a.useStyle(te({}, x)) : a.useStyle(x), a.style.decal = null, a.setColor(S, s && s.symbolInnerColor), a.style.strokeNoScale = !0;
      var C = t.getItemVisual(r, "liftZ"), A = this._z2;
      C != null ? A == null && (this._z2 = a.z2, a.z2 += C) : A != null && (a.z2 = A, this._z2 = null);
      var T = s && s.useNameLabel;
      ci(a, g, {
        labelFetcher: l,
        labelDataIndex: r,
        defaultText: k,
        inheritColor: S,
        defaultOpacity: x.opacity
      });
      function k(E) {
        return T ? t.getName(E) : $g(t, E);
      }
      this._sizeX = i[0] / 2, this._sizeY = i[1] / 2;
      var L = a.ensureState("emphasis");
      L.style = u, a.ensureState("select").style = h, a.ensureState("blur").style = c;
      var D = v == null || v === !0 ? Math.max(1.1, 3 / this._sizeY) : isFinite(v) && v > 0 ? +v : 1;
      L.scaleX = this._sizeX * D, L.scaleY = this._sizeY * D, this.setSymbolScale(1), $n(this, f, d, p);
    }, e.prototype.setSymbolScale = function(t) {
      this.scaleX = this.scaleY = t;
    }, e.prototype.fadeOut = function(t, r, i) {
      var o = this.childAt(0), s = Fe(this).dataIndex, a = i && i.animation;
      if (this.silent = o.silent = !0, i && i.fadeLabel) {
        var l = o.getTextContent();
        l && Vc(l, {
          style: {
            opacity: 0
          }
        }, r, {
          dataIndex: s,
          removeOpt: a,
          cb: function() {
            o.removeTextContent();
          }
        });
      } else
        o.removeTextContent();
      Vc(o, {
        style: {
          opacity: 0
        },
        scaleX: 0,
        scaleY: 0
      }, r, {
        dataIndex: s,
        cb: t,
        removeOpt: a
      });
    }, e.getSymbolSize = function(t, r) {
      return Cv(t.getItemVisual(r, "symbolSize"));
    }, e;
  }(Ve)
);
function G2t(n, e) {
  this.parent.drift(n, e);
}
function uT(n, e, t, r) {
  return e && !isNaN(e[0]) && !isNaN(e[1]) && !(r.isIgnore && r.isIgnore(t)) && !(r.clipShape && !r.clipShape.contain(e[0], e[1])) && n.getItemVisual(t, "symbol") !== "none";
}
function m6(n) {
  return n != null && !Me(n) && (n = {
    isIgnore: n
  }), n || {};
}
function y6(n) {
  var e = n.hostModel, t = e.getModel("emphasis");
  return {
    emphasisItemStyle: t.getModel("itemStyle").getItemStyle(),
    blurItemStyle: e.getModel(["blur", "itemStyle"]).getItemStyle(),
    selectItemStyle: e.getModel(["select", "itemStyle"]).getItemStyle(),
    focus: t.get("focus"),
    blurScope: t.get("blurScope"),
    emphasisDisabled: t.get("disabled"),
    hoverScale: t.get("scale"),
    labelStatesModels: kr(e),
    cursorStyle: e.get("cursor")
  };
}
var Db = (
  /** @class */
  function() {
    function n(e) {
      this.group = new Ve(), this._SymbolCtor = e || Mb;
    }
    return n.prototype.updateData = function(e, t) {
      this._progressiveEls = null, t = m6(t);
      var r = this.group, i = e.hostModel, o = this._data, s = this._SymbolCtor, a = t.disableAnimation, l = y6(e), u = {
        disableAnimation: a
      }, c = t.getSymbolPoint || function(h) {
        return e.getItemLayout(h);
      };
      o || r.removeAll(), e.diff(o).add(function(h) {
        var f = c(h);
        if (uT(e, f, h, t)) {
          var d = new s(e, h, l, u);
          d.setPosition(f), e.setItemGraphicEl(h, d), r.add(d);
        }
      }).update(function(h, f) {
        var d = o.getItemGraphicEl(f), p = c(h);
        if (!uT(e, p, h, t)) {
          r.remove(d);
          return;
        }
        var g = e.getItemVisual(h, "symbol") || "circle", v = d && d.getSymbolType && d.getSymbolType();
        if (!d || v && v !== g)
          r.remove(d), d = new s(e, h, l, u), d.setPosition(p);
        else {
          d.updateData(e, h, l, u);
          var m = {
            x: p[0],
            y: p[1]
          };
          a ? d.attr(m) : kt(d, m, i);
        }
        r.add(d), e.setItemGraphicEl(h, d);
      }).remove(function(h) {
        var f = o.getItemGraphicEl(h);
        f && f.fadeOut(function() {
          r.remove(f);
        }, i);
      }).execute(), this._getSymbolPoint = c, this._data = e;
    }, n.prototype.updateLayout = function() {
      var e = this, t = this._data;
      t && t.eachItemGraphicEl(function(r, i) {
        var o = e._getSymbolPoint(i);
        r.setPosition(o), r.markRedraw();
      });
    }, n.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = y6(e), this._data = null, this.group.removeAll();
    }, n.prototype.incrementalUpdate = function(e, t, r) {
      this._progressiveEls = [], r = m6(r);
      function i(l) {
        l.isGroup || (l.incremental = !0, l.ensureState("emphasis").hoverLayer = !0);
      }
      for (var o = e.start; o < e.end; o++) {
        var s = t.getItemLayout(o);
        if (uT(t, s, o, r)) {
          var a = new this._SymbolCtor(t, o, this._seriesScope);
          a.traverse(i), a.setPosition(s), this.group.add(a), t.setItemGraphicEl(o, a), this._progressiveEls.push(a);
        }
      }
    }, n.prototype.eachRendered = function(e) {
      ih(this._progressiveEls || this.group, e);
    }, n.prototype.remove = function(e) {
      var t = this.group, r = this._data;
      r && e ? r.eachItemGraphicEl(function(i) {
        i.fadeOut(function() {
          t.remove(i);
        }, r.hostModel);
      }) : t.removeAll();
    }, n;
  }()
);
function Gte(n, e, t) {
  var r = n.getBaseAxis(), i = n.getOtherAxis(r), o = j2t(i, t), s = r.dim, a = i.dim, l = e.mapDimension(a), u = e.mapDimension(s), c = a === "x" || a === "radius" ? 1 : 0, h = ae(n.dimensions, function(p) {
    return e.mapDimension(p);
  }), f = !1, d = e.getCalculationInfo("stackResultDimension");
  return Fc(
    e,
    h[0]
    /* , dims[1] */
  ) && (f = !0, h[0] = d), Fc(
    e,
    h[1]
    /* , dims[0] */
  ) && (f = !0, h[1] = d), {
    dataDimsForPoint: h,
    valueStart: o,
    valueAxisDim: a,
    baseAxisDim: s,
    stacked: !!f,
    valueDim: l,
    baseDim: u,
    baseDataOffset: c,
    stackedOverDimension: e.getCalculationInfo("stackedOverDimension")
  };
}
function j2t(n, e) {
  var t = 0, r = n.scale.getExtent();
  return e === "start" ? t = r[0] : e === "end" ? t = r[1] : Tt(e) && !isNaN(e) ? t = e : r[0] > 0 ? t = r[0] : r[1] < 0 && (t = r[1]), t;
}
function jte(n, e, t, r) {
  var i = NaN;
  n.stacked && (i = t.get(t.getCalculationInfo("stackedOverDimension"), r)), isNaN(i) && (i = n.valueStart);
  var o = n.baseDataOffset, s = [];
  return s[o] = t.get(n.baseDim, r), s[1 - o] = i, e.dataToPoint(s);
}
function H2t(n, e) {
  var t = [];
  return e.diff(n).add(function(r) {
    t.push({
      cmd: "+",
      idx: r
    });
  }).update(function(r, i) {
    t.push({
      cmd: "=",
      idx: i,
      idx1: r
    });
  }).remove(function(r) {
    t.push({
      cmd: "-",
      idx: r
    });
  }).execute(), t;
}
function q2t(n, e, t, r, i, o, s, a) {
  for (var l = H2t(n, e), u = [], c = [], h = [], f = [], d = [], p = [], g = [], v = Gte(i, e, s), m = n.getLayout("points") || [], y = e.getLayout("points") || [], b = 0; b < l.length; b++) {
    var O = l[b], w = !0, x = void 0, S = void 0;
    switch (O.cmd) {
      case "=":
        x = O.idx * 2, S = O.idx1 * 2;
        var _ = m[x], C = m[x + 1], A = y[S], T = y[S + 1];
        (isNaN(_) || isNaN(C)) && (_ = A, C = T), u.push(_, C), c.push(A, T), h.push(t[x], t[x + 1]), f.push(r[S], r[S + 1]), g.push(e.getRawIndex(O.idx1));
        break;
      case "+":
        var k = O.idx, L = v.dataDimsForPoint, D = i.dataToPoint([e.get(L[0], k), e.get(L[1], k)]);
        S = k * 2, u.push(D[0], D[1]), c.push(y[S], y[S + 1]);
        var E = jte(v, i, e, k);
        h.push(E[0], E[1]), f.push(r[S], r[S + 1]), g.push(e.getRawIndex(k));
        break;
      case "-":
        w = !1;
    }
    w && (d.push(O), p.push(p.length));
  }
  p.sort(function(ie, se) {
    return g[ie] - g[se];
  });
  for (var M = u.length, R = Ya(M), N = Ya(M), $ = Ya(M), V = Ya(M), H = [], b = 0; b < p.length; b++) {
    var G = p[b], q = b * 2, Y = G * 2;
    R[q] = u[Y], R[q + 1] = u[Y + 1], N[q] = c[Y], N[q + 1] = c[Y + 1], $[q] = h[Y], $[q + 1] = h[Y + 1], V[q] = f[Y], V[q + 1] = f[Y + 1], H[b] = d[G];
  }
  return {
    current: R,
    next: N,
    stackedOnCurrent: $,
    stackedOnNext: V,
    status: H
  };
}
var Eu = Math.min, ku = Math.max;
function Rf(n, e) {
  return isNaN(n) || isNaN(e);
}
function DM(n, e, t, r, i, o, s, a, l) {
  for (var u, c, h, f, d, p, g = t, v = 0; v < r; v++) {
    var m = e[g * 2], y = e[g * 2 + 1];
    if (g >= i || g < 0)
      break;
    if (Rf(m, y)) {
      if (l) {
        g += o;
        continue;
      }
      break;
    }
    if (g === t)
      n[o > 0 ? "moveTo" : "lineTo"](m, y), h = m, f = y;
    else {
      var b = m - u, O = y - c;
      if (b * b + O * O < 0.5) {
        g += o;
        continue;
      }
      if (s > 0) {
        for (var w = g + o, x = e[w * 2], S = e[w * 2 + 1]; x === m && S === y && v < r; )
          v++, w += o, g += o, x = e[w * 2], S = e[w * 2 + 1], m = e[g * 2], y = e[g * 2 + 1], b = m - u, O = y - c;
        var _ = v + 1;
        if (l)
          for (; Rf(x, S) && _ < r; )
            _++, w += o, x = e[w * 2], S = e[w * 2 + 1];
        var C = 0.5, A = 0, T = 0, k = void 0, L = void 0;
        if (_ >= r || Rf(x, S))
          d = m, p = y;
        else {
          A = x - u, T = S - c;
          var D = m - u, E = x - m, M = y - c, R = S - y, N = void 0, $ = void 0;
          if (a === "x") {
            N = Math.abs(D), $ = Math.abs(E);
            var V = A > 0 ? 1 : -1;
            d = m - V * N * s, p = y, k = m + V * $ * s, L = y;
          } else if (a === "y") {
            N = Math.abs(M), $ = Math.abs(R);
            var H = T > 0 ? 1 : -1;
            d = m, p = y - H * N * s, k = m, L = y + H * $ * s;
          } else
            N = Math.sqrt(D * D + M * M), $ = Math.sqrt(E * E + R * R), C = $ / ($ + N), d = m - A * s * (1 - C), p = y - T * s * (1 - C), k = m + A * s * C, L = y + T * s * C, k = Eu(k, ku(x, m)), L = Eu(L, ku(S, y)), k = ku(k, Eu(x, m)), L = ku(L, Eu(S, y)), A = k - m, T = L - y, d = m - A * N / $, p = y - T * N / $, d = Eu(d, ku(u, m)), p = Eu(p, ku(c, y)), d = ku(d, Eu(u, m)), p = ku(p, Eu(c, y)), A = m - d, T = y - p, k = m + A * $ / N, L = y + T * $ / N;
        }
        n.bezierCurveTo(h, f, d, p, m, y), h = k, f = L;
      } else
        n.lineTo(m, y);
    }
    u = m, c = y, g += o;
  }
  return v;
}
var Hte = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.smooth = 0, this.smoothConstraint = !0;
    }
    return n;
  }()
), Y2t = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "ec-polyline", r;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new Hte();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.points, o = 0, s = i.length / 2;
      if (r.connectNulls) {
        for (; s > 0 && Rf(i[s * 2 - 2], i[s * 2 - 1]); s--)
          ;
        for (; o < s && Rf(i[o * 2], i[o * 2 + 1]); o++)
          ;
      }
      for (; o < s; )
        o += DM(t, i, o, s, s, 1, r.smooth, r.smoothMonotone, r.connectNulls) + 1;
    }, e.prototype.getPointOn = function(t, r) {
      this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
      for (var i = this.path, o = i.data, s = vl.CMD, a, l, u = r === "x", c = [], h = 0; h < o.length; ) {
        var f = o[h++], d = void 0, p = void 0, g = void 0, v = void 0, m = void 0, y = void 0, b = void 0;
        switch (f) {
          case s.M:
            a = o[h++], l = o[h++];
            break;
          case s.L:
            if (d = o[h++], p = o[h++], b = u ? (t - a) / (d - a) : (t - l) / (p - l), b <= 1 && b >= 0) {
              var O = u ? (p - l) * b + l : (d - a) * b + a;
              return u ? [t, O] : [O, t];
            }
            a = d, l = p;
            break;
          case s.C:
            d = o[h++], p = o[h++], g = o[h++], v = o[h++], m = o[h++], y = o[h++];
            var w = u ? zx(a, d, g, m, t, c) : zx(l, p, v, y, t, c);
            if (w > 0)
              for (var x = 0; x < w; x++) {
                var S = c[x];
                if (S <= 1 && S >= 0) {
                  var O = u ? Sr(l, p, v, y, S) : Sr(a, d, g, m, S);
                  return u ? [t, O] : [O, t];
                }
              }
            a = m, l = y;
            break;
        }
      }
    }, e;
  }(ct)
), X2t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e;
  }(Hte)
), qte = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "ec-polygon", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new X2t();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.points, o = r.stackedOnPoints, s = 0, a = i.length / 2, l = r.smoothMonotone;
      if (r.connectNulls) {
        for (; a > 0 && Rf(i[a * 2 - 2], i[a * 2 - 1]); a--)
          ;
        for (; s < a && Rf(i[s * 2], i[s * 2 + 1]); s++)
          ;
      }
      for (; s < a; ) {
        var u = DM(t, i, s, a, a, 1, r.smooth, l, r.connectNulls);
        DM(t, o, s + u - 1, u, a, -1, r.stackedOnSmooth, l, r.connectNulls), s += u + 1, t.closePath();
      }
    }, e;
  }(ct)
);
function Yte(n, e, t, r, i) {
  var o = n.getArea(), s = o.x, a = o.y, l = o.width, u = o.height, c = t.get(["lineStyle", "width"]) || 2;
  s -= c / 2, a -= c / 2, l += c, u += c, l = Math.ceil(l), s !== Math.floor(s) && (s = Math.floor(s), l++);
  var h = new _t({
    shape: {
      x: s,
      y: a,
      width: l,
      height: u
    }
  });
  if (e) {
    var f = n.getBaseAxis(), d = f.isHorizontal(), p = f.inverse;
    d ? (p && (h.shape.x += l), h.shape.width = 0) : (p || (h.shape.y += u), h.shape.height = 0);
    var g = Pe(i) ? function(v) {
      i(v, h);
    } : null;
    vn(h, {
      shape: {
        width: l,
        height: u,
        x: s,
        y: a
      }
    }, t, null, r, g);
  }
  return h;
}
function Xte(n, e, t) {
  var r = n.getArea(), i = zn(r.r0, 1), o = zn(r.r, 1), s = new go({
    shape: {
      cx: zn(n.cx, 1),
      cy: zn(n.cy, 1),
      r0: i,
      r: o,
      startAngle: r.startAngle,
      endAngle: r.endAngle,
      clockwise: r.clockwise
    }
  });
  if (e) {
    var a = n.getBaseAxis().dim === "angle";
    a ? s.shape.endAngle = r.startAngle : s.shape.r = i, vn(s, {
      shape: {
        endAngle: r.endAngle,
        r: o
      }
    }, t);
  }
  return s;
}
function Lb(n, e, t, r, i) {
  if (n) {
    if (n.type === "polar")
      return Xte(n, e, t);
    if (n.type === "cartesian2d")
      return Yte(n, e, t, r, i);
  } else
    return null;
  return null;
}
function xd(n, e) {
  return n.type === e;
}
function b6(n, e) {
  if (n.length === e.length) {
    for (var t = 0; t < n.length; t++)
      if (n[t] !== e[t])
        return;
    return !0;
  }
}
function O6(n) {
  for (var e = 1 / 0, t = 1 / 0, r = -1 / 0, i = -1 / 0, o = 0; o < n.length; ) {
    var s = n[o++], a = n[o++];
    isNaN(s) || (e = Math.min(s, e), r = Math.max(s, r)), isNaN(a) || (t = Math.min(a, t), i = Math.max(a, i));
  }
  return [[e, t], [r, i]];
}
function w6(n, e) {
  var t = O6(n), r = t[0], i = t[1], o = O6(e), s = o[0], a = o[1];
  return Math.max(Math.abs(r[0] - s[0]), Math.abs(r[1] - s[1]), Math.abs(i[0] - a[0]), Math.abs(i[1] - a[1]));
}
function x6(n) {
  return Tt(n) ? n : n ? 0.5 : 0;
}
function U2t(n, e, t) {
  if (!t.valueDim)
    return [];
  for (var r = e.count(), i = Ya(r * 2), o = 0; o < r; o++) {
    var s = jte(t, n, e, o);
    i[o * 2] = s[0], i[o * 2 + 1] = s[1];
  }
  return i;
}
function Mu(n, e, t, r) {
  var i = e.getBaseAxis(), o = i.dim === "x" || i.dim === "radius" ? 0 : 1, s = [], a = 0, l = [], u = [], c = [], h = [];
  if (r) {
    for (a = 0; a < n.length; a += 2)
      !isNaN(n[a]) && !isNaN(n[a + 1]) && h.push(n[a], n[a + 1]);
    n = h;
  }
  for (a = 0; a < n.length - 2; a += 2)
    switch (c[0] = n[a + 2], c[1] = n[a + 3], u[0] = n[a], u[1] = n[a + 1], s.push(u[0], u[1]), t) {
      case "end":
        l[o] = c[o], l[1 - o] = u[1 - o], s.push(l[0], l[1]);
        break;
      case "middle":
        var f = (u[o] + c[o]) / 2, d = [];
        l[o] = d[o] = f, l[1 - o] = u[1 - o], d[1 - o] = c[1 - o], s.push(l[0], l[1]), s.push(d[0], d[1]);
        break;
      default:
        l[o] = u[o], l[1 - o] = c[1 - o], s.push(l[0], l[1]);
    }
  return s.push(n[a++], n[a++]), s;
}
function K2t(n, e) {
  var t = [], r = n.length, i, o;
  function s(c, h, f) {
    var d = c.coord, p = (f - d) / (h.coord - d), g = ybt(p, [c.color, h.color]);
    return {
      coord: f,
      color: g
    };
  }
  for (var a = 0; a < r; a++) {
    var l = n[a], u = l.coord;
    if (u < 0)
      i = l;
    else if (u > e) {
      o ? t.push(s(o, l, e)) : i && t.push(s(i, l, 0), s(i, l, e));
      break;
    } else
      i && (t.push(s(i, l, 0)), i = null), t.push(l), o = l;
  }
  return t;
}
function J2t(n, e, t) {
  var r = n.getVisual("visualMeta");
  if (!(!r || !r.length || !n.count())) {
    if (e.type !== "cartesian2d") {
      process.env.NODE_ENV !== "production" && console.warn("Visual map on line style is only supported on cartesian2d.");
      return;
    }
    for (var i, o, s = r.length - 1; s >= 0; s--) {
      var a = n.getDimensionInfo(r[s].dimension);
      if (i = a && a.coordDim, i === "x" || i === "y") {
        o = r[s];
        break;
      }
    }
    if (!o) {
      process.env.NODE_ENV !== "production" && console.warn("Visual map on line style only support x or y dimension.");
      return;
    }
    var l = e.getAxis(i), u = ae(o.stops, function(b) {
      return {
        coord: l.toGlobalCoord(l.dataToCoord(b.value)),
        color: b.color
      };
    }), c = u.length, h = o.outerColors.slice();
    c && u[0].coord > u[c - 1].coord && (u.reverse(), h.reverse());
    var f = K2t(u, i === "x" ? t.getWidth() : t.getHeight()), d = f.length;
    if (!d && c)
      return u[0].coord < 0 ? h[1] ? h[1] : u[c - 1].color : h[0] ? h[0] : u[0].color;
    var p = 10, g = f[0].coord - p, v = f[d - 1].coord + p, m = v - g;
    if (m < 1e-3)
      return "transparent";
    I(f, function(b) {
      b.offset = (b.coord - g) / m;
    }), f.push({
      // NOTE: inRangeStopLen may still be 0 if stoplen is zero.
      offset: d ? f[d - 1].offset : 0.5,
      color: h[1] || "transparent"
    }), f.unshift({
      offset: d ? f[0].offset : 0.5,
      color: h[0] || "transparent"
    });
    var y = new _b(0, 0, 0, 0, f, !0);
    return y[i] = g, y[i + "2"] = v, y;
  }
}
function eAt(n, e, t) {
  var r = n.get("showAllSymbol"), i = r === "auto";
  if (!(r && !i)) {
    var o = t.getAxesByScale("ordinal")[0];
    if (o && !(i && tAt(o, e))) {
      var s = e.mapDimension(o.dim), a = {};
      return I(o.getViewLabels(), function(l) {
        var u = o.scale.getRawOrdinalNumber(l.tickValue);
        a[u] = 1;
      }), function(l) {
        return !a.hasOwnProperty(e.get(s, l));
      };
    }
  }
}
function tAt(n, e) {
  var t = n.getExtent(), r = Math.abs(t[1] - t[0]) / n.scale.count();
  isNaN(r) && (r = 0);
  for (var i = e.count(), o = Math.max(1, Math.round(i / 5)), s = 0; s < i; s += o)
    if (Mb.getSymbolSize(
      e,
      s
      // Only for cartesian, where `isHorizontal` exists.
    )[n.isHorizontal() ? 1 : 0] * 1.5 > r)
      return !1;
  return !0;
}
function nAt(n, e) {
  return isNaN(n) || isNaN(e);
}
function rAt(n) {
  for (var e = n.length / 2; e > 0 && nAt(n[e * 2 - 2], n[e * 2 - 1]); e--)
    ;
  return e - 1;
}
function S6(n, e) {
  return [n[e * 2], n[e * 2 + 1]];
}
function iAt(n, e, t) {
  for (var r = n.length / 2, i = t === "x" ? 0 : 1, o, s, a = 0, l = -1, u = 0; u < r; u++)
    if (s = n[u * 2 + i], !(isNaN(s) || isNaN(n[u * 2 + 1 - i]))) {
      if (u === 0) {
        o = s;
        continue;
      }
      if (o <= e && s >= e || o >= e && s <= e) {
        l = u;
        break;
      }
      a = u, o = s;
    }
  return {
    range: [a, l],
    t: (e - o) / (s - o)
  };
}
function Ute(n) {
  if (n.get(["endLabel", "show"]))
    return !0;
  for (var e = 0; e < Qi.length; e++)
    if (n.get([Qi[e], "endLabel", "show"]))
      return !0;
  return !1;
}
function cT(n, e, t, r) {
  if (xd(e, "cartesian2d")) {
    var i = r.getModel("endLabel"), o = i.get("valueAnimation"), s = r.getData(), a = {
      lastFrameIndex: 0
    }, l = Ute(r) ? function(d, p) {
      n._endLabelOnDuring(d, p, s, a, o, i, e);
    } : null, u = e.getBaseAxis().isHorizontal(), c = Yte(e, t, r, function() {
      var d = n._endLabel;
      d && t && a.originalX != null && d.attr({
        x: a.originalX,
        y: a.originalY
      });
    }, l);
    if (!r.get("clip", !0)) {
      var h = c.shape, f = Math.max(h.width, h.height);
      u ? (h.y -= f, h.height += f * 2) : (h.x -= f, h.width += f * 2);
    }
    return l && l(1, c), c;
  } else
    return process.env.NODE_ENV !== "production" && r.get(["endLabel", "show"]) && console.warn("endLabel is not supported for lines in polar systems."), Xte(e, t, r);
}
function oAt(n, e) {
  var t = e.getBaseAxis(), r = t.isHorizontal(), i = t.inverse, o = r ? i ? "right" : "left" : "center", s = r ? "middle" : i ? "top" : "bottom";
  return {
    normal: {
      align: n.get("align") || o,
      verticalAlign: n.get("verticalAlign") || s
    }
  };
}
var sAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.init = function() {
      var t = new Ve(), r = new Db();
      this.group.add(r.group), this._symbolDraw = r, this._lineGroup = t;
    }, e.prototype.render = function(t, r, i) {
      var o = this, s = t.coordinateSystem, a = this.group, l = t.getData(), u = t.getModel("lineStyle"), c = t.getModel("areaStyle"), h = l.getLayout("points") || [], f = s.type === "polar", d = this._coordSys, p = this._symbolDraw, g = this._polyline, v = this._polygon, m = this._lineGroup, y = !r.ssr && t.get("animation"), b = !c.isEmpty(), O = c.get("origin"), w = Gte(s, l, O), x = b && U2t(s, l, w), S = t.get("showSymbol"), _ = t.get("connectNulls"), C = S && !f && eAt(t, l, s), A = this._data;
      A && A.eachItemGraphicEl(function(se, K) {
        se.__temp && (a.remove(se), A.setItemGraphicEl(K, null));
      }), S || p.remove(), a.add(m);
      var T = f ? !1 : t.get("step"), k;
      s && s.getArea && t.get("clip", !0) && (k = s.getArea(), k.width != null ? (k.x -= 0.1, k.y -= 0.1, k.width += 0.2, k.height += 0.2) : k.r0 && (k.r0 -= 0.5, k.r += 0.5)), this._clipShapeForSymbol = k;
      var L = J2t(l, s, i) || l.getVisual("style")[l.getVisual("drawType")];
      if (!(g && d.type === s.type && T === this._step))
        S && p.updateData(l, {
          isIgnore: C,
          clipShape: k,
          disableAnimation: !0,
          getSymbolPoint: function(se) {
            return [h[se * 2], h[se * 2 + 1]];
          }
        }), y && this._initSymbolLabelAnimation(l, s, k), T && (h = Mu(h, s, T, _), x && (x = Mu(x, s, T, _))), g = this._newPolyline(h), b ? v = this._newPolygon(h, x) : v && (m.remove(v), v = this._polygon = null), f || this._initOrUpdateEndLabel(t, s, od(L)), m.setClipPath(cT(this, s, !0, t));
      else {
        b && !v ? v = this._newPolygon(h, x) : v && !b && (m.remove(v), v = this._polygon = null), f || this._initOrUpdateEndLabel(t, s, od(L));
        var D = m.getClipPath();
        if (D) {
          var E = cT(this, s, !1, t);
          vn(D, {
            shape: E.shape
          }, t);
        } else
          m.setClipPath(cT(this, s, !0, t));
        S && p.updateData(l, {
          isIgnore: C,
          clipShape: k,
          disableAnimation: !0,
          getSymbolPoint: function(se) {
            return [h[se * 2], h[se * 2 + 1]];
          }
        }), (!b6(this._stackedOnPoints, x) || !b6(this._points, h)) && (y ? this._doUpdateAnimation(l, x, s, i, T, O, _) : (T && (h = Mu(h, s, T, _), x && (x = Mu(x, s, T, _))), g.setShape({
          points: h
        }), v && v.setShape({
          points: h,
          stackedOnPoints: x
        })));
      }
      var M = t.getModel("emphasis"), R = M.get("focus"), N = M.get("blurScope"), $ = M.get("disabled");
      if (g.useStyle(Le(
        // Use color in lineStyle first
        u.getLineStyle(),
        {
          fill: "none",
          stroke: L,
          lineJoin: "bevel"
        }
      )), ui(g, t, "lineStyle"), g.style.lineWidth > 0 && t.get(["emphasis", "lineStyle", "width"]) === "bolder") {
        var V = g.getState("emphasis").style;
        V.lineWidth = +g.style.lineWidth + 1;
      }
      Fe(g).seriesIndex = t.seriesIndex, $n(g, R, N, $);
      var H = x6(t.get("smooth")), G = t.get("smoothMonotone");
      if (g.setShape({
        smooth: H,
        smoothMonotone: G,
        connectNulls: _
      }), v) {
        var q = l.getCalculationInfo("stackedOnSeries"), Y = 0;
        v.useStyle(Le(c.getAreaStyle(), {
          fill: L,
          opacity: 0.7,
          lineJoin: "bevel",
          decal: l.getVisual("style").decal
        })), q && (Y = x6(q.get("smooth"))), v.setShape({
          smooth: H,
          stackedOnSmooth: Y,
          smoothMonotone: G,
          connectNulls: _
        }), ui(v, t, "areaStyle"), Fe(v).seriesIndex = t.seriesIndex, $n(v, R, N, $);
      }
      var ie = function(se) {
        o._changePolyState(se);
      };
      l.eachItemGraphicEl(function(se) {
        se && (se.onHoverStateChange = ie);
      }), this._polyline.onHoverStateChange = ie, this._data = l, this._coordSys = s, this._stackedOnPoints = x, this._points = h, this._step = T, this._valueOrigin = O, t.get("triggerLineEvent") && (this.packEventData(t, g), v && this.packEventData(t, v));
    }, e.prototype.packEventData = function(t, r) {
      Fe(r).eventData = {
        componentType: "series",
        componentSubType: "line",
        componentIndex: t.componentIndex,
        seriesIndex: t.seriesIndex,
        seriesName: t.name,
        seriesType: "line"
      };
    }, e.prototype.highlight = function(t, r, i, o) {
      var s = t.getData(), a = nd(s, o);
      if (this._changePolyState("emphasis"), !(a instanceof Array) && a != null && a >= 0) {
        var l = s.getLayout("points"), u = s.getItemGraphicEl(a);
        if (!u) {
          var c = l[a * 2], h = l[a * 2 + 1];
          if (isNaN(c) || isNaN(h) || this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(c, h))
            return;
          var f = t.get("zlevel") || 0, d = t.get("z") || 0;
          u = new Mb(s, a), u.x = c, u.y = h, u.setZ(f, d);
          var p = u.getSymbolPath().getTextContent();
          p && (p.zlevel = f, p.z = d, p.z2 = this._polyline.z2 + 1), u.__temp = !0, s.setItemGraphicEl(a, u), u.stopSymbolAnimation(!0), this.group.add(u);
        }
        u.highlight();
      } else
        dn.prototype.highlight.call(this, t, r, i, o);
    }, e.prototype.downplay = function(t, r, i, o) {
      var s = t.getData(), a = nd(s, o);
      if (this._changePolyState("normal"), a != null && a >= 0) {
        var l = s.getItemGraphicEl(a);
        l && (l.__temp ? (s.setItemGraphicEl(a, null), this.group.remove(l)) : l.downplay());
      } else
        dn.prototype.downplay.call(this, t, r, i, o);
    }, e.prototype._changePolyState = function(t) {
      var r = this._polygon;
      Hx(this._polyline, t), r && Hx(r, t);
    }, e.prototype._newPolyline = function(t) {
      var r = this._polyline;
      return r && this._lineGroup.remove(r), r = new Y2t({
        shape: {
          points: t
        },
        segmentIgnoreThreshold: 2,
        z2: 10
      }), this._lineGroup.add(r), this._polyline = r, r;
    }, e.prototype._newPolygon = function(t, r) {
      var i = this._polygon;
      return i && this._lineGroup.remove(i), i = new qte({
        shape: {
          points: t,
          stackedOnPoints: r
        },
        segmentIgnoreThreshold: 2
      }), this._lineGroup.add(i), this._polygon = i, i;
    }, e.prototype._initSymbolLabelAnimation = function(t, r, i) {
      var o, s, a = r.getBaseAxis(), l = a.inverse;
      r.type === "cartesian2d" ? (o = a.isHorizontal(), s = !1) : r.type === "polar" && (o = a.dim === "angle", s = !0);
      var u = t.hostModel, c = u.get("animationDuration");
      Pe(c) && (c = c(null));
      var h = u.get("animationDelay") || 0, f = Pe(h) ? h(null) : h;
      t.eachItemGraphicEl(function(d, p) {
        var g = d;
        if (g) {
          var v = [d.x, d.y], m = void 0, y = void 0, b = void 0;
          if (i)
            if (s) {
              var O = i, w = r.pointToCoord(v);
              o ? (m = O.startAngle, y = O.endAngle, b = -w[1] / 180 * Math.PI) : (m = O.r0, y = O.r, b = w[0]);
            } else {
              var x = i;
              o ? (m = x.x, y = x.x + x.width, b = d.x) : (m = x.y + x.height, y = x.y, b = d.y);
            }
          var S = y === m ? 0 : (b - m) / (y - m);
          l && (S = 1 - S);
          var _ = Pe(h) ? h(p) : c * S + f, C = g.getSymbolPath(), A = C.getTextContent();
          g.attr({
            scaleX: 0,
            scaleY: 0
          }), g.animateTo({
            scaleX: 1,
            scaleY: 1
          }, {
            duration: 200,
            setToFinal: !0,
            delay: _
          }), A && A.animateFrom({
            style: {
              opacity: 0
            }
          }, {
            duration: 300,
            delay: _
          }), C.disableLabelAnimation = !0;
        }
      });
    }, e.prototype._initOrUpdateEndLabel = function(t, r, i) {
      var o = t.getModel("endLabel");
      if (Ute(t)) {
        var s = t.getData(), a = this._polyline, l = s.getLayout("points");
        if (!l) {
          a.removeTextContent(), this._endLabel = null;
          return;
        }
        var u = this._endLabel;
        u || (u = this._endLabel = new At({
          z2: 200
          // should be higher than item symbol
        }), u.ignoreClip = !0, a.setTextContent(this._endLabel), a.disableLabelAnimation = !0);
        var c = rAt(l);
        c >= 0 && (ci(a, kr(t, "endLabel"), {
          inheritColor: i,
          labelFetcher: t,
          labelDataIndex: c,
          defaultText: function(h, f, d) {
            return d != null ? Wte(s, d) : $g(s, h);
          },
          enableTextSetter: !0
        }, oAt(o, r)), a.textConfig.position = null);
      } else
        this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
    }, e.prototype._endLabelOnDuring = function(t, r, i, o, s, a, l) {
      var u = this._endLabel, c = this._polyline;
      if (u) {
        t < 1 && o.originalX == null && (o.originalX = u.x, o.originalY = u.y);
        var h = i.getLayout("points"), f = i.hostModel, d = f.get("connectNulls"), p = a.get("precision"), g = a.get("distance") || 0, v = l.getBaseAxis(), m = v.isHorizontal(), y = v.inverse, b = r.shape, O = y ? m ? b.x : b.y + b.height : m ? b.x + b.width : b.y, w = (m ? g : 0) * (y ? -1 : 1), x = (m ? 0 : -g) * (y ? -1 : 1), S = m ? "x" : "y", _ = iAt(h, O, S), C = _.range, A = C[1] - C[0], T = void 0;
        if (A >= 1) {
          if (A > 1 && !d) {
            var k = S6(h, C[0]);
            u.attr({
              x: k[0] + w,
              y: k[1] + x
            }), s && (T = f.getRawValue(C[0]));
          } else {
            var k = c.getPointOn(O, S);
            k && u.attr({
              x: k[0] + w,
              y: k[1] + x
            });
            var L = f.getRawValue(C[0]), D = f.getRawValue(C[1]);
            s && (T = _K(i, p, L, D, _.t));
          }
          o.lastFrameIndex = C[0];
        } else {
          var E = t === 1 || o.lastFrameIndex > 0 ? C[0] : 0, k = S6(h, E);
          s && (T = f.getRawValue(E)), u.attr({
            x: k[0] + w,
            y: k[1] + x
          });
        }
        if (s) {
          var M = vv(u);
          typeof M.setLabelText == "function" && M.setLabelText(T);
        }
      }
    }, e.prototype._doUpdateAnimation = function(t, r, i, o, s, a, l) {
      var u = this._polyline, c = this._polygon, h = t.hostModel, f = q2t(this._data, t, this._stackedOnPoints, r, this._coordSys, i, this._valueOrigin), d = f.current, p = f.stackedOnCurrent, g = f.next, v = f.stackedOnNext;
      if (s && (d = Mu(f.current, i, s, l), p = Mu(f.stackedOnCurrent, i, s, l), g = Mu(f.next, i, s, l), v = Mu(f.stackedOnNext, i, s, l)), w6(d, g) > 3e3 || c && w6(p, v) > 3e3) {
        u.stopAnimation(), u.setShape({
          points: g
        }), c && (c.stopAnimation(), c.setShape({
          points: g,
          stackedOnPoints: v
        }));
        return;
      }
      u.shape.__points = f.current, u.shape.points = d;
      var m = {
        shape: {
          points: g
        }
      };
      f.current !== d && (m.shape.__points = f.next), u.stopAnimation(), kt(u, m, h), c && (c.setShape({
        // Reuse the points with polyline.
        points: d,
        stackedOnPoints: p
      }), c.stopAnimation(), kt(c, {
        shape: {
          stackedOnPoints: v
        }
      }, h), u.shape.points !== c.shape.points && (c.shape.points = u.shape.points));
      for (var y = [], b = f.status, O = 0; O < b.length; O++) {
        var w = b[O].cmd;
        if (w === "=") {
          var x = t.getItemGraphicEl(b[O].idx1);
          x && y.push({
            el: x,
            ptIdx: O
            // Index of points
          });
        }
      }
      u.animators && u.animators.length && u.animators[0].during(function() {
        c && c.dirtyShape();
        for (var S = u.shape.__points, _ = 0; _ < y.length; _++) {
          var C = y[_].el, A = y[_].ptIdx * 2;
          C.x = S[A], C.y = S[A + 1], C.markRedraw();
        }
      });
    }, e.prototype.remove = function(t) {
      var r = this.group, i = this._data;
      this._lineGroup.removeAll(), this._symbolDraw.remove(!0), i && i.eachItemGraphicEl(function(o, s) {
        o.__temp && (r.remove(o), i.setItemGraphicEl(s, null));
      }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
    }, e.type = "line", e;
  }(dn)
);
const aAt = sAt;
function Ib(n, e) {
  return {
    seriesType: n,
    plan: Sv(),
    reset: function(t) {
      var r = t.getData(), i = t.coordinateSystem, o = t.pipelineContext, s = e || o.large;
      if (i) {
        var a = ae(i.dimensions, function(d) {
          return r.mapDimension(d);
        }).slice(0, 2), l = a.length, u = r.getCalculationInfo("stackResultDimension");
        Fc(r, a[0]) && (a[0] = u), Fc(r, a[1]) && (a[1] = u);
        var c = r.getStore(), h = r.getDimensionIndex(a[0]), f = r.getDimensionIndex(a[1]);
        return l && {
          progress: function(d, p) {
            for (var g = d.end - d.start, v = s && Ya(g * l), m = [], y = [], b = d.start, O = 0; b < d.end; b++) {
              var w = void 0;
              if (l === 1) {
                var x = c.get(h, b);
                w = i.dataToPoint(x, null, y);
              } else
                m[0] = c.get(h, b), m[1] = c.get(f, b), w = i.dataToPoint(m, null, y);
              s ? (v[O++] = w[0], v[O++] = w[1]) : p.setItemLayout(b, w.slice());
            }
            s && p.setLayout("points", v);
          }
        };
      }
    }
  };
}
var lAt = {
  average: function(n) {
    for (var e = 0, t = 0, r = 0; r < n.length; r++)
      isNaN(n[r]) || (e += n[r], t++);
    return t === 0 ? NaN : e / t;
  },
  sum: function(n) {
    for (var e = 0, t = 0; t < n.length; t++)
      e += n[t] || 0;
    return e;
  },
  max: function(n) {
    for (var e = -1 / 0, t = 0; t < n.length; t++)
      n[t] > e && (e = n[t]);
    return isFinite(e) ? e : NaN;
  },
  min: function(n) {
    for (var e = 1 / 0, t = 0; t < n.length; t++)
      n[t] < e && (e = n[t]);
    return isFinite(e) ? e : NaN;
  },
  minmax: function(n) {
    for (var e = -1 / 0, t = -1 / 0, r = 0; r < n.length; r++) {
      var i = n[r], o = Math.abs(i);
      o > e && (e = o, t = i);
    }
    return isFinite(t) ? t : NaN;
  },
  // TODO
  // Median
  nearest: function(n) {
    return n[0];
  }
}, uAt = function(n) {
  return Math.round(n.length / 2);
};
function Kte(n) {
  return {
    seriesType: n,
    // FIXME:TS never used, so comment it
    // modifyOutputEnd: true,
    reset: function(e, t, r) {
      var i = e.getData(), o = e.get("sampling"), s = e.coordinateSystem, a = i.count();
      if (a > 10 && s.type === "cartesian2d" && o) {
        var l = s.getBaseAxis(), u = s.getOtherAxis(l), c = l.getExtent(), h = r.getDevicePixelRatio(), f = Math.abs(c[1] - c[0]) * (h || 1), d = Math.round(a / f);
        if (isFinite(d) && d > 1) {
          o === "lttb" && e.setData(i.lttbDownSample(i.mapDimension(u.dim), 1 / d));
          var p = void 0;
          be(o) ? p = lAt[o] : Pe(o) && (p = o), p && e.setData(i.downSample(i.mapDimension(u.dim), 1 / d, p, uAt));
        }
      }
    }
  };
}
function cAt(n) {
  n.registerChartView(aAt), n.registerSeriesModel(W2t), n.registerLayout(Ib("line", !0)), n.registerVisual({
    seriesType: "line",
    reset: function(e) {
      var t = e.getData(), r = e.getModel("lineStyle").getLineStyle();
      r && !r.stroke && (r.stroke = t.getVisual("style").fill), t.setVisual("legendLineStyle", r);
    }
  }), n.registerProcessor(n.PRIORITY.PROCESSOR.STATISTIC, Kte("line"));
}
var M0 = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return yu(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getMarkerPosition = function(t, r, i) {
      var o = this.coordinateSystem;
      if (o && o.clampData) {
        var s = o.clampData(t), a = o.dataToPoint(s);
        if (i)
          I(o.getAxes(), function(f, d) {
            if (f.type === "category" && r != null) {
              var p = f.getTicksCoords(), g = f.getTickModel().get("alignWithLabel"), v = s[d], m = r[d] === "x1" || r[d] === "y1";
              if (m && !g && (v += 1), p.length < 2)
                return;
              if (p.length === 2) {
                a[d] = f.toGlobalCoord(f.getExtent()[m ? 1 : 0]);
                return;
              }
              for (var y = void 0, b = void 0, O = 1, w = 0; w < p.length; w++) {
                var x = p[w].coord, S = w === p.length - 1 ? p[w - 1].tickValue + O : p[w].tickValue;
                if (S === v) {
                  b = x;
                  break;
                } else if (S < v)
                  y = x;
                else if (y != null && S > v) {
                  b = (x + y) / 2;
                  break;
                }
                w === 1 && (O = S - p[0].tickValue);
              }
              b == null && (y ? y && (b = p[p.length - 1].coord) : b = p[0].coord), a[d] = f.toGlobalCoord(b);
            }
          });
        else {
          var l = this.getData(), u = l.getLayout("offset"), c = l.getLayout("size"), h = o.getBaseAxis().isHorizontal() ? 0 : 1;
          a[h] += u + c / 2;
        }
        return a;
      }
      return [NaN, NaN];
    }, e.type = "series.__base_bar__", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // stack: null
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      barMinHeight: 0,
      barMinAngle: 0,
      // cursor: null,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: "mod"
    }, e;
  }(Sn)
);
Sn.registerClass(M0);
var hAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function() {
      return yu(null, this, {
        useEncodeDefaulter: !0,
        createInvertedIndices: !!this.get("realtimeSort", !0) || null
      });
    }, e.prototype.getProgressive = function() {
      return this.get("large") ? this.get("progressive") : !1;
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.get("progressiveThreshold"), r = this.get("largeThreshold");
      return r > t && (t = r), t;
    }, e.prototype.brushSelector = function(t, r, i) {
      return i.rect(r.getItemLayout(t));
    }, e.type = "series.bar", e.dependencies = ["grid", "polar"], e.defaultOption = oh(M0.defaultOption, {
      // If clipped
      // Only available on cartesian2d
      clip: !0,
      roundCap: !1,
      showBackground: !1,
      backgroundStyle: {
        color: "rgba(180, 180, 180, 0.2)",
        borderColor: null,
        borderWidth: 0,
        borderType: "solid",
        borderRadius: 0,
        shadowBlur: 0,
        shadowColor: null,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      realtimeSort: !1
    }), e;
  }(M0)
);
const fAt = hAt;
var dAt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
    }
    return n;
  }()
), pS = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "sausage", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new dAt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.cx, o = r.cy, s = Math.max(r.r0 || 0, 0), a = Math.max(r.r, 0), l = (a - s) * 0.5, u = s + l, c = r.startAngle, h = r.endAngle, f = r.clockwise, d = Math.PI * 2, p = f ? h - c < d : c - h < d;
      p || (c = h - (f ? d : -d));
      var g = Math.cos(c), v = Math.sin(c), m = Math.cos(h), y = Math.sin(h);
      p ? (t.moveTo(g * s + i, v * s + o), t.arc(g * u + i, v * u + o, l, -Math.PI + c, c, !f)) : t.moveTo(g * a + i, v * a + o), t.arc(i, o, a, c, h, !f), t.arc(m * u + i, y * u + o, l, h - Math.PI * 2, h - Math.PI, !f), s !== 0 && t.arc(i, o, s, h, c, f);
    }, e;
  }(ct)
);
function pAt(n, e) {
  e = e || {};
  var t = e.isRoundCap;
  return function(r, i, o) {
    var s = i.position;
    if (!s || s instanceof Array)
      return Gx(r, i, o);
    var a = n(s), l = i.distance != null ? i.distance : 5, u = this.shape, c = u.cx, h = u.cy, f = u.r, d = u.r0, p = (f + d) / 2, g = u.startAngle, v = u.endAngle, m = (g + v) / 2, y = t ? Math.abs(f - d) / 2 : 0, b = Math.cos, O = Math.sin, w = c + f * b(g), x = h + f * O(g), S = "left", _ = "top";
    switch (a) {
      case "startArc":
        w = c + (d - l) * b(m), x = h + (d - l) * O(m), S = "center", _ = "top";
        break;
      case "insideStartArc":
        w = c + (d + l) * b(m), x = h + (d + l) * O(m), S = "center", _ = "bottom";
        break;
      case "startAngle":
        w = c + p * b(g) + vO(g, l + y, !1), x = h + p * O(g) + mO(g, l + y, !1), S = "right", _ = "middle";
        break;
      case "insideStartAngle":
        w = c + p * b(g) + vO(g, -l + y, !1), x = h + p * O(g) + mO(g, -l + y, !1), S = "left", _ = "middle";
        break;
      case "middle":
        w = c + p * b(m), x = h + p * O(m), S = "center", _ = "middle";
        break;
      case "endArc":
        w = c + (f + l) * b(m), x = h + (f + l) * O(m), S = "center", _ = "bottom";
        break;
      case "insideEndArc":
        w = c + (f - l) * b(m), x = h + (f - l) * O(m), S = "center", _ = "top";
        break;
      case "endAngle":
        w = c + p * b(v) + vO(v, l + y, !0), x = h + p * O(v) + mO(v, l + y, !0), S = "left", _ = "middle";
        break;
      case "insideEndAngle":
        w = c + p * b(v) + vO(v, -l + y, !0), x = h + p * O(v) + mO(v, -l + y, !0), S = "right", _ = "middle";
        break;
      default:
        return Gx(r, i, o);
    }
    return r = r || {}, r.x = w, r.y = x, r.align = S, r.verticalAlign = _, r;
  };
}
function gAt(n, e, t, r) {
  if (Tt(r)) {
    n.setTextConfig({
      rotation: r
    });
    return;
  } else if (oe(e)) {
    n.setTextConfig({
      rotation: 0
    });
    return;
  }
  var i = n.shape, o = i.clockwise ? i.startAngle : i.endAngle, s = i.clockwise ? i.endAngle : i.startAngle, a = (o + s) / 2, l, u = t(e);
  switch (u) {
    case "startArc":
    case "insideStartArc":
    case "middle":
    case "insideEndArc":
    case "endArc":
      l = a;
      break;
    case "startAngle":
    case "insideStartAngle":
      l = o;
      break;
    case "endAngle":
    case "insideEndAngle":
      l = s;
      break;
    default:
      n.setTextConfig({
        rotation: 0
      });
      return;
  }
  var c = Math.PI * 1.5 - l;
  u === "middle" && c > Math.PI / 2 && c < Math.PI * 1.5 && (c -= Math.PI), n.setTextConfig({
    rotation: c
  });
}
function vO(n, e, t) {
  return e * Math.sin(n) * (t ? -1 : 1);
}
function mO(n, e, t) {
  return e * Math.cos(n) * (t ? 1 : -1);
}
function vf(n, e, t) {
  var r = n.get("borderRadius");
  if (r == null)
    return t ? {
      cornerRadius: 0
    } : null;
  oe(r) || (r = [r, r, r, r]);
  var i = Math.abs(e.r || 0 - e.r0 || 0);
  return {
    cornerRadius: ae(r, function(o) {
      return aa(o, i);
    })
  };
}
var hT = Math.max, fT = Math.min;
function vAt(n, e) {
  var t = n.getArea && n.getArea();
  if (xd(n, "cartesian2d")) {
    var r = n.getBaseAxis();
    if (r.type !== "category" || !r.onBand) {
      var i = e.getLayout("bandWidth");
      r.isHorizontal() ? (t.x -= i, t.width += i * 2) : (t.y -= i, t.height += i * 2);
    }
  }
  return t;
}
var mAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n.call(this) || this;
      return t.type = e.type, t._isFirstFrame = !0, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      this._model = t, this._removeOnRenderedListener(i), this._updateDrawMode(t);
      var s = t.get("coordinateSystem");
      s === "cartesian2d" || s === "polar" ? (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(t, r, i) : this._renderNormal(t, r, i, o)) : process.env.NODE_ENV !== "production" && En("Only cartesian2d and polar supported for bar.");
    }, e.prototype.incrementalPrepareRender = function(t) {
      this._clear(), this._updateDrawMode(t), this._updateLargeClip(t);
    }, e.prototype.incrementalRender = function(t, r) {
      this._progressiveEls = [], this._incrementalRenderLarge(t, r);
    }, e.prototype.eachRendered = function(t) {
      ih(this._progressiveEls || this.group, t);
    }, e.prototype._updateDrawMode = function(t) {
      var r = t.pipelineContext.large;
      (this._isLargeDraw == null || r !== this._isLargeDraw) && (this._isLargeDraw = r, this._clear());
    }, e.prototype._renderNormal = function(t, r, i, o) {
      var s = this.group, a = t.getData(), l = this._data, u = t.coordinateSystem, c = u.getBaseAxis(), h;
      u.type === "cartesian2d" ? h = c.isHorizontal() : u.type === "polar" && (h = c.dim === "angle");
      var f = t.isAnimationEnabled() ? t : null, d = yAt(t, u);
      d && this._enableRealtimeSort(d, a, i);
      var p = t.get("clip", !0) || d, g = vAt(u, a);
      s.removeClipPath();
      var v = t.get("roundCap", !0), m = t.get("showBackground", !0), y = t.getModel("backgroundStyle"), b = y.get("borderRadius") || 0, O = [], w = this._backgroundEls, x = o && o.isInitSort, S = o && o.type === "changeAxisOrder";
      function _(T) {
        var k = yO[u.type](a, T), L = CAt(u, h, k);
        return L.useStyle(y.getItemStyle()), u.type === "cartesian2d" ? L.setShape("r", b) : L.setShape("cornerRadius", b), O[T] = L, L;
      }
      a.diff(l).add(function(T) {
        var k = a.getItemModel(T), L = yO[u.type](a, T, k);
        if (m && _(T), !(!a.hasValue(T) || !P6[u.type](L))) {
          var D = !1;
          p && (D = _6[u.type](g, L));
          var E = C6[u.type](t, a, T, L, h, f, c.model, !1, v);
          d && (E.forceLabelAnimation = !0), E6(E, a, T, k, L, t, h, u.type === "polar"), x ? E.attr({
            shape: L
          }) : d ? A6(d, f, E, L, T, h, !1, !1) : vn(E, {
            shape: L
          }, t, T), a.setItemGraphicEl(T, E), s.add(E), E.ignore = D;
        }
      }).update(function(T, k) {
        var L = a.getItemModel(T), D = yO[u.type](a, T, L);
        if (m) {
          var E = void 0;
          w.length === 0 ? E = _(k) : (E = w[k], E.useStyle(y.getItemStyle()), u.type === "cartesian2d" ? E.setShape("r", b) : E.setShape("cornerRadius", b), O[T] = E);
          var M = yO[u.type](a, T), R = ene(h, M, u);
          kt(E, {
            shape: R
          }, f, T);
        }
        var N = l.getItemGraphicEl(k);
        if (!a.hasValue(T) || !P6[u.type](D)) {
          s.remove(N);
          return;
        }
        var $ = !1;
        if (p && ($ = _6[u.type](g, D), $ && s.remove(N)), N ? ua(N) : N = C6[u.type](t, a, T, D, h, f, c.model, !!N, v), d && (N.forceLabelAnimation = !0), S) {
          var V = N.getTextContent();
          if (V) {
            var H = vv(V);
            H.prevValue != null && (H.prevValue = H.value);
          }
        } else
          E6(N, a, T, L, D, t, h, u.type === "polar");
        x ? N.attr({
          shape: D
        }) : d ? A6(d, f, N, D, T, h, !0, S) : kt(N, {
          shape: D
        }, t, T, null), a.setItemGraphicEl(T, N), N.ignore = $, s.add(N);
      }).remove(function(T) {
        var k = l.getItemGraphicEl(T);
        k && w0(k, t, T);
      }).execute();
      var C = this._backgroundGroup || (this._backgroundGroup = new Ve());
      C.removeAll();
      for (var A = 0; A < O.length; ++A)
        C.add(O[A]);
      s.add(C), this._backgroundEls = O, this._data = a;
    }, e.prototype._renderLarge = function(t, r, i) {
      this._clear(), M6(t, this.group), this._updateLargeClip(t);
    }, e.prototype._incrementalRenderLarge = function(t, r) {
      this._removeBackground(), M6(r, this.group, this._progressiveEls, !0);
    }, e.prototype._updateLargeClip = function(t) {
      var r = t.get("clip", !0) && Lb(t.coordinateSystem, !1, t), i = this.group;
      r ? i.setClipPath(r) : i.removeClipPath();
    }, e.prototype._enableRealtimeSort = function(t, r, i) {
      var o = this;
      if (r.count()) {
        var s = t.baseAxis;
        if (this._isFirstFrame)
          this._dispatchInitSort(r, t, i), this._isFirstFrame = !1;
        else {
          var a = function(l) {
            var u = r.getItemGraphicEl(l), c = u && u.shape;
            return c && // The result should be consistent with the initial sort by data value.
            // Do not support the case that both positive and negative exist.
            Math.abs(s.isHorizontal() ? c.height : c.width) || 0;
          };
          this._onRendered = function() {
            o._updateSortWithinSameData(r, a, s, i);
          }, i.getZr().on("rendered", this._onRendered);
        }
      }
    }, e.prototype._dataSort = function(t, r, i) {
      var o = [];
      return t.each(t.mapDimension(r.dim), function(s, a) {
        var l = i(a);
        l = l ?? NaN, o.push({
          dataIndex: a,
          mappedValue: l,
          ordinalNumber: s
        });
      }), o.sort(function(s, a) {
        return a.mappedValue - s.mappedValue;
      }), {
        ordinalNumbers: ae(o, function(s) {
          return s.ordinalNumber;
        })
      };
    }, e.prototype._isOrderChangedWithinSameData = function(t, r, i) {
      for (var o = i.scale, s = t.mapDimension(i.dim), a = Number.MAX_VALUE, l = 0, u = o.getOrdinalMeta().categories.length; l < u; ++l) {
        var c = t.rawIndexOf(s, o.getRawOrdinalNumber(l)), h = c < 0 ? Number.MIN_VALUE : r(t.indexOfRawIndex(c));
        if (h > a)
          return !0;
        a = h;
      }
      return !1;
    }, e.prototype._isOrderDifferentInView = function(t, r) {
      for (var i = r.scale, o = i.getExtent(), s = Math.max(0, o[0]), a = Math.min(o[1], i.getOrdinalMeta().categories.length - 1); s <= a; ++s)
        if (t.ordinalNumbers[s] !== i.getRawOrdinalNumber(s))
          return !0;
    }, e.prototype._updateSortWithinSameData = function(t, r, i, o) {
      if (this._isOrderChangedWithinSameData(t, r, i)) {
        var s = this._dataSort(t, i, r);
        this._isOrderDifferentInView(s, i) && (this._removeOnRenderedListener(o), o.dispatchAction({
          type: "changeAxisOrder",
          componentType: i.dim + "Axis",
          axisId: i.index,
          sortInfo: s
        }));
      }
    }, e.prototype._dispatchInitSort = function(t, r, i) {
      var o = r.baseAxis, s = this._dataSort(t, o, function(a) {
        return t.get(t.mapDimension(r.otherAxis.dim), a);
      });
      i.dispatchAction({
        type: "changeAxisOrder",
        componentType: o.dim + "Axis",
        isInitSort: !0,
        axisId: o.index,
        sortInfo: s
      });
    }, e.prototype.remove = function(t, r) {
      this._clear(this._model), this._removeOnRenderedListener(r);
    }, e.prototype.dispose = function(t, r) {
      this._removeOnRenderedListener(r);
    }, e.prototype._removeOnRenderedListener = function(t) {
      this._onRendered && (t.getZr().off("rendered", this._onRendered), this._onRendered = null);
    }, e.prototype._clear = function(t) {
      var r = this.group, i = this._data;
      t && t.isAnimationEnabled() && i && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], i.eachItemGraphicEl(function(o) {
        w0(o, t, Fe(o).dataIndex);
      })) : r.removeAll(), this._data = null, this._isFirstFrame = !0;
    }, e.prototype._removeBackground = function() {
      this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
    }, e.type = "bar", e;
  }(dn)
), _6 = {
  cartesian2d: function(n, e) {
    var t = e.width < 0 ? -1 : 1, r = e.height < 0 ? -1 : 1;
    t < 0 && (e.x += e.width, e.width = -e.width), r < 0 && (e.y += e.height, e.height = -e.height);
    var i = n.x + n.width, o = n.y + n.height, s = hT(e.x, n.x), a = fT(e.x + e.width, i), l = hT(e.y, n.y), u = fT(e.y + e.height, o), c = a < s, h = u < l;
    return e.x = c && s > i ? a : s, e.y = h && l > o ? u : l, e.width = c ? 0 : a - s, e.height = h ? 0 : u - l, t < 0 && (e.x += e.width, e.width = -e.width), r < 0 && (e.y += e.height, e.height = -e.height), c || h;
  },
  polar: function(n, e) {
    var t = e.r0 <= e.r ? 1 : -1;
    if (t < 0) {
      var r = e.r;
      e.r = e.r0, e.r0 = r;
    }
    var i = fT(e.r, n.r), o = hT(e.r0, n.r0);
    e.r = i, e.r0 = o;
    var s = i - o < 0;
    if (t < 0) {
      var r = e.r;
      e.r = e.r0, e.r0 = r;
    }
    return s;
  }
}, C6 = {
  cartesian2d: function(n, e, t, r, i, o, s, a, l) {
    var u = new _t({
      shape: te({}, r),
      z2: 1
    });
    if (u.__dataIndex = t, u.name = "item", o) {
      var c = u.shape, h = i ? "height" : "width";
      c[h] = 0;
    }
    return u;
  },
  polar: function(n, e, t, r, i, o, s, a, l) {
    var u = !i && l ? pS : go, c = new u({
      shape: r,
      z2: 1
    });
    c.name = "item";
    var h = Jte(i);
    if (c.calculateTextPosition = pAt(h, {
      isRoundCap: u === pS
    }), o) {
      var f = c.shape, d = i ? "r" : "endAngle", p = {};
      f[d] = i ? r.r0 : r.startAngle, p[d] = r[d], (a ? kt : vn)(c, {
        shape: p
        // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue
      }, o);
    }
    return c;
  }
};
function yAt(n, e) {
  var t = n.get("realtimeSort", !0), r = e.getBaseAxis();
  if (process.env.NODE_ENV !== "production" && t && (r.type !== "category" && En("`realtimeSort` will not work because this bar series is not based on a category axis."), e.type !== "cartesian2d" && En("`realtimeSort` will not work because this bar series is not on cartesian2d.")), t && r.type === "category" && e.type === "cartesian2d")
    return {
      baseAxis: r,
      otherAxis: e.getOtherAxis(r)
    };
}
function A6(n, e, t, r, i, o, s, a) {
  var l, u;
  o ? (u = {
    x: r.x,
    width: r.width
  }, l = {
    y: r.y,
    height: r.height
  }) : (u = {
    y: r.y,
    height: r.height
  }, l = {
    x: r.x,
    width: r.width
  }), a || (s ? kt : vn)(t, {
    shape: l
  }, e, i, null);
  var c = e ? n.baseAxis.model : null;
  (s ? kt : vn)(t, {
    shape: u
  }, c, i);
}
function T6(n, e) {
  for (var t = 0; t < e.length; t++)
    if (!isFinite(n[e[t]]))
      return !0;
  return !1;
}
var bAt = ["x", "y", "width", "height"], OAt = ["cx", "cy", "r", "startAngle", "endAngle"], P6 = {
  cartesian2d: function(n) {
    return !T6(n, bAt);
  },
  polar: function(n) {
    return !T6(n, OAt);
  }
}, yO = {
  // itemModel is only used to get borderWidth, which is not needed
  // when calculating bar background layout.
  cartesian2d: function(n, e, t) {
    var r = n.getItemLayout(e), i = t ? xAt(t, r) : 0, o = r.width > 0 ? 1 : -1, s = r.height > 0 ? 1 : -1;
    return {
      x: r.x + o * i / 2,
      y: r.y + s * i / 2,
      width: r.width - o * i,
      height: r.height - s * i
    };
  },
  polar: function(n, e, t) {
    var r = n.getItemLayout(e);
    return {
      cx: r.cx,
      cy: r.cy,
      r0: r.r0,
      r: r.r,
      startAngle: r.startAngle,
      endAngle: r.endAngle,
      clockwise: r.clockwise
    };
  }
};
function wAt(n) {
  return n.startAngle != null && n.endAngle != null && n.startAngle === n.endAngle;
}
function Jte(n) {
  return /* @__PURE__ */ function(e) {
    var t = e ? "Arc" : "Angle";
    return function(r) {
      switch (r) {
        case "start":
        case "insideStart":
        case "end":
        case "insideEnd":
          return r + t;
        default:
          return r;
      }
    };
  }(n);
}
function E6(n, e, t, r, i, o, s, a) {
  var l = e.getItemVisual(t, "style");
  if (a) {
    if (!o.get("roundCap")) {
      var c = n.shape, h = vf(r.getModel("itemStyle"), c, !0);
      te(c, h), n.setShape(c);
    }
  } else {
    var u = r.get(["itemStyle", "borderRadius"]) || 0;
    n.setShape("r", u);
  }
  n.useStyle(l);
  var f = r.getShallow("cursor");
  f && n.attr("cursor", f);
  var d = a ? s ? i.r >= i.r0 ? "endArc" : "startArc" : i.endAngle >= i.startAngle ? "endAngle" : "startAngle" : s ? i.height >= 0 ? "bottom" : "top" : i.width >= 0 ? "right" : "left", p = kr(r);
  ci(n, p, {
    labelFetcher: o,
    labelDataIndex: t,
    defaultText: $g(o.getData(), t),
    inheritColor: l.fill,
    defaultOpacity: l.opacity,
    defaultOutsidePosition: d
  });
  var g = n.getTextContent();
  if (a && g) {
    var v = r.get(["label", "position"]);
    n.textConfig.inside = v === "middle" ? !0 : null, gAt(n, v === "outside" ? d : v, Jte(s), r.get(["label", "rotate"]));
  }
  mJ(g, p, o.getRawValue(t), function(y) {
    return Wte(e, y);
  });
  var m = r.getModel(["emphasis"]);
  $n(n, m.get("focus"), m.get("blurScope"), m.get("disabled")), ui(n, r), wAt(i) && (n.style.fill = "none", n.style.stroke = "none", I(n.states, function(y) {
    y.style && (y.style.fill = y.style.stroke = "none");
  }));
}
function xAt(n, e) {
  var t = n.get(["itemStyle", "borderColor"]);
  if (!t || t === "none")
    return 0;
  var r = n.get(["itemStyle", "borderWidth"]) || 0, i = isNaN(e.width) ? Number.MAX_VALUE : Math.abs(e.width), o = isNaN(e.height) ? Number.MAX_VALUE : Math.abs(e.height);
  return Math.min(r, i, o);
}
var SAt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), k6 = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "largeBar", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new SAt();
    }, e.prototype.buildPath = function(t, r) {
      for (var i = r.points, o = this.baseDimIdx, s = 1 - this.baseDimIdx, a = [], l = [], u = this.barWidth, c = 0; c < i.length; c += 3)
        l[o] = u, l[s] = i[c + 2], a[o] = i[c + o], a[s] = i[c + s], t.rect(a[0], a[1], l[0], l[1]);
    }, e;
  }(ct)
);
function M6(n, e, t, r) {
  var i = n.getData(), o = i.getLayout("valueAxisHorizontal") ? 1 : 0, s = i.getLayout("largeDataIndices"), a = i.getLayout("size"), l = n.getModel("backgroundStyle"), u = i.getLayout("largeBackgroundPoints");
  if (u) {
    var c = new k6({
      shape: {
        points: u
      },
      incremental: !!r,
      silent: !0,
      z2: 0
    });
    c.baseDimIdx = o, c.largeDataIndices = s, c.barWidth = a, c.useStyle(l.getItemStyle()), e.add(c), t && t.push(c);
  }
  var h = new k6({
    shape: {
      points: i.getLayout("largePoints")
    },
    incremental: !!r,
    ignoreCoarsePointer: !0,
    z2: 1
  });
  h.baseDimIdx = o, h.largeDataIndices = s, h.barWidth = a, e.add(h), h.useStyle(i.getVisual("style")), Fe(h).seriesIndex = n.seriesIndex, n.get("silent") || (h.on("mousedown", D6), h.on("mousemove", D6)), t && t.push(h);
}
var D6 = xR(function(n) {
  var e = this, t = _At(e, n.offsetX, n.offsetY);
  Fe(e).dataIndex = t >= 0 ? t : null;
}, 30, !1);
function _At(n, e, t) {
  for (var r = n.baseDimIdx, i = 1 - r, o = n.shape.points, s = n.largeDataIndices, a = [], l = [], u = n.barWidth, c = 0, h = o.length / 3; c < h; c++) {
    var f = c * 3;
    if (l[r] = u, l[i] = o[f + 2], a[r] = o[f + r], a[i] = o[f + i], l[i] < 0 && (a[i] += l[i], l[i] = -l[i]), e >= a[0] && e <= a[0] + l[0] && t >= a[1] && t <= a[1] + l[1])
      return s[c];
  }
  return -1;
}
function ene(n, e, t) {
  if (xd(t, "cartesian2d")) {
    var r = e, i = t.getArea();
    return {
      x: n ? r.x : i.x,
      y: n ? i.y : r.y,
      width: n ? r.width : i.width,
      height: n ? i.height : r.height
    };
  } else {
    var i = t.getArea(), o = e;
    return {
      cx: i.cx,
      cy: i.cy,
      r0: n ? i.r0 : o.r0,
      r: n ? i.r : o.r,
      startAngle: n ? o.startAngle : 0,
      endAngle: n ? o.endAngle : Math.PI * 2
    };
  }
}
function CAt(n, e, t) {
  var r = n.type === "polar" ? go : _t;
  return new r({
    shape: ene(e, t, n),
    silent: !0,
    z2: 0
  });
}
const AAt = mAt;
function TAt(n) {
  n.registerChartView(AAt), n.registerSeriesModel(fAt), n.registerLayout(n.PRIORITY.VISUAL.LAYOUT, je(ite, "bar")), n.registerLayout(n.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, ote("bar")), n.registerProcessor(n.PRIORITY.PROCESSOR.STATISTIC, Kte("bar")), n.registerAction({
    type: "changeAxisOrder",
    event: "changeAxisOrder",
    update: "update"
  }, function(e, t) {
    var r = e.componentType || "series";
    t.eachComponent({
      mainType: r,
      query: e
    }, function(i) {
      e.sortInfo && i.axis.setCategorySortInfo(e.sortInfo);
    });
  });
}
var L6 = Math.PI * 2, bO = Math.PI / 180;
function tne(n, e) {
  return mr(n.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function nne(n, e) {
  var t = tne(n, e), r = n.get("center"), i = n.get("radius");
  oe(i) || (i = [0, i]);
  var o = fe(t.width, e.getWidth()), s = fe(t.height, e.getHeight()), a = Math.min(o, s), l = fe(i[0], a / 2), u = fe(i[1], a / 2), c, h, f = n.coordinateSystem;
  if (f) {
    var d = f.dataToPoint(r);
    c = d[0] || 0, h = d[1] || 0;
  } else
    oe(r) || (r = [r, r]), c = fe(r[0], o) + t.x, h = fe(r[1], s) + t.y;
  return {
    cx: c,
    cy: h,
    r0: l,
    r: u
  };
}
function PAt(n, e, t) {
  e.eachSeriesByType(n, function(r) {
    var i = r.getData(), o = i.mapDimension("value"), s = tne(r, t), a = nne(r, t), l = a.cx, u = a.cy, c = a.r, h = a.r0, f = -r.get("startAngle") * bO, d = r.get("endAngle"), p = r.get("padAngle") * bO;
    d = d === "auto" ? f - L6 : -d * bO;
    var g = r.get("minAngle") * bO, v = g + p, m = 0;
    i.each(o, function(M) {
      !isNaN(M) && m++;
    });
    var y = i.getSum(o), b = Math.PI / (y || m) * 2, O = r.get("clockwise"), w = r.get("roseType"), x = r.get("stillShowZeroSum"), S = i.getDataExtent(o);
    S[0] = 0;
    var _ = O ? 1 : -1, C = [f, d], A = _ * p / 2;
    jI(C, !O), f = C[0], d = C[1];
    var T = Math.abs(d - f), k = T, L = 0, D = f;
    if (i.setLayout({
      viewRect: s,
      r: c
    }), i.each(o, function(M, R) {
      var N;
      if (isNaN(M)) {
        i.setItemLayout(R, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: O,
          cx: l,
          cy: u,
          r0: h,
          r: w ? NaN : c
        });
        return;
      }
      w !== "area" ? N = y === 0 && x ? b : M * b : N = T / m, N < v ? (N = v, k -= v) : L += M;
      var $ = D + _ * N, V = 0, H = 0;
      p > N ? (V = D + _ * N / 2, H = V) : (V = D + A, H = $ - A), i.setItemLayout(R, {
        angle: N,
        startAngle: V,
        endAngle: H,
        clockwise: O,
        cx: l,
        cy: u,
        r0: h,
        r: w ? Ft(M, S, [h, c]) : c
      }), D = $;
    }), k < L6 && m)
      if (k <= 1e-3) {
        var E = T / m;
        i.each(o, function(M, R) {
          if (!isNaN(M)) {
            var N = i.getItemLayout(R);
            N.angle = E;
            var $ = 0, V = 0;
            E < p ? ($ = f + _ * (R + 1 / 2) * E, V = $) : ($ = f + _ * R * E + A, V = f + _ * (R + 1) * E - A), N.startAngle = $, N.endAngle = V;
          }
        });
      } else
        b = k / L, D = f, i.each(o, function(M, R) {
          if (!isNaN(M)) {
            var N = i.getItemLayout(R), $ = N.angle === v ? v : M * b, V = 0, H = 0;
            $ < p ? (V = D + _ * $ / 2, H = V) : (V = D + A, H = D + _ * $ - A), N.startAngle = V, N.endAngle = H, D += _ * $;
          }
        });
  });
}
function Rb(n) {
  return {
    seriesType: n,
    reset: function(e, t) {
      var r = t.findComponents({
        mainType: "legend"
      });
      if (!(!r || !r.length)) {
        var i = e.getData();
        i.filterSelf(function(o) {
          for (var s = i.getName(o), a = 0; a < r.length; a++)
            if (!r[a].isSelected(s))
              return !1;
          return !0;
        });
      }
    }
  };
}
var EAt = Math.PI / 180;
function I6(n, e, t, r, i, o, s, a, l, u) {
  if (n.length < 2)
    return;
  function c(g) {
    for (var v = g.rB, m = v * v, y = 0; y < g.list.length; y++) {
      var b = g.list[y], O = Math.abs(b.label.y - t), w = r + b.len, x = w * w, S = Math.sqrt((1 - Math.abs(O * O / m)) * x), _ = e + (S + b.len2) * i, C = _ - b.label.x, A = b.targetTextWidth - C * i;
      rne(b, A, !0), b.label.x = _;
    }
  }
  function h(g) {
    for (var v = {
      list: [],
      maxY: 0
    }, m = {
      list: [],
      maxY: 0
    }, y = 0; y < g.length; y++)
      if (g[y].labelAlignTo === "none") {
        var b = g[y], O = b.label.y > t ? m : v, w = Math.abs(b.label.y - t);
        if (w >= O.maxY) {
          var x = b.label.x - e - b.len2 * i, S = r + b.len, _ = Math.abs(x) < S ? Math.sqrt(w * w / (1 - x * x / S / S)) : S;
          O.rB = _, O.maxY = w;
        }
        O.list.push(b);
      }
    c(v), c(m);
  }
  for (var f = n.length, d = 0; d < f; d++)
    if (n[d].position === "outer" && n[d].labelAlignTo === "labelLine") {
      var p = n[d].label.x - u;
      n[d].linePoints[1][0] += p, n[d].label.x = u;
    }
  Tte(n, l, l + s) && h(n);
}
function kAt(n, e, t, r, i, o, s, a) {
  for (var l = [], u = [], c = Number.MAX_VALUE, h = -Number.MAX_VALUE, f = 0; f < n.length; f++) {
    var d = n[f].label;
    dT(n[f]) || (d.x < e ? (c = Math.min(c, d.x), l.push(n[f])) : (h = Math.max(h, d.x), u.push(n[f])));
  }
  for (var f = 0; f < n.length; f++) {
    var p = n[f];
    if (!dT(p) && p.linePoints) {
      if (p.labelStyleWidth != null)
        continue;
      var d = p.label, g = p.linePoints, v = void 0;
      p.labelAlignTo === "edge" ? d.x < e ? v = g[2][0] - p.labelDistance - s - p.edgeDistance : v = s + i - p.edgeDistance - g[2][0] - p.labelDistance : p.labelAlignTo === "labelLine" ? d.x < e ? v = c - s - p.bleedMargin : v = s + i - h - p.bleedMargin : d.x < e ? v = d.x - s - p.bleedMargin : v = s + i - d.x - p.bleedMargin, p.targetTextWidth = v, rne(p, v);
    }
  }
  I6(u, e, t, r, 1, i, o, s, a, h), I6(l, e, t, r, -1, i, o, s, a, c);
  for (var f = 0; f < n.length; f++) {
    var p = n[f];
    if (!dT(p) && p.linePoints) {
      var d = p.label, g = p.linePoints, m = p.labelAlignTo === "edge", y = d.style.padding, b = y ? y[1] + y[3] : 0, O = d.style.backgroundColor ? 0 : b, w = p.rect.width + O, x = g[1][0] - g[2][0];
      m ? d.x < e ? g[2][0] = s + p.edgeDistance + w + p.labelDistance : g[2][0] = s + i - p.edgeDistance - w - p.labelDistance : (d.x < e ? g[2][0] = d.x + p.labelDistance : g[2][0] = d.x - p.labelDistance, g[1][0] = g[2][0] + x), g[1][1] = g[2][1] = d.y;
    }
  }
}
function rne(n, e, t) {
  if (t === void 0 && (t = !1), n.labelStyleWidth == null) {
    var r = n.label, i = r.style, o = n.rect, s = i.backgroundColor, a = i.padding, l = a ? a[1] + a[3] : 0, u = i.overflow, c = o.width + (s ? 0 : l);
    if (e < c || t) {
      var h = o.height;
      if (u && u.match("break")) {
        r.setStyle("backgroundColor", null), r.setStyle("width", e - l);
        var f = r.getBoundingRect();
        r.setStyle("width", Math.ceil(f.width)), r.setStyle("backgroundColor", s);
      } else {
        var d = e - l, p = e < c ? d : (
          // Current available width is enough, but the text may have
          // already been wrapped with a smaller available width.
          t ? d > n.unconstrainedWidth ? null : d : null
        );
        r.setStyle("width", p);
      }
      var g = r.getBoundingRect();
      o.width = g.width;
      var v = (r.style.margin || 0) + 2.1;
      o.height = g.height + v, o.y -= (o.height - h) / 2;
    }
  }
}
function dT(n) {
  return n.position === "center";
}
function MAt(n) {
  var e = n.getData(), t = [], r, i, o = !1, s = (n.get("minShowLabelAngle") || 0) * EAt, a = e.getLayout("viewRect"), l = e.getLayout("r"), u = a.width, c = a.x, h = a.y, f = a.height;
  function d(x) {
    x.ignore = !0;
  }
  function p(x) {
    if (!x.ignore)
      return !0;
    for (var S in x.states)
      if (x.states[S].ignore === !1)
        return !0;
    return !1;
  }
  e.each(function(x) {
    var S = e.getItemGraphicEl(x), _ = S.shape, C = S.getTextContent(), A = S.getTextGuideLine(), T = e.getItemModel(x), k = T.getModel("label"), L = k.get("position") || T.get(["emphasis", "label", "position"]), D = k.get("distanceToLabelLine"), E = k.get("alignTo"), M = fe(k.get("edgeDistance"), u), R = k.get("bleedMargin"), N = T.getModel("labelLine"), $ = N.get("length");
    $ = fe($, u);
    var V = N.get("length2");
    if (V = fe(V, u), Math.abs(_.endAngle - _.startAngle) < s) {
      I(C.states, d), C.ignore = !0, A && (I(A.states, d), A.ignore = !0);
      return;
    }
    if (p(C)) {
      var H = (_.startAngle + _.endAngle) / 2, G = Math.cos(H), q = Math.sin(H), Y, ie, se, K;
      r = _.cx, i = _.cy;
      var re = L === "inside" || L === "inner";
      if (L === "center")
        Y = _.cx, ie = _.cy, K = "center";
      else {
        var ge = (re ? (_.r + _.r0) / 2 * G : _.r * G) + r, ne = (re ? (_.r + _.r0) / 2 * q : _.r * q) + i;
        if (Y = ge + G * 3, ie = ne + q * 3, !re) {
          var ue = ge + G * ($ + l - _.r), xe = ne + q * ($ + l - _.r), gt = ue + (G < 0 ? -1 : 1) * V, He = xe;
          E === "edge" ? Y = G < 0 ? c + M : c + u - M : Y = gt + (G < 0 ? -D : D), ie = He, se = [[ge, ne], [ue, xe], [gt, He]];
        }
        K = re ? "center" : E === "edge" ? G > 0 ? "right" : "left" : G > 0 ? "left" : "right";
      }
      var It = Math.PI, Rt = 0, pn = k.get("rotate");
      if (Tt(pn))
        Rt = pn * (It / 180);
      else if (L === "center")
        Rt = 0;
      else if (pn === "radial" || pn === !0) {
        var Xn = G < 0 ? -H + It : -H;
        Rt = Xn;
      } else if (pn === "tangential" && L !== "outside" && L !== "outer") {
        var Dn = Math.atan2(G, q);
        Dn < 0 && (Dn = It * 2 + Dn);
        var yr = q > 0;
        yr && (Dn = It + Dn), Rt = Dn - It;
      }
      if (o = !!Rt, C.x = Y, C.y = ie, C.rotation = Rt, C.setStyle({
        verticalAlign: "middle"
      }), re) {
        C.setStyle({
          align: K
        });
        var mo = C.states.select;
        mo && (mo.x += C.x, mo.y += C.y);
      } else {
        var ur = C.getBoundingRect().clone();
        ur.applyTransform(C.getComputedTransform());
        var vo = (C.style.margin || 0) + 2.1;
        ur.y -= vo / 2, ur.height += vo, t.push({
          label: C,
          labelLine: A,
          position: L,
          len: $,
          len2: V,
          minTurnAngle: N.get("minTurnAngle"),
          maxSurfaceAngle: N.get("maxSurfaceAngle"),
          surfaceNormal: new Xe(G, q),
          linePoints: se,
          textAlign: K,
          labelDistance: D,
          labelAlignTo: E,
          edgeDistance: M,
          bleedMargin: R,
          rect: ur,
          unconstrainedWidth: ur.width,
          labelStyleWidth: C.style.width
        });
      }
      S.setTextConfig({
        inside: re
      });
    }
  }), !o && n.get("avoidLabelOverlap") && kAt(t, r, i, l, u, f, c, h);
  for (var g = 0; g < t.length; g++) {
    var v = t[g], m = v.label, y = v.labelLine, b = isNaN(m.x) || isNaN(m.y);
    if (m) {
      m.setStyle({
        align: v.textAlign
      }), b && (I(m.states, d), m.ignore = !0);
      var O = m.states.select;
      O && (O.x += m.x, O.y += m.y);
    }
    if (y) {
      var w = v.linePoints;
      b || !w ? (I(y.states, d), y.ignore = !0) : (_te(w, v.minTurnAngle), HCt(w, v.surfaceNormal, v.maxSurfaceAngle), y.setShape({
        points: w
      }), m.__hostTarget.textGuideLineConfig = {
        anchor: new Xe(w[0][0], w[0][1])
      });
    }
  }
}
var DAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this) || this;
      o.z2 = 2;
      var s = new At();
      return o.setTextContent(s), o.updateData(t, r, i, !0), o;
    }
    return e.prototype.updateData = function(t, r, i, o) {
      var s = this, a = t.hostModel, l = t.getItemModel(r), u = l.getModel("emphasis"), c = t.getItemLayout(r), h = te(vf(l.getModel("itemStyle"), c, !0), c);
      if (isNaN(h.startAngle)) {
        s.setShape(h);
        return;
      }
      if (o) {
        s.setShape(h);
        var f = a.getShallow("animationType");
        a.ecModel.ssr ? (vn(s, {
          scaleX: 0,
          scaleY: 0
        }, a, {
          dataIndex: r,
          isFrom: !0
        }), s.originX = h.cx, s.originY = h.cy) : f === "scale" ? (s.shape.r = c.r0, vn(s, {
          shape: {
            r: c.r
          }
        }, a, r)) : i != null ? (s.setShape({
          startAngle: i,
          endAngle: i
        }), vn(s, {
          shape: {
            startAngle: c.startAngle,
            endAngle: c.endAngle
          }
        }, a, r)) : (s.shape.endAngle = c.startAngle, kt(s, {
          shape: {
            endAngle: c.endAngle
          }
        }, a, r));
      } else
        ua(s), kt(s, {
          shape: h
        }, a, r);
      s.useStyle(t.getItemVisual(r, "style")), ui(s, l);
      var d = (c.startAngle + c.endAngle) / 2, p = a.get("selectedOffset"), g = Math.cos(d) * p, v = Math.sin(d) * p, m = l.getShallow("cursor");
      m && s.attr("cursor", m), this._updateLabel(a, t, r), s.ensureState("emphasis").shape = te({
        r: c.r + (u.get("scale") && u.get("scaleSize") || 0)
      }, vf(u.getModel("itemStyle"), c)), te(s.ensureState("select"), {
        x: g,
        y: v,
        shape: vf(l.getModel(["select", "itemStyle"]), c)
      }), te(s.ensureState("blur"), {
        shape: vf(l.getModel(["blur", "itemStyle"]), c)
      });
      var y = s.getTextGuideLine(), b = s.getTextContent();
      y && te(y.ensureState("select"), {
        x: g,
        y: v
      }), te(b.ensureState("select"), {
        x: g,
        y: v
      }), $n(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t, r, i) {
      var o = this, s = r.getItemModel(i), a = s.getModel("labelLine"), l = r.getItemVisual(i, "style"), u = l && l.fill, c = l && l.opacity;
      ci(o, kr(s), {
        labelFetcher: r.hostModel,
        labelDataIndex: i,
        inheritColor: u,
        defaultOpacity: c,
        defaultText: t.getFormattedLabel(i, "normal") || r.getName(i)
      });
      var h = o.getTextContent();
      o.setTextConfig({
        // reset position, rotation
        position: null,
        rotation: null
      }), h.attr({
        z2: 10
      });
      var f = t.get(["label", "position"]);
      if (f !== "outside" && f !== "outer")
        o.removeTextGuideLine();
      else {
        var d = this.getTextGuideLine();
        d || (d = new Gi(), this.setTextGuideLine(d)), $R(this, NR(s), {
          stroke: u,
          opacity: ys(a.get(["lineStyle", "opacity"]), c, 1)
        });
      }
    }, e;
  }(go)
), LAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.ignoreLabelLineUpdate = !0, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      var s = t.getData(), a = this._data, l = this.group, u;
      if (!a && s.count() > 0) {
        for (var c = s.getItemLayout(0), h = 1; isNaN(c && c.startAngle) && h < s.count(); ++h)
          c = s.getItemLayout(h);
        c && (u = c.startAngle);
      }
      if (this._emptyCircleSector && l.remove(this._emptyCircleSector), s.count() === 0 && t.get("showEmptyCircle")) {
        var f = new go({
          shape: nne(t, i)
        });
        f.useStyle(t.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = f, l.add(f);
      }
      s.diff(a).add(function(d) {
        var p = new DAt(s, d, u);
        s.setItemGraphicEl(d, p), l.add(p);
      }).update(function(d, p) {
        var g = a.getItemGraphicEl(p);
        g.updateData(s, d, u), g.off("click"), l.add(g), s.setItemGraphicEl(d, g);
      }).remove(function(d) {
        var p = a.getItemGraphicEl(d);
        w0(p, t, d);
      }).execute(), MAt(t), t.get("animationTypeUpdate") !== "expansion" && (this._data = s);
    }, e.prototype.dispose = function() {
    }, e.prototype.containPoint = function(t, r) {
      var i = r.getData(), o = i.getItemLayout(0);
      if (o) {
        var s = t[0] - o.cx, a = t[1] - o.cy, l = Math.sqrt(s * s + a * a);
        return l <= o.r && l >= o.r0;
      }
    }, e.type = "pie", e;
  }(dn)
);
const IAt = LAt;
function Av(n, e, t) {
  e = oe(e) && {
    coordDimensions: e
  } || te({
    encodeDefine: n.getEncode()
  }, e);
  var r = n.getSource(), i = Pb(r, e).dimensions, o = new Bi(i, n);
  return o.initData(r, t), o;
}
var RAt = (
  /** @class */
  function() {
    function n(e, t) {
      this._getDataWithEncodedVisual = e, this._getRawData = t;
    }
    return n.prototype.getAllNames = function() {
      var e = this._getRawData();
      return e.mapArray(e.getName);
    }, n.prototype.containName = function(e) {
      var t = this._getRawData();
      return t.indexOfName(e) >= 0;
    }, n.prototype.indexOfName = function(e) {
      var t = this._getDataWithEncodedVisual();
      return t.indexOfName(e);
    }, n.prototype.getItemVisual = function(e, t) {
      var r = this._getDataWithEncodedVisual();
      return r.getItemVisual(e, t);
    }, n;
  }()
);
const $b = RAt;
var $At = Ct(), NAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.init = function(t) {
      n.prototype.init.apply(this, arguments), this.legendVisualProvider = new $b(Oe(this.getData, this), Oe(this.getRawData, this)), this._defaultLabelLine(t);
    }, e.prototype.mergeOption = function() {
      n.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.getInitialData = function() {
      return Av(this, {
        coordDimensions: ["value"],
        encodeDefaulter: je(hR, this)
      });
    }, e.prototype.getDataParams = function(t) {
      var r = this.getData(), i = $At(r), o = i.seats;
      if (!o) {
        var s = [];
        r.each(r.mapDimension("value"), function(l) {
          s.push(l);
        }), o = i.seats = e1t(s, r.hostModel.get("percentPrecision"));
      }
      var a = n.prototype.getDataParams.call(this, t);
      return a.percent = o[t] || 0, a.$vars.push("percent"), a;
    }, e.prototype._defaultLabelLine = function(t) {
      td(t, "labelLine", ["show"]);
      var r = t.labelLine, i = t.emphasis.labelLine;
      r.show = r.show && t.label.show, i.show = i.show && t.emphasis.label.show;
    }, e.type = "series.pie", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      endAngle: "auto",
      padAngle: 0,
      // 最小角度改为0
      minAngle: 0,
      // If the angle of a sector less than `minShowLabelAngle`,
      // the label will not be displayed.
      minShowLabelAngle: 0,
      // 选中时扇区偏移量
      selectedOffset: 10,
      // 选择模式，默认关闭，可选single，multiple
      // selectedMode: false,
      // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
      // roseType: null,
      percentPrecision: 2,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // cursor: null,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        // color: 'inherit',
        // If rotate around circle
        rotate: 0,
        show: !0,
        overflow: "truncate",
        // 'outer', 'inside', 'center'
        position: "outer",
        // 'none', 'labelLine', 'edge'. Works only when position is 'outer'
        alignTo: "none",
        // Closest distance between label and chart edge.
        // Works only position is 'outer' and alignTo is 'edge'.
        edgeDistance: "25%",
        // Works only position is 'outer' and alignTo is not 'edge'.
        bleedMargin: 10,
        // Distance between text and label line.
        distanceToLabelLine: 5
        // formatter: 标签文本格式器，同 tooltip.formatter，不支持异步回调
        // 默认使用全局文本样式，详见 textStyle
        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数
      },
      // Enabled when label.normal.position is 'outer'
      labelLine: {
        show: !0,
        // 引导线两段中的第一段长度
        length: 15,
        // 引导线两段中的第二段长度
        length2: 15,
        smooth: !1,
        minTurnAngle: 90,
        maxSurfaceAngle: 90,
        lineStyle: {
          // color: 各异,
          width: 1,
          type: "solid"
        }
      },
      itemStyle: {
        borderWidth: 1,
        borderJoin: "round"
      },
      showEmptyCircle: !0,
      emptyCircleStyle: {
        color: "lightgray",
        opacity: 1
      },
      labelLayout: {
        // Hide the overlapped label.
        hideOverlap: !0
      },
      emphasis: {
        scale: !0,
        scaleSize: 5
      },
      // If use strategy to avoid label overlapping
      avoidLabelOverlap: !0,
      // Animation type. Valid values: expansion, scale
      animationType: "expansion",
      animationDuration: 1e3,
      // Animation type when update. Valid values: transition, expansion
      animationTypeUpdate: "transition",
      animationEasingUpdate: "cubicInOut",
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut"
    }, e;
  }(Sn)
);
const BAt = NAt;
function VAt(n) {
  return {
    seriesType: n,
    reset: function(e, t) {
      var r = e.getData();
      r.filterSelf(function(i) {
        var o = r.mapDimension("value"), s = r.get(o, i);
        return !(Tt(s) && !isNaN(s) && s < 0);
      });
    }
  };
}
function zAt(n) {
  n.registerChartView(IAt), n.registerSeriesModel(BAt), xee("pie", n.registerAction), n.registerLayout(je(PAt, "pie")), n.registerProcessor(Rb("pie")), n.registerProcessor(VAt("pie"));
}
var FAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return yu(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getProgressive = function() {
      var t = this.option.progressive;
      return t ?? (this.option.large ? 5e3 : this.get("progressive"));
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.option.progressiveThreshold;
      return t ?? (this.option.large ? 1e4 : this.get("progressiveThreshold"));
    }, e.prototype.brushSelector = function(t, r, i) {
      return i.point(r.getItemLayout(t));
    }, e.prototype.getZLevelKey = function() {
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
    }, e.type = "series.scatter", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      symbolSize: 10,
      // symbolRotate: null,  // 图形旋转控制
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      // cursor: null,
      itemStyle: {
        opacity: 0.8
        // color: 各异
      },
      emphasis: {
        scale: !0
      },
      // If clip the overflow graphics
      // Works on cartesian / polar series
      clip: !0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      universalTransition: {
        divideShape: "clone"
      }
      // progressive: null
    }, e;
  }(Sn)
);
const QAt = FAt;
var ine = 4, ZAt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), WAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r._off = 0, r.hoverDataIdx = -1, r;
    }
    return e.prototype.getDefaultShape = function() {
      return new ZAt();
    }, e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.buildPath = function(t, r) {
      var i = r.points, o = r.size, s = this.symbolProxy, a = s.shape, l = t.getContext ? t.getContext() : t, u = l && o[0] < ine, c = this.softClipShape, h;
      if (u) {
        this._ctx = l;
        return;
      }
      for (this._ctx = null, h = this._off; h < i.length; ) {
        var f = i[h++], d = i[h++];
        isNaN(f) || isNaN(d) || c && !c.contain(f, d) || (a.x = f - o[0] / 2, a.y = d - o[1] / 2, a.width = o[0], a.height = o[1], s.buildPath(t, a, !0));
      }
      this.incremental && (this._off = h, this.notClear = !0);
    }, e.prototype.afterBrush = function() {
      var t = this.shape, r = t.points, i = t.size, o = this._ctx, s = this.softClipShape, a;
      if (o) {
        for (a = this._off; a < r.length; ) {
          var l = r[a++], u = r[a++];
          isNaN(l) || isNaN(u) || s && !s.contain(l, u) || o.fillRect(l - i[0] / 2, u - i[1] / 2, i[0], i[1]);
        }
        this.incremental && (this._off = a, this.notClear = !0);
      }
    }, e.prototype.findDataIndex = function(t, r) {
      for (var i = this.shape, o = i.points, s = i.size, a = Math.max(s[0], 4), l = Math.max(s[1], 4), u = o.length / 2 - 1; u >= 0; u--) {
        var c = u * 2, h = o[c] - a / 2, f = o[c + 1] - l / 2;
        if (t >= h && r >= f && t <= h + a && r <= f + l)
          return u;
      }
      return -1;
    }, e.prototype.contain = function(t, r) {
      var i = this.transformCoordToLocal(t, r), o = this.getBoundingRect();
      if (t = i[0], r = i[1], o.contain(t, r)) {
        var s = this.hoverDataIdx = this.findDataIndex(t, r);
        return s >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var t = this._rect;
      if (!t) {
        for (var r = this.shape, i = r.points, o = r.size, s = o[0], a = o[1], l = 1 / 0, u = 1 / 0, c = -1 / 0, h = -1 / 0, f = 0; f < i.length; ) {
          var d = i[f++], p = i[f++];
          l = Math.min(d, l), c = Math.max(d, c), u = Math.min(p, u), h = Math.max(p, h);
        }
        t = this._rect = new et(l - s / 2, u - a / 2, c - l + s, h - u + a);
      }
      return t;
    }, e;
  }(ct)
), GAt = (
  /** @class */
  function() {
    function n() {
      this.group = new Ve();
    }
    return n.prototype.updateData = function(e, t) {
      this._clear();
      var r = this._create();
      r.setShape({
        points: e.getLayout("points")
      }), this._setCommon(r, e, t);
    }, n.prototype.updateLayout = function(e) {
      var t = e.getLayout("points");
      this.group.eachChild(function(r) {
        if (r.startIndex != null) {
          var i = (r.endIndex - r.startIndex) * 2, o = r.startIndex * 4 * 2;
          t = new Float32Array(t.buffer, o, i);
        }
        r.setShape("points", t), r.reset();
      });
    }, n.prototype.incrementalPrepareUpdate = function(e) {
      this._clear();
    }, n.prototype.incrementalUpdate = function(e, t, r) {
      var i = this._newAdded[0], o = t.getLayout("points"), s = i && i.shape.points;
      if (s && s.length < 2e4) {
        var a = s.length, l = new Float32Array(a + o.length);
        l.set(s), l.set(o, a), i.endIndex = e.end, i.setShape({
          points: l
        });
      } else {
        this._newAdded = [];
        var u = this._create();
        u.startIndex = e.start, u.endIndex = e.end, u.incremental = !0, u.setShape({
          points: o
        }), this._setCommon(u, t, r);
      }
    }, n.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, n.prototype._create = function() {
      var e = new WAt({
        cursor: "default"
      });
      return e.ignoreCoarsePointer = !0, this.group.add(e), this._newAdded.push(e), e;
    }, n.prototype._setCommon = function(e, t, r) {
      var i = t.hostModel;
      r = r || {};
      var o = t.getVisual("symbolSize");
      e.setShape("size", o instanceof Array ? o : [o, o]), e.softClipShape = r.clipShape || null, e.symbolProxy = ar(t.getVisual("symbol"), 0, 0, 0, 0), e.setColor = e.symbolProxy.setColor;
      var s = e.shape.size[0] < ine;
      e.useStyle(
        // Draw shadow when doing fillRect is extremely slow.
        i.getModel("itemStyle").getItemStyle(s ? ["color", "shadowBlur", "shadowColor"] : ["color"])
      );
      var a = t.getVisual("style"), l = a && a.fill;
      l && e.setColor(l);
      var u = Fe(e);
      u.seriesIndex = i.seriesIndex, e.on("mousemove", function(c) {
        u.dataIndex = null;
        var h = e.hoverDataIdx;
        h >= 0 && (u.dataIndex = h + (e.startIndex || 0));
      });
    }, n.prototype.remove = function() {
      this._clear();
    }, n.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, n;
  }()
), jAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this._updateSymbolDraw(o, t);
      s.updateData(o, {
        // TODO
        // If this parameter should be a shape or a bounding volume
        // shape will be more general.
        // But bounding volume like bounding rect will be much faster in the contain calculation
        clipShape: this._getClipShape(t)
      }), this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      var o = t.getData(), s = this._updateSymbolDraw(o, t);
      s.incrementalPrepareUpdate(o), this._finished = !1;
    }, e.prototype.incrementalRender = function(t, r, i) {
      this._symbolDraw.incrementalUpdate(t, r.getData(), {
        clipShape: this._getClipShape(r)
      }), this._finished = t.end === r.getData().count();
    }, e.prototype.updateTransform = function(t, r, i) {
      var o = t.getData();
      if (this.group.dirty(), !this._finished || o.count() > 1e4)
        return {
          update: !0
        };
      var s = Ib("").reset(t, r, i);
      s.progress && s.progress({
        start: 0,
        end: o.count(),
        count: o.count()
      }, o), this._symbolDraw.updateLayout(o);
    }, e.prototype.eachRendered = function(t) {
      this._symbolDraw && this._symbolDraw.eachRendered(t);
    }, e.prototype._getClipShape = function(t) {
      if (t.get("clip", !0)) {
        var r = t.coordinateSystem;
        return r && r.getArea && r.getArea(0.1);
      }
    }, e.prototype._updateSymbolDraw = function(t, r) {
      var i = this._symbolDraw, o = r.pipelineContext, s = o.large;
      return (!i || s !== this._isLargeDraw) && (i && i.remove(), i = this._symbolDraw = s ? new GAt() : new Db(), this._isLargeDraw = s, this.group.removeAll()), this.group.add(i.group), i;
    }, e.prototype.remove = function(t, r) {
      this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null;
    }, e.prototype.dispose = function() {
    }, e.type = "scatter", e;
  }(dn)
);
const HAt = jAt;
var qAt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.type = "grid", e.dependencies = ["xAxis", "yAxis"], e.layoutMode = "box", e.defaultOption = {
      show: !1,
      // zlevel: 0,
      z: 0,
      left: "10%",
      top: 60,
      right: "10%",
      bottom: 70,
      // If grid size contain label
      containLabel: !1,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      backgroundColor: "rgba(0,0,0,0)",
      borderWidth: 1,
      borderColor: "#ccc"
    }, e;
  }(Ot)
);
const YAt = qAt;
var LM = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("grid", nr).models[0];
    }, e.type = "cartesian2dAxis", e;
  }(Ot)
);
lr(LM, kb);
var one = {
  show: !0,
  // zlevel: 0,
  z: 0,
  // Inverse the axis.
  inverse: !1,
  // Axis name displayed.
  name: "",
  // 'start' | 'middle' | 'end'
  nameLocation: "end",
  // By degree. By default auto rotate by nameLocation.
  nameRotate: null,
  nameTruncate: {
    maxWidth: null,
    ellipsis: "...",
    placeholder: "."
  },
  // Use global text style by default.
  nameTextStyle: {},
  // The gap between axisName and axisLine.
  nameGap: 15,
  // Default `false` to support tooltip.
  silent: !1,
  // Default `false` to avoid legacy user event listener fail.
  triggerEvent: !1,
  tooltip: {
    show: !1
  },
  axisPointer: {},
  axisLine: {
    show: !0,
    onZero: !0,
    onZeroAxisIndex: null,
    lineStyle: {
      color: "#6E7079",
      width: 1,
      type: "solid"
    },
    // The arrow at both ends the the axis.
    symbol: ["none", "none"],
    symbolSize: [10, 15]
  },
  axisTick: {
    show: !0,
    // Whether axisTick is inside the grid or outside the grid.
    inside: !1,
    // The length of axisTick.
    length: 5,
    lineStyle: {
      width: 1
    }
  },
  axisLabel: {
    show: !0,
    // Whether axisLabel is inside the grid or outside the grid.
    inside: !1,
    rotate: 0,
    // true | false | null/undefined (auto)
    showMinLabel: null,
    // true | false | null/undefined (auto)
    showMaxLabel: null,
    margin: 8,
    // formatter: null,
    fontSize: 12
  },
  splitLine: {
    show: !0,
    lineStyle: {
      color: ["#E0E6F1"],
      width: 1,
      type: "solid"
    }
  },
  splitArea: {
    show: !1,
    areaStyle: {
      color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
    }
  }
}, XAt = Je({
  // The gap at both ends of the axis. For categoryAxis, boolean.
  boundaryGap: !0,
  // Set false to faster category collection.
  deduplication: null,
  // splitArea: {
  // show: false
  // },
  splitLine: {
    show: !1
  },
  axisTick: {
    // If tick is align with label when boundaryGap is true
    alignWithLabel: !1,
    interval: "auto"
  },
  axisLabel: {
    interval: "auto"
  }
}, one), ZR = Je({
  boundaryGap: [0, 0],
  axisLine: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  axisTick: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  // TODO
  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
  splitNumber: 5,
  minorTick: {
    // Minor tick, not available for cateogry axis.
    show: !1,
    // Split number of minor ticks. The value should be in range of (0, 100)
    splitNumber: 5,
    // Length of minor tick
    length: 3,
    // Line style
    lineStyle: {
      // Default to be same with axisTick
    }
  },
  minorSplitLine: {
    show: !1,
    lineStyle: {
      color: "#F4F7FD",
      width: 1
    }
  }
}, one), UAt = Je({
  splitNumber: 6,
  axisLabel: {
    // To eliminate labels that are not nice
    showMinLabel: !1,
    showMaxLabel: !1,
    rich: {
      primary: {
        fontWeight: "bold"
      }
    }
  },
  splitLine: {
    show: !1
  }
}, ZR), KAt = Le({
  logBase: 10
}, ZR);
const sne = {
  category: XAt,
  value: ZR,
  time: UAt,
  log: KAt
};
var JAt = {
  value: 1,
  category: 1,
  time: 1,
  log: 1
};
function Ng(n, e, t, r) {
  I(JAt, function(i, o) {
    var s = Je(Je({}, sne[o], !0), r, !0), a = (
      /** @class */
      function(l) {
        j(u, l);
        function u() {
          var c = l !== null && l.apply(this, arguments) || this;
          return c.type = e + "Axis." + o, c;
        }
        return u.prototype.mergeDefaultAndTheme = function(c, h) {
          var f = S0(this), d = f ? bv(c) : {}, p = h.getTheme();
          Je(c, p.get(o + "Axis")), Je(c, this.getDefaultOption()), c.type = R6(c), f && zc(c, d, f);
        }, u.prototype.optionUpdated = function() {
          var c = this.option;
          c.type === "category" && (this.__ordinalMeta = AM.createByAxisModel(this));
        }, u.prototype.getCategories = function(c) {
          var h = this.option;
          if (h.type === "category")
            return c ? h.data : this.__ordinalMeta.categories;
        }, u.prototype.getOrdinalMeta = function() {
          return this.__ordinalMeta;
        }, u.type = e + "Axis." + o, u.defaultOption = s, u;
      }(t)
    );
    n.registerComponentModel(a);
  }), n.registerSubTypeDefaulter(e + "Axis", R6);
}
function R6(n) {
  return n.type || (n.data ? "category" : "value");
}
var eTt = (
  /** @class */
  function() {
    function n(e) {
      this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = e || "";
    }
    return n.prototype.getAxis = function(e) {
      return this._axes[e];
    }, n.prototype.getAxes = function() {
      return ae(this._dimList, function(e) {
        return this._axes[e];
      }, this);
    }, n.prototype.getAxesByScale = function(e) {
      return e = e.toLowerCase(), Gt(this.getAxes(), function(t) {
        return t.scale.type === e;
      });
    }, n.prototype.addAxis = function(e) {
      var t = e.dim;
      this._axes[t] = e, this._dimList.push(t);
    }, n;
  }()
);
const tTt = eTt;
var IM = ["x", "y"];
function $6(n) {
  return n.type === "interval" || n.type === "time";
}
var nTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "cartesian2d", t.dimensions = IM, t;
    }
    return e.prototype.calcAffineTransform = function() {
      this._transform = this._invTransform = null;
      var t = this.getAxis("x").scale, r = this.getAxis("y").scale;
      if (!(!$6(t) || !$6(r))) {
        var i = t.getExtent(), o = r.getExtent(), s = this.dataToPoint([i[0], o[0]]), a = this.dataToPoint([i[1], o[1]]), l = i[1] - i[0], u = o[1] - o[0];
        if (!(!l || !u)) {
          var c = (a[0] - s[0]) / l, h = (a[1] - s[1]) / u, f = s[0] - i[0] * c, d = s[1] - o[0] * h, p = this._transform = [c, 0, 0, h, f, d];
          this._invTransform = hv([], p);
        }
      }
    }, e.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
    }, e.prototype.containPoint = function(t) {
      var r = this.getAxis("x"), i = this.getAxis("y");
      return r.contain(r.toLocalCoord(t[0])) && i.contain(i.toLocalCoord(t[1]));
    }, e.prototype.containData = function(t) {
      return this.getAxis("x").containData(t[0]) && this.getAxis("y").containData(t[1]);
    }, e.prototype.containZone = function(t, r) {
      var i = this.dataToPoint(t), o = this.dataToPoint(r), s = this.getArea(), a = new et(i[0], i[1], o[0] - i[0], o[1] - i[1]);
      return s.intersect(a);
    }, e.prototype.dataToPoint = function(t, r, i) {
      i = i || [];
      var o = t[0], s = t[1];
      if (this._transform && o != null && isFinite(o) && s != null && isFinite(s))
        return si(i, t, this._transform);
      var a = this.getAxis("x"), l = this.getAxis("y");
      return i[0] = a.toGlobalCoord(a.dataToCoord(o, r)), i[1] = l.toGlobalCoord(l.dataToCoord(s, r)), i;
    }, e.prototype.clampData = function(t, r) {
      var i = this.getAxis("x").scale, o = this.getAxis("y").scale, s = i.getExtent(), a = o.getExtent(), l = i.parse(t[0]), u = o.parse(t[1]);
      return r = r || [], r[0] = Math.min(Math.max(Math.min(s[0], s[1]), l), Math.max(s[0], s[1])), r[1] = Math.min(Math.max(Math.min(a[0], a[1]), u), Math.max(a[0], a[1])), r;
    }, e.prototype.pointToData = function(t, r) {
      var i = [];
      if (this._invTransform)
        return si(i, t, this._invTransform);
      var o = this.getAxis("x"), s = this.getAxis("y");
      return i[0] = o.coordToData(o.toLocalCoord(t[0]), r), i[1] = s.coordToData(s.toLocalCoord(t[1]), r), i;
    }, e.prototype.getOtherAxis = function(t) {
      return this.getAxis(t.dim === "x" ? "y" : "x");
    }, e.prototype.getArea = function(t) {
      t = t || 0;
      var r = this.getAxis("x").getGlobalExtent(), i = this.getAxis("y").getGlobalExtent(), o = Math.min(r[0], r[1]) - t, s = Math.min(i[0], i[1]) - t, a = Math.max(r[0], r[1]) - o + t, l = Math.max(i[0], i[1]) - s + t;
      return new et(o, s, a, l);
    }, e;
  }(tTt)
), rTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o, s) {
      var a = n.call(this, t, r, i) || this;
      return a.index = 0, a.type = o || "value", a.position = s || "bottom", a;
    }
    return e.prototype.isHorizontal = function() {
      var t = this.position;
      return t === "top" || t === "bottom";
    }, e.prototype.getGlobalExtent = function(t) {
      var r = this.getExtent();
      return r[0] = this.toGlobalCoord(r[0]), r[1] = this.toGlobalCoord(r[1]), t && r[0] > r[1] && r.reverse(), r;
    }, e.prototype.pointToData = function(t, r) {
      return this.coordToData(this.toLocalCoord(t[this.dim === "x" ? 0 : 1]), r);
    }, e.prototype.setCategorySortInfo = function(t) {
      if (this.type !== "category")
        return !1;
      this.model.option.categorySortInfo = t, this.scale.setSortInfo(t);
    }, e;
  }(ba)
);
const iTt = rTt;
function RM(n, e, t) {
  t = t || {};
  var r = n.coordinateSystem, i = e.axis, o = {}, s = i.getAxesOnZeroOf()[0], a = i.position, l = s ? "onZero" : a, u = i.dim, c = r.getRect(), h = [c.x, c.x + c.width, c.y, c.y + c.height], f = {
    left: 0,
    right: 1,
    top: 0,
    bottom: 1,
    onZero: 2
  }, d = e.get("offset") || 0, p = u === "x" ? [h[2] - d, h[3] + d] : [h[0] - d, h[1] + d];
  if (s) {
    var g = s.toGlobalCoord(s.dataToCoord(0));
    p[f.onZero] = Math.max(Math.min(g, p[1]), p[0]);
  }
  o.position = [u === "y" ? p[f[l]] : h[0], u === "x" ? p[f[l]] : h[3]], o.rotation = Math.PI / 2 * (u === "x" ? 0 : 1);
  var v = {
    top: -1,
    bottom: 1,
    left: -1,
    right: 1
  };
  o.labelDirection = o.tickDirection = o.nameDirection = v[a], o.labelOffset = s ? p[f[a]] - p[f.onZero] : 0, e.get(["axisTick", "inside"]) && (o.tickDirection = -o.tickDirection), tr(t.labelInside, e.get(["axisLabel", "inside"])) && (o.labelDirection = -o.labelDirection);
  var m = e.get(["axisLabel", "rotate"]);
  return o.labelRotate = l === "top" ? -m : m, o.z2 = 1, o;
}
function N6(n) {
  return n.get("coordinateSystem") === "cartesian2d";
}
function B6(n) {
  var e = {
    xAxisModel: null,
    yAxisModel: null
  };
  return I(e, function(t, r) {
    var i = r.replace(/Model$/, ""), o = n.getReferringComponents(i, nr).models[0];
    if (process.env.NODE_ENV !== "production" && !o)
      throw new Error(i + ' "' + ys(n.get(i + "Index"), n.get(i + "Id"), 0) + '" not found');
    e[r] = o;
  }), e;
}
var pT = Math.log;
function ane(n, e, t) {
  var r = Qc.prototype, i = r.getTicks.call(t), o = r.getTicks.call(t, !0), s = i.length - 1, a = r.getInterval.call(t), l = fte(n, e), u = l.extent, c = l.fixMin, h = l.fixMax;
  if (n.type === "log") {
    var f = pT(n.base);
    u = [pT(u[0]) / f, pT(u[1]) / f];
  }
  n.setExtent(u[0], u[1]), n.calcNiceExtent({
    splitNumber: s,
    fixMin: c,
    fixMax: h
  });
  var d = r.getExtent.call(n);
  c && (u[0] = d[0]), h && (u[1] = d[1]);
  var p = r.getInterval.call(n), g = u[0], v = u[1];
  if (c && h)
    p = (v - g) / s;
  else if (c)
    for (v = u[0] + p * s; v < u[1] && isFinite(v) && isFinite(u[1]); )
      p = JA(p), v = u[0] + p * s;
  else if (h)
    for (g = u[1] - p * s; g > u[0] && isFinite(g) && isFinite(u[0]); )
      p = JA(p), g = u[1] - p * s;
  else {
    var m = n.getTicks().length - 1;
    m > s && (p = JA(p));
    var y = p * s;
    v = Math.ceil(u[1] / p) * p, g = zn(v - y), g < 0 && u[0] >= 0 ? (g = 0, v = zn(y)) : v > 0 && u[1] <= 0 && (v = 0, g = -zn(y));
  }
  var b = (i[0].value - o[0].value) / a, O = (i[s].value - o[s].value) / a;
  if (r.setExtent.call(n, g + p * b, v + p * O), r.setInterval.call(n, p), (b || O) && r.setNiceExtent.call(n, g + p, v - p), process.env.NODE_ENV !== "production") {
    var w = r.getTicks.call(n);
    w[1] && (!K_t(p) || Uk(w[1].value) > Uk(p)) && En(
      // eslint-disable-next-line
      "The ticks may be not readable when set min: " + e.get("min") + ", max: " + e.get("max") + " and alignTicks: true"
    );
  }
}
var oTt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = IM, this._initCartesian(e, t, r), this.model = e;
    }
    return n.prototype.getRect = function() {
      return this._rect;
    }, n.prototype.update = function(e, t) {
      var r = this._axesMap;
      this._updateScale(e, this.model);
      function i(s) {
        var a, l = ft(s), u = l.length;
        if (u) {
          for (var c = [], h = u - 1; h >= 0; h--) {
            var f = +l[h], d = s[f], p = d.model, g = d.scale;
            // Only value and log axis without interval support alignTicks.
            TM(g) && p.get("alignTicks") && p.get("interval") == null ? c.push(d) : (Rg(g, p), TM(g) && (a = d));
          }
          c.length && (a || (a = c.pop(), Rg(a.scale, a.model)), I(c, function(v) {
            ane(v.scale, v.model, a.scale);
          }));
        }
      }
      i(r.x), i(r.y);
      var o = {};
      I(r.x, function(s) {
        V6(r, "y", s, o);
      }), I(r.y, function(s) {
        V6(r, "x", s, o);
      }), this.resize(this.model, t);
    }, n.prototype.resize = function(e, t, r) {
      var i = e.getBoxLayoutParams(), o = !r && e.get("containLabel"), s = mr(i, {
        width: t.getWidth(),
        height: t.getHeight()
      });
      this._rect = s;
      var a = this._axesList;
      l(), o && (I(a, function(u) {
        if (!u.model.get(["axisLabel", "inside"])) {
          var c = SCt(u);
          if (c) {
            var h = u.isHorizontal() ? "height" : "width", f = u.model.get(["axisLabel", "margin"]);
            s[h] -= c[h] + f, u.position === "top" ? s.y += c.height + f : u.position === "left" && (s.x += c.width + f);
          }
        }
      }), l()), I(this._coordsList, function(u) {
        u.calcAffineTransform();
      });
      function l() {
        I(a, function(u) {
          var c = u.isHorizontal(), h = c ? [0, s.width] : [0, s.height], f = u.inverse ? 1 : 0;
          u.setExtent(h[f], h[1 - f]), sTt(u, c ? s.x : s.y);
        });
      }
    }, n.prototype.getAxis = function(e, t) {
      var r = this._axesMap[e];
      if (r != null)
        return r[t || 0];
    }, n.prototype.getAxes = function() {
      return this._axesList.slice();
    }, n.prototype.getCartesian = function(e, t) {
      if (e != null && t != null) {
        var r = "x" + e + "y" + t;
        return this._coordsMap[r];
      }
      Me(e) && (t = e.yAxisIndex, e = e.xAxisIndex);
      for (var i = 0, o = this._coordsList; i < o.length; i++)
        if (o[i].getAxis("x").index === e || o[i].getAxis("y").index === t)
          return o[i];
    }, n.prototype.getCartesians = function() {
      return this._coordsList.slice();
    }, n.prototype.convertToPixel = function(e, t, r) {
      var i = this._findConvertTarget(t);
      return i.cartesian ? i.cartesian.dataToPoint(r) : i.axis ? i.axis.toGlobalCoord(i.axis.dataToCoord(r)) : null;
    }, n.prototype.convertFromPixel = function(e, t, r) {
      var i = this._findConvertTarget(t);
      return i.cartesian ? i.cartesian.pointToData(r) : i.axis ? i.axis.coordToData(i.axis.toLocalCoord(r)) : null;
    }, n.prototype._findConvertTarget = function(e) {
      var t = e.seriesModel, r = e.xAxisModel || t && t.getReferringComponents("xAxis", nr).models[0], i = e.yAxisModel || t && t.getReferringComponents("yAxis", nr).models[0], o = e.gridModel, s = this._coordsList, a, l;
      if (t)
        a = t.coordinateSystem, ot(s, a) < 0 && (a = null);
      else if (r && i)
        a = this.getCartesian(r.componentIndex, i.componentIndex);
      else if (r)
        l = this.getAxis("x", r.componentIndex);
      else if (i)
        l = this.getAxis("y", i.componentIndex);
      else if (o) {
        var u = o.coordinateSystem;
        u === this && (a = this._coordsList[0]);
      }
      return {
        cartesian: a,
        axis: l
      };
    }, n.prototype.containPoint = function(e) {
      var t = this._coordsList[0];
      if (t)
        return t.containPoint(e);
    }, n.prototype._initCartesian = function(e, t, r) {
      var i = this, o = this, s = {
        left: !1,
        right: !1,
        top: !1,
        bottom: !1
      }, a = {
        x: {},
        y: {}
      }, l = {
        x: 0,
        y: 0
      };
      if (t.eachComponent("xAxis", u("x"), this), t.eachComponent("yAxis", u("y"), this), !l.x || !l.y) {
        this._axesMap = {}, this._axesList = [];
        return;
      }
      this._axesMap = a, I(a.x, function(c, h) {
        I(a.y, function(f, d) {
          var p = "x" + h + "y" + d, g = new nTt(p);
          g.master = i, g.model = e, i._coordsMap[p] = g, i._coordsList.push(g), g.addAxis(c), g.addAxis(f);
        });
      });
      function u(c) {
        return function(h, f) {
          if (gT(h, e)) {
            var d = h.get("position");
            c === "x" ? d !== "top" && d !== "bottom" && (d = s.bottom ? "top" : "bottom") : d !== "left" && d !== "right" && (d = s.left ? "right" : "left"), s[d] = !0;
            var p = new iTt(c, wC(h), [0, 0], h.get("type"), d), g = p.type === "category";
            p.onBand = g && h.get("boundaryGap"), p.inverse = h.get("inverse"), h.axis = p, p.model = h, p.grid = o, p.index = f, o._axesList.push(p), a[c][f] = p, l[c]++;
          }
        };
      }
    }, n.prototype._updateScale = function(e, t) {
      I(this._axesList, function(i) {
        if (i.scale.setExtent(1 / 0, -1 / 0), i.type === "category") {
          var o = i.model.get("categorySortInfo");
          i.scale.setSortInfo(o);
        }
      }), e.eachSeries(function(i) {
        if (N6(i)) {
          var o = B6(i), s = o.xAxisModel, a = o.yAxisModel;
          if (!gT(s, t) || !gT(a, t))
            return;
          var l = this.getCartesian(s.componentIndex, a.componentIndex), u = i.getData(), c = l.getAxis("x"), h = l.getAxis("y");
          r(u, c), r(u, h);
        }
      }, this);
      function r(i, o) {
        I(cS(i, o.dim), function(s) {
          o.scale.unionExtentFromData(i, s);
        });
      }
    }, n.prototype.getTooltipAxes = function(e) {
      var t = [], r = [];
      return I(this.getCartesians(), function(i) {
        var o = e != null && e !== "auto" ? i.getAxis(e) : i.getBaseAxis(), s = i.getOtherAxis(o);
        ot(t, o) < 0 && t.push(o), ot(r, s) < 0 && r.push(s);
      }), {
        baseAxes: t,
        otherAxes: r
      };
    }, n.create = function(e, t) {
      var r = [];
      return e.eachComponent("grid", function(i, o) {
        var s = new n(i, e, t);
        s.name = "grid_" + o, s.resize(i, t, !0), i.coordinateSystem = s, r.push(s);
      }), e.eachSeries(function(i) {
        if (N6(i)) {
          var o = B6(i), s = o.xAxisModel, a = o.yAxisModel, l = s.getCoordSysModel();
          if (process.env.NODE_ENV !== "production") {
            if (!l)
              throw new Error('Grid "' + ys(s.get("gridIndex"), s.get("gridId"), 0) + '" not found');
            if (s.getCoordSysModel() !== a.getCoordSysModel())
              throw new Error("xAxis and yAxis must use the same grid");
          }
          var u = l.coordinateSystem;
          i.coordinateSystem = u.getCartesian(s.componentIndex, a.componentIndex);
        }
      }), r;
    }, n.dimensions = IM, n;
  }()
);
function gT(n, e) {
  return n.getCoordSysModel() === e;
}
function V6(n, e, t, r) {
  t.getAxesOnZeroOf = function() {
    return o ? [o] : [];
  };
  var i = n[e], o, s = t.model, a = s.get(["axisLine", "onZero"]), l = s.get(["axisLine", "onZeroAxisIndex"]);
  if (!a)
    return;
  if (l != null)
    z6(i[l]) && (o = i[l]);
  else
    for (var u in i)
      if (i.hasOwnProperty(u) && z6(i[u]) && !r[c(i[u])]) {
        o = i[u];
        break;
      }
  o && (r[c(o)] = !0);
  function c(h) {
    return h.dim + "_" + h.index;
  }
}
function z6(n) {
  return n && n.type !== "category" && n.type !== "time" && xCt(n);
}
function sTt(n, e) {
  var t = n.getExtent(), r = t[0] + t[1];
  n.toGlobalCoord = n.dim === "x" ? function(i) {
    return i + e;
  } : function(i) {
    return r - i + e;
  }, n.toLocalCoord = n.dim === "x" ? function(i) {
    return i - e;
  } : function(i) {
    return r - i + e;
  };
}
const aTt = oTt;
var cc = Math.PI, Vi = (
  /** @class */
  function() {
    function n(e, t) {
      this.group = new Ve(), this.opt = t, this.axisModel = e, Le(t, {
        labelOffset: 0,
        nameDirection: 1,
        tickDirection: 1,
        labelDirection: 1,
        silent: !0,
        handleAutoShown: function() {
          return !0;
        }
      });
      var r = new Ve({
        x: t.position[0],
        y: t.position[1],
        rotation: t.rotation
      });
      r.updateTransform(), this._transformGroup = r;
    }
    return n.prototype.hasBuilder = function(e) {
      return !!F6[e];
    }, n.prototype.add = function(e) {
      F6[e](this.opt, this.axisModel, this.group, this._transformGroup);
    }, n.prototype.getGroup = function() {
      return this.group;
    }, n.innerTextLayout = function(e, t, r) {
      var i = gK(t - e), o, s;
      return y0(i) ? (s = r > 0 ? "top" : "bottom", o = "center") : y0(i - cc) ? (s = r > 0 ? "bottom" : "top", o = "center") : (s = "middle", i > 0 && i < cc ? o = r > 0 ? "right" : "left" : o = r > 0 ? "left" : "right"), {
        rotation: i,
        textAlign: o,
        textVerticalAlign: s
      };
    }, n.makeAxisEventDataBase = function(e) {
      var t = {
        componentType: e.mainType,
        componentIndex: e.componentIndex
      };
      return t[e.mainType + "Index"] = e.componentIndex, t;
    }, n.isLabelSilent = function(e) {
      var t = e.get("tooltip");
      return e.get("silent") || !(e.get("triggerEvent") || t && t.show);
    }, n;
  }()
), F6 = {
  axisLine: function(n, e, t, r) {
    var i = e.get(["axisLine", "show"]);
    if (i === "auto" && n.handleAutoShown && (i = n.handleAutoShown("axisLine")), !!i) {
      var o = e.axis.getExtent(), s = r.transform, a = [o[0], 0], l = [o[1], 0], u = a[0] > l[0];
      s && (si(a, a, s), si(l, l, s));
      var c = te({
        lineCap: "round"
      }, e.getModel(["axisLine", "lineStyle"]).getLineStyle()), h = new Ar({
        shape: {
          x1: a[0],
          y1: a[1],
          x2: l[0],
          y2: l[1]
        },
        style: c,
        strokeContainThreshold: n.strokeContainThreshold || 5,
        silent: !0,
        z2: 1
      });
      Dg(h.shape, h.style.lineWidth), h.anid = "line", t.add(h);
      var f = e.get(["axisLine", "symbol"]);
      if (f != null) {
        var d = e.get(["axisLine", "symbolSize"]);
        be(f) && (f = [f, f]), (be(d) || Tt(d)) && (d = [d, d]);
        var p = Od(e.get(["axisLine", "symbolOffset"]) || 0, d), g = d[0], v = d[1];
        I([{
          rotate: n.rotation + Math.PI / 2,
          offset: p[0],
          r: 0
        }, {
          rotate: n.rotation - Math.PI / 2,
          offset: p[1],
          r: Math.sqrt((a[0] - l[0]) * (a[0] - l[0]) + (a[1] - l[1]) * (a[1] - l[1]))
        }], function(m, y) {
          if (f[y] !== "none" && f[y] != null) {
            var b = ar(f[y], -g / 2, -v / 2, g, v, c.stroke, !0), O = m.r + m.offset, w = u ? l : a;
            b.attr({
              rotation: m.rotate,
              x: w[0] + O * Math.cos(n.rotation),
              y: w[1] - O * Math.sin(n.rotation),
              silent: !0,
              z2: 11
            }), t.add(b);
          }
        });
      }
    }
  },
  axisTickLabel: function(n, e, t, r) {
    var i = cTt(t, r, e, n), o = fTt(t, r, e, n);
    if (uTt(e, o, i), hTt(t, r, e, n.tickDirection), e.get(["axisLabel", "hideOverlap"])) {
      var s = Cte(ae(o, function(a) {
        return {
          label: a,
          priority: a.z2,
          defaultAttr: {
            ignore: a.ignore
          }
        };
      }));
      Pte(s);
    }
  },
  axisName: function(n, e, t, r) {
    var i = tr(n.axisName, e.get("name"));
    if (i) {
      var o = e.get("nameLocation"), s = n.nameDirection, a = e.getModel("nameTextStyle"), l = e.get("nameGap") || 0, u = e.axis.getExtent(), c = u[0] > u[1] ? -1 : 1, h = [
        o === "start" ? u[0] - c * l : o === "end" ? u[1] + c * l : (u[0] + u[1]) / 2,
        // Reuse labelOffset.
        Z6(o) ? n.labelOffset + s * l : 0
      ], f, d = e.get("nameRotate");
      d != null && (d = d * cc / 180);
      var p;
      Z6(o) ? f = Vi.innerTextLayout(
        n.rotation,
        d ?? n.rotation,
        // Adapt to axis.
        s
      ) : (f = lTt(n.rotation, o, d || 0, u), p = n.axisNameAvailableWidth, p != null && (p = Math.abs(p / Math.sin(f.rotation)), !isFinite(p) && (p = null)));
      var g = a.getFont(), v = e.get("nameTruncate", !0) || {}, m = v.ellipsis, y = tr(n.nameTruncateMaxWidth, v.maxWidth, p), b = new At({
        x: h[0],
        y: h[1],
        rotation: f.rotation,
        silent: Vi.isLabelSilent(e),
        style: hn(a, {
          text: i,
          font: g,
          overflow: "truncate",
          width: y,
          ellipsis: m,
          fill: a.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          align: a.get("align") || f.textAlign,
          verticalAlign: a.get("verticalAlign") || f.textVerticalAlign
        }),
        z2: 1
      });
      if (gv({
        el: b,
        componentModel: e,
        itemName: i
      }), b.__fullText = i, b.anid = "name", e.get("triggerEvent")) {
        var O = Vi.makeAxisEventDataBase(e);
        O.targetType = "axisName", O.name = i, Fe(b).eventData = O;
      }
      r.add(b), b.updateTransform(), t.add(b), b.decomposeTransform();
    }
  }
};
function lTt(n, e, t, r) {
  var i = gK(t - n), o, s, a = r[0] > r[1], l = e === "start" && !a || e !== "start" && a;
  return y0(i - cc / 2) ? (s = l ? "bottom" : "top", o = "center") : y0(i - cc * 1.5) ? (s = l ? "top" : "bottom", o = "center") : (s = "middle", i < cc * 1.5 && i > cc / 2 ? o = l ? "left" : "right" : o = l ? "right" : "left"), {
    rotation: i,
    textAlign: o,
    textVerticalAlign: s
  };
}
function uTt(n, e, t) {
  if (!dte(n.axis)) {
    var r = n.get(["axisLabel", "showMinLabel"]), i = n.get(["axisLabel", "showMaxLabel"]);
    e = e || [], t = t || [];
    var o = e[0], s = e[1], a = e[e.length - 1], l = e[e.length - 2], u = t[0], c = t[1], h = t[t.length - 1], f = t[t.length - 2];
    r === !1 ? (Ho(o), Ho(u)) : Q6(o, s) && (r ? (Ho(s), Ho(c)) : (Ho(o), Ho(u))), i === !1 ? (Ho(a), Ho(h)) : Q6(l, a) && (i ? (Ho(l), Ho(f)) : (Ho(a), Ho(h)));
  }
}
function Ho(n) {
  n && (n.ignore = !0);
}
function Q6(n, e) {
  var t = n && n.getBoundingRect().clone(), r = e && e.getBoundingRect().clone();
  if (!(!t || !r)) {
    var i = j_([]);
    return md(i, i, -n.rotation), t.applyTransform(Gl([], i, n.getLocalTransform())), r.applyTransform(Gl([], i, e.getLocalTransform())), t.intersect(r);
  }
}
function Z6(n) {
  return n === "middle" || n === "center";
}
function lne(n, e, t, r, i) {
  for (var o = [], s = [], a = [], l = 0; l < n.length; l++) {
    var u = n[l].coord;
    s[0] = u, s[1] = 0, a[0] = u, a[1] = t, e && (si(s, s, e), si(a, a, e));
    var c = new Ar({
      shape: {
        x1: s[0],
        y1: s[1],
        x2: a[0],
        y2: a[1]
      },
      style: r,
      z2: 2,
      autoBatch: !0,
      silent: !0
    });
    Dg(c.shape, c.style.lineWidth), c.anid = i + "_" + n[l].tickValue, o.push(c);
  }
  return o;
}
function cTt(n, e, t, r) {
  var i = t.axis, o = t.getModel("axisTick"), s = o.get("show");
  if (s === "auto" && r.handleAutoShown && (s = r.handleAutoShown("axisTick")), !(!s || i.scale.isBlank())) {
    for (var a = o.getModel("lineStyle"), l = r.tickDirection * o.get("length"), u = i.getTicksCoords(), c = lne(u, e.transform, l, Le(a.getLineStyle(), {
      stroke: t.get(["axisLine", "lineStyle", "color"])
    }), "ticks"), h = 0; h < c.length; h++)
      n.add(c[h]);
    return c;
  }
}
function hTt(n, e, t, r) {
  var i = t.axis, o = t.getModel("minorTick");
  if (!(!o.get("show") || i.scale.isBlank())) {
    var s = i.getMinorTicksCoords();
    if (s.length)
      for (var a = o.getModel("lineStyle"), l = r * o.get("length"), u = Le(a.getLineStyle(), Le(t.getModel("axisTick").getLineStyle(), {
        stroke: t.get(["axisLine", "lineStyle", "color"])
      })), c = 0; c < s.length; c++)
        for (var h = lne(s[c], e.transform, l, u, "minorticks_" + c), f = 0; f < h.length; f++)
          n.add(h[f]);
  }
}
function fTt(n, e, t, r) {
  var i = t.axis, o = tr(r.axisLabelShow, t.get(["axisLabel", "show"]));
  if (!(!o || i.scale.isBlank())) {
    var s = t.getModel("axisLabel"), a = s.get("margin"), l = i.getViewLabels(), u = (tr(r.labelRotate, s.get("rotate")) || 0) * cc / 180, c = Vi.innerTextLayout(r.rotation, u, r.labelDirection), h = t.getCategories && t.getCategories(!0), f = [], d = Vi.isLabelSilent(t), p = t.get("triggerEvent");
    return I(l, function(g, v) {
      var m = i.scale.type === "ordinal" ? i.scale.getRawOrdinalNumber(g.tickValue) : g.tickValue, y = g.formattedLabel, b = g.rawLabel, O = s;
      if (h && h[m]) {
        var w = h[m];
        Me(w) && w.textStyle && (O = new fn(w.textStyle, s, t.ecModel));
      }
      var x = O.getTextColor() || t.get(["axisLine", "lineStyle", "color"]), S = i.dataToCoord(m), _ = O.getShallow("align", !0) || c.textAlign, C = Qe(O.getShallow("alignMinLabel", !0), _), A = Qe(O.getShallow("alignMaxLabel", !0), _), T = O.getShallow("verticalAlign", !0) || O.getShallow("baseline", !0) || c.textVerticalAlign, k = Qe(O.getShallow("verticalAlignMinLabel", !0), T), L = Qe(O.getShallow("verticalAlignMaxLabel", !0), T), D = new At({
        x: S,
        y: r.labelOffset + r.labelDirection * a,
        rotation: c.rotation,
        silent: d,
        z2: 10 + (g.level || 0),
        style: hn(O, {
          text: y,
          align: v === 0 ? C : v === l.length - 1 ? A : _,
          verticalAlign: v === 0 ? k : v === l.length - 1 ? L : T,
          fill: Pe(x) ? x(
            // (1) In category axis with data zoom, tick is not the original
            // index of axis.data. So tick should not be exposed to user
            // in category axis.
            // (2) Compatible with previous version, which always use formatted label as
            // input. But in interval scale the formatted label is like '223,445', which
            // maked user replace ','. So we modify it to return original val but remain
            // it as 'string' to avoid error in replacing.
            i.type === "category" ? b : i.type === "value" ? m + "" : m,
            v
          ) : x
        })
      });
      if (D.anid = "label_" + m, p) {
        var E = Vi.makeAxisEventDataBase(t);
        E.targetType = "axisLabel", E.value = b, E.tickIndex = v, i.type === "category" && (E.dataIndex = m), Fe(D).eventData = E;
      }
      e.add(D), D.updateTransform(), f.push(D), n.add(D), D.decomposeTransform();
    }), f;
  }
}
function dTt(n, e) {
  var t = {
    /**
     * key: makeKey(axis.model)
     * value: {
     *      axis,
     *      coordSys,
     *      axisPointerModel,
     *      triggerTooltip,
     *      triggerEmphasis,
     *      involveSeries,
     *      snap,
     *      seriesModels,
     *      seriesDataCount
     * }
     */
    axesInfo: {},
    seriesInvolved: !1,
    /**
     * key: makeKey(coordSys.model)
     * value: Object: key makeKey(axis.model), value: axisInfo
     */
    coordSysAxesInfo: {},
    coordSysMap: {}
  };
  return pTt(t, n, e), t.seriesInvolved && vTt(t, n), t;
}
function pTt(n, e, t) {
  var r = e.getComponent("tooltip"), i = e.getComponent("axisPointer"), o = i.get("link", !0) || [], s = [];
  I(t.getCoordinateSystems(), function(a) {
    if (!a.axisPointerEnabled)
      return;
    var l = D0(a.model), u = n.coordSysAxesInfo[l] = {};
    n.coordSysMap[l] = a;
    var c = a.model, h = c.getModel("tooltip", r);
    if (I(a.getAxes(), je(g, !1, null)), a.getTooltipAxes && r && h.get("show")) {
      var f = h.get("trigger") === "axis", d = h.get(["axisPointer", "type"]) === "cross", p = a.getTooltipAxes(h.get(["axisPointer", "axis"]));
      (f || d) && I(p.baseAxes, je(g, d ? "cross" : !0, f)), d && I(p.otherAxes, je(g, "cross", !1));
    }
    function g(v, m, y) {
      var b = y.model.getModel("axisPointer", i), O = b.get("show");
      if (!(!O || O === "auto" && !v && !$M(b))) {
        m == null && (m = b.get("triggerTooltip")), b = v ? gTt(y, h, i, e, v, m) : b;
        var w = b.get("snap"), x = b.get("triggerEmphasis"), S = D0(y.model), _ = m || w || y.type === "category", C = n.axesInfo[S] = {
          key: S,
          axis: y,
          coordSys: a,
          axisPointerModel: b,
          triggerTooltip: m,
          triggerEmphasis: x,
          involveSeries: _,
          snap: w,
          useHandle: $M(b),
          seriesModels: [],
          linkGroup: null
        };
        u[S] = C, n.seriesInvolved = n.seriesInvolved || _;
        var A = mTt(o, y);
        if (A != null) {
          var T = s[A] || (s[A] = {
            axesInfo: {}
          });
          T.axesInfo[S] = C, T.mapper = o[A].mapper, C.linkGroup = T;
        }
      }
    }
  });
}
function gTt(n, e, t, r, i, o) {
  var s = e.getModel("axisPointer"), a = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], l = {};
  I(a, function(f) {
    l[f] = Re(s.get(f));
  }), l.snap = n.type !== "category" && !!o, s.get("type") === "cross" && (l.type = "line");
  var u = l.label || (l.label = {});
  if (u.show == null && (u.show = !1), i === "cross") {
    var c = s.get(["label", "show"]);
    if (u.show = c ?? !0, !o) {
      var h = l.lineStyle = s.get("crossStyle");
      h && Le(u, h.textStyle);
    }
  }
  return n.model.getModel("axisPointer", new fn(l, t, r));
}
function vTt(n, e) {
  e.eachSeries(function(t) {
    var r = t.coordinateSystem, i = t.get(["tooltip", "trigger"], !0), o = t.get(["tooltip", "show"], !0);
    !r || i === "none" || i === !1 || i === "item" || o === !1 || t.get(["axisPointer", "show"], !0) === !1 || I(n.coordSysAxesInfo[D0(r.model)], function(s) {
      var a = s.axis;
      r.getAxis(a.dim) === a && (s.seriesModels.push(t), s.seriesDataCount == null && (s.seriesDataCount = 0), s.seriesDataCount += t.getData().count());
    });
  });
}
function mTt(n, e) {
  for (var t = e.model, r = e.dim, i = 0; i < n.length; i++) {
    var o = n[i] || {};
    if (vT(o[r + "AxisId"], t.id) || vT(o[r + "AxisIndex"], t.componentIndex) || vT(o[r + "AxisName"], t.name))
      return i;
  }
}
function vT(n, e) {
  return n === "all" || oe(n) && ot(n, e) >= 0 || n === e;
}
function yTt(n) {
  var e = WR(n);
  if (e) {
    var t = e.axisPointerModel, r = e.axis.scale, i = t.option, o = t.get("status"), s = t.get("value");
    s != null && (s = r.parse(s));
    var a = $M(t);
    o == null && (i.status = a ? "show" : "hide");
    var l = r.getExtent().slice();
    l[0] > l[1] && l.reverse(), // Pick a value on axis when initializing.
    (s == null || s > l[1]) && (s = l[1]), s < l[0] && (s = l[0]), i.value = s, a && (i.status = e.axis.scale.isBlank() ? "hide" : "show");
  }
}
function WR(n) {
  var e = (n.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
  return e && e.axesInfo[D0(n)];
}
function bTt(n) {
  var e = WR(n);
  return e && e.axisPointerModel;
}
function $M(n) {
  return !!n.get(["handle", "show"]);
}
function D0(n) {
  return n.type + "||" + n.id;
}
var mT = {}, Sd = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      this.axisPointerClass && yTt(t), n.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(t, i, !0);
    }, e.prototype.updateAxisPointer = function(t, r, i, o) {
      this._doUpdateAxisPointerClass(t, i, !1);
    }, e.prototype.remove = function(t, r) {
      var i = this._axisPointer;
      i && i.remove(r);
    }, e.prototype.dispose = function(t, r) {
      this._disposeAxisPointer(r), n.prototype.dispose.apply(this, arguments);
    }, e.prototype._doUpdateAxisPointerClass = function(t, r, i) {
      var o = e.getAxisPointerClass(this.axisPointerClass);
      if (o) {
        var s = bTt(t);
        s ? (this._axisPointer || (this._axisPointer = new o())).render(t, s, r, i) : this._disposeAxisPointer(r);
      }
    }, e.prototype._disposeAxisPointer = function(t) {
      this._axisPointer && this._axisPointer.dispose(t), this._axisPointer = null;
    }, e.registerAxisPointerClass = function(t, r) {
      if (process.env.NODE_ENV !== "production" && mT[t])
        throw new Error("axisPointer " + t + " exists");
      mT[t] = r;
    }, e.getAxisPointerClass = function(t) {
      return t && mT[t];
    }, e.type = "axis", e;
  }(Nn)
), NM = Ct();
function une(n, e, t, r) {
  var i = t.axis;
  if (!i.scale.isBlank()) {
    var o = t.getModel("splitArea"), s = o.getModel("areaStyle"), a = s.get("color"), l = r.coordinateSystem.getRect(), u = i.getTicksCoords({
      tickModel: o,
      clamp: !0
    });
    if (u.length) {
      var c = a.length, h = NM(n).splitAreaColors, f = _e(), d = 0;
      if (h)
        for (var p = 0; p < u.length; p++) {
          var g = h.get(u[p].tickValue);
          if (g != null) {
            d = (g + (c - 1) * p) % c;
            break;
          }
        }
      var v = i.toGlobalCoord(u[0].coord), m = s.getAreaStyle();
      a = oe(a) ? a : [a];
      for (var p = 1; p < u.length; p++) {
        var y = i.toGlobalCoord(u[p].coord), b = void 0, O = void 0, w = void 0, x = void 0;
        i.isHorizontal() ? (b = v, O = l.y, w = y - b, x = l.height, v = b + w) : (b = l.x, O = v, w = l.width, x = y - O, v = O + x);
        var S = u[p - 1].tickValue;
        S != null && f.set(S, d), e.add(new _t({
          anid: S != null ? "area_" + S : null,
          shape: {
            x: b,
            y: O,
            width: w,
            height: x
          },
          style: Le({
            fill: a[d]
          }, m),
          autoBatch: !0,
          silent: !0
        })), d = (d + 1) % c;
      }
      NM(n).splitAreaColors = f;
    }
  }
}
function cne(n) {
  NM(n).splitAreaColors = null;
}
var OTt = ["axisLine", "axisTickLabel", "axisName"], wTt = ["splitArea", "splitLine", "minorSplitLine"], hne = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "CartesianAxisPointer", t;
    }
    return e.prototype.render = function(t, r, i, o) {
      this.group.removeAll();
      var s = this._axisGroup;
      if (this._axisGroup = new Ve(), this.group.add(this._axisGroup), !!t.get("show")) {
        var a = t.getCoordSysModel(), l = RM(a, t), u = new Vi(t, te({
          handleAutoShown: function(h) {
            for (var f = a.coordinateSystem.getCartesians(), d = 0; d < f.length; d++)
              if (TM(f[d].getOtherAxis(t.axis).scale))
                return !0;
            return !1;
          }
        }, l));
        I(OTt, u.add, u), this._axisGroup.add(u.getGroup()), I(wTt, function(h) {
          t.get([h, "show"]) && xTt[h](this, this._axisGroup, t, a);
        }, this);
        var c = o && o.type === "changeAxisOrder" && o.isInitSort;
        c || Cb(s, this._axisGroup, t), n.prototype.render.call(this, t, r, i, o);
      }
    }, e.prototype.remove = function() {
      cne(this);
    }, e.type = "cartesianAxis", e;
  }(Sd)
), xTt = {
  splitLine: function(n, e, t, r) {
    var i = t.axis;
    if (!i.scale.isBlank()) {
      var o = t.getModel("splitLine"), s = o.getModel("lineStyle"), a = s.get("color");
      a = oe(a) ? a : [a];
      for (var l = r.coordinateSystem.getRect(), u = i.isHorizontal(), c = 0, h = i.getTicksCoords({
        tickModel: o
      }), f = [], d = [], p = s.getLineStyle(), g = 0; g < h.length; g++) {
        var v = i.toGlobalCoord(h[g].coord);
        u ? (f[0] = v, f[1] = l.y, d[0] = v, d[1] = l.y + l.height) : (f[0] = l.x, f[1] = v, d[0] = l.x + l.width, d[1] = v);
        var m = c++ % a.length, y = h[g].tickValue, b = new Ar({
          anid: y != null ? "line_" + h[g].tickValue : null,
          autoBatch: !0,
          shape: {
            x1: f[0],
            y1: f[1],
            x2: d[0],
            y2: d[1]
          },
          style: Le({
            stroke: a[m]
          }, p),
          silent: !0
        });
        Dg(b.shape, p.lineWidth), e.add(b);
      }
    }
  },
  minorSplitLine: function(n, e, t, r) {
    var i = t.axis, o = t.getModel("minorSplitLine"), s = o.getModel("lineStyle"), a = r.coordinateSystem.getRect(), l = i.isHorizontal(), u = i.getMinorTicksCoords();
    if (u.length)
      for (var c = [], h = [], f = s.getLineStyle(), d = 0; d < u.length; d++)
        for (var p = 0; p < u[d].length; p++) {
          var g = i.toGlobalCoord(u[d][p].coord);
          l ? (c[0] = g, c[1] = a.y, h[0] = g, h[1] = a.y + a.height) : (c[0] = a.x, c[1] = g, h[0] = a.x + a.width, h[1] = g);
          var v = new Ar({
            anid: "minor_line_" + u[d][p].tickValue,
            autoBatch: !0,
            shape: {
              x1: c[0],
              y1: c[1],
              x2: h[0],
              y2: h[1]
            },
            style: f,
            silent: !0
          });
          Dg(v.shape, f.lineWidth), e.add(v);
        }
  },
  splitArea: function(n, e, t, r) {
    une(n, e, t, r);
  }
}, fne = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "xAxis", e;
  }(hne)
), STt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = fne.type, t;
    }
    return e.type = "yAxis", e;
  }(hne)
), _Tt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "grid", t;
    }
    return e.prototype.render = function(t, r) {
      this.group.removeAll(), t.get("show") && this.group.add(new _t({
        shape: t.coordinateSystem.getRect(),
        style: Le({
          fill: t.get("backgroundColor")
        }, t.getItemStyle()),
        silent: !0,
        z2: -1
      }));
    }, e.type = "grid", e;
  }(Nn)
), W6 = {
  // gridIndex: 0,
  // gridId: '',
  offset: 0
};
function dne(n) {
  n.registerComponentView(_Tt), n.registerComponentModel(YAt), n.registerCoordinateSystem("cartesian2d", aTt), Ng(n, "x", LM, W6), Ng(n, "y", LM, W6), n.registerComponentView(fne), n.registerComponentView(STt), n.registerPreprocessor(function(e) {
    e.xAxis && e.yAxis && !e.grid && (e.grid = {});
  });
}
function CTt(n) {
  at(dne), n.registerSeriesModel(QAt), n.registerChartView(HAt), n.registerLayout(Ib("scatter"));
}
function ATt(n) {
  n.eachSeriesByType("radar", function(e) {
    var t = e.getData(), r = [], i = e.coordinateSystem;
    if (i) {
      var o = i.getIndicatorAxes();
      I(o, function(s, a) {
        t.each(t.mapDimension(o[a].dim), function(l, u) {
          r[u] = r[u] || [];
          var c = i.dataToPoint(l, a);
          r[u][a] = G6(c) ? c : j6(i);
        });
      }), t.each(function(s) {
        var a = P0t(r[s], function(l) {
          return G6(l);
        }) || j6(i);
        r[s].push(a.slice()), t.setItemLayout(s, r[s]);
      });
    }
  });
}
function G6(n) {
  return !isNaN(n[0]) && !isNaN(n[1]);
}
function j6(n) {
  return [n.cx, n.cy];
}
function TTt(n) {
  var e = n.polar;
  if (e) {
    oe(e) || (e = [e]);
    var t = [];
    I(e, function(r, i) {
      r.indicator ? (r.type && !r.shape && (r.shape = r.type), n.radar = n.radar || [], oe(n.radar) || (n.radar = [n.radar]), n.radar.push(r)) : t.push(r);
    }), n.polar = t;
  }
  I(n.series, function(r) {
    r && r.type === "radar" && r.polarIndex && (r.radarIndex = r.polarIndex);
  });
}
var PTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.coordinateSystem, s = this.group, a = t.getData(), l = this._data;
      function u(f, d) {
        var p = f.getItemVisual(d, "symbol") || "circle";
        if (p !== "none") {
          var g = Cv(f.getItemVisual(d, "symbolSize")), v = ar(p, -1, -1, 2, 2), m = f.getItemVisual(d, "symbolRotate") || 0;
          return v.attr({
            style: {
              strokeNoScale: !0
            },
            z2: 100,
            scaleX: g[0] / 2,
            scaleY: g[1] / 2,
            rotation: m * Math.PI / 180 || 0
          }), v;
        }
      }
      function c(f, d, p, g, v, m) {
        p.removeAll();
        for (var y = 0; y < d.length - 1; y++) {
          var b = u(g, v);
          b && (b.__dimIdx = y, f[y] ? (b.setPosition(f[y]), yd[m ? "initProps" : "updateProps"](b, {
            x: d[y][0],
            y: d[y][1]
          }, t, v)) : b.setPosition(d[y]), p.add(b));
        }
      }
      function h(f) {
        return ae(f, function(d) {
          return [o.cx, o.cy];
        });
      }
      a.diff(l).add(function(f) {
        var d = a.getItemLayout(f);
        if (d) {
          var p = new Zi(), g = new Gi(), v = {
            shape: {
              points: d
            }
          };
          p.shape.points = h(d), g.shape.points = h(d), vn(p, v, t, f), vn(g, v, t, f);
          var m = new Ve(), y = new Ve();
          m.add(g), m.add(p), m.add(y), c(g.shape.points, d, y, a, f, !0), a.setItemGraphicEl(f, m);
        }
      }).update(function(f, d) {
        var p = l.getItemGraphicEl(d), g = p.childAt(0), v = p.childAt(1), m = p.childAt(2), y = {
          shape: {
            points: a.getItemLayout(f)
          }
        };
        y.shape.points && (c(g.shape.points, y.shape.points, m, a, f, !1), ua(v), ua(g), kt(g, y, t), kt(v, y, t), a.setItemGraphicEl(f, p));
      }).remove(function(f) {
        s.remove(l.getItemGraphicEl(f));
      }).execute(), a.eachItemGraphicEl(function(f, d) {
        var p = a.getItemModel(d), g = f.childAt(0), v = f.childAt(1), m = f.childAt(2), y = a.getItemVisual(d, "style"), b = y.fill;
        s.add(f), g.useStyle(Le(p.getModel("lineStyle").getLineStyle(), {
          fill: "none",
          stroke: b
        })), ui(g, p, "lineStyle"), ui(v, p, "areaStyle");
        var O = p.getModel("areaStyle"), w = O.isEmpty() && O.parentModel.isEmpty();
        v.ignore = w, I(["emphasis", "select", "blur"], function(_) {
          var C = p.getModel([_, "areaStyle"]), A = C.isEmpty() && C.parentModel.isEmpty();
          v.ensureState(_).ignore = A && w;
        }), v.useStyle(Le(O.getAreaStyle(), {
          fill: b,
          opacity: 0.7,
          decal: y.decal
        }));
        var x = p.getModel("emphasis"), S = x.getModel("itemStyle").getItemStyle();
        m.eachChild(function(_) {
          if (_ instanceof fi) {
            var C = _.style;
            _.useStyle(te({
              // TODO other properties like x, y ?
              image: C.image,
              x: C.x,
              y: C.y,
              width: C.width,
              height: C.height
            }, y));
          } else
            _.useStyle(y), _.setColor(b), _.style.strokeNoScale = !0;
          var A = _.ensureState("emphasis");
          A.style = Re(S);
          var T = a.getStore().get(a.getDimensionIndex(_.__dimIdx), d);
          (T == null || isNaN(T)) && (T = ""), ci(_, kr(p), {
            labelFetcher: a.hostModel,
            labelDataIndex: d,
            labelDimIndex: _.__dimIdx,
            defaultText: T,
            inheritColor: b,
            defaultOpacity: y.opacity
          });
        }), $n(f, x.get("focus"), x.get("blurScope"), x.get("disabled"));
      }), this._data = a;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "radar", e;
  }(dn)
);
const ETt = PTt;
var kTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.init = function(t) {
      n.prototype.init.apply(this, arguments), this.legendVisualProvider = new $b(Oe(this.getData, this), Oe(this.getRawData, this));
    }, e.prototype.getInitialData = function(t, r) {
      return Av(this, {
        generateCoord: "indicator_",
        generateCoordCount: 1 / 0
      });
    }, e.prototype.formatTooltip = function(t, r, i) {
      var o = this.getData(), s = this.coordinateSystem, a = s.getIndicatorAxes(), l = this.getData().getName(t), u = l === "" ? this.name : l, c = cee(this, t);
      return Mr("section", {
        header: u,
        sortBlocks: !0,
        blocks: ae(a, function(h) {
          var f = o.get(o.mapDimension(h.dim), t);
          return Mr("nameValue", {
            markerType: "subItem",
            markerColor: c,
            name: h.name,
            value: f,
            sortParam: f
          });
        })
      });
    }, e.prototype.getTooltipPosition = function(t) {
      if (t != null) {
        for (var r = this.getData(), i = this.coordinateSystem, o = r.getValues(ae(i.dimensions, function(u) {
          return r.mapDimension(u);
        }), t), s = 0, a = o.length; s < a; s++)
          if (!isNaN(o[s])) {
            var l = i.getIndicatorAxes();
            return i.coordToPoint(l[s].dataToCoord(o[s]), s);
          }
      }
    }, e.type = "series.radar", e.dependencies = ["radar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "radar",
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: {
        width: 2,
        type: "solid",
        join: "round"
      },
      label: {
        position: "top"
      },
      // areaStyle: {
      // },
      // itemStyle: {}
      symbolSize: 8
      // symbolRotate: null
    }, e;
  }(Sn)
);
const MTt = kTt;
var om = sne.value;
function OO(n, e) {
  return Le({
    show: e
  }, n);
}
var DTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      var t = this.get("boundaryGap"), r = this.get("splitNumber"), i = this.get("scale"), o = this.get("axisLine"), s = this.get("axisTick"), a = this.get("axisLabel"), l = this.get("axisName"), u = this.get(["axisName", "show"]), c = this.get(["axisName", "formatter"]), h = this.get("axisNameGap"), f = this.get("triggerEvent"), d = ae(this.get("indicator") || [], function(p) {
        p.max != null && p.max > 0 && !p.min ? p.min = 0 : p.min != null && p.min < 0 && !p.max && (p.max = 0);
        var g = l;
        p.color != null && (g = Le({
          color: p.color
        }, l));
        var v = Je(Re(p), {
          boundaryGap: t,
          splitNumber: r,
          scale: i,
          axisLine: o,
          axisTick: s,
          // axisType: axisType,
          axisLabel: a,
          // Compatible with 2 and use text
          name: p.text,
          showName: u,
          nameLocation: "end",
          nameGap: h,
          // min: 0,
          nameTextStyle: g,
          triggerEvent: f
        }, !1);
        if (be(c)) {
          var m = v.name;
          v.name = c.replace("{value}", m ?? "");
        } else
          Pe(c) && (v.name = c(v.name, v));
        var y = new fn(v, null, this.ecModel);
        return lr(y, kb.prototype), y.mainType = "radar", y.componentIndex = this.componentIndex, y;
      }, this);
      this._indicatorModels = d;
    }, e.prototype.getIndicatorModels = function() {
      return this._indicatorModels;
    }, e.type = "radar", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "75%",
      startAngle: 90,
      axisName: {
        show: !0
        // formatter: null
        // textStyle: {}
      },
      boundaryGap: [0, 0],
      splitNumber: 5,
      axisNameGap: 15,
      scale: !1,
      // Polygon or circle
      shape: "polygon",
      axisLine: Je({
        lineStyle: {
          color: "#bbb"
        }
      }, om.axisLine),
      axisLabel: OO(om.axisLabel, !1),
      axisTick: OO(om.axisTick, !1),
      // axisType: 'value',
      splitLine: OO(om.splitLine, !0),
      splitArea: OO(om.splitArea, !0),
      // {text, min, max}
      indicator: []
    }, e;
  }(Ot)
);
const LTt = DTt;
var ITt = ["axisLine", "axisTickLabel", "axisName"], RTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = this.group;
      o.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t);
    }, e.prototype._buildAxes = function(t) {
      var r = t.coordinateSystem, i = r.getIndicatorAxes(), o = ae(i, function(s) {
        var a = s.model.get("showName") ? s.name : "", l = new Vi(s.model, {
          axisName: a,
          position: [r.cx, r.cy],
          rotation: s.angle,
          labelDirection: -1,
          tickDirection: -1,
          nameDirection: 1
        });
        return l;
      });
      I(o, function(s) {
        I(ITt, s.add, s), this.group.add(s.getGroup());
      }, this);
    }, e.prototype._buildSplitLineAndArea = function(t) {
      var r = t.coordinateSystem, i = r.getIndicatorAxes();
      if (!i.length)
        return;
      var o = t.get("shape"), s = t.getModel("splitLine"), a = t.getModel("splitArea"), l = s.getModel("lineStyle"), u = a.getModel("areaStyle"), c = s.get("show"), h = a.get("show"), f = l.get("color"), d = u.get("color"), p = oe(f) ? f : [f], g = oe(d) ? d : [d], v = [], m = [];
      function y(E, M, R) {
        var N = R % M.length;
        return E[N] = E[N] || [], N;
      }
      if (o === "circle")
        for (var b = i[0].getTicksCoords(), O = r.cx, w = r.cy, x = 0; x < b.length; x++) {
          if (c) {
            var S = y(v, p, x);
            v[S].push(new rh({
              shape: {
                cx: O,
                cy: w,
                r: b[x].coord
              }
            }));
          }
          if (h && x < b.length - 1) {
            var S = y(m, g, x);
            m[S].push(new rC({
              shape: {
                cx: O,
                cy: w,
                r0: b[x].coord,
                r: b[x + 1].coord
              }
            }));
          }
        }
      else
        for (var _, C = ae(i, function(E, M) {
          var R = E.getTicksCoords();
          return _ = _ == null ? R.length - 1 : Math.min(R.length - 1, _), ae(R, function(N) {
            return r.coordToPoint(N.coord, M);
          });
        }), A = [], x = 0; x <= _; x++) {
          for (var T = [], k = 0; k < i.length; k++)
            T.push(C[k][x]);
          if (T[0] ? T.push(T[0].slice()) : process.env.NODE_ENV !== "production" && console.error("Can't draw value axis " + x), c) {
            var S = y(v, p, x);
            v[S].push(new Gi({
              shape: {
                points: T
              }
            }));
          }
          if (h && A) {
            var S = y(m, g, x - 1);
            m[S].push(new Zi({
              shape: {
                points: T.concat(A)
              }
            }));
          }
          A = T.slice().reverse();
        }
      var L = l.getLineStyle(), D = u.getAreaStyle();
      I(m, function(E, M) {
        this.group.add(us(E, {
          style: Le({
            stroke: "none",
            fill: g[M % g.length]
          }, D),
          silent: !0
        }));
      }, this), I(v, function(E, M) {
        this.group.add(us(E, {
          style: Le({
            fill: "none",
            stroke: p[M % p.length]
          }, L),
          silent: !0
        }));
      }, this);
    }, e.type = "radar", e;
  }(Nn)
);
const $Tt = RTt;
var NTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this, t, r, i) || this;
      return o.type = "value", o.angle = 0, o.name = "", o;
    }
    return e;
  }(ba)
);
const BTt = NTt;
var VTt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.dimensions = [], this._model = e, this._indicatorAxes = ae(e.getIndicatorModels(), function(i, o) {
        var s = "indicator_" + o, a = new BTt(
          s,
          new Qc()
          // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()
        );
        return a.name = i.get("name"), a.model = i, i.axis = a, this.dimensions.push(s), a;
      }, this), this.resize(e, r);
    }
    return n.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }, n.prototype.dataToPoint = function(e, t) {
      var r = this._indicatorAxes[t];
      return this.coordToPoint(r.dataToCoord(e), t);
    }, n.prototype.coordToPoint = function(e, t) {
      var r = this._indicatorAxes[t], i = r.angle, o = this.cx + e * Math.cos(i), s = this.cy - e * Math.sin(i);
      return [o, s];
    }, n.prototype.pointToData = function(e) {
      var t = e[0] - this.cx, r = e[1] - this.cy, i = Math.sqrt(t * t + r * r);
      t /= i, r /= i;
      for (var o = Math.atan2(-r, t), s = 1 / 0, a, l = -1, u = 0; u < this._indicatorAxes.length; u++) {
        var c = this._indicatorAxes[u], h = Math.abs(o - c.angle);
        h < s && (a = c, l = u, s = h);
      }
      return [l, +(a && a.coordToData(i))];
    }, n.prototype.resize = function(e, t) {
      var r = e.get("center"), i = t.getWidth(), o = t.getHeight(), s = Math.min(i, o) / 2;
      this.cx = fe(r[0], i), this.cy = fe(r[1], o), this.startAngle = e.get("startAngle") * Math.PI / 180;
      var a = e.get("radius");
      (be(a) || Tt(a)) && (a = [0, a]), this.r0 = fe(a[0], s), this.r = fe(a[1], s), I(this._indicatorAxes, function(l, u) {
        l.setExtent(this.r0, this.r);
        var c = this.startAngle + u * Math.PI * 2 / this._indicatorAxes.length;
        c = Math.atan2(Math.sin(c), Math.cos(c)), l.angle = c;
      }, this);
    }, n.prototype.update = function(e, t) {
      var r = this._indicatorAxes, i = this._model;
      I(r, function(a) {
        a.scale.setExtent(1 / 0, -1 / 0);
      }), e.eachSeriesByType("radar", function(a, l) {
        if (!(a.get("coordinateSystem") !== "radar" || e.getComponent("radar", a.get("radarIndex")) !== i)) {
          var u = a.getData();
          I(r, function(c) {
            c.scale.unionExtentFromData(u, u.mapDimension(c.dim));
          });
        }
      }, this);
      var o = i.get("splitNumber"), s = new Qc();
      s.setExtent(0, o), s.setInterval(1), I(r, function(a, l) {
        ane(a.scale, a.model, s);
      });
    }, n.prototype.convertToPixel = function(e, t, r) {
      return console.warn("Not implemented."), null;
    }, n.prototype.convertFromPixel = function(e, t, r) {
      return console.warn("Not implemented."), null;
    }, n.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, n.create = function(e, t) {
      var r = [];
      return e.eachComponent("radar", function(i) {
        var o = new n(i, e, t);
        r.push(o), i.coordinateSystem = o;
      }), e.eachSeriesByType("radar", function(i) {
        i.get("coordinateSystem") === "radar" && (i.coordinateSystem = r[i.get("radarIndex") || 0]);
      }), r;
    }, n.dimensions = [], n;
  }()
);
const zTt = VTt;
function FTt(n) {
  n.registerCoordinateSystem("radar", zTt), n.registerComponentModel(LTt), n.registerComponentView($Tt), n.registerVisual({
    seriesType: "radar",
    reset: function(e) {
      var t = e.getData();
      t.each(function(r) {
        t.setItemVisual(r, "legendIcon", "roundRect");
      }), t.setVisual("legendIcon", "roundRect");
    }
  });
}
function QTt(n) {
  at(FTt), n.registerChartView(ETt), n.registerSeriesModel(MTt), n.registerLayout(ATt), n.registerProcessor(Rb("radar")), n.registerPreprocessor(TTt);
}
var H6 = "\0_ec_interaction_mutex";
function ZTt(n, e, t) {
  var r = GR(n);
  r[e] = t;
}
function WTt(n, e, t) {
  var r = GR(n), i = r[e];
  i === t && (r[e] = null);
}
function q6(n, e) {
  return !!GR(n)[e];
}
function GR(n) {
  return n[H6] || (n[H6] = {});
}
Cl({
  type: "takeGlobalCursor",
  event: "globalCursorTaken",
  update: "update"
}, qn);
var GTt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this) || this;
      r._zr = t;
      var i = Oe(r._mousedownHandler, r), o = Oe(r._mousemoveHandler, r), s = Oe(r._mouseupHandler, r), a = Oe(r._mousewheelHandler, r), l = Oe(r._pinchHandler, r);
      return r.enable = function(u, c) {
        this.disable(), this._opt = Le(Re(c) || {}, {
          zoomOnMouseWheel: !0,
          moveOnMouseMove: !0,
          // By default, wheel do not trigger move.
          moveOnMouseWheel: !1,
          preventDefaultMouseMove: !0
        }), u == null && (u = !0), (u === !0 || u === "move" || u === "pan") && (t.on("mousedown", i), t.on("mousemove", o), t.on("mouseup", s)), (u === !0 || u === "scale" || u === "zoom") && (t.on("mousewheel", a), t.on("pinch", l));
      }, r.disable = function() {
        t.off("mousedown", i), t.off("mousemove", o), t.off("mouseup", s), t.off("mousewheel", a), t.off("pinch", l);
      }, r;
    }
    return e.prototype.isDragging = function() {
      return this._dragging;
    }, e.prototype.isPinching = function() {
      return this._pinching;
    }, e.prototype.setPointerChecker = function(t) {
      this.pointerChecker = t;
    }, e.prototype.dispose = function() {
      this.disable();
    }, e.prototype._mousedownHandler = function(t) {
      if (!y4(t)) {
        for (var r = t.target; r; ) {
          if (r.draggable)
            return;
          r = r.__hostTarget || r.parent;
        }
        var i = t.offsetX, o = t.offsetY;
        this.pointerChecker && this.pointerChecker(t, i, o) && (this._x = i, this._y = o, this._dragging = !0);
      }
    }, e.prototype._mousemoveHandler = function(t) {
      if (!(!this._dragging || !Ew("moveOnMouseMove", t, this._opt) || t.gestureEvent === "pinch" || q6(this._zr, "globalPan"))) {
        var r = t.offsetX, i = t.offsetY, o = this._x, s = this._y, a = r - o, l = i - s;
        this._x = r, this._y = i, this._opt.preventDefaultMouseMove && iu(t.event), pne(this, "pan", "moveOnMouseMove", t, {
          dx: a,
          dy: l,
          oldX: o,
          oldY: s,
          newX: r,
          newY: i,
          isAvailableBehavior: null
        });
      }
    }, e.prototype._mouseupHandler = function(t) {
      y4(t) || (this._dragging = !1);
    }, e.prototype._mousewheelHandler = function(t) {
      var r = Ew("zoomOnMouseWheel", t, this._opt), i = Ew("moveOnMouseWheel", t, this._opt), o = t.wheelDelta, s = Math.abs(o), a = t.offsetX, l = t.offsetY;
      if (!(o === 0 || !r && !i)) {
        if (r) {
          var u = s > 3 ? 1.4 : s > 1 ? 1.2 : 1.1, c = o > 0 ? u : 1 / u;
          yT(this, "zoom", "zoomOnMouseWheel", t, {
            scale: c,
            originX: a,
            originY: l,
            isAvailableBehavior: null
          });
        }
        if (i) {
          var h = Math.abs(o), f = (o > 0 ? 1 : -1) * (h > 3 ? 0.4 : h > 1 ? 0.15 : 0.05);
          yT(this, "scrollMove", "moveOnMouseWheel", t, {
            scrollDelta: f,
            originX: a,
            originY: l,
            isAvailableBehavior: null
          });
        }
      }
    }, e.prototype._pinchHandler = function(t) {
      if (!q6(this._zr, "globalPan")) {
        var r = t.pinchScale > 1 ? 1.1 : 1 / 1.1;
        yT(this, "zoom", null, t, {
          scale: r,
          originX: t.pinchX,
          originY: t.pinchY,
          isAvailableBehavior: null
        });
      }
    }, e;
  }(Ps)
);
function yT(n, e, t, r, i) {
  n.pointerChecker && n.pointerChecker(r, i.originX, i.originY) && (iu(r.event), pne(n, e, t, r, i));
}
function pne(n, e, t, r, i) {
  i.isAvailableBehavior = Oe(Ew, null, t, r), n.trigger(e, i);
}
function Ew(n, e, t) {
  var r = t[n];
  return !n || r && (!be(r) || e.event[r + "Key"]);
}
const Nb = GTt;
function jR(n, e, t) {
  var r = n.target;
  r.x += e, r.y += t, r.dirty();
}
function HR(n, e, t, r) {
  var i = n.target, o = n.zoomLimit, s = n.zoom = n.zoom || 1;
  if (s *= e, o) {
    var a = o.min || 0, l = o.max || 1 / 0;
    s = Math.max(Math.min(l, s), a);
  }
  var u = s / n.zoom;
  n.zoom = s, i.x -= (t - i.x) * (u - 1), i.y -= (r - i.y) * (u - 1), i.scaleX *= u, i.scaleY *= u, i.dirty();
}
var jTt = {
  axisPointer: 1,
  tooltip: 1,
  brush: 1
};
function SC(n, e, t) {
  var r = e.getComponentByElement(n.topTarget), i = r && r.coordinateSystem;
  return r && r !== t && !jTt.hasOwnProperty(r.mainType) && i && i.model !== t;
}
function gne(n) {
  if (be(n)) {
    var e = new DOMParser();
    n = e.parseFromString(n, "text/xml");
  }
  var t = n;
  for (t.nodeType === 9 && (t = t.firstChild); t.nodeName.toLowerCase() !== "svg" || t.nodeType !== 1; )
    t = t.nextSibling;
  return t;
}
var bT, gS = {
  fill: "fill",
  stroke: "stroke",
  "stroke-width": "lineWidth",
  opacity: "opacity",
  "fill-opacity": "fillOpacity",
  "stroke-opacity": "strokeOpacity",
  "stroke-dasharray": "lineDash",
  "stroke-dashoffset": "lineDashOffset",
  "stroke-linecap": "lineCap",
  "stroke-linejoin": "lineJoin",
  "stroke-miterlimit": "miterLimit",
  "font-family": "fontFamily",
  "font-size": "fontSize",
  "font-style": "fontStyle",
  "font-weight": "fontWeight",
  "text-anchor": "textAlign",
  visibility: "visibility",
  display: "display"
}, Y6 = ft(gS), vS = {
  "alignment-baseline": "textBaseline",
  "stop-color": "stopColor"
}, X6 = ft(vS), HTt = function() {
  function n() {
    this._defs = {}, this._root = null;
  }
  return n.prototype.parse = function(e, t) {
    t = t || {};
    var r = gne(e);
    if (process.env.NODE_ENV !== "production" && !r)
      throw new Error("Illegal svg");
    this._defsUsePending = [];
    var i = new Ve();
    this._root = i;
    var o = [], s = r.getAttribute("viewBox") || "", a = parseFloat(r.getAttribute("width") || t.width), l = parseFloat(r.getAttribute("height") || t.height);
    isNaN(a) && (a = null), isNaN(l) && (l = null), Oo(r, i, null, !0, !1);
    for (var u = r.firstChild; u; )
      this._parseNode(u, i, o, null, !1, !1), u = u.nextSibling;
    XTt(this._defs, this._defsUsePending), this._defsUsePending = [];
    var c, h;
    if (s) {
      var f = _C(s);
      f.length >= 4 && (c = {
        x: parseFloat(f[0] || 0),
        y: parseFloat(f[1] || 0),
        width: parseFloat(f[2]),
        height: parseFloat(f[3])
      });
    }
    if (c && a != null && l != null && (h = mne(c, { x: 0, y: 0, width: a, height: l }), !t.ignoreViewBox)) {
      var d = i;
      i = new Ve(), i.add(d), d.scaleX = d.scaleY = h.scale, d.x = h.x, d.y = h.y;
    }
    return !t.ignoreRootClip && a != null && l != null && i.setClipPath(new _t({
      shape: { x: 0, y: 0, width: a, height: l }
    })), {
      root: i,
      width: a,
      height: l,
      viewBoxRect: c,
      viewBoxTransform: h,
      named: o
    };
  }, n.prototype._parseNode = function(e, t, r, i, o, s) {
    var a = e.nodeName.toLowerCase(), l, u = i;
    if (a === "defs" && (o = !0), a === "text" && (s = !0), a === "defs" || a === "switch")
      l = t;
    else {
      if (!o) {
        var c = bT[a];
        if (c && we(bT, a)) {
          l = c.call(this, e, t);
          var h = e.getAttribute("name");
          if (h) {
            var f = {
              name: h,
              namedFrom: null,
              svgNodeTagLower: a,
              el: l
            };
            r.push(f), a === "g" && (u = f);
          } else
            i && r.push({
              name: i.name,
              namedFrom: i,
              svgNodeTagLower: a,
              el: l
            });
          t.add(l);
        }
      }
      var d = U6[a];
      if (d && we(U6, a)) {
        var p = d.call(this, e), g = e.getAttribute("id");
        g && (this._defs[g] = p);
      }
    }
    if (l && l.isGroup)
      for (var v = e.firstChild; v; )
        v.nodeType === 1 ? this._parseNode(v, l, r, u, o, s) : v.nodeType === 3 && s && this._parseText(v, l), v = v.nextSibling;
  }, n.prototype._parseText = function(e, t) {
    var r = new b0({
      style: {
        text: e.textContent
      },
      silent: !0,
      x: this._textX || 0,
      y: this._textY || 0
    });
    qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), qTt(r, t);
    var i = r.style, o = i.fontSize;
    o && o < 9 && (i.fontSize = 9, r.scaleX *= o / 9, r.scaleY *= o / 9);
    var s = (i.fontSize || i.fontFamily) && [
      i.fontStyle,
      i.fontWeight,
      (i.fontSize || 12) + "px",
      i.fontFamily || "sans-serif"
    ].join(" ");
    i.font = s;
    var a = r.getBoundingRect();
    return this._textX += a.width, t.add(r), r;
  }, n.internalField = function() {
    bT = {
      g: function(e, t) {
        var r = new Ve();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r;
      },
      rect: function(e, t) {
        var r = new _t();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r.setShape({
          x: parseFloat(e.getAttribute("x") || "0"),
          y: parseFloat(e.getAttribute("y") || "0"),
          width: parseFloat(e.getAttribute("width") || "0"),
          height: parseFloat(e.getAttribute("height") || "0")
        }), r.silent = !0, r;
      },
      circle: function(e, t) {
        var r = new rh();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          r: parseFloat(e.getAttribute("r") || "0")
        }), r.silent = !0, r;
      },
      line: function(e, t) {
        var r = new Ar();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r.setShape({
          x1: parseFloat(e.getAttribute("x1") || "0"),
          y1: parseFloat(e.getAttribute("y1") || "0"),
          x2: parseFloat(e.getAttribute("x2") || "0"),
          y2: parseFloat(e.getAttribute("y2") || "0")
        }), r.silent = !0, r;
      },
      ellipse: function(e, t) {
        var r = new JI();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          rx: parseFloat(e.getAttribute("rx") || "0"),
          ry: parseFloat(e.getAttribute("ry") || "0")
        }), r.silent = !0, r;
      },
      polygon: function(e, t) {
        var r = e.getAttribute("points"), i;
        r && (i = e8(r));
        var o = new Zi({
          shape: {
            points: i || []
          },
          silent: !0
        });
        return qo(t, o), Oo(e, o, this._defsUsePending, !1, !1), o;
      },
      polyline: function(e, t) {
        var r = e.getAttribute("points"), i;
        r && (i = e8(r));
        var o = new Gi({
          shape: {
            points: i || []
          },
          silent: !0
        });
        return qo(t, o), Oo(e, o, this._defsUsePending, !1, !1), o;
      },
      image: function(e, t) {
        var r = new fi();
        return qo(t, r), Oo(e, r, this._defsUsePending, !1, !1), r.setStyle({
          image: e.getAttribute("xlink:href") || e.getAttribute("href"),
          x: +e.getAttribute("x"),
          y: +e.getAttribute("y"),
          width: +e.getAttribute("width"),
          height: +e.getAttribute("height")
        }), r.silent = !0, r;
      },
      text: function(e, t) {
        var r = e.getAttribute("x") || "0", i = e.getAttribute("y") || "0", o = e.getAttribute("dx") || "0", s = e.getAttribute("dy") || "0";
        this._textX = parseFloat(r) + parseFloat(o), this._textY = parseFloat(i) + parseFloat(s);
        var a = new Ve();
        return qo(t, a), Oo(e, a, this._defsUsePending, !1, !0), a;
      },
      tspan: function(e, t) {
        var r = e.getAttribute("x"), i = e.getAttribute("y");
        r != null && (this._textX = parseFloat(r)), i != null && (this._textY = parseFloat(i));
        var o = e.getAttribute("dx") || "0", s = e.getAttribute("dy") || "0", a = new Ve();
        return qo(t, a), Oo(e, a, this._defsUsePending, !1, !0), this._textX += parseFloat(o), this._textY += parseFloat(s), a;
      },
      path: function(e, t) {
        var r = e.getAttribute("d") || "", i = JK(r);
        return qo(t, i), Oo(e, i, this._defsUsePending, !1, !1), i.silent = !0, i;
      }
    };
  }(), n;
}(), U6 = {
  lineargradient: function(n) {
    var e = parseInt(n.getAttribute("x1") || "0", 10), t = parseInt(n.getAttribute("y1") || "0", 10), r = parseInt(n.getAttribute("x2") || "10", 10), i = parseInt(n.getAttribute("y2") || "0", 10), o = new _b(e, t, r, i);
    return K6(n, o), J6(n, o), o;
  },
  radialgradient: function(n) {
    var e = parseInt(n.getAttribute("cx") || "0", 10), t = parseInt(n.getAttribute("cy") || "0", 10), r = parseInt(n.getAttribute("r") || "0", 10), i = new uJ(e, t, r);
    return K6(n, i), J6(n, i), i;
  }
};
function K6(n, e) {
  var t = n.getAttribute("gradientUnits");
  t === "userSpaceOnUse" && (e.global = !0);
}
function J6(n, e) {
  for (var t = n.firstChild; t; ) {
    if (t.nodeType === 1 && t.nodeName.toLocaleLowerCase() === "stop") {
      var r = t.getAttribute("offset"), i = void 0;
      r && r.indexOf("%") > 0 ? i = parseInt(r, 10) / 100 : r ? i = parseFloat(r) : i = 0;
      var o = {};
      vne(t, o, o);
      var s = o.stopColor || t.getAttribute("stop-color") || "#000000";
      e.colorStops.push({
        offset: i,
        color: s
      });
    }
    t = t.nextSibling;
  }
}
function qo(n, e) {
  n && n.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), Le(e.__inheritedStyle, n.__inheritedStyle));
}
function e8(n) {
  for (var e = _C(n), t = [], r = 0; r < e.length; r += 2) {
    var i = parseFloat(e[r]), o = parseFloat(e[r + 1]);
    t.push([i, o]);
  }
  return t;
}
function Oo(n, e, t, r, i) {
  var o = e, s = o.__inheritedStyle = o.__inheritedStyle || {}, a = {};
  n.nodeType === 1 && (JTt(n, e), vne(n, s, a), r || ePt(n, s, a)), o.style = o.style || {}, s.fill != null && (o.style.fill = t8(o, "fill", s.fill, t)), s.stroke != null && (o.style.stroke = t8(o, "stroke", s.stroke, t)), I([
    "lineWidth",
    "opacity",
    "fillOpacity",
    "strokeOpacity",
    "miterLimit",
    "fontSize"
  ], function(l) {
    s[l] != null && (o.style[l] = parseFloat(s[l]));
  }), I([
    "lineDashOffset",
    "lineCap",
    "lineJoin",
    "fontWeight",
    "fontFamily",
    "fontStyle",
    "textAlign"
  ], function(l) {
    s[l] != null && (o.style[l] = s[l]);
  }), i && (o.__selfStyle = a), s.lineDash && (o.style.lineDash = ae(_C(s.lineDash), function(l) {
    return parseFloat(l);
  })), (s.visibility === "hidden" || s.visibility === "collapse") && (o.invisible = !0), s.display === "none" && (o.ignore = !0);
}
function qTt(n, e) {
  var t = e.__selfStyle;
  if (t) {
    var r = t.textBaseline, i = r;
    !r || r === "auto" || r === "baseline" ? i = "alphabetic" : r === "before-edge" || r === "text-before-edge" ? i = "top" : r === "after-edge" || r === "text-after-edge" ? i = "bottom" : (r === "central" || r === "mathematical") && (i = "middle"), n.style.textBaseline = i;
  }
  var o = e.__inheritedStyle;
  if (o) {
    var s = o.textAlign, a = s;
    s && (s === "middle" && (a = "center"), n.style.textAlign = a);
  }
}
var YTt = /^url\(\s*#(.*?)\)/;
function t8(n, e, t, r) {
  var i = t && t.match(YTt);
  if (i) {
    var o = Ys(i[1]);
    r.push([n, e, o]);
    return;
  }
  return t === "none" && (t = null), t;
}
function XTt(n, e) {
  for (var t = 0; t < e.length; t++) {
    var r = e[t];
    r[0].style[r[1]] = n[r[2]];
  }
}
var UTt = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function _C(n) {
  return n.match(UTt) || [];
}
var KTt = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g, OT = Math.PI / 180;
function JTt(n, e) {
  var t = n.getAttribute("transform");
  if (t) {
    t = t.replace(/,/g, " ");
    var r = [], i = null;
    t.replace(KTt, function(h, f, d) {
      return r.push(f, d), "";
    });
    for (var o = r.length - 1; o > 0; o -= 2) {
      var s = r[o], a = r[o - 1], l = _C(s);
      switch (i = i || Bo(), a) {
        case "translate":
          dl(i, i, [parseFloat(l[0]), parseFloat(l[1] || "0")]);
          break;
        case "scale":
          $I(i, i, [parseFloat(l[0]), parseFloat(l[1] || l[0])]);
          break;
        case "rotate":
          md(i, i, -parseFloat(l[0]) * OT, [
            parseFloat(l[1] || "0"),
            parseFloat(l[2] || "0")
          ]);
          break;
        case "skewX":
          var u = Math.tan(parseFloat(l[0]) * OT);
          Gl(i, [1, 0, u, 1, 0, 0], i);
          break;
        case "skewY":
          var c = Math.tan(parseFloat(l[0]) * OT);
          Gl(i, [1, c, 0, 1, 0, 0], i);
          break;
        case "matrix":
          i[0] = parseFloat(l[0]), i[1] = parseFloat(l[1]), i[2] = parseFloat(l[2]), i[3] = parseFloat(l[3]), i[4] = parseFloat(l[4]), i[5] = parseFloat(l[5]);
          break;
      }
    }
    e.setLocalTransform(i);
  }
}
var n8 = /([^\s:;]+)\s*:\s*([^:;]+)/g;
function vne(n, e, t) {
  var r = n.getAttribute("style");
  if (r) {
    n8.lastIndex = 0;
    for (var i; (i = n8.exec(r)) != null; ) {
      var o = i[1], s = we(gS, o) ? gS[o] : null;
      s && (e[s] = i[2]);
      var a = we(vS, o) ? vS[o] : null;
      a && (t[a] = i[2]);
    }
  }
}
function ePt(n, e, t) {
  for (var r = 0; r < Y6.length; r++) {
    var i = Y6[r], o = n.getAttribute(i);
    o != null && (e[gS[i]] = o);
  }
  for (var r = 0; r < X6.length; r++) {
    var i = X6[r], o = n.getAttribute(i);
    o != null && (t[vS[i]] = o);
  }
}
function mne(n, e) {
  var t = e.width / n.width, r = e.height / n.height, i = Math.min(t, r);
  return {
    scale: i,
    x: -(n.x + n.width / 2) * i + (e.x + e.width / 2),
    y: -(n.y + n.height / 2) * i + (e.y + e.height / 2)
  };
}
function tPt(n, e) {
  var t = new HTt();
  return t.parse(n, e);
}
var nPt = _e([
  "rect",
  "circle",
  "line",
  "ellipse",
  "polygon",
  "polyline",
  "path",
  // <text> <tspan> are also enabled because some SVG might paint text itself,
  // but still need to trigger events or tooltip.
  "text",
  "tspan",
  // <g> is also enabled because this case: if multiple tags share one name
  // and need label displayed, every tags will display the name, which is not
  // expected. So we can put them into a <g name="xxx">. Thereby only one label
  // displayed and located based on the bounding rect of the <g>.
  "g"
]), rPt = (
  /** @class */
  function() {
    function n(e, t) {
      this.type = "geoSVG", this._usedGraphicMap = _e(), this._freedGraphics = [], this._mapName = e, this._parsedXML = gne(t);
    }
    return n.prototype.load = function() {
      var e = this._firstGraphic;
      if (!e) {
        e = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(e), this._boundingRect = this._firstGraphic.boundingRect.clone();
        var t = oPt(e.named), r = t.regions, i = t.regionsMap;
        this._regions = r, this._regionsMap = i;
      }
      return {
        boundingRect: this._boundingRect,
        regions: this._regions,
        regionsMap: this._regionsMap
      };
    }, n.prototype._buildGraphic = function(e) {
      var t, r;
      try {
        t = e && tPt(e, {
          ignoreViewBox: !0,
          ignoreRootClip: !0
        }) || {}, r = t.root, De(r != null);
      } catch (v) {
        throw new Error(`Invalid svg format
` + v.message);
      }
      var i = new Ve();
      i.add(r), i.isGeoSVGGraphicRoot = !0;
      var o = t.width, s = t.height, a = t.viewBoxRect, l = this._boundingRect;
      if (!l) {
        var u = void 0, c = void 0, h = void 0, f = void 0;
        if (o != null ? (u = 0, h = o) : a && (u = a.x, h = a.width), s != null ? (c = 0, f = s) : a && (c = a.y, f = a.height), u == null || c == null) {
          var d = r.getBoundingRect();
          u == null && (u = d.x, h = d.width), c == null && (c = d.y, f = d.height);
        }
        l = this._boundingRect = new et(u, c, h, f);
      }
      if (a) {
        var p = mne(a, l);
        r.scaleX = r.scaleY = p.scale, r.x = p.x, r.y = p.y;
      }
      i.setClipPath(new _t({
        shape: l.plain()
      }));
      var g = [];
      return I(t.named, function(v) {
        nPt.get(v.svgNodeTagLower) != null && (g.push(v), iPt(v.el));
      }), {
        root: i,
        boundingRect: l,
        named: g
      };
    }, n.prototype.useGraphic = function(e) {
      var t = this._usedGraphicMap, r = t.get(e);
      return r || (r = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), t.set(e, r), r);
    }, n.prototype.freeGraphic = function(e) {
      var t = this._usedGraphicMap, r = t.get(e);
      r && (t.removeKey(e), this._freedGraphics.push(r));
    }, n;
  }()
);
function iPt(n) {
  n.silent = !1, n.isGroup && n.traverse(function(e) {
    e.silent = !1;
  });
}
function oPt(n) {
  var e = [], t = _e();
  return I(n, function(r) {
    if (r.namedFrom == null) {
      var i = new ECt(r.name, r.el);
      e.push(i), t.set(r.name, i);
    }
  }), {
    regions: e,
    regionsMap: t
  };
}
var BM = [126, 25], r8 = "南海诸岛", Bh = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];
for (var Ih = 0; Ih < Bh.length; Ih++)
  for (var Yd = 0; Yd < Bh[Ih].length; Yd++)
    Bh[Ih][Yd][0] /= 10.5, Bh[Ih][Yd][1] /= -10.5 / 0.75, Bh[Ih][Yd][0] += BM[0], Bh[Ih][Yd][1] += BM[1];
function sPt(n, e) {
  if (n === "china") {
    for (var t = 0; t < e.length; t++)
      if (e[t].name === r8)
        return;
    e.push(new gte(r8, ae(Bh, function(r) {
      return {
        type: "polygon",
        exterior: r
      };
    }), BM));
  }
}
var aPt = {
  南海诸岛: [32, 80],
  // 全国
  广东: [0, -10],
  香港: [10, 5],
  澳门: [-10, 10],
  // '北京': [-10, 0],
  天津: [5, 5]
};
function lPt(n, e) {
  if (n === "china") {
    var t = aPt[e.name];
    if (t) {
      var r = e.getCenter();
      r[0] += t[0] / 10.5, r[1] += -t[1] / (10.5 / 0.75), e.setCenter(r);
    }
  }
}
var uPt = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
function cPt(n, e) {
  n === "china" && e.name === "台湾" && e.geometries.push({
    type: "polygon",
    exterior: uPt[0]
  });
}
var hPt = "name", fPt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.type = "geoJSON", this._parsedMap = _e(), this._mapName = e, this._specialAreas = r, this._geoJSON = pPt(t);
    }
    return n.prototype.load = function(e, t) {
      t = t || hPt;
      var r = this._parsedMap.get(t);
      if (!r) {
        var i = this._parseToRegions(t);
        r = this._parsedMap.set(t, {
          regions: i,
          boundingRect: dPt(i)
        });
      }
      var o = _e(), s = [];
      return I(r.regions, function(a) {
        var l = a.name;
        e && we(e, l) && (a = a.cloneShallow(l = e[l])), s.push(a), o.set(l, a);
      }), {
        regions: s,
        boundingRect: r.boundingRect || new et(0, 0, 0, 0),
        regionsMap: o
      };
    }, n.prototype._parseToRegions = function(e) {
      var t = this._mapName, r = this._geoJSON, i;
      try {
        i = r ? MCt(r, e) : [];
      } catch (o) {
        throw new Error(`Invalid geoJson format
` + o.message);
      }
      return sPt(t, i), I(i, function(o) {
        var s = o.name;
        lPt(t, o), cPt(t, o);
        var a = this._specialAreas && this._specialAreas[s];
        a && o.transformTo(a.left, a.top, a.width, a.height);
      }, this), i;
    }, n.prototype.getMapForUser = function() {
      return {
        // For backward compatibility, use geoJson
        // PENDING: it has been returning them without clone.
        // do we need to avoid outsite modification?
        geoJson: this._geoJSON,
        geoJSON: this._geoJSON,
        specialAreas: this._specialAreas
      };
    }, n;
  }()
);
function dPt(n) {
  for (var e, t = 0; t < n.length; t++) {
    var r = n[t].getBoundingRect();
    e = e || r.clone(), e.union(r);
  }
  return e;
}
function pPt(n) {
  return be(n) ? typeof JSON < "u" && JSON.parse ? JSON.parse(n) : new Function("return (" + n + ");")() : n;
}
var sm = _e();
const uu = {
  /**
   * Compatible with previous `echarts.registerMap`.
   *
   * @usage
   * ```js
   *
   * echarts.registerMap('USA', geoJson, specialAreas);
   *
   * echarts.registerMap('USA', {
   *     geoJson: geoJson,
   *     specialAreas: {...}
   * });
   * echarts.registerMap('USA', {
   *     geoJSON: geoJson,
   *     specialAreas: {...}
   * });
   *
   * echarts.registerMap('airport', {
   *     svg: svg
   * }
   * ```
   *
   * Note:
   * Do not support that register multiple geoJSON or SVG
   * one map name. Because different geoJSON and SVG have
   * different unit. It's not easy to make sure how those
   * units are mapping/normalize.
   * If intending to use multiple geoJSON or SVG, we can
   * use multiple geo coordinate system.
   */
  registerMap: function(n, e, t) {
    if (e.svg) {
      var r = new rPt(n, e.svg);
      sm.set(n, r);
    } else {
      var i = e.geoJson || e.geoJSON;
      i && !e.features ? t = e.specialAreas : i = e;
      var r = new fPt(n, i, t);
      sm.set(n, r);
    }
  },
  getGeoResource: function(n) {
    return sm.get(n);
  },
  /**
   * Only for exporting to users.
   * **MUST NOT** used internally.
   */
  getMapForUser: function(n) {
    var e = sm.get(n);
    return e && e.type === "geoJSON" && e.getMapForUser();
  },
  load: function(n, e, t) {
    var r = sm.get(n);
    if (!r) {
      process.env.NODE_ENV !== "production" && console.error("Map " + n + " not exists. The GeoJSON of the map must be provided.");
      return;
    }
    return r.load(e, t);
  }
};
var qR = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"], gPt = _e(qR), vPt = _e(qR.concat(["g"])), mPt = _e(qR.concat(["g"])), yne = Ct();
function wO(n) {
  var e = n.getItemStyle(), t = n.get("areaColor");
  return t != null && (e.fill = t), e;
}
function i8(n) {
  var e = n.style;
  e && (e.stroke = e.stroke || e.fill, e.fill = null);
}
var yPt = (
  /** @class */
  function() {
    function n(e) {
      var t = new Ve();
      this.uid = mv("ec_map_draw"), this._controller = new Nb(e.getZr()), this._controllerHost = {
        target: t
      }, this.group = t, t.add(this._regionsGroup = new Ve()), t.add(this._svgGroup = new Ve());
    }
    return n.prototype.draw = function(e, t, r, i, o) {
      var s = e.mainType === "geo", a = e.getData && e.getData();
      s && t.eachComponent({
        mainType: "series",
        subType: "map"
      }, function(m) {
        !a && m.getHostGeoModel() === e && (a = m.getData());
      });
      var l = e.coordinateSystem, u = this._regionsGroup, c = this.group, h = l.getTransformInfo(), f = h.raw, d = h.roam, p = !u.childAt(0) || o;
      p ? (c.x = d.x, c.y = d.y, c.scaleX = d.scaleX, c.scaleY = d.scaleY, c.dirty()) : kt(c, d, e);
      var g = a && a.getVisual("visualMeta") && a.getVisual("visualMeta").length > 0, v = {
        api: r,
        geo: l,
        mapOrGeoModel: e,
        data: a,
        isVisualEncodedByVisualMap: g,
        isGeo: s,
        transformInfoRaw: f
      };
      l.resourceType === "geoJSON" ? this._buildGeoJSON(v) : l.resourceType === "geoSVG" && this._buildSVG(v), this._updateController(e, t, r), this._updateMapSelectHandler(e, u, r, i);
    }, n.prototype._buildGeoJSON = function(e) {
      var t = this._regionsGroupByName = _e(), r = _e(), i = this._regionsGroup, o = e.transformInfoRaw, s = e.mapOrGeoModel, a = e.data, l = e.geo.projection, u = l && l.stream;
      function c(d, p) {
        return p && (d = p(d)), d && [d[0] * o.scaleX + o.x, d[1] * o.scaleY + o.y];
      }
      function h(d) {
        for (var p = [], g = !u && l && l.project, v = 0; v < d.length; ++v) {
          var m = c(d[v], g);
          m && p.push(m);
        }
        return p;
      }
      function f(d) {
        return {
          shape: {
            points: h(d)
          }
        };
      }
      i.removeAll(), I(e.geo.regions, function(d) {
        var p = d.name, g = t.get(p), v = r.get(p) || {}, m = v.dataIdx, y = v.regionModel;
        g || (g = t.set(p, new Ve()), i.add(g), m = a ? a.indexOfName(p) : null, y = e.isGeo ? s.getRegionModel(p) : a ? a.getItemModel(m) : null, r.set(p, {
          dataIdx: m,
          regionModel: y
        }));
        var b = [], O = [];
        I(d.geometries, function(S) {
          if (S.type === "polygon") {
            var _ = [S.exterior].concat(S.interiors || []);
            u && (_ = c8(_, u)), I(_, function(A) {
              b.push(new Zi(f(A)));
            });
          } else {
            var C = S.points;
            u && (C = c8(C, u, !0)), I(C, function(A) {
              O.push(new Gi(f(A)));
            });
          }
        });
        var w = c(d.getCenter(), l && l.project);
        function x(S, _) {
          if (S.length) {
            var C = new tR({
              culling: !0,
              segmentIgnoreThreshold: 1,
              shape: {
                paths: S
              }
            });
            g.add(C), o8(e, C, m, y), s8(e, C, p, y, s, m, w), _ && (i8(C), I(C.states, i8));
          }
        }
        x(b), x(O, !0);
      }), t.each(function(d, p) {
        var g = r.get(p), v = g.dataIdx, m = g.regionModel;
        a8(e, d, p, m, s, v), l8(e, d, p, m, s), u8(e, d, p, m, s);
      }, this);
    }, n.prototype._buildSVG = function(e) {
      var t = e.geo.map, r = e.transformInfoRaw;
      this._svgGroup.x = r.x, this._svgGroup.y = r.y, this._svgGroup.scaleX = r.scaleX, this._svgGroup.scaleY = r.scaleY, this._svgResourceChanged(t) && (this._freeSVG(), this._useSVG(t));
      var i = this._svgDispatcherMap = _e(), o = !1;
      I(this._svgGraphicRecord.named, function(s) {
        var a = s.name, l = e.mapOrGeoModel, u = e.data, c = s.svgNodeTagLower, h = s.el, f = u ? u.indexOfName(a) : null, d = l.getRegionModel(a);
        if (gPt.get(c) != null && h instanceof As && o8(e, h, f, d), h instanceof As && (h.culling = !0), h.z2EmphasisLift = 0, !s.namedFrom && (mPt.get(c) != null && s8(e, h, a, d, l, f, null), a8(e, h, a, d, l, f), l8(e, h, a, d, l), vPt.get(c) != null)) {
          var p = u8(e, h, a, d, l);
          p === "self" && (o = !0);
          var g = i.get(a) || i.set(a, []);
          g.push(h);
        }
      }, this), this._enableBlurEntireSVG(o, e);
    }, n.prototype._enableBlurEntireSVG = function(e, t) {
      if (e && t.isGeo) {
        var r = t.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(), i = r.opacity;
        this._svgGraphicRecord.root.traverse(function(o) {
          if (!o.isGroup) {
            id(o);
            var s = o.ensureState("blur").style || {};
            s.opacity == null && i != null && (s.opacity = i), o.ensureState("emphasis");
          }
        });
      }
    }, n.prototype.remove = function() {
      this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
    }, n.prototype.findHighDownDispatchers = function(e, t) {
      if (e == null)
        return [];
      var r = t.coordinateSystem;
      if (r.resourceType === "geoJSON") {
        var i = this._regionsGroupByName;
        if (i) {
          var o = i.get(e);
          return o ? [o] : [];
        }
      } else if (r.resourceType === "geoSVG")
        return this._svgDispatcherMap && this._svgDispatcherMap.get(e) || [];
    }, n.prototype._svgResourceChanged = function(e) {
      return this._svgMapName !== e;
    }, n.prototype._useSVG = function(e) {
      var t = uu.getGeoResource(e);
      if (t && t.type === "geoSVG") {
        var r = t.useGraphic(this.uid);
        this._svgGroup.add(r.root), this._svgGraphicRecord = r, this._svgMapName = e;
      }
    }, n.prototype._freeSVG = function() {
      var e = this._svgMapName;
      if (e != null) {
        var t = uu.getGeoResource(e);
        t && t.type === "geoSVG" && t.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
      }
    }, n.prototype._updateController = function(e, t, r) {
      var i = e.coordinateSystem, o = this._controller, s = this._controllerHost;
      s.zoomLimit = e.get("scaleLimit"), s.zoom = i.getZoom(), o.enable(e.get("roam") || !1);
      var a = e.mainType;
      function l() {
        var u = {
          type: "geoRoam",
          componentType: a
        };
        return u[a + "Id"] = e.id, u;
      }
      o.off("pan").on("pan", function(u) {
        this._mouseDownFlag = !1, jR(s, u.dx, u.dy), r.dispatchAction(te(l(), {
          dx: u.dx,
          dy: u.dy,
          animation: {
            duration: 0
          }
        }));
      }, this), o.off("zoom").on("zoom", function(u) {
        this._mouseDownFlag = !1, HR(s, u.scale, u.originX, u.originY), r.dispatchAction(te(l(), {
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY,
          animation: {
            duration: 0
          }
        }));
      }, this), o.setPointerChecker(function(u, c, h) {
        return i.containPoint([c, h]) && !SC(u, r, e);
      });
    }, n.prototype.resetForLabelLayout = function() {
      this.group.traverse(function(e) {
        var t = e.getTextContent();
        t && (t.ignore = yne(t).ignore);
      });
    }, n.prototype._updateMapSelectHandler = function(e, t, r, i) {
      var o = this;
      t.off("mousedown"), t.off("click"), e.get("selectedMode") && (t.on("mousedown", function() {
        o._mouseDownFlag = !0;
      }), t.on("click", function(s) {
        o._mouseDownFlag && (o._mouseDownFlag = !1);
      }));
    }, n;
  }()
);
function o8(n, e, t, r) {
  var i = r.getModel("itemStyle"), o = r.getModel(["emphasis", "itemStyle"]), s = r.getModel(["blur", "itemStyle"]), a = r.getModel(["select", "itemStyle"]), l = wO(i), u = wO(o), c = wO(a), h = wO(s), f = n.data;
  if (f) {
    var d = f.getItemVisual(t, "style"), p = f.getItemVisual(t, "decal");
    n.isVisualEncodedByVisualMap && d.fill && (l.fill = d.fill), p && (l.decal = Ig(p, n.api));
  }
  e.setStyle(l), e.style.strokeNoScale = !0, e.ensureState("emphasis").style = u, e.ensureState("select").style = c, e.ensureState("blur").style = h, id(e);
}
function s8(n, e, t, r, i, o, s) {
  var a = n.data, l = n.isGeo, u = a && isNaN(a.get(a.mapDimension("value"), o)), c = a && a.getItemLayout(o);
  if (l || u || c && c.showLabel) {
    var h = l ? t : o, f = void 0;
    (!a || o >= 0) && (f = i);
    var d = s ? {
      normal: {
        align: "center",
        verticalAlign: "middle"
      }
    } : null;
    ci(e, kr(r), {
      labelFetcher: f,
      labelDataIndex: h,
      defaultText: t
    }, d);
    var p = e.getTextContent();
    if (p && (yne(p).ignore = p.ignore, e.textConfig && s)) {
      var g = e.getBoundingRect().clone();
      e.textConfig.layoutRect = g, e.textConfig.position = [(s[0] - g.x) / g.width * 100 + "%", (s[1] - g.y) / g.height * 100 + "%"];
    }
    e.disableLabelAnimation = !0;
  } else
    e.removeTextContent(), e.removeTextConfig(), e.disableLabelAnimation = null;
}
function a8(n, e, t, r, i, o) {
  n.data ? n.data.setItemGraphicEl(o, e) : Fe(e).eventData = {
    componentType: "geo",
    componentIndex: i.componentIndex,
    geoIndex: i.componentIndex,
    name: t,
    region: r && r.option || {}
  };
}
function l8(n, e, t, r, i) {
  n.data || gv({
    el: e,
    componentModel: i,
    itemName: t,
    // @ts-ignore FIXME:TS fix the "compatible with each other"?
    itemTooltipOption: r.get("tooltip")
  });
}
function u8(n, e, t, r, i) {
  e.highDownSilentOnTouch = !!i.get("selectedMode");
  var o = r.getModel("emphasis"), s = o.get("focus");
  return $n(e, s, o.get("blurScope"), o.get("disabled")), n.isGeo && MOt(e, i, t), s;
}
function c8(n, e, t) {
  var r = [], i;
  function o() {
    i = [];
  }
  function s() {
    i.length && (r.push(i), i = []);
  }
  var a = e({
    polygonStart: o,
    polygonEnd: s,
    lineStart: o,
    lineEnd: s,
    point: function(l, u) {
      isFinite(l) && isFinite(u) && i.push([l, u]);
    },
    sphere: function() {
    }
  });
  return !t && a.polygonStart(), I(n, function(l) {
    a.lineStart();
    for (var u = 0; u < l.length; u++)
      a.point(l[u][0], l[u][1]);
    a.lineEnd();
  }), !t && a.polygonEnd(), r;
}
const bne = yPt;
var bPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      if (!(o && o.type === "mapToggleSelect" && o.from === this.uid)) {
        var s = this.group;
        if (s.removeAll(), !t.getHostGeoModel()) {
          if (this._mapDraw && o && o.type === "geoRoam" && this._mapDraw.resetForLabelLayout(), o && o.type === "geoRoam" && o.componentType === "series" && o.seriesId === t.id) {
            var a = this._mapDraw;
            a && s.add(a.group);
          } else if (t.needsDrawMap) {
            var a = this._mapDraw || new bne(i);
            s.add(a.group), a.draw(t, r, i, this, o), this._mapDraw = a;
          } else
            this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          t.get("showLegendSymbol") && r.getComponent("legend") && this._renderSymbols(t, r, i);
        }
      }
    }, e.prototype.remove = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
    }, e.prototype._renderSymbols = function(t, r, i) {
      var o = t.originalData, s = this.group;
      o.each(o.mapDimension("value"), function(a, l) {
        if (!isNaN(a)) {
          var u = o.getItemLayout(l);
          if (!(!u || !u.point)) {
            var c = u.point, h = u.offset, f = new rh({
              style: {
                // Because the special of map draw.
                // Which needs statistic of multiple series and draw on one map.
                // And each series also need a symbol with legend color
                //
                // Layout and visual are put one the different data
                // TODO
                fill: t.getData().getVisual("style").fill
              },
              shape: {
                cx: c[0] + h * 9,
                cy: c[1],
                r: 3
              },
              silent: !0,
              // Do not overlap the first series, on which labels are displayed.
              z2: 8 + (h ? 0 : dv + 1)
            });
            if (!h) {
              var d = t.mainSeries.getData(), p = o.getName(l), g = d.indexOfName(p), v = o.getItemModel(l), m = v.getModel("label"), y = d.getItemGraphicEl(g);
              ci(f, kr(v), {
                labelFetcher: {
                  getFormattedLabel: function(b, O) {
                    return t.getFormattedLabel(g, O);
                  }
                },
                defaultText: p
              }), f.disableLabelAnimation = !0, m.get("position") || f.setTextConfig({
                position: "bottom"
              }), y.onHoverStateChange = function(b) {
                Hx(f, b);
              };
            }
            s.add(f);
          }
        }
      });
    }, e.type = "map", e;
  }(dn)
);
const OPt = bPt;
var wPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.needsDrawMap = !1, t.seriesGroup = [], t.getTooltipPosition = function(r) {
        if (r != null) {
          var i = this.getData().getName(r), o = this.coordinateSystem, s = o.getRegion(i);
          return s && o.dataToPoint(s.getCenter());
        }
      }, t;
    }
    return e.prototype.getInitialData = function(t) {
      for (var r = Av(this, {
        coordDimensions: ["value"],
        encodeDefaulter: je(hR, this)
      }), i = _e(), o = [], s = 0, a = r.count(); s < a; s++) {
        var l = r.getName(s);
        i.set(l, !0);
      }
      var u = uu.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
      return I(u.regions, function(c) {
        var h = c.name;
        i.get(h) || o.push(h);
      }), r.appendValues([], o), r;
    }, e.prototype.getHostGeoModel = function() {
      var t = this.option.geoIndex;
      return t != null ? this.ecModel.getComponent("geo", t) : null;
    }, e.prototype.getMapType = function() {
      return (this.getHostGeoModel() || this).option.map;
    }, e.prototype.getRawValue = function(t) {
      var r = this.getData();
      return r.get(r.mapDimension("value"), t);
    }, e.prototype.getRegionModel = function(t) {
      var r = this.getData();
      return r.getItemModel(r.indexOfName(t));
    }, e.prototype.formatTooltip = function(t, r, i) {
      for (var o = this.getData(), s = this.getRawValue(t), a = o.getName(t), l = this.seriesGroup, u = [], c = 0; c < l.length; c++) {
        var h = l[c].originalData.indexOfName(a), f = o.mapDimension("value");
        isNaN(l[c].originalData.get(f, h)) || u.push(l[c].name);
      }
      return Mr("section", {
        header: u.join(", "),
        noHeader: !u.length,
        blocks: [Mr("nameValue", {
          name: a,
          value: s
        })]
      });
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.getLegendIcon = function(t) {
      var r = t.icon || "roundRect", i = ar(r, 0, 0, t.itemWidth, t.itemHeight, t.itemStyle.fill);
      return i.setStyle(t.itemStyle), i.style.stroke = "none", r.indexOf("empty") > -1 && (i.style.stroke = i.style.fill, i.style.fill = "#fff", i.style.lineWidth = 2), i;
    }, e.type = "series.map", e.dependencies = ["geo"], e.layoutMode = "box", e.defaultOption = {
      // 一级层叠
      // zlevel: 0,
      // 二级层叠
      z: 2,
      coordinateSystem: "geo",
      // map should be explicitly specified since ec3.
      map: "",
      // If `geoIndex` is not specified, a exclusive geo will be
      // created. Otherwise use the specified geo component, and
      // `map` and `mapType` are ignored.
      // geoIndex: 0,
      // 'center' | 'left' | 'right' | 'x%' | {number}
      left: "center",
      // 'center' | 'top' | 'bottom' | 'x%' | {number}
      top: "center",
      // right
      // bottom
      // width:
      // height
      // Aspect is width / height. Inited to be geoJson bbox aspect
      // This parameter is used for scale this aspect
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient.
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      showLegendSymbol: !0,
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ],
      // higher priority than center and zoom
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      selectedMode: !0,
      label: {
        show: !1,
        color: "#000"
      },
      // scaleLimit: null,
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444",
        areaColor: "#eee"
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          areaColor: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      nameProperty: "name"
    }, e;
  }(Sn)
);
const xPt = wPt;
function SPt(n, e) {
  var t = {};
  return I(n, function(r) {
    r.each(r.mapDimension("value"), function(i, o) {
      var s = "ec-" + r.getName(o);
      t[s] = t[s] || [], isNaN(i) || t[s].push(i);
    });
  }), n[0].map(n[0].mapDimension("value"), function(r, i) {
    for (var o = "ec-" + n[0].getName(i), s = 0, a = 1 / 0, l = -1 / 0, u = t[o].length, c = 0; c < u; c++)
      a = Math.min(a, t[o][c]), l = Math.max(l, t[o][c]), s += t[o][c];
    var h;
    return e === "min" ? h = a : e === "max" ? h = l : e === "average" ? h = s / u : h = s, u === 0 ? NaN : h;
  });
}
function _Pt(n) {
  var e = {};
  n.eachSeriesByType("map", function(t) {
    var r = t.getHostGeoModel(), i = r ? "o" + r.id : "i" + t.getMapType();
    (e[i] = e[i] || []).push(t);
  }), I(e, function(t, r) {
    for (var i = SPt(ae(t, function(s) {
      return s.getData();
    }), t[0].get("mapValueCalculation")), o = 0; o < t.length; o++)
      t[o].originalData = t[o].getData();
    for (var o = 0; o < t.length; o++)
      t[o].seriesGroup = t, t[o].needsDrawMap = o === 0 && !t[o].getHostGeoModel(), t[o].setData(i.cloneShallow()), t[o].mainSeries = t[0];
  });
}
function CPt(n) {
  var e = {};
  n.eachSeriesByType("map", function(t) {
    var r = t.getMapType();
    if (!(t.getHostGeoModel() || e[r])) {
      var i = {};
      I(t.seriesGroup, function(s) {
        var a = s.coordinateSystem, l = s.originalData;
        s.get("showLegendSymbol") && n.getComponent("legend") && l.each(l.mapDimension("value"), function(u, c) {
          var h = l.getName(c), f = a.getRegion(h);
          if (!(!f || isNaN(u))) {
            var d = i[h] || 0, p = a.dataToPoint(f.getCenter());
            i[h] = d + 1, l.setItemLayout(c, {
              point: p,
              offset: d
            });
          }
        });
      });
      var o = t.getData();
      o.each(function(s) {
        var a = o.getName(s), l = o.getItemLayout(s) || {};
        l.showLabel = !i[a], o.setItemLayout(s, l);
      }), e[r] = !0;
    }
  });
}
var h8 = si, Bb = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this) || this;
      return r.type = "view", r.dimensions = ["x", "y"], r._roamTransformable = new zl(), r._rawTransformable = new zl(), r.name = t, r;
    }
    return e.prototype.setBoundingRect = function(t, r, i, o) {
      return this._rect = new et(t, r, i, o), this._rect;
    }, e.prototype.getBoundingRect = function() {
      return this._rect;
    }, e.prototype.setViewRect = function(t, r, i, o) {
      this._transformTo(t, r, i, o), this._viewRect = new et(t, r, i, o);
    }, e.prototype._transformTo = function(t, r, i, o) {
      var s = this.getBoundingRect(), a = this._rawTransformable;
      a.transform = s.calculateTransform(new et(t, r, i, o));
      var l = a.parent;
      a.parent = null, a.decomposeTransform(), a.parent = l, this._updateTransform();
    }, e.prototype.setCenter = function(t, r) {
      t && (this._center = [fe(t[0], r.getWidth()), fe(t[1], r.getHeight())], this._updateCenterAndZoom());
    }, e.prototype.setZoom = function(t) {
      t = t || 1;
      var r = this.zoomLimit;
      r && (r.max != null && (t = Math.min(r.max, t)), r.min != null && (t = Math.max(r.min, t))), this._zoom = t, this._updateCenterAndZoom();
    }, e.prototype.getDefaultCenter = function() {
      var t = this.getBoundingRect(), r = t.x + t.width / 2, i = t.y + t.height / 2;
      return [r, i];
    }, e.prototype.getCenter = function() {
      return this._center || this.getDefaultCenter();
    }, e.prototype.getZoom = function() {
      return this._zoom || 1;
    }, e.prototype.getRoamTransform = function() {
      return this._roamTransformable.getLocalTransform();
    }, e.prototype._updateCenterAndZoom = function() {
      var t = this._rawTransformable.getLocalTransform(), r = this._roamTransformable, i = this.getDefaultCenter(), o = this.getCenter(), s = this.getZoom();
      o = si([], o, t), i = si([], i, t), r.originX = o[0], r.originY = o[1], r.x = i[0] - o[0], r.y = i[1] - o[1], r.scaleX = r.scaleY = s, this._updateTransform();
    }, e.prototype._updateTransform = function() {
      var t = this._roamTransformable, r = this._rawTransformable;
      r.parent = t, t.updateTransform(), r.updateTransform(), RI(this.transform || (this.transform = []), r.transform || Bo()), this._rawTransform = r.getLocalTransform(), this.invTransform = this.invTransform || [], hv(this.invTransform, this.transform), this.decomposeTransform();
    }, e.prototype.getTransformInfo = function() {
      var t = this._rawTransformable, r = this._roamTransformable, i = new zl();
      return i.transform = r.transform, i.decomposeTransform(), {
        roam: {
          x: i.x,
          y: i.y,
          scaleX: i.scaleX,
          scaleY: i.scaleY
        },
        raw: {
          x: t.x,
          y: t.y,
          scaleX: t.scaleX,
          scaleY: t.scaleY
        }
      };
    }, e.prototype.getViewRect = function() {
      return this._viewRect;
    }, e.prototype.getViewRectAfterRoam = function() {
      var t = this.getBoundingRect().clone();
      return t.applyTransform(this.transform), t;
    }, e.prototype.dataToPoint = function(t, r, i) {
      var o = r ? this._rawTransform : this.transform;
      return i = i || [], o ? h8(i, t, o) : Di(i, t);
    }, e.prototype.pointToData = function(t) {
      var r = this.invTransform;
      return r ? h8([], t, r) : [t[0], t[1]];
    }, e.prototype.convertToPixel = function(t, r, i) {
      var o = f8(r);
      return o === this ? o.dataToPoint(i) : null;
    }, e.prototype.convertFromPixel = function(t, r, i) {
      var o = f8(r);
      return o === this ? o.pointToData(i) : null;
    }, e.prototype.containPoint = function(t) {
      return this.getViewRectAfterRoam().contain(t[0], t[1]);
    }, e.dimensions = ["x", "y"], e;
  }(zl)
);
function f8(n) {
  var e = n.seriesModel;
  return e ? e.coordinateSystem : null;
}
var APt = {
  geoJSON: {
    aspectScale: 0.75,
    invertLongitute: !0
  },
  geoSVG: {
    aspectScale: 1,
    invertLongitute: !1
  }
}, One = ["lng", "lat"], wne = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this, t) || this;
      o.dimensions = One, o.type = "geo", o._nameCoordMap = _e(), o.map = r;
      var s = i.projection, a = uu.load(r, i.nameMap, i.nameProperty), l = uu.getGeoResource(r), u = o.resourceType = l ? l.type : null, c = o.regions = a.regions, h = APt[l.type];
      o._regionsMap = a.regionsMap, o.regions = a.regions, process.env.NODE_ENV !== "production" && s && (u === "geoSVG" && (process.env.NODE_ENV !== "production" && En("Map " + r + " with SVG source can't use projection. Only GeoJSON source supports projection."), s = null), s.project && s.unproject || (process.env.NODE_ENV !== "production" && En("project and unproject must be both provided in the projeciton."), s = null)), o.projection = s;
      var f;
      if (s)
        for (var d = 0; d < c.length; d++) {
          var p = c[d].getBoundingRect(s);
          f = f || p.clone(), f.union(p);
        }
      else
        f = a.boundingRect;
      return o.setBoundingRect(f.x, f.y, f.width, f.height), o.aspectScale = s ? 1 : Qe(i.aspectScale, h.aspectScale), o._invertLongitute = s ? !1 : h.invertLongitute, o;
    }
    return e.prototype._transformTo = function(t, r, i, o) {
      var s = this.getBoundingRect(), a = this._invertLongitute;
      s = s.clone(), a && (s.y = -s.y - s.height);
      var l = this._rawTransformable;
      l.transform = s.calculateTransform(new et(t, r, i, o));
      var u = l.parent;
      l.parent = null, l.decomposeTransform(), l.parent = u, a && (l.scaleY = -l.scaleY), this._updateTransform();
    }, e.prototype.getRegion = function(t) {
      return this._regionsMap.get(t);
    }, e.prototype.getRegionByCoord = function(t) {
      for (var r = this.regions, i = 0; i < r.length; i++) {
        var o = r[i];
        if (o.type === "geoJSON" && o.contain(t))
          return r[i];
      }
    }, e.prototype.addGeoCoord = function(t, r) {
      this._nameCoordMap.set(t, r);
    }, e.prototype.getGeoCoord = function(t) {
      var r = this._regionsMap.get(t);
      return this._nameCoordMap.get(t) || r && r.getCenter();
    }, e.prototype.dataToPoint = function(t, r, i) {
      if (be(t) && (t = this.getGeoCoord(t)), t) {
        var o = this.projection;
        return o && (t = o.project(t)), t && this.projectedToPoint(t, r, i);
      }
    }, e.prototype.pointToData = function(t) {
      var r = this.projection;
      return r && (t = r.unproject(t)), t && this.pointToProjected(t);
    }, e.prototype.pointToProjected = function(t) {
      return n.prototype.pointToData.call(this, t);
    }, e.prototype.projectedToPoint = function(t, r, i) {
      return n.prototype.dataToPoint.call(this, t, r, i);
    }, e.prototype.convertToPixel = function(t, r, i) {
      var o = d8(r);
      return o === this ? o.dataToPoint(i) : null;
    }, e.prototype.convertFromPixel = function(t, r, i) {
      var o = d8(r);
      return o === this ? o.pointToData(i) : null;
    }, e;
  }(Bb)
);
lr(wne, Bb);
function d8(n) {
  var e = n.geoModel, t = n.seriesModel;
  return e ? e.coordinateSystem : t ? t.coordinateSystem || (t.getReferringComponents("geo", nr).models[0] || {}).coordinateSystem : null;
}
const p8 = wne;
function g8(n, e) {
  var t = n.get("boundingCoords");
  if (t != null) {
    var r = t[0], i = t[1];
    if (!(isFinite(r[0]) && isFinite(r[1]) && isFinite(i[0]) && isFinite(i[1])))
      process.env.NODE_ENV !== "production" && console.error("Invalid boundingCoords");
    else {
      var o = this.projection;
      if (o) {
        var s = r[0], a = r[1], l = i[0], u = i[1];
        r = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0];
        var c = function(x, S, _, C) {
          for (var A = _ - x, T = C - S, k = 0; k <= 100; k++) {
            var L = k / 100, D = o.project([x + A * L, S + T * L]);
            oc(r, r, D), sc(i, i, D);
          }
        };
        c(s, a, l, a), c(l, a, l, u), c(l, u, s, u), c(s, u, l, a);
      }
      this.setBoundingRect(r[0], r[1], i[0] - r[0], i[1] - r[1]);
    }
  }
  var h = this.getBoundingRect(), f = n.get("layoutCenter"), d = n.get("layoutSize"), p = e.getWidth(), g = e.getHeight(), v = h.width / h.height * this.aspectScale, m = !1, y, b;
  f && d && (y = [fe(f[0], p), fe(f[1], g)], b = fe(d, Math.min(p, g)), !isNaN(y[0]) && !isNaN(y[1]) && !isNaN(b) ? m = !0 : process.env.NODE_ENV !== "production" && console.warn("Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead."));
  var O;
  if (m)
    O = {}, v > 1 ? (O.width = b, O.height = b / v) : (O.height = b, O.width = b * v), O.y = y[1] - O.height / 2, O.x = y[0] - O.width / 2;
  else {
    var w = n.getBoxLayoutParams();
    w.aspect = v, O = mr(w, {
      width: p,
      height: g
    });
  }
  this.setViewRect(O.x, O.y, O.width, O.height), this.setCenter(n.get("center"), e), this.setZoom(n.get("zoom"));
}
function TPt(n, e) {
  I(e.get("geoCoord"), function(t, r) {
    n.addGeoCoord(r, t);
  });
}
var PPt = (
  /** @class */
  function() {
    function n() {
      this.dimensions = One;
    }
    return n.prototype.create = function(e, t) {
      var r = [];
      function i(s) {
        return {
          nameProperty: s.get("nameProperty"),
          aspectScale: s.get("aspectScale"),
          projection: s.get("projection")
        };
      }
      e.eachComponent("geo", function(s, a) {
        var l = s.get("map"), u = new p8(l + a, l, te({
          nameMap: s.get("nameMap")
        }, i(s)));
        u.zoomLimit = s.get("scaleLimit"), r.push(u), s.coordinateSystem = u, u.model = s, u.resize = g8, u.resize(s, t);
      }), e.eachSeries(function(s) {
        var a = s.get("coordinateSystem");
        if (a === "geo") {
          var l = s.get("geoIndex") || 0;
          s.coordinateSystem = r[l];
        }
      });
      var o = {};
      return e.eachSeriesByType("map", function(s) {
        if (!s.getHostGeoModel()) {
          var a = s.getMapType();
          o[a] = o[a] || [], o[a].push(s);
        }
      }), I(o, function(s, a) {
        var l = ae(s, function(c) {
          return c.get("nameMap");
        }), u = new p8(a, a, te({
          nameMap: MI(l)
        }, i(s[0])));
        u.zoomLimit = tr.apply(null, ae(s, function(c) {
          return c.get("scaleLimit");
        })), r.push(u), u.resize = g8, u.resize(s[0], t), I(s, function(c) {
          c.coordinateSystem = u, TPt(u, c);
        });
      }), r;
    }, n.prototype.getFilledRegions = function(e, t, r, i) {
      for (var o = (e || []).slice(), s = _e(), a = 0; a < o.length; a++)
        s.set(o[a].name, o[a]);
      var l = uu.load(t, r, i);
      return I(l.regions, function(u) {
        var c = u.name;
        !s.get(c) && o.push({
          name: c
        });
      }), o;
    }, n;
  }()
), EPt = new PPt();
const xne = EPt;
var kPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r, i) {
      var o = uu.getGeoResource(t.map);
      if (o && o.type === "geoJSON") {
        var s = t.itemStyle = t.itemStyle || {};
        "color" in s || (s.color = "#eee");
      }
      this.mergeDefaultAndTheme(t, i), td(t, "label", ["show"]);
    }, e.prototype.optionUpdated = function() {
      var t = this, r = this.option;
      r.regions = xne.getFilledRegions(r.regions, r.map, r.nameMap, r.nameProperty);
      var i = {};
      this._optionModelMap = fl(r.regions || [], function(o, s) {
        var a = s.name;
        return a && (o.set(a, new fn(s, t, t.ecModel)), s.selected && (i[a] = !0)), o;
      }, _e()), r.selectedMap || (r.selectedMap = i);
    }, e.prototype.getRegionModel = function(t) {
      return this._optionModelMap.get(t) || new fn(null, this, this.ecModel);
    }, e.prototype.getFormattedLabel = function(t, r) {
      var i = this.getRegionModel(t), o = r === "normal" ? i.get(["label", "formatter"]) : i.get(["emphasis", "label", "formatter"]), s = {
        name: t
      };
      if (Pe(o))
        return s.status = r, o(s);
      if (be(o))
        return o.replace("{a}", t ?? "");
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.select = function(t) {
      var r = this.option, i = r.selectedMode;
      if (i) {
        i !== "multiple" && (r.selectedMap = null);
        var o = r.selectedMap || (r.selectedMap = {});
        o[t] = !0;
      }
    }, e.prototype.unSelect = function(t) {
      var r = this.option.selectedMap;
      r && (r[t] = !1);
    }, e.prototype.toggleSelected = function(t) {
      this[this.isSelected(t) ? "unSelect" : "select"](t);
    }, e.prototype.isSelected = function(t) {
      var r = this.option.selectedMap;
      return !!(r && r[t]);
    }, e.type = "geo", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      show: !0,
      left: "center",
      top: "center",
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // /// Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      silent: !1,
      // Map type
      map: "",
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ]
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      // selectedMode: false
      label: {
        show: !1,
        color: "#000"
      },
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444"
        // Default color:
        // + geoJSON: #eee
        // + geoSVG: null (use SVG original `fill`)
        // color: '#eee'
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      regions: []
      // tooltip: {
      //     show: false
      // }
    }, e;
  }(Ot)
);
const MPt = kPt;
function v8(n, e) {
  return n.pointToProjected ? n.pointToProjected(e) : n.pointToData(e);
}
function YR(n, e, t, r) {
  var i = n.getZoom(), o = n.getCenter(), s = e.zoom, a = n.projectedToPoint ? n.projectedToPoint(o) : n.dataToPoint(o);
  if (e.dx != null && e.dy != null && (a[0] -= e.dx, a[1] -= e.dy, n.setCenter(v8(n, a), r)), s != null) {
    if (t) {
      var l = t.min || 0, u = t.max || 1 / 0;
      s = Math.max(Math.min(i * s, u), l) / i;
    }
    n.scaleX *= s, n.scaleY *= s;
    var c = (e.originX - n.x) * (s - 1), h = (e.originY - n.y) * (s - 1);
    n.x -= c, n.y -= h, n.updateTransform(), n.setCenter(v8(n, a), r), n.setZoom(s * i);
  }
  return {
    center: n.getCenter(),
    zoom: n.getZoom()
  };
}
var DPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.focusBlurEnabled = !0, t;
    }
    return e.prototype.init = function(t, r) {
      this._api = r;
    }, e.prototype.render = function(t, r, i, o) {
      if (this._model = t, !t.get("show")) {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
        return;
      }
      this._mapDraw || (this._mapDraw = new bne(i));
      var s = this._mapDraw;
      s.draw(t, r, i, this, o), s.group.on("click", this._handleRegionClick, this), s.group.silent = t.get("silent"), this.group.add(s.group), this.updateSelectStatus(t, r, i);
    }, e.prototype._handleRegionClick = function(t) {
      var r;
      df(t.target, function(i) {
        return (r = Fe(i).eventData) != null;
      }, !0), r && this._api.dispatchAction({
        type: "geoToggleSelect",
        geoId: this._model.id,
        name: r.name
      });
    }, e.prototype.updateSelectStatus = function(t, r, i) {
      var o = this;
      this._mapDraw.group.traverse(function(s) {
        var a = Fe(s).eventData;
        if (a)
          return o._model.isSelected(a.name) ? i.enterSelect(s) : i.leaveSelect(s), !0;
      });
    }, e.prototype.findHighDownDispatchers = function(t) {
      return this._mapDraw && this._mapDraw.findHighDownDispatchers(t, this._model);
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove();
    }, e.type = "geo", e;
  }(Nn)
);
const LPt = DPt;
function IPt(n, e, t) {
  uu.registerMap(n, e, t);
}
function Sne(n) {
  n.registerCoordinateSystem("geo", xne), n.registerComponentModel(MPt), n.registerComponentView(LPt), n.registerImpl("registerMap", IPt), n.registerImpl("getMap", function(t) {
    return uu.getMapForUser(t);
  });
  function e(t, r) {
    r.update = "geo:updateSelectStatus", n.registerAction(r, function(i, o) {
      var s = {}, a = [];
      return o.eachComponent({
        mainType: "geo",
        query: i
      }, function(l) {
        l[t](i.name);
        var u = l.coordinateSystem;
        I(u.regions, function(h) {
          s[h.name] = l.isSelected(h.name) || !1;
        });
        var c = [];
        I(s, function(h, f) {
          s[f] && c.push(f);
        }), a.push({
          geoIndex: l.componentIndex,
          // Use singular, the same naming convention as the event `selectchanged`.
          name: c
        });
      }), {
        selected: s,
        allSelected: a,
        name: i.name
      };
    });
  }
  e("toggleSelected", {
    type: "geoToggleSelect",
    event: "geoselectchanged"
  }), e("select", {
    type: "geoSelect",
    event: "geoselected"
  }), e("unSelect", {
    type: "geoUnSelect",
    event: "geounselected"
  }), n.registerAction({
    type: "geoRoam",
    event: "geoRoam",
    update: "updateTransform"
  }, function(t, r, i) {
    var o = t.componentType || "series";
    r.eachComponent({
      mainType: o,
      query: t
    }, function(s) {
      var a = s.coordinateSystem;
      if (a.type === "geo") {
        var l = YR(a, t, s.get("scaleLimit"), i);
        s.setCenter && s.setCenter(l.center), s.setZoom && s.setZoom(l.zoom), o === "series" && I(s.seriesGroup, function(u) {
          u.setCenter(l.center), u.setZoom(l.zoom);
        });
      }
    });
  });
}
function RPt(n) {
  at(Sne), n.registerChartView(OPt), n.registerSeriesModel(xPt), n.registerLayout(CPt), n.registerProcessor(n.PRIORITY.PROCESSOR.STATISTIC, _Pt), xee("map", n.registerAction);
}
function $Pt(n) {
  var e = n;
  e.hierNode = {
    defaultAncestor: null,
    ancestor: e,
    prelim: 0,
    modifier: 0,
    change: 0,
    shift: 0,
    i: 0,
    thread: null
  };
  for (var t = [e], r, i; r = t.pop(); )
    if (i = r.children, r.isExpand && i.length)
      for (var o = i.length, s = o - 1; s >= 0; s--) {
        var a = i[s];
        a.hierNode = {
          defaultAncestor: null,
          ancestor: a,
          prelim: 0,
          modifier: 0,
          change: 0,
          shift: 0,
          i: s,
          thread: null
        }, t.push(a);
      }
}
function NPt(n, e) {
  var t = n.isExpand ? n.children : [], r = n.parentNode.children, i = n.hierNode.i ? r[n.hierNode.i - 1] : null;
  if (t.length) {
    zPt(n);
    var o = (t[0].hierNode.prelim + t[t.length - 1].hierNode.prelim) / 2;
    i ? (n.hierNode.prelim = i.hierNode.prelim + e(n, i), n.hierNode.modifier = n.hierNode.prelim - o) : n.hierNode.prelim = o;
  } else
    i && (n.hierNode.prelim = i.hierNode.prelim + e(n, i));
  n.parentNode.hierNode.defaultAncestor = FPt(n, i, n.parentNode.hierNode.defaultAncestor || r[0], e);
}
function BPt(n) {
  var e = n.hierNode.prelim + n.parentNode.hierNode.modifier;
  n.setLayout({
    x: e
  }, !0), n.hierNode.modifier += n.parentNode.hierNode.modifier;
}
function m8(n) {
  return arguments.length ? n : WPt;
}
function $m(n, e) {
  return n -= Math.PI / 2, {
    x: e * Math.cos(n),
    y: e * Math.sin(n)
  };
}
function VPt(n, e) {
  return mr(n.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function zPt(n) {
  for (var e = n.children, t = e.length, r = 0, i = 0; --t >= 0; ) {
    var o = e[t];
    o.hierNode.prelim += r, o.hierNode.modifier += r, i += o.hierNode.change, r += o.hierNode.shift + i;
  }
}
function FPt(n, e, t, r) {
  if (e) {
    for (var i = n, o = n, s = o.parentNode.children[0], a = e, l = i.hierNode.modifier, u = o.hierNode.modifier, c = s.hierNode.modifier, h = a.hierNode.modifier; a = wT(a), o = xT(o), a && o; ) {
      i = wT(i), s = xT(s), i.hierNode.ancestor = n;
      var f = a.hierNode.prelim + h - o.hierNode.prelim - u + r(a, o);
      f > 0 && (ZPt(QPt(a, n, t), n, f), u += f, l += f), h += a.hierNode.modifier, u += o.hierNode.modifier, l += i.hierNode.modifier, c += s.hierNode.modifier;
    }
    a && !wT(i) && (i.hierNode.thread = a, i.hierNode.modifier += h - l), o && !xT(s) && (s.hierNode.thread = o, s.hierNode.modifier += u - c, t = n);
  }
  return t;
}
function wT(n) {
  var e = n.children;
  return e.length && n.isExpand ? e[e.length - 1] : n.hierNode.thread;
}
function xT(n) {
  var e = n.children;
  return e.length && n.isExpand ? e[0] : n.hierNode.thread;
}
function QPt(n, e, t) {
  return n.hierNode.ancestor.parentNode === e.parentNode ? n.hierNode.ancestor : t;
}
function ZPt(n, e, t) {
  var r = t / (e.hierNode.i - n.hierNode.i);
  e.hierNode.change -= r, e.hierNode.shift += t, e.hierNode.modifier += t, e.hierNode.prelim += t, n.hierNode.change += r;
}
function WPt(n, e) {
  return n.parentNode === e.parentNode ? 1 : 2;
}
var GPt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.parentPoint = [], this.childPoints = [];
    }
    return n;
  }()
), jPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      return n.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new GPt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.childPoints, o = i.length, s = r.parentPoint, a = i[0], l = i[o - 1];
      if (o === 1) {
        t.moveTo(s[0], s[1]), t.lineTo(a[0], a[1]);
        return;
      }
      var u = r.orient, c = u === "TB" || u === "BT" ? 0 : 1, h = 1 - c, f = fe(r.forkPosition, 1), d = [];
      d[c] = s[c], d[h] = s[h] + (l[h] - s[h]) * f, t.moveTo(s[0], s[1]), t.lineTo(d[0], d[1]), t.moveTo(a[0], a[1]), d[c] = a[c], t.lineTo(d[0], d[1]), d[c] = l[c], t.lineTo(d[0], d[1]), t.lineTo(l[0], l[1]);
      for (var p = 1; p < o - 1; p++) {
        var g = i[p];
        t.moveTo(g[0], g[1]), d[c] = g[c], t.lineTo(d[0], d[1]);
      }
    }, e;
  }(ct)
), HPt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._mainGroup = new Ve(), t;
    }
    return e.prototype.init = function(t, r) {
      this._controller = new Nb(r.getZr()), this._controllerHost = {
        target: this.group
      }, this.group.add(this._mainGroup);
    }, e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = t.layoutInfo, a = this._mainGroup, l = t.get("layout");
      l === "radial" ? (a.x = s.x + s.width / 2, a.y = s.y + s.height / 2) : (a.x = s.x, a.y = s.y), this._updateViewCoordSys(t, i), this._updateController(t, r, i);
      var u = this._data;
      o.diff(u).add(function(c) {
        y8(o, c) && b8(o, c, null, a, t);
      }).update(function(c, h) {
        var f = u.getItemGraphicEl(h);
        if (!y8(o, c)) {
          f && w8(u, h, f, a, t);
          return;
        }
        b8(o, c, f, a, t);
      }).remove(function(c) {
        var h = u.getItemGraphicEl(c);
        h && w8(u, c, h, a, t);
      }).execute(), this._nodeScaleRatio = t.get("nodeScaleRatio"), this._updateNodeAndLinkScale(t), t.get("expandAndCollapse") === !0 && o.eachItemGraphicEl(function(c, h) {
        c.off("click").on("click", function() {
          i.dispatchAction({
            type: "treeExpandAndCollapse",
            seriesId: t.id,
            dataIndex: h
          });
        });
      }), this._data = o;
    }, e.prototype._updateViewCoordSys = function(t, r) {
      var i = t.getData(), o = [];
      i.each(function(h) {
        var f = i.getItemLayout(h);
        f && !isNaN(f.x) && !isNaN(f.y) && o.push([+f.x, +f.y]);
      });
      var s = [], a = [];
      eC(o, s, a);
      var l = this._min, u = this._max;
      a[0] - s[0] === 0 && (s[0] = l ? l[0] : s[0] - 1, a[0] = u ? u[0] : a[0] + 1), a[1] - s[1] === 0 && (s[1] = l ? l[1] : s[1] - 1, a[1] = u ? u[1] : a[1] + 1);
      var c = t.coordinateSystem = new Bb();
      c.zoomLimit = t.get("scaleLimit"), c.setBoundingRect(s[0], s[1], a[0] - s[0], a[1] - s[1]), c.setCenter(t.get("center"), r), c.setZoom(t.get("zoom")), this.group.attr({
        x: c.x,
        y: c.y,
        scaleX: c.scaleX,
        scaleY: c.scaleY
      }), this._min = s, this._max = a;
    }, e.prototype._updateController = function(t, r, i) {
      var o = this, s = this._controller, a = this._controllerHost, l = this.group;
      s.setPointerChecker(function(u, c, h) {
        var f = l.getBoundingRect();
        return f.applyTransform(l.transform), f.contain(c, h) && !SC(u, i, t);
      }), s.enable(t.get("roam")), a.zoomLimit = t.get("scaleLimit"), a.zoom = t.coordinateSystem.getZoom(), s.off("pan").off("zoom").on("pan", function(u) {
        jR(a, u.dx, u.dy), i.dispatchAction({
          seriesId: t.id,
          type: "treeRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        HR(a, u.scale, u.originX, u.originY), i.dispatchAction({
          seriesId: t.id,
          type: "treeRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), o._updateNodeAndLinkScale(t), i.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function(t) {
      var r = t.getData(), i = this._getNodeGlobalScale(t);
      r.eachItemGraphicEl(function(o, s) {
        o.setSymbolScale(i);
      });
    }, e.prototype._getNodeGlobalScale = function(t) {
      var r = t.coordinateSystem;
      if (r.type !== "view")
        return 1;
      var i = this._nodeScaleRatio, o = r.scaleX || 1, s = r.getZoom(), a = (s - 1) * i + 1;
      return a / o;
    }, e.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype.remove = function() {
      this._mainGroup.removeAll(), this._data = null;
    }, e.type = "tree", e;
  }(dn)
);
function y8(n, e) {
  var t = n.getItemLayout(e);
  return t && !isNaN(t.x) && !isNaN(t.y);
}
function b8(n, e, t, r, i) {
  var o = !t, s = n.tree.getNodeByDataIndex(e), a = s.getModel(), l = s.getVisual("style").fill, u = s.isExpand === !1 && s.children.length !== 0 ? l : "#fff", c = n.tree.root, h = s.parentNode === c ? s : s.parentNode || s, f = n.getItemGraphicEl(h.dataIndex), d = h.getLayout(), p = f ? {
    x: f.__oldX,
    y: f.__oldY,
    rawX: f.__radialOldRawX,
    rawY: f.__radialOldRawY
  } : d, g = s.getLayout();
  o ? (t = new Mb(n, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), t.x = p.x, t.y = p.y) : t.updateData(n, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), t.__radialOldRawX = t.__radialRawX, t.__radialOldRawY = t.__radialRawY, t.__radialRawX = g.rawX, t.__radialRawY = g.rawY, r.add(t), n.setItemGraphicEl(e, t), t.__oldX = t.x, t.__oldY = t.y, kt(t, {
    x: g.x,
    y: g.y
  }, i);
  var v = t.getSymbolPath();
  if (i.get("layout") === "radial") {
    var m = c.children[0], y = m.getLayout(), b = m.children.length, O = void 0, w = void 0;
    if (g.x === y.x && s.isExpand === !0 && m.children.length) {
      var x = {
        x: (m.children[0].getLayout().x + m.children[b - 1].getLayout().x) / 2,
        y: (m.children[0].getLayout().y + m.children[b - 1].getLayout().y) / 2
      };
      O = Math.atan2(x.y - y.y, x.x - y.x), O < 0 && (O = Math.PI * 2 + O), w = x.x < y.x, w && (O = O - Math.PI);
    } else
      O = Math.atan2(g.y - y.y, g.x - y.x), O < 0 && (O = Math.PI * 2 + O), s.children.length === 0 || s.children.length !== 0 && s.isExpand === !1 ? (w = g.x < y.x, w && (O = O - Math.PI)) : (w = g.x > y.x, w || (O = O - Math.PI));
    var S = w ? "left" : "right", _ = a.getModel("label"), C = _.get("rotate"), A = C * (Math.PI / 180), T = v.getTextContent();
    T && (v.setTextConfig({
      position: _.get("position") || S,
      rotation: C == null ? -O : A,
      origin: "center"
    }), T.setStyle("verticalAlign", "middle"));
  }
  var k = a.get(["emphasis", "focus"]), L = k === "relative" ? Bx(s.getAncestorsIndices(), s.getDescendantIndices()) : k === "ancestor" ? s.getAncestorsIndices() : k === "descendant" ? s.getDescendantIndices() : null;
  L && (Fe(t).focus = L), qPt(i, s, c, t, p, d, g, r), t.__edge && (t.onHoverStateChange = function(D) {
    if (D !== "blur") {
      var E = s.parentNode && n.getItemGraphicEl(s.parentNode.dataIndex);
      E && E.hoverState === Sb || Hx(t.__edge, D);
    }
  });
}
function qPt(n, e, t, r, i, o, s, a) {
  var l = e.getModel(), u = n.get("edgeShape"), c = n.get("layout"), h = n.getOrient(), f = n.get(["lineStyle", "curveness"]), d = n.get("edgeForkPosition"), p = l.getModel("lineStyle").getLineStyle(), g = r.__edge;
  if (u === "curve")
    e.parentNode && e.parentNode !== t && (g || (g = r.__edge = new iC({
      shape: VM(c, h, f, i, i)
    })), kt(g, {
      shape: VM(c, h, f, o, s)
    }, n));
  else if (u === "polyline") {
    if (c === "orthogonal") {
      if (e !== t && e.children && e.children.length !== 0 && e.isExpand === !0) {
        for (var v = e.children, m = [], y = 0; y < v.length; y++) {
          var b = v[y].getLayout();
          m.push([b.x, b.y]);
        }
        g || (g = r.__edge = new jPt({
          shape: {
            parentPoint: [s.x, s.y],
            childPoints: [[s.x, s.y]],
            orient: h,
            forkPosition: d
          }
        })), kt(g, {
          shape: {
            parentPoint: [s.x, s.y],
            childPoints: m
          }
        }, n);
      }
    } else if (process.env.NODE_ENV !== "production")
      throw new Error("The polyline edgeShape can only be used in orthogonal layout");
  }
  g && !(u === "polyline" && !e.isExpand) && (g.useStyle(Le({
    strokeNoScale: !0,
    fill: null
  }, p)), ui(g, l, "lineStyle"), id(g), a.add(g));
}
function O8(n, e, t, r, i) {
  var o = e.tree.root, s = _ne(o, n), a = s.source, l = s.sourceLayout, u = e.getItemGraphicEl(n.dataIndex);
  if (u) {
    var c = e.getItemGraphicEl(a.dataIndex), h = c.__edge, f = u.__edge || (a.isExpand === !1 || a.children.length === 1 ? h : void 0), d = r.get("edgeShape"), p = r.get("layout"), g = r.get("orient"), v = r.get(["lineStyle", "curveness"]);
    f && (d === "curve" ? Vc(f, {
      shape: VM(p, g, v, l, l),
      style: {
        opacity: 0
      }
    }, r, {
      cb: function() {
        t.remove(f);
      },
      removeOpt: i
    }) : d === "polyline" && r.get("layout") === "orthogonal" && Vc(f, {
      shape: {
        parentPoint: [l.x, l.y],
        childPoints: [[l.x, l.y]]
      },
      style: {
        opacity: 0
      }
    }, r, {
      cb: function() {
        t.remove(f);
      },
      removeOpt: i
    }));
  }
}
function _ne(n, e) {
  for (var t = e.parentNode === n ? e : e.parentNode || e, r; r = t.getLayout(), r == null; )
    t = t.parentNode === n ? t : t.parentNode || t;
  return {
    source: t,
    sourceLayout: r
  };
}
function w8(n, e, t, r, i) {
  var o = n.tree.getNodeByDataIndex(e), s = n.tree.root, a = _ne(s, o).sourceLayout, l = {
    duration: i.get("animationDurationUpdate"),
    easing: i.get("animationEasingUpdate")
  };
  Vc(t, {
    x: a.x + 1,
    y: a.y + 1
  }, i, {
    cb: function() {
      r.remove(t), n.setItemGraphicEl(e, null);
    },
    removeOpt: l
  }), t.fadeOut(null, n.hostModel, {
    fadeLabel: !0,
    animation: l
  }), o.children.forEach(function(u) {
    O8(u, n, r, i, l);
  }), O8(o, n, r, i, l);
}
function VM(n, e, t, r, i) {
  var o, s, a, l, u, c, h, f;
  if (n === "radial") {
    u = r.rawX, h = r.rawY, c = i.rawX, f = i.rawY;
    var d = $m(u, h), p = $m(u, h + (f - h) * t), g = $m(c, f + (h - f) * t), v = $m(c, f);
    return {
      x1: d.x || 0,
      y1: d.y || 0,
      x2: v.x || 0,
      y2: v.y || 0,
      cpx1: p.x || 0,
      cpy1: p.y || 0,
      cpx2: g.x || 0,
      cpy2: g.y || 0
    };
  } else
    u = r.x, h = r.y, c = i.x, f = i.y, (e === "LR" || e === "RL") && (o = u + (c - u) * t, s = h, a = c + (u - c) * t, l = f), (e === "TB" || e === "BT") && (o = u, s = h + (f - h) * t, a = c, l = f + (h - f) * t);
  return {
    x1: u,
    y1: h,
    x2: c,
    y2: f,
    cpx1: o,
    cpy1: s,
    cpx2: a,
    cpy2: l
  };
}
const YPt = HPt;
var bs = Ct();
function Cne(n) {
  var e = n.mainData, t = n.datas;
  t || (t = {
    main: e
  }, n.datasAttr = {
    main: "data"
  }), n.datas = n.mainData = null, Ane(e, t, n), I(t, function(r) {
    I(e.TRANSFERABLE_METHODS, function(i) {
      r.wrapMethod(i, je(XPt, n));
    });
  }), e.wrapMethod("cloneShallow", je(KPt, n)), I(e.CHANGABLE_METHODS, function(r) {
    e.wrapMethod(r, je(UPt, n));
  }), De(t[e.dataType] === e);
}
function XPt(n, e) {
  if (tEt(this)) {
    var t = te({}, bs(this).datas);
    t[this.dataType] = e, Ane(e, t, n);
  } else
    XR(e, this.dataType, bs(this).mainData, n);
  return e;
}
function UPt(n, e) {
  return n.struct && n.struct.update(), e;
}
function KPt(n, e) {
  return I(bs(e).datas, function(t, r) {
    t !== e && XR(t.cloneShallow(), r, e, n);
  }), e;
}
function JPt(n) {
  var e = bs(this).mainData;
  return n == null || e == null ? e : bs(e).datas[n];
}
function eEt() {
  var n = bs(this).mainData;
  return n == null ? [{
    data: n
  }] : ae(ft(bs(n).datas), function(e) {
    return {
      type: e,
      data: bs(n).datas[e]
    };
  });
}
function tEt(n) {
  return bs(n).mainData === n;
}
function Ane(n, e, t) {
  bs(n).datas = {}, I(e, function(r, i) {
    XR(r, i, n, t);
  });
}
function XR(n, e, t, r) {
  bs(t).datas[e] = n, bs(n).mainData = t, n.dataType = e, r.struct && (n[r.structAttr] = r.struct, r.struct[r.datasAttr[e]] = n), n.getLinkedData = JPt, n.getLinkedDataAll = eEt;
}
var nEt = (
  /** @class */
  function() {
    function n(e, t) {
      this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = !1, this.name = e || "", this.hostTree = t;
    }
    return n.prototype.isRemoved = function() {
      return this.dataIndex < 0;
    }, n.prototype.eachNode = function(e, t, r) {
      Pe(e) && (r = t, t = e, e = null), e = e || {}, be(e) && (e = {
        order: e
      });
      var i = e.order || "preorder", o = this[e.attr || "children"], s;
      i === "preorder" && (s = t.call(r, this));
      for (var a = 0; !s && a < o.length; a++)
        o[a].eachNode(e, t, r);
      i === "postorder" && t.call(r, this);
    }, n.prototype.updateDepthAndHeight = function(e) {
      var t = 0;
      this.depth = e;
      for (var r = 0; r < this.children.length; r++) {
        var i = this.children[r];
        i.updateDepthAndHeight(e + 1), i.height > t && (t = i.height);
      }
      this.height = t + 1;
    }, n.prototype.getNodeById = function(e) {
      if (this.getId() === e)
        return this;
      for (var t = 0, r = this.children, i = r.length; t < i; t++) {
        var o = r[t].getNodeById(e);
        if (o)
          return o;
      }
    }, n.prototype.contains = function(e) {
      if (e === this)
        return !0;
      for (var t = 0, r = this.children, i = r.length; t < i; t++) {
        var o = r[t].contains(e);
        if (o)
          return o;
      }
    }, n.prototype.getAncestors = function(e) {
      for (var t = [], r = e ? this : this.parentNode; r; )
        t.push(r), r = r.parentNode;
      return t.reverse(), t;
    }, n.prototype.getAncestorsIndices = function() {
      for (var e = [], t = this; t; )
        e.push(t.dataIndex), t = t.parentNode;
      return e.reverse(), e;
    }, n.prototype.getDescendantIndices = function() {
      var e = [];
      return this.eachNode(function(t) {
        e.push(t.dataIndex);
      }), e;
    }, n.prototype.getValue = function(e) {
      var t = this.hostTree.data;
      return t.getStore().get(t.getDimensionIndex(e || "value"), this.dataIndex);
    }, n.prototype.setLayout = function(e, t) {
      this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, e, t);
    }, n.prototype.getLayout = function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    }, n.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostTree, r = t.data.getItemModel(this.dataIndex);
        return r.getModel(e);
      }
    }, n.prototype.getLevelModel = function() {
      return (this.hostTree.levelModels || [])[this.depth];
    }, n.prototype.setVisual = function(e, t) {
      this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, e, t);
    }, n.prototype.getVisual = function(e) {
      return this.hostTree.data.getItemVisual(this.dataIndex, e);
    }, n.prototype.getRawIndex = function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    }, n.prototype.getId = function() {
      return this.hostTree.data.getId(this.dataIndex);
    }, n.prototype.getChildIndex = function() {
      if (this.parentNode) {
        for (var e = this.parentNode.children, t = 0; t < e.length; ++t)
          if (e[t] === this)
            return t;
        return -1;
      }
      return -1;
    }, n.prototype.isAncestorOf = function(e) {
      for (var t = e.parentNode; t; ) {
        if (t === this)
          return !0;
        t = t.parentNode;
      }
      return !1;
    }, n.prototype.isDescendantOf = function(e) {
      return e !== this && e.isAncestorOf(this);
    }, n;
  }()
), UR = (
  /** @class */
  function() {
    function n(e) {
      this.type = "tree", this._nodes = [], this.hostModel = e;
    }
    return n.prototype.eachNode = function(e, t, r) {
      this.root.eachNode(e, t, r);
    }, n.prototype.getNodeByDataIndex = function(e) {
      var t = this.data.getRawIndex(e);
      return this._nodes[t];
    }, n.prototype.getNodeById = function(e) {
      return this.root.getNodeById(e);
    }, n.prototype.update = function() {
      for (var e = this.data, t = this._nodes, r = 0, i = t.length; r < i; r++)
        t[r].dataIndex = -1;
      for (var r = 0, i = e.count(); r < i; r++)
        t[e.getRawIndex(r)].dataIndex = r;
    }, n.prototype.clearLayouts = function() {
      this.data.clearItemLayouts();
    }, n.createTree = function(e, t, r) {
      var i = new n(t), o = [], s = 1;
      a(e);
      function a(c, h) {
        var f = c.value;
        s = Math.max(s, oe(f) ? f.length : 1), o.push(c);
        var d = new nEt(dr(c.name, ""), i);
        h ? rEt(d, h) : i.root = d, i._nodes.push(d);
        var p = c.children;
        if (p)
          for (var g = 0; g < p.length; g++)
            a(p[g], d);
      }
      i.root.updateDepthAndHeight(0);
      var l = Pb(o, {
        coordDimensions: ["value"],
        dimensionsCount: s
      }).dimensions, u = new Bi(l, t);
      return u.initData(o), r && r(u), Cne({
        mainData: u,
        struct: i,
        structAttr: "tree"
      }), i.update(), i;
    }, n;
  }()
);
function rEt(n, e) {
  var t = e.children;
  n.parentNode !== e && (t.push(n), n.parentNode = e);
}
function L0(n, e, t) {
  if (n && ot(e, n.type) >= 0) {
    var r = t.getData().tree.root, i = n.targetNode;
    if (be(i) && (i = r.getNodeById(i)), i && r.contains(i))
      return {
        node: i
      };
    var o = n.targetNodeId;
    if (o != null && (i = r.getNodeById(o)))
      return {
        node: i
      };
  }
}
function Tne(n) {
  for (var e = []; n; )
    n = n.parentNode, n && e.push(n);
  return e.reverse();
}
function KR(n, e) {
  var t = Tne(n);
  return ot(t, e) >= 0;
}
function CC(n, e) {
  for (var t = []; n; ) {
    var r = n.dataIndex;
    t.push({
      name: n.name,
      dataIndex: r,
      value: e.getRawValue(r)
    }), n = n.parentNode;
  }
  return t.reverse(), t;
}
var iEt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.hasSymbolVisual = !0, t.ignoreStyleOnData = !0, t;
    }
    return e.prototype.getInitialData = function(t) {
      var r = {
        name: t.name,
        children: t.data
      }, i = t.leaves || {}, o = new fn(i, this, this.ecModel), s = UR.createTree(r, this, a);
      function a(h) {
        h.wrapMethod("getItemModel", function(f, d) {
          var p = s.getNodeByDataIndex(d);
          return p && p.children.length && p.isExpand || (f.parentModel = o), f;
        });
      }
      var l = 0;
      s.eachNode("preorder", function(h) {
        h.depth > l && (l = h.depth);
      });
      var u = t.expandAndCollapse, c = u && t.initialTreeDepth >= 0 ? t.initialTreeDepth : l;
      return s.root.eachNode("preorder", function(h) {
        var f = h.hostTree.data.getRawDataItem(h.dataIndex);
        h.isExpand = f && f.collapsed != null ? !f.collapsed : h.depth <= c;
      }), s.data;
    }, e.prototype.getOrient = function() {
      var t = this.get("orient");
      return t === "horizontal" ? t = "LR" : t === "vertical" && (t = "TB"), t;
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.formatTooltip = function(t, r, i) {
      for (var o = this.getData().tree, s = o.root.children[0], a = o.getNodeByDataIndex(t), l = a.getValue(), u = a.name; a && a !== s; )
        u = a.parentNode.name + "." + u, a = a.parentNode;
      return Mr("nameValue", {
        name: u,
        value: l,
        noValue: isNaN(l) || l == null
      });
    }, e.prototype.getDataParams = function(t) {
      var r = n.prototype.getDataParams.apply(this, arguments), i = this.getData().tree.getNodeByDataIndex(t);
      return r.treeAncestors = CC(i, this), r.collapsed = !i.isExpand, r;
    }, e.type = "series.tree", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // the position of the whole view
      left: "12%",
      top: "12%",
      right: "12%",
      bottom: "12%",
      // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'
      layout: "orthogonal",
      // value can be 'polyline'
      edgeShape: "curve",
      edgeForkPosition: "50%",
      // true | false | 'move' | 'scale', see module:component/helper/RoamController.
      roam: !1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.4,
      // Default on center of graph
      center: null,
      zoom: 1,
      orient: "LR",
      symbol: "emptyCircle",
      symbolSize: 7,
      expandAndCollapse: !0,
      initialTreeDepth: 2,
      lineStyle: {
        color: "#ccc",
        width: 1.5,
        curveness: 0.5
      },
      itemStyle: {
        color: "lightsteelblue",
        // borderColor: '#c23531',
        borderWidth: 1.5
      },
      label: {
        show: !0
      },
      animationEasing: "linear",
      animationDuration: 700,
      animationDurationUpdate: 500
    }, e;
  }(Sn)
);
const oEt = iEt;
function sEt(n, e, t) {
  for (var r = [n], i = [], o; o = r.pop(); )
    if (i.push(o), o.isExpand) {
      var s = o.children;
      if (s.length)
        for (var a = 0; a < s.length; a++)
          r.push(s[a]);
    }
  for (; o = i.pop(); )
    e(o, t);
}
function am(n, e) {
  for (var t = [n], r; r = t.pop(); )
    if (e(r), r.isExpand) {
      var i = r.children;
      if (i.length)
        for (var o = i.length - 1; o >= 0; o--)
          t.push(i[o]);
    }
}
function aEt(n, e) {
  n.eachSeriesByType("tree", function(t) {
    lEt(t, e);
  });
}
function lEt(n, e) {
  var t = VPt(n, e);
  n.layoutInfo = t;
  var r = n.get("layout"), i = 0, o = 0, s = null;
  r === "radial" ? (i = 2 * Math.PI, o = Math.min(t.height, t.width) / 2, s = m8(function(b, O) {
    return (b.parentNode === O.parentNode ? 1 : 2) / b.depth;
  })) : (i = t.width, o = t.height, s = m8());
  var a = n.getData().tree.root, l = a.children[0];
  if (l) {
    $Pt(a), sEt(l, NPt, s), a.hierNode.modifier = -l.hierNode.prelim, am(l, BPt);
    var u = l, c = l, h = l;
    am(l, function(b) {
      var O = b.getLayout().x;
      O < u.getLayout().x && (u = b), O > c.getLayout().x && (c = b), b.depth > h.depth && (h = b);
    });
    var f = u === c ? 1 : s(u, c) / 2, d = f - u.getLayout().x, p = 0, g = 0, v = 0, m = 0;
    if (r === "radial")
      p = i / (c.getLayout().x + f + d), g = o / (h.depth - 1 || 1), am(l, function(b) {
        v = (b.getLayout().x + d) * p, m = (b.depth - 1) * g;
        var O = $m(v, m);
        b.setLayout({
          x: O.x,
          y: O.y,
          rawX: v,
          rawY: m
        }, !0);
      });
    else {
      var y = n.getOrient();
      y === "RL" || y === "LR" ? (g = o / (c.getLayout().x + f + d), p = i / (h.depth - 1 || 1), am(l, function(b) {
        m = (b.getLayout().x + d) * g, v = y === "LR" ? (b.depth - 1) * p : i - (b.depth - 1) * p, b.setLayout({
          x: v,
          y: m
        }, !0);
      })) : (y === "TB" || y === "BT") && (p = i / (c.getLayout().x + f + d), g = o / (h.depth - 1 || 1), am(l, function(b) {
        v = (b.getLayout().x + d) * p, m = y === "TB" ? (b.depth - 1) * g : o - (b.depth - 1) * g, b.setLayout({
          x: v,
          y: m
        }, !0);
      }));
    }
  }
}
function uEt(n) {
  n.eachSeriesByType("tree", function(e) {
    var t = e.getData(), r = t.tree;
    r.eachNode(function(i) {
      var o = i.getModel(), s = o.getModel("itemStyle").getItemStyle(), a = t.ensureUniqueItemVisual(i.dataIndex, "style");
      te(a, s);
    });
  });
}
function cEt(n) {
  n.registerAction({
    type: "treeExpandAndCollapse",
    event: "treeExpandAndCollapse",
    update: "update"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(r) {
      var i = e.dataIndex, o = r.getData().tree, s = o.getNodeByDataIndex(i);
      s.isExpand = !s.isExpand;
    });
  }), n.registerAction({
    type: "treeRoam",
    event: "treeRoam",
    // Here we set 'none' instead of 'update', because roam action
    // just need to update the transform matrix without having to recalculate
    // the layout. So don't need to go through the whole update process, such
    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.
    update: "none"
  }, function(e, t, r) {
    t.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(i) {
      var o = i.coordinateSystem, s = YR(o, e, void 0, r);
      i.setCenter && i.setCenter(s.center), i.setZoom && i.setZoom(s.zoom);
    });
  });
}
function hEt(n) {
  n.registerChartView(YPt), n.registerSeriesModel(oEt), n.registerLayout(aEt), n.registerVisual(uEt), cEt(n);
}
var x8 = ["treemapZoomToNode", "treemapRender", "treemapMove"];
function fEt(n) {
  for (var e = 0; e < x8.length; e++)
    n.registerAction({
      type: x8[e],
      update: "updateView"
    }, qn);
  n.registerAction({
    type: "treemapRootToNode",
    update: "updateView"
  }, function(t, r) {
    r.eachComponent({
      mainType: "series",
      subType: "treemap",
      query: t
    }, i);
    function i(o, s) {
      var a = ["treemapZoomToNode", "treemapRootToNode"], l = L0(t, a, o);
      if (l) {
        var u = o.getViewRoot();
        u && (t.direction = KR(u, l.node) ? "rollUp" : "drillDown"), o.resetViewRoot(l.node);
      }
    }
  });
}
function Pne(n) {
  var e = n.getData(), t = e.tree, r = {};
  t.eachNode(function(i) {
    for (var o = i; o && o.depth > 1; )
      o = o.parentNode;
    var s = pM(n.ecModel, o.name || o.dataIndex + "", r);
    i.setVisual("decal", s);
  });
}
var dEt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.preventUsingHoverLayer = !0, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      var i = {
        name: t.name,
        children: t.data
      };
      Ene(i);
      var o = t.levels || [], s = this.designatedVisualItemStyle = {}, a = new fn({
        itemStyle: s
      }, this, r);
      o = t.levels = pEt(o, r);
      var l = ae(o || [], function(h) {
        return new fn(h, a, r);
      }, this), u = UR.createTree(i, this, c);
      function c(h) {
        h.wrapMethod("getItemModel", function(f, d) {
          var p = u.getNodeByDataIndex(d), g = p ? l[p.depth] : null;
          return f.parentModel = g || a, f;
        });
      }
      return u.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.formatTooltip = function(t, r, i) {
      var o = this.getData(), s = this.getRawValue(t), a = o.getName(t);
      return Mr("nameValue", {
        name: a,
        value: s
      });
    }, e.prototype.getDataParams = function(t) {
      var r = n.prototype.getDataParams.apply(this, arguments), i = this.getData().tree.getNodeByDataIndex(t);
      return r.treeAncestors = CC(i, this), r.treePathInfo = r.treeAncestors, r;
    }, e.prototype.setLayoutInfo = function(t) {
      this.layoutInfo = this.layoutInfo || {}, te(this.layoutInfo, t);
    }, e.prototype.mapIdToIndex = function(t) {
      var r = this._idIndexMap;
      r || (r = this._idIndexMap = _e(), this._idIndexMapCount = 0);
      var i = r.get(t);
      return i == null && r.set(t, i = this._idIndexMapCount++), i;
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(t) {
      t ? this._viewRoot = t : t = this._viewRoot;
      var r = this.getRawData().tree.root;
      (!t || t !== r && !r.contains(t)) && (this._viewRoot = r);
    }, e.prototype.enableAriaDecal = function() {
      Pne(this);
    }, e.type = "series.treemap", e.layoutMode = "box", e.defaultOption = {
      // Disable progressive rendering
      progressive: 0,
      // size: ['80%', '80%'],            // deprecated, compatible with ec2.
      left: "center",
      top: "middle",
      width: "80%",
      height: "80%",
      sort: !0,
      clipWindow: "origin",
      squareRatio: 0.5 * (1 + Math.sqrt(5)),
      leafDepth: null,
      drillDownIcon: "▶",
      // to align specialized icon. ▷▶❒❐▼✚
      zoomToNodeRatio: 0.32 * 0.32,
      roam: !0,
      nodeClick: "zoomToNode",
      animation: !0,
      animationDurationUpdate: 900,
      animationEasing: "quinticInOut",
      breadcrumb: {
        show: !0,
        height: 22,
        left: "center",
        top: "bottom",
        // right
        // bottom
        emptyItemWidth: 25,
        itemStyle: {
          color: "rgba(0,0,0,0.7)",
          textStyle: {
            color: "#fff"
          }
        },
        emphasis: {
          itemStyle: {
            color: "rgba(0,0,0,0.9)"
            // '#5793f3',
          }
        }
      },
      label: {
        show: !0,
        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.
        distance: 0,
        padding: 5,
        position: "inside",
        // formatter: null,
        color: "#fff",
        overflow: "truncate"
        // align
        // verticalAlign
      },
      upperLabel: {
        show: !1,
        position: [0, "50%"],
        height: 20,
        // formatter: null,
        // color: '#fff',
        overflow: "truncate",
        // align: null,
        verticalAlign: "middle"
      },
      itemStyle: {
        color: null,
        colorAlpha: null,
        colorSaturation: null,
        borderWidth: 0,
        gapWidth: 0,
        borderColor: "#fff",
        borderColorSaturation: null
        // If specified, borderColor will be ineffective, and the
        // border color is evaluated by color of current node and
        // borderColorSaturation.
      },
      emphasis: {
        upperLabel: {
          show: !0,
          position: [0, "50%"],
          overflow: "truncate",
          verticalAlign: "middle"
        }
      },
      visualDimension: 0,
      visualMin: null,
      visualMax: null,
      color: [],
      // level[n].color (if necessary).
      // + Specify color list of each level. level[0].color would be global
      // color list if not specified. (see method `setDefault`).
      // + But set as a empty array to forbid fetch color from global palette
      // when using nodeModel.get('color'), otherwise nodes on deep level
      // will always has color palette set and are not able to inherit color
      // from parent node.
      // + TreemapSeries.color can not be set as 'none', otherwise effect
      // legend color fetching (see seriesColor.js).
      colorAlpha: null,
      colorSaturation: null,
      colorMappingBy: "index",
      visibleMin: 10,
      // be rendered. Only works when sort is 'asc' or 'desc'.
      childrenVisibleMin: null,
      // grandchildren will not show.
      // Why grandchildren? If not grandchildren but children,
      // some siblings show children and some not,
      // the appearance may be mess and not consistent,
      levels: []
      // Each item: {
      //     visibleMin, itemStyle, visualDimension, label
      // }
    }, e;
  }(Sn)
);
function Ene(n) {
  var e = 0;
  I(n.children, function(r) {
    Ene(r);
    var i = r.value;
    oe(i) && (i = i[0]), e += i;
  });
  var t = n.value;
  oe(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), oe(n.value) ? n.value[0] = t : n.value = t;
}
function pEt(n, e) {
  var t = Kt(e.get("color")), r = Kt(e.get(["aria", "decal", "decals"]));
  if (t) {
    n = n || [];
    var i, o;
    I(n, function(a) {
      var l = new fn(a), u = l.get("color"), c = l.get("decal");
      (l.get(["itemStyle", "color"]) || u && u !== "none") && (i = !0), (l.get(["itemStyle", "decal"]) || c && c !== "none") && (o = !0);
    });
    var s = n[0] || (n[0] = {});
    return i || (s.color = t.slice()), !o && r && (s.decal = r.slice()), n;
  }
}
const gEt = dEt;
var vEt = 8, S8 = 8, ST = 5, mEt = (
  /** @class */
  function() {
    function n(e) {
      this.group = new Ve(), e.add(this.group);
    }
    return n.prototype.render = function(e, t, r, i) {
      var o = e.getModel("breadcrumb"), s = this.group;
      if (s.removeAll(), !(!o.get("show") || !r)) {
        var a = o.getModel("itemStyle"), l = o.getModel("emphasis"), u = a.getModel("textStyle"), c = l.getModel(["itemStyle", "textStyle"]), h = {
          pos: {
            left: o.get("left"),
            right: o.get("right"),
            top: o.get("top"),
            bottom: o.get("bottom")
          },
          box: {
            width: t.getWidth(),
            height: t.getHeight()
          },
          emptyItemWidth: o.get("emptyItemWidth"),
          totalWidth: 0,
          renderList: []
        };
        this._prepare(r, h, u), this._renderContent(e, h, a, l, u, c, i), dC(s, h.pos, h.box);
      }
    }, n.prototype._prepare = function(e, t, r) {
      for (var i = e; i; i = i.parentNode) {
        var o = dr(i.getModel().get("name"), ""), s = r.getTextRect(o), a = Math.max(s.width + vEt * 2, t.emptyItemWidth);
        t.totalWidth += a + S8, t.renderList.push({
          node: i,
          text: o,
          width: a
        });
      }
    }, n.prototype._renderContent = function(e, t, r, i, o, s, a) {
      for (var l = 0, u = t.emptyItemWidth, c = e.get(["breadcrumb", "height"]), h = Vwt(t.pos, t.box), f = t.totalWidth, d = t.renderList, p = i.getModel("itemStyle").getItemStyle(), g = d.length - 1; g >= 0; g--) {
        var v = d[g], m = v.node, y = v.width, b = v.text;
        f > h.width && (f -= y - u, y = u, b = null);
        var O = new Zi({
          shape: {
            points: yEt(l, 0, y, c, g === d.length - 1, g === 0)
          },
          style: Le(r.getItemStyle(), {
            lineJoin: "bevel"
          }),
          textContent: new At({
            style: hn(o, {
              text: b
            })
          }),
          textConfig: {
            position: "inside"
          },
          z2: dv * 1e4,
          onclick: je(a, m)
        });
        O.disableLabelAnimation = !0, O.getTextContent().ensureState("emphasis").style = hn(s, {
          text: b
        }), O.ensureState("emphasis").style = p, $n(O, i.get("focus"), i.get("blurScope"), i.get("disabled")), this.group.add(O), bEt(O, e, m), l += y + S8;
      }
    }, n.prototype.remove = function() {
      this.group.removeAll();
    }, n;
  }()
);
function yEt(n, e, t, r, i, o) {
  var s = [[i ? n : n - ST, e], [n + t, e], [n + t, e + r], [i ? n : n - ST, e + r]];
  return !o && s.splice(2, 0, [n + t + ST, e + r / 2]), !i && s.push([n, e + r / 2]), s;
}
function bEt(n, e, t) {
  Fe(n).eventData = {
    componentType: "series",
    componentSubType: "treemap",
    componentIndex: e.componentIndex,
    seriesIndex: e.seriesIndex,
    seriesName: e.name,
    seriesType: "treemap",
    selfType: "breadcrumb",
    nodeData: {
      dataIndex: t && t.dataIndex,
      name: t && t.name
    },
    treePathInfo: t && CC(t, e)
  };
}
const OEt = mEt;
var wEt = (
  /** @class */
  function() {
    function n() {
      this._storage = [], this._elExistsMap = {};
    }
    return n.prototype.add = function(e, t, r, i, o) {
      return this._elExistsMap[e.id] ? !1 : (this._elExistsMap[e.id] = !0, this._storage.push({
        el: e,
        target: t,
        duration: r,
        delay: i,
        easing: o
      }), !0);
    }, n.prototype.finished = function(e) {
      return this._finishedCallback = e, this;
    }, n.prototype.start = function() {
      for (var e = this, t = this._storage.length, r = function() {
        t--, t <= 0 && (e._storage.length = 0, e._elExistsMap = {}, e._finishedCallback && e._finishedCallback());
      }, i = 0, o = this._storage.length; i < o; i++) {
        var s = this._storage[i];
        s.el.animateTo(s.target, {
          duration: s.duration,
          delay: s.delay,
          easing: s.easing,
          setToFinal: !0,
          done: r,
          aborted: r
        });
      }
      return this;
    }, n;
  }()
);
function xEt() {
  return new wEt();
}
var zM = Ve, _8 = _t, C8 = 3, A8 = "label", T8 = "upperLabel", SEt = dv * 10, _Et = dv * 2, CEt = dv * 3, Vh = rd([
  ["fill", "color"],
  // `borderColor` and `borderWidth` has been occupied,
  // so use `stroke` to indicate the stroke of the rect.
  ["stroke", "strokeColor"],
  ["lineWidth", "strokeWidth"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
]), P8 = function(n) {
  var e = Vh(n);
  return e.stroke = e.fill = e.lineWidth = null, e;
}, mS = Ct(), AEt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._state = "ready", t._storage = lm(), t;
    }
    return e.prototype.render = function(t, r, i, o) {
      var s = r.findComponents({
        mainType: "series",
        subType: "treemap",
        query: o
      });
      if (!(ot(s, t) < 0)) {
        this.seriesModel = t, this.api = i, this.ecModel = r;
        var a = ["treemapZoomToNode", "treemapRootToNode"], l = L0(o, a, t), u = o && o.type, c = t.layoutInfo, h = !this._oldTree, f = this._storage, d = u === "treemapRootToNode" && l && f ? {
          rootNodeGroup: f.nodeGroup[l.node.getRawIndex()],
          direction: o.direction
        } : null, p = this._giveContainerGroup(c), g = t.get("animation"), v = this._doRender(p, t, d);
        g && !h && (!u || u === "treemapZoomToNode" || u === "treemapRootToNode") ? this._doAnimation(p, v, t, d) : v.renderFinally(), this._resetController(i), this._renderBreadcrumb(t, i, l);
      }
    }, e.prototype._giveContainerGroup = function(t) {
      var r = this._containerGroup;
      return r || (r = this._containerGroup = new zM(), this._initEvents(r), this.group.add(r)), r.x = t.x, r.y = t.y, r;
    }, e.prototype._doRender = function(t, r, i) {
      var o = r.getData().tree, s = this._oldTree, a = lm(), l = lm(), u = this._storage, c = [];
      function h(v, m, y, b) {
        return TEt(r, l, u, i, a, c, v, m, y, b);
      }
      d(o.root ? [o.root] : [], s && s.root ? [s.root] : [], t, o === s || !s, 0);
      var f = p(u);
      return this._oldTree = o, this._storage = l, {
        lastsForAnimation: a,
        willDeleteEls: f,
        renderFinally: g
      };
      function d(v, m, y, b, O) {
        b ? (m = v, I(v, function(S, _) {
          !S.isRemoved() && x(_, _);
        })) : new lu(m, v, w, w).add(x).update(x).remove(je(x, null)).execute();
        function w(S) {
          return S.getId();
        }
        function x(S, _) {
          var C = S != null ? v[S] : null, A = _ != null ? m[_] : null, T = h(C, A, y, O);
          T && d(C && C.viewChildren || [], A && A.viewChildren || [], T, b, O + 1);
        }
      }
      function p(v) {
        var m = lm();
        return v && I(v, function(y, b) {
          var O = m[b];
          I(y, function(w) {
            w && (O.push(w), mS(w).willDelete = !0);
          });
        }), m;
      }
      function g() {
        I(f, function(v) {
          I(v, function(m) {
            m.parent && m.parent.remove(m);
          });
        }), I(c, function(v) {
          v.invisible = !0, v.dirty();
        });
      }
    }, e.prototype._doAnimation = function(t, r, i, o) {
      var s = i.get("animationDurationUpdate"), a = i.get("animationEasing"), l = (Pe(s) ? 0 : s) || 0, u = (Pe(a) ? null : a) || "cubicOut", c = xEt();
      I(r.willDeleteEls, function(h, f) {
        I(h, function(d, p) {
          if (!d.invisible) {
            var g = d.parent, v, m = mS(g);
            if (o && o.direction === "drillDown")
              v = g === o.rootNodeGroup ? {
                shape: {
                  x: 0,
                  y: 0,
                  width: m.nodeWidth,
                  height: m.nodeHeight
                },
                style: {
                  opacity: 0
                }
              } : {
                style: {
                  opacity: 0
                }
              };
            else {
              var y = 0, b = 0;
              m.willDelete || (y = m.nodeWidth / 2, b = m.nodeHeight / 2), v = f === "nodeGroup" ? {
                x: y,
                y: b,
                style: {
                  opacity: 0
                }
              } : {
                shape: {
                  x: y,
                  y: b,
                  width: 0,
                  height: 0
                },
                style: {
                  opacity: 0
                }
              };
            }
            v && c.add(d, v, l, 0, u);
          }
        });
      }), I(this._storage, function(h, f) {
        I(h, function(d, p) {
          var g = r.lastsForAnimation[f][p], v = {};
          g && (d instanceof Ve ? g.oldX != null && (v.x = d.x, v.y = d.y, d.x = g.oldX, d.y = g.oldY) : (g.oldShape && (v.shape = te({}, d.shape), d.setShape(g.oldShape)), g.fadein ? (d.setStyle("opacity", 0), v.style = {
            opacity: 1
          }) : d.style.opacity !== 1 && (v.style = {
            opacity: 1
          })), c.add(d, v, l, 0, u));
        });
      }, this), this._state = "animating", c.finished(Oe(function() {
        this._state = "ready", r.renderFinally();
      }, this)).start();
    }, e.prototype._resetController = function(t) {
      var r = this._controller;
      r || (r = this._controller = new Nb(t.getZr()), r.enable(this.seriesModel.get("roam")), r.on("pan", Oe(this._onPan, this)), r.on("zoom", Oe(this._onZoom, this)));
      var i = new et(0, 0, t.getWidth(), t.getHeight());
      r.setPointerChecker(function(o, s, a) {
        return i.contain(s, a);
      });
    }, e.prototype._clearController = function() {
      var t = this._controller;
      t && (t.dispose(), t = null);
    }, e.prototype._onPan = function(t) {
      if (this._state !== "animating" && (Math.abs(t.dx) > C8 || Math.abs(t.dy) > C8)) {
        var r = this.seriesModel.getData().tree.root;
        if (!r)
          return;
        var i = r.getLayout();
        if (!i)
          return;
        this.api.dispatchAction({
          type: "treemapMove",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: i.x + t.dx,
            y: i.y + t.dy,
            width: i.width,
            height: i.height
          }
        });
      }
    }, e.prototype._onZoom = function(t) {
      var r = t.originX, i = t.originY;
      if (this._state !== "animating") {
        var o = this.seriesModel.getData().tree.root;
        if (!o)
          return;
        var s = o.getLayout();
        if (!s)
          return;
        var a = new et(s.x, s.y, s.width, s.height), l = this.seriesModel.layoutInfo;
        r -= l.x, i -= l.y;
        var u = Bo();
        dl(u, u, [-r, -i]), $I(u, u, [t.scale, t.scale]), dl(u, u, [r, i]), a.applyTransform(u), this.api.dispatchAction({
          type: "treemapRender",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: a.x,
            y: a.y,
            width: a.width,
            height: a.height
          }
        });
      }
    }, e.prototype._initEvents = function(t) {
      var r = this;
      t.on("click", function(i) {
        if (r._state === "ready") {
          var o = r.seriesModel.get("nodeClick", !0);
          if (o) {
            var s = r.findTarget(i.offsetX, i.offsetY);
            if (s) {
              var a = s.node;
              if (a.getLayout().isLeafRoot)
                r._rootToNode(s);
              else if (o === "zoomToNode")
                r._zoomToNode(s);
              else if (o === "link") {
                var l = a.hostTree.data.getItemModel(a.dataIndex), u = l.get("link", !0), c = l.get("target", !0) || "blank";
                u && Jx(u, c);
              }
            }
          }
        }
      }, this);
    }, e.prototype._renderBreadcrumb = function(t, r, i) {
      var o = this;
      i || (i = t.get("leafDepth", !0) != null ? {
        node: t.getViewRoot()
      } : this.findTarget(r.getWidth() / 2, r.getHeight() / 2), i || (i = {
        node: t.getData().tree.root
      })), (this._breadcrumb || (this._breadcrumb = new OEt(this.group))).render(t, r, i.node, function(s) {
        o._state !== "animating" && (KR(t.getViewRoot(), s) ? o._rootToNode({
          node: s
        }) : o._zoomToNode({
          node: s
        }));
      });
    }, e.prototype.remove = function() {
      this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = lm(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
    }, e.prototype.dispose = function() {
      this._clearController();
    }, e.prototype._zoomToNode = function(t) {
      this.api.dispatchAction({
        type: "treemapZoomToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node
      });
    }, e.prototype._rootToNode = function(t) {
      this.api.dispatchAction({
        type: "treemapRootToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node
      });
    }, e.prototype.findTarget = function(t, r) {
      var i, o = this.seriesModel.getViewRoot();
      return o.eachNode({
        attr: "viewChildren",
        order: "preorder"
      }, function(s) {
        var a = this._storage.background[s.getRawIndex()];
        if (a) {
          var l = a.transformCoordToLocal(t, r), u = a.shape;
          if (u.x <= l[0] && l[0] <= u.x + u.width && u.y <= l[1] && l[1] <= u.y + u.height)
            i = {
              node: s,
              offsetX: l[0],
              offsetY: l[1]
            };
          else
            return !1;
        }
      }, this), i;
    }, e.type = "treemap", e;
  }(dn)
);
function lm() {
  return {
    nodeGroup: [],
    background: [],
    content: []
  };
}
function TEt(n, e, t, r, i, o, s, a, l, u) {
  if (!s)
    return;
  var c = s.getLayout(), h = n.getData(), f = s.getModel();
  if (h.setItemGraphicEl(s.dataIndex, null), !c || !c.isInView)
    return;
  var d = c.width, p = c.height, g = c.borderWidth, v = c.invisible, m = s.getRawIndex(), y = a && a.getRawIndex(), b = s.viewChildren, O = c.upperHeight, w = b && b.length, x = f.getModel("itemStyle"), S = f.getModel(["emphasis", "itemStyle"]), _ = f.getModel(["blur", "itemStyle"]), C = f.getModel(["select", "itemStyle"]), A = x.get("borderRadius") || 0, T = Y("nodeGroup", zM);
  if (!T)
    return;
  if (l.add(T), T.x = c.x || 0, T.y = c.y || 0, T.markRedraw(), mS(T).nodeWidth = d, mS(T).nodeHeight = p, c.isAboveViewRoot)
    return T;
  var k = Y("background", _8, u, _Et);
  k && $(T, k, w && c.upperLabelHeight);
  var L = f.getModel("emphasis"), D = L.get("focus"), E = L.get("blurScope"), M = L.get("disabled"), R = D === "ancestor" ? s.getAncestorsIndices() : D === "descendant" ? s.getDescendantIndices() : D;
  if (w)
    Bc(T) && hf(T, !1), k && (hf(k, !M), h.setItemGraphicEl(s.dataIndex, k), oM(k, R, E));
  else {
    var N = Y("content", _8, u, CEt);
    N && V(T, N), k.disableMorphing = !0, k && Bc(k) && hf(k, !1), hf(T, !M), h.setItemGraphicEl(s.dataIndex, T), oM(T, R, E);
  }
  return T;
  function $(K, re, ge) {
    var ne = Fe(re);
    if (ne.dataIndex = s.dataIndex, ne.seriesIndex = n.seriesIndex, re.setShape({
      x: 0,
      y: 0,
      width: d,
      height: p,
      r: A
    }), v)
      H(re);
    else {
      re.invisible = !1;
      var ue = s.getVisual("style"), xe = ue.stroke, gt = P8(x);
      gt.fill = xe;
      var He = Vh(S);
      He.fill = S.get("borderColor");
      var It = Vh(_);
      It.fill = _.get("borderColor");
      var Rt = Vh(C);
      if (Rt.fill = C.get("borderColor"), ge) {
        var pn = d - 2 * g;
        G(
          // PENDING: convert ZRColor to ColorString for text.
          re,
          xe,
          ue.opacity,
          {
            x: g,
            y: 0,
            width: pn,
            height: O
          }
        );
      } else
        re.removeTextContent();
      re.setStyle(gt), re.ensureState("emphasis").style = He, re.ensureState("blur").style = It, re.ensureState("select").style = Rt, id(re);
    }
    K.add(re);
  }
  function V(K, re) {
    var ge = Fe(re);
    ge.dataIndex = s.dataIndex, ge.seriesIndex = n.seriesIndex;
    var ne = Math.max(d - 2 * g, 0), ue = Math.max(p - 2 * g, 0);
    if (re.culling = !0, re.setShape({
      x: g,
      y: g,
      width: ne,
      height: ue,
      r: A
    }), v)
      H(re);
    else {
      re.invisible = !1;
      var xe = s.getVisual("style"), gt = xe.fill, He = P8(x);
      He.fill = gt, He.decal = xe.decal;
      var It = Vh(S), Rt = Vh(_), pn = Vh(C);
      G(re, gt, xe.opacity, null), re.setStyle(He), re.ensureState("emphasis").style = It, re.ensureState("blur").style = Rt, re.ensureState("select").style = pn, id(re);
    }
    K.add(re);
  }
  function H(K) {
    !K.invisible && o.push(K);
  }
  function G(K, re, ge, ne) {
    var ue = f.getModel(ne ? T8 : A8), xe = dr(f.get("name"), null), gt = ue.getShallow("show");
    ci(K, kr(f, ne ? T8 : A8), {
      defaultText: gt ? xe : null,
      inheritColor: re,
      defaultOpacity: ge,
      labelFetcher: n,
      labelDataIndex: s.dataIndex
    });
    var He = K.getTextContent();
    if (He) {
      var It = He.style, Rt = LI(It.padding || 0);
      ne && (K.setTextConfig({
        layoutRect: ne
      }), He.disableLabelLayout = !0), He.beforeUpdate = function() {
        var Xn = Math.max((ne ? ne.width : K.shape.width) - Rt[1] - Rt[3], 0), Dn = Math.max((ne ? ne.height : K.shape.height) - Rt[0] - Rt[2], 0);
        (It.width !== Xn || It.height !== Dn) && He.setStyle({
          width: Xn,
          height: Dn
        });
      }, It.truncateMinChar = 2, It.lineOverflow = "truncate", q(It, ne, c);
      var pn = He.getState("emphasis");
      q(pn ? pn.style : null, ne, c);
    }
  }
  function q(K, re, ge) {
    var ne = K ? K.text : null;
    if (!re && ge.isLeafRoot && ne != null) {
      var ue = n.get("drillDownIcon", !0);
      K.text = ue ? ue + " " + ne : ne;
    }
  }
  function Y(K, re, ge, ne) {
    var ue = y != null && t[K][y], xe = i[K];
    return ue ? (t[K][y] = null, ie(xe, ue)) : v || (ue = new re(), ue instanceof As && (ue.z2 = PEt(ge, ne)), se(xe, ue)), e[K][m] = ue;
  }
  function ie(K, re) {
    var ge = K[m] = {};
    re instanceof zM ? (ge.oldX = re.x, ge.oldY = re.y) : ge.oldShape = te({}, re.shape);
  }
  function se(K, re) {
    var ge = K[m] = {}, ne = s.parentNode, ue = re instanceof Ve;
    if (ne && (!r || r.direction === "drillDown")) {
      var xe = 0, gt = 0, He = i.background[ne.getRawIndex()];
      !r && He && He.oldShape && (xe = He.oldShape.width, gt = He.oldShape.height), ue ? (ge.oldX = 0, ge.oldY = gt) : ge.oldShape = {
        x: xe,
        y: gt,
        width: 0,
        height: 0
      };
    }
    ge.fadein = !ue;
  }
}
function PEt(n, e) {
  return n * SEt + e;
}
const EEt = AEt;
var I0 = I, kEt = Me, yS = -1, JR = (
  /** @class */
  function() {
    function n(e) {
      var t = e.mappingMethod, r = e.type, i = this.option = Re(e);
      this.type = r, this.mappingMethod = t, this._normalizeData = LEt[t];
      var o = n.visualHandlers[r];
      this.applyVisual = o.applyVisual, this.getColorMapper = o.getColorMapper, this._normalizedToVisual = o._normalizedToVisual[t], t === "piecewise" ? (_T(i), MEt(i)) : t === "category" ? i.categories ? DEt(i) : _T(i, !0) : (De(t !== "linear" || i.dataExtent), _T(i));
    }
    return n.prototype.mapValueToVisual = function(e) {
      var t = this._normalizeData(e);
      return this._normalizedToVisual(t, e);
    }, n.prototype.getNormalizer = function() {
      return Oe(this._normalizeData, this);
    }, n.listVisualTypes = function() {
      return ft(n.visualHandlers);
    }, n.isValidType = function(e) {
      return n.visualHandlers.hasOwnProperty(e);
    }, n.eachVisual = function(e, t, r) {
      Me(e) ? I(e, t, r) : t.call(r, e);
    }, n.mapVisual = function(e, t, r) {
      var i, o = oe(e) ? [] : Me(e) ? {} : (i = !0, null);
      return n.eachVisual(e, function(s, a) {
        var l = t.call(r, s, a);
        i ? o = l : o[a] = l;
      }), o;
    }, n.retrieveVisuals = function(e) {
      var t = {}, r;
      return e && I0(n.visualHandlers, function(i, o) {
        e.hasOwnProperty(o) && (t[o] = e[o], r = !0);
      }), r ? t : null;
    }, n.prepareVisualTypes = function(e) {
      if (oe(e))
        e = e.slice();
      else if (kEt(e)) {
        var t = [];
        I0(e, function(r, i) {
          t.push(i);
        }), e = t;
      } else
        return [];
      return e.sort(function(r, i) {
        return i === "color" && r !== "color" && r.indexOf("color") === 0 ? 1 : -1;
      }), e;
    }, n.dependsOn = function(e, t) {
      return t === "color" ? !!(e && e.indexOf(t) === 0) : e === t;
    }, n.findPieceIndex = function(e, t, r) {
      for (var i, o = 1 / 0, s = 0, a = t.length; s < a; s++) {
        var l = t[s].value;
        if (l != null) {
          if (l === e || be(l) && l === e + "")
            return s;
          r && f(l, s);
        }
      }
      for (var s = 0, a = t.length; s < a; s++) {
        var u = t[s], c = u.interval, h = u.close;
        if (c) {
          if (c[0] === -1 / 0) {
            if (SO(h[1], e, c[1]))
              return s;
          } else if (c[1] === 1 / 0) {
            if (SO(h[0], c[0], e))
              return s;
          } else if (SO(h[0], c[0], e) && SO(h[1], e, c[1]))
            return s;
          r && f(c[0], s), r && f(c[1], s);
        }
      }
      if (r)
        return e === 1 / 0 ? t.length - 1 : e === -1 / 0 ? 0 : i;
      function f(d, p) {
        var g = Math.abs(d - e);
        g < o && (o = g, i = p);
      }
    }, n.visualHandlers = {
      color: {
        applyVisual: um("color"),
        getColorMapper: function() {
          var e = this.option;
          return Oe(e.mappingMethod === "category" ? function(t, r) {
            return !r && (t = this._normalizeData(t)), Nm.call(this, t);
          } : function(t, r, i) {
            var o = !!i;
            return !r && (t = this._normalizeData(t)), i = nA(t, e.parsedVisual, i), o ? i : jl(i, "rgba");
          }, this);
        },
        _normalizedToVisual: {
          linear: function(e) {
            return jl(nA(e, this.option.parsedVisual), "rgba");
          },
          category: Nm,
          piecewise: function(e, t) {
            var r = QM.call(this, t);
            return r == null && (r = jl(nA(e, this.option.parsedVisual), "rgba")), r;
          },
          fixed: zh
        }
      },
      colorHue: xO(function(e, t) {
        return fy(e, t);
      }),
      colorSaturation: xO(function(e, t) {
        return fy(e, null, t);
      }),
      colorLightness: xO(function(e, t) {
        return fy(e, null, null, t);
      }),
      colorAlpha: xO(function(e, t) {
        return Fx(e, t);
      }),
      decal: {
        applyVisual: um("decal"),
        _normalizedToVisual: {
          linear: null,
          category: Nm,
          piecewise: null,
          fixed: null
        }
      },
      opacity: {
        applyVisual: um("opacity"),
        _normalizedToVisual: FM([0, 1])
      },
      liftZ: {
        applyVisual: um("liftZ"),
        _normalizedToVisual: {
          linear: zh,
          category: zh,
          piecewise: zh,
          fixed: zh
        }
      },
      symbol: {
        applyVisual: function(e, t, r) {
          var i = this.mapValueToVisual(e);
          r("symbol", i);
        },
        _normalizedToVisual: {
          linear: E8,
          category: Nm,
          piecewise: function(e, t) {
            var r = QM.call(this, t);
            return r == null && (r = E8.call(this, e)), r;
          },
          fixed: zh
        }
      },
      symbolSize: {
        applyVisual: um("symbolSize"),
        _normalizedToVisual: FM([0, 1])
      }
    }, n;
  }()
);
function MEt(n) {
  var e = n.pieceList;
  n.hasSpecialVisual = !1, I(e, function(t, r) {
    t.originIndex = r, t.visual != null && (n.hasSpecialVisual = !0);
  });
}
function DEt(n) {
  var e = n.categories, t = n.categoryMap = {}, r = n.visual;
  if (I0(e, function(s, a) {
    t[s] = a;
  }), !oe(r)) {
    var i = [];
    Me(r) ? I0(r, function(s, a) {
      var l = t[a];
      i[l ?? yS] = s;
    }) : i[yS] = r, r = kne(n, i);
  }
  for (var o = e.length - 1; o >= 0; o--)
    r[o] == null && (delete t[e[o]], e.pop());
}
function _T(n, e) {
  var t = n.visual, r = [];
  Me(t) ? I0(t, function(o) {
    r.push(o);
  }) : t != null && r.push(t);
  var i = {
    color: 1,
    symbol: 1
  };
  !e && r.length === 1 && !i.hasOwnProperty(n.type) && (r[1] = r[0]), kne(n, r);
}
function xO(n) {
  return {
    applyVisual: function(e, t, r) {
      var i = this.mapValueToVisual(e);
      r("color", n(t("color"), i));
    },
    _normalizedToVisual: FM([0, 1])
  };
}
function E8(n) {
  var e = this.option.visual;
  return e[Math.round(Ft(n, [0, 1], [0, e.length - 1], !0))] || {};
}
function um(n) {
  return function(e, t, r) {
    r(n, this.mapValueToVisual(e));
  };
}
function Nm(n) {
  var e = this.option.visual;
  return e[this.option.loop && n !== yS ? n % e.length : n];
}
function zh() {
  return this.option.visual[0];
}
function FM(n) {
  return {
    linear: function(e) {
      return Ft(e, n, this.option.visual, !0);
    },
    category: Nm,
    piecewise: function(e, t) {
      var r = QM.call(this, t);
      return r == null && (r = Ft(e, n, this.option.visual, !0)), r;
    },
    fixed: zh
  };
}
function QM(n) {
  var e = this.option, t = e.pieceList;
  if (e.hasSpecialVisual) {
    var r = JR.findPieceIndex(n, t), i = t[r];
    if (i && i.visual)
      return i.visual[this.type];
  }
}
function kne(n, e) {
  return n.visual = e, n.type === "color" && (n.parsedVisual = ae(e, function(t) {
    var r = Vo(t);
    return !r && process.env.NODE_ENV !== "production" && En("'" + t + "' is an illegal color, fallback to '#000000'", !0), r || [0, 0, 0, 1];
  })), e;
}
var LEt = {
  linear: function(n) {
    return Ft(n, this.option.dataExtent, [0, 1], !0);
  },
  piecewise: function(n) {
    var e = this.option.pieceList, t = JR.findPieceIndex(n, e, !0);
    if (t != null)
      return Ft(t, [0, e.length - 1], [0, 1], !0);
  },
  category: function(n) {
    var e = this.option.categories ? this.option.categoryMap[n] : n;
    return e ?? yS;
  },
  fixed: qn
};
function SO(n, e, t) {
  return n ? e <= t : e < t;
}
const ai = JR;
var IEt = "itemStyle", Mne = Ct();
const REt = {
  seriesType: "treemap",
  reset: function(n) {
    var e = n.getData().tree, t = e.root;
    t.isRemoved() || Dne(
      t,
      // Visual should calculate from tree root but not view root.
      {},
      n.getViewRoot().getAncestors(),
      n
    );
  }
};
function Dne(n, e, t, r) {
  var i = n.getModel(), o = n.getLayout(), s = n.hostTree.data;
  if (!(!o || o.invisible || !o.isInView)) {
    var a = i.getModel(IEt), l = $Et(a, e, r), u = s.ensureUniqueItemVisual(n.dataIndex, "style"), c = a.get("borderColor"), h = a.get("borderColorSaturation"), f;
    h != null && (f = k8(l), c = NEt(h, f)), u.stroke = c;
    var d = n.viewChildren;
    if (!d || !d.length)
      f = k8(l), u.fill = f;
    else {
      var p = BEt(n, i, o, a, l, d);
      I(d, function(g, v) {
        if (g.depth >= t.length || g === t[g.depth]) {
          var m = VEt(i, l, g, v, p, r);
          Dne(g, m, t, r);
        }
      });
    }
  }
}
function $Et(n, e, t) {
  var r = te({}, e), i = t.designatedVisualItemStyle;
  return I(["color", "colorAlpha", "colorSaturation"], function(o) {
    i[o] = e[o];
    var s = n.get(o);
    i[o] = null, s != null && (r[o] = s);
  }), r;
}
function k8(n) {
  var e = CT(n, "color");
  if (e) {
    var t = CT(n, "colorAlpha"), r = CT(n, "colorSaturation");
    return r && (e = fy(e, null, null, r)), t && (e = Fx(e, t)), e;
  }
}
function NEt(n, e) {
  return e != null ? fy(e, null, null, n) : null;
}
function CT(n, e) {
  var t = n[e];
  if (t != null && t !== "none")
    return t;
}
function BEt(n, e, t, r, i, o) {
  if (!(!o || !o.length)) {
    var s = AT(e, "color") || i.color != null && i.color !== "none" && (AT(e, "colorAlpha") || AT(e, "colorSaturation"));
    if (s) {
      var a = e.get("visualMin"), l = e.get("visualMax"), u = t.dataExtent.slice();
      a != null && a < u[0] && (u[0] = a), l != null && l > u[1] && (u[1] = l);
      var c = e.get("colorMappingBy"), h = {
        type: s.name,
        dataExtent: u,
        visual: s.range
      };
      h.type === "color" && (c === "index" || c === "id") ? (h.mappingMethod = "category", h.loop = !0) : h.mappingMethod = "linear";
      var f = new ai(h);
      return Mne(f).drColorMappingBy = c, f;
    }
  }
}
function AT(n, e) {
  var t = n.get(e);
  return oe(t) && t.length ? {
    name: e,
    range: t
  } : null;
}
function VEt(n, e, t, r, i, o) {
  var s = te({}, e);
  if (i) {
    var a = i.type, l = a === "color" && Mne(i).drColorMappingBy, u = l === "index" ? r : l === "id" ? o.mapIdToIndex(t.getId()) : t.getValue(n.get("visualDimension"));
    s[a] = i.mapValueToVisual(u);
  }
  return s;
}
var R0 = Math.max, bS = Math.min, M8 = tr, e$ = I, Lne = ["itemStyle", "borderWidth"], zEt = ["itemStyle", "gapWidth"], FEt = ["upperLabel", "show"], QEt = ["upperLabel", "height"];
const ZEt = {
  seriesType: "treemap",
  reset: function(n, e, t, r) {
    var i = t.getWidth(), o = t.getHeight(), s = n.option, a = mr(n.getBoxLayoutParams(), {
      width: t.getWidth(),
      height: t.getHeight()
    }), l = s.size || [], u = fe(M8(a.width, l[0]), i), c = fe(M8(a.height, l[1]), o), h = r && r.type, f = ["treemapZoomToNode", "treemapRootToNode"], d = L0(r, f, n), p = h === "treemapRender" || h === "treemapMove" ? r.rootRect : null, g = n.getViewRoot(), v = Tne(g);
    if (h !== "treemapMove") {
      var m = h === "treemapZoomToNode" ? YEt(n, d, g, u, c) : p ? [p.width, p.height] : [u, c], y = s.sort;
      y && y !== "asc" && y !== "desc" && (y = "desc");
      var b = {
        squareRatio: s.squareRatio,
        sort: y,
        leafDepth: s.leafDepth
      };
      g.hostTree.clearLayouts();
      var O = {
        x: 0,
        y: 0,
        width: m[0],
        height: m[1],
        area: m[0] * m[1]
      };
      g.setLayout(O), Ine(g, b, !1, 0), O = g.getLayout(), e$(v, function(x, S) {
        var _ = (v[S + 1] || g).getValue();
        x.setLayout(te({
          dataExtent: [_, _],
          borderWidth: 0,
          upperHeight: 0
        }, O));
      });
    }
    var w = n.getData().tree.root;
    w.setLayout(XEt(a, p, d), !0), n.setLayoutInfo(a), Rne(
      w,
      // Transform to base element coordinate system.
      new et(-a.x, -a.y, i, o),
      v,
      g,
      0
    );
  }
};
function Ine(n, e, t, r) {
  var i, o;
  if (!n.isRemoved()) {
    var s = n.getLayout();
    i = s.width, o = s.height;
    var a = n.getModel(), l = a.get(Lne), u = a.get(zEt) / 2, c = $ne(a), h = Math.max(l, c), f = l - u, d = h - u;
    n.setLayout({
      borderWidth: l,
      upperHeight: h,
      upperLabelHeight: c
    }, !0), i = R0(i - 2 * f, 0), o = R0(o - f - d, 0);
    var p = i * o, g = WEt(n, a, p, e, t, r);
    if (g.length) {
      var v = {
        x: f,
        y: d,
        width: i,
        height: o
      }, m = bS(i, o), y = 1 / 0, b = [];
      b.area = 0;
      for (var O = 0, w = g.length; O < w; ) {
        var x = g[O];
        b.push(x), b.area += x.getLayout().area;
        var S = qEt(b, m, e.squareRatio);
        S <= y ? (O++, y = S) : (b.area -= b.pop().getLayout().area, D8(b, m, v, u, !1), m = bS(v.width, v.height), b.length = b.area = 0, y = 1 / 0);
      }
      if (b.length && D8(b, m, v, u, !0), !t) {
        var _ = a.get("childrenVisibleMin");
        _ != null && p < _ && (t = !0);
      }
      for (var O = 0, w = g.length; O < w; O++)
        Ine(g[O], e, t, r + 1);
    }
  }
}
function WEt(n, e, t, r, i, o) {
  var s = n.children || [], a = r.sort;
  a !== "asc" && a !== "desc" && (a = null);
  var l = r.leafDepth != null && r.leafDepth <= o;
  if (i && !l)
    return n.viewChildren = [];
  s = Gt(s, function(d) {
    return !d.isRemoved();
  }), jEt(s, a);
  var u = HEt(e, s, a);
  if (u.sum === 0)
    return n.viewChildren = [];
  if (u.sum = GEt(e, t, u.sum, a, s), u.sum === 0)
    return n.viewChildren = [];
  for (var c = 0, h = s.length; c < h; c++) {
    var f = s[c].getValue() / u.sum * t;
    s[c].setLayout({
      area: f
    });
  }
  return l && (s.length && n.setLayout({
    isLeafRoot: !0
  }, !0), s.length = 0), n.viewChildren = s, n.setLayout({
    dataExtent: u.dataExtent
  }, !0), s;
}
function GEt(n, e, t, r, i) {
  if (!r)
    return t;
  for (var o = n.get("visibleMin"), s = i.length, a = s, l = s - 1; l >= 0; l--) {
    var u = i[r === "asc" ? s - l - 1 : l].getValue();
    u / t * e < o && (a = l, t -= u);
  }
  return r === "asc" ? i.splice(0, s - a) : i.splice(a, s - a), t;
}
function jEt(n, e) {
  return e && n.sort(function(t, r) {
    var i = e === "asc" ? t.getValue() - r.getValue() : r.getValue() - t.getValue();
    return i === 0 ? e === "asc" ? t.dataIndex - r.dataIndex : r.dataIndex - t.dataIndex : i;
  }), n;
}
function HEt(n, e, t) {
  for (var r = 0, i = 0, o = e.length; i < o; i++)
    r += e[i].getValue();
  var s = n.get("visualDimension"), a;
  return !e || !e.length ? a = [NaN, NaN] : s === "value" && t ? (a = [e[e.length - 1].getValue(), e[0].getValue()], t === "asc" && a.reverse()) : (a = [1 / 0, -1 / 0], e$(e, function(l) {
    var u = l.getValue(s);
    u < a[0] && (a[0] = u), u > a[1] && (a[1] = u);
  })), {
    sum: r,
    dataExtent: a
  };
}
function qEt(n, e, t) {
  for (var r = 0, i = 1 / 0, o = 0, s = void 0, a = n.length; o < a; o++)
    s = n[o].getLayout().area, s && (s < i && (i = s), s > r && (r = s));
  var l = n.area * n.area, u = e * e * t;
  return l ? R0(u * r / l, l / (u * i)) : 1 / 0;
}
function D8(n, e, t, r, i) {
  var o = e === t.width ? 0 : 1, s = 1 - o, a = ["x", "y"], l = ["width", "height"], u = t[a[o]], c = e ? n.area / e : 0;
  (i || c > t[l[s]]) && (c = t[l[s]]);
  for (var h = 0, f = n.length; h < f; h++) {
    var d = n[h], p = {}, g = c ? d.getLayout().area / c : 0, v = p[l[s]] = R0(c - 2 * r, 0), m = t[a[o]] + t[l[o]] - u, y = h === f - 1 || m < g ? m : g, b = p[l[o]] = R0(y - 2 * r, 0);
    p[a[s]] = t[a[s]] + bS(r, v / 2), p[a[o]] = u + bS(r, b / 2), u += y, d.setLayout(p, !0);
  }
  t[a[s]] += c, t[l[s]] -= c;
}
function YEt(n, e, t, r, i) {
  var o = (e || {}).node, s = [r, i];
  if (!o || o === t)
    return s;
  for (var a, l = r * i, u = l * n.option.zoomToNodeRatio; a = o.parentNode; ) {
    for (var c = 0, h = a.children, f = 0, d = h.length; f < d; f++)
      c += h[f].getValue();
    var p = o.getValue();
    if (p === 0)
      return s;
    u *= c / p;
    var g = a.getModel(), v = g.get(Lne), m = Math.max(v, $ne(g));
    u += 4 * v * v + (3 * v + m) * Math.pow(u, 0.5), u > Q4 && (u = Q4), o = a;
  }
  u < l && (u = l);
  var y = Math.pow(u / l, 0.5);
  return [r * y, i * y];
}
function XEt(n, e, t) {
  if (e)
    return {
      x: e.x,
      y: e.y
    };
  var r = {
    x: 0,
    y: 0
  };
  if (!t)
    return r;
  var i = t.node, o = i.getLayout();
  if (!o)
    return r;
  for (var s = [o.width / 2, o.height / 2], a = i; a; ) {
    var l = a.getLayout();
    s[0] += l.x, s[1] += l.y, a = a.parentNode;
  }
  return {
    x: n.width / 2 - s[0],
    y: n.height / 2 - s[1]
  };
}
function Rne(n, e, t, r, i) {
  var o = n.getLayout(), s = t[i], a = s && s === n;
  if (!(s && !a || i === t.length && n !== r)) {
    n.setLayout({
      // isInView means: viewRoot sub tree + viewAbovePath
      isInView: !0,
      // invisible only means: outside view clip so that the node can not
      // see but still layout for animation preparation but not render.
      invisible: !a && !e.intersect(o),
      isAboveViewRoot: a
    }, !0);
    var l = new et(e.x - o.x, e.y - o.y, e.width, e.height);
    e$(n.viewChildren || [], function(u) {
      Rne(u, l, t, r, i + 1);
    });
  }
}
function $ne(n) {
  return n.get(FEt) ? n.get(QEt) : 0;
}
function UEt(n) {
  n.registerSeriesModel(gEt), n.registerChartView(EEt), n.registerVisual(REt), n.registerLayout(ZEt), fEt(n);
}
function KEt(n) {
  var e = n.findComponents({
    mainType: "legend"
  });
  !e || !e.length || n.eachSeriesByType("graph", function(t) {
    var r = t.getCategoriesData(), i = t.getGraph(), o = i.data, s = r.mapArray(r.getName);
    o.filterSelf(function(a) {
      var l = o.getItemModel(a), u = l.getShallow("category");
      if (u != null) {
        Tt(u) && (u = s[u]);
        for (var c = 0; c < e.length; c++)
          if (!e[c].isSelected(u))
            return !1;
      }
      return !0;
    });
  });
}
function JEt(n) {
  var e = {};
  n.eachSeriesByType("graph", function(t) {
    var r = t.getCategoriesData(), i = t.getData(), o = {};
    r.each(function(s) {
      var a = r.getName(s);
      o["ec-" + a] = s;
      var l = r.getItemModel(s), u = l.getModel("itemStyle").getItemStyle();
      u.fill || (u.fill = t.getColorFromPalette(a, e)), r.setItemVisual(s, "style", u);
      for (var c = ["symbol", "symbolSize", "symbolKeepAspect"], h = 0; h < c.length; h++) {
        var f = l.getShallow(c[h], !0);
        f != null && r.setItemVisual(s, c[h], f);
      }
    }), r.count() && i.each(function(s) {
      var a = i.getItemModel(s), l = a.getShallow("category");
      if (l != null) {
        be(l) && (l = o["ec-" + l]);
        var u = r.getItemVisual(l, "style"), c = i.ensureUniqueItemVisual(s, "style");
        te(c, u);
        for (var h = ["symbol", "symbolSize", "symbolKeepAspect"], f = 0; f < h.length; f++)
          i.setItemVisual(s, h[f], r.getItemVisual(l, h[f]));
      }
    });
  });
}
function _O(n) {
  return n instanceof Array || (n = [n, n]), n;
}
function ekt(n) {
  n.eachSeriesByType("graph", function(e) {
    var t = e.getGraph(), r = e.getEdgeData(), i = _O(e.get("edgeSymbol")), o = _O(e.get("edgeSymbolSize"));
    r.setVisual("fromSymbol", i && i[0]), r.setVisual("toSymbol", i && i[1]), r.setVisual("fromSymbolSize", o && o[0]), r.setVisual("toSymbolSize", o && o[1]), r.setVisual("style", e.getModel("lineStyle").getLineStyle()), r.each(function(s) {
      var a = r.getItemModel(s), l = t.getEdgeByIndex(s), u = _O(a.getShallow("symbol", !0)), c = _O(a.getShallow("symbolSize", !0)), h = a.getModel("lineStyle").getLineStyle(), f = r.ensureUniqueItemVisual(s, "style");
      switch (te(f, h), f.stroke) {
        case "source": {
          var d = l.node1.getVisual("style");
          f.stroke = d && d.fill;
          break;
        }
        case "target": {
          var d = l.node2.getVisual("style");
          f.stroke = d && d.fill;
          break;
        }
      }
      u[0] && l.setVisual("fromSymbol", u[0]), u[1] && l.setVisual("toSymbol", u[1]), c[0] && l.setVisual("fromSymbolSize", c[0]), c[1] && l.setVisual("toSymbolSize", c[1]);
    });
  });
}
var ZM = "-->", AC = function(n) {
  return n.get("autoCurveness") || null;
}, Nne = function(n, e) {
  var t = AC(n), r = 20, i = [];
  if (Tt(t))
    r = t;
  else if (oe(t)) {
    n.__curvenessList = t;
    return;
  }
  e > r && (r = e);
  var o = r % 2 ? r + 2 : r + 3;
  i = [];
  for (var s = 0; s < o; s++)
    i.push((s % 2 ? s + 1 : s) / 10 * (s % 2 ? -1 : 1));
  n.__curvenessList = i;
}, $0 = function(n, e, t) {
  var r = [n.id, n.dataIndex].join("."), i = [e.id, e.dataIndex].join(".");
  return [t.uid, r, i].join(ZM);
}, Bne = function(n) {
  var e = n.split(ZM);
  return [e[0], e[2], e[1]].join(ZM);
}, tkt = function(n, e) {
  var t = $0(n.node1, n.node2, e);
  return e.__edgeMap[t];
}, nkt = function(n, e) {
  var t = WM($0(n.node1, n.node2, e), e), r = WM($0(n.node2, n.node1, e), e);
  return t + r;
}, WM = function(n, e) {
  var t = e.__edgeMap;
  return t[n] ? t[n].length : 0;
};
function rkt(n) {
  AC(n) && (n.__curvenessList = [], n.__edgeMap = {}, Nne(n));
}
function ikt(n, e, t, r) {
  if (AC(t)) {
    var i = $0(n, e, t), o = t.__edgeMap, s = o[Bne(i)];
    o[i] && !s ? o[i].isForward = !0 : s && o[i] && (s.isForward = !0, o[i].isForward = !1), o[i] = o[i] || [], o[i].push(r);
  }
}
function t$(n, e, t, r) {
  var i = AC(e), o = oe(i);
  if (!i)
    return null;
  var s = tkt(n, e);
  if (!s)
    return null;
  for (var a = -1, l = 0; l < s.length; l++)
    if (s[l] === t) {
      a = l;
      break;
    }
  var u = nkt(n, e);
  Nne(e, u), n.lineStyle = n.lineStyle || {};
  var c = $0(n.node1, n.node2, e), h = e.__curvenessList, f = o || u % 2 ? 0 : 1;
  if (s.isForward)
    return h[f + a];
  var d = Bne(c), p = WM(d, e), g = h[a + p + f];
  return r ? o ? i && i[0] === 0 ? (p + f) % 2 ? g : -g : ((p % 2 ? 0 : 1) + f) % 2 ? g : -g : (p + f) % 2 ? g : -g : h[a + p + f];
}
function Vne(n) {
  var e = n.coordinateSystem;
  if (!(e && e.type !== "view")) {
    var t = n.getGraph();
    t.eachNode(function(r) {
      var i = r.getModel();
      r.setLayout([+i.get("x"), +i.get("y")]);
    }), n$(t, n);
  }
}
function n$(n, e) {
  n.eachEdge(function(t, r) {
    var i = ys(t.getModel().get(["lineStyle", "curveness"]), -t$(t, e, r, !0), 0), o = Wl(t.node1.getLayout()), s = Wl(t.node2.getLayout()), a = [o, s];
    +i && a.push([(o[0] + s[0]) / 2 - (o[1] - s[1]) * i, (o[1] + s[1]) / 2 - (s[0] - o[0]) * i]), t.setLayout(a);
  });
}
function okt(n, e) {
  n.eachSeriesByType("graph", function(t) {
    var r = t.get("layout"), i = t.coordinateSystem;
    if (i && i.type !== "view") {
      var o = t.getData(), s = [];
      I(i.dimensions, function(f) {
        s = s.concat(o.mapDimensionsAll(f));
      });
      for (var a = 0; a < o.count(); a++) {
        for (var l = [], u = !1, c = 0; c < s.length; c++) {
          var h = o.get(s[c], a);
          isNaN(h) || (u = !0), l.push(h);
        }
        u ? o.setItemLayout(a, i.dataToPoint(l)) : o.setItemLayout(a, [NaN, NaN]);
      }
      n$(o.graph, t);
    } else
      (!r || r === "none") && Vne(t);
  });
}
function Bm(n) {
  var e = n.coordinateSystem;
  if (e.type !== "view")
    return 1;
  var t = n.option.nodeScaleRatio, r = e.scaleX, i = e.getZoom(), o = (i - 1) * t + 1;
  return o / r;
}
function Vm(n) {
  var e = n.getVisual("symbolSize");
  return e instanceof Array && (e = (e[0] + e[1]) / 2), +e;
}
var L8 = Math.PI, TT = [];
function r$(n, e, t, r) {
  var i = n.coordinateSystem;
  if (!(i && i.type !== "view")) {
    var o = i.getBoundingRect(), s = n.getData(), a = s.graph, l = o.width / 2 + o.x, u = o.height / 2 + o.y, c = Math.min(o.width, o.height) / 2, h = s.count();
    if (s.setLayout({
      cx: l,
      cy: u
    }), !!h) {
      if (t) {
        var f = i.pointToData(r), d = f[0], p = f[1], g = [d - l, p - u];
        cv(g, g), vw(g, g, c), t.setLayout([l + g[0], u + g[1]], !0);
        var v = n.get(["circular", "rotateLabel"]);
        zne(t, v, l, u);
      }
      skt[e](n, a, s, c, l, u, h), a.eachEdge(function(m, y) {
        var b = ys(m.getModel().get(["lineStyle", "curveness"]), t$(m, n, y), 0), O = Wl(m.node1.getLayout()), w = Wl(m.node2.getLayout()), x, S = (O[0] + w[0]) / 2, _ = (O[1] + w[1]) / 2;
        +b && (b *= 3, x = [l * b + S * (1 - b), u * b + _ * (1 - b)]), m.setLayout([O, w, x]);
      });
    }
  }
}
var skt = {
  value: function(n, e, t, r, i, o, s) {
    var a = 0, l = t.getSum("value"), u = Math.PI * 2 / (l || s);
    e.eachNode(function(c) {
      var h = c.getValue("value"), f = u * (l ? h : 1) / 2;
      a += f, c.setLayout([r * Math.cos(a) + i, r * Math.sin(a) + o]), a += f;
    });
  },
  symbolSize: function(n, e, t, r, i, o, s) {
    var a = 0;
    TT.length = s;
    var l = Bm(n);
    e.eachNode(function(h) {
      var f = Vm(h);
      isNaN(f) && (f = 2), f < 0 && (f = 0), f *= l;
      var d = Math.asin(f / 2 / r);
      isNaN(d) && (d = L8 / 2), TT[h.dataIndex] = d, a += d * 2;
    });
    var u = (2 * L8 - a) / s / 2, c = 0;
    e.eachNode(function(h) {
      var f = u + TT[h.dataIndex];
      c += f, (!h.getLayout() || !h.getLayout().fixed) && h.setLayout([r * Math.cos(c) + i, r * Math.sin(c) + o]), c += f;
    });
  }
};
function zne(n, e, t, r) {
  var i = n.getGraphicEl();
  if (i) {
    var o = n.getModel(), s = o.get(["label", "rotate"]) || 0, a = i.getSymbolPath();
    if (e) {
      var l = n.getLayout(), u = Math.atan2(l[1] - r, l[0] - t);
      u < 0 && (u = Math.PI * 2 + u);
      var c = l[0] < t;
      c && (u = u - Math.PI);
      var h = c ? "left" : "right";
      a.setTextConfig({
        rotation: -u,
        position: h,
        origin: "center"
      });
      var f = a.ensureState("emphasis");
      te(f.textConfig || (f.textConfig = {}), {
        position: h
      });
    } else
      a.setTextConfig({
        rotation: s *= Math.PI / 180
      });
  }
}
function akt(n) {
  n.eachSeriesByType("graph", function(e) {
    e.get("layout") === "circular" && r$(e, "symbolSize");
  });
}
var Xd = Pk;
function lkt(n, e, t) {
  for (var r = n, i = e, o = t.rect, s = o.width, a = o.height, l = [o.x + s / 2, o.y + a / 2], u = t.gravity == null ? 0.1 : t.gravity, c = 0; c < r.length; c++) {
    var h = r[c];
    h.p || (h.p = vd(s * (Math.random() - 0.5) + l[0], a * (Math.random() - 0.5) + l[1])), h.pp = Wl(h.p), h.edges = null;
  }
  var f = t.friction == null ? 0.6 : t.friction, d = f, p, g;
  return {
    warmUp: function() {
      d = f * 0.8;
    },
    setFixed: function(v) {
      r[v].fixed = !0;
    },
    setUnfixed: function(v) {
      r[v].fixed = !1;
    },
    /**
     * Before step hook
     */
    beforeStep: function(v) {
      p = v;
    },
    /**
     * After step hook
     */
    afterStep: function(v) {
      g = v;
    },
    /**
     * Some formulas were originally copied from "d3.js"
     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js
     * with some modifications made for this project.
     * See the license statement at the head of this file.
     */
    step: function(v) {
      p && p(r, i);
      for (var m = [], y = r.length, b = 0; b < i.length; b++) {
        var O = i[b];
        if (!O.ignoreForceLayout) {
          var w = O.n1, x = O.n2;
          uf(m, x.p, w.p);
          var S = Ek(m) - O.d, _ = x.w / (w.w + x.w);
          isNaN(_) && (_ = 0), cv(m, m), !w.fixed && Xd(w.p, w.p, m, _ * S * d), !x.fixed && Xd(x.p, x.p, m, -(1 - _) * S * d);
        }
      }
      for (var b = 0; b < y; b++) {
        var C = r[b];
        C.fixed || (uf(m, l, C.p), Xd(C.p, C.p, m, u * d));
      }
      for (var b = 0; b < y; b++)
        for (var w = r[b], A = b + 1; A < y; A++) {
          var x = r[A];
          uf(m, x.p, w.p);
          var S = Ek(m);
          S === 0 && (I0t(m, Math.random() - 0.5, Math.random() - 0.5), S = 1);
          var T = (w.rep + x.rep) / S / S;
          !w.fixed && Xd(w.pp, w.pp, m, T), !x.fixed && Xd(x.pp, x.pp, m, -T);
        }
      for (var k = [], b = 0; b < y; b++) {
        var C = r[b];
        C.fixed || (uf(k, C.p, C.pp), Xd(C.p, C.p, k, d), Di(C.pp, C.p));
      }
      d = d * 0.992;
      var L = d < 0.01;
      g && g(r, i, L), v && v(L);
    }
  };
}
function ukt(n) {
  n.eachSeriesByType("graph", function(e) {
    var t = e.coordinateSystem;
    if (!(t && t.type !== "view"))
      if (e.get("layout") === "force") {
        var r = e.preservedPoints || {}, i = e.getGraph(), o = i.data, s = i.edgeData, a = e.getModel("force"), l = a.get("initLayout");
        e.preservedPoints ? o.each(function(b) {
          var O = o.getId(b);
          o.setItemLayout(b, r[O] || [NaN, NaN]);
        }) : !l || l === "none" ? Vne(e) : l === "circular" && r$(e, "value");
        var u = o.getDataExtent("value"), c = s.getDataExtent("value"), h = a.get("repulsion"), f = a.get("edgeLength"), d = oe(h) ? h : [h, h], p = oe(f) ? f : [f, f];
        p = [p[1], p[0]];
        var g = o.mapArray("value", function(b, O) {
          var w = o.getItemLayout(O), x = Ft(b, u, d);
          return isNaN(x) && (x = (d[0] + d[1]) / 2), {
            w: x,
            rep: x,
            fixed: o.getItemModel(O).get("fixed"),
            p: !w || isNaN(w[0]) || isNaN(w[1]) ? null : w
          };
        }), v = s.mapArray("value", function(b, O) {
          var w = i.getEdgeByIndex(O), x = Ft(b, c, p);
          isNaN(x) && (x = (p[0] + p[1]) / 2);
          var S = w.getModel(), _ = ys(w.getModel().get(["lineStyle", "curveness"]), -t$(w, e, O, !0), 0);
          return {
            n1: g[w.node1.dataIndex],
            n2: g[w.node2.dataIndex],
            d: x,
            curveness: _,
            ignoreForceLayout: S.get("ignoreForceLayout")
          };
        }), m = t.getBoundingRect(), y = lkt(g, v, {
          rect: m,
          gravity: a.get("gravity"),
          friction: a.get("friction")
        });
        y.beforeStep(function(b, O) {
          for (var w = 0, x = b.length; w < x; w++)
            b[w].fixed && Di(b[w].p, i.getNodeByIndex(w).getLayout());
        }), y.afterStep(function(b, O, w) {
          for (var x = 0, S = b.length; x < S; x++)
            b[x].fixed || i.getNodeByIndex(x).setLayout(b[x].p), r[o.getId(x)] = b[x].p;
          for (var x = 0, S = O.length; x < S; x++) {
            var _ = O[x], C = i.getEdgeByIndex(x), A = _.n1.p, T = _.n2.p, k = C.getLayout();
            k = k ? k.slice() : [], k[0] = k[0] || [], k[1] = k[1] || [], Di(k[0], A), Di(k[1], T), +_.curveness && (k[2] = [(A[0] + T[0]) / 2 - (A[1] - T[1]) * _.curveness, (A[1] + T[1]) / 2 - (T[0] - A[0]) * _.curveness]), C.setLayout(k);
          }
        }), e.forceLayout = y, e.preservedPoints = r, y.step();
      } else
        e.forceLayout = null;
  });
}
function ckt(n, e, t) {
  var r = te(n.getBoxLayoutParams(), {
    aspect: t
  });
  return mr(r, {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function hkt(n, e) {
  var t = [];
  return n.eachSeriesByType("graph", function(r) {
    var i = r.get("coordinateSystem");
    if (!i || i === "view") {
      var o = r.getData(), s = o.mapArray(function(v) {
        var m = o.getItemModel(v);
        return [+m.get("x"), +m.get("y")];
      }), a = [], l = [];
      eC(s, a, l), l[0] - a[0] === 0 && (l[0] += 1, a[0] -= 1), l[1] - a[1] === 0 && (l[1] += 1, a[1] -= 1);
      var u = (l[0] - a[0]) / (l[1] - a[1]), c = ckt(r, e, u);
      isNaN(u) && (a = [c.x, c.y], l = [c.x + c.width, c.y + c.height]);
      var h = l[0] - a[0], f = l[1] - a[1], d = c.width, p = c.height, g = r.coordinateSystem = new Bb();
      g.zoomLimit = r.get("scaleLimit"), g.setBoundingRect(a[0], a[1], h, f), g.setViewRect(c.x, c.y, d, p), g.setCenter(r.get("center"), e), g.setZoom(r.get("zoom")), t.push(g);
    }
  }), t;
}
var I8 = Ar.prototype, PT = iC.prototype, Fne = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    }
    return n;
  }()
);
(function(n) {
  j(e, n);
  function e() {
    return n !== null && n.apply(this, arguments) || this;
  }
  return e;
})(Fne);
function ET(n) {
  return isNaN(+n.cpx1) || isNaN(+n.cpy1);
}
var fkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "ec-line", r;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new Fne();
    }, e.prototype.buildPath = function(t, r) {
      ET(r) ? I8.buildPath.call(this, t, r) : PT.buildPath.call(this, t, r);
    }, e.prototype.pointAt = function(t) {
      return ET(this.shape) ? I8.pointAt.call(this, t) : PT.pointAt.call(this, t);
    }, e.prototype.tangentAt = function(t) {
      var r = this.shape, i = ET(r) ? [r.x2 - r.x1, r.y2 - r.y1] : PT.tangentAt.call(this, t);
      return cv(i, i);
    }, e;
  }(ct)
), kT = ["fromSymbol", "toSymbol"];
function R8(n) {
  return "_" + n + "Type";
}
function $8(n, e, t) {
  var r = e.getItemVisual(t, n);
  if (!r || r === "none")
    return r;
  var i = e.getItemVisual(t, n + "Size"), o = e.getItemVisual(t, n + "Rotate"), s = e.getItemVisual(t, n + "Offset"), a = e.getItemVisual(t, n + "KeepAspect"), l = Cv(i), u = Od(s || 0, l);
  return r + l + u + (o || "") + (a || "");
}
function N8(n, e, t) {
  var r = e.getItemVisual(t, n);
  if (!(!r || r === "none")) {
    var i = e.getItemVisual(t, n + "Size"), o = e.getItemVisual(t, n + "Rotate"), s = e.getItemVisual(t, n + "Offset"), a = e.getItemVisual(t, n + "KeepAspect"), l = Cv(i), u = Od(s || 0, l), c = ar(r, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, a);
    return c.__specifiedRotation = o == null || isNaN(o) ? void 0 : +o * Math.PI / 180 || 0, c.name = n, c;
  }
}
function dkt(n) {
  var e = new fkt({
    name: "line",
    subPixelOptimize: !0
  });
  return GM(e.shape, n), e;
}
function GM(n, e) {
  n.x1 = e[0][0], n.y1 = e[0][1], n.x2 = e[1][0], n.y2 = e[1][1], n.percent = 1;
  var t = e[2];
  t ? (n.cpx1 = t[0], n.cpy1 = t[1]) : (n.cpx1 = NaN, n.cpy1 = NaN);
}
var pkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this) || this;
      return o._createLine(t, r, i), o;
    }
    return e.prototype._createLine = function(t, r, i) {
      var o = t.hostModel, s = t.getItemLayout(r), a = dkt(s);
      a.shape.percent = 0, vn(a, {
        shape: {
          percent: 1
        }
      }, o, r), this.add(a), I(kT, function(l) {
        var u = N8(l, t, r);
        this.add(u), this[R8(l)] = $8(l, t, r);
      }, this), this._updateCommonStl(t, r, i);
    }, e.prototype.updateData = function(t, r, i) {
      var o = t.hostModel, s = this.childOfName("line"), a = t.getItemLayout(r), l = {
        shape: {}
      };
      GM(l.shape, a), kt(s, l, o, r), I(kT, function(u) {
        var c = $8(u, t, r), h = R8(u);
        if (this[h] !== c) {
          this.remove(this.childOfName(u));
          var f = N8(u, t, r);
          this.add(f);
        }
        this[h] = c;
      }, this), this._updateCommonStl(t, r, i);
    }, e.prototype.getLinePath = function() {
      return this.childAt(0);
    }, e.prototype._updateCommonStl = function(t, r, i) {
      var o = t.hostModel, s = this.childOfName("line"), a = i && i.emphasisLineStyle, l = i && i.blurLineStyle, u = i && i.selectLineStyle, c = i && i.labelStatesModels, h = i && i.emphasisDisabled, f = i && i.focus, d = i && i.blurScope;
      if (!i || t.hasItemOption) {
        var p = t.getItemModel(r), g = p.getModel("emphasis");
        a = g.getModel("lineStyle").getLineStyle(), l = p.getModel(["blur", "lineStyle"]).getLineStyle(), u = p.getModel(["select", "lineStyle"]).getLineStyle(), h = g.get("disabled"), f = g.get("focus"), d = g.get("blurScope"), c = kr(p);
      }
      var v = t.getItemVisual(r, "style"), m = v.stroke;
      s.useStyle(v), s.style.fill = null, s.style.strokeNoScale = !0, s.ensureState("emphasis").style = a, s.ensureState("blur").style = l, s.ensureState("select").style = u, I(kT, function(x) {
        var S = this.childOfName(x);
        if (S) {
          S.setColor(m), S.style.opacity = v.opacity;
          for (var _ = 0; _ < Qi.length; _++) {
            var C = Qi[_], A = s.getState(C);
            if (A) {
              var T = A.style || {}, k = S.ensureState(C), L = k.style || (k.style = {});
              T.stroke != null && (L[S.__isEmptyBrush ? "stroke" : "fill"] = T.stroke), T.opacity != null && (L.opacity = T.opacity);
            }
          }
          S.markRedraw();
        }
      }, this);
      var y = o.getRawValue(r);
      ci(this, c, {
        labelDataIndex: r,
        labelFetcher: {
          getFormattedLabel: function(x, S) {
            return o.getFormattedLabel(x, S, t.dataType);
          }
        },
        inheritColor: m || "#000",
        defaultOpacity: v.opacity,
        defaultText: (y == null ? t.getName(r) : isFinite(y) ? zn(y) : y) + ""
      });
      var b = this.getTextContent();
      if (b) {
        var O = c.normal;
        b.__align = b.style.align, b.__verticalAlign = b.style.verticalAlign, b.__position = O.get("position") || "middle";
        var w = O.get("distance");
        oe(w) || (w = [w, w]), b.__labelDistance = w;
      }
      this.setTextConfig({
        position: null,
        local: !0,
        inside: !1
        // Can't be inside for stroke element.
      }), $n(this, f, d, h);
    }, e.prototype.highlight = function() {
      su(this);
    }, e.prototype.downplay = function() {
      au(this);
    }, e.prototype.updateLayout = function(t, r) {
      this.setLinePoints(t.getItemLayout(r));
    }, e.prototype.setLinePoints = function(t) {
      var r = this.childOfName("line");
      GM(r.shape, t), r.dirty();
    }, e.prototype.beforeUpdate = function() {
      var t = this, r = t.childOfName("fromSymbol"), i = t.childOfName("toSymbol"), o = t.getTextContent();
      if (!r && !i && (!o || o.ignore))
        return;
      for (var s = 1, a = this.parent; a; )
        a.scaleX && (s /= a.scaleX), a = a.parent;
      var l = t.childOfName("line");
      if (!this.__dirty && !l.__dirty)
        return;
      var u = l.shape.percent, c = l.pointAt(0), h = l.pointAt(u), f = uf([], h, c);
      cv(f, f);
      function d(A, T) {
        var k = A.__specifiedRotation;
        if (k == null) {
          var L = l.tangentAt(T);
          A.attr("rotation", (T === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(L[1], L[0]));
        } else
          A.attr("rotation", k);
      }
      if (r && (r.setPosition(c), d(r, 0), r.scaleX = r.scaleY = s * u, r.markRedraw()), i && (i.setPosition(h), d(i, 1), i.scaleX = i.scaleY = s * u, i.markRedraw()), o && !o.ignore) {
        o.x = o.y = 0, o.originX = o.originY = 0;
        var p = void 0, g = void 0, v = o.__labelDistance, m = v[0] * s, y = v[1] * s, b = u / 2, O = l.tangentAt(b), w = [O[1], -O[0]], x = l.pointAt(b);
        w[1] > 0 && (w[0] = -w[0], w[1] = -w[1]);
        var S = O[0] < 0 ? -1 : 1;
        if (o.__position !== "start" && o.__position !== "end") {
          var _ = -Math.atan2(O[1], O[0]);
          h[0] < c[0] && (_ = Math.PI + _), o.rotation = _;
        }
        var C = void 0;
        switch (o.__position) {
          case "insideStartTop":
          case "insideMiddleTop":
          case "insideEndTop":
          case "middle":
            C = -y, g = "bottom";
            break;
          case "insideStartBottom":
          case "insideMiddleBottom":
          case "insideEndBottom":
            C = y, g = "top";
            break;
          default:
            C = 0, g = "middle";
        }
        switch (o.__position) {
          case "end":
            o.x = f[0] * m + h[0], o.y = f[1] * y + h[1], p = f[0] > 0.8 ? "left" : f[0] < -0.8 ? "right" : "center", g = f[1] > 0.8 ? "top" : f[1] < -0.8 ? "bottom" : "middle";
            break;
          case "start":
            o.x = -f[0] * m + c[0], o.y = -f[1] * y + c[1], p = f[0] > 0.8 ? "right" : f[0] < -0.8 ? "left" : "center", g = f[1] > 0.8 ? "bottom" : f[1] < -0.8 ? "top" : "middle";
            break;
          case "insideStartTop":
          case "insideStart":
          case "insideStartBottom":
            o.x = m * S + c[0], o.y = c[1] + C, p = O[0] < 0 ? "right" : "left", o.originX = -m * S, o.originY = -C;
            break;
          case "insideMiddleTop":
          case "insideMiddle":
          case "insideMiddleBottom":
          case "middle":
            o.x = x[0], o.y = x[1] + C, p = "center", o.originY = -C;
            break;
          case "insideEndTop":
          case "insideEnd":
          case "insideEndBottom":
            o.x = -m * S + h[0], o.y = h[1] + C, p = O[0] >= 0 ? "right" : "left", o.originX = m * S, o.originY = -C;
            break;
        }
        o.scaleX = o.scaleY = s, o.setStyle({
          // Use the user specified text align and baseline first
          verticalAlign: o.__verticalAlign || g,
          align: o.__align || p
        });
      }
    }, e;
  }(Ve)
);
const i$ = pkt;
var o$ = (
  /** @class */
  function() {
    function n(e) {
      this.group = new Ve(), this._LineCtor = e || i$;
    }
    return n.prototype.updateData = function(e) {
      var t = this;
      this._progressiveEls = null;
      var r = this, i = r.group, o = r._lineData;
      r._lineData = e, o || i.removeAll();
      var s = B8(e);
      e.diff(o).add(function(a) {
        t._doAdd(e, a, s);
      }).update(function(a, l) {
        t._doUpdate(o, e, l, a, s);
      }).remove(function(a) {
        i.remove(o.getItemGraphicEl(a));
      }).execute();
    }, n.prototype.updateLayout = function() {
      var e = this._lineData;
      e && e.eachItemGraphicEl(function(t, r) {
        t.updateLayout(e, r);
      }, this);
    }, n.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = B8(e), this._lineData = null, this.group.removeAll();
    }, n.prototype.incrementalUpdate = function(e, t) {
      this._progressiveEls = [];
      function r(a) {
        !a.isGroup && !gkt(a) && (a.incremental = !0, a.ensureState("emphasis").hoverLayer = !0);
      }
      for (var i = e.start; i < e.end; i++) {
        var o = t.getItemLayout(i);
        if (MT(o)) {
          var s = new this._LineCtor(t, i, this._seriesScope);
          s.traverse(r), this.group.add(s), t.setItemGraphicEl(i, s), this._progressiveEls.push(s);
        }
      }
    }, n.prototype.remove = function() {
      this.group.removeAll();
    }, n.prototype.eachRendered = function(e) {
      ih(this._progressiveEls || this.group, e);
    }, n.prototype._doAdd = function(e, t, r) {
      var i = e.getItemLayout(t);
      if (MT(i)) {
        var o = new this._LineCtor(e, t, r);
        e.setItemGraphicEl(t, o), this.group.add(o);
      }
    }, n.prototype._doUpdate = function(e, t, r, i, o) {
      var s = e.getItemGraphicEl(r);
      if (!MT(t.getItemLayout(i))) {
        this.group.remove(s);
        return;
      }
      s ? s.updateData(t, i, o) : s = new this._LineCtor(t, i, o), t.setItemGraphicEl(i, s), this.group.add(s);
    }, n;
  }()
);
function gkt(n) {
  return n.animators && n.animators.length > 0;
}
function B8(n) {
  var e = n.hostModel, t = e.getModel("emphasis");
  return {
    lineStyle: e.getModel("lineStyle").getLineStyle(),
    emphasisLineStyle: t.getModel(["lineStyle"]).getLineStyle(),
    blurLineStyle: e.getModel(["blur", "lineStyle"]).getLineStyle(),
    selectLineStyle: e.getModel(["select", "lineStyle"]).getLineStyle(),
    emphasisDisabled: t.get("disabled"),
    blurScope: t.get("blurScope"),
    focus: t.get("focus"),
    labelStatesModels: kr(e)
  };
}
function V8(n) {
  return isNaN(n[0]) || isNaN(n[1]);
}
function MT(n) {
  return n && !V8(n[0]) && !V8(n[1]);
}
var DT = [], LT = [], IT = [], Ud = $r, RT = Pf, z8 = Math.abs;
function F8(n, e, t) {
  for (var r = n[0], i = n[1], o = n[2], s = 1 / 0, a, l = t * t, u = 0.1, c = 0.1; c <= 0.9; c += 0.1) {
    DT[0] = Ud(r[0], i[0], o[0], c), DT[1] = Ud(r[1], i[1], o[1], c);
    var h = z8(RT(DT, e) - l);
    h < s && (s = h, a = c);
  }
  for (var f = 0; f < 32; f++) {
    var d = a + u;
    LT[0] = Ud(r[0], i[0], o[0], a), LT[1] = Ud(r[1], i[1], o[1], a), IT[0] = Ud(r[0], i[0], o[0], d), IT[1] = Ud(r[1], i[1], o[1], d);
    var h = RT(LT, e) - l;
    if (z8(h) < 0.01)
      break;
    var p = RT(IT, e) - l;
    u /= 2, h < 0 ? p >= 0 ? a = a + u : a = a - u : p >= 0 ? a = a - u : a = a + u;
  }
  return a;
}
function $T(n, e) {
  var t = [], r = g0, i = [[], [], []], o = [[], []], s = [];
  e /= 2, n.eachEdge(function(a, l) {
    var u = a.getLayout(), c = a.getVisual("fromSymbol"), h = a.getVisual("toSymbol");
    u.__original || (u.__original = [Wl(u[0]), Wl(u[1])], u[2] && u.__original.push(Wl(u[2])));
    var f = u.__original;
    if (u[2] != null) {
      if (Di(i[0], f[0]), Di(i[1], f[2]), Di(i[2], f[1]), c && c !== "none") {
        var d = Vm(a.node1), p = F8(i, f[0], d * e);
        r(i[0][0], i[1][0], i[2][0], p, t), i[0][0] = t[3], i[1][0] = t[4], r(i[0][1], i[1][1], i[2][1], p, t), i[0][1] = t[3], i[1][1] = t[4];
      }
      if (h && h !== "none") {
        var d = Vm(a.node2), p = F8(i, f[1], d * e);
        r(i[0][0], i[1][0], i[2][0], p, t), i[1][0] = t[1], i[2][0] = t[2], r(i[0][1], i[1][1], i[2][1], p, t), i[1][1] = t[1], i[2][1] = t[2];
      }
      Di(u[0], i[0]), Di(u[1], i[2]), Di(u[2], i[1]);
    } else {
      if (Di(o[0], f[0]), Di(o[1], f[1]), uf(s, o[1], o[0]), cv(s, s), c && c !== "none") {
        var d = Vm(a.node1);
        Pk(o[0], o[0], s, d * e);
      }
      if (h && h !== "none") {
        var d = Vm(a.node2);
        Pk(o[1], o[1], s, -d * e);
      }
      Di(u[0], o[0]), Di(u[1], o[1]);
    }
  });
}
function Q8(n) {
  return n.type === "view";
}
var vkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r) {
      var i = new Db(), o = new o$(), s = this.group;
      this._controller = new Nb(r.getZr()), this._controllerHost = {
        target: s
      }, s.add(i.group), s.add(o.group), this._symbolDraw = i, this._lineDraw = o, this._firstRender = !0;
    }, e.prototype.render = function(t, r, i) {
      var o = this, s = t.coordinateSystem;
      this._model = t;
      var a = this._symbolDraw, l = this._lineDraw, u = this.group;
      if (Q8(s)) {
        var c = {
          x: s.x,
          y: s.y,
          scaleX: s.scaleX,
          scaleY: s.scaleY
        };
        this._firstRender ? u.attr(c) : kt(u, c, t);
      }
      $T(t.getGraph(), Bm(t));
      var h = t.getData();
      a.updateData(h);
      var f = t.getEdgeData();
      l.updateData(f), this._updateNodeAndLinkScale(), this._updateController(t, r, i), clearTimeout(this._layoutTimeout);
      var d = t.forceLayout, p = t.get(["force", "layoutAnimation"]);
      d && this._startForceLayoutIteration(d, p);
      var g = t.get("layout");
      h.graph.eachNode(function(b) {
        var O = b.dataIndex, w = b.getGraphicEl(), x = b.getModel();
        if (w) {
          w.off("drag").off("dragend");
          var S = x.get("draggable");
          S && w.on("drag", function(C) {
            switch (g) {
              case "force":
                d.warmUp(), !o._layouting && o._startForceLayoutIteration(d, p), d.setFixed(O), h.setItemLayout(O, [w.x, w.y]);
                break;
              case "circular":
                h.setItemLayout(O, [w.x, w.y]), b.setLayout({
                  fixed: !0
                }, !0), r$(t, "symbolSize", b, [C.offsetX, C.offsetY]), o.updateLayout(t);
                break;
              case "none":
              default:
                h.setItemLayout(O, [w.x, w.y]), n$(t.getGraph(), t), o.updateLayout(t);
                break;
            }
          }).on("dragend", function() {
            d && d.setUnfixed(O);
          }), w.setDraggable(S, !!x.get("cursor"));
          var _ = x.get(["emphasis", "focus"]);
          _ === "adjacency" && (Fe(w).focus = b.getAdjacentDataIndices());
        }
      }), h.graph.eachEdge(function(b) {
        var O = b.getGraphicEl(), w = b.getModel().get(["emphasis", "focus"]);
        O && w === "adjacency" && (Fe(O).focus = {
          edge: [b.dataIndex],
          node: [b.node1.dataIndex, b.node2.dataIndex]
        });
      });
      var v = t.get("layout") === "circular" && t.get(["circular", "rotateLabel"]), m = h.getLayout("cx"), y = h.getLayout("cy");
      h.graph.eachNode(function(b) {
        zne(b, v, m, y);
      }), this._firstRender = !1;
    }, e.prototype.dispose = function() {
      this.remove(), this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype._startForceLayoutIteration = function(t, r) {
      var i = this;
      (function o() {
        t.step(function(s) {
          i.updateLayout(i._model), (i._layouting = !s) && (r ? i._layoutTimeout = setTimeout(o, 16) : o());
        });
      })();
    }, e.prototype._updateController = function(t, r, i) {
      var o = this, s = this._controller, a = this._controllerHost, l = this.group;
      if (s.setPointerChecker(function(u, c, h) {
        var f = l.getBoundingRect();
        return f.applyTransform(l.transform), f.contain(c, h) && !SC(u, i, t);
      }), !Q8(t.coordinateSystem)) {
        s.disable();
        return;
      }
      s.enable(t.get("roam")), a.zoomLimit = t.get("scaleLimit"), a.zoom = t.coordinateSystem.getZoom(), s.off("pan").off("zoom").on("pan", function(u) {
        jR(a, u.dx, u.dy), i.dispatchAction({
          seriesId: t.id,
          type: "graphRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        HR(a, u.scale, u.originX, u.originY), i.dispatchAction({
          seriesId: t.id,
          type: "graphRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), o._updateNodeAndLinkScale(), $T(t.getGraph(), Bm(t)), o._lineDraw.updateLayout(), i.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function() {
      var t = this._model, r = t.getData(), i = Bm(t);
      r.eachItemGraphicEl(function(o, s) {
        o && o.setSymbolScale(i);
      });
    }, e.prototype.updateLayout = function(t) {
      $T(t.getGraph(), Bm(t)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
    }, e.prototype.remove = function() {
      clearTimeout(this._layoutTimeout), this._layouting = !1, this._layoutTimeout = null, this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
    }, e.type = "graph", e;
  }(dn)
);
const mkt = vkt;
function Kd(n) {
  return "_EC_" + n;
}
var ykt = (
  /** @class */
  function() {
    function n(e) {
      this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = e || !1;
    }
    return n.prototype.isDirected = function() {
      return this._directed;
    }, n.prototype.addNode = function(e, t) {
      e = e == null ? "" + t : "" + e;
      var r = this._nodesMap;
      if (r[Kd(e)]) {
        process.env.NODE_ENV !== "production" && console.error("Graph nodes have duplicate name or id");
        return;
      }
      var i = new Fh(e, t);
      return i.hostGraph = this, this.nodes.push(i), r[Kd(e)] = i, i;
    }, n.prototype.getNodeByIndex = function(e) {
      var t = this.data.getRawIndex(e);
      return this.nodes[t];
    }, n.prototype.getNodeById = function(e) {
      return this._nodesMap[Kd(e)];
    }, n.prototype.addEdge = function(e, t, r) {
      var i = this._nodesMap, o = this._edgesMap;
      if (Tt(e) && (e = this.nodes[e]), Tt(t) && (t = this.nodes[t]), e instanceof Fh || (e = i[Kd(e)]), t instanceof Fh || (t = i[Kd(t)]), !(!e || !t)) {
        var s = e.id + "-" + t.id, a = new Qne(e, t, r);
        return a.hostGraph = this, this._directed && (e.outEdges.push(a), t.inEdges.push(a)), e.edges.push(a), e !== t && t.edges.push(a), this.edges.push(a), o[s] = a, a;
      }
    }, n.prototype.getEdgeByIndex = function(e) {
      var t = this.edgeData.getRawIndex(e);
      return this.edges[t];
    }, n.prototype.getEdge = function(e, t) {
      e instanceof Fh && (e = e.id), t instanceof Fh && (t = t.id);
      var r = this._edgesMap;
      return this._directed ? r[e + "-" + t] : r[e + "-" + t] || r[t + "-" + e];
    }, n.prototype.eachNode = function(e, t) {
      for (var r = this.nodes, i = r.length, o = 0; o < i; o++)
        r[o].dataIndex >= 0 && e.call(t, r[o], o);
    }, n.prototype.eachEdge = function(e, t) {
      for (var r = this.edges, i = r.length, o = 0; o < i; o++)
        r[o].dataIndex >= 0 && r[o].node1.dataIndex >= 0 && r[o].node2.dataIndex >= 0 && e.call(t, r[o], o);
    }, n.prototype.breadthFirstTraverse = function(e, t, r, i) {
      if (t instanceof Fh || (t = this._nodesMap[Kd(t)]), !!t) {
        for (var o = r === "out" ? "outEdges" : r === "in" ? "inEdges" : "edges", s = 0; s < this.nodes.length; s++)
          this.nodes[s].__visited = !1;
        if (!e.call(i, t, null))
          for (var a = [t]; a.length; )
            for (var l = a.shift(), u = l[o], s = 0; s < u.length; s++) {
              var c = u[s], h = c.node1 === l ? c.node2 : c.node1;
              if (!h.__visited) {
                if (e.call(i, h, l))
                  return;
                a.push(h), h.__visited = !0;
              }
            }
      }
    }, n.prototype.update = function() {
      for (var e = this.data, t = this.edgeData, r = this.nodes, i = this.edges, o = 0, s = r.length; o < s; o++)
        r[o].dataIndex = -1;
      for (var o = 0, s = e.count(); o < s; o++)
        r[e.getRawIndex(o)].dataIndex = o;
      t.filterSelf(function(a) {
        var l = i[t.getRawIndex(a)];
        return l.node1.dataIndex >= 0 && l.node2.dataIndex >= 0;
      });
      for (var o = 0, s = i.length; o < s; o++)
        i[o].dataIndex = -1;
      for (var o = 0, s = t.count(); o < s; o++)
        i[t.getRawIndex(o)].dataIndex = o;
    }, n.prototype.clone = function() {
      for (var e = new n(this._directed), t = this.nodes, r = this.edges, i = 0; i < t.length; i++)
        e.addNode(t[i].id, t[i].dataIndex);
      for (var i = 0; i < r.length; i++) {
        var o = r[i];
        e.addEdge(o.node1.id, o.node2.id, o.dataIndex);
      }
      return e;
    }, n;
  }()
), Fh = (
  /** @class */
  function() {
    function n(e, t) {
      this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = e ?? "", this.dataIndex = t ?? -1;
    }
    return n.prototype.degree = function() {
      return this.edges.length;
    }, n.prototype.inDegree = function() {
      return this.inEdges.length;
    }, n.prototype.outDegree = function() {
      return this.outEdges.length;
    }, n.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostGraph, r = t.data.getItemModel(this.dataIndex);
        return r.getModel(e);
      }
    }, n.prototype.getAdjacentDataIndices = function() {
      for (var e = {
        edge: [],
        node: []
      }, t = 0; t < this.edges.length; t++) {
        var r = this.edges[t];
        r.dataIndex < 0 || (e.edge.push(r.dataIndex), e.node.push(r.node1.dataIndex, r.node2.dataIndex));
      }
      return e;
    }, n.prototype.getTrajectoryDataIndices = function() {
      for (var e = _e(), t = _e(), r = 0; r < this.edges.length; r++) {
        var i = this.edges[r];
        if (!(i.dataIndex < 0)) {
          e.set(i.dataIndex, !0);
          for (var o = [i.node1], s = [i.node2], a = 0; a < o.length; ) {
            var l = o[a];
            a++, t.set(l.dataIndex, !0);
            for (var u = 0; u < l.inEdges.length; u++)
              e.set(l.inEdges[u].dataIndex, !0), o.push(l.inEdges[u].node1);
          }
          for (a = 0; a < s.length; ) {
            var c = s[a];
            a++, t.set(c.dataIndex, !0);
            for (var u = 0; u < c.outEdges.length; u++)
              e.set(c.outEdges[u].dataIndex, !0), s.push(c.outEdges[u].node2);
          }
        }
      }
      return {
        edge: e.keys(),
        node: t.keys()
      };
    }, n;
  }()
), Qne = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.dataIndex = -1, this.node1 = e, this.node2 = t, this.dataIndex = r ?? -1;
    }
    return n.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostGraph, r = t.edgeData.getItemModel(this.dataIndex);
        return r.getModel(e);
      }
    }, n.prototype.getAdjacentDataIndices = function() {
      return {
        edge: [this.dataIndex],
        node: [this.node1.dataIndex, this.node2.dataIndex]
      };
    }, n.prototype.getTrajectoryDataIndices = function() {
      var e = _e(), t = _e();
      e.set(this.dataIndex, !0);
      for (var r = [this.node1], i = [this.node2], o = 0; o < r.length; ) {
        var s = r[o];
        o++, t.set(s.dataIndex, !0);
        for (var a = 0; a < s.inEdges.length; a++)
          e.set(s.inEdges[a].dataIndex, !0), r.push(s.inEdges[a].node1);
      }
      for (o = 0; o < i.length; ) {
        var l = i[o];
        o++, t.set(l.dataIndex, !0);
        for (var a = 0; a < l.outEdges.length; a++)
          e.set(l.outEdges[a].dataIndex, !0), i.push(l.outEdges[a].node2);
      }
      return {
        edge: e.keys(),
        node: t.keys()
      };
    }, n;
  }()
);
function Zne(n, e) {
  return {
    /**
     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.
     */
    getValue: function(t) {
      var r = this[n][e];
      return r.getStore().get(r.getDimensionIndex(t || "value"), this.dataIndex);
    },
    // TODO: TYPE stricter type.
    setVisual: function(t, r) {
      this.dataIndex >= 0 && this[n][e].setItemVisual(this.dataIndex, t, r);
    },
    getVisual: function(t) {
      return this[n][e].getItemVisual(this.dataIndex, t);
    },
    setLayout: function(t, r) {
      this.dataIndex >= 0 && this[n][e].setItemLayout(this.dataIndex, t, r);
    },
    getLayout: function() {
      return this[n][e].getItemLayout(this.dataIndex);
    },
    getGraphicEl: function() {
      return this[n][e].getItemGraphicEl(this.dataIndex);
    },
    getRawIndex: function() {
      return this[n][e].getRawIndex(this.dataIndex);
    }
  };
}
lr(Fh, Zne("hostGraph", "data"));
lr(Qne, Zne("hostGraph", "edgeData"));
function Wne(n, e, t, r, i) {
  for (var o = new ykt(r), s = 0; s < n.length; s++)
    o.addNode(tr(
      // Id, name, dataIndex
      n[s].id,
      n[s].name,
      s
    ), s);
  for (var a = [], l = [], u = 0, s = 0; s < e.length; s++) {
    var c = e[s], h = c.source, f = c.target;
    o.addEdge(h, f, u) && (l.push(c), a.push(tr(dr(c.id, null), h + " > " + f)), u++);
  }
  var d = t.get("coordinateSystem"), p;
  if (d === "cartesian2d" || d === "polar")
    p = yu(n, t);
  else {
    var g = xv.get(d), v = g ? g.dimensions || [] : [];
    ot(v, "value") < 0 && v.concat(["value"]);
    var m = Pb(n, {
      coordDimensions: v,
      encodeDefine: t.getEncode()
    }).dimensions;
    p = new Bi(m, t), p.initData(n);
  }
  var y = new Bi(["value"], t);
  return y.initData(l, a), i && i(p, y), Cne({
    mainData: p,
    struct: o,
    structAttr: "graph",
    datas: {
      node: p,
      edge: y
    },
    datasAttr: {
      node: "data",
      edge: "edgeData"
    }
  }), o.update(), o;
}
var bkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.init = function(t) {
      n.prototype.init.apply(this, arguments);
      var r = this;
      function i() {
        return r._categoriesData;
      }
      this.legendVisualProvider = new $b(i, i), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
    }, e.prototype.mergeOption = function(t) {
      n.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
    }, e.prototype.mergeDefaultAndTheme = function(t) {
      n.prototype.mergeDefaultAndTheme.apply(this, arguments), td(t, "edgeLabel", ["show"]);
    }, e.prototype.getInitialData = function(t, r) {
      var i = t.edges || t.links || [], o = t.data || t.nodes || [], s = this;
      if (o && i) {
        rkt(this);
        var a = Wne(o, i, this, !0, l);
        return I(a.edges, function(u) {
          ikt(u.node1, u.node2, this, u.dataIndex);
        }, this), a.data;
      }
      function l(u, c) {
        u.wrapMethod("getItemModel", function(p) {
          var g = s._categoriesModels, v = p.getShallow("category"), m = g[v];
          return m && (m.parentModel = p.parentModel, p.parentModel = m), p;
        });
        var h = fn.prototype.getModel;
        function f(p, g) {
          var v = h.call(this, p, g);
          return v.resolveParentPath = d, v;
        }
        c.wrapMethod("getItemModel", function(p) {
          return p.resolveParentPath = d, p.getModel = f, p;
        });
        function d(p) {
          if (p && (p[0] === "label" || p[1] === "label")) {
            var g = p.slice();
            return p[0] === "label" ? g[0] = "edgeLabel" : p[1] === "label" && (g[1] = "edgeLabel"), g;
          }
          return p;
        }
      }
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.getCategoriesData = function() {
      return this._categoriesData;
    }, e.prototype.formatTooltip = function(t, r, i) {
      if (i === "edge") {
        var o = this.getData(), s = this.getDataParams(t, i), a = o.graph.getEdgeByIndex(t), l = o.getName(a.node1.dataIndex), u = o.getName(a.node2.dataIndex), c = [];
        return l != null && c.push(l), u != null && c.push(u), Mr("nameValue", {
          name: c.join(" > "),
          value: s.value,
          noValue: s.value == null
        });
      }
      var h = fee({
        series: this,
        dataIndex: t,
        multipleSeries: r
      });
      return h;
    }, e.prototype._updateCategoriesData = function() {
      var t = ae(this.option.categories || [], function(i) {
        return i.value != null ? i : te({
          value: 0
        }, i);
      }), r = new Bi(["value"], this);
      r.initData(t), this._categoriesData = r, this._categoriesModels = r.mapArray(function(i) {
        return r.getItemModel(i);
      });
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.isAnimationEnabled = function() {
      return n.prototype.isAnimationEnabled.call(this) && !(this.get("layout") === "force" && this.get(["force", "layoutAnimation"]));
    }, e.type = "series.graph", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // Default option for all coordinate systems
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // polarIndex: 0,
      // geoIndex: 0,
      legendHoverLink: !0,
      layout: null,
      // Configuration of circular layout
      circular: {
        rotateLabel: !1
      },
      // Configuration of force directed layout
      force: {
        initLayout: null,
        // Node repulsion. Can be an array to represent range.
        repulsion: [0, 50],
        gravity: 0.1,
        // Initial friction
        friction: 0.6,
        // Edge length. Can be an array to represent range.
        edgeLength: 30,
        layoutAnimation: !0
      },
      left: "center",
      top: "center",
      // right: null,
      // bottom: null,
      // width: '80%',
      // height: '80%',
      symbol: "circle",
      symbolSize: 10,
      edgeSymbol: ["none", "none"],
      edgeSymbolSize: 10,
      edgeLabel: {
        position: "middle",
        distance: 5
      },
      draggable: !1,
      roam: !1,
      // Default on center of graph
      center: null,
      zoom: 1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.6,
      // cursor: null,
      // categories: [],
      // data: []
      // Or
      // nodes: []
      //
      // links: []
      // Or
      // edges: []
      label: {
        show: !1,
        formatter: "{b}"
      },
      itemStyle: {},
      lineStyle: {
        color: "#aaa",
        width: 1,
        opacity: 0.5
      },
      emphasis: {
        scale: !0,
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Sn)
);
const Okt = bkt;
var wkt = {
  type: "graphRoam",
  event: "graphRoam",
  update: "none"
};
function xkt(n) {
  n.registerChartView(mkt), n.registerSeriesModel(Okt), n.registerProcessor(KEt), n.registerVisual(JEt), n.registerVisual(ekt), n.registerLayout(okt), n.registerLayout(n.PRIORITY.VISUAL.POST_CHART_LAYOUT, akt), n.registerLayout(ukt), n.registerCoordinateSystem("graphView", {
    dimensions: Bb.dimensions,
    create: hkt
  }), n.registerAction({
    type: "focusNodeAdjacency",
    event: "focusNodeAdjacency",
    update: "series:focusNodeAdjacency"
  }, qn), n.registerAction({
    type: "unfocusNodeAdjacency",
    event: "unfocusNodeAdjacency",
    update: "series:unfocusNodeAdjacency"
  }, qn), n.registerAction(wkt, function(e, t, r) {
    t.eachComponent({
      mainType: "series",
      query: e
    }, function(i) {
      var o = i.coordinateSystem, s = YR(o, e, void 0, r);
      i.setCenter && i.setCenter(s.center), i.setZoom && i.setZoom(s.zoom);
    });
  });
}
var Skt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
    }
    return n;
  }()
), _kt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "pointer", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new Skt();
    }, e.prototype.buildPath = function(t, r) {
      var i = Math.cos, o = Math.sin, s = r.r, a = r.width, l = r.angle, u = r.x - i(l) * a * (a >= s / 3 ? 1 : 2), c = r.y - o(l) * a * (a >= s / 3 ? 1 : 2);
      l = r.angle - Math.PI / 2, t.moveTo(u, c), t.lineTo(r.x + i(l) * a, r.y + o(l) * a), t.lineTo(r.x + i(r.angle) * s, r.y + o(r.angle) * s), t.lineTo(r.x - i(l) * a, r.y - o(l) * a), t.lineTo(u, c);
    }, e;
  }(ct)
);
function Ckt(n, e) {
  var t = n.get("center"), r = e.getWidth(), i = e.getHeight(), o = Math.min(r, i), s = fe(t[0], e.getWidth()), a = fe(t[1], e.getHeight()), l = fe(n.get("radius"), o / 2);
  return {
    cx: s,
    cy: a,
    r: l
  };
}
function CO(n, e) {
  var t = n == null ? "" : n + "";
  return e && (be(e) ? t = e.replace("{value}", t) : Pe(e) && (t = e(n))), t;
}
var Akt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      this.group.removeAll();
      var o = t.get(["axisLine", "lineStyle", "color"]), s = Ckt(t, i);
      this._renderMain(t, r, i, o, s), this._data = t.getData();
    }, e.prototype.dispose = function() {
    }, e.prototype._renderMain = function(t, r, i, o, s) {
      var a = this.group, l = t.get("clockwise"), u = -t.get("startAngle") / 180 * Math.PI, c = -t.get("endAngle") / 180 * Math.PI, h = t.getModel("axisLine"), f = h.get("roundCap"), d = f ? pS : go, p = h.get("show"), g = h.getModel("lineStyle"), v = g.get("width"), m = [u, c];
      jI(m, !l), u = m[0], c = m[1];
      for (var y = c - u, b = u, O = [], w = 0; p && w < o.length; w++) {
        var x = Math.min(Math.max(o[w][0], 0), 1);
        c = u + y * x;
        var S = new d({
          shape: {
            startAngle: b,
            endAngle: c,
            cx: s.cx,
            cy: s.cy,
            clockwise: l,
            r0: s.r - v,
            r: s.r
          },
          silent: !0
        });
        S.setStyle({
          fill: o[w][1]
        }), S.setStyle(g.getLineStyle(
          // Because we use sector to simulate arc
          // so the properties for stroking are useless
          ["color", "width"]
        )), O.push(S), b = c;
      }
      O.reverse(), I(O, function(C) {
        return a.add(C);
      });
      var _ = function(C) {
        if (C <= 0)
          return o[0][1];
        var A;
        for (A = 0; A < o.length; A++)
          if (o[A][0] >= C && (A === 0 ? 0 : o[A - 1][0]) < C)
            return o[A][1];
        return o[A - 1][1];
      };
      this._renderTicks(t, r, i, _, s, u, c, l, v), this._renderTitleAndDetail(t, r, i, _, s), this._renderAnchor(t, s), this._renderPointer(t, r, i, _, s, u, c, l, v);
    }, e.prototype._renderTicks = function(t, r, i, o, s, a, l, u, c) {
      for (var h = this.group, f = s.cx, d = s.cy, p = s.r, g = +t.get("min"), v = +t.get("max"), m = t.getModel("splitLine"), y = t.getModel("axisTick"), b = t.getModel("axisLabel"), O = t.get("splitNumber"), w = y.get("splitNumber"), x = fe(m.get("length"), p), S = fe(y.get("length"), p), _ = a, C = (l - a) / O, A = C / w, T = m.getModel("lineStyle").getLineStyle(), k = y.getModel("lineStyle").getLineStyle(), L = m.get("distance"), D, E, M = 0; M <= O; M++) {
        if (D = Math.cos(_), E = Math.sin(_), m.get("show")) {
          var R = L ? L + c : c, N = new Ar({
            shape: {
              x1: D * (p - R) + f,
              y1: E * (p - R) + d,
              x2: D * (p - x - R) + f,
              y2: E * (p - x - R) + d
            },
            style: T,
            silent: !0
          });
          T.stroke === "auto" && N.setStyle({
            stroke: o(M / O)
          }), h.add(N);
        }
        if (b.get("show")) {
          var R = b.get("distance") + L, $ = CO(zn(M / O * (v - g) + g), b.get("formatter")), V = o(M / O), H = D * (p - x - R) + f, G = E * (p - x - R) + d, q = b.get("rotate"), Y = 0;
          q === "radial" ? (Y = -_ + 2 * Math.PI, Y > Math.PI / 2 && (Y += Math.PI)) : q === "tangential" ? Y = -_ - Math.PI / 2 : Tt(q) && (Y = q * Math.PI / 180), Y === 0 ? h.add(new At({
            style: hn(b, {
              text: $,
              x: H,
              y: G,
              verticalAlign: E < -0.8 ? "top" : E > 0.8 ? "bottom" : "middle",
              align: D < -0.4 ? "left" : D > 0.4 ? "right" : "center"
            }, {
              inheritColor: V
            }),
            silent: !0
          })) : h.add(new At({
            style: hn(b, {
              text: $,
              x: H,
              y: G,
              verticalAlign: "middle",
              align: "center"
            }, {
              inheritColor: V
            }),
            silent: !0,
            originX: H,
            originY: G,
            rotation: Y
          }));
        }
        if (y.get("show") && M !== O) {
          var R = y.get("distance");
          R = R ? R + c : c;
          for (var ie = 0; ie <= w; ie++) {
            D = Math.cos(_), E = Math.sin(_);
            var se = new Ar({
              shape: {
                x1: D * (p - R) + f,
                y1: E * (p - R) + d,
                x2: D * (p - S - R) + f,
                y2: E * (p - S - R) + d
              },
              silent: !0,
              style: k
            });
            k.stroke === "auto" && se.setStyle({
              stroke: o((M + ie / w) / O)
            }), h.add(se), _ += A;
          }
          _ -= A;
        } else
          _ += C;
      }
    }, e.prototype._renderPointer = function(t, r, i, o, s, a, l, u, c) {
      var h = this.group, f = this._data, d = this._progressEls, p = [], g = t.get(["pointer", "show"]), v = t.getModel("progress"), m = v.get("show"), y = t.getData(), b = y.mapDimension("value"), O = +t.get("min"), w = +t.get("max"), x = [O, w], S = [a, l];
      function _(A, T) {
        var k = y.getItemModel(A), L = k.getModel("pointer"), D = fe(L.get("width"), s.r), E = fe(L.get("length"), s.r), M = t.get(["pointer", "icon"]), R = L.get("offsetCenter"), N = fe(R[0], s.r), $ = fe(R[1], s.r), V = L.get("keepAspect"), H;
        return M ? H = ar(M, N - D / 2, $ - E, D, E, null, V) : H = new _kt({
          shape: {
            angle: -Math.PI / 2,
            width: D,
            r: E,
            x: N,
            y: $
          }
        }), H.rotation = -(T + Math.PI / 2), H.x = s.cx, H.y = s.cy, H;
      }
      function C(A, T) {
        var k = v.get("roundCap"), L = k ? pS : go, D = v.get("overlap"), E = D ? v.get("width") : c / y.count(), M = D ? s.r - E : s.r - (A + 1) * E, R = D ? s.r : s.r - A * E, N = new L({
          shape: {
            startAngle: a,
            endAngle: T,
            cx: s.cx,
            cy: s.cy,
            clockwise: u,
            r0: M,
            r: R
          }
        });
        return D && (N.z2 = w - y.get(b, A) % w), N;
      }
      (m || g) && (y.diff(f).add(function(A) {
        var T = y.get(b, A);
        if (g) {
          var k = _(A, a);
          vn(k, {
            rotation: -((isNaN(+T) ? S[0] : Ft(T, x, S, !0)) + Math.PI / 2)
          }, t), h.add(k), y.setItemGraphicEl(A, k);
        }
        if (m) {
          var L = C(A, a), D = v.get("clip");
          vn(L, {
            shape: {
              endAngle: Ft(T, x, S, D)
            }
          }, t), h.add(L), nM(t.seriesIndex, y.dataType, A, L), p[A] = L;
        }
      }).update(function(A, T) {
        var k = y.get(b, A);
        if (g) {
          var L = f.getItemGraphicEl(T), D = L ? L.rotation : a, E = _(A, D);
          E.rotation = D, kt(E, {
            rotation: -((isNaN(+k) ? S[0] : Ft(k, x, S, !0)) + Math.PI / 2)
          }, t), h.add(E), y.setItemGraphicEl(A, E);
        }
        if (m) {
          var M = d[T], R = M ? M.shape.endAngle : a, N = C(A, R), $ = v.get("clip");
          kt(N, {
            shape: {
              endAngle: Ft(k, x, S, $)
            }
          }, t), h.add(N), nM(t.seriesIndex, y.dataType, A, N), p[A] = N;
        }
      }).execute(), y.each(function(A) {
        var T = y.getItemModel(A), k = T.getModel("emphasis"), L = k.get("focus"), D = k.get("blurScope"), E = k.get("disabled");
        if (g) {
          var M = y.getItemGraphicEl(A), R = y.getItemVisual(A, "style"), N = R.fill;
          if (M instanceof fi) {
            var $ = M.style;
            M.useStyle(te({
              image: $.image,
              x: $.x,
              y: $.y,
              width: $.width,
              height: $.height
            }, R));
          } else
            M.useStyle(R), M.type !== "pointer" && M.setColor(N);
          M.setStyle(T.getModel(["pointer", "itemStyle"]).getItemStyle()), M.style.fill === "auto" && M.setStyle("fill", o(Ft(y.get(b, A), x, [0, 1], !0))), M.z2EmphasisLift = 0, ui(M, T), $n(M, L, D, E);
        }
        if (m) {
          var V = p[A];
          V.useStyle(y.getItemVisual(A, "style")), V.setStyle(T.getModel(["progress", "itemStyle"]).getItemStyle()), V.z2EmphasisLift = 0, ui(V, T), $n(V, L, D, E);
        }
      }), this._progressEls = p);
    }, e.prototype._renderAnchor = function(t, r) {
      var i = t.getModel("anchor"), o = i.get("show");
      if (o) {
        var s = i.get("size"), a = i.get("icon"), l = i.get("offsetCenter"), u = i.get("keepAspect"), c = ar(a, r.cx - s / 2 + fe(l[0], r.r), r.cy - s / 2 + fe(l[1], r.r), s, s, null, u);
        c.z2 = i.get("showAbove") ? 1 : 0, c.setStyle(i.getModel("itemStyle").getItemStyle()), this.group.add(c);
      }
    }, e.prototype._renderTitleAndDetail = function(t, r, i, o, s) {
      var a = this, l = t.getData(), u = l.mapDimension("value"), c = +t.get("min"), h = +t.get("max"), f = new Ve(), d = [], p = [], g = t.isAnimationEnabled(), v = t.get(["pointer", "showAbove"]);
      l.diff(this._data).add(function(m) {
        d[m] = new At({
          silent: !0
        }), p[m] = new At({
          silent: !0
        });
      }).update(function(m, y) {
        d[m] = a._titleEls[y], p[m] = a._detailEls[y];
      }).execute(), l.each(function(m) {
        var y = l.getItemModel(m), b = l.get(u, m), O = new Ve(), w = o(Ft(b, [c, h], [0, 1], !0)), x = y.getModel("title");
        if (x.get("show")) {
          var S = x.get("offsetCenter"), _ = s.cx + fe(S[0], s.r), C = s.cy + fe(S[1], s.r), A = d[m];
          A.attr({
            z2: v ? 0 : 2,
            style: hn(x, {
              x: _,
              y: C,
              text: l.getName(m),
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: w
            })
          }), O.add(A);
        }
        var T = y.getModel("detail");
        if (T.get("show")) {
          var k = T.get("offsetCenter"), L = s.cx + fe(k[0], s.r), D = s.cy + fe(k[1], s.r), E = fe(T.get("width"), s.r), M = fe(T.get("height"), s.r), R = t.get(["progress", "show"]) ? l.getItemVisual(m, "style").fill : w, A = p[m], N = T.get("formatter");
          A.attr({
            z2: v ? 0 : 2,
            style: hn(T, {
              x: L,
              y: D,
              text: CO(b, N),
              width: isNaN(E) ? null : E,
              height: isNaN(M) ? null : M,
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: R
            })
          }), mJ(A, {
            normal: T
          }, b, function(V) {
            return CO(V, N);
          }), g && yJ(A, m, l, t, {
            getFormattedLabel: function(V, H, G, q, Y, ie) {
              return CO(ie ? ie.interpolatedValue : b, N);
            }
          }), O.add(A);
        }
        f.add(O);
      }), this.group.add(f), this._titleEls = d, this._detailEls = p;
    }, e.type = "gauge", e;
  }(dn)
);
const Tkt = Akt;
var Pkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "itemStyle", t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return Av(this, ["value"]);
    }, e.type = "series.gauge", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      legendHoverLink: !0,
      radius: "75%",
      startAngle: 225,
      endAngle: -45,
      clockwise: !0,
      // 最小值
      min: 0,
      // 最大值
      max: 100,
      // 分割段数，默认为10
      splitNumber: 10,
      // 坐标轴线
      axisLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        roundCap: !1,
        lineStyle: {
          color: [[1, "#E6EBF8"]],
          width: 10
        }
      },
      // 坐标轴线
      progress: {
        // 默认显示，属性show控制显示与否
        show: !1,
        overlap: !0,
        width: 10,
        roundCap: !1,
        clip: !0
      },
      // 分隔线
      splitLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        // 属性length控制线长
        length: 10,
        distance: 10,
        // 属性lineStyle（详见lineStyle）控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 3,
          type: "solid"
        }
      },
      // 坐标轴小标记
      axisTick: {
        // 属性show控制显示与否，默认不显示
        show: !0,
        // 每份split细分多少段
        splitNumber: 5,
        // 属性length控制线长
        length: 6,
        distance: 10,
        // 属性lineStyle控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 1,
          type: "solid"
        }
      },
      axisLabel: {
        show: !0,
        distance: 15,
        // formatter: null,
        color: "#464646",
        fontSize: 12,
        rotate: 0
      },
      pointer: {
        icon: null,
        offsetCenter: [0, 0],
        show: !0,
        showAbove: !0,
        length: "60%",
        width: 6,
        keepAspect: !1
      },
      anchor: {
        show: !1,
        showAbove: !1,
        size: 6,
        icon: "circle",
        offsetCenter: [0, 0],
        keepAspect: !1,
        itemStyle: {
          color: "#fff",
          borderWidth: 0,
          borderColor: "#5470c6"
        }
      },
      title: {
        show: !0,
        // x, y，单位px
        offsetCenter: [0, "20%"],
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 16,
        valueAnimation: !1
      },
      detail: {
        show: !0,
        backgroundColor: "rgba(0,0,0,0)",
        borderWidth: 0,
        borderColor: "#ccc",
        width: 100,
        height: null,
        padding: [5, 10],
        // x, y，单位px
        offsetCenter: [0, "40%"],
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 30,
        fontWeight: "bold",
        lineHeight: 30,
        valueAnimation: !1
      }
    }, e;
  }(Sn)
);
const Ekt = Pkt;
function kkt(n) {
  n.registerChartView(Tkt), n.registerSeriesModel(Ekt);
}
var Mkt = ["itemStyle", "opacity"], Dkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r) {
      var i = n.call(this) || this, o = i, s = new Gi(), a = new At();
      return o.setTextContent(a), i.setTextGuideLine(s), i.updateData(t, r, !0), i;
    }
    return e.prototype.updateData = function(t, r, i) {
      var o = this, s = t.hostModel, a = t.getItemModel(r), l = t.getItemLayout(r), u = a.getModel("emphasis"), c = a.get(Mkt);
      c = c ?? 1, i || ua(o), o.useStyle(t.getItemVisual(r, "style")), o.style.lineJoin = "round", i ? (o.setShape({
        points: l.points
      }), o.style.opacity = 0, vn(o, {
        style: {
          opacity: c
        }
      }, s, r)) : kt(o, {
        style: {
          opacity: c
        },
        shape: {
          points: l.points
        }
      }, s, r), ui(o, a), this._updateLabel(t, r), $n(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t, r) {
      var i = this, o = this.getTextGuideLine(), s = i.getTextContent(), a = t.hostModel, l = t.getItemModel(r), u = t.getItemLayout(r), c = u.label, h = t.getItemVisual(r, "style"), f = h.fill;
      ci(
        // position will not be used in setLabelStyle
        s,
        kr(l),
        {
          labelFetcher: t.hostModel,
          labelDataIndex: r,
          defaultOpacity: h.opacity,
          defaultText: t.getName(r)
        },
        {
          normal: {
            align: c.textAlign,
            verticalAlign: c.verticalAlign
          }
        }
      ), i.setTextConfig({
        local: !0,
        inside: !!c.inside,
        insideStroke: f,
        // insideFill: 'auto',
        outsideFill: f
      });
      var d = c.linePoints;
      o.setShape({
        points: d
      }), i.textGuideLineConfig = {
        anchor: d ? new Xe(d[0][0], d[0][1]) : null
      }, kt(s, {
        style: {
          x: c.x,
          y: c.y
        }
      }, a, r), s.attr({
        rotation: c.rotation,
        originX: c.x,
        originY: c.y,
        z2: 10
      }), $R(i, NR(l), {
        // Default use item visual color
        stroke: f
      });
    }, e;
  }(Zi)
), Lkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.ignoreLabelLineUpdate = !0, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this._data, a = this.group;
      o.diff(s).add(function(l) {
        var u = new Dkt(o, l);
        o.setItemGraphicEl(l, u), a.add(u);
      }).update(function(l, u) {
        var c = s.getItemGraphicEl(u);
        c.updateData(o, l), a.add(c), o.setItemGraphicEl(l, c);
      }).remove(function(l) {
        var u = s.getItemGraphicEl(l);
        w0(u, t, l);
      }).execute(), this._data = o;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.prototype.dispose = function() {
    }, e.type = "funnel", e;
  }(dn)
);
const Ikt = Lkt;
var Rkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t) {
      n.prototype.init.apply(this, arguments), this.legendVisualProvider = new $b(Oe(this.getData, this), Oe(this.getRawData, this)), this._defaultLabelLine(t);
    }, e.prototype.getInitialData = function(t, r) {
      return Av(this, {
        coordDimensions: ["value"],
        encodeDefaulter: je(hR, this)
      });
    }, e.prototype._defaultLabelLine = function(t) {
      td(t, "labelLine", ["show"]);
      var r = t.labelLine, i = t.emphasis.labelLine;
      r.show = r.show && t.label.show, i.show = i.show && t.emphasis.label.show;
    }, e.prototype.getDataParams = function(t) {
      var r = this.getData(), i = n.prototype.getDataParams.call(this, t), o = r.mapDimension("value"), s = r.getSum(o);
      return i.percent = s ? +(r.get(o, t) / s * 100).toFixed(2) : 0, i.$vars.push("percent"), i;
    }, e.type = "series.funnel", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      // 默认取数据最小最大值
      // min: 0,
      // max: 100,
      minSize: "0%",
      maxSize: "100%",
      sort: "descending",
      orient: "vertical",
      gap: 0,
      funnelAlign: "center",
      label: {
        show: !0,
        position: "outer"
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      labelLine: {
        show: !0,
        length: 20,
        lineStyle: {
          // color: 各异,
          width: 1
        }
      },
      itemStyle: {
        // color: 各异,
        borderColor: "#fff",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Sn)
);
const $kt = Rkt;
function Nkt(n, e) {
  return mr(n.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function Bkt(n, e) {
  for (var t = n.mapDimension("value"), r = n.mapArray(t, function(l) {
    return l;
  }), i = [], o = e === "ascending", s = 0, a = n.count(); s < a; s++)
    i[s] = s;
  return Pe(e) ? i.sort(e) : e !== "none" && i.sort(function(l, u) {
    return o ? r[l] - r[u] : r[u] - r[l];
  }), i;
}
function Vkt(n) {
  var e = n.hostModel, t = e.get("orient");
  n.each(function(r) {
    var i = n.getItemModel(r), o = i.getModel("label"), s = o.get("position"), a = i.getModel("labelLine"), l = n.getItemLayout(r), u = l.points, c = s === "inner" || s === "inside" || s === "center" || s === "insideLeft" || s === "insideRight", h, f, d, p;
    if (c)
      s === "insideLeft" ? (f = (u[0][0] + u[3][0]) / 2 + 5, d = (u[0][1] + u[3][1]) / 2, h = "left") : s === "insideRight" ? (f = (u[1][0] + u[2][0]) / 2 - 5, d = (u[1][1] + u[2][1]) / 2, h = "right") : (f = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4, d = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4, h = "center"), p = [[f, d], [f, d]];
    else {
      var g = void 0, v = void 0, m = void 0, y = void 0, b = a.get("length");
      process.env.NODE_ENV !== "production" && (t === "vertical" && ["top", "bottom"].indexOf(s) > -1 && (s = "left", console.warn("Position error: Funnel chart on vertical orient dose not support top and bottom.")), t === "horizontal" && ["left", "right"].indexOf(s) > -1 && (s = "bottom", console.warn("Position error: Funnel chart on horizontal orient dose not support left and right."))), s === "left" ? (g = (u[3][0] + u[0][0]) / 2, v = (u[3][1] + u[0][1]) / 2, m = g - b, f = m - 5, h = "right") : s === "right" ? (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, m = g + b, f = m + 5, h = "left") : s === "top" ? (g = (u[3][0] + u[0][0]) / 2, v = (u[3][1] + u[0][1]) / 2, y = v - b, d = y - 5, h = "center") : s === "bottom" ? (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, y = v + b, d = y + 5, h = "center") : s === "rightTop" ? (g = t === "horizontal" ? u[3][0] : u[1][0], v = t === "horizontal" ? u[3][1] : u[1][1], t === "horizontal" ? (y = v - b, d = y - 5, h = "center") : (m = g + b, f = m + 5, h = "top")) : s === "rightBottom" ? (g = u[2][0], v = u[2][1], t === "horizontal" ? (y = v + b, d = y + 5, h = "center") : (m = g + b, f = m + 5, h = "bottom")) : s === "leftTop" ? (g = u[0][0], v = t === "horizontal" ? u[0][1] : u[1][1], t === "horizontal" ? (y = v - b, d = y - 5, h = "center") : (m = g - b, f = m - 5, h = "right")) : s === "leftBottom" ? (g = t === "horizontal" ? u[1][0] : u[3][0], v = t === "horizontal" ? u[1][1] : u[2][1], t === "horizontal" ? (y = v + b, d = y + 5, h = "center") : (m = g - b, f = m - 5, h = "right")) : (g = (u[1][0] + u[2][0]) / 2, v = (u[1][1] + u[2][1]) / 2, t === "horizontal" ? (y = v + b, d = y + 5, h = "center") : (m = g + b, f = m + 5, h = "left")), t === "horizontal" ? (m = g, f = m) : (y = v, d = y), p = [[g, v], [m, y]];
    }
    l.label = {
      linePoints: p,
      x: f,
      y: d,
      verticalAlign: "middle",
      textAlign: h,
      inside: c
    };
  });
}
function zkt(n, e) {
  n.eachSeriesByType("funnel", function(t) {
    var r = t.getData(), i = r.mapDimension("value"), o = t.get("sort"), s = Nkt(t, e), a = t.get("orient"), l = s.width, u = s.height, c = Bkt(r, o), h = s.x, f = s.y, d = a === "horizontal" ? [fe(t.get("minSize"), u), fe(t.get("maxSize"), u)] : [fe(t.get("minSize"), l), fe(t.get("maxSize"), l)], p = r.getDataExtent(i), g = t.get("min"), v = t.get("max");
    g == null && (g = Math.min(p[0], 0)), v == null && (v = p[1]);
    var m = t.get("funnelAlign"), y = t.get("gap"), b = a === "horizontal" ? l : u, O = (b - y * (r.count() - 1)) / r.count(), w = function(D, E) {
      if (a === "horizontal") {
        var M = r.get(i, D) || 0, R = Ft(M, [g, v], d, !0), N = void 0;
        switch (m) {
          case "top":
            N = f;
            break;
          case "center":
            N = f + (u - R) / 2;
            break;
          case "bottom":
            N = f + (u - R);
            break;
        }
        return [[E, N], [E, N + R]];
      }
      var $ = r.get(i, D) || 0, V = Ft($, [g, v], d, !0), H;
      switch (m) {
        case "left":
          H = h;
          break;
        case "center":
          H = h + (l - V) / 2;
          break;
        case "right":
          H = h + l - V;
          break;
      }
      return [[H, E], [H + V, E]];
    };
    o === "ascending" && (O = -O, y = -y, a === "horizontal" ? h += l : f += u, c = c.reverse());
    for (var x = 0; x < c.length; x++) {
      var S = c[x], _ = c[x + 1], C = r.getItemModel(S);
      if (a === "horizontal") {
        var A = C.get(["itemStyle", "width"]);
        A == null ? A = O : (A = fe(A, l), o === "ascending" && (A = -A));
        var T = w(S, h), k = w(_, h + A);
        h += A + y, r.setItemLayout(S, {
          points: T.concat(k.slice().reverse())
        });
      } else {
        var L = C.get(["itemStyle", "height"]);
        L == null ? L = O : (L = fe(L, u), o === "ascending" && (L = -L));
        var T = w(S, f), k = w(_, f + L);
        f += L + y, r.setItemLayout(S, {
          points: T.concat(k.slice().reverse())
        });
      }
    }
    Vkt(r);
  });
}
function Fkt(n) {
  n.registerChartView(Ikt), n.registerSeriesModel($kt), n.registerLayout(zkt), n.registerProcessor(Rb("funnel"));
}
var Qkt = 0.3, Zkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._dataGroup = new Ve(), t._initialized = !1, t;
    }
    return e.prototype.init = function() {
      this.group.add(this._dataGroup);
    }, e.prototype.render = function(t, r, i, o) {
      this._progressiveEls = null;
      var s = this._dataGroup, a = t.getData(), l = this._data, u = t.coordinateSystem, c = u.dimensions, h = W8(t);
      a.diff(l).add(f).update(d).remove(p).execute();
      function f(v) {
        var m = Z8(a, s, v, c, u);
        NT(m, a, v, h);
      }
      function d(v, m) {
        var y = l.getItemGraphicEl(m), b = Gne(a, v, c, u);
        a.setItemGraphicEl(v, y), kt(y, {
          shape: {
            points: b
          }
        }, t, v), ua(y), NT(y, a, v, h);
      }
      function p(v) {
        var m = l.getItemGraphicEl(v);
        s.remove(m);
      }
      if (!this._initialized) {
        this._initialized = !0;
        var g = Wkt(u, t, function() {
          setTimeout(function() {
            s.removeClipPath();
          });
        });
        s.setClipPath(g);
      }
      this._data = a;
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      this._initialized = !0, this._data = null, this._dataGroup.removeAll();
    }, e.prototype.incrementalRender = function(t, r, i) {
      for (var o = r.getData(), s = r.coordinateSystem, a = s.dimensions, l = W8(r), u = this._progressiveEls = [], c = t.start; c < t.end; c++) {
        var h = Z8(o, this._dataGroup, c, a, s);
        h.incremental = !0, NT(h, o, c, l), u.push(h);
      }
    }, e.prototype.remove = function() {
      this._dataGroup && this._dataGroup.removeAll(), this._data = null;
    }, e.type = "parallel", e;
  }(dn)
);
function Wkt(n, e, t) {
  var r = n.model, i = n.getRect(), o = new _t({
    shape: {
      x: i.x,
      y: i.y,
      width: i.width,
      height: i.height
    }
  }), s = r.get("layout") === "horizontal" ? "width" : "height";
  return o.setShape(s, 0), vn(o, {
    shape: {
      width: i.width,
      height: i.height
    }
  }, e, t), o;
}
function Gne(n, e, t, r) {
  for (var i = [], o = 0; o < t.length; o++) {
    var s = t[o], a = n.get(n.mapDimension(s), e);
    Gkt(a, r.getAxis(s).type) || i.push(r.dataToPoint(a, s));
  }
  return i;
}
function Z8(n, e, t, r, i) {
  var o = Gne(n, t, r, i), s = new Gi({
    shape: {
      points: o
    },
    // silent: true,
    z2: 10
  });
  return e.add(s), n.setItemGraphicEl(t, s), s;
}
function W8(n) {
  var e = n.get("smooth", !0);
  return e === !0 && (e = Qkt), e = ou(e), ed(e) && (e = 0), {
    smooth: e
  };
}
function NT(n, e, t, r) {
  n.useStyle(e.getItemVisual(t, "style")), n.style.fill = null, n.setShape("smooth", r.smooth);
  var i = e.getItemModel(t), o = i.getModel("emphasis");
  ui(n, i, "lineStyle"), $n(n, o.get("focus"), o.get("blurScope"), o.get("disabled"));
}
function Gkt(n, e) {
  return e === "category" ? n == null : n == null || isNaN(n);
}
const jkt = Zkt;
var Hkt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return yu(null, this, {
        useEncodeDefaulter: Oe(qkt, null, this)
      });
    }, e.prototype.getRawIndicesByActiveState = function(t) {
      var r = this.coordinateSystem, i = this.getData(), o = [];
      return r.eachActiveState(i, function(s, a) {
        t === s && o.push(i.getRawIndex(a));
      }), o;
    }, e.type = "series.parallel", e.dependencies = ["parallel"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "parallel",
      parallelIndex: 0,
      label: {
        show: !1
      },
      inactiveOpacity: 0.05,
      activeOpacity: 1,
      lineStyle: {
        width: 1,
        opacity: 0.45,
        type: "solid"
      },
      emphasis: {
        label: {
          show: !1
        }
      },
      progressive: 500,
      smooth: !1,
      animationEasing: "linear"
    }, e;
  }(Sn)
);
function qkt(n) {
  var e = n.ecModel.getComponent("parallel", n.get("parallelIndex"));
  if (e) {
    var t = {};
    return I(e.dimensions, function(r) {
      var i = Ykt(r);
      t[r] = i;
    }), t;
  }
}
function Ykt(n) {
  return +n.replace("dim", "");
}
const Xkt = Hkt;
var Ukt = ["lineStyle", "opacity"], Kkt = {
  seriesType: "parallel",
  reset: function(n, e) {
    var t = n.coordinateSystem, r = {
      normal: n.get(["lineStyle", "opacity"]),
      active: n.get("activeOpacity"),
      inactive: n.get("inactiveOpacity")
    };
    return {
      progress: function(i, o) {
        t.eachActiveState(o, function(s, a) {
          var l = r[s];
          if (s === "normal" && o.hasItemOption) {
            var u = o.getItemModel(a).get(Ukt, !0);
            u != null && (l = u);
          }
          var c = o.ensureUniqueItemVisual(a, "style");
          c.opacity = l;
        }, i.start, i.end);
      }
    };
  }
};
const Jkt = Kkt;
function eMt(n) {
  tMt(n), nMt(n);
}
function tMt(n) {
  if (!n.parallel) {
    var e = !1;
    I(n.series, function(t) {
      t && t.type === "parallel" && (e = !0);
    }), e && (n.parallel = [{}]);
  }
}
function nMt(n) {
  var e = Kt(n.parallelAxis);
  I(e, function(t) {
    if (Me(t)) {
      var r = t.parallelIndex || 0, i = Kt(n.parallel)[r];
      i && i.parallelAxisDefault && Je(t, i.parallelAxisDefault, !1);
    }
  });
}
var rMt = 5, iMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      this._model = t, this._api = i, this._handlers || (this._handlers = {}, I(oMt, function(o, s) {
        i.getZr().on(s, this._handlers[s] = Oe(o, this));
      }, this)), _v(this, "_throttledDispatchExpand", t.get("axisExpandRate"), "fixRate");
    }, e.prototype.dispose = function(t, r) {
      C0(this, "_throttledDispatchExpand"), I(this._handlers, function(i, o) {
        r.getZr().off(o, i);
      }), this._handlers = null;
    }, e.prototype._throttledDispatchExpand = function(t) {
      this._dispatchExpand(t);
    }, e.prototype._dispatchExpand = function(t) {
      t && this._api.dispatchAction(te({
        type: "parallelAxisExpand"
      }, t));
    }, e.type = "parallel", e;
  }(Nn)
), oMt = {
  mousedown: function(n) {
    BT(this, "click") && (this._mouseDownPoint = [n.offsetX, n.offsetY]);
  },
  mouseup: function(n) {
    var e = this._mouseDownPoint;
    if (BT(this, "click") && e) {
      var t = [n.offsetX, n.offsetY], r = Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2);
      if (r > rMt)
        return;
      var i = this._model.coordinateSystem.getSlidedAxisExpandWindow([n.offsetX, n.offsetY]);
      i.behavior !== "none" && this._dispatchExpand({
        axisExpandWindow: i.axisExpandWindow
      });
    }
    this._mouseDownPoint = null;
  },
  mousemove: function(n) {
    if (!(this._mouseDownPoint || !BT(this, "mousemove"))) {
      var e = this._model, t = e.coordinateSystem.getSlidedAxisExpandWindow([n.offsetX, n.offsetY]), r = t.behavior;
      r === "jump" && this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")), this._throttledDispatchExpand(r === "none" ? null : {
        axisExpandWindow: t.axisExpandWindow,
        // Jumping uses animation, and sliding suppresses animation.
        animation: r === "jump" ? null : {
          duration: 0
          // Disable animation.
        }
      });
    }
  }
};
function BT(n, e) {
  var t = n._model;
  return t.get("axisExpandable") && t.get("axisExpandTriggerOn") === e;
}
const sMt = iMt;
var aMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      n.prototype.init.apply(this, arguments), this.mergeOption({});
    }, e.prototype.mergeOption = function(t) {
      var r = this.option;
      t && Je(r, t, !0), this._initDimensions();
    }, e.prototype.contains = function(t, r) {
      var i = t.get("parallelIndex");
      return i != null && r.getComponent("parallel", i) === this;
    }, e.prototype.setAxisExpand = function(t) {
      I(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(r) {
        t.hasOwnProperty(r) && (this.option[r] = t[r]);
      }, this);
    }, e.prototype._initDimensions = function() {
      var t = this.dimensions = [], r = this.parallelAxisIndex = [], i = Gt(this.ecModel.queryComponents({
        mainType: "parallelAxis"
      }), function(o) {
        return (o.get("parallelIndex") || 0) === this.componentIndex;
      }, this);
      I(i, function(o) {
        t.push("dim" + o.get("dim")), r.push(o.componentIndex);
      });
    }, e.type = "parallel", e.dependencies = ["parallelAxis"], e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      layout: "horizontal",
      // FIXME
      // naming?
      axisExpandable: !1,
      axisExpandCenter: null,
      axisExpandCount: 0,
      axisExpandWidth: 50,
      axisExpandRate: 17,
      axisExpandDebounce: 50,
      // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.
      // Do not doc to user until necessary.
      axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
      axisExpandTriggerOn: "click",
      parallelAxisDefault: null
    }, e;
  }(Ot)
);
const lMt = aMt;
var uMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o, s) {
      var a = n.call(this, t, r, i) || this;
      return a.type = o || "value", a.axisIndex = s, a;
    }
    return e.prototype.isHorizontal = function() {
      return this.coordinateSystem.getModel().get("layout") !== "horizontal";
    }, e;
  }(ba)
);
const cMt = uMt;
function _d(n, e, t, r, i, o) {
  n = n || 0;
  var s = t[1] - t[0];
  if (i != null && (i = Jd(i, [0, s])), o != null && (o = Math.max(o, i ?? 0)), r === "all") {
    var a = Math.abs(e[1] - e[0]);
    a = Jd(a, [0, s]), i = o = Jd(a, [i, o]), r = 0;
  }
  e[0] = Jd(e[0], t), e[1] = Jd(e[1], t);
  var l = VT(e, r);
  e[r] += n;
  var u = i || 0, c = t.slice();
  l.sign < 0 ? c[0] += u : c[1] -= u, e[r] = Jd(e[r], c);
  var h;
  return h = VT(e, r), i != null && (h.sign !== l.sign || h.span < i) && (e[1 - r] = e[r] + l.sign * i), h = VT(e, r), o != null && h.span > o && (e[1 - r] = e[r] + h.sign * o), e;
}
function VT(n, e) {
  var t = n[e] - n[1 - e];
  return {
    span: Math.abs(t),
    sign: t > 0 ? -1 : t < 0 ? 1 : e ? -1 : 1
  };
}
function Jd(n, e) {
  return Math.min(e[1] != null ? e[1] : 1 / 0, Math.max(e[0] != null ? e[0] : -1 / 0, n));
}
var zT = I, jne = Math.min, Hne = Math.max, G8 = Math.floor, hMt = Math.ceil, j8 = zn, fMt = Math.PI, dMt = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.type = "parallel", this._axesMap = _e(), this._axesLayout = {}, this.dimensions = e.dimensions, this._model = e, this._init(e, t, r);
    }
    return n.prototype._init = function(e, t, r) {
      var i = e.dimensions, o = e.parallelAxisIndex;
      zT(i, function(s, a) {
        var l = o[a], u = t.getComponent("parallelAxis", l), c = this._axesMap.set(s, new cMt(s, wC(u), [0, 0], u.get("type"), l)), h = c.type === "category";
        c.onBand = h && u.get("boundaryGap"), c.inverse = u.get("inverse"), u.axis = c, c.model = u, c.coordinateSystem = u.coordinateSystem = this;
      }, this);
    }, n.prototype.update = function(e, t) {
      this._updateAxesFromSeries(this._model, e);
    }, n.prototype.containPoint = function(e) {
      var t = this._makeLayoutInfo(), r = t.axisBase, i = t.layoutBase, o = t.pixelDimIndex, s = e[1 - o], a = e[o];
      return s >= r && s <= r + t.axisLength && a >= i && a <= i + t.layoutLength;
    }, n.prototype.getModel = function() {
      return this._model;
    }, n.prototype._updateAxesFromSeries = function(e, t) {
      t.eachSeries(function(r) {
        if (e.contains(r, t)) {
          var i = r.getData();
          zT(this.dimensions, function(o) {
            var s = this._axesMap.get(o);
            s.scale.unionExtentFromData(i, i.mapDimension(o)), Rg(s.scale, s.model);
          }, this);
        }
      }, this);
    }, n.prototype.resize = function(e, t) {
      this._rect = mr(e.getBoxLayoutParams(), {
        width: t.getWidth(),
        height: t.getHeight()
      }), this._layoutAxes();
    }, n.prototype.getRect = function() {
      return this._rect;
    }, n.prototype._makeLayoutInfo = function() {
      var e = this._model, t = this._rect, r = ["x", "y"], i = ["width", "height"], o = e.get("layout"), s = o === "horizontal" ? 0 : 1, a = t[i[s]], l = [0, a], u = this.dimensions.length, c = AO(e.get("axisExpandWidth"), l), h = AO(e.get("axisExpandCount") || 0, [0, u]), f = e.get("axisExpandable") && u > 3 && u > h && h > 1 && c > 0 && a > 0, d = e.get("axisExpandWindow"), p;
      if (d)
        p = AO(d[1] - d[0], l), d[1] = d[0] + p;
      else {
        p = AO(c * (h - 1), l);
        var g = e.get("axisExpandCenter") || G8(u / 2);
        d = [c * g - p / 2], d[1] = d[0] + p;
      }
      var v = (a - p) / (u - h);
      v < 3 && (v = 0);
      var m = [G8(j8(d[0] / c, 1)) + 1, hMt(j8(d[1] / c, 1)) - 1], y = v / c * d[0];
      return {
        layout: o,
        pixelDimIndex: s,
        layoutBase: t[r[s]],
        layoutLength: a,
        axisBase: t[r[1 - s]],
        axisLength: t[i[1 - s]],
        axisExpandable: f,
        axisExpandWidth: c,
        axisCollapseWidth: v,
        axisExpandWindow: d,
        axisCount: u,
        winInnerIndices: m,
        axisExpandWindow0Pos: y
      };
    }, n.prototype._layoutAxes = function() {
      var e = this._rect, t = this._axesMap, r = this.dimensions, i = this._makeLayoutInfo(), o = i.layout;
      t.each(function(s) {
        var a = [0, i.axisLength], l = s.inverse ? 1 : 0;
        s.setExtent(a[l], a[1 - l]);
      }), zT(r, function(s, a) {
        var l = (i.axisExpandable ? gMt : pMt)(a, i), u = {
          horizontal: {
            x: l.position,
            y: i.axisLength
          },
          vertical: {
            x: 0,
            y: l.position
          }
        }, c = {
          horizontal: fMt / 2,
          vertical: 0
        }, h = [u[o].x + e.x, u[o].y + e.y], f = c[o], d = Bo();
        md(d, d, f), dl(d, d, h), this._axesLayout[s] = {
          position: h,
          rotation: f,
          transform: d,
          axisNameAvailableWidth: l.axisNameAvailableWidth,
          axisLabelShow: l.axisLabelShow,
          nameTruncateMaxWidth: l.nameTruncateMaxWidth,
          tickDirection: 1,
          labelDirection: 1
        };
      }, this);
    }, n.prototype.getAxis = function(e) {
      return this._axesMap.get(e);
    }, n.prototype.dataToPoint = function(e, t) {
      return this.axisCoordToPoint(this._axesMap.get(t).dataToCoord(e), t);
    }, n.prototype.eachActiveState = function(e, t, r, i) {
      r == null && (r = 0), i == null && (i = e.count());
      var o = this._axesMap, s = this.dimensions, a = [], l = [];
      I(s, function(v) {
        a.push(e.mapDimension(v)), l.push(o.get(v).model);
      });
      for (var u = this.hasAxisBrushed(), c = r; c < i; c++) {
        var h = void 0;
        if (!u)
          h = "normal";
        else {
          h = "active";
          for (var f = e.getValues(a, c), d = 0, p = s.length; d < p; d++) {
            var g = l[d].getActiveState(f[d]);
            if (g === "inactive") {
              h = "inactive";
              break;
            }
          }
        }
        t(h, c);
      }
    }, n.prototype.hasAxisBrushed = function() {
      for (var e = this.dimensions, t = this._axesMap, r = !1, i = 0, o = e.length; i < o; i++)
        t.get(e[i]).model.getActiveState() !== "normal" && (r = !0);
      return r;
    }, n.prototype.axisCoordToPoint = function(e, t) {
      var r = this._axesLayout[t];
      return ta([e, 0], r.transform);
    }, n.prototype.getAxisLayout = function(e) {
      return Re(this._axesLayout[e]);
    }, n.prototype.getSlidedAxisExpandWindow = function(e) {
      var t = this._makeLayoutInfo(), r = t.pixelDimIndex, i = t.axisExpandWindow.slice(), o = i[1] - i[0], s = [0, t.axisExpandWidth * (t.axisCount - 1)];
      if (!this.containPoint(e))
        return {
          behavior: "none",
          axisExpandWindow: i
        };
      var a = e[r] - t.layoutBase - t.axisExpandWindow0Pos, l, u = "slide", c = t.axisCollapseWidth, h = this._model.get("axisExpandSlideTriggerArea"), f = h[0] != null;
      if (c)
        f && c && a < o * h[0] ? (u = "jump", l = a - o * h[2]) : f && c && a > o * (1 - h[0]) ? (u = "jump", l = a - o * (1 - h[2])) : (l = a - o * h[1]) >= 0 && (l = a - o * (1 - h[1])) <= 0 && (l = 0), l *= t.axisExpandWidth / c, l ? _d(l, i, s, "all") : u = "none";
      else {
        var d = i[1] - i[0], p = s[1] * a / d;
        i = [Hne(0, p - d / 2)], i[1] = jne(s[1], i[0] + d), i[0] = i[1] - d;
      }
      return {
        axisExpandWindow: i,
        behavior: u
      };
    }, n;
  }()
);
function AO(n, e) {
  return jne(Hne(n, e[0]), e[1]);
}
function pMt(n, e) {
  var t = e.layoutLength / (e.axisCount - 1);
  return {
    position: t * n,
    axisNameAvailableWidth: t,
    axisLabelShow: !0
  };
}
function gMt(n, e) {
  var t = e.layoutLength, r = e.axisExpandWidth, i = e.axisCount, o = e.axisCollapseWidth, s = e.winInnerIndices, a, l = o, u = !1, c;
  return n < s[0] ? (a = n * o, c = o) : n <= s[1] ? (a = e.axisExpandWindow0Pos + n * r - e.axisExpandWindow[0], l = r, u = !0) : (a = t - (i - 1 - n) * o, c = o), {
    position: a,
    axisNameAvailableWidth: l,
    axisLabelShow: u,
    nameTruncateMaxWidth: c
  };
}
function vMt(n, e) {
  var t = [];
  return n.eachComponent("parallel", function(r, i) {
    var o = new dMt(r, n, e);
    o.name = "parallel_" + i, o.resize(r, e), r.coordinateSystem = o, o.model = r, t.push(o);
  }), n.eachSeries(function(r) {
    if (r.get("coordinateSystem") === "parallel") {
      var i = r.getReferringComponents("parallel", nr).models[0];
      r.coordinateSystem = i.coordinateSystem;
    }
  }), t;
}
var mMt = {
  create: vMt
};
const yMt = mMt;
var qne = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.activeIntervals = [], t;
    }
    return e.prototype.getAreaSelectStyle = function() {
      return rd([
        ["fill", "color"],
        ["lineWidth", "borderWidth"],
        ["stroke", "borderColor"],
        ["width", "width"],
        ["opacity", "opacity"]
        // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
        // So do not transfer decal directly.
      ])(this.getModel("areaSelectStyle"));
    }, e.prototype.setActiveIntervals = function(t) {
      var r = this.activeIntervals = Re(t);
      if (r)
        for (var i = r.length - 1; i >= 0; i--)
          ds(r[i]);
    }, e.prototype.getActiveState = function(t) {
      var r = this.activeIntervals;
      if (!r.length)
        return "normal";
      if (t == null || isNaN(+t))
        return "inactive";
      if (r.length === 1) {
        var i = r[0];
        if (i[0] <= t && t <= i[1])
          return "active";
      } else
        for (var o = 0, s = r.length; o < s; o++)
          if (r[o][0] <= t && t <= r[o][1])
            return "active";
      return "inactive";
    }, e;
  }(Ot)
);
lr(qne, kb);
const H8 = qne;
var sd = !0, N0 = Math.min, Bg = Math.max, bMt = Math.pow, OMt = 1e4, wMt = 6, xMt = 6, q8 = "globalPan", SMt = {
  w: [0, 0],
  e: [0, 1],
  n: [1, 0],
  s: [1, 1]
}, _Mt = {
  w: "ew",
  e: "ew",
  n: "ns",
  s: "ns",
  ne: "nesw",
  sw: "nesw",
  nw: "nwse",
  se: "nwse"
}, Y8 = {
  brushStyle: {
    lineWidth: 2,
    stroke: "rgba(210,219,238,0.3)",
    fill: "#D2DBEE"
  },
  transformable: !0,
  brushMode: "single",
  removeOnClick: !1
}, CMt = 0, AMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this) || this;
      return r._track = [], r._covers = [], r._handlers = {}, process.env.NODE_ENV !== "production" && De(t), r._zr = t, r.group = new Ve(), r._uid = "brushController_" + CMt++, I(LMt, function(i, o) {
        this._handlers[o] = Oe(i, this);
      }, r), r;
    }
    return e.prototype.enableBrush = function(t) {
      return process.env.NODE_ENV !== "production" && De(this._mounted), this._brushType && this._doDisableBrush(), t.brushType && this._doEnableBrush(t), this;
    }, e.prototype._doEnableBrush = function(t) {
      var r = this._zr;
      this._enableGlobalPan || ZTt(r, q8, this._uid), I(this._handlers, function(i, o) {
        r.on(o, i);
      }), this._brushType = t.brushType, this._brushOption = Je(Re(Y8), t, !0);
    }, e.prototype._doDisableBrush = function() {
      var t = this._zr;
      WTt(t, q8, this._uid), I(this._handlers, function(r, i) {
        t.off(i, r);
      }), this._brushType = this._brushOption = null;
    }, e.prototype.setPanels = function(t) {
      if (t && t.length) {
        var r = this._panels = {};
        I(t, function(i) {
          r[i.panelId] = Re(i);
        });
      } else
        this._panels = null;
      return this;
    }, e.prototype.mount = function(t) {
      t = t || {}, process.env.NODE_ENV !== "production" && (this._mounted = !0), this._enableGlobalPan = t.enableGlobalPan;
      var r = this.group;
      return this._zr.add(r), r.attr({
        x: t.x || 0,
        y: t.y || 0,
        rotation: t.rotation || 0,
        scaleX: t.scaleX || 1,
        scaleY: t.scaleY || 1
      }), this._transform = r.getLocalTransform(), this;
    }, e.prototype.updateCovers = function(t) {
      process.env.NODE_ENV !== "production" && De(this._mounted), t = ae(t, function(f) {
        return Je(Re(Y8), f, !0);
      });
      var r = "\0-brush-index-", i = this._covers, o = this._covers = [], s = this, a = this._creatingCover;
      return new lu(i, t, u, l).add(c).update(c).remove(h).execute(), this;
      function l(f, d) {
        return (f.id != null ? f.id : r + d) + "-" + f.brushType;
      }
      function u(f, d) {
        return l(f.__brushOption, d);
      }
      function c(f, d) {
        var p = t[f];
        if (d != null && i[d] === a)
          o[f] = i[d];
        else {
          var g = o[f] = d != null ? (i[d].__brushOption = p, i[d]) : Xne(s, Yne(s, p));
          s$(s, g);
        }
      }
      function h(f) {
        i[f] !== a && s.group.remove(i[f]);
      }
    }, e.prototype.unmount = function() {
      if (!(process.env.NODE_ENV !== "production" && !this._mounted))
        return this.enableBrush(!1), jM(this), this._zr.remove(this.group), process.env.NODE_ENV !== "production" && (this._mounted = !1), this;
    }, e.prototype.dispose = function() {
      this.unmount(), this.off();
    }, e;
  }(Ps)
);
function Yne(n, e) {
  var t = TC[e.brushType].createCover(n, e);
  return t.__brushOption = e, Kne(t, e), n.group.add(t), t;
}
function Xne(n, e) {
  var t = a$(e);
  return t.endCreating && (t.endCreating(n, e), Kne(e, e.__brushOption)), e;
}
function Une(n, e) {
  var t = e.__brushOption;
  a$(e).updateCoverShape(n, e, t.range, t);
}
function Kne(n, e) {
  var t = e.z;
  t == null && (t = OMt), n.traverse(function(r) {
    r.z = t, r.z2 = t;
  });
}
function s$(n, e) {
  a$(e).updateCommon(n, e), Une(n, e);
}
function a$(n) {
  return TC[n.__brushOption.brushType];
}
function l$(n, e, t) {
  var r = n._panels;
  if (!r)
    return sd;
  var i, o = n._transform;
  return I(r, function(s) {
    s.isTargetByCursor(e, t, o) && (i = s);
  }), i;
}
function Jne(n, e) {
  var t = n._panels;
  if (!t)
    return sd;
  var r = e.__brushOption.panelId;
  return r != null ? t[r] : sd;
}
function jM(n) {
  var e = n._covers, t = e.length;
  return I(e, function(r) {
    n.group.remove(r);
  }, n), e.length = 0, !!t;
}
function ad(n, e) {
  var t = ae(n._covers, function(r) {
    var i = r.__brushOption, o = Re(i.range);
    return {
      brushType: i.brushType,
      panelId: i.panelId,
      range: o
    };
  });
  n.trigger("brush", {
    areas: t,
    isEnd: !!e.isEnd,
    removeOnClick: !!e.removeOnClick
  });
}
function TMt(n) {
  var e = n._track;
  if (!e.length)
    return !1;
  var t = e[e.length - 1], r = e[0], i = t[0] - r[0], o = t[1] - r[1], s = bMt(i * i + o * o, 0.5);
  return s > wMt;
}
function ere(n) {
  var e = n.length - 1;
  return e < 0 && (e = 0), [n[0], n[e]];
}
function tre(n, e, t, r) {
  var i = new Ve();
  return i.add(new _t({
    name: "main",
    style: u$(t),
    silent: !0,
    draggable: !0,
    cursor: "move",
    drift: je(X8, n, e, i, ["n", "s", "w", "e"]),
    ondragend: je(ad, e, {
      isEnd: !0
    })
  })), I(r, function(o) {
    i.add(new _t({
      name: o.join(""),
      style: {
        opacity: 0
      },
      draggable: !0,
      silent: !0,
      invisible: !0,
      drift: je(X8, n, e, i, o),
      ondragend: je(ad, e, {
        isEnd: !0
      })
    }));
  }), i;
}
function nre(n, e, t, r) {
  var i = r.brushStyle.lineWidth || 0, o = Bg(i, xMt), s = t[0][0], a = t[1][0], l = s - i / 2, u = a - i / 2, c = t[0][1], h = t[1][1], f = c - o + i / 2, d = h - o + i / 2, p = c - s, g = h - a, v = p + i, m = g + i;
  El(n, e, "main", s, a, p, g), r.transformable && (El(n, e, "w", l, u, o, m), El(n, e, "e", f, u, o, m), El(n, e, "n", l, u, v, o), El(n, e, "s", l, d, v, o), El(n, e, "nw", l, u, o, o), El(n, e, "ne", f, u, o, o), El(n, e, "sw", l, d, o, o), El(n, e, "se", f, d, o, o));
}
function HM(n, e) {
  var t = e.__brushOption, r = t.transformable, i = e.childAt(0);
  i.useStyle(u$(t)), i.attr({
    silent: !r,
    cursor: r ? "move" : "default"
  }), I([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(o) {
    var s = e.childOfName(o.join("")), a = o.length === 1 ? qM(n, o[0]) : EMt(n, o);
    s && s.attr({
      silent: !r,
      invisible: !r,
      cursor: r ? _Mt[a] + "-resize" : null
    });
  });
}
function El(n, e, t, r, i, o, s) {
  var a = e.childOfName(t);
  a && a.setShape(MMt(c$(n, e, [[r, i], [r + o, i + s]])));
}
function u$(n) {
  return Le({
    strokeNoScale: !0
  }, n.brushStyle);
}
function rre(n, e, t, r) {
  var i = [N0(n, t), N0(e, r)], o = [Bg(n, t), Bg(e, r)];
  return [
    [i[0], o[0]],
    [i[1], o[1]]
    // y range
  ];
}
function PMt(n) {
  return Lf(n.group);
}
function qM(n, e) {
  var t = {
    w: "left",
    e: "right",
    n: "top",
    s: "bottom"
  }, r = {
    left: "w",
    right: "e",
    top: "n",
    bottom: "s"
  }, i = sC(t[e], PMt(n));
  return r[i];
}
function EMt(n, e) {
  var t = [qM(n, e[0]), qM(n, e[1])];
  return (t[0] === "e" || t[0] === "w") && t.reverse(), t.join("");
}
function X8(n, e, t, r, i, o) {
  var s = t.__brushOption, a = n.toRectRange(s.range), l = ire(e, i, o);
  I(r, function(u) {
    var c = SMt[u];
    a[c[0]][c[1]] += l[c[0]];
  }), s.range = n.fromRectRange(rre(a[0][0], a[1][0], a[0][1], a[1][1])), s$(e, t), ad(e, {
    isEnd: !1
  });
}
function kMt(n, e, t, r) {
  var i = e.__brushOption.range, o = ire(n, t, r);
  I(i, function(s) {
    s[0] += o[0], s[1] += o[1];
  }), s$(n, e), ad(n, {
    isEnd: !1
  });
}
function ire(n, e, t) {
  var r = n.group, i = r.transformCoordToLocal(e, t), o = r.transformCoordToLocal(0, 0);
  return [i[0] - o[0], i[1] - o[1]];
}
function c$(n, e, t) {
  var r = Jne(n, e);
  return r && r !== sd ? r.clipPath(t, n._transform) : Re(t);
}
function MMt(n) {
  var e = N0(n[0][0], n[1][0]), t = N0(n[0][1], n[1][1]), r = Bg(n[0][0], n[1][0]), i = Bg(n[0][1], n[1][1]);
  return {
    x: e,
    y: t,
    width: r - e,
    height: i - t
  };
}
function DMt(n, e, t) {
  if (
    // Check active
    !(!n._brushType || IMt(n, e.offsetX, e.offsetY))
  ) {
    var r = n._zr, i = n._covers, o = l$(n, e, t);
    if (!n._dragging)
      for (var s = 0; s < i.length; s++) {
        var a = i[s].__brushOption;
        if (o && (o === sd || a.panelId === o.panelId) && TC[a.brushType].contain(i[s], t[0], t[1]))
          return;
      }
    o && r.setCursorStyle("crosshair");
  }
}
function YM(n) {
  var e = n.event;
  e.preventDefault && e.preventDefault();
}
function XM(n, e, t) {
  return n.childOfName("main").contain(e, t);
}
function ore(n, e, t, r) {
  var i = n._creatingCover, o = n._creatingPanel, s = n._brushOption, a;
  if (n._track.push(t.slice()), TMt(n) || i) {
    if (o && !i) {
      s.brushMode === "single" && jM(n);
      var l = Re(s);
      l.brushType = U8(l.brushType, o), l.panelId = o === sd ? null : o.panelId, i = n._creatingCover = Yne(n, l), n._covers.push(i);
    }
    if (i) {
      var u = TC[U8(n._brushType, o)], c = i.__brushOption;
      c.range = u.getCreatingRange(c$(n, i, n._track)), r && (Xne(n, i), u.updateCommon(n, i)), Une(n, i), a = {
        isEnd: r
      };
    }
  } else
    r && s.brushMode === "single" && s.removeOnClick && l$(n, e, t) && jM(n) && (a = {
      isEnd: r,
      removeOnClick: !0
    });
  return a;
}
function U8(n, e) {
  return n === "auto" ? (process.env.NODE_ENV !== "production" && De(e && e.defaultBrushType, 'MUST have defaultBrushType when brushType is "atuo"'), e.defaultBrushType) : n;
}
var LMt = {
  mousedown: function(n) {
    if (this._dragging)
      K8(this, n);
    else if (!n.target || !n.target.draggable) {
      YM(n);
      var e = this.group.transformCoordToLocal(n.offsetX, n.offsetY);
      this._creatingCover = null;
      var t = this._creatingPanel = l$(this, n, e);
      t && (this._dragging = !0, this._track = [e.slice()]);
    }
  },
  mousemove: function(n) {
    var e = n.offsetX, t = n.offsetY, r = this.group.transformCoordToLocal(e, t);
    if (DMt(this, n, r), this._dragging) {
      YM(n);
      var i = ore(this, n, r, !1);
      i && ad(this, i);
    }
  },
  mouseup: function(n) {
    K8(this, n);
  }
};
function K8(n, e) {
  if (n._dragging) {
    YM(e);
    var t = e.offsetX, r = e.offsetY, i = n.group.transformCoordToLocal(t, r), o = ore(n, e, i, !0);
    n._dragging = !1, n._track = [], n._creatingCover = null, o && ad(n, o);
  }
}
function IMt(n, e, t) {
  var r = n._zr;
  return e < 0 || e > r.getWidth() || t < 0 || t > r.getHeight();
}
var TC = {
  lineX: J8(0),
  lineY: J8(1),
  rect: {
    createCover: function(n, e) {
      function t(r) {
        return r;
      }
      return tre({
        toRectRange: t,
        fromRectRange: t
      }, n, e, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
    },
    getCreatingRange: function(n) {
      var e = ere(n);
      return rre(e[1][0], e[1][1], e[0][0], e[0][1]);
    },
    updateCoverShape: function(n, e, t, r) {
      nre(n, e, t, r);
    },
    updateCommon: HM,
    contain: XM
  },
  polygon: {
    createCover: function(n, e) {
      var t = new Ve();
      return t.add(new Gi({
        name: "main",
        style: u$(e),
        silent: !0
      })), t;
    },
    getCreatingRange: function(n) {
      return n;
    },
    endCreating: function(n, e) {
      e.remove(e.childAt(0)), e.add(new Zi({
        name: "main",
        draggable: !0,
        drift: je(kMt, n, e),
        ondragend: je(ad, n, {
          isEnd: !0
        })
      }));
    },
    updateCoverShape: function(n, e, t, r) {
      e.childAt(0).setShape({
        points: c$(n, e, t)
      });
    },
    updateCommon: HM,
    contain: XM
  }
};
function J8(n) {
  return {
    createCover: function(e, t) {
      return tre({
        toRectRange: function(r) {
          var i = [r, [0, 100]];
          return n && i.reverse(), i;
        },
        fromRectRange: function(r) {
          return r[n];
        }
      }, e, t, [[["w"], ["e"]], [["n"], ["s"]]][n]);
    },
    getCreatingRange: function(e) {
      var t = ere(e), r = N0(t[0][n], t[1][n]), i = Bg(t[0][n], t[1][n]);
      return [r, i];
    },
    updateCoverShape: function(e, t, r, i) {
      var o, s = Jne(e, t);
      if (s !== sd && s.getLinearBrushOtherExtent)
        o = s.getLinearBrushOtherExtent(n);
      else {
        var a = e._zr;
        o = [0, [a.getWidth(), a.getHeight()][1 - n]];
      }
      var l = [r, o];
      n && l.reverse(), nre(e, t, l, i);
    },
    updateCommon: HM,
    contain: XM
  };
}
const h$ = AMt;
function sre(n) {
  return n = f$(n), function(e) {
    return pJ(e, n);
  };
}
function are(n, e) {
  return n = f$(n), function(t) {
    var r = e ?? t, i = r ? n.width : n.height, o = r ? n.x : n.y;
    return [o, o + (i || 0)];
  };
}
function lre(n, e, t) {
  var r = f$(n);
  return function(i, o) {
    return r.contain(o[0], o[1]) && !SC(i, e, t);
  };
}
function f$(n) {
  return et.create(n);
}
var RMt = ["axisLine", "axisTickLabel", "axisName"], $Mt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r) {
      n.prototype.init.apply(this, arguments), (this._brushController = new h$(r.getZr())).on("brush", Oe(this._onBrush, this));
    }, e.prototype.render = function(t, r, i, o) {
      if (!NMt(t, r, o)) {
        this.axisModel = t, this.api = i, this.group.removeAll();
        var s = this._axisGroup;
        if (this._axisGroup = new Ve(), this.group.add(this._axisGroup), !!t.get("show")) {
          var a = VMt(t, r), l = a.coordinateSystem, u = t.getAreaSelectStyle(), c = u.width, h = t.axis.dim, f = l.getAxisLayout(h), d = te({
            strokeContainThreshold: c
          }, f), p = new Vi(t, d);
          I(RMt, p.add, p), this._axisGroup.add(p.getGroup()), this._refreshBrushController(d, u, t, a, c, i), Cb(s, this._axisGroup, t);
        }
      }
    }, e.prototype._refreshBrushController = function(t, r, i, o, s, a) {
      var l = i.axis.getExtent(), u = l[1] - l[0], c = Math.min(30, Math.abs(u) * 0.1), h = et.create({
        x: l[0],
        y: -s / 2,
        width: u,
        height: s
      });
      h.x -= c, h.width += 2 * c, this._brushController.mount({
        enableGlobalPan: !0,
        rotation: t.rotation,
        x: t.position[0],
        y: t.position[1]
      }).setPanels([{
        panelId: "pl",
        clipPath: sre(h),
        isTargetByCursor: lre(h, a, o),
        getLinearBrushOtherExtent: are(h, 0)
      }]).enableBrush({
        brushType: "lineX",
        brushStyle: r,
        removeOnClick: !0
      }).updateCovers(BMt(i));
    }, e.prototype._onBrush = function(t) {
      var r = t.areas, i = this.axisModel, o = i.axis, s = ae(r, function(a) {
        return [o.coordToData(a.range[0], !0), o.coordToData(a.range[1], !0)];
      });
      (!i.option.realtime === t.isEnd || t.removeOnClick) && this.api.dispatchAction({
        type: "axisAreaSelect",
        parallelAxisId: i.id,
        intervals: s
      });
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.type = "parallelAxis", e;
  }(Nn)
);
function NMt(n, e, t) {
  return t && t.type === "axisAreaSelect" && e.findComponents({
    mainType: "parallelAxis",
    query: t
  })[0] === n;
}
function BMt(n) {
  var e = n.axis;
  return ae(n.activeIntervals, function(t) {
    return {
      brushType: "lineX",
      panelId: "pl",
      range: [e.dataToCoord(t[0], !0), e.dataToCoord(t[1], !0)]
    };
  });
}
function VMt(n, e) {
  return e.getComponent("parallel", n.get("parallelIndex"));
}
const zMt = $Mt;
var FMt = {
  type: "axisAreaSelect",
  event: "axisAreaSelected"
  // update: 'updateVisual'
};
function QMt(n) {
  n.registerAction(FMt, function(e, t) {
    t.eachComponent({
      mainType: "parallelAxis",
      query: e
    }, function(r) {
      r.axis.model.setActiveIntervals(e.intervals);
    });
  }), n.registerAction("parallelAxisExpand", function(e, t) {
    t.eachComponent({
      mainType: "parallel",
      query: e
    }, function(r) {
      r.setAxisExpand(e);
    });
  });
}
var ZMt = {
  type: "value",
  areaSelectStyle: {
    width: 20,
    borderWidth: 1,
    borderColor: "rgba(160,197,232)",
    color: "rgba(160,197,232)",
    opacity: 0.3
  },
  realtime: !0,
  z: 10
};
function ure(n) {
  n.registerComponentView(sMt), n.registerComponentModel(lMt), n.registerCoordinateSystem("parallel", yMt), n.registerPreprocessor(eMt), n.registerComponentModel(H8), n.registerComponentView(zMt), Ng(n, "parallel", H8, ZMt), QMt(n);
}
function WMt(n) {
  at(ure), n.registerChartView(jkt), n.registerSeriesModel(Xkt), n.registerVisual(n.PRIORITY.VISUAL.BRUSH, Jkt);
}
var GMt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
    }
    return n;
  }()
), jMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      return n.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new GMt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.extent;
      t.moveTo(r.x1, r.y1), t.bezierCurveTo(r.cpx1, r.cpy1, r.cpx2, r.cpy2, r.x2, r.y2), r.orient === "vertical" ? (t.lineTo(r.x2 + i, r.y2), t.bezierCurveTo(r.cpx2 + i, r.cpy2, r.cpx1 + i, r.cpy1, r.x1 + i, r.y1)) : (t.lineTo(r.x2, r.y2 + i), t.bezierCurveTo(r.cpx2, r.cpy2 + i, r.cpx1, r.cpy1 + i, r.x1, r.y1 + i)), t.closePath();
    }, e.prototype.highlight = function() {
      su(this);
    }, e.prototype.downplay = function() {
      au(this);
    }, e;
  }(ct)
), HMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._focusAdjacencyDisabled = !1, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = this, s = t.getGraph(), a = this.group, l = t.layoutInfo, u = l.width, c = l.height, h = t.getData(), f = t.getData("edge"), d = t.get("orient");
      this._model = t, a.removeAll(), a.x = l.x, a.y = l.y, s.eachEdge(function(p) {
        var g = new jMt(), v = Fe(g);
        v.dataIndex = p.dataIndex, v.seriesIndex = t.seriesIndex, v.dataType = "edge";
        var m = p.getModel(), y = m.getModel("lineStyle"), b = y.get("curveness"), O = p.node1.getLayout(), w = p.node1.getModel(), x = w.get("localX"), S = w.get("localY"), _ = p.node2.getLayout(), C = p.node2.getModel(), A = C.get("localX"), T = C.get("localY"), k = p.getLayout(), L, D, E, M, R, N, $, V;
        g.shape.extent = Math.max(1, k.dy), g.shape.orient = d, d === "vertical" ? (L = (x != null ? x * u : O.x) + k.sy, D = (S != null ? S * c : O.y) + O.dy, E = (A != null ? A * u : _.x) + k.ty, M = T != null ? T * c : _.y, R = L, N = D * (1 - b) + M * b, $ = E, V = D * b + M * (1 - b)) : (L = (x != null ? x * u : O.x) + O.dx, D = (S != null ? S * c : O.y) + k.sy, E = A != null ? A * u : _.x, M = (T != null ? T * c : _.y) + k.ty, R = L * (1 - b) + E * b, N = D, $ = L * b + E * (1 - b), V = M), g.setShape({
          x1: L,
          y1: D,
          x2: E,
          y2: M,
          cpx1: R,
          cpy1: N,
          cpx2: $,
          cpy2: V
        }), g.useStyle(y.getItemStyle()), eQ(g.style, d, p);
        var H = "" + m.get("value"), G = kr(m, "edgeLabel");
        ci(g, G, {
          labelFetcher: {
            getFormattedLabel: function(ie, se, K, re, ge, ne) {
              return t.getFormattedLabel(
                ie,
                se,
                "edge",
                re,
                // ensure edgeLabel formatter is provided
                // to prevent the inheritance from `label.formatter` of the series
                ys(ge, G.normal && G.normal.get("formatter"), H),
                ne
              );
            }
          },
          labelDataIndex: p.dataIndex,
          defaultText: H
        }), g.setTextConfig({
          position: "inside"
        });
        var q = m.getModel("emphasis");
        ui(g, m, "lineStyle", function(ie) {
          var se = ie.getItemStyle();
          return eQ(se, d, p), se;
        }), a.add(g), f.setItemGraphicEl(p.dataIndex, g);
        var Y = q.get("focus");
        $n(g, Y === "adjacency" ? p.getAdjacentDataIndices() : Y === "trajectory" ? p.getTrajectoryDataIndices() : Y, q.get("blurScope"), q.get("disabled"));
      }), s.eachNode(function(p) {
        var g = p.getLayout(), v = p.getModel(), m = v.get("localX"), y = v.get("localY"), b = v.getModel("emphasis"), O = new _t({
          shape: {
            x: m != null ? m * u : g.x,
            y: y != null ? y * c : g.y,
            width: g.dx,
            height: g.dy
          },
          style: v.getModel("itemStyle").getItemStyle(),
          z2: 10
        });
        ci(O, kr(v), {
          labelFetcher: {
            getFormattedLabel: function(x, S) {
              return t.getFormattedLabel(x, S, "node");
            }
          },
          labelDataIndex: p.dataIndex,
          defaultText: p.id
        }), O.disableLabelAnimation = !0, O.setStyle("fill", p.getVisual("color")), O.setStyle("decal", p.getVisual("style").decal), ui(O, v), a.add(O), h.setItemGraphicEl(p.dataIndex, O), Fe(O).dataType = "node";
        var w = b.get("focus");
        $n(O, w === "adjacency" ? p.getAdjacentDataIndices() : w === "trajectory" ? p.getTrajectoryDataIndices() : w, b.get("blurScope"), b.get("disabled"));
      }), h.eachItemGraphicEl(function(p, g) {
        var v = h.getItemModel(g);
        v.get("draggable") && (p.drift = function(m, y) {
          o._focusAdjacencyDisabled = !0, this.shape.x += m, this.shape.y += y, this.dirty(), i.dispatchAction({
            type: "dragNode",
            seriesId: t.id,
            dataIndex: h.getRawIndex(g),
            localX: this.shape.x / u,
            localY: this.shape.y / c
          });
        }, p.ondragend = function() {
          o._focusAdjacencyDisabled = !1;
        }, p.draggable = !0, p.cursor = "move");
      }), !this._data && t.isAnimationEnabled() && a.setClipPath(qMt(a.getBoundingRect(), t, function() {
        a.removeClipPath();
      })), this._data = t.getData();
    }, e.prototype.dispose = function() {
    }, e.type = "sankey", e;
  }(dn)
);
function eQ(n, e, t) {
  switch (n.fill) {
    case "source":
      n.fill = t.node1.getVisual("color"), n.decal = t.node1.getVisual("style").decal;
      break;
    case "target":
      n.fill = t.node2.getVisual("color"), n.decal = t.node2.getVisual("style").decal;
      break;
    case "gradient":
      var r = t.node1.getVisual("color"), i = t.node2.getVisual("color");
      be(r) && be(i) && (n.fill = new _b(0, 0, +(e === "horizontal"), +(e === "vertical"), [{
        color: r,
        offset: 0
      }, {
        color: i,
        offset: 1
      }]));
  }
}
function qMt(n, e, t) {
  var r = new _t({
    shape: {
      x: n.x - 10,
      y: n.y - 10,
      width: 0,
      height: n.height + 20
    }
  });
  return vn(r, {
    shape: {
      width: n.width + 20
    }
  }, e, t), r;
}
const YMt = HMt;
var XMt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      var i = t.edges || t.links, o = t.data || t.nodes, s = t.levels;
      this.levelModels = [];
      for (var a = this.levelModels, l = 0; l < s.length; l++)
        if (s[l].depth != null && s[l].depth >= 0)
          a[s[l].depth] = new fn(s[l], this, r);
        else if (process.env.NODE_ENV !== "production")
          throw new Error("levels[i].depth is mandatory and should be natural number");
      if (o && i) {
        var u = Wne(o, i, this, !0, c);
        return u.data;
      }
      function c(h, f) {
        h.wrapMethod("getItemModel", function(d, p) {
          var g = d.parentModel, v = g.getData().getItemLayout(p);
          if (v) {
            var m = v.depth, y = g.levelModels[m];
            y && (d.parentModel = y);
          }
          return d;
        }), f.wrapMethod("getItemModel", function(d, p) {
          var g = d.parentModel, v = g.getGraph().getEdgeByIndex(p), m = v.node1.getLayout();
          if (m) {
            var y = m.depth, b = g.levelModels[y];
            b && (d.parentModel = b);
          }
          return d;
        });
      }
    }, e.prototype.setNodePosition = function(t, r) {
      var i = this.option.data || this.option.nodes, o = i[t];
      o.localX = r[0], o.localY = r[1];
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.formatTooltip = function(t, r, i) {
      function o(d) {
        return isNaN(d) || d == null;
      }
      if (i === "edge") {
        var s = this.getDataParams(t, i), a = s.data, l = s.value, u = a.source + " -- " + a.target;
        return Mr("nameValue", {
          name: u,
          value: l,
          noValue: o(l)
        });
      } else {
        var c = this.getGraph().getNodeByIndex(t), h = c.getLayout().value, f = this.getDataParams(t, i).data.name;
        return Mr("nameValue", {
          name: f != null ? f + "" : null,
          value: h,
          noValue: o(h)
        });
      }
    }, e.prototype.optionUpdated = function() {
    }, e.prototype.getDataParams = function(t, r) {
      var i = n.prototype.getDataParams.call(this, t, r);
      if (i.value == null && r === "node") {
        var o = this.getGraph().getNodeByIndex(t), s = o.getLayout().value;
        i.value = s;
      }
      return i;
    }, e.type = "series.sankey", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      left: "5%",
      top: "5%",
      right: "20%",
      bottom: "5%",
      orient: "horizontal",
      nodeWidth: 20,
      nodeGap: 8,
      draggable: !0,
      layoutIterations: 32,
      label: {
        show: !0,
        position: "right",
        fontSize: 12
      },
      edgeLabel: {
        show: !1,
        fontSize: 12
      },
      levels: [],
      nodeAlign: "justify",
      lineStyle: {
        color: "#314656",
        opacity: 0.2,
        curveness: 0.5
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          opacity: 0.5
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      animationEasing: "linear",
      animationDuration: 1e3
    }, e;
  }(Sn)
);
const UMt = XMt;
function KMt(n, e) {
  n.eachSeriesByType("sankey", function(t) {
    var r = t.get("nodeWidth"), i = t.get("nodeGap"), o = JMt(t, e);
    t.layoutInfo = o;
    var s = o.width, a = o.height, l = t.getGraph(), u = l.nodes, c = l.edges;
    tDt(u);
    var h = Gt(u, function(g) {
      return g.getLayout().value === 0;
    }), f = h.length !== 0 ? 0 : t.get("layoutIterations"), d = t.get("orient"), p = t.get("nodeAlign");
    eDt(u, c, r, i, s, a, f, d, p);
  });
}
function JMt(n, e) {
  return mr(n.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function eDt(n, e, t, r, i, o, s, a, l) {
  nDt(n, e, t, i, o, a, l), sDt(n, e, o, i, r, s, a), gDt(n, a);
}
function tDt(n) {
  I(n, function(e) {
    var t = yc(e.outEdges, OS), r = yc(e.inEdges, OS), i = e.getValue() || 0, o = Math.max(t, r, i);
    e.setLayout({
      value: o
    }, !0);
  });
}
function nDt(n, e, t, r, i, o, s) {
  for (var a = [], l = [], u = [], c = [], h = 0, f = 0; f < e.length; f++)
    a[f] = 1;
  for (var f = 0; f < n.length; f++)
    l[f] = n[f].inEdges.length, l[f] === 0 && u.push(n[f]);
  for (var d = -1; u.length; ) {
    for (var p = 0; p < u.length; p++) {
      var g = u[p], v = g.hostGraph.data.getRawDataItem(g.dataIndex), m = v.depth != null && v.depth >= 0;
      m && v.depth > d && (d = v.depth), g.setLayout({
        depth: m ? v.depth : h
      }, !0), o === "vertical" ? g.setLayout({
        dy: t
      }, !0) : g.setLayout({
        dx: t
      }, !0);
      for (var y = 0; y < g.outEdges.length; y++) {
        var b = g.outEdges[y], O = e.indexOf(b);
        a[O] = 0;
        var w = b.node2, x = n.indexOf(w);
        --l[x] === 0 && c.indexOf(w) < 0 && c.push(w);
      }
    }
    ++h, u = c, c = [];
  }
  for (var f = 0; f < a.length; f++)
    if (a[f] === 1)
      throw new Error("Sankey is a DAG, the original data has cycle!");
  var S = d > h - 1 ? d : h - 1;
  s && s !== "left" && rDt(n, s, o, S);
  var _ = o === "vertical" ? (i - t) / S : (r - t) / S;
  oDt(n, _, o);
}
function cre(n) {
  var e = n.hostGraph.data.getRawDataItem(n.dataIndex);
  return e.depth != null && e.depth >= 0;
}
function rDt(n, e, t, r) {
  if (e === "right") {
    for (var i = [], o = n, s = 0; o.length; ) {
      for (var a = 0; a < o.length; a++) {
        var l = o[a];
        l.setLayout({
          skNodeHeight: s
        }, !0);
        for (var u = 0; u < l.inEdges.length; u++) {
          var c = l.inEdges[u];
          i.indexOf(c.node1) < 0 && i.push(c.node1);
        }
      }
      o = i, i = [], ++s;
    }
    I(n, function(h) {
      cre(h) || h.setLayout({
        depth: Math.max(0, r - h.getLayout().skNodeHeight)
      }, !0);
    });
  } else
    e === "justify" && iDt(n, r);
}
function iDt(n, e) {
  I(n, function(t) {
    !cre(t) && !t.outEdges.length && t.setLayout({
      depth: e
    }, !0);
  });
}
function oDt(n, e, t) {
  I(n, function(r) {
    var i = r.getLayout().depth * e;
    t === "vertical" ? r.setLayout({
      y: i
    }, !0) : r.setLayout({
      x: i
    }, !0);
  });
}
function sDt(n, e, t, r, i, o, s) {
  var a = aDt(n, s);
  lDt(a, e, t, r, i, s), FT(a, i, t, r, s);
  for (var l = 1; o > 0; o--)
    l *= 0.99, uDt(a, l, s), FT(a, i, t, r, s), pDt(a, l, s), FT(a, i, t, r, s);
}
function aDt(n, e) {
  var t = [], r = e === "vertical" ? "y" : "x", i = Kk(n, function(o) {
    return o.getLayout()[r];
  });
  return i.keys.sort(function(o, s) {
    return o - s;
  }), I(i.keys, function(o) {
    t.push(i.buckets.get(o));
  }), t;
}
function lDt(n, e, t, r, i, o) {
  var s = 1 / 0;
  I(n, function(a) {
    var l = a.length, u = 0;
    I(a, function(h) {
      u += h.getLayout().value;
    });
    var c = o === "vertical" ? (r - (l - 1) * i) / u : (t - (l - 1) * i) / u;
    c < s && (s = c);
  }), I(n, function(a) {
    I(a, function(l, u) {
      var c = l.getLayout().value * s;
      o === "vertical" ? (l.setLayout({
        x: u
      }, !0), l.setLayout({
        dx: c
      }, !0)) : (l.setLayout({
        y: u
      }, !0), l.setLayout({
        dy: c
      }, !0));
    });
  }), I(e, function(a) {
    var l = +a.getValue() * s;
    a.setLayout({
      dy: l
    }, !0);
  });
}
function FT(n, e, t, r, i) {
  var o = i === "vertical" ? "x" : "y";
  I(n, function(s) {
    s.sort(function(g, v) {
      return g.getLayout()[o] - v.getLayout()[o];
    });
    for (var a, l, u, c = 0, h = s.length, f = i === "vertical" ? "dx" : "dy", d = 0; d < h; d++)
      l = s[d], u = c - l.getLayout()[o], u > 0 && (a = l.getLayout()[o] + u, i === "vertical" ? l.setLayout({
        x: a
      }, !0) : l.setLayout({
        y: a
      }, !0)), c = l.getLayout()[o] + l.getLayout()[f] + e;
    var p = i === "vertical" ? r : t;
    if (u = c - e - p, u > 0) {
      a = l.getLayout()[o] - u, i === "vertical" ? l.setLayout({
        x: a
      }, !0) : l.setLayout({
        y: a
      }, !0), c = a;
      for (var d = h - 2; d >= 0; --d)
        l = s[d], u = l.getLayout()[o] + l.getLayout()[f] + e - c, u > 0 && (a = l.getLayout()[o] - u, i === "vertical" ? l.setLayout({
          x: a
        }, !0) : l.setLayout({
          y: a
        }, !0)), c = l.getLayout()[o];
    }
  });
}
function uDt(n, e, t) {
  I(n.slice().reverse(), function(r) {
    I(r, function(i) {
      if (i.outEdges.length) {
        var o = yc(i.outEdges, cDt, t) / yc(i.outEdges, OS);
        if (isNaN(o)) {
          var s = i.outEdges.length;
          o = s ? yc(i.outEdges, hDt, t) / s : 0;
        }
        if (t === "vertical") {
          var a = i.getLayout().x + (o - Zc(i, t)) * e;
          i.setLayout({
            x: a
          }, !0);
        } else {
          var l = i.getLayout().y + (o - Zc(i, t)) * e;
          i.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function cDt(n, e) {
  return Zc(n.node2, e) * n.getValue();
}
function hDt(n, e) {
  return Zc(n.node2, e);
}
function fDt(n, e) {
  return Zc(n.node1, e) * n.getValue();
}
function dDt(n, e) {
  return Zc(n.node1, e);
}
function Zc(n, e) {
  return e === "vertical" ? n.getLayout().x + n.getLayout().dx / 2 : n.getLayout().y + n.getLayout().dy / 2;
}
function OS(n) {
  return n.getValue();
}
function yc(n, e, t) {
  for (var r = 0, i = n.length, o = -1; ++o < i; ) {
    var s = +e(n[o], t);
    isNaN(s) || (r += s);
  }
  return r;
}
function pDt(n, e, t) {
  I(n, function(r) {
    I(r, function(i) {
      if (i.inEdges.length) {
        var o = yc(i.inEdges, fDt, t) / yc(i.inEdges, OS);
        if (isNaN(o)) {
          var s = i.inEdges.length;
          o = s ? yc(i.inEdges, dDt, t) / s : 0;
        }
        if (t === "vertical") {
          var a = i.getLayout().x + (o - Zc(i, t)) * e;
          i.setLayout({
            x: a
          }, !0);
        } else {
          var l = i.getLayout().y + (o - Zc(i, t)) * e;
          i.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function gDt(n, e) {
  var t = e === "vertical" ? "x" : "y";
  I(n, function(r) {
    r.outEdges.sort(function(i, o) {
      return i.node2.getLayout()[t] - o.node2.getLayout()[t];
    }), r.inEdges.sort(function(i, o) {
      return i.node1.getLayout()[t] - o.node1.getLayout()[t];
    });
  }), I(n, function(r) {
    var i = 0, o = 0;
    I(r.outEdges, function(s) {
      s.setLayout({
        sy: i
      }, !0), i += s.getLayout().dy;
    }), I(r.inEdges, function(s) {
      s.setLayout({
        ty: o
      }, !0), o += s.getLayout().dy;
    });
  });
}
function vDt(n) {
  n.eachSeriesByType("sankey", function(e) {
    var t = e.getGraph(), r = t.nodes, i = t.edges;
    if (r.length) {
      var o = 1 / 0, s = -1 / 0;
      I(r, function(a) {
        var l = a.getLayout().value;
        l < o && (o = l), l > s && (s = l);
      }), I(r, function(a) {
        var l = new ai({
          type: "color",
          mappingMethod: "linear",
          dataExtent: [o, s],
          visual: e.get("color")
        }), u = l.mapValueToVisual(a.getLayout().value), c = a.getModel().get(["itemStyle", "color"]);
        c != null ? (a.setVisual("color", c), a.setVisual("style", {
          fill: c
        })) : (a.setVisual("color", u), a.setVisual("style", {
          fill: u
        }));
      });
    }
    i.length && I(i, function(a) {
      var l = a.getModel().get("lineStyle");
      a.setVisual("style", l);
    });
  });
}
function mDt(n) {
  n.registerChartView(YMt), n.registerSeriesModel(UMt), n.registerLayout(KMt), n.registerVisual(vDt), n.registerAction({
    type: "dragNode",
    event: "dragnode",
    // here can only use 'update' now, other value is not support in echarts.
    update: "update"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "sankey",
      query: e
    }, function(r) {
      r.setNodePosition(e.dataIndex, [e.localX, e.localY]);
    });
  });
}
var hre = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.getInitialData = function(e, t) {
      var r, i = t.getComponent("xAxis", this.get("xAxisIndex")), o = t.getComponent("yAxis", this.get("yAxisIndex")), s = i.get("type"), a = o.get("type"), l;
      s === "category" ? (e.layout = "horizontal", r = i.getOrdinalMeta(), l = !0) : a === "category" ? (e.layout = "vertical", r = o.getOrdinalMeta(), l = !0) : e.layout = e.layout || "horizontal";
      var u = ["x", "y"], c = e.layout === "horizontal" ? 0 : 1, h = this._baseAxisDim = u[c], f = u[1 - c], d = [i, o], p = d[c].get("type"), g = d[1 - c].get("type"), v = e.data;
      if (v && l) {
        var m = [];
        I(v, function(O, w) {
          var x;
          oe(O) ? (x = O.slice(), O.unshift(w)) : oe(O.value) ? (x = te({}, O), x.value = x.value.slice(), O.value.unshift(w)) : x = O, m.push(x);
        }), e.data = m;
      }
      var y = this.defaultValueDimensions, b = [{
        name: h,
        type: uS(p),
        ordinalMeta: r,
        otherDims: {
          tooltip: !1,
          itemName: 0
        },
        dimsDef: ["base"]
      }, {
        name: f,
        type: uS(g),
        dimsDef: y.slice()
      }];
      return Av(this, {
        coordDimensions: b,
        dimensionsCount: y.length + 1,
        encodeDefaulter: je(VJ, b, this)
      });
    }, n.prototype.getBaseAxis = function() {
      var e = this._baseAxisDim;
      return this.ecModel.getComponent(e + "Axis", this.get(e + "AxisIndex")).axis;
    }, n;
  }()
), fre = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.defaultValueDimensions = [{
        name: "min",
        defaultTooltip: !0
      }, {
        name: "Q1",
        defaultTooltip: !0
      }, {
        name: "median",
        defaultTooltip: !0
      }, {
        name: "Q3",
        defaultTooltip: !0
      }, {
        name: "max",
        defaultTooltip: !0
      }], t.visualDrawType = "stroke", t;
    }
    return e.type = "series.boxplot", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      layout: null,
      boxWidth: [7, 50],
      itemStyle: {
        color: "#fff",
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2,
          shadowBlur: 5,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0,0,0,0.2)"
        }
      },
      animationDuration: 800
    }, e;
  }(Sn)
);
lr(fre, hre, !0);
const yDt = fre;
var bDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this.group, a = this._data;
      this._data || s.removeAll();
      var l = t.get("layout") === "horizontal" ? 1 : 0;
      o.diff(a).add(function(u) {
        if (o.hasValue(u)) {
          var c = o.getItemLayout(u), h = tQ(c, o, u, l, !0);
          o.setItemGraphicEl(u, h), s.add(h);
        }
      }).update(function(u, c) {
        var h = a.getItemGraphicEl(c);
        if (!o.hasValue(u)) {
          s.remove(h);
          return;
        }
        var f = o.getItemLayout(u);
        h ? (ua(h), dre(f, h, o, u)) : h = tQ(f, o, u, l), s.add(h), o.setItemGraphicEl(u, h);
      }).remove(function(u) {
        var c = a.getItemGraphicEl(u);
        c && s.remove(c);
      }).execute(), this._data = o;
    }, e.prototype.remove = function(t) {
      var r = this.group, i = this._data;
      this._data = null, i && i.eachItemGraphicEl(function(o) {
        o && r.remove(o);
      });
    }, e.type = "boxplot", e;
  }(dn)
), ODt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), wDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "boxplotBoxPath", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new ODt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.points, o = 0;
      for (t.moveTo(i[o][0], i[o][1]), o++; o < 4; o++)
        t.lineTo(i[o][0], i[o][1]);
      for (t.closePath(); o < i.length; o++)
        t.moveTo(i[o][0], i[o][1]), o++, t.lineTo(i[o][0], i[o][1]);
    }, e;
  }(ct)
);
function tQ(n, e, t, r, i) {
  var o = n.ends, s = new wDt({
    shape: {
      points: i ? xDt(o, r, n) : o
    }
  });
  return dre(n, s, e, t, i), s;
}
function dre(n, e, t, r, i) {
  var o = t.hostModel, s = yd[i ? "initProps" : "updateProps"];
  s(e, {
    shape: {
      points: n.ends
    }
  }, o, r), e.useStyle(t.getItemVisual(r, "style")), e.style.strokeNoScale = !0, e.z2 = 100;
  var a = t.getItemModel(r), l = a.getModel("emphasis");
  ui(e, a), $n(e, l.get("focus"), l.get("blurScope"), l.get("disabled"));
}
function xDt(n, e, t) {
  return ae(n, function(r) {
    return r = r.slice(), r[e] = t.initBaseline, r;
  });
}
const SDt = bDt;
var Cy = I;
function _Dt(n) {
  var e = CDt(n);
  Cy(e, function(t) {
    var r = t.seriesModels;
    r.length && (ADt(t), Cy(r, function(i, o) {
      TDt(i, t.boxOffsetList[o], t.boxWidthList[o]);
    }));
  });
}
function CDt(n) {
  var e = [], t = [];
  return n.eachSeriesByType("boxplot", function(r) {
    var i = r.getBaseAxis(), o = ot(t, i);
    o < 0 && (o = t.length, t[o] = i, e[o] = {
      axis: i,
      seriesModels: []
    }), e[o].seriesModels.push(r);
  }), e;
}
function ADt(n) {
  var e = n.axis, t = n.seriesModels, r = t.length, i = n.boxWidthList = [], o = n.boxOffsetList = [], s = [], a;
  if (e.type === "category")
    a = e.getBandWidth();
  else {
    var l = 0;
    Cy(t, function(p) {
      l = Math.max(l, p.getData().count());
    });
    var u = e.getExtent();
    a = Math.abs(u[1] - u[0]) / l;
  }
  Cy(t, function(p) {
    var g = p.get("boxWidth");
    oe(g) || (g = [g, g]), s.push([fe(g[0], a) || 0, fe(g[1], a) || 0]);
  });
  var c = a * 0.8 - 2, h = c / r * 0.3, f = (c - h * (r - 1)) / r, d = f / 2 - c / 2;
  Cy(t, function(p, g) {
    o.push(d), d += h + f, i.push(Math.min(Math.max(f, s[g][0]), s[g][1]));
  });
}
function TDt(n, e, t) {
  var r = n.coordinateSystem, i = n.getData(), o = t / 2, s = n.get("layout") === "horizontal" ? 0 : 1, a = 1 - s, l = ["x", "y"], u = i.mapDimension(l[s]), c = i.mapDimensionsAll(l[a]);
  if (u == null || c.length < 5)
    return;
  for (var h = 0; h < i.count(); h++) {
    var f = i.get(u, h), d = b(f, c[2], h), p = b(f, c[0], h), g = b(f, c[1], h), v = b(f, c[3], h), m = b(f, c[4], h), y = [];
    O(y, g, !1), O(y, v, !0), y.push(p, g, m, v), w(y, p), w(y, m), w(y, d), i.setItemLayout(h, {
      initBaseline: d[a],
      ends: y
    });
  }
  function b(x, S, _) {
    var C = i.get(S, _), A = [];
    A[s] = x, A[a] = C;
    var T;
    return isNaN(x) || isNaN(C) ? T = [NaN, NaN] : (T = r.dataToPoint(A), T[s] += e), T;
  }
  function O(x, S, _) {
    var C = S.slice(), A = S.slice();
    C[s] += o, A[s] -= o, _ ? x.push(C, A) : x.push(A, C);
  }
  function w(x, S) {
    var _ = S.slice(), C = S.slice();
    _[s] -= o, C[s] += o, x.push(_, C);
  }
}
function PDt(n, e) {
  e = e || {};
  for (var t = [], r = [], i = e.boundIQR, o = i === "none" || i === 0, s = 0; s < n.length; s++) {
    var a = ds(n[s].slice()), l = pA(a, 0.25), u = pA(a, 0.5), c = pA(a, 0.75), h = a[0], f = a[a.length - 1], d = (i ?? 1.5) * (c - l), p = o ? h : Math.max(h, l - d), g = o ? f : Math.min(f, c + d), v = e.itemNameFormatter, m = Pe(v) ? v({
      value: s
    }) : be(v) ? v.replace("{value}", s + "") : s + "";
    t.push([m, p, l, u, c, g]);
    for (var y = 0; y < a.length; y++) {
      var b = a[y];
      if (b < p || b > g) {
        var O = [m, b];
        r.push(O);
      }
    }
  }
  return {
    boxData: t,
    outliers: r
  };
}
var EDt = {
  type: "echarts:boxplot",
  transform: function(e) {
    var t = e.upstream;
    if (t.sourceFormat !== Ci) {
      var r = "";
      process.env.NODE_ENV !== "production" && (r = Fi("source data is not applicable for this boxplot transform. Expect number[][].")), Nt(r);
    }
    var i = PDt(t.getRawData(), e.config);
    return [{
      dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"],
      data: i.boxData
    }, {
      data: i.outliers
    }];
  }
};
function kDt(n) {
  n.registerSeriesModel(yDt), n.registerChartView(SDt), n.registerLayout(_Dt), n.registerTransform(EDt);
}
var MDt = ["color", "borderColor"], DDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(t), this._isLargeDraw ? this._renderLarge(t) : this._renderNormal(t);
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      this._clear(), this._updateDrawMode(t);
    }, e.prototype.incrementalRender = function(t, r, i, o) {
      this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(t, r) : this._incrementalRenderNormal(t, r);
    }, e.prototype.eachRendered = function(t) {
      ih(this._progressiveEls || this.group, t);
    }, e.prototype._updateDrawMode = function(t) {
      var r = t.pipelineContext.large;
      (this._isLargeDraw == null || r !== this._isLargeDraw) && (this._isLargeDraw = r, this._clear());
    }, e.prototype._renderNormal = function(t) {
      var r = t.getData(), i = this._data, o = this.group, s = r.getLayout("isSimpleBox"), a = t.get("clip", !0), l = t.coordinateSystem, u = l.getArea && l.getArea();
      this._data || o.removeAll(), r.diff(i).add(function(c) {
        if (r.hasValue(c)) {
          var h = r.getItemLayout(c);
          if (a && nQ(u, h))
            return;
          var f = QT(h, c, !0);
          vn(f, {
            shape: {
              points: h.ends
            }
          }, t, c), ZT(f, r, c, s), o.add(f), r.setItemGraphicEl(c, f);
        }
      }).update(function(c, h) {
        var f = i.getItemGraphicEl(h);
        if (!r.hasValue(c)) {
          o.remove(f);
          return;
        }
        var d = r.getItemLayout(c);
        if (a && nQ(u, d)) {
          o.remove(f);
          return;
        }
        f ? (kt(f, {
          shape: {
            points: d.ends
          }
        }, t, c), ua(f)) : f = QT(d), ZT(f, r, c, s), o.add(f), r.setItemGraphicEl(c, f);
      }).remove(function(c) {
        var h = i.getItemGraphicEl(c);
        h && o.remove(h);
      }).execute(), this._data = r;
    }, e.prototype._renderLarge = function(t) {
      this._clear(), rQ(t, this.group);
      var r = t.get("clip", !0) ? Lb(t.coordinateSystem, !1, t) : null;
      r ? this.group.setClipPath(r) : this.group.removeClipPath();
    }, e.prototype._incrementalRenderNormal = function(t, r) {
      for (var i = r.getData(), o = i.getLayout("isSimpleBox"), s; (s = t.next()) != null; ) {
        var a = i.getItemLayout(s), l = QT(a);
        ZT(l, i, s, o), l.incremental = !0, this.group.add(l), this._progressiveEls.push(l);
      }
    }, e.prototype._incrementalRenderLarge = function(t, r) {
      rQ(r, this.group, this._progressiveEls, !0);
    }, e.prototype.remove = function(t) {
      this._clear();
    }, e.prototype._clear = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "candlestick", e;
  }(dn)
), LDt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), IDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "normalCandlestickBox", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new LDt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.points;
      this.__simpleBox ? (t.moveTo(i[4][0], i[4][1]), t.lineTo(i[6][0], i[6][1])) : (t.moveTo(i[0][0], i[0][1]), t.lineTo(i[1][0], i[1][1]), t.lineTo(i[2][0], i[2][1]), t.lineTo(i[3][0], i[3][1]), t.closePath(), t.moveTo(i[4][0], i[4][1]), t.lineTo(i[5][0], i[5][1]), t.moveTo(i[6][0], i[6][1]), t.lineTo(i[7][0], i[7][1]));
    }, e;
  }(ct)
);
function QT(n, e, t) {
  var r = n.ends;
  return new IDt({
    shape: {
      points: t ? RDt(r, n) : r
    },
    z2: 100
  });
}
function nQ(n, e) {
  for (var t = !0, r = 0; r < e.ends.length; r++)
    if (n.contain(e.ends[r][0], e.ends[r][1])) {
      t = !1;
      break;
    }
  return t;
}
function ZT(n, e, t, r) {
  var i = e.getItemModel(t);
  n.useStyle(e.getItemVisual(t, "style")), n.style.strokeNoScale = !0, n.__simpleBox = r, ui(n, i);
}
function RDt(n, e) {
  return ae(n, function(t) {
    return t = t.slice(), t[1] = e.initBaseline, t;
  });
}
var $Dt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), WT = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r.type = "largeCandlestickBox", r;
    }
    return e.prototype.getDefaultShape = function() {
      return new $Dt();
    }, e.prototype.buildPath = function(t, r) {
      for (var i = r.points, o = 0; o < i.length; )
        if (this.__sign === i[o++]) {
          var s = i[o++];
          t.moveTo(s, i[o++]), t.lineTo(s, i[o++]);
        } else
          o += 3;
    }, e;
  }(ct)
);
function rQ(n, e, t, r) {
  var i = n.getData(), o = i.getLayout("largePoints"), s = new WT({
    shape: {
      points: o
    },
    __sign: 1,
    ignoreCoarsePointer: !0
  });
  e.add(s);
  var a = new WT({
    shape: {
      points: o
    },
    __sign: -1,
    ignoreCoarsePointer: !0
  });
  e.add(a);
  var l = new WT({
    shape: {
      points: o
    },
    __sign: 0,
    ignoreCoarsePointer: !0
  });
  e.add(l), GT(1, s, n), GT(-1, a, n), GT(0, l, n), r && (s.incremental = !0, a.incremental = !0), t && t.push(s, a);
}
function GT(n, e, t, r) {
  var i = t.get(["itemStyle", n > 0 ? "borderColor" : "borderColor0"]) || t.get(["itemStyle", n > 0 ? "color" : "color0"]);
  n === 0 && (i = t.get(["itemStyle", "borderColorDoji"]));
  var o = t.getModel("itemStyle").getItemStyle(MDt);
  e.useStyle(o), e.style.fill = null, e.style.stroke = i;
}
const NDt = DDt;
var pre = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.defaultValueDimensions = [{
        name: "open",
        defaultTooltip: !0
      }, {
        name: "close",
        defaultTooltip: !0
      }, {
        name: "lowest",
        defaultTooltip: !0
      }, {
        name: "highest",
        defaultTooltip: !0
      }], t;
    }
    return e.prototype.getShadowDim = function() {
      return "open";
    }, e.prototype.brushSelector = function(t, r, i) {
      var o = r.getItemLayout(t);
      return o && i.rect(o.brushRect);
    }, e.type = "series.candlestick", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      layout: null,
      clip: !0,
      itemStyle: {
        color: "#eb5454",
        color0: "#47b262",
        borderColor: "#eb5454",
        borderColor0: "#47b262",
        borderColorDoji: null,
        // borderColor: '#d24040',
        // borderColor0: '#398f4f',
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2
        }
      },
      barMaxWidth: null,
      barMinWidth: null,
      barWidth: null,
      large: !0,
      largeThreshold: 600,
      progressive: 3e3,
      progressiveThreshold: 1e4,
      progressiveChunkMode: "mod",
      animationEasing: "linear",
      animationDuration: 300
    }, e;
  }(Sn)
);
lr(pre, hre, !0);
const BDt = pre;
function VDt(n) {
  !n || !oe(n.series) || I(n.series, function(e) {
    Me(e) && e.type === "k" && (e.type = "candlestick");
  });
}
var zDt = ["itemStyle", "borderColor"], FDt = ["itemStyle", "borderColor0"], QDt = ["itemStyle", "borderColorDoji"], ZDt = ["itemStyle", "color"], WDt = ["itemStyle", "color0"], GDt = {
  seriesType: "candlestick",
  plan: Sv(),
  // For legend.
  performRawSeries: !0,
  reset: function(n, e) {
    function t(o, s) {
      return s.get(o > 0 ? ZDt : WDt);
    }
    function r(o, s) {
      return s.get(o === 0 ? QDt : o > 0 ? zDt : FDt);
    }
    if (!e.isSeriesFiltered(n)) {
      var i = n.pipelineContext.large;
      return !i && {
        progress: function(o, s) {
          for (var a; (a = o.next()) != null; ) {
            var l = s.getItemModel(a), u = s.getItemLayout(a).sign, c = l.getItemStyle();
            c.fill = t(u, l), c.stroke = r(u, l) || c.fill;
            var h = s.ensureUniqueItemVisual(a, "style");
            te(h, c);
          }
        }
      };
    }
  }
};
const jDt = GDt;
var HDt = {
  seriesType: "candlestick",
  plan: Sv(),
  reset: function(n) {
    var e = n.coordinateSystem, t = n.getData(), r = qDt(n, t), i = 0, o = 1, s = ["x", "y"], a = t.getDimensionIndex(t.mapDimension(s[i])), l = ae(t.mapDimensionsAll(s[o]), t.getDimensionIndex, t), u = l[0], c = l[1], h = l[2], f = l[3];
    if (t.setLayout({
      candleWidth: r,
      // The value is experimented visually.
      isSimpleBox: r <= 1.3
    }), a < 0 || l.length < 4)
      return;
    return {
      progress: n.pipelineContext.large ? p : d
    };
    function d(g, v) {
      for (var m, y = v.getStore(); (m = g.next()) != null; ) {
        var b = y.get(a, m), O = y.get(u, m), w = y.get(c, m), x = y.get(h, m), S = y.get(f, m), _ = Math.min(O, w), C = Math.max(O, w), A = R(_, b), T = R(C, b), k = R(x, b), L = R(S, b), D = [];
        N(D, T, 0), N(D, A, 1), D.push(V(L), V(T), V(k), V(A));
        var E = v.getItemModel(m), M = !!E.get(["itemStyle", "borderColorDoji"]);
        v.setItemLayout(m, {
          sign: iQ(y, m, O, w, c, M),
          initBaseline: O > w ? T[o] : A[o],
          ends: D,
          brushRect: $(x, S, b)
        });
      }
      function R(H, G) {
        var q = [];
        return q[i] = G, q[o] = H, isNaN(G) || isNaN(H) ? [NaN, NaN] : e.dataToPoint(q);
      }
      function N(H, G, q) {
        var Y = G.slice(), ie = G.slice();
        Y[i] = _w(Y[i] + r / 2, 1, !1), ie[i] = _w(ie[i] - r / 2, 1, !0), q ? H.push(Y, ie) : H.push(ie, Y);
      }
      function $(H, G, q) {
        var Y = R(H, q), ie = R(G, q);
        return Y[i] -= r / 2, ie[i] -= r / 2, {
          x: Y[0],
          y: Y[1],
          width: r,
          height: ie[1] - Y[1]
        };
      }
      function V(H) {
        return H[i] = _w(H[i], 1), H;
      }
    }
    function p(g, v) {
      for (var m = Ya(g.count * 4), y = 0, b, O = [], w = [], x, S = v.getStore(), _ = !!n.get(["itemStyle", "borderColorDoji"]); (x = g.next()) != null; ) {
        var C = S.get(a, x), A = S.get(u, x), T = S.get(c, x), k = S.get(h, x), L = S.get(f, x);
        if (isNaN(C) || isNaN(k) || isNaN(L)) {
          m[y++] = NaN, y += 3;
          continue;
        }
        m[y++] = iQ(S, x, A, T, c, _), O[i] = C, O[o] = k, b = e.dataToPoint(O, null, w), m[y++] = b ? b[0] : NaN, m[y++] = b ? b[1] : NaN, O[o] = L, b = e.dataToPoint(O, null, w), m[y++] = b ? b[1] : NaN;
      }
      v.setLayout("largePoints", m);
    }
  }
};
function iQ(n, e, t, r, i, o) {
  var s;
  return t > r ? s = -1 : t < r ? s = 1 : s = o ? 0 : e > 0 ? n.get(i, e - 1) <= r ? 1 : -1 : 1, s;
}
function qDt(n, e) {
  var t = n.getBaseAxis(), r, i = t.type === "category" ? t.getBandWidth() : (r = t.getExtent(), Math.abs(r[1] - r[0]) / e.count()), o = fe(Qe(n.get("barMaxWidth"), i), i), s = fe(Qe(n.get("barMinWidth"), 1), i), a = n.get("barWidth");
  return a != null ? fe(a, i) : Math.max(Math.min(i / 2, o), s);
}
const YDt = HDt;
function XDt(n) {
  n.registerChartView(NDt), n.registerSeriesModel(BDt), n.registerPreprocessor(VDt), n.registerVisual(jDt), n.registerLayout(YDt);
}
function oQ(n, e) {
  var t = e.rippleEffectColor || e.color;
  n.eachChild(function(r) {
    r.attr({
      z: e.z,
      zlevel: e.zlevel,
      style: {
        stroke: e.brushType === "stroke" ? t : null,
        fill: e.brushType === "fill" ? t : null
      }
    });
  });
}
var UDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r) {
      var i = n.call(this) || this, o = new Mb(t, r), s = new Ve();
      return i.add(o), i.add(s), i.updateData(t, r), i;
    }
    return e.prototype.stopEffectAnimation = function() {
      this.childAt(1).removeAll();
    }, e.prototype.startEffectAnimation = function(t) {
      for (var r = t.symbolType, i = t.color, o = t.rippleNumber, s = this.childAt(1), a = 0; a < o; a++) {
        var l = ar(r, -1, -1, 2, 2, i);
        l.attr({
          style: {
            strokeNoScale: !0
          },
          z2: 99,
          silent: !0,
          scaleX: 0.5,
          scaleY: 0.5
        });
        var u = -a / o * t.period + t.effectOffset;
        l.animate("", !0).when(t.period, {
          scaleX: t.rippleScale / 2,
          scaleY: t.rippleScale / 2
        }).delay(u).start(), l.animateStyle(!0).when(t.period, {
          opacity: 0
        }).delay(u).start(), s.add(l);
      }
      oQ(s, t);
    }, e.prototype.updateEffectAnimation = function(t) {
      for (var r = this._effectCfg, i = this.childAt(1), o = ["symbolType", "period", "rippleScale", "rippleNumber"], s = 0; s < o.length; s++) {
        var a = o[s];
        if (r[a] !== t[a]) {
          this.stopEffectAnimation(), this.startEffectAnimation(t);
          return;
        }
      }
      oQ(i, t);
    }, e.prototype.highlight = function() {
      su(this);
    }, e.prototype.downplay = function() {
      au(this);
    }, e.prototype.getSymbolType = function() {
      var t = this.childAt(0);
      return t && t.getSymbolType();
    }, e.prototype.updateData = function(t, r) {
      var i = this, o = t.hostModel;
      this.childAt(0).updateData(t, r);
      var s = this.childAt(1), a = t.getItemModel(r), l = t.getItemVisual(r, "symbol"), u = Cv(t.getItemVisual(r, "symbolSize")), c = t.getItemVisual(r, "style"), h = c && c.fill, f = a.getModel("emphasis");
      s.setScale(u), s.traverse(function(v) {
        v.setStyle("fill", h);
      });
      var d = Od(t.getItemVisual(r, "symbolOffset"), u);
      d && (s.x = d[0], s.y = d[1]);
      var p = t.getItemVisual(r, "symbolRotate");
      s.rotation = (p || 0) * Math.PI / 180 || 0;
      var g = {};
      g.showEffectOn = o.get("showEffectOn"), g.rippleScale = a.get(["rippleEffect", "scale"]), g.brushType = a.get(["rippleEffect", "brushType"]), g.period = a.get(["rippleEffect", "period"]) * 1e3, g.effectOffset = r / t.count(), g.z = o.getShallow("z") || 0, g.zlevel = o.getShallow("zlevel") || 0, g.symbolType = l, g.color = h, g.rippleEffectColor = a.get(["rippleEffect", "color"]), g.rippleNumber = a.get(["rippleEffect", "number"]), g.showEffectOn === "render" ? (this._effectCfg ? this.updateEffectAnimation(g) : this.startEffectAnimation(g), this._effectCfg = g) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(v) {
        v === "emphasis" ? g.showEffectOn !== "render" && i.startEffectAnimation(g) : v === "normal" && g.showEffectOn !== "render" && i.stopEffectAnimation();
      }), this._effectCfg = g, $n(this, f.get("focus"), f.get("blurScope"), f.get("disabled"));
    }, e.prototype.fadeOut = function(t) {
      t && t();
    }, e;
  }(Ve)
);
const KDt = UDt;
var JDt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this._symbolDraw = new Db(KDt);
    }, e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this._symbolDraw;
      s.updateData(o, {
        clipShape: this._getClipShape(t)
      }), this.group.add(s.group);
    }, e.prototype._getClipShape = function(t) {
      var r = t.coordinateSystem, i = r && r.getArea && r.getArea();
      return t.get("clip", !0) ? i : null;
    }, e.prototype.updateTransform = function(t, r, i) {
      var o = t.getData();
      this.group.dirty();
      var s = Ib("").reset(t, r, i);
      s.progress && s.progress({
        start: 0,
        end: o.count(),
        count: o.count()
      }, o), this._symbolDraw.updateLayout();
    }, e.prototype._updateGroupTransform = function(t) {
      var r = t.coordinateSystem;
      r && r.getRoamTransform && (this.group.transform = U0t(r.getRoamTransform()), this.group.decomposeTransform());
    }, e.prototype.remove = function(t, r) {
      this._symbolDraw && this._symbolDraw.remove(!0);
    }, e.type = "effectScatter", e;
  }(dn)
);
const eLt = JDt;
var tLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return yu(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.brushSelector = function(t, r, i) {
      return i.point(r.getItemLayout(t));
    }, e.type = "series.effectScatter", e.dependencies = ["grid", "polar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      effectType: "ripple",
      progressive: 0,
      // When to show the effect, option: 'render'|'emphasis'
      showEffectOn: "render",
      clip: !0,
      // Ripple effect config
      rippleEffect: {
        period: 4,
        // Scale of ripple
        scale: 2.5,
        // Brush type can be fill or stroke
        brushType: "fill",
        // Ripple number
        number: 3
      },
      universalTransition: {
        divideShape: "clone"
      },
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
      // symbol: null,        // 图形类型
      symbolSize: 10
      // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2
      // symbolRotate: null,  // 图形旋转控制
      // itemStyle: {
      //     opacity: 1
      // }
    }, e;
  }(Sn)
);
const nLt = tLt;
function rLt(n) {
  n.registerChartView(eLt), n.registerSeriesModel(nLt), n.registerLayout(Ib("effectScatter"));
}
var iLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this) || this;
      return o.add(o.createLine(t, r, i)), o._updateEffectSymbol(t, r), o;
    }
    return e.prototype.createLine = function(t, r, i) {
      return new i$(t, r, i);
    }, e.prototype._updateEffectSymbol = function(t, r) {
      var i = t.getItemModel(r), o = i.getModel("effect"), s = o.get("symbolSize"), a = o.get("symbol");
      oe(s) || (s = [s, s]);
      var l = t.getItemVisual(r, "style"), u = o.get("color") || l && l.stroke, c = this.childAt(1);
      this._symbolType !== a && (this.remove(c), c = ar(a, -0.5, -0.5, 1, 1, u), c.z2 = 100, c.culling = !0, this.add(c)), c && (c.setStyle("shadowColor", u), c.setStyle(o.getItemStyle(["color"])), c.scaleX = s[0], c.scaleY = s[1], c.setColor(u), this._symbolType = a, this._symbolScale = s, this._updateEffectAnimation(t, o, r));
    }, e.prototype._updateEffectAnimation = function(t, r, i) {
      var o = this.childAt(1);
      if (o) {
        var s = t.getItemLayout(i), a = r.get("period") * 1e3, l = r.get("loop"), u = r.get("roundTrip"), c = r.get("constantSpeed"), h = tr(r.get("delay"), function(d) {
          return d / t.count() * a / 3;
        });
        if (o.ignore = !0, this._updateAnimationPoints(o, s), c > 0 && (a = this._getLineLength(o) / c * 1e3), a !== this._period || l !== this._loop || u !== this._roundTrip) {
          o.stopAnimation();
          var f = void 0;
          Pe(h) ? f = h(i) : f = h, o.__t > 0 && (f = -a * o.__t), this._animateSymbol(o, a, f, l, u);
        }
        this._period = a, this._loop = l, this._roundTrip = u;
      }
    }, e.prototype._animateSymbol = function(t, r, i, o, s) {
      if (r > 0) {
        t.__t = 0;
        var a = this, l = t.animate("", o).when(s ? r * 2 : r, {
          __t: s ? 2 : 1
        }).delay(i).during(function() {
          a._updateSymbolPosition(t);
        });
        o || l.done(function() {
          a.remove(t);
        }), l.start();
      }
    }, e.prototype._getLineLength = function(t) {
      return ic(t.__p1, t.__cp1) + ic(t.__cp1, t.__p2);
    }, e.prototype._updateAnimationPoints = function(t, r) {
      t.__p1 = r[0], t.__p2 = r[1], t.__cp1 = r[2] || [(r[0][0] + r[1][0]) / 2, (r[0][1] + r[1][1]) / 2];
    }, e.prototype.updateData = function(t, r, i) {
      this.childAt(0).updateData(t, r, i), this._updateEffectSymbol(t, r);
    }, e.prototype._updateSymbolPosition = function(t) {
      var r = t.__p1, i = t.__p2, o = t.__cp1, s = t.__t < 1 ? t.__t : 2 - t.__t, a = [t.x, t.y], l = a.slice(), u = $r, c = $k;
      a[0] = u(r[0], o[0], i[0], s), a[1] = u(r[1], o[1], i[1], s);
      var h = t.__t < 1 ? c(r[0], o[0], i[0], s) : c(i[0], o[0], r[0], 1 - s), f = t.__t < 1 ? c(r[1], o[1], i[1], s) : c(i[1], o[1], r[1], 1 - s);
      t.rotation = -Math.atan2(f, h) - Math.PI / 2, (this._symbolType === "line" || this._symbolType === "rect" || this._symbolType === "roundRect") && (t.__lastT !== void 0 && t.__lastT < t.__t ? (t.scaleY = ic(l, a) * 1.05, s === 1 && (a[0] = l[0] + (a[0] - l[0]) / 2, a[1] = l[1] + (a[1] - l[1]) / 2)) : t.__lastT === 1 ? t.scaleY = 2 * ic(r, a) : t.scaleY = this._symbolScale[1]), t.__lastT = t.__t, t.ignore = !1, t.x = a[0], t.y = a[1];
    }, e.prototype.updateLayout = function(t, r) {
      this.childAt(0).updateLayout(t, r);
      var i = t.getItemModel(r).getModel("effect");
      this._updateEffectAnimation(t, i, r);
    }, e;
  }(Ve)
);
const gre = iLt;
var oLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i) {
      var o = n.call(this) || this;
      return o._createPolyline(t, r, i), o;
    }
    return e.prototype._createPolyline = function(t, r, i) {
      var o = t.getItemLayout(r), s = new Gi({
        shape: {
          points: o
        }
      });
      this.add(s), this._updateCommonStl(t, r, i);
    }, e.prototype.updateData = function(t, r, i) {
      var o = t.hostModel, s = this.childAt(0), a = {
        shape: {
          points: t.getItemLayout(r)
        }
      };
      kt(s, a, o, r), this._updateCommonStl(t, r, i);
    }, e.prototype._updateCommonStl = function(t, r, i) {
      var o = this.childAt(0), s = t.getItemModel(r), a = i && i.emphasisLineStyle, l = i && i.focus, u = i && i.blurScope, c = i && i.emphasisDisabled;
      if (!i || t.hasItemOption) {
        var h = s.getModel("emphasis");
        a = h.getModel("lineStyle").getLineStyle(), c = h.get("disabled"), l = h.get("focus"), u = h.get("blurScope");
      }
      o.useStyle(t.getItemVisual(r, "style")), o.style.fill = null, o.style.strokeNoScale = !0;
      var f = o.ensureState("emphasis");
      f.style = a, $n(this, l, u, c);
    }, e.prototype.updateLayout = function(t, r) {
      var i = this.childAt(0);
      i.setShape("points", t.getItemLayout(r));
    }, e;
  }(Ve)
);
const vre = oLt;
var sLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t._lastFrame = 0, t._lastFramePercent = 0, t;
    }
    return e.prototype.createLine = function(t, r, i) {
      return new vre(t, r, i);
    }, e.prototype._updateAnimationPoints = function(t, r) {
      this._points = r;
      for (var i = [0], o = 0, s = 1; s < r.length; s++) {
        var a = r[s - 1], l = r[s];
        o += ic(a, l), i.push(o);
      }
      if (o === 0) {
        this._length = 0;
        return;
      }
      for (var s = 0; s < i.length; s++)
        i[s] /= o;
      this._offsets = i, this._length = o;
    }, e.prototype._getLineLength = function() {
      return this._length;
    }, e.prototype._updateSymbolPosition = function(t) {
      var r = t.__t < 1 ? t.__t : 2 - t.__t, i = this._points, o = this._offsets, s = i.length;
      if (o) {
        var a = this._lastFrame, l;
        if (r < this._lastFramePercent) {
          var u = Math.min(a + 1, s - 1);
          for (l = u; l >= 0 && !(o[l] <= r); l--)
            ;
          l = Math.min(l, s - 2);
        } else {
          for (l = a; l < s && !(o[l] > r); l++)
            ;
          l = Math.min(l - 1, s - 2);
        }
        var c = (r - o[l]) / (o[l + 1] - o[l]), h = i[l], f = i[l + 1];
        t.x = h[0] * (1 - c) + c * f[0], t.y = h[1] * (1 - c) + c * f[1];
        var d = t.__t < 1 ? f[0] - h[0] : h[0] - f[0], p = t.__t < 1 ? f[1] - h[1] : h[1] - f[1];
        t.rotation = -Math.atan2(p, d) - Math.PI / 2, this._lastFrame = l, this._lastFramePercent = r, t.ignore = !1;
      }
    }, e;
  }(gre)
);
const aLt = sLt;
var lLt = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
      this.polyline = !1, this.curveness = 0, this.segs = [];
    }
    return n;
  }()
), uLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t) {
      var r = n.call(this, t) || this;
      return r._off = 0, r.hoverDataIdx = -1, r;
    }
    return e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new lLt();
    }, e.prototype.buildPath = function(t, r) {
      var i = r.segs, o = r.curveness, s;
      if (r.polyline)
        for (s = this._off; s < i.length; ) {
          var a = i[s++];
          if (a > 0) {
            t.moveTo(i[s++], i[s++]);
            for (var l = 1; l < a; l++)
              t.lineTo(i[s++], i[s++]);
          }
        }
      else
        for (s = this._off; s < i.length; ) {
          var u = i[s++], c = i[s++], h = i[s++], f = i[s++];
          if (t.moveTo(u, c), o > 0) {
            var d = (u + h) / 2 - (c - f) * o, p = (c + f) / 2 - (h - u) * o;
            t.quadraticCurveTo(d, p, h, f);
          } else
            t.lineTo(h, f);
        }
      this.incremental && (this._off = s, this.notClear = !0);
    }, e.prototype.findDataIndex = function(t, r) {
      var i = this.shape, o = i.segs, s = i.curveness, a = this.style.lineWidth;
      if (i.polyline)
        for (var l = 0, u = 0; u < o.length; ) {
          var c = o[u++];
          if (c > 0)
            for (var h = o[u++], f = o[u++], d = 1; d < c; d++) {
              var p = o[u++], g = o[u++];
              if (Gu(h, f, p, g, a, t, r))
                return l;
            }
          l++;
        }
      else
        for (var l = 0, u = 0; u < o.length; ) {
          var h = o[u++], f = o[u++], p = o[u++], g = o[u++];
          if (s > 0) {
            var v = (h + p) / 2 - (f - g) * s, m = (f + g) / 2 - (p - h) * s;
            if (kK(h, f, v, m, p, g, a, t, r))
              return l;
          } else if (Gu(h, f, p, g, a, t, r))
            return l;
          l++;
        }
      return -1;
    }, e.prototype.contain = function(t, r) {
      var i = this.transformCoordToLocal(t, r), o = this.getBoundingRect();
      if (t = i[0], r = i[1], o.contain(t, r)) {
        var s = this.hoverDataIdx = this.findDataIndex(t, r);
        return s >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var t = this._rect;
      if (!t) {
        for (var r = this.shape, i = r.segs, o = 1 / 0, s = 1 / 0, a = -1 / 0, l = -1 / 0, u = 0; u < i.length; ) {
          var c = i[u++], h = i[u++];
          o = Math.min(c, o), a = Math.max(c, a), s = Math.min(h, s), l = Math.max(h, l);
        }
        t = this._rect = new et(o, s, a, l);
      }
      return t;
    }, e;
  }(ct)
), cLt = (
  /** @class */
  function() {
    function n() {
      this.group = new Ve();
    }
    return n.prototype.updateData = function(e) {
      this._clear();
      var t = this._create();
      t.setShape({
        segs: e.getLayout("linesPoints")
      }), this._setCommon(t, e);
    }, n.prototype.incrementalPrepareUpdate = function(e) {
      this.group.removeAll(), this._clear();
    }, n.prototype.incrementalUpdate = function(e, t) {
      var r = this._newAdded[0], i = t.getLayout("linesPoints"), o = r && r.shape.segs;
      if (o && o.length < 2e4) {
        var s = o.length, a = new Float32Array(s + i.length);
        a.set(o), a.set(i, s), r.setShape({
          segs: a
        });
      } else {
        this._newAdded = [];
        var l = this._create();
        l.incremental = !0, l.setShape({
          segs: i
        }), this._setCommon(l, t), l.__startIndex = e.start;
      }
    }, n.prototype.remove = function() {
      this._clear();
    }, n.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, n.prototype._create = function() {
      var e = new uLt({
        cursor: "default",
        ignoreCoarsePointer: !0
      });
      return this._newAdded.push(e), this.group.add(e), e;
    }, n.prototype._setCommon = function(e, t, r) {
      var i = t.hostModel;
      e.setShape({
        polyline: i.get("polyline"),
        curveness: i.get(["lineStyle", "curveness"])
      }), e.useStyle(i.getModel("lineStyle").getLineStyle()), e.style.strokeNoScale = !0;
      var o = t.getVisual("style");
      o && o.stroke && e.setStyle("stroke", o.stroke), e.setStyle("fill", null);
      var s = Fe(e);
      s.seriesIndex = i.seriesIndex, e.on("mousemove", function(a) {
        s.dataIndex = null;
        var l = e.hoverDataIdx;
        l > 0 && (s.dataIndex = l + e.__startIndex);
      });
    }, n.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, n;
  }()
), hLt = {
  seriesType: "lines",
  plan: Sv(),
  reset: function(n) {
    var e = n.coordinateSystem;
    if (!e) {
      process.env.NODE_ENV !== "production" && li("The lines series must have a coordinate system.");
      return;
    }
    var t = n.get("polyline"), r = n.pipelineContext.large;
    return {
      progress: function(i, o) {
        var s = [];
        if (r) {
          var a = void 0, l = i.end - i.start;
          if (t) {
            for (var u = 0, c = i.start; c < i.end; c++)
              u += n.getLineCoordsCount(c);
            a = new Float32Array(l + u * 2);
          } else
            a = new Float32Array(l * 4);
          for (var h = 0, f = [], c = i.start; c < i.end; c++) {
            var d = n.getLineCoords(c, s);
            t && (a[h++] = d);
            for (var p = 0; p < d; p++)
              f = e.dataToPoint(s[p], !1, f), a[h++] = f[0], a[h++] = f[1];
          }
          o.setLayout("linesPoints", a);
        } else
          for (var c = i.start; c < i.end; c++) {
            var g = o.getItemModel(c), d = n.getLineCoords(c, s), v = [];
            if (t)
              for (var m = 0; m < d; m++)
                v.push(e.dataToPoint(s[m]));
            else {
              v[0] = e.dataToPoint(s[0]), v[1] = e.dataToPoint(s[1]);
              var y = g.get(["lineStyle", "curveness"]);
              +y && (v[2] = [(v[0][0] + v[1][0]) / 2 - (v[0][1] - v[1][1]) * y, (v[0][1] + v[1][1]) / 2 - (v[1][0] - v[0][0]) * y]);
            }
            o.setItemLayout(c, v);
          }
      }
    };
  }
};
const mre = hLt;
var fLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this._updateLineDraw(o, t), a = t.get("zlevel"), l = t.get(["effect", "trailLength"]), u = i.getZr(), c = u.painter.getType() === "svg";
      c || u.painter.getLayer(a).clear(!0), this._lastZlevel != null && !c && u.configLayer(this._lastZlevel, {
        motionBlur: !1
      }), this._showEffect(t) && l > 0 && (c ? process.env.NODE_ENV !== "production" && console.warn("SVG render mode doesn't support lines with trail effect") : u.configLayer(a, {
        motionBlur: !0,
        lastFrameAlpha: Math.max(Math.min(l / 10 + 0.9, 1), 0)
      })), s.updateData(o);
      var h = t.get("clip", !0) && Lb(t.coordinateSystem, !1, t);
      h ? this.group.setClipPath(h) : this.group.removeClipPath(), this._lastZlevel = a, this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      var o = t.getData(), s = this._updateLineDraw(o, t);
      s.incrementalPrepareUpdate(o), this._clearLayer(i), this._finished = !1;
    }, e.prototype.incrementalRender = function(t, r, i) {
      this._lineDraw.incrementalUpdate(t, r.getData()), this._finished = t.end === r.getData().count();
    }, e.prototype.eachRendered = function(t) {
      this._lineDraw && this._lineDraw.eachRendered(t);
    }, e.prototype.updateTransform = function(t, r, i) {
      var o = t.getData(), s = t.pipelineContext;
      if (!this._finished || s.large || s.progressiveRender)
        return {
          update: !0
        };
      var a = mre.reset(t, r, i);
      a.progress && a.progress({
        start: 0,
        end: o.count(),
        count: o.count()
      }, o), this._lineDraw.updateLayout(), this._clearLayer(i);
    }, e.prototype._updateLineDraw = function(t, r) {
      var i = this._lineDraw, o = this._showEffect(r), s = !!r.get("polyline"), a = r.pipelineContext, l = a.large;
      return process.env.NODE_ENV !== "production" && o && l && console.warn("Large lines not support effect"), (!i || o !== this._hasEffet || s !== this._isPolyline || l !== this._isLargeDraw) && (i && i.remove(), i = this._lineDraw = l ? new cLt() : new o$(s ? o ? aLt : vre : o ? gre : i$), this._hasEffet = o, this._isPolyline = s, this._isLargeDraw = l), this.group.add(i.group), i;
    }, e.prototype._showEffect = function(t) {
      return !!t.get(["effect", "show"]);
    }, e.prototype._clearLayer = function(t) {
      var r = t.getZr(), i = r.painter.getType() === "svg";
      !i && this._lastZlevel != null && r.painter.getLayer(this._lastZlevel).clear(!0);
    }, e.prototype.remove = function(t, r) {
      this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(r);
    }, e.prototype.dispose = function(t, r) {
      this.remove(t, r);
    }, e.type = "lines", e;
  }(dn)
);
const dLt = fLt;
var pLt = typeof Uint32Array > "u" ? Array : Uint32Array, gLt = typeof Float64Array > "u" ? Array : Float64Array;
function sQ(n) {
  var e = n.data;
  e && e[0] && e[0][0] && e[0][0].coord && (process.env.NODE_ENV !== "production" && console.warn("Lines data configuration has been changed to { coords:[[1,2],[2,3]] }"), n.data = ae(e, function(t) {
    var r = [t[0].coord, t[1].coord], i = {
      coords: r
    };
    return t[0].name && (i.fromName = t[0].name), t[1].name && (i.toName = t[1].name), MI([i, t[0], t[1]]);
  }));
}
var vLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
    }
    return e.prototype.init = function(t) {
      t.data = t.data || [], sQ(t);
      var r = this._processFlatCoordsArray(t.data);
      this._flatCoords = r.flatCoords, this._flatCoordsOffset = r.flatCoordsOffset, r.flatCoords && (t.data = new Float32Array(r.count)), n.prototype.init.apply(this, arguments);
    }, e.prototype.mergeOption = function(t) {
      if (sQ(t), t.data) {
        var r = this._processFlatCoordsArray(t.data);
        this._flatCoords = r.flatCoords, this._flatCoordsOffset = r.flatCoordsOffset, r.flatCoords && (t.data = new Float32Array(r.count));
      }
      n.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.appendData = function(t) {
      var r = this._processFlatCoordsArray(t.data);
      r.flatCoords && (this._flatCoords ? (this._flatCoords = Bx(this._flatCoords, r.flatCoords), this._flatCoordsOffset = Bx(this._flatCoordsOffset, r.flatCoordsOffset)) : (this._flatCoords = r.flatCoords, this._flatCoordsOffset = r.flatCoordsOffset), t.data = new Float32Array(r.count)), this.getRawData().appendData(t.data);
    }, e.prototype._getCoordsFromItemModel = function(t) {
      var r = this.getData().getItemModel(t), i = r.option instanceof Array ? r.option : r.getShallow("coords");
      if (process.env.NODE_ENV !== "production" && !(i instanceof Array && i.length > 0 && i[0] instanceof Array))
        throw new Error("Invalid coords " + JSON.stringify(i) + ". Lines must have 2d coords array in data item.");
      return i;
    }, e.prototype.getLineCoordsCount = function(t) {
      return this._flatCoordsOffset ? this._flatCoordsOffset[t * 2 + 1] : this._getCoordsFromItemModel(t).length;
    }, e.prototype.getLineCoords = function(t, r) {
      if (this._flatCoordsOffset) {
        for (var i = this._flatCoordsOffset[t * 2], o = this._flatCoordsOffset[t * 2 + 1], s = 0; s < o; s++)
          r[s] = r[s] || [], r[s][0] = this._flatCoords[i + s * 2], r[s][1] = this._flatCoords[i + s * 2 + 1];
        return o;
      } else {
        for (var a = this._getCoordsFromItemModel(t), s = 0; s < a.length; s++)
          r[s] = r[s] || [], r[s][0] = a[s][0], r[s][1] = a[s][1];
        return a.length;
      }
    }, e.prototype._processFlatCoordsArray = function(t) {
      var r = 0;
      if (this._flatCoords && (r = this._flatCoords.length), Tt(t[0])) {
        for (var i = t.length, o = new pLt(i), s = new gLt(i), a = 0, l = 0, u = 0, c = 0; c < i; ) {
          u++;
          var h = t[c++];
          o[l++] = a + r, o[l++] = h;
          for (var f = 0; f < h; f++) {
            var d = t[c++], p = t[c++];
            if (s[a++] = d, s[a++] = p, c > i && process.env.NODE_ENV !== "production")
              throw new Error("Invalid data format.");
          }
        }
        return {
          flatCoordsOffset: new Uint32Array(o.buffer, 0, l),
          flatCoords: s,
          count: u
        };
      }
      return {
        flatCoordsOffset: null,
        flatCoords: null,
        count: t.length
      };
    }, e.prototype.getInitialData = function(t, r) {
      if (process.env.NODE_ENV !== "production") {
        var i = xv.get(t.coordinateSystem);
        if (!i)
          throw new Error("Unknown coordinate system " + t.coordinateSystem);
      }
      var o = new Bi(["value"], this);
      return o.hasItemOption = !1, o.initData(t.data, [], function(s, a, l, u) {
        if (s instanceof Array)
          return NaN;
        o.hasItemOption = !0;
        var c = s.value;
        if (c != null)
          return c instanceof Array ? c[u] : c;
      }), o;
    }, e.prototype.formatTooltip = function(t, r, i) {
      var o = this.getData(), s = o.getItemModel(t), a = s.get("name");
      if (a)
        return a;
      var l = s.get("fromName"), u = s.get("toName"), c = [];
      return l != null && c.push(l), u != null && c.push(u), Mr("nameValue", {
        name: c.join(" > ")
      });
    }, e.prototype.preventIncremental = function() {
      return !!this.get(["effect", "show"]);
    }, e.prototype.getProgressive = function() {
      var t = this.option.progressive;
      return t ?? (this.option.large ? 1e4 : this.get("progressive"));
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.option.progressiveThreshold;
      return t ?? (this.option.large ? 2e4 : this.get("progressiveThreshold"));
    }, e.prototype.getZLevelKey = function() {
      var t = this.getModel("effect"), r = t.get("trailLength");
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : t.get("show") && r > 0 ? r + "" : "";
    }, e.type = "series.lines", e.dependencies = ["grid", "polar", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "geo",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Cartesian coordinate system
      xAxisIndex: 0,
      yAxisIndex: 0,
      symbol: ["none", "none"],
      symbolSize: [10, 10],
      // Geo coordinate system
      geoIndex: 0,
      effect: {
        show: !1,
        period: 4,
        constantSpeed: 0,
        symbol: "circle",
        symbolSize: 3,
        loop: !0,
        trailLength: 0.2
      },
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      polyline: !1,
      clip: !0,
      label: {
        show: !1,
        position: "end"
        // distance: 5,
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      lineStyle: {
        opacity: 0.5
      }
    }, e;
  }(Sn)
);
const mLt = vLt;
function TO(n) {
  return n instanceof Array || (n = [n, n]), n;
}
var yLt = {
  seriesType: "lines",
  reset: function(n) {
    var e = TO(n.get("symbol")), t = TO(n.get("symbolSize")), r = n.getData();
    r.setVisual("fromSymbol", e && e[0]), r.setVisual("toSymbol", e && e[1]), r.setVisual("fromSymbolSize", t && t[0]), r.setVisual("toSymbolSize", t && t[1]);
    function i(o, s) {
      var a = o.getItemModel(s), l = TO(a.getShallow("symbol", !0)), u = TO(a.getShallow("symbolSize", !0));
      l[0] && o.setItemVisual(s, "fromSymbol", l[0]), l[1] && o.setItemVisual(s, "toSymbol", l[1]), u[0] && o.setItemVisual(s, "fromSymbolSize", u[0]), u[1] && o.setItemVisual(s, "toSymbolSize", u[1]);
    }
    return {
      dataEach: r.hasItemOption ? i : null
    };
  }
};
const bLt = yLt;
function OLt(n) {
  n.registerChartView(dLt), n.registerSeriesModel(mLt), n.registerLayout(mre), n.registerVisual(bLt);
}
var wLt = 256, xLt = (
  /** @class */
  function() {
    function n() {
      this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {
        inRange: null,
        outOfRange: null
      };
      var e = $c.createCanvas();
      this.canvas = e;
    }
    return n.prototype.update = function(e, t, r, i, o, s) {
      var a = this._getBrush(), l = this._getGradient(o, "inRange"), u = this._getGradient(o, "outOfRange"), c = this.pointSize + this.blurSize, h = this.canvas, f = h.getContext("2d"), d = e.length;
      h.width = t, h.height = r;
      for (var p = 0; p < d; ++p) {
        var g = e[p], v = g[0], m = g[1], y = g[2], b = i(y);
        f.globalAlpha = b, f.drawImage(a, v - c, m - c);
      }
      if (!h.width || !h.height)
        return h;
      for (var O = f.getImageData(0, 0, h.width, h.height), w = O.data, x = 0, S = w.length, _ = this.minOpacity, C = this.maxOpacity, A = C - _; x < S; ) {
        var b = w[x + 3] / 256, T = Math.floor(b * (wLt - 1)) * 4;
        if (b > 0) {
          var k = s(b) ? l : u;
          b > 0 && (b = b * A + _), w[x++] = k[T], w[x++] = k[T + 1], w[x++] = k[T + 2], w[x++] = k[T + 3] * b * 256;
        } else
          x += 4;
      }
      return f.putImageData(O, 0, 0), h;
    }, n.prototype._getBrush = function() {
      var e = this._brushCanvas || (this._brushCanvas = $c.createCanvas()), t = this.pointSize + this.blurSize, r = t * 2;
      e.width = r, e.height = r;
      var i = e.getContext("2d");
      return i.clearRect(0, 0, r, r), i.shadowOffsetX = r, i.shadowBlur = this.blurSize, i.shadowColor = "#000", i.beginPath(), i.arc(-t, t, this.pointSize, 0, Math.PI * 2, !0), i.closePath(), i.fill(), e;
    }, n.prototype._getGradient = function(e, t) {
      for (var r = this._gradientPixels, i = r[t] || (r[t] = new Uint8ClampedArray(256 * 4)), o = [0, 0, 0, 0], s = 0, a = 0; a < 256; a++)
        e[t](a / 255, !0, o), i[s++] = o[0], i[s++] = o[1], i[s++] = o[2], i[s++] = o[3];
      return i;
    }, n;
  }()
);
const SLt = xLt;
function _Lt(n, e, t) {
  var r = n[1] - n[0];
  e = ae(e, function(s) {
    return {
      interval: [(s.interval[0] - n[0]) / r, (s.interval[1] - n[0]) / r]
    };
  });
  var i = e.length, o = 0;
  return function(s) {
    var a;
    for (a = o; a < i; a++) {
      var l = e[a].interval;
      if (l[0] <= s && s <= l[1]) {
        o = a;
        break;
      }
    }
    if (a === i)
      for (a = o - 1; a >= 0; a--) {
        var l = e[a].interval;
        if (l[0] <= s && s <= l[1]) {
          o = a;
          break;
        }
      }
    return a >= 0 && a < i && t[a];
  };
}
function CLt(n, e) {
  var t = n[1] - n[0];
  return e = [(e[0] - n[0]) / t, (e[1] - n[0]) / t], function(r) {
    return r >= e[0] && r <= e[1];
  };
}
function aQ(n) {
  var e = n.dimensions;
  return e[0] === "lng" && e[1] === "lat";
}
var ALt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o;
      if (r.eachComponent("visualMap", function(a) {
        a.eachTargetSeries(function(l) {
          l === t && (o = a);
        });
      }), process.env.NODE_ENV !== "production" && !o)
        throw new Error("Heatmap must use with visualMap");
      this._progressiveEls = null, this.group.removeAll();
      var s = t.coordinateSystem;
      s.type === "cartesian2d" || s.type === "calendar" ? this._renderOnCartesianAndCalendar(t, i, 0, t.getData().count()) : aQ(s) && this._renderOnGeo(s, t, o, i);
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      this.group.removeAll();
    }, e.prototype.incrementalRender = function(t, r, i, o) {
      var s = r.coordinateSystem;
      s && (aQ(s) ? this.render(r, i, o) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(r, o, t.start, t.end, !0)));
    }, e.prototype.eachRendered = function(t) {
      ih(this._progressiveEls || this.group, t);
    }, e.prototype._renderOnCartesianAndCalendar = function(t, r, i, o, s) {
      var a = t.coordinateSystem, l = xd(a, "cartesian2d"), u, c, h, f;
      if (l) {
        var d = a.getAxis("x"), p = a.getAxis("y");
        if (process.env.NODE_ENV !== "production") {
          if (!(d.type === "category" && p.type === "category"))
            throw new Error("Heatmap on cartesian must have two category axes");
          if (!(d.onBand && p.onBand))
            throw new Error("Heatmap on cartesian must have two axes with boundaryGap true");
        }
        u = d.getBandWidth() + 0.5, c = p.getBandWidth() + 0.5, h = d.scale.getExtent(), f = p.scale.getExtent();
      }
      for (var g = this.group, v = t.getData(), m = t.getModel(["emphasis", "itemStyle"]).getItemStyle(), y = t.getModel(["blur", "itemStyle"]).getItemStyle(), b = t.getModel(["select", "itemStyle"]).getItemStyle(), O = t.get(["itemStyle", "borderRadius"]), w = kr(t), x = t.getModel("emphasis"), S = x.get("focus"), _ = x.get("blurScope"), C = x.get("disabled"), A = l ? [v.mapDimension("x"), v.mapDimension("y"), v.mapDimension("value")] : [v.mapDimension("time"), v.mapDimension("value")], T = i; T < o; T++) {
        var k = void 0, L = v.getItemVisual(T, "style");
        if (l) {
          var D = v.get(A[0], T), E = v.get(A[1], T);
          if (isNaN(v.get(A[2], T)) || isNaN(D) || isNaN(E) || D < h[0] || D > h[1] || E < f[0] || E > f[1])
            continue;
          var M = a.dataToPoint([D, E]);
          k = new _t({
            shape: {
              x: M[0] - u / 2,
              y: M[1] - c / 2,
              width: u,
              height: c
            },
            style: L
          });
        } else {
          if (isNaN(v.get(A[1], T)))
            continue;
          k = new _t({
            z2: 1,
            shape: a.dataToRect([v.get(A[0], T)]).contentShape,
            style: L
          });
        }
        if (v.hasItemOption) {
          var R = v.getItemModel(T), N = R.getModel("emphasis");
          m = N.getModel("itemStyle").getItemStyle(), y = R.getModel(["blur", "itemStyle"]).getItemStyle(), b = R.getModel(["select", "itemStyle"]).getItemStyle(), O = R.get(["itemStyle", "borderRadius"]), S = N.get("focus"), _ = N.get("blurScope"), C = N.get("disabled"), w = kr(R);
        }
        k.shape.r = O;
        var $ = t.getRawValue(T), V = "-";
        $ && $[2] != null && (V = $[2] + ""), ci(k, w, {
          labelFetcher: t,
          labelDataIndex: T,
          defaultOpacity: L.opacity,
          defaultText: V
        }), k.ensureState("emphasis").style = m, k.ensureState("blur").style = y, k.ensureState("select").style = b, $n(k, S, _, C), k.incremental = s, s && (k.states.emphasis.hoverLayer = !0), g.add(k), v.setItemGraphicEl(T, k), this._progressiveEls && this._progressiveEls.push(k);
      }
    }, e.prototype._renderOnGeo = function(t, r, i, o) {
      var s = i.targetVisuals.inRange, a = i.targetVisuals.outOfRange, l = r.getData(), u = this._hmLayer || this._hmLayer || new SLt();
      u.blurSize = r.get("blurSize"), u.pointSize = r.get("pointSize"), u.minOpacity = r.get("minOpacity"), u.maxOpacity = r.get("maxOpacity");
      var c = t.getViewRect().clone(), h = t.getRoamTransform();
      c.applyTransform(h);
      var f = Math.max(c.x, 0), d = Math.max(c.y, 0), p = Math.min(c.width + c.x, o.getWidth()), g = Math.min(c.height + c.y, o.getHeight()), v = p - f, m = g - d, y = [l.mapDimension("lng"), l.mapDimension("lat"), l.mapDimension("value")], b = l.mapArray(y, function(S, _, C) {
        var A = t.dataToPoint([S, _]);
        return A[0] -= f, A[1] -= d, A.push(C), A;
      }), O = i.getExtent(), w = i.type === "visualMap.continuous" ? CLt(O, i.option.range) : _Lt(O, i.getPieceList(), i.option.selected);
      u.update(b, v, m, s.color.getNormalizer(), {
        inRange: s.color.getColorMapper(),
        outOfRange: a.color.getColorMapper()
      }, w);
      var x = new fi({
        style: {
          width: v,
          height: m,
          x: f,
          y: d,
          image: u.canvas
        },
        silent: !0
      });
      this.group.add(x);
    }, e.type = "heatmap", e;
  }(dn)
);
const TLt = ALt;
var PLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      return yu(null, this, {
        generateCoord: "value"
      });
    }, e.prototype.preventIncremental = function() {
      var t = xv.get(this.get("coordinateSystem"));
      if (t && t.dimensions)
        return t.dimensions[0] === "lng" && t.dimensions[1] === "lat";
    }, e.type = "series.heatmap", e.dependencies = ["grid", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Geo coordinate system
      geoIndex: 0,
      blurSize: 30,
      pointSize: 20,
      maxOpacity: 1,
      minOpacity: 0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Sn)
);
const ELt = PLt;
function kLt(n) {
  n.registerChartView(TLt), n.registerSeriesModel(ELt);
}
var MLt = ["itemStyle", "borderWidth"], lQ = [{
  xy: "x",
  wh: "width",
  index: 0,
  posDesc: ["left", "right"]
}, {
  xy: "y",
  wh: "height",
  index: 1,
  posDesc: ["top", "bottom"]
}], jT = new rh(), DLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = this.group, s = t.getData(), a = this._data, l = t.coordinateSystem, u = l.getBaseAxis(), c = u.isHorizontal(), h = l.master.getRect(), f = {
        ecSize: {
          width: i.getWidth(),
          height: i.getHeight()
        },
        seriesModel: t,
        coordSys: l,
        coordSysExtent: [[h.x, h.x + h.width], [h.y, h.y + h.height]],
        isHorizontal: c,
        valueDim: lQ[+c],
        categoryDim: lQ[1 - +c]
      };
      s.diff(a).add(function(p) {
        if (s.hasValue(p)) {
          var g = cQ(s, p), v = uQ(s, p, g, f), m = hQ(s, f, v);
          s.setItemGraphicEl(p, m), o.add(m), dQ(m, f, v);
        }
      }).update(function(p, g) {
        var v = a.getItemGraphicEl(g);
        if (!s.hasValue(p)) {
          o.remove(v);
          return;
        }
        var m = cQ(s, p), y = uQ(s, p, m, f), b = Sre(s, y);
        v && b !== v.__pictorialShapeStr && (o.remove(v), s.setItemGraphicEl(p, null), v = null), v ? VLt(v, f, y) : v = hQ(s, f, y, !0), s.setItemGraphicEl(p, v), v.__pictorialSymbolMeta = y, o.add(v), dQ(v, f, y);
      }).remove(function(p) {
        var g = a.getItemGraphicEl(p);
        g && fQ(a, p, g.__pictorialSymbolMeta.animationModel, g);
      }).execute();
      var d = t.get("clip", !0) ? Lb(t.coordinateSystem, !1, t) : null;
      return d ? o.setClipPath(d) : o.removeClipPath(), this._data = s, this.group;
    }, e.prototype.remove = function(t, r) {
      var i = this.group, o = this._data;
      t.get("animation") ? o && o.eachItemGraphicEl(function(s) {
        fQ(o, Fe(s).dataIndex, t, s);
      }) : i.removeAll();
    }, e.type = "pictorialBar", e;
  }(dn)
);
function uQ(n, e, t, r) {
  var i = n.getItemLayout(e), o = t.get("symbolRepeat"), s = t.get("symbolClip"), a = t.get("symbolPosition") || "start", l = t.get("symbolRotate"), u = (l || 0) * Math.PI / 180 || 0, c = t.get("symbolPatternSize") || 2, h = t.isAnimationEnabled(), f = {
    dataIndex: e,
    layout: i,
    itemModel: t,
    symbolType: n.getItemVisual(e, "symbol") || "circle",
    style: n.getItemVisual(e, "style"),
    symbolClip: s,
    symbolRepeat: o,
    symbolRepeatDirection: t.get("symbolRepeatDirection"),
    symbolPatternSize: c,
    rotation: u,
    animationModel: h ? t : null,
    hoverScale: h && t.get(["emphasis", "scale"]),
    z2: t.getShallow("z", !0) || 0
  };
  LLt(t, o, i, r, f), ILt(n, e, i, o, s, f.boundingLength, f.pxSign, c, r, f), RLt(t, f.symbolScale, u, r, f);
  var d = f.symbolSize, p = Od(t.get("symbolOffset"), d);
  return $Lt(t, d, i, o, s, p, a, f.valueLineWidth, f.boundingLength, f.repeatCutLength, r, f), f;
}
function LLt(n, e, t, r, i) {
  var o = r.valueDim, s = n.get("symbolBoundingData"), a = r.coordSys.getOtherAxis(r.coordSys.getBaseAxis()), l = a.toGlobalCoord(a.dataToCoord(0)), u = 1 - +(t[o.wh] <= 0), c;
  if (oe(s)) {
    var h = [HT(a, s[0]) - l, HT(a, s[1]) - l];
    h[1] < h[0] && h.reverse(), c = h[u];
  } else
    s != null ? c = HT(a, s) - l : e ? c = r.coordSysExtent[o.index][u] - l : c = t[o.wh];
  i.boundingLength = c, e && (i.repeatCutLength = t[o.wh]), i.pxSign = c > 0 ? 1 : -1;
}
function HT(n, e) {
  return n.toGlobalCoord(n.dataToCoord(n.scale.parse(e)));
}
function ILt(n, e, t, r, i, o, s, a, l, u) {
  var c = l.valueDim, h = l.categoryDim, f = Math.abs(t[h.wh]), d = n.getItemVisual(e, "symbolSize"), p;
  oe(d) ? p = d.slice() : d == null ? p = ["100%", "100%"] : p = [d, d], p[h.index] = fe(p[h.index], f), p[c.index] = fe(p[c.index], r ? f : Math.abs(o)), u.symbolSize = p;
  var g = u.symbolScale = [p[0] / a, p[1] / a];
  g[c.index] *= (l.isHorizontal ? -1 : 1) * s;
}
function RLt(n, e, t, r, i) {
  var o = n.get(MLt) || 0;
  o && (jT.attr({
    scaleX: e[0],
    scaleY: e[1],
    rotation: t
  }), jT.updateTransform(), o /= jT.getLineScale(), o *= e[r.valueDim.index]), i.valueLineWidth = o || 0;
}
function $Lt(n, e, t, r, i, o, s, a, l, u, c, h) {
  var f = c.categoryDim, d = c.valueDim, p = h.pxSign, g = Math.max(e[d.index] + a, 0), v = g;
  if (r) {
    var m = Math.abs(l), y = tr(n.get("symbolMargin"), "15%") + "", b = !1;
    y.lastIndexOf("!") === y.length - 1 && (b = !0, y = y.slice(0, y.length - 1));
    var O = fe(y, e[d.index]), w = Math.max(g + O * 2, 0), x = b ? 0 : O * 2, S = FI(r), _ = S ? r : pQ((m + x) / w), C = m - _ * g;
    O = C / 2 / (b ? _ : Math.max(_ - 1, 1)), w = g + O * 2, x = b ? 0 : O * 2, !S && r !== "fixed" && (_ = u ? pQ((Math.abs(u) + x) / w) : 0), v = _ * w - x, h.repeatTimes = _, h.symbolMargin = O;
  }
  var A = p * (v / 2), T = h.pathPosition = [];
  T[f.index] = t[f.wh] / 2, T[d.index] = s === "start" ? A : s === "end" ? l - A : l / 2, o && (T[0] += o[0], T[1] += o[1]);
  var k = h.bundlePosition = [];
  k[f.index] = t[f.xy], k[d.index] = t[d.xy];
  var L = h.barRectShape = te({}, t);
  L[d.wh] = p * Math.max(Math.abs(t[d.wh]), Math.abs(T[d.index] + A)), L[f.wh] = t[f.wh];
  var D = h.clipShape = {};
  D[f.xy] = -t[f.xy], D[f.wh] = c.ecSize[f.wh], D[d.xy] = 0, D[d.wh] = t[d.wh];
}
function yre(n) {
  var e = n.symbolPatternSize, t = ar(
    // Consider texture img, make a big size.
    n.symbolType,
    -e / 2,
    -e / 2,
    e,
    e
  );
  return t.attr({
    culling: !0
  }), t.type !== "image" && t.setStyle({
    strokeNoScale: !0
  }), t;
}
function bre(n, e, t, r) {
  var i = n.__pictorialBundle, o = t.symbolSize, s = t.valueLineWidth, a = t.pathPosition, l = e.valueDim, u = t.repeatTimes || 0, c = 0, h = o[e.valueDim.index] + s + t.symbolMargin * 2;
  for (d$(n, function(g) {
    g.__pictorialAnimationIndex = c, g.__pictorialRepeatTimes = u, c < u ? Vp(g, null, p(c), t, r) : Vp(g, null, {
      scaleX: 0,
      scaleY: 0
    }, t, r, function() {
      i.remove(g);
    }), c++;
  }); c < u; c++) {
    var f = yre(t);
    f.__pictorialAnimationIndex = c, f.__pictorialRepeatTimes = u, i.add(f);
    var d = p(c);
    Vp(f, {
      x: d.x,
      y: d.y,
      scaleX: 0,
      scaleY: 0
    }, {
      scaleX: d.scaleX,
      scaleY: d.scaleY,
      rotation: d.rotation
    }, t, r);
  }
  function p(g) {
    var v = a.slice(), m = t.pxSign, y = g;
    return (t.symbolRepeatDirection === "start" ? m > 0 : m < 0) && (y = u - 1 - g), v[l.index] = h * (y - u / 2 + 0.5) + a[l.index], {
      x: v[0],
      y: v[1],
      scaleX: t.symbolScale[0],
      scaleY: t.symbolScale[1],
      rotation: t.rotation
    };
  }
}
function Ore(n, e, t, r) {
  var i = n.__pictorialBundle, o = n.__pictorialMainPath;
  o ? Vp(o, null, {
    x: t.pathPosition[0],
    y: t.pathPosition[1],
    scaleX: t.symbolScale[0],
    scaleY: t.symbolScale[1],
    rotation: t.rotation
  }, t, r) : (o = n.__pictorialMainPath = yre(t), i.add(o), Vp(o, {
    x: t.pathPosition[0],
    y: t.pathPosition[1],
    scaleX: 0,
    scaleY: 0,
    rotation: t.rotation
  }, {
    scaleX: t.symbolScale[0],
    scaleY: t.symbolScale[1]
  }, t, r));
}
function wre(n, e, t) {
  var r = te({}, e.barRectShape), i = n.__pictorialBarRect;
  i ? Vp(i, null, {
    shape: r
  }, e, t) : (i = n.__pictorialBarRect = new _t({
    z2: 2,
    shape: r,
    silent: !0,
    style: {
      stroke: "transparent",
      fill: "transparent",
      lineWidth: 0
    }
  }), i.disableMorphing = !0, n.add(i));
}
function xre(n, e, t, r) {
  if (t.symbolClip) {
    var i = n.__pictorialClipPath, o = te({}, t.clipShape), s = e.valueDim, a = t.animationModel, l = t.dataIndex;
    if (i)
      kt(i, {
        shape: o
      }, a, l);
    else {
      o[s.wh] = 0, i = new _t({
        shape: o
      }), n.__pictorialBundle.setClipPath(i), n.__pictorialClipPath = i;
      var u = {};
      u[s.wh] = t.clipShape[s.wh], yd[r ? "updateProps" : "initProps"](i, {
        shape: u
      }, a, l);
    }
  }
}
function cQ(n, e) {
  var t = n.getItemModel(e);
  return t.getAnimationDelayParams = NLt, t.isAnimationEnabled = BLt, t;
}
function NLt(n) {
  return {
    index: n.__pictorialAnimationIndex,
    count: n.__pictorialRepeatTimes
  };
}
function BLt() {
  return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
}
function hQ(n, e, t, r) {
  var i = new Ve(), o = new Ve();
  return i.add(o), i.__pictorialBundle = o, o.x = t.bundlePosition[0], o.y = t.bundlePosition[1], t.symbolRepeat ? bre(i, e, t) : Ore(i, e, t), wre(i, t, r), xre(i, e, t, r), i.__pictorialShapeStr = Sre(n, t), i.__pictorialSymbolMeta = t, i;
}
function VLt(n, e, t) {
  var r = t.animationModel, i = t.dataIndex, o = n.__pictorialBundle;
  kt(o, {
    x: t.bundlePosition[0],
    y: t.bundlePosition[1]
  }, r, i), t.symbolRepeat ? bre(n, e, t, !0) : Ore(n, e, t, !0), wre(n, t, !0), xre(n, e, t, !0);
}
function fQ(n, e, t, r) {
  var i = r.__pictorialBarRect;
  i && i.removeTextContent();
  var o = [];
  d$(r, function(s) {
    o.push(s);
  }), r.__pictorialMainPath && o.push(r.__pictorialMainPath), r.__pictorialClipPath && (t = null), I(o, function(s) {
    Vc(s, {
      scaleX: 0,
      scaleY: 0
    }, t, e, function() {
      r.parent && r.parent.remove(r);
    });
  }), n.setItemGraphicEl(e, null);
}
function Sre(n, e) {
  return [n.getItemVisual(e.dataIndex, "symbol") || "none", !!e.symbolRepeat, !!e.symbolClip].join(":");
}
function d$(n, e, t) {
  I(n.__pictorialBundle.children(), function(r) {
    r !== n.__pictorialBarRect && e.call(t, r);
  });
}
function Vp(n, e, t, r, i, o) {
  e && n.attr(e), r.symbolClip && !i ? t && n.attr(t) : t && yd[i ? "updateProps" : "initProps"](n, t, r.animationModel, r.dataIndex, o);
}
function dQ(n, e, t) {
  var r = t.dataIndex, i = t.itemModel, o = i.getModel("emphasis"), s = o.getModel("itemStyle").getItemStyle(), a = i.getModel(["blur", "itemStyle"]).getItemStyle(), l = i.getModel(["select", "itemStyle"]).getItemStyle(), u = i.getShallow("cursor"), c = o.get("focus"), h = o.get("blurScope"), f = o.get("scale");
  d$(n, function(g) {
    if (g instanceof fi) {
      var v = g.style;
      g.useStyle(te({
        // TODO other properties like dx, dy ?
        image: v.image,
        x: v.x,
        y: v.y,
        width: v.width,
        height: v.height
      }, t.style));
    } else
      g.useStyle(t.style);
    var m = g.ensureState("emphasis");
    m.style = s, f && (m.scaleX = g.scaleX * 1.1, m.scaleY = g.scaleY * 1.1), g.ensureState("blur").style = a, g.ensureState("select").style = l, u && (g.cursor = u), g.z2 = t.z2;
  });
  var d = e.valueDim.posDesc[+(t.boundingLength > 0)], p = n.__pictorialBarRect;
  p.ignoreClip = !0, ci(p, kr(i), {
    labelFetcher: e.seriesModel,
    labelDataIndex: r,
    defaultText: $g(e.seriesModel.getData(), r),
    inheritColor: t.style.fill,
    defaultOpacity: t.style.opacity,
    defaultOutsidePosition: d
  }), $n(n, c, h, o.get("disabled"));
}
function pQ(n) {
  var e = Math.round(n);
  return Math.abs(n - e) < 1e-4 ? e : Math.ceil(n);
}
const zLt = DLt;
var FLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t.defaultSymbol = "roundRect", t;
    }
    return e.prototype.getInitialData = function(t) {
      return t.stack = null, n.prototype.getInitialData.apply(this, arguments);
    }, e.type = "series.pictorialBar", e.dependencies = ["grid"], e.defaultOption = oh(M0.defaultOption, {
      symbol: "circle",
      symbolSize: null,
      symbolRotate: null,
      symbolPosition: null,
      symbolOffset: null,
      symbolMargin: null,
      symbolRepeat: !1,
      symbolRepeatDirection: "end",
      symbolClip: !1,
      symbolBoundingData: null,
      symbolPatternSize: 400,
      barGap: "-100%",
      // Pictorial bar do not clip by default because in many cases
      // xAxis and yAxis are not displayed and it's expected not to clip
      clip: !1,
      // z can be set in data item, which is z2 actually.
      // Disable progressive
      progressive: 0,
      emphasis: {
        // By default pictorialBar do not hover scale. Hover scale is not suitable
        // for the case that both has foreground and background.
        scale: !1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }), e;
  }(M0)
);
const QLt = FLt;
function ZLt(n) {
  n.registerChartView(zLt), n.registerSeriesModel(QLt), n.registerLayout(n.PRIORITY.VISUAL.LAYOUT, je(ite, "pictorialBar")), n.registerLayout(n.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, ote("pictorialBar"));
}
var WLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._layers = [], t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = t.getData(), s = this, a = this.group, l = t.getLayerSeries(), u = o.getLayout("layoutInfo"), c = u.rect, h = u.boundaryGap;
      a.x = 0, a.y = c.y + h[0];
      function f(v) {
        return v.name;
      }
      var d = new lu(this._layersSeries || [], l, f, f), p = [];
      d.add(Oe(g, this, "add")).update(Oe(g, this, "update")).remove(Oe(g, this, "remove")).execute();
      function g(v, m, y) {
        var b = s._layers;
        if (v === "remove") {
          a.remove(b[m]);
          return;
        }
        for (var O = [], w = [], x, S = l[m].indices, _ = 0; _ < S.length; _++) {
          var C = o.getItemLayout(S[_]), A = C.x, T = C.y0, k = C.y;
          O.push(A, T), w.push(A, T + k), x = o.getItemVisual(S[_], "style");
        }
        var L, D = o.getItemLayout(S[0]), E = t.getModel("label"), M = E.get("margin"), R = t.getModel("emphasis");
        if (v === "add") {
          var N = p[m] = new Ve();
          L = new qte({
            shape: {
              points: O,
              stackedOnPoints: w,
              smooth: 0.4,
              stackedOnSmooth: 0.4,
              smoothConstraint: !1
            },
            z2: 0
          }), N.add(L), a.add(N), t.isAnimationEnabled() && L.setClipPath(GLt(L.getBoundingRect(), t, function() {
            L.removeClipPath();
          }));
        } else {
          var N = b[y];
          L = N.childAt(0), a.add(N), p[m] = N, kt(L, {
            shape: {
              points: O,
              stackedOnPoints: w
            }
          }, t), ua(L);
        }
        ci(L, kr(t), {
          labelDataIndex: S[_ - 1],
          defaultText: o.getName(S[_ - 1]),
          inheritColor: x.fill
        }, {
          normal: {
            verticalAlign: "middle"
            // align: 'right'
          }
        }), L.setTextConfig({
          position: null,
          local: !0
        });
        var $ = L.getTextContent();
        $ && ($.x = D.x - M, $.y = D.y0 + D.y / 2), L.useStyle(x), o.setItemGraphicEl(m, L), ui(L, t), $n(L, R.get("focus"), R.get("blurScope"), R.get("disabled"));
      }
      this._layersSeries = l, this._layers = p;
    }, e.type = "themeRiver", e;
  }(dn)
);
function GLt(n, e, t) {
  var r = new _t({
    shape: {
      x: n.x - 10,
      y: n.y - 10,
      width: 0,
      height: n.height + 20
    }
  });
  return vn(r, {
    shape: {
      x: n.x - 50,
      width: n.width + 100,
      height: n.height + 20
    }
  }, e, t), r;
}
const jLt = WLt;
var qT = 2, HLt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t) {
      n.prototype.init.apply(this, arguments), this.legendVisualProvider = new $b(Oe(this.getData, this), Oe(this.getRawData, this));
    }, e.prototype.fixData = function(t) {
      var r = t.length, i = {}, o = Kk(t, function(f) {
        return i.hasOwnProperty(f[0] + "") || (i[f[0] + ""] = -1), f[2];
      }), s = [];
      o.buckets.each(function(f, d) {
        s.push({
          name: d,
          dataList: f
        });
      });
      for (var a = s.length, l = 0; l < a; ++l) {
        for (var u = s[l].name, c = 0; c < s[l].dataList.length; ++c) {
          var h = s[l].dataList[c][0] + "";
          i[h] = l;
        }
        for (var h in i)
          i.hasOwnProperty(h) && i[h] !== l && (i[h] = l, t[r] = [h, 0, u], r++);
      }
      return t;
    }, e.prototype.getInitialData = function(t, r) {
      for (var i = this.getReferringComponents("singleAxis", nr).models[0], o = i.get("type"), s = Gt(t.data, function(p) {
        return p[2] !== void 0;
      }), a = this.fixData(s || []), l = [], u = this.nameMap = _e(), c = 0, h = 0; h < a.length; ++h)
        l.push(a[h][qT]), u.get(a[h][qT]) || (u.set(a[h][qT], c), c++);
      var f = Pb(a, {
        coordDimensions: ["single"],
        dimensionsDefine: [{
          name: "time",
          type: uS(o)
        }, {
          name: "value",
          type: "float"
        }, {
          name: "name",
          type: "ordinal"
        }],
        encodeDefine: {
          single: 0,
          value: 1,
          itemName: 2
        }
      }).dimensions, d = new Bi(f, this);
      return d.initData(a), d;
    }, e.prototype.getLayerSeries = function() {
      for (var t = this.getData(), r = t.count(), i = [], o = 0; o < r; ++o)
        i[o] = o;
      var s = t.mapDimension("single"), a = Kk(i, function(u) {
        return t.get("name", u);
      }), l = [];
      return a.buckets.each(function(u, c) {
        u.sort(function(h, f) {
          return t.get(s, h) - t.get(s, f);
        }), l.push({
          name: c,
          indices: u
        });
      }), l;
    }, e.prototype.getAxisTooltipData = function(t, r, i) {
      oe(t) || (t = t ? [t] : []);
      for (var o = this.getData(), s = this.getLayerSeries(), a = [], l = s.length, u, c = 0; c < l; ++c) {
        for (var h = Number.MAX_VALUE, f = -1, d = s[c].indices.length, p = 0; p < d; ++p) {
          var g = o.get(t[0], s[c].indices[p]), v = Math.abs(g - r);
          v <= h && (u = g, h = v, f = s[c].indices[p]);
        }
        a.push(f);
      }
      return {
        dataIndices: a,
        nestestValue: u
      };
    }, e.prototype.formatTooltip = function(t, r, i) {
      var o = this.getData(), s = o.getName(t), a = o.get(o.mapDimension("value"), t);
      return Mr("nameValue", {
        name: s,
        value: a
      });
    }, e.type = "series.themeRiver", e.dependencies = ["singleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "singleAxis",
      // gap in axis's orthogonal orientation
      boundaryGap: ["10%", "10%"],
      // legendHoverLink: true,
      singleAxisIndex: 0,
      animationEasing: "linear",
      label: {
        margin: 4,
        show: !0,
        position: "left",
        fontSize: 11
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(Sn)
);
const qLt = HLt;
function YLt(n, e) {
  n.eachSeriesByType("themeRiver", function(t) {
    var r = t.getData(), i = t.coordinateSystem, o = {}, s = i.getRect();
    o.rect = s;
    var a = t.get("boundaryGap"), l = i.getAxis();
    if (o.boundaryGap = a, l.orient === "horizontal") {
      a[0] = fe(a[0], s.height), a[1] = fe(a[1], s.height);
      var u = s.height - a[0] - a[1];
      gQ(r, t, u);
    } else {
      a[0] = fe(a[0], s.width), a[1] = fe(a[1], s.width);
      var c = s.width - a[0] - a[1];
      gQ(r, t, c);
    }
    r.setLayout("layoutInfo", o);
  });
}
function gQ(n, e, t) {
  if (n.count())
    for (var r = e.coordinateSystem, i = e.getLayerSeries(), o = n.mapDimension("single"), s = n.mapDimension("value"), a = ae(i, function(v) {
      return ae(v.indices, function(m) {
        var y = r.dataToPoint(n.get(o, m));
        return y[1] = n.get(s, m), y;
      });
    }), l = XLt(a), u = l.y0, c = t / l.max, h = i.length, f = i[0].indices.length, d, p = 0; p < f; ++p) {
      d = u[p] * c, n.setItemLayout(i[0].indices[p], {
        layerIndex: 0,
        x: a[0][p][0],
        y0: d,
        y: a[0][p][1] * c
      });
      for (var g = 1; g < h; ++g)
        d += a[g - 1][p][1] * c, n.setItemLayout(i[g].indices[p], {
          layerIndex: g,
          x: a[g][p][0],
          y0: d,
          y: a[g][p][1] * c
        });
    }
}
function XLt(n) {
  for (var e = n.length, t = n[0].length, r = [], i = [], o = 0, s = 0; s < t; ++s) {
    for (var a = 0, l = 0; l < e; ++l)
      a += n[l][s][1];
    a > o && (o = a), r.push(a);
  }
  for (var u = 0; u < t; ++u)
    i[u] = (o - r[u]) / 2;
  o = 0;
  for (var c = 0; c < t; ++c) {
    var h = r[c] + i[c];
    h > o && (o = h);
  }
  return {
    y0: i,
    max: o
  };
}
function ULt(n) {
  n.registerChartView(jLt), n.registerSeriesModel(qLt), n.registerLayout(YLt), n.registerProcessor(Rb("themeRiver"));
}
var KLt = 2, JLt = 4, vQ = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o) {
      var s = n.call(this) || this;
      s.z2 = KLt, s.textConfig = {
        inside: !0
      }, Fe(s).seriesIndex = r.seriesIndex;
      var a = new At({
        z2: JLt,
        silent: t.getModel().get(["label", "silent"])
      });
      return s.setTextContent(a), s.updateData(!0, t, r, i, o), s;
    }
    return e.prototype.updateData = function(t, r, i, o, s) {
      this.node = r, r.piece = this, i = i || this._seriesModel, o = o || this._ecModel;
      var a = this;
      Fe(a).dataIndex = r.dataIndex;
      var l = r.getModel(), u = l.getModel("emphasis"), c = r.getLayout(), h = te({}, c);
      h.label = null;
      var f = r.getVisual("style");
      f.lineJoin = "bevel";
      var d = r.getVisual("decal");
      d && (f.decal = Ig(d, s));
      var p = vf(l.getModel("itemStyle"), h, !0);
      te(h, p), I(Qi, function(y) {
        var b = a.ensureState(y), O = l.getModel([y, "itemStyle"]);
        b.style = O.getItemStyle();
        var w = vf(O, h);
        w && (b.shape = w);
      }), t ? (a.setShape(h), a.shape.r = c.r0, vn(a, {
        shape: {
          r: c.r
        }
      }, i, r.dataIndex)) : (kt(a, {
        shape: h
      }, i), ua(a)), a.useStyle(f), this._updateLabel(i);
      var g = l.getShallow("cursor");
      g && a.attr("cursor", g), this._seriesModel = i || this._seriesModel, this._ecModel = o || this._ecModel;
      var v = u.get("focus"), m = v === "ancestor" ? r.getAncestorsIndices() : v === "descendant" ? r.getDescendantIndices() : v;
      $n(this, m, u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t) {
      var r = this, i = this.node.getModel(), o = i.getModel("label"), s = this.node.getLayout(), a = s.endAngle - s.startAngle, l = (s.startAngle + s.endAngle) / 2, u = Math.cos(l), c = Math.sin(l), h = this, f = h.getTextContent(), d = this.node.dataIndex, p = o.get("minAngle") / 180 * Math.PI, g = o.get("show") && !(p != null && Math.abs(a) < p);
      f.ignore = !g, I(O0, function(m) {
        var y = m === "normal" ? i.getModel("label") : i.getModel([m, "label"]), b = m === "normal", O = b ? f : f.ensureState(m), w = t.getFormattedLabel(d, m);
        b && (w = w || r.node.name), O.style = hn(y, {}, null, m !== "normal", !0), w && (O.style.text = w);
        var x = y.get("show");
        x != null && !b && (O.ignore = !x);
        var S = v(y, "position"), _ = b ? h : h.states[m], C = _.style.fill;
        _.textConfig = {
          outsideFill: y.get("color") === "inherit" ? C : null,
          inside: S !== "outside"
        };
        var A, T = v(y, "distance") || 0, k = v(y, "align"), L = v(y, "rotate"), D = Math.PI * 0.5, E = Math.PI * 1.5, M = $o(L === "tangential" ? Math.PI / 2 - l : l), R = M > D && !y0(M - D) && M < E;
        S === "outside" ? (A = s.r + T, k = R ? "right" : "left") : !k || k === "center" ? (a === 2 * Math.PI && s.r0 === 0 ? A = 0 : A = (s.r + s.r0) / 2, k = "center") : k === "left" ? (A = s.r0 + T, k = R ? "right" : "left") : k === "right" && (A = s.r - T, k = R ? "left" : "right"), O.style.align = k, O.style.verticalAlign = v(y, "verticalAlign") || "middle", O.x = A * u + s.cx, O.y = A * c + s.cy;
        var N = 0;
        L === "radial" ? N = $o(-l) + (R ? Math.PI : 0) : L === "tangential" ? N = $o(Math.PI / 2 - l) + (R ? Math.PI : 0) : Tt(L) && (N = L * Math.PI / 180), O.rotation = $o(N);
      });
      function v(m, y) {
        var b = m.get(y);
        return b ?? o.get(y);
      }
      f.dirtyStyle();
    }, e;
  }(go)
), UM = "sunburstRootToNode", mQ = "sunburstHighlight", eIt = "sunburstUnhighlight";
function tIt(n) {
  n.registerAction({
    type: UM,
    update: "updateView"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, r);
    function r(i, o) {
      var s = L0(e, [UM], i);
      if (s) {
        var a = i.getViewRoot();
        a && (e.direction = KR(a, s.node) ? "rollUp" : "drillDown"), i.resetViewRoot(s.node);
      }
    }
  }), n.registerAction({
    type: mQ,
    update: "none"
  }, function(e, t, r) {
    e = te({}, e), t.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, i);
    function i(o) {
      var s = L0(e, [mQ], o);
      s && (e.dataIndex = s.node.dataIndex);
    }
    process.env.NODE_ENV !== "production" && er("sunburstHighlight", "highlight"), r.dispatchAction(te(e, {
      type: "highlight"
    }));
  }), n.registerAction({
    type: eIt,
    update: "updateView"
  }, function(e, t, r) {
    e = te({}, e), process.env.NODE_ENV !== "production" && er("sunburstUnhighlight", "downplay"), r.dispatchAction(te(e, {
      type: "downplay"
    }));
  });
}
var nIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      var s = this;
      this.seriesModel = t, this.api = i, this.ecModel = r;
      var a = t.getData(), l = a.tree.root, u = t.getViewRoot(), c = this.group, h = t.get("renderLabelForZeroData"), f = [];
      u.eachNode(function(y) {
        f.push(y);
      });
      var d = this._oldChildren || [];
      p(f, d), m(l, u), this._initEvents(), this._oldChildren = f;
      function p(y, b) {
        if (y.length === 0 && b.length === 0)
          return;
        new lu(b, y, O, O).add(w).update(w).remove(je(w, null)).execute();
        function O(x) {
          return x.getId();
        }
        function w(x, S) {
          var _ = x == null ? null : y[x], C = S == null ? null : b[S];
          g(_, C);
        }
      }
      function g(y, b) {
        if (!h && y && !y.getValue() && (y = null), y !== l && b !== l) {
          if (b && b.piece)
            y ? (b.piece.updateData(!1, y, t, r, i), a.setItemGraphicEl(y.dataIndex, b.piece)) : v(b);
          else if (y) {
            var O = new vQ(y, t, r, i);
            c.add(O), a.setItemGraphicEl(y.dataIndex, O);
          }
        }
      }
      function v(y) {
        y && y.piece && (c.remove(y.piece), y.piece = null);
      }
      function m(y, b) {
        b.depth > 0 ? (s.virtualPiece ? s.virtualPiece.updateData(!1, y, t, r, i) : (s.virtualPiece = new vQ(y, t, r, i), c.add(s.virtualPiece)), b.piece.off("click"), s.virtualPiece.on("click", function(O) {
          s._rootToNode(b.parentNode);
        })) : s.virtualPiece && (c.remove(s.virtualPiece), s.virtualPiece = null);
      }
    }, e.prototype._initEvents = function() {
      var t = this;
      this.group.off("click"), this.group.on("click", function(r) {
        var i = !1, o = t.seriesModel.getViewRoot();
        o.eachNode(function(s) {
          if (!i && s.piece && s.piece === r.target) {
            var a = s.getModel().get("nodeClick");
            if (a === "rootToNode")
              t._rootToNode(s);
            else if (a === "link") {
              var l = s.getModel(), u = l.get("link");
              if (u) {
                var c = l.get("target", !0) || "_blank";
                Jx(u, c);
              }
            }
            i = !0;
          }
        });
      });
    }, e.prototype._rootToNode = function(t) {
      t !== this.seriesModel.getViewRoot() && this.api.dispatchAction({
        type: UM,
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t
      });
    }, e.prototype.containPoint = function(t, r) {
      var i = r.getData(), o = i.getItemLayout(0);
      if (o) {
        var s = t[0] - o.cx, a = t[1] - o.cy, l = Math.sqrt(s * s + a * a);
        return l <= o.r && l >= o.r0;
      }
    }, e.type = "sunburst", e;
  }(dn)
);
const rIt = nIt;
var iIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.ignoreStyleOnData = !0, t;
    }
    return e.prototype.getInitialData = function(t, r) {
      var i = {
        name: t.name,
        children: t.data
      };
      _re(i);
      var o = this._levelModels = ae(t.levels || [], function(l) {
        return new fn(l, this, r);
      }, this), s = UR.createTree(i, this, a);
      function a(l) {
        l.wrapMethod("getItemModel", function(u, c) {
          var h = s.getNodeByDataIndex(c), f = o[h.depth];
          return f && (u.parentModel = f), u;
        });
      }
      return s.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.getDataParams = function(t) {
      var r = n.prototype.getDataParams.apply(this, arguments), i = this.getData().tree.getNodeByDataIndex(t);
      return r.treePathInfo = CC(i, this), r;
    }, e.prototype.getLevelModel = function(t) {
      return this._levelModels && this._levelModels[t.depth];
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(t) {
      t ? this._viewRoot = t : t = this._viewRoot;
      var r = this.getRawData().tree.root;
      (!t || t !== r && !r.contains(t)) && (this._viewRoot = r);
    }, e.prototype.enableAriaDecal = function() {
      Pne(this);
    }, e.type = "series.sunburst", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      // 最小角度改为0
      minAngle: 0,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // 'rootToNode', 'link', or false
      nodeClick: "rootToNode",
      renderLabelForZeroData: !1,
      label: {
        // could be: 'radial', 'tangential', or 'none'
        rotate: "radial",
        show: !0,
        opacity: 1,
        // 'left' is for inner side of inside, and 'right' is for outer
        // side for inside
        align: "center",
        position: "inside",
        distance: 5,
        silent: !0
      },
      itemStyle: {
        borderWidth: 1,
        borderColor: "white",
        borderType: "solid",
        shadowBlur: 0,
        shadowColor: "rgba(0, 0, 0, 0.2)",
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      emphasis: {
        focus: "descendant"
      },
      blur: {
        itemStyle: {
          opacity: 0.2
        },
        label: {
          opacity: 0.1
        }
      },
      // Animation type can be expansion, scale.
      animationType: "expansion",
      animationDuration: 1e3,
      animationDurationUpdate: 500,
      data: [],
      /**
       * Sort order.
       *
       * Valid values: 'desc', 'asc', null, or callback function.
       * 'desc' and 'asc' for descend and ascendant order;
       * null for not sorting;
       * example of callback function:
       * function(nodeA, nodeB) {
       *     return nodeA.getValue() - nodeB.getValue();
       * }
       */
      sort: "desc"
    }, e;
  }(Sn)
);
function _re(n) {
  var e = 0;
  I(n.children, function(r) {
    _re(r);
    var i = r.value;
    oe(i) && (i = i[0]), e += i;
  });
  var t = n.value;
  oe(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), oe(n.value) ? n.value[0] = t : n.value = t;
}
const oIt = iIt;
var yQ = Math.PI / 180;
function sIt(n, e, t) {
  e.eachSeriesByType(n, function(r) {
    var i = r.get("center"), o = r.get("radius");
    oe(o) || (o = [0, o]), oe(i) || (i = [i, i]);
    var s = t.getWidth(), a = t.getHeight(), l = Math.min(s, a), u = fe(i[0], s), c = fe(i[1], a), h = fe(o[0], l / 2), f = fe(o[1], l / 2), d = -r.get("startAngle") * yQ, p = r.get("minAngle") * yQ, g = r.getData().tree.root, v = r.getViewRoot(), m = v.depth, y = r.get("sort");
    y != null && Cre(v, y);
    var b = 0;
    I(v.children, function(M) {
      !isNaN(M.getValue()) && b++;
    });
    var O = v.getValue(), w = Math.PI / (O || b) * 2, x = v.depth > 0, S = v.height - (x ? -1 : 1), _ = (f - h) / (S || 1), C = r.get("clockwise"), A = r.get("stillShowZeroSum"), T = C ? 1 : -1, k = function(M, R) {
      if (M) {
        var N = R;
        if (M !== g) {
          var $ = M.getValue(), V = O === 0 && A ? w : $ * w;
          V < p && (V = p), N = R + T * V;
          var H = M.depth - m - (x ? -1 : 1), G = h + _ * H, q = h + _ * (H + 1), Y = r.getLevelModel(M);
          if (Y) {
            var ie = Y.get("r0", !0), se = Y.get("r", !0), K = Y.get("radius", !0);
            K != null && (ie = K[0], se = K[1]), ie != null && (G = fe(ie, l / 2)), se != null && (q = fe(se, l / 2));
          }
          M.setLayout({
            angle: V,
            startAngle: R,
            endAngle: N,
            clockwise: C,
            cx: u,
            cy: c,
            r0: G,
            r: q
          });
        }
        if (M.children && M.children.length) {
          var re = 0;
          I(M.children, function(ge) {
            re += k(ge, R + re);
          });
        }
        return N - R;
      }
    };
    if (x) {
      var L = h, D = h + _, E = Math.PI * 2;
      g.setLayout({
        angle: E,
        startAngle: d,
        endAngle: d + E,
        clockwise: C,
        cx: u,
        cy: c,
        r0: L,
        r: D
      });
    }
    k(v, d);
  });
}
function Cre(n, e) {
  var t = n.children || [];
  n.children = aIt(t, e), t.length && I(n.children, function(r) {
    Cre(r, e);
  });
}
function aIt(n, e) {
  if (Pe(e)) {
    var t = ae(n, function(i, o) {
      var s = i.getValue();
      return {
        params: {
          depth: i.depth,
          height: i.height,
          dataIndex: i.dataIndex,
          getValue: function() {
            return s;
          }
        },
        index: o
      };
    });
    return t.sort(function(i, o) {
      return e(i.params, o.params);
    }), ae(t, function(i) {
      return n[i.index];
    });
  } else {
    var r = e === "asc";
    return n.sort(function(i, o) {
      var s = (i.getValue() - o.getValue()) * (r ? 1 : -1);
      return s === 0 ? (i.dataIndex - o.dataIndex) * (r ? -1 : 1) : s;
    });
  }
}
function lIt(n) {
  var e = {};
  function t(r, i, o) {
    for (var s = r; s && s.depth > 1; )
      s = s.parentNode;
    var a = i.getColorFromPalette(s.name || s.dataIndex + "", e);
    return r.depth > 1 && be(a) && (a = Vk(a, (r.depth - 1) / (o - 1) * 0.5)), a;
  }
  n.eachSeriesByType("sunburst", function(r) {
    var i = r.getData(), o = i.tree;
    o.eachNode(function(s) {
      var a = s.getModel(), l = a.getModel("itemStyle").getItemStyle();
      l.fill || (l.fill = t(s, r, o.root.height));
      var u = i.ensureUniqueItemVisual(s.dataIndex, "style");
      te(u, l);
    });
  });
}
function uIt(n) {
  n.registerChartView(rIt), n.registerSeriesModel(oIt), n.registerLayout(je(sIt, "sunburst")), n.registerProcessor(je(Rb, "sunburst")), n.registerVisual(lIt), tIt(n);
}
var bQ = {
  color: "fill",
  borderColor: "stroke"
}, cIt = {
  symbol: 1,
  symbolSize: 1,
  symbolKeepAspect: 1,
  legendIcon: 1,
  visualMeta: 1,
  liftZ: 1,
  decal: 1
}, ql = Ct(), hIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      this.currentZLevel = this.get("zlevel", !0), this.currentZ = this.get("z", !0);
    }, e.prototype.getInitialData = function(t, r) {
      return yu(null, this);
    }, e.prototype.getDataParams = function(t, r, i) {
      var o = n.prototype.getDataParams.call(this, t, r);
      return i && (o.info = ql(i).info), o;
    }, e.type = "series.custom", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Custom series will not clip by default.
      // Some case will use custom series to draw label
      // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight
      clip: !1
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
    }, e;
  }(Sn)
);
const fIt = hIt;
function dIt(n, e) {
  return e = e || [0, 0], ae(["x", "y"], function(t, r) {
    var i = this.getAxis(t), o = e[r], s = n[r] / 2;
    return i.type === "category" ? i.getBandWidth() : Math.abs(i.dataToCoord(o - s) - i.dataToCoord(o + s));
  }, this);
}
function pIt(n) {
  var e = n.master.getRect();
  return {
    coordSys: {
      // The name exposed to user is always 'cartesian2d' but not 'grid'.
      type: "cartesian2d",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(t) {
        return n.dataToPoint(t);
      },
      size: Oe(dIt, n)
    }
  };
}
function gIt(n, e) {
  return e = e || [0, 0], ae([0, 1], function(t) {
    var r = e[t], i = n[t] / 2, o = [], s = [];
    return o[t] = r - i, s[t] = r + i, o[1 - t] = s[1 - t] = e[1 - t], Math.abs(this.dataToPoint(o)[t] - this.dataToPoint(s)[t]);
  }, this);
}
function vIt(n) {
  var e = n.getBoundingRect();
  return {
    coordSys: {
      type: "geo",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      zoom: n.getZoom()
    },
    api: {
      coord: function(t) {
        return n.dataToPoint(t);
      },
      size: Oe(gIt, n)
    }
  };
}
function mIt(n, e) {
  var t = this.getAxis(), r = e instanceof Array ? e[0] : e, i = (n instanceof Array ? n[0] : n) / 2;
  return t.type === "category" ? t.getBandWidth() : Math.abs(t.dataToCoord(r - i) - t.dataToCoord(r + i));
}
function yIt(n) {
  var e = n.getRect();
  return {
    coordSys: {
      type: "singleAxis",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(t) {
        return n.dataToPoint(t);
      },
      size: Oe(mIt, n)
    }
  };
}
function bIt(n, e) {
  return e = e || [0, 0], ae(["Radius", "Angle"], function(t, r) {
    var i = "get" + t + "Axis", o = this[i](), s = e[r], a = n[r] / 2, l = o.type === "category" ? o.getBandWidth() : Math.abs(o.dataToCoord(s - a) - o.dataToCoord(s + a));
    return t === "Angle" && (l = l * Math.PI / 180), l;
  }, this);
}
function OIt(n) {
  var e = n.getRadiusAxis(), t = n.getAngleAxis(), r = e.getExtent();
  return r[0] > r[1] && r.reverse(), {
    coordSys: {
      type: "polar",
      cx: n.cx,
      cy: n.cy,
      r: r[1],
      r0: r[0]
    },
    api: {
      coord: function(i) {
        var o = e.dataToRadius(i[0]), s = t.dataToAngle(i[1]), a = n.coordToPoint([o, s]);
        return a.push(o, s * Math.PI / 180), a;
      },
      size: Oe(bIt, n)
    }
  };
}
function wIt(n) {
  var e = n.getRect(), t = n.getRangeInfo();
  return {
    coordSys: {
      type: "calendar",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      cellWidth: n.getCellWidth(),
      cellHeight: n.getCellHeight(),
      rangeInfo: {
        start: t.start,
        end: t.end,
        weeks: t.weeks,
        dayCount: t.allDay
      }
    },
    api: {
      coord: function(r, i) {
        return n.dataToPoint(r, i);
      }
    }
  };
}
var OQ = {};
function Are(n, e, t, r) {
  return n && (n.legacy || n.legacy !== !1 && !t && !r && e !== "tspan" && (e === "text" || we(n, "text")));
}
function Tre(n, e, t) {
  var r = n, i, o, s;
  if (e === "text")
    s = r;
  else {
    s = {}, we(r, "text") && (s.text = r.text), we(r, "rich") && (s.rich = r.rich), we(r, "textFill") && (s.fill = r.textFill), we(r, "textStroke") && (s.stroke = r.textStroke), we(r, "fontFamily") && (s.fontFamily = r.fontFamily), we(r, "fontSize") && (s.fontSize = r.fontSize), we(r, "fontStyle") && (s.fontStyle = r.fontStyle), we(r, "fontWeight") && (s.fontWeight = r.fontWeight), o = {
      type: "text",
      style: s,
      // ec4 does not support rectText trigger.
      // And when text position is different in normal and emphasis
      // => hover text trigger emphasis;
      // => text position changed, leave mouse pointer immediately;
      // That might cause incorrect state.
      silent: !0
    }, i = {};
    var a = we(r, "textPosition");
    t ? i.position = a ? r.textPosition : "inside" : a && (i.position = r.textPosition), we(r, "textPosition") && (i.position = r.textPosition), we(r, "textOffset") && (i.offset = r.textOffset), we(r, "textRotation") && (i.rotation = r.textRotation), we(r, "textDistance") && (i.distance = r.textDistance);
  }
  return wQ(s, n), I(s.rich, function(l) {
    wQ(l, l);
  }), {
    textConfig: i,
    textContent: o
  };
}
function wQ(n, e) {
  e && (e.font = e.textFont || e.font, we(e, "textStrokeWidth") && (n.lineWidth = e.textStrokeWidth), we(e, "textAlign") && (n.align = e.textAlign), we(e, "textVerticalAlign") && (n.verticalAlign = e.textVerticalAlign), we(e, "textLineHeight") && (n.lineHeight = e.textLineHeight), we(e, "textWidth") && (n.width = e.textWidth), we(e, "textHeight") && (n.height = e.textHeight), we(e, "textBackgroundColor") && (n.backgroundColor = e.textBackgroundColor), we(e, "textPadding") && (n.padding = e.textPadding), we(e, "textBorderColor") && (n.borderColor = e.textBorderColor), we(e, "textBorderWidth") && (n.borderWidth = e.textBorderWidth), we(e, "textBorderRadius") && (n.borderRadius = e.textBorderRadius), we(e, "textBoxShadowColor") && (n.shadowColor = e.textBoxShadowColor), we(e, "textBoxShadowBlur") && (n.shadowBlur = e.textBoxShadowBlur), we(e, "textBoxShadowOffsetX") && (n.shadowOffsetX = e.textBoxShadowOffsetX), we(e, "textBoxShadowOffsetY") && (n.shadowOffsetY = e.textBoxShadowOffsetY));
}
function xQ(n, e, t) {
  var r = n;
  r.textPosition = r.textPosition || t.position || "inside", t.offset != null && (r.textOffset = t.offset), t.rotation != null && (r.textRotation = t.rotation), t.distance != null && (r.textDistance = t.distance);
  var i = r.textPosition.indexOf("inside") >= 0, o = n.fill || "#000";
  SQ(r, e);
  var s = r.textFill == null;
  return i ? s && (r.textFill = t.insideFill || "#fff", !r.textStroke && t.insideStroke && (r.textStroke = t.insideStroke), !r.textStroke && (r.textStroke = o), r.textStrokeWidth == null && (r.textStrokeWidth = 2)) : (s && (r.textFill = n.fill || t.outsideFill || "#000"), !r.textStroke && t.outsideStroke && (r.textStroke = t.outsideStroke)), r.text = e.text, r.rich = e.rich, I(e.rich, function(a) {
    SQ(a, a);
  }), r;
}
function SQ(n, e) {
  e && (we(e, "fill") && (n.textFill = e.fill), we(e, "stroke") && (n.textStroke = e.fill), we(e, "lineWidth") && (n.textStrokeWidth = e.lineWidth), we(e, "font") && (n.font = e.font), we(e, "fontStyle") && (n.fontStyle = e.fontStyle), we(e, "fontWeight") && (n.fontWeight = e.fontWeight), we(e, "fontSize") && (n.fontSize = e.fontSize), we(e, "fontFamily") && (n.fontFamily = e.fontFamily), we(e, "align") && (n.textAlign = e.align), we(e, "verticalAlign") && (n.textVerticalAlign = e.verticalAlign), we(e, "lineHeight") && (n.textLineHeight = e.lineHeight), we(e, "width") && (n.textWidth = e.width), we(e, "height") && (n.textHeight = e.height), we(e, "backgroundColor") && (n.textBackgroundColor = e.backgroundColor), we(e, "padding") && (n.textPadding = e.padding), we(e, "borderColor") && (n.textBorderColor = e.borderColor), we(e, "borderWidth") && (n.textBorderWidth = e.borderWidth), we(e, "borderRadius") && (n.textBorderRadius = e.borderRadius), we(e, "shadowColor") && (n.textBoxShadowColor = e.shadowColor), we(e, "shadowBlur") && (n.textBoxShadowBlur = e.shadowBlur), we(e, "shadowOffsetX") && (n.textBoxShadowOffsetX = e.shadowOffsetX), we(e, "shadowOffsetY") && (n.textBoxShadowOffsetY = e.shadowOffsetY), we(e, "textShadowColor") && (n.textShadowColor = e.textShadowColor), we(e, "textShadowBlur") && (n.textShadowBlur = e.textShadowBlur), we(e, "textShadowOffsetX") && (n.textShadowOffsetX = e.textShadowOffsetX), we(e, "textShadowOffsetY") && (n.textShadowOffsetY = e.textShadowOffsetY));
}
function _Q(n, e) {
  if (process.env.NODE_ENV !== "production") {
    var t = n + "^_^" + e;
    OQ[t] || (console.warn('[ECharts] DEPRECATED: "' + n + '" has been deprecated. ' + e), OQ[t] = !0);
  }
}
var Pre = {
  position: ["x", "y"],
  scale: ["scaleX", "scaleY"],
  origin: ["originX", "originY"]
}, CQ = ft(Pre), wS = fl(pl, function(n, e) {
  return n[e] = 1, n;
}, {}), AQ = pl.join(", "), xS = ["", "style", "shape", "extra"], Vg = Ct();
function p$(n, e, t, r, i) {
  var o = n + "Animation", s = pv(n, r, i) || {}, a = Vg(e).userDuring;
  return s.duration > 0 && (s.during = a ? Oe(AIt, {
    el: e,
    userDuring: a
  }) : null, s.setToFinal = !0, s.scope = n), te(s, t[o]), s;
}
function kw(n, e, t, r) {
  r = r || {};
  var i = r.dataIndex, o = r.isInit, s = r.clearStyle, a = t.isAnimationEnabled(), l = Vg(n), u = e.style;
  l.userDuring = e.during;
  var c = {}, h = {};
  if (PIt(n, e, h), PQ("shape", e, h), PQ("extra", e, h), !o && a && (TIt(n, e, c), TQ("shape", n, e, c), TQ("extra", n, e, c), EIt(n, e, u, c)), h.style = u, xIt(n, h, s), _It(n, e), a)
    if (o) {
      var f = {};
      I(xS, function(p) {
        var g = p ? e[p] : e;
        g && g.enterFrom && (p && (f[p] = f[p] || {}), te(p ? f[p] : f, g.enterFrom));
      });
      var d = p$("enter", n, e, t, i);
      d.duration > 0 && n.animateFrom(f, d);
    } else
      SIt(n, e, i || 0, t, c);
  Ere(n, e), u ? n.dirty() : n.markRedraw();
}
function Ere(n, e) {
  for (var t = Vg(n).leaveToProps, r = 0; r < xS.length; r++) {
    var i = xS[r], o = i ? e[i] : e;
    o && o.leaveTo && (t || (t = Vg(n).leaveToProps = {}), i && (t[i] = t[i] || {}), te(i ? t[i] : t, o.leaveTo));
  }
}
function PC(n, e, t, r) {
  if (n) {
    var i = n.parent, o = Vg(n).leaveToProps;
    if (o) {
      var s = p$("update", n, e, t, 0);
      s.done = function() {
        i.remove(n), r && r();
      }, n.animateTo(o, s);
    } else
      i.remove(n), r && r();
  }
}
function $f(n) {
  return n === "all";
}
function xIt(n, e, t) {
  var r = e.style;
  if (!n.isGroup && r) {
    if (t) {
      n.useStyle({});
      for (var i = n.animators, o = 0; o < i.length; o++) {
        var s = i[o];
        s.targetName === "style" && s.changeTarget(n.style);
      }
    }
    n.setStyle(r);
  }
  e && (e.style = null, e && n.attr(e), e.style = r);
}
function SIt(n, e, t, r, i) {
  if (i) {
    var o = p$("update", n, e, r, t);
    o.duration > 0 && n.animateFrom(i, o);
  }
}
function _It(n, e) {
  we(e, "silent") && (n.silent = e.silent), we(e, "ignore") && (n.ignore = e.ignore), n instanceof As && we(e, "invisible") && (n.invisible = e.invisible), n instanceof ct && we(e, "autoBatch") && (n.autoBatch = e.autoBatch);
}
var ka = {}, CIt = {
  // Usually other props do not need to be changed in animation during.
  setTransform: function(n, e) {
    return process.env.NODE_ENV !== "production" && De(we(wS, n), "Only " + AQ + " available in `setTransform`."), ka.el[n] = e, this;
  },
  getTransform: function(n) {
    return process.env.NODE_ENV !== "production" && De(we(wS, n), "Only " + AQ + " available in `getTransform`."), ka.el[n];
  },
  setShape: function(n, e) {
    process.env.NODE_ENV !== "production" && ep(n);
    var t = ka.el, r = t.shape || (t.shape = {});
    return r[n] = e, t.dirtyShape && t.dirtyShape(), this;
  },
  getShape: function(n) {
    process.env.NODE_ENV !== "production" && ep(n);
    var e = ka.el.shape;
    if (e)
      return e[n];
  },
  setStyle: function(n, e) {
    process.env.NODE_ENV !== "production" && ep(n);
    var t = ka.el, r = t.style;
    return r && (process.env.NODE_ENV !== "production" && ed(e) && En("style." + n + " must not be assigned with NaN."), r[n] = e, t.dirtyStyle && t.dirtyStyle()), this;
  },
  getStyle: function(n) {
    process.env.NODE_ENV !== "production" && ep(n);
    var e = ka.el.style;
    if (e)
      return e[n];
  },
  setExtra: function(n, e) {
    process.env.NODE_ENV !== "production" && ep(n);
    var t = ka.el.extra || (ka.el.extra = {});
    return t[n] = e, this;
  },
  getExtra: function(n) {
    process.env.NODE_ENV !== "production" && ep(n);
    var e = ka.el.extra;
    if (e)
      return e[n];
  }
};
function ep(n) {
  if (process.env.NODE_ENV !== "production" && (n === "transition" || n === "enterFrom" || n === "leaveTo"))
    throw new Error('key must not be "' + n + '"');
}
function AIt() {
  var n = this, e = n.el;
  if (e) {
    var t = Vg(e).userDuring, r = n.userDuring;
    if (t !== r) {
      n.el = n.userDuring = null;
      return;
    }
    ka.el = e, r(CIt);
  }
}
function TQ(n, e, t, r) {
  var i = t[n];
  if (i) {
    var o = e[n], s;
    if (o) {
      var a = t.transition, l = i.transition;
      if (l)
        if (!s && (s = r[n] = {}), $f(l))
          te(s, o);
        else
          for (var u = Kt(l), c = 0; c < u.length; c++) {
            var h = u[c], f = o[h];
            s[h] = f;
          }
      else if ($f(a) || ot(a, n) >= 0) {
        !s && (s = r[n] = {});
        for (var d = ft(o), c = 0; c < d.length; c++) {
          var h = d[c], f = o[h];
          kIt(i[h], f) && (s[h] = f);
        }
      }
    }
  }
}
function PQ(n, e, t) {
  var r = e[n];
  if (r)
    for (var i = t[n] = {}, o = ft(r), s = 0; s < o.length; s++) {
      var a = o[s];
      i[a] = dy(r[a]);
    }
}
function TIt(n, e, t) {
  for (var r = e.transition, i = $f(r) ? pl : Kt(r || []), o = 0; o < i.length; o++) {
    var s = i[o];
    if (!(s === "style" || s === "shape" || s === "extra")) {
      var a = n[s];
      process.env.NODE_ENV !== "production" && kre(s, "el.transition"), t[s] = a;
    }
  }
}
function PIt(n, e, t) {
  for (var r = 0; r < CQ.length; r++) {
    var i = CQ[r], o = Pre[i], s = e[i];
    s && (t[o[0]] = s[0], t[o[1]] = s[1]);
  }
  for (var r = 0; r < pl.length; r++) {
    var a = pl[r];
    e[a] != null && (t[a] = e[a]);
  }
}
function EIt(n, e, t, r) {
  if (t) {
    var i = n.style, o;
    if (i) {
      var s = t.transition, a = e.transition;
      if (s && !$f(s)) {
        var l = Kt(s);
        !o && (o = r.style = {});
        for (var u = 0; u < l.length; u++) {
          var c = l[u], h = i[c];
          o[c] = h;
        }
      } else if (n.getAnimationStyleProps && ($f(a) || $f(s) || ot(a, "style") >= 0)) {
        var f = n.getAnimationStyleProps(), d = f ? f.style : null;
        if (d) {
          !o && (o = r.style = {});
          for (var p = ft(t), u = 0; u < p.length; u++) {
            var c = p[u];
            if (d[c]) {
              var h = i[c];
              o[c] = h;
            }
          }
        }
      }
    }
  }
}
function kIt(n, e) {
  return _i(n) ? n !== e : n != null && isFinite(n);
}
var kre;
process.env.NODE_ENV !== "production" && (kre = function(n, e) {
  we(wS, n) || En("Prop `" + n + "` is not a permitted in `" + e + "`. Only `" + ft(wS).join("`, `") + "` are permitted.");
});
var Mre = Ct(), MIt = ["percent", "easing", "shape", "style", "extra"];
function Dre(n) {
  n.stopAnimation("keyframe"), n.attr(Mre(n));
}
function SS(n, e, t) {
  if (!(!t.isAnimationEnabled() || !e)) {
    if (oe(e)) {
      I(e, function(a) {
        SS(n, a, t);
      });
      return;
    }
    var r = e.keyframes, i = e.duration;
    if (t && i == null) {
      var o = pv("enter", t, 0);
      i = o && o.duration;
    }
    if (!(!r || !i)) {
      var s = Mre(n);
      I(xS, function(a) {
        if (!(a && !n[a])) {
          var l, u = !1;
          r.sort(function(c, h) {
            return c.percent - h.percent;
          }), I(r, function(c) {
            var h = n.animators, f = a ? c[a] : c;
            if (process.env.NODE_ENV !== "production" && c.percent >= 1 && (u = !0), !!f) {
              var d = ft(f);
              if (a || (d = Gt(d, function(v) {
                return ot(MIt, v) < 0;
              })), !!d.length) {
                l || (l = n.animate(a, e.loop, !0), l.scope = "keyframe");
                for (var p = 0; p < h.length; p++)
                  h[p] !== l && h[p].targetName === l.targetName && h[p].stopTracks(d);
                a && (s[a] = s[a] || {});
                var g = a ? s[a] : s;
                I(d, function(v) {
                  g[v] = ((a ? n[a] : n) || {})[v];
                }), l.whenWithKeys(i * c.percent, f, d, c.easing);
              }
            }
          }), l && (process.env.NODE_ENV !== "production" && (u || En("End frame with percent: 1 is missing in the keyframeAnimation.", !0)), l.delay(e.delay || 0).duration(i).start(e.easing));
        }
      });
    }
  }
}
var Yl = "emphasis", hc = "normal", g$ = "blur", v$ = "select", Wc = [hc, Yl, g$, v$], YT = {
  normal: ["itemStyle"],
  emphasis: [Yl, "itemStyle"],
  blur: [g$, "itemStyle"],
  select: [v$, "itemStyle"]
}, XT = {
  normal: ["label"],
  emphasis: [Yl, "label"],
  blur: [g$, "label"],
  select: [v$, "label"]
}, DIt = ["x", "y"], LIt = "e\0\0", Yo = {
  normal: {},
  emphasis: {},
  blur: {},
  select: {}
}, EQ = {
  cartesian2d: pIt,
  geo: vIt,
  single: yIt,
  polar: OIt,
  calendar: wIt
};
function _S(n) {
  return n instanceof ct;
}
function KM(n) {
  return n instanceof As;
}
function IIt(n, e) {
  e.copyTransform(n), KM(e) && KM(n) && (e.setStyle(n.style), e.z = n.z, e.z2 = n.z2, e.zlevel = n.zlevel, e.invisible = n.invisible, e.ignore = n.ignore, _S(e) && _S(n) && e.setShape(n.shape));
}
var RIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      this._progressiveEls = null;
      var s = this._data, a = t.getData(), l = this.group, u = kQ(t, a, r, i);
      s || l.removeAll(), a.diff(s).add(function(h) {
        UT(i, null, h, u(h, o), t, l, a);
      }).remove(function(h) {
        var f = s.getItemGraphicEl(h);
        f && PC(f, ql(f).option, t);
      }).update(function(h, f) {
        var d = s.getItemGraphicEl(f);
        UT(i, d, h, u(h, o), t, l, a);
      }).execute();
      var c = t.get("clip", !0) ? Lb(t.coordinateSystem, !1, t) : null;
      c ? l.setClipPath(c) : l.removeClipPath(), this._data = a;
    }, e.prototype.incrementalPrepareRender = function(t, r, i) {
      this.group.removeAll(), this._data = null;
    }, e.prototype.incrementalRender = function(t, r, i, o, s) {
      var a = r.getData(), l = kQ(r, a, i, o), u = this._progressiveEls = [];
      function c(d) {
        d.isGroup || (d.incremental = !0, d.ensureState("emphasis").hoverLayer = !0);
      }
      for (var h = t.start; h < t.end; h++) {
        var f = UT(null, null, h, l(h, s), r, this.group, a);
        f && (f.traverse(c), u.push(f));
      }
    }, e.prototype.eachRendered = function(t) {
      ih(this._progressiveEls || this.group, t);
    }, e.prototype.filterForExposedEvent = function(t, r, i, o) {
      var s = r.element;
      if (s == null || i.name === s)
        return !0;
      for (; (i = i.__hostTarget || i.parent) && i !== this.group; )
        if (i.name === s)
          return !0;
      return !1;
    }, e.type = "custom", e;
  }(dn)
);
const $It = RIt;
function m$(n) {
  var e = n.type, t;
  if (e === "path") {
    var r = n.shape, i = r.width != null && r.height != null ? {
      x: r.x || 0,
      y: r.y || 0,
      width: r.width,
      height: r.height
    } : null, o = Rre(r);
    t = oC(o, null, i, r.layout || "center"), ql(t).customPathData = o;
  } else if (e === "image")
    t = new fi({}), ql(t).customImagePath = n.style.image;
  else if (e === "text")
    t = new At({});
  else if (e === "group")
    t = new Ve();
  else {
    if (e === "compoundPath")
      throw new Error('"compoundPath" is not supported yet.');
    var s = rR(e);
    if (!s) {
      var a = "";
      process.env.NODE_ENV !== "production" && (a = 'graphic type "' + e + '" can not be found.'), Nt(a);
    }
    t = new s();
  }
  return ql(t).customGraphicType = e, t.name = n.name, t.z2EmphasisLift = 1, t.z2SelectLift = 1, t;
}
function y$(n, e, t, r, i, o, s) {
  Dre(e);
  var a = i && i.normal.cfg;
  a && e.setTextConfig(a), r && r.transition == null && (r.transition = DIt);
  var l = r && r.style;
  if (l) {
    if (e.type === "text") {
      var u = l;
      we(u, "textFill") && (u.fill = u.textFill), we(u, "textStroke") && (u.stroke = u.textStroke);
    }
    var c = void 0, h = _S(e) ? l.decal : null;
    n && h && (h.dirty = !0, c = Ig(h, n)), l.__decalPattern = c;
  }
  if (KM(e) && l) {
    var c = l.__decalPattern;
    c && (l.decal = c);
  }
  kw(e, r, o, {
    dataIndex: t,
    isInit: s,
    clearStyle: !0
  }), SS(e, r.keyframeAnimation, o);
}
function Lre(n, e, t, r, i) {
  var o = e.isGroup ? null : e, s = i && i[n].cfg;
  if (o) {
    var a = o.ensureState(n);
    if (r === !1) {
      var l = o.getState(n);
      l && (l.style = null);
    } else
      a.style = r || null;
    s && (a.textConfig = s), id(o);
  }
}
function NIt(n, e, t) {
  if (!n.isGroup) {
    var r = n, i = t.currentZ, o = t.currentZLevel;
    r.z = i, r.zlevel = o;
    var s = e.z2;
    s != null && (r.z2 = s || 0);
    for (var a = 0; a < Wc.length; a++)
      BIt(r, e, Wc[a]);
  }
}
function BIt(n, e, t) {
  var r = t === hc, i = r ? e : CS(e, t), o = i ? i.z2 : null, s;
  o != null && (s = r ? n : n.ensureState(t), s.z2 = o || 0);
}
function kQ(n, e, t, r) {
  var i = n.get("renderItem"), o = n.coordinateSystem, s = {};
  o && (process.env.NODE_ENV !== "production" && (De(i, "series.render is required."), De(o.prepareCustoms || EQ[o.type], "This coordSys does not support custom series.")), s = o.prepareCustoms ? o.prepareCustoms(o) : EQ[o.type](o));
  for (var a = Le({
    getWidth: r.getWidth,
    getHeight: r.getHeight,
    getZr: r.getZr,
    getDevicePixelRatio: r.getDevicePixelRatio,
    value: O,
    style: x,
    ordinalRawValue: w,
    styleEmphasis: S,
    visual: A,
    barLayout: T,
    currentSeriesIndices: k,
    font: L
  }, s.api || {}), l = {
    // The life cycle of context: current round of rendering.
    // The global life cycle is probably not necessary, because
    // user can store global status by themselves.
    context: {},
    seriesId: n.id,
    seriesName: n.name,
    seriesIndex: n.seriesIndex,
    coordSys: s.coordSys,
    dataInsideLength: e.count(),
    encode: VIt(n.getData())
  }, u, c, h = {}, f = {}, d = {}, p = {}, g = 0; g < Wc.length; g++) {
    var v = Wc[g];
    d[v] = n.getModel(YT[v]), p[v] = n.getModel(XT[v]);
  }
  function m(D) {
    return D === u ? c || (c = e.getItemModel(D)) : e.getItemModel(D);
  }
  function y(D, E) {
    return e.hasItemOption ? D === u ? h[E] || (h[E] = m(D).getModel(YT[E])) : m(D).getModel(YT[E]) : d[E];
  }
  function b(D, E) {
    return e.hasItemOption ? D === u ? f[E] || (f[E] = m(D).getModel(XT[E])) : m(D).getModel(XT[E]) : p[E];
  }
  return function(D, E) {
    return u = D, c = null, h = {}, f = {}, i && i(Le({
      dataIndexInside: D,
      dataIndex: e.getRawIndex(D),
      // Can be used for optimization when zoom or roam.
      actionType: E ? E.type : null
    }, l), a);
  };
  function O(D, E) {
    return E == null && (E = u), e.getStore().get(e.getDimensionIndex(D || 0), E);
  }
  function w(D, E) {
    E == null && (E = u), D = D || 0;
    var M = e.getDimensionInfo(D);
    if (!M) {
      var R = e.getDimensionIndex(D);
      return R >= 0 ? e.getStore().get(R, E) : void 0;
    }
    var N = e.get(M.name, E), $ = M && M.ordinalMeta;
    return $ ? $.categories[N] : N;
  }
  function x(D, E) {
    process.env.NODE_ENV !== "production" && _Q("api.style", "Please write literal style directly instead."), E == null && (E = u);
    var M = e.getItemVisual(E, "style"), R = M && M.fill, N = M && M.opacity, $ = y(E, hc).getItemStyle();
    R != null && ($.fill = R), N != null && ($.opacity = N);
    var V = {
      inheritColor: be(R) ? R : "#000"
    }, H = b(E, hc), G = hn(H, null, V, !1, !0);
    G.text = H.getShallow("show") ? Qe(n.getFormattedLabel(E, hc), $g(e, E)) : null;
    var q = Ux(H, V, !1);
    return C(D, $), $ = xQ($, G, q), D && _($, D), $.legacy = !0, $;
  }
  function S(D, E) {
    process.env.NODE_ENV !== "production" && _Q("api.styleEmphasis", "Please write literal style directly instead."), E == null && (E = u);
    var M = y(E, Yl).getItemStyle(), R = b(E, Yl), N = hn(R, null, null, !0, !0);
    N.text = R.getShallow("show") ? ys(n.getFormattedLabel(E, Yl), n.getFormattedLabel(E, hc), $g(e, E)) : null;
    var $ = Ux(R, null, !0);
    return C(D, M), M = xQ(M, N, $), D && _(M, D), M.legacy = !0, M;
  }
  function _(D, E) {
    for (var M in E)
      we(E, M) && (D[M] = E[M]);
  }
  function C(D, E) {
    D && (D.textFill && (E.textFill = D.textFill), D.textPosition && (E.textPosition = D.textPosition));
  }
  function A(D, E) {
    if (E == null && (E = u), we(bQ, D)) {
      var M = e.getItemVisual(E, "style");
      return M ? M[bQ[D]] : null;
    }
    if (we(cIt, D))
      return e.getItemVisual(E, D);
  }
  function T(D) {
    if (o.type === "cartesian2d") {
      var E = o.getBaseAxis();
      return nCt(Le({
        axis: E
      }, D));
    }
  }
  function k() {
    return t.getCurrentSeriesIndices();
  }
  function L(D) {
    return iR(D, t);
  }
}
function VIt(n) {
  var e = {};
  return I(n.dimensions, function(t) {
    var r = n.getDimensionInfo(t);
    if (!r.isExtraCoord) {
      var i = r.coordDim, o = e[i] = e[i] || [];
      o[r.coordDimIndex] = n.getDimensionIndex(t);
    }
  }), e;
}
function UT(n, e, t, r, i, o, s) {
  if (!r) {
    o.remove(e);
    return;
  }
  var a = b$(n, e, t, r, i, o);
  return a && s.setItemGraphicEl(t, a), a && $n(a, r.focus, r.blurScope, r.emphasisDisabled), a;
}
function b$(n, e, t, r, i, o) {
  process.env.NODE_ENV !== "production" && De(r, "should not have an null/undefined element setting");
  var s = -1, a = e;
  e && Ire(e, r, i) && (s = ot(o.childrenRef(), e), e = null);
  var l = !e, u = e;
  u ? u.clearStates() : (u = m$(r), a && IIt(a, u)), r.morph === !1 ? u.disableMorphing = !0 : u.disableMorphing && (u.disableMorphing = !1), Yo.normal.cfg = Yo.normal.conOpt = Yo.emphasis.cfg = Yo.emphasis.conOpt = Yo.blur.cfg = Yo.blur.conOpt = Yo.select.cfg = Yo.select.conOpt = null, Yo.isLegacy = !1, FIt(u, t, r, i, l, Yo), zIt(u, t, r, i, l), y$(n, u, t, r, Yo, i, l), we(r, "info") && (ql(u).info = r.info);
  for (var c = 0; c < Wc.length; c++) {
    var h = Wc[c];
    if (h !== hc) {
      var f = CS(r, h), d = O$(r, f, h);
      Lre(h, u, f, d, Yo);
    }
  }
  return NIt(u, r, i), r.type === "group" && QIt(n, u, t, r, i), s >= 0 ? o.replaceAt(u, s) : o.add(u), u;
}
function Ire(n, e, t) {
  var r = ql(n), i = e.type, o = e.shape, s = e.style;
  return (
    // Always create new if universal transition is enabled.
    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.
    t.isUniversalTransitionEnabled() || i != null && i !== r.customGraphicType || i === "path" && jIt(o) && Rre(o) !== r.customPathData || i === "image" && we(s, "image") && s.image !== r.customImagePath
  );
}
function zIt(n, e, t, r, i) {
  var o = t.clipPath;
  if (o === !1)
    n && n.getClipPath() && n.removeClipPath();
  else if (o) {
    var s = n.getClipPath();
    s && Ire(s, o, r) && (s = null), s || (s = m$(o), process.env.NODE_ENV !== "production" && De(_S(s), "Only any type of `path` can be used in `clipPath`, rather than " + s.type + "."), n.setClipPath(s)), y$(null, s, e, o, null, r, i);
  }
}
function FIt(n, e, t, r, i, o) {
  if (!n.isGroup) {
    MQ(t, null, o), MQ(t, Yl, o);
    var s = o.normal.conOpt, a = o.emphasis.conOpt, l = o.blur.conOpt, u = o.select.conOpt;
    if (s != null || a != null || u != null || l != null) {
      var c = n.getTextContent();
      if (s === !1)
        c && n.removeTextContent();
      else {
        s = o.normal.conOpt = s || {
          type: "text"
        }, c ? c.clearStates() : (c = m$(s), n.setTextContent(c)), y$(null, c, e, s, null, r, i);
        for (var h = s && s.style, f = 0; f < Wc.length; f++) {
          var d = Wc[f];
          if (d !== hc) {
            var p = o[d].conOpt;
            Lre(d, c, p, O$(s, p, d), null);
          }
        }
        h ? c.dirty() : c.markRedraw();
      }
    }
  }
}
function MQ(n, e, t) {
  var r = e ? CS(n, e) : n, i = e ? O$(n, r, Yl) : n.style, o = n.type, s = r ? r.textConfig : null, a = n.textContent, l = a ? e ? CS(a, e) : a : null;
  if (i && // Because emphasis style has little info to detect legacy,
  // if normal is legacy, emphasis is trade as legacy.
  (t.isLegacy || Are(i, o, !!s, !!l))) {
    t.isLegacy = !0;
    var u = Tre(i, o, !e);
    !s && u.textConfig && (s = u.textConfig), !l && u.textContent && (l = u.textContent);
  }
  if (!e && l) {
    var c = l;
    !c.type && (c.type = "text"), process.env.NODE_ENV !== "production" && De(c.type === "text", 'textContent.type must be "text"');
  }
  var h = e ? t[e] : t.normal;
  h.cfg = s, h.conOpt = l;
}
function CS(n, e) {
  return e ? n ? n[e] : null : n;
}
function O$(n, e, t) {
  var r = e && e.style;
  return r == null && t === Yl && n && (r = n.styleEmphasis), r;
}
function QIt(n, e, t, r, i) {
  var o = r.children, s = o ? o.length : 0, a = r.$mergeChildren, l = a === "byName" || r.diffChildrenByName, u = a === !1;
  if (!(!s && !l && !u)) {
    if (l) {
      WIt({
        api: n,
        oldChildren: e.children() || [],
        newChildren: o || [],
        dataIndex: t,
        seriesModel: i,
        group: e
      });
      return;
    }
    u && e.removeAll();
    for (var c = 0; c < s; c++) {
      var h = o[c], f = e.childAt(c);
      h ? (h.ignore == null && (h.ignore = !1), b$(n, f, t, h, i, e)) : (process.env.NODE_ENV !== "production" && De(f, "renderItem should not return a group containing elements as null/undefined/{} if they do not exist before."), f.ignore = !0);
    }
    for (var d = e.childCount() - 1; d >= c; d--) {
      var p = e.childAt(d);
      ZIt(e, p, i);
    }
  }
}
function ZIt(n, e, t) {
  e && PC(e, ql(n).option, t);
}
function WIt(n) {
  new lu(n.oldChildren, n.newChildren, DQ, DQ, n).add(LQ).update(LQ).remove(GIt).execute();
}
function DQ(n, e) {
  var t = n && n.name;
  return t ?? LIt + e;
}
function LQ(n, e) {
  var t = this.context, r = n != null ? t.newChildren[n] : null, i = e != null ? t.oldChildren[e] : null;
  b$(t.api, i, t.dataIndex, r, t.seriesModel, t.group);
}
function GIt(n) {
  var e = this.context, t = e.oldChildren[n];
  t && PC(t, ql(t).option, e.seriesModel);
}
function Rre(n) {
  return n && (n.pathData || n.d);
}
function jIt(n) {
  return n && (we(n, "pathData") || we(n, "d"));
}
function HIt(n) {
  n.registerChartView($It), n.registerSeriesModel(fIt);
}
var Xh = Ct(), IQ = Re, KT = Oe, qIt = (
  /** @class */
  function() {
    function n() {
      this._dragging = !1, this.animationThreshold = 15;
    }
    return n.prototype.render = function(e, t, r, i) {
      var o = t.get("value"), s = t.get("status");
      if (this._axisModel = e, this._axisPointerModel = t, this._api = r, !(!i && this._lastValue === o && this._lastStatus === s)) {
        this._lastValue = o, this._lastStatus = s;
        var a = this._group, l = this._handle;
        if (!s || s === "hide") {
          a && a.hide(), l && l.hide();
          return;
        }
        a && a.show(), l && l.show();
        var u = {};
        this.makeElOption(u, o, e, t, r);
        var c = u.graphicKey;
        c !== this._lastGraphicKey && this.clear(r), this._lastGraphicKey = c;
        var h = this._moveAnimation = this.determineAnimation(e, t);
        if (!a)
          a = this._group = new Ve(), this.createPointerEl(a, u, e, t), this.createLabelEl(a, u, e, t), r.getZr().add(a);
        else {
          var f = je(RQ, t, h);
          this.updatePointerEl(a, u, f), this.updateLabelEl(a, u, f, t);
        }
        NQ(a, t, !0), this._renderHandle(o);
      }
    }, n.prototype.remove = function(e) {
      this.clear(e);
    }, n.prototype.dispose = function(e) {
      this.clear(e);
    }, n.prototype.determineAnimation = function(e, t) {
      var r = t.get("animation"), i = e.axis, o = i.type === "category", s = t.get("snap");
      if (!s && !o)
        return !1;
      if (r === "auto" || r == null) {
        var a = this.animationThreshold;
        if (o && i.getBandWidth() > a)
          return !0;
        if (s) {
          var l = WR(e).seriesDataCount, u = i.getExtent();
          return Math.abs(u[0] - u[1]) / l > a;
        }
        return !1;
      }
      return r === !0;
    }, n.prototype.makeElOption = function(e, t, r, i, o) {
    }, n.prototype.createPointerEl = function(e, t, r, i) {
      var o = t.pointer;
      if (o) {
        var s = Xh(e).pointerEl = new yd[o.type](IQ(t.pointer));
        e.add(s);
      }
    }, n.prototype.createLabelEl = function(e, t, r, i) {
      if (t.label) {
        var o = Xh(e).labelEl = new At(IQ(t.label));
        e.add(o), $Q(o, i);
      }
    }, n.prototype.updatePointerEl = function(e, t, r) {
      var i = Xh(e).pointerEl;
      i && t.pointer && (i.setStyle(t.pointer.style), r(i, {
        shape: t.pointer.shape
      }));
    }, n.prototype.updateLabelEl = function(e, t, r, i) {
      var o = Xh(e).labelEl;
      o && (o.setStyle(t.label.style), r(o, {
        // Consider text length change in vertical axis, animation should
        // be used on shape, otherwise the effect will be weird.
        // TODOTODO
        // shape: elOption.label.shape,
        x: t.label.x,
        y: t.label.y
      }), $Q(o, i));
    }, n.prototype._renderHandle = function(e) {
      if (!(this._dragging || !this.updateHandleTransform)) {
        var t = this._axisPointerModel, r = this._api.getZr(), i = this._handle, o = t.getModel("handle"), s = t.get("status");
        if (!o.get("show") || !s || s === "hide") {
          i && r.remove(i), this._handle = null;
          return;
        }
        var a;
        this._handle || (a = !0, i = this._handle = Ab(o.get("icon"), {
          cursor: "move",
          draggable: !0,
          onmousemove: function(u) {
            iu(u.event);
          },
          onmousedown: KT(this._onHandleDragMove, this, 0, 0),
          drift: KT(this._onHandleDragMove, this),
          ondragend: KT(this._onHandleDragEnd, this)
        }), r.add(i)), NQ(i, t, !1), i.setStyle(o.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
        var l = o.get("size");
        oe(l) || (l = [l, l]), i.scaleX = l[0] / 2, i.scaleY = l[1] / 2, _v(this, "_doDispatchAxisPointer", o.get("throttle") || 0, "fixRate"), this._moveHandleToValue(e, a);
      }
    }, n.prototype._moveHandleToValue = function(e, t) {
      RQ(this._axisPointerModel, !t && this._moveAnimation, this._handle, JT(this.getHandleTransform(e, this._axisModel, this._axisPointerModel)));
    }, n.prototype._onHandleDragMove = function(e, t) {
      var r = this._handle;
      if (r) {
        this._dragging = !0;
        var i = this.updateHandleTransform(JT(r), [e, t], this._axisModel, this._axisPointerModel);
        this._payloadInfo = i, r.stopAnimation(), r.attr(JT(i)), Xh(r).lastProp = null, this._doDispatchAxisPointer();
      }
    }, n.prototype._doDispatchAxisPointer = function() {
      var e = this._handle;
      if (e) {
        var t = this._payloadInfo, r = this._axisModel;
        this._api.dispatchAction({
          type: "updateAxisPointer",
          x: t.cursorPoint[0],
          y: t.cursorPoint[1],
          tooltipOption: t.tooltipOption,
          axesInfo: [{
            axisDim: r.axis.dim,
            axisIndex: r.componentIndex
          }]
        });
      }
    }, n.prototype._onHandleDragEnd = function() {
      this._dragging = !1;
      var e = this._handle;
      if (e) {
        var t = this._axisPointerModel.get("value");
        this._moveHandleToValue(t), this._api.dispatchAction({
          type: "hideTip"
        });
      }
    }, n.prototype.clear = function(e) {
      this._lastValue = null, this._lastStatus = null;
      var t = e.getZr(), r = this._group, i = this._handle;
      t && r && (this._lastGraphicKey = null, r && t.remove(r), i && t.remove(i), this._group = null, this._handle = null, this._payloadInfo = null), C0(this, "_doDispatchAxisPointer");
    }, n.prototype.doClear = function() {
    }, n.prototype.buildLabel = function(e, t, r) {
      return r = r || 0, {
        x: e[r],
        y: e[1 - r],
        width: t[r],
        height: t[1 - r]
      };
    }, n;
  }()
);
function RQ(n, e, t, r) {
  $re(Xh(t).lastProp, r) || (Xh(t).lastProp = r, e ? kt(t, r, n) : (t.stopAnimation(), t.attr(r)));
}
function $re(n, e) {
  if (Me(n) && Me(e)) {
    var t = !0;
    return I(e, function(r, i) {
      t = t && $re(n[i], r);
    }), !!t;
  } else
    return n === e;
}
function $Q(n, e) {
  n[e.get(["label", "show"]) ? "show" : "hide"]();
}
function JT(n) {
  return {
    x: n.x || 0,
    y: n.y || 0,
    rotation: n.rotation || 0
  };
}
function NQ(n, e, t) {
  var r = e.get("z"), i = e.get("zlevel");
  n && n.traverse(function(o) {
    o.type !== "group" && (r != null && (o.z = r), i != null && (o.zlevel = i), o.silent = t);
  });
}
const w$ = qIt;
function x$(n) {
  var e = n.get("type"), t = n.getModel(e + "Style"), r;
  return e === "line" ? (r = t.getLineStyle(), r.fill = null) : e === "shadow" && (r = t.getAreaStyle(), r.stroke = null), r;
}
function Nre(n, e, t, r, i) {
  var o = t.get("value"), s = Bre(o, e.axis, e.ecModel, t.get("seriesDataIndices"), {
    precision: t.get(["label", "precision"]),
    formatter: t.get(["label", "formatter"])
  }), a = t.getModel("label"), l = yv(a.get("padding") || 0), u = a.getFont(), c = wb(s, u), h = i.position, f = c.width + l[1] + l[3], d = c.height + l[0] + l[2], p = i.align;
  p === "right" && (h[0] -= f), p === "center" && (h[0] -= f / 2);
  var g = i.verticalAlign;
  g === "bottom" && (h[1] -= d), g === "middle" && (h[1] -= d / 2), YIt(h, f, d, r);
  var v = a.get("backgroundColor");
  (!v || v === "auto") && (v = e.get(["axisLine", "lineStyle", "color"])), n.label = {
    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},
    x: h[0],
    y: h[1],
    style: hn(a, {
      text: s,
      font: u,
      fill: a.getTextColor(),
      padding: l,
      backgroundColor: v
    }),
    // Label should be over axisPointer.
    z2: 10
  };
}
function YIt(n, e, t, r) {
  var i = r.getWidth(), o = r.getHeight();
  n[0] = Math.min(n[0] + e, i) - e, n[1] = Math.min(n[1] + t, o) - t, n[0] = Math.max(n[0], 0), n[1] = Math.max(n[1], 0);
}
function Bre(n, e, t, r, i) {
  n = e.scale.parse(n);
  var o = e.scale.getLabel({
    value: n
  }, {
    // If `precision` is set, width can be fixed (like '12.00500'), which
    // helps to debounce when when moving label.
    precision: i.precision
  }), s = i.formatter;
  if (s) {
    var a = {
      value: IR(e, {
        value: n
      }),
      axisDimension: e.dim,
      axisIndex: e.index,
      seriesData: []
    };
    I(r, function(l) {
      var u = t.getSeriesByIndex(l.seriesIndex), c = l.dataIndexInside, h = u && u.getDataParams(c);
      h && a.seriesData.push(h);
    }), be(s) ? o = s.replace("{value}", o) : Pe(s) && (o = s(a));
  }
  return o;
}
function S$(n, e, t) {
  var r = Bo();
  return md(r, r, t.rotation), dl(r, r, t.position), ta([n.dataToCoord(e), (t.labelOffset || 0) + (t.labelDirection || 1) * (t.labelMargin || 0)], r);
}
function Vre(n, e, t, r, i, o) {
  var s = Vi.innerTextLayout(t.rotation, 0, t.labelDirection);
  t.labelMargin = i.get(["label", "margin"]), Nre(e, r, i, o, {
    position: S$(r.axis, n, t),
    align: s.textAlign,
    verticalAlign: s.textVerticalAlign
  });
}
function _$(n, e, t) {
  return t = t || 0, {
    x1: n[t],
    y1: n[1 - t],
    x2: e[t],
    y2: e[1 - t]
  };
}
function zre(n, e, t) {
  return t = t || 0, {
    x: n[t],
    y: n[1 - t],
    width: e[t],
    height: e[1 - t]
  };
}
function BQ(n, e, t, r, i, o) {
  return {
    cx: n,
    cy: e,
    r0: t,
    r,
    startAngle: i,
    endAngle: o,
    clockwise: !0
  };
}
var XIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, r, i, o, s) {
      var a = i.axis, l = a.grid, u = o.get("type"), c = VQ(l, a).getOtherAxis(a).getGlobalExtent(), h = a.toGlobalCoord(a.dataToCoord(r, !0));
      if (u && u !== "none") {
        var f = x$(o), d = UIt[u](a, h, c);
        d.style = f, t.graphicKey = d.type, t.pointer = d;
      }
      var p = RM(l.model, i);
      Vre(
        // @ts-ignore
        r,
        t,
        p,
        i,
        o,
        s
      );
    }, e.prototype.getHandleTransform = function(t, r, i) {
      var o = RM(r.axis.grid.model, r, {
        labelInside: !1
      });
      o.labelMargin = i.get(["handle", "margin"]);
      var s = S$(r.axis, t, o);
      return {
        x: s[0],
        y: s[1],
        rotation: o.rotation + (o.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(t, r, i, o) {
      var s = i.axis, a = s.grid, l = s.getGlobalExtent(!0), u = VQ(a, s).getOtherAxis(s).getGlobalExtent(), c = s.dim === "x" ? 0 : 1, h = [t.x, t.y];
      h[c] += r[c], h[c] = Math.min(l[1], h[c]), h[c] = Math.max(l[0], h[c]);
      var f = (u[1] + u[0]) / 2, d = [f, f];
      d[c] = h[c];
      var p = [{
        verticalAlign: "middle"
      }, {
        align: "center"
      }];
      return {
        x: h[0],
        y: h[1],
        rotation: t.rotation,
        cursorPoint: d,
        tooltipOption: p[c]
      };
    }, e;
  }(w$)
);
function VQ(n, e) {
  var t = {};
  return t[e.dim + "AxisIndex"] = e.index, n.getCartesian(t);
}
var UIt = {
  line: function(n, e, t) {
    var r = _$([e, t[0]], [e, t[1]], zQ(n));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: r
    };
  },
  shadow: function(n, e, t) {
    var r = Math.max(1, n.getBandWidth()), i = t[1] - t[0];
    return {
      type: "Rect",
      shape: zre([e - r / 2, t[0]], [r, i], zQ(n))
    };
  }
};
function zQ(n) {
  return n.dim === "x" ? 0 : 1;
}
const KIt = XIt;
var JIt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "axisPointer", e.defaultOption = {
      // 'auto' means that show when triggered by tooltip or handle.
      show: "auto",
      // zlevel: 0,
      z: 50,
      type: "line",
      // axispointer triggered by tootip determine snap automatically,
      // see `modelHelper`.
      snap: !1,
      triggerTooltip: !0,
      triggerEmphasis: !0,
      value: null,
      status: null,
      link: [],
      // Do not set 'auto' here, otherwise global animation: false
      // will not effect at this axispointer.
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {
        color: "#B9BEC9",
        width: 1,
        type: "dashed"
      },
      shadowStyle: {
        color: "rgba(210,219,238,0.2)"
      },
      label: {
        show: !0,
        formatter: null,
        precision: "auto",
        margin: 3,
        color: "#fff",
        padding: [5, 7, 5, 7],
        backgroundColor: "auto",
        borderColor: null,
        borderWidth: 0,
        borderRadius: 3
      },
      handle: {
        show: !1,
        // eslint-disable-next-line
        icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
        size: 45,
        // handle margin is from symbol center to axis, which is stable when circular move.
        margin: 50,
        // color: '#1b8bbd'
        // color: '#2f4554'
        color: "#333",
        shadowBlur: 3,
        shadowColor: "#aaa",
        shadowOffsetX: 0,
        shadowOffsetY: 2,
        // For mobile performance
        throttle: 40
      }
    }, e;
  }(Ot)
);
const eRt = JIt;
var Fl = Ct(), tRt = I;
function Fre(n, e, t) {
  if (!ht.node) {
    var r = e.getZr();
    Fl(r).records || (Fl(r).records = {}), nRt(r, e);
    var i = Fl(r).records[n] || (Fl(r).records[n] = {});
    i.handler = t;
  }
}
function nRt(n, e) {
  if (Fl(n).initialized)
    return;
  Fl(n).initialized = !0, t("click", je(FQ, "click")), t("mousemove", je(FQ, "mousemove")), t("globalout", iRt);
  function t(r, i) {
    n.on(r, function(o) {
      var s = oRt(e);
      tRt(Fl(n).records, function(a) {
        a && i(a, o, s.dispatchAction);
      }), rRt(s.pendings, e);
    });
  }
}
function rRt(n, e) {
  var t = n.showTip.length, r = n.hideTip.length, i;
  t ? i = n.showTip[t - 1] : r && (i = n.hideTip[r - 1]), i && (i.dispatchAction = null, e.dispatchAction(i));
}
function iRt(n, e, t) {
  n.handler("leave", null, t);
}
function FQ(n, e, t, r) {
  e.handler(n, t, r);
}
function oRt(n) {
  var e = {
    showTip: [],
    hideTip: []
  }, t = function(r) {
    var i = e[r.type];
    i ? i.push(r) : (r.dispatchAction = t, n.dispatchAction(r));
  };
  return {
    dispatchAction: t,
    pendings: e
  };
}
function JM(n, e) {
  if (!ht.node) {
    var t = e.getZr(), r = (Fl(t).records || {})[n];
    r && (Fl(t).records[n] = null);
  }
}
var sRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = r.getComponent("tooltip"), s = t.get("triggerOn") || o && o.get("triggerOn") || "mousemove|click";
      Fre("axisPointer", i, function(a, l, u) {
        s !== "none" && (a === "leave" || s.indexOf(a) >= 0) && u({
          type: "updateAxisPointer",
          currTrigger: a,
          x: l && l.offsetX,
          y: l && l.offsetY
        });
      });
    }, e.prototype.remove = function(t, r) {
      JM("axisPointer", r);
    }, e.prototype.dispose = function(t, r) {
      JM("axisPointer", r);
    }, e.type = "axisPointer", e;
  }(Nn)
);
const aRt = sRt;
function Qre(n, e) {
  var t = [], r = n.seriesIndex, i;
  if (r == null || !(i = e.getSeriesByIndex(r)))
    return {
      point: []
    };
  var o = i.getData(), s = nd(o, n);
  if (s == null || s < 0 || oe(s))
    return {
      point: []
    };
  var a = o.getItemGraphicEl(s), l = i.coordinateSystem;
  if (i.getTooltipPosition)
    t = i.getTooltipPosition(s) || [];
  else if (l && l.dataToPoint)
    if (n.isStacked) {
      var u = l.getBaseAxis(), c = l.getOtherAxis(u), h = c.dim, f = u.dim, d = h === "x" || h === "radius" ? 1 : 0, p = o.mapDimension(f), g = [];
      g[d] = o.get(p, s), g[1 - d] = o.get(o.getCalculationInfo("stackResultDimension"), s), t = l.dataToPoint(g) || [];
    } else
      t = l.dataToPoint(o.getValues(ae(l.dimensions, function(m) {
        return o.mapDimension(m);
      }), s)) || [];
  else if (a) {
    var v = a.getBoundingRect().clone();
    v.applyTransform(a.transform), t = [v.x + v.width / 2, v.y + v.height / 2];
  }
  return {
    point: t,
    el: a
  };
}
var QQ = Ct();
function lRt(n, e, t) {
  var r = n.currTrigger, i = [n.x, n.y], o = n, s = n.dispatchAction || Oe(t.dispatchAction, t), a = e.getComponent("axisPointer").coordSysAxesInfo;
  if (a) {
    Mw(i) && (i = Qre({
      seriesIndex: o.seriesIndex,
      // Do not use dataIndexInside from other ec instance.
      // FIXME: auto detect it?
      dataIndex: o.dataIndex
    }, e).point);
    var l = Mw(i), u = o.axesInfo, c = a.axesInfo, h = r === "leave" || Mw(i), f = {}, d = {}, p = {
      list: [],
      map: {}
    }, g = {
      showPointer: je(cRt, d),
      showTooltip: je(hRt, p)
    };
    I(a.coordSysMap, function(m, y) {
      var b = l || m.containPoint(i);
      I(a.coordSysAxesInfo[y], function(O, w) {
        var x = O.axis, S = gRt(u, O);
        if (!h && b && (!u || S)) {
          var _ = S && S.value;
          _ == null && !l && (_ = x.pointToData(i)), _ != null && ZQ(O, _, g, !1, f);
        }
      });
    });
    var v = {};
    return I(c, function(m, y) {
      var b = m.linkGroup;
      b && !d[y] && I(b.axesInfo, function(O, w) {
        var x = d[w];
        if (O !== m && x) {
          var S = x.value;
          b.mapper && (S = m.axis.scale.parse(b.mapper(S, WQ(O), WQ(m)))), v[m.key] = S;
        }
      });
    }), I(v, function(m, y) {
      ZQ(c[y], m, g, !0, f);
    }), fRt(d, c, f), dRt(p, i, n, s), pRt(c, s, t), f;
  }
}
function ZQ(n, e, t, r, i) {
  var o = n.axis;
  if (!(o.scale.isBlank() || !o.containData(e))) {
    if (!n.involveSeries) {
      t.showPointer(n, e);
      return;
    }
    var s = uRt(e, n), a = s.payloadBatch, l = s.snapToValue;
    a[0] && i.seriesIndex == null && te(i, a[0]), !r && n.snap && o.containData(l) && l != null && (e = l), t.showPointer(n, e, a), t.showTooltip(n, s, l);
  }
}
function uRt(n, e) {
  var t = e.axis, r = t.dim, i = n, o = [], s = Number.MAX_VALUE, a = -1;
  return I(e.seriesModels, function(l, u) {
    var c = l.getData().mapDimensionsAll(r), h, f;
    if (l.getAxisTooltipData) {
      var d = l.getAxisTooltipData(c, n, t);
      f = d.dataIndices, h = d.nestestValue;
    } else {
      if (f = l.getData().indicesOfNearest(
        c[0],
        n,
        // Add a threshold to avoid find the wrong dataIndex
        // when data length is not same.
        // false,
        t.type === "category" ? 0.5 : null
      ), !f.length)
        return;
      h = l.getData().get(c[0], f[0]);
    }
    if (!(h == null || !isFinite(h))) {
      var p = n - h, g = Math.abs(p);
      g <= s && ((g < s || p >= 0 && a < 0) && (s = g, a = p, i = h, o.length = 0), I(f, function(v) {
        o.push({
          seriesIndex: l.seriesIndex,
          dataIndexInside: v,
          dataIndex: l.getData().getRawIndex(v)
        });
      }));
    }
  }), {
    payloadBatch: o,
    snapToValue: i
  };
}
function cRt(n, e, t, r) {
  n[e.key] = {
    value: t,
    payloadBatch: r
  };
}
function hRt(n, e, t, r) {
  var i = t.payloadBatch, o = e.axis, s = o.model, a = e.axisPointerModel;
  if (!(!e.triggerTooltip || !i.length)) {
    var l = e.coordSys.model, u = D0(l), c = n.map[u];
    c || (c = n.map[u] = {
      coordSysId: l.id,
      coordSysIndex: l.componentIndex,
      coordSysType: l.type,
      coordSysMainType: l.mainType,
      dataByAxis: []
    }, n.list.push(c)), c.dataByAxis.push({
      axisDim: o.dim,
      axisIndex: s.componentIndex,
      axisType: s.type,
      axisId: s.id,
      value: r,
      // Caustion: viewHelper.getValueLabel is actually on "view stage", which
      // depends that all models have been updated. So it should not be performed
      // here. Considering axisPointerModel used here is volatile, which is hard
      // to be retrieve in TooltipView, we prepare parameters here.
      valueLabelOpt: {
        precision: a.get(["label", "precision"]),
        formatter: a.get(["label", "formatter"])
      },
      seriesDataIndices: i.slice()
    });
  }
}
function fRt(n, e, t) {
  var r = t.axesInfo = [];
  I(e, function(i, o) {
    var s = i.axisPointerModel.option, a = n[o];
    a ? (!i.useHandle && (s.status = "show"), s.value = a.value, s.seriesDataIndices = (a.payloadBatch || []).slice()) : !i.useHandle && (s.status = "hide"), s.status === "show" && r.push({
      axisDim: i.axis.dim,
      axisIndex: i.axis.model.componentIndex,
      value: s.value
    });
  });
}
function dRt(n, e, t, r) {
  if (Mw(e) || !n.list.length) {
    r({
      type: "hideTip"
    });
    return;
  }
  var i = ((n.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
  r({
    type: "showTip",
    escapeConnect: !0,
    x: e[0],
    y: e[1],
    tooltipOption: t.tooltipOption,
    position: t.position,
    dataIndexInside: i.dataIndexInside,
    dataIndex: i.dataIndex,
    seriesIndex: i.seriesIndex,
    dataByCoordSys: n.list
  });
}
function pRt(n, e, t) {
  var r = t.getZr(), i = "axisPointerLastHighlights", o = QQ(r)[i] || {}, s = QQ(r)[i] = {};
  I(n, function(u, c) {
    var h = u.axisPointerModel.option;
    h.status === "show" && u.triggerEmphasis && I(h.seriesDataIndices, function(f) {
      var d = f.seriesIndex + " | " + f.dataIndex;
      s[d] = f;
    });
  });
  var a = [], l = [];
  I(o, function(u, c) {
    !s[c] && l.push(u);
  }), I(s, function(u, c) {
    !o[c] && a.push(u);
  }), l.length && t.dispatchAction({
    type: "downplay",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: l
  }), a.length && t.dispatchAction({
    type: "highlight",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: a
  });
}
function gRt(n, e) {
  for (var t = 0; t < (n || []).length; t++) {
    var r = n[t];
    if (e.axis.dim === r.axisDim && e.axis.model.componentIndex === r.axisIndex)
      return r;
  }
}
function WQ(n) {
  var e = n.axis.model, t = {}, r = t.axisDim = n.axis.dim;
  return t.axisIndex = t[r + "AxisIndex"] = e.componentIndex, t.axisName = t[r + "AxisName"] = e.name, t.axisId = t[r + "AxisId"] = e.id, t;
}
function Mw(n) {
  return !n || n[0] == null || isNaN(n[0]) || n[1] == null || isNaN(n[1]);
}
function Vb(n) {
  Sd.registerAxisPointerClass("CartesianAxisPointer", KIt), n.registerComponentModel(eRt), n.registerComponentView(aRt), n.registerPreprocessor(function(e) {
    if (e) {
      (!e.axisPointer || e.axisPointer.length === 0) && (e.axisPointer = {});
      var t = e.axisPointer.link;
      t && !oe(t) && (e.axisPointer.link = [t]);
    }
  }), n.registerProcessor(n.PRIORITY.PROCESSOR.STATISTIC, function(e, t) {
    e.getComponent("axisPointer").coordSysAxesInfo = dTt(e, t);
  }), n.registerAction({
    type: "updateAxisPointer",
    event: "updateAxisPointer",
    update: ":updateAxisPointer"
  }, lRt);
}
function vRt(n) {
  at(dne), at(Vb);
}
var mRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, r, i, o, s) {
      var a = i.axis;
      a.dim === "angle" && (this.animationThreshold = Math.PI / 18);
      var l = a.polar, u = l.getOtherAxis(a), c = u.getExtent(), h = a.dataToCoord(r), f = o.get("type");
      if (f && f !== "none") {
        var d = x$(o), p = bRt[f](a, l, h, c);
        p.style = d, t.graphicKey = p.type, t.pointer = p;
      }
      var g = o.get(["label", "margin"]), v = yRt(r, i, o, l, g);
      Nre(t, i, o, s, v);
    }, e;
  }(w$)
);
function yRt(n, e, t, r, i) {
  var o = e.axis, s = o.dataToCoord(n), a = r.getAngleAxis().getExtent()[0];
  a = a / 180 * Math.PI;
  var l = r.getRadiusAxis().getExtent(), u, c, h;
  if (o.dim === "radius") {
    var f = Bo();
    md(f, f, a), dl(f, f, [r.cx, r.cy]), u = ta([s, -i], f);
    var d = e.getModel("axisLabel").get("rotate") || 0, p = Vi.innerTextLayout(a, d * Math.PI / 180, -1);
    c = p.textAlign, h = p.textVerticalAlign;
  } else {
    var g = l[1];
    u = r.coordToPoint([g + i, s]);
    var v = r.cx, m = r.cy;
    c = Math.abs(u[0] - v) / g < 0.3 ? "center" : u[0] > v ? "left" : "right", h = Math.abs(u[1] - m) / g < 0.3 ? "middle" : u[1] > m ? "top" : "bottom";
  }
  return {
    position: u,
    align: c,
    verticalAlign: h
  };
}
var bRt = {
  line: function(n, e, t, r) {
    return n.dim === "angle" ? {
      type: "Line",
      shape: _$(e.coordToPoint([r[0], t]), e.coordToPoint([r[1], t]))
    } : {
      type: "Circle",
      shape: {
        cx: e.cx,
        cy: e.cy,
        r: t
      }
    };
  },
  shadow: function(n, e, t, r) {
    var i = Math.max(1, n.getBandWidth()), o = Math.PI / 180;
    return n.dim === "angle" ? {
      type: "Sector",
      shape: BQ(
        e.cx,
        e.cy,
        r[0],
        r[1],
        // In ECharts y is negative if angle is positive
        (-t - i / 2) * o,
        (-t + i / 2) * o
      )
    } : {
      type: "Sector",
      shape: BQ(e.cx, e.cy, t - i / 2, t + i / 2, 0, Math.PI * 2)
    };
  }
};
const ORt = mRt;
var wRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.findAxisModel = function(t) {
      var r, i = this.ecModel;
      return i.eachComponent(t, function(o) {
        o.getCoordSysModel() === this && (r = o);
      }, this), r;
    }, e.type = "polar", e.dependencies = ["radiusAxis", "angleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "80%"
    }, e;
  }(Ot)
);
const xRt = wRt;
var C$ = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("polar", nr).models[0];
    }, e.type = "polarAxis", e;
  }(Ot)
);
lr(C$, kb);
var SRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "angleAxis", e;
  }(C$)
), _Rt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "radiusAxis", e;
  }(C$)
), A$ = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r) {
      return n.call(this, "radius", t, r) || this;
    }
    return e.prototype.pointToData = function(t, r) {
      return this.polar.pointToData(t, r)[this.dim === "radius" ? 0 : 1];
    }, e;
  }(ba)
);
A$.prototype.dataToRadius = ba.prototype.dataToCoord;
A$.prototype.radiusToData = ba.prototype.coordToData;
var CRt = Ct(), T$ = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r) {
      return n.call(this, "angle", t, r || [0, 360]) || this;
    }
    return e.prototype.pointToData = function(t, r) {
      return this.polar.pointToData(t, r)[this.dim === "radius" ? 0 : 1];
    }, e.prototype.calculateCategoryInterval = function() {
      var t = this, r = t.getLabelModel(), i = t.scale, o = i.getExtent(), s = i.count();
      if (o[1] - o[0] < 1)
        return 0;
      var a = o[0], l = t.dataToCoord(a + 1) - t.dataToCoord(a), u = Math.abs(l), c = wb(a == null ? "" : a + "", r.getFont(), "center", "top"), h = Math.max(c.height, 7), f = h / u;
      isNaN(f) && (f = 1 / 0);
      var d = Math.max(0, Math.floor(f)), p = CRt(t.model), g = p.lastAutoInterval, v = p.lastTickCount;
      return g != null && v != null && Math.abs(g - d) <= 1 && Math.abs(v - s) <= 1 && g > d ? d = g : (p.lastTickCount = s, p.lastAutoInterval = d), d;
    }, e;
  }(ba)
);
T$.prototype.dataToAngle = ba.prototype.dataToCoord;
T$.prototype.angleToData = ba.prototype.coordToData;
var Zre = ["radius", "angle"], ARt = (
  /** @class */
  function() {
    function n(e) {
      this.dimensions = Zre, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new A$(), this._angleAxis = new T$(), this.axisPointerEnabled = !0, this.name = e || "", this._radiusAxis.polar = this._angleAxis.polar = this;
    }
    return n.prototype.containPoint = function(e) {
      var t = this.pointToCoord(e);
      return this._radiusAxis.contain(t[0]) && this._angleAxis.contain(t[1]);
    }, n.prototype.containData = function(e) {
      return this._radiusAxis.containData(e[0]) && this._angleAxis.containData(e[1]);
    }, n.prototype.getAxis = function(e) {
      var t = "_" + e + "Axis";
      return this[t];
    }, n.prototype.getAxes = function() {
      return [this._radiusAxis, this._angleAxis];
    }, n.prototype.getAxesByScale = function(e) {
      var t = [], r = this._angleAxis, i = this._radiusAxis;
      return r.scale.type === e && t.push(r), i.scale.type === e && t.push(i), t;
    }, n.prototype.getAngleAxis = function() {
      return this._angleAxis;
    }, n.prototype.getRadiusAxis = function() {
      return this._radiusAxis;
    }, n.prototype.getOtherAxis = function(e) {
      var t = this._angleAxis;
      return e === t ? this._radiusAxis : t;
    }, n.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, n.prototype.getTooltipAxes = function(e) {
      var t = e != null && e !== "auto" ? this.getAxis(e) : this.getBaseAxis();
      return {
        baseAxes: [t],
        otherAxes: [this.getOtherAxis(t)]
      };
    }, n.prototype.dataToPoint = function(e, t) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(e[0], t), this._angleAxis.dataToAngle(e[1], t)]);
    }, n.prototype.pointToData = function(e, t) {
      var r = this.pointToCoord(e);
      return [this._radiusAxis.radiusToData(r[0], t), this._angleAxis.angleToData(r[1], t)];
    }, n.prototype.pointToCoord = function(e) {
      var t = e[0] - this.cx, r = e[1] - this.cy, i = this.getAngleAxis(), o = i.getExtent(), s = Math.min(o[0], o[1]), a = Math.max(o[0], o[1]);
      i.inverse ? s = a - 360 : a = s + 360;
      var l = Math.sqrt(t * t + r * r);
      t /= l, r /= l;
      for (var u = Math.atan2(-r, t) / Math.PI * 180, c = u < s ? 1 : -1; u < s || u > a; )
        u += c * 360;
      return [l, u];
    }, n.prototype.coordToPoint = function(e) {
      var t = e[0], r = e[1] / 180 * Math.PI, i = Math.cos(r) * t + this.cx, o = -Math.sin(r) * t + this.cy;
      return [i, o];
    }, n.prototype.getArea = function() {
      var e = this.getAngleAxis(), t = this.getRadiusAxis(), r = t.getExtent().slice();
      r[0] > r[1] && r.reverse();
      var i = e.getExtent(), o = Math.PI / 180;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: r[0],
        r: r[1],
        startAngle: -i[0] * o,
        endAngle: -i[1] * o,
        clockwise: e.inverse,
        contain: function(s, a) {
          var l = s - this.cx, u = a - this.cy, c = l * l + u * u - 1e-4, h = this.r, f = this.r0;
          return c <= h * h && c >= f * f;
        }
      };
    }, n.prototype.convertToPixel = function(e, t, r) {
      var i = GQ(t);
      return i === this ? this.dataToPoint(r) : null;
    }, n.prototype.convertFromPixel = function(e, t, r) {
      var i = GQ(t);
      return i === this ? this.pointToData(r) : null;
    }, n;
  }()
);
function GQ(n) {
  var e = n.seriesModel, t = n.polarModel;
  return t && t.coordinateSystem || e && e.coordinateSystem;
}
const TRt = ARt;
function PRt(n, e, t) {
  var r = e.get("center"), i = t.getWidth(), o = t.getHeight();
  n.cx = fe(r[0], i), n.cy = fe(r[1], o);
  var s = n.getRadiusAxis(), a = Math.min(i, o) / 2, l = e.get("radius");
  l == null ? l = [0, "100%"] : oe(l) || (l = [0, l]);
  var u = [fe(l[0], a), fe(l[1], a)];
  s.inverse ? s.setExtent(u[1], u[0]) : s.setExtent(u[0], u[1]);
}
function ERt(n, e) {
  var t = this, r = t.getAngleAxis(), i = t.getRadiusAxis();
  if (r.scale.setExtent(1 / 0, -1 / 0), i.scale.setExtent(1 / 0, -1 / 0), n.eachSeries(function(a) {
    if (a.coordinateSystem === t) {
      var l = a.getData();
      I(cS(l, "radius"), function(u) {
        i.scale.unionExtentFromData(l, u);
      }), I(cS(l, "angle"), function(u) {
        r.scale.unionExtentFromData(l, u);
      });
    }
  }), Rg(r.scale, r.model), Rg(i.scale, i.model), r.type === "category" && !r.onBand) {
    var o = r.getExtent(), s = 360 / r.scale.count();
    r.inverse ? o[1] += s : o[1] -= s, r.setExtent(o[0], o[1]);
  }
}
function kRt(n) {
  return n.mainType === "angleAxis";
}
function jQ(n, e) {
  var t;
  if (n.type = e.get("type"), n.scale = wC(e), n.onBand = e.get("boundaryGap") && n.type === "category", n.inverse = e.get("inverse"), kRt(e)) {
    n.inverse = n.inverse !== e.get("clockwise");
    var r = e.get("startAngle"), i = (t = e.get("endAngle")) !== null && t !== void 0 ? t : r + (n.inverse ? -360 : 360);
    n.setExtent(r, i);
  }
  e.axis = n, n.model = e;
}
var MRt = {
  dimensions: Zre,
  create: function(n, e) {
    var t = [];
    return n.eachComponent("polar", function(r, i) {
      var o = new TRt(i + "");
      o.update = ERt;
      var s = o.getRadiusAxis(), a = o.getAngleAxis(), l = r.findAxisModel("radiusAxis"), u = r.findAxisModel("angleAxis");
      jQ(s, l), jQ(a, u), PRt(o, r, e), t.push(o), r.coordinateSystem = o, o.model = r;
    }), n.eachSeries(function(r) {
      if (r.get("coordinateSystem") === "polar") {
        var i = r.getReferringComponents("polar", nr).models[0];
        if (process.env.NODE_ENV !== "production" && !i)
          throw new Error('Polar "' + tr(r.get("polarIndex"), r.get("polarId"), 0) + '" not found');
        r.coordinateSystem = i.coordinateSystem;
      }
    }), t;
  }
};
const DRt = MRt;
var LRt = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
function PO(n, e, t) {
  e[1] > e[0] && (e = e.slice().reverse());
  var r = n.coordToPoint([e[0], t]), i = n.coordToPoint([e[1], t]);
  return {
    x1: r[0],
    y1: r[1],
    x2: i[0],
    y2: i[1]
  };
}
function EO(n) {
  var e = n.getRadiusAxis();
  return e.inverse ? 0 : 1;
}
function HQ(n) {
  var e = n[0], t = n[n.length - 1];
  e && t && Math.abs(Math.abs(e.coord - t.coord) - 360) < 1e-4 && n.pop();
}
var IRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
    }
    return e.prototype.render = function(t, r) {
      if (this.group.removeAll(), !!t.get("show")) {
        var i = t.axis, o = i.polar, s = o.getRadiusAxis().getExtent(), a = i.getTicksCoords(), l = i.getMinorTicksCoords(), u = ae(i.getViewLabels(), function(c) {
          c = Re(c);
          var h = i.scale, f = h.type === "ordinal" ? h.getRawOrdinalNumber(c.tickValue) : c.tickValue;
          return c.coord = i.dataToCoord(f), c;
        });
        HQ(u), HQ(a), I(LRt, function(c) {
          t.get([c, "show"]) && (!i.scale.isBlank() || c === "axisLine") && RRt[c](this.group, t, o, a, l, s, u);
        }, this);
      }
    }, e.type = "angleAxis", e;
  }(Sd)
), RRt = {
  axisLine: function(n, e, t, r, i, o) {
    var s = e.getModel(["axisLine", "lineStyle"]), a = t.getAngleAxis(), l = Math.PI / 180, u = a.getExtent(), c = EO(t), h = c ? 0 : 1, f, d = Math.abs(u[1] - u[0]) === 360 ? "Circle" : "Arc";
    o[h] === 0 ? f = new yd[d]({
      shape: {
        cx: t.cx,
        cy: t.cy,
        r: o[c],
        startAngle: -u[0] * l,
        endAngle: -u[1] * l,
        clockwise: a.inverse
      },
      style: s.getLineStyle(),
      z2: 1,
      silent: !0
    }) : f = new rC({
      shape: {
        cx: t.cx,
        cy: t.cy,
        r: o[c],
        r0: o[h]
      },
      style: s.getLineStyle(),
      z2: 1,
      silent: !0
    }), f.style.fill = null, n.add(f);
  },
  axisTick: function(n, e, t, r, i, o) {
    var s = e.getModel("axisTick"), a = (s.get("inside") ? -1 : 1) * s.get("length"), l = o[EO(t)], u = ae(r, function(c) {
      return new Ar({
        shape: PO(t, [l, l + a], c.coord)
      });
    });
    n.add(us(u, {
      style: Le(s.getModel("lineStyle").getLineStyle(), {
        stroke: e.get(["axisLine", "lineStyle", "color"])
      })
    }));
  },
  minorTick: function(n, e, t, r, i, o) {
    if (i.length) {
      for (var s = e.getModel("axisTick"), a = e.getModel("minorTick"), l = (s.get("inside") ? -1 : 1) * a.get("length"), u = o[EO(t)], c = [], h = 0; h < i.length; h++)
        for (var f = 0; f < i[h].length; f++)
          c.push(new Ar({
            shape: PO(t, [u, u + l], i[h][f].coord)
          }));
      n.add(us(c, {
        style: Le(a.getModel("lineStyle").getLineStyle(), Le(s.getLineStyle(), {
          stroke: e.get(["axisLine", "lineStyle", "color"])
        }))
      }));
    }
  },
  axisLabel: function(n, e, t, r, i, o, s) {
    var a = e.getCategories(!0), l = e.getModel("axisLabel"), u = l.get("margin"), c = e.get("triggerEvent");
    I(s, function(h, f) {
      var d = l, p = h.tickValue, g = o[EO(t)], v = t.coordToPoint([g + u, h.coord]), m = t.cx, y = t.cy, b = Math.abs(v[0] - m) / g < 0.3 ? "center" : v[0] > m ? "left" : "right", O = Math.abs(v[1] - y) / g < 0.3 ? "middle" : v[1] > y ? "top" : "bottom";
      if (a && a[p]) {
        var w = a[p];
        Me(w) && w.textStyle && (d = new fn(w.textStyle, l, l.ecModel));
      }
      var x = new At({
        silent: Vi.isLabelSilent(e),
        style: hn(d, {
          x: v[0],
          y: v[1],
          fill: d.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          text: h.formattedLabel,
          align: b,
          verticalAlign: O
        })
      });
      if (n.add(x), c) {
        var S = Vi.makeAxisEventDataBase(e);
        S.targetType = "axisLabel", S.value = h.rawLabel, Fe(x).eventData = S;
      }
    }, this);
  },
  splitLine: function(n, e, t, r, i, o) {
    var s = e.getModel("splitLine"), a = s.getModel("lineStyle"), l = a.get("color"), u = 0;
    l = l instanceof Array ? l : [l];
    for (var c = [], h = 0; h < r.length; h++) {
      var f = u++ % l.length;
      c[f] = c[f] || [], c[f].push(new Ar({
        shape: PO(t, o, r[h].coord)
      }));
    }
    for (var h = 0; h < c.length; h++)
      n.add(us(c[h], {
        style: Le({
          stroke: l[h % l.length]
        }, a.getLineStyle()),
        silent: !0,
        z: e.get("z")
      }));
  },
  minorSplitLine: function(n, e, t, r, i, o) {
    if (i.length) {
      for (var s = e.getModel("minorSplitLine"), a = s.getModel("lineStyle"), l = [], u = 0; u < i.length; u++)
        for (var c = 0; c < i[u].length; c++)
          l.push(new Ar({
            shape: PO(t, o, i[u][c].coord)
          }));
      n.add(us(l, {
        style: a.getLineStyle(),
        silent: !0,
        z: e.get("z")
      }));
    }
  },
  splitArea: function(n, e, t, r, i, o) {
    if (r.length) {
      var s = e.getModel("splitArea"), a = s.getModel("areaStyle"), l = a.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], h = Math.PI / 180, f = -r[0].coord * h, d = Math.min(o[0], o[1]), p = Math.max(o[0], o[1]), g = e.get("clockwise"), v = 1, m = r.length; v <= m; v++) {
        var y = v === m ? r[0].coord : r[v].coord, b = u++ % l.length;
        c[b] = c[b] || [], c[b].push(new go({
          shape: {
            cx: t.cx,
            cy: t.cy,
            r0: d,
            r: p,
            startAngle: f,
            endAngle: -y * h,
            clockwise: g
          },
          silent: !0
        })), f = -y * h;
      }
      for (var v = 0; v < c.length; v++)
        n.add(us(c[v], {
          style: Le({
            fill: l[v % l.length]
          }, a.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
const $Rt = IRt;
var NRt = ["axisLine", "axisTickLabel", "axisName"], BRt = ["splitLine", "splitArea", "minorSplitLine"], VRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
    }
    return e.prototype.render = function(t, r) {
      if (this.group.removeAll(), !!t.get("show")) {
        var i = this._axisGroup, o = this._axisGroup = new Ve();
        this.group.add(o);
        var s = t.axis, a = s.polar, l = a.getAngleAxis(), u = s.getTicksCoords(), c = s.getMinorTicksCoords(), h = l.getExtent()[0], f = s.getExtent(), d = FRt(a, t, h), p = new Vi(t, d);
        I(NRt, p.add, p), o.add(p.getGroup()), Cb(i, o, t), I(BRt, function(g) {
          t.get([g, "show"]) && !s.scale.isBlank() && zRt[g](this.group, t, a, h, f, u, c);
        }, this);
      }
    }, e.type = "radiusAxis", e;
  }(Sd)
), zRt = {
  splitLine: function(n, e, t, r, i, o) {
    var s = e.getModel("splitLine"), a = s.getModel("lineStyle"), l = a.get("color"), u = 0, c = t.getAngleAxis(), h = Math.PI / 180, f = c.getExtent(), d = Math.abs(f[1] - f[0]) === 360 ? "Circle" : "Arc";
    l = l instanceof Array ? l : [l];
    for (var p = [], g = 0; g < o.length; g++) {
      var v = u++ % l.length;
      p[v] = p[v] || [], p[v].push(new yd[d]({
        shape: {
          cx: t.cx,
          cy: t.cy,
          // ensure circle radius >= 0
          r: Math.max(o[g].coord, 0),
          startAngle: -f[0] * h,
          endAngle: -f[1] * h,
          clockwise: c.inverse
        }
      }));
    }
    for (var g = 0; g < p.length; g++)
      n.add(us(p[g], {
        style: Le({
          stroke: l[g % l.length],
          fill: null
        }, a.getLineStyle()),
        silent: !0
      }));
  },
  minorSplitLine: function(n, e, t, r, i, o, s) {
    if (s.length) {
      for (var a = e.getModel("minorSplitLine"), l = a.getModel("lineStyle"), u = [], c = 0; c < s.length; c++)
        for (var h = 0; h < s[c].length; h++)
          u.push(new rh({
            shape: {
              cx: t.cx,
              cy: t.cy,
              r: s[c][h].coord
            }
          }));
      n.add(us(u, {
        style: Le({
          fill: null
        }, l.getLineStyle()),
        silent: !0
      }));
    }
  },
  splitArea: function(n, e, t, r, i, o) {
    if (o.length) {
      var s = e.getModel("splitArea"), a = s.getModel("areaStyle"), l = a.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], h = o[0].coord, f = 1; f < o.length; f++) {
        var d = u++ % l.length;
        c[d] = c[d] || [], c[d].push(new go({
          shape: {
            cx: t.cx,
            cy: t.cy,
            r0: h,
            r: o[f].coord,
            startAngle: 0,
            endAngle: Math.PI * 2
          },
          silent: !0
        })), h = o[f].coord;
      }
      for (var f = 0; f < c.length; f++)
        n.add(us(c[f], {
          style: Le({
            fill: l[f % l.length]
          }, a.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
function FRt(n, e, t) {
  return {
    position: [n.cx, n.cy],
    rotation: t / 180 * Math.PI,
    labelDirection: -1,
    tickDirection: -1,
    nameDirection: 1,
    labelRotate: e.getModel("axisLabel").get("rotate"),
    // Over splitLine and splitArea
    z2: 1
  };
}
const QRt = VRt;
function Wre(n) {
  return n.get("stack") || "__ec_stack_" + n.seriesIndex;
}
function Gre(n, e) {
  return e.dim + n.model.componentIndex;
}
function ZRt(n, e, t) {
  var r = {}, i = WRt(Gt(e.getSeriesByType(n), function(o) {
    return !e.isSeriesFiltered(o) && o.coordinateSystem && o.coordinateSystem.type === "polar";
  }));
  e.eachSeriesByType(n, function(o) {
    if (o.coordinateSystem.type === "polar") {
      var s = o.getData(), a = o.coordinateSystem, l = a.getBaseAxis(), u = Gre(a, l), c = Wre(o), h = i[u][c], f = h.offset, d = h.width, p = a.getOtherAxis(l), g = o.coordinateSystem.cx, v = o.coordinateSystem.cy, m = o.get("barMinHeight") || 0, y = o.get("barMinAngle") || 0;
      r[c] = r[c] || [];
      for (var b = s.mapDimension(p.dim), O = s.mapDimension(l.dim), w = Fc(
        s,
        b
        /* , baseDim */
      ), x = l.dim !== "radius" || !o.get("roundCap", !0), S = p.dataToCoord(0), _ = 0, C = s.count(); _ < C; _++) {
        var A = s.get(b, _), T = s.get(O, _), k = A >= 0 ? "p" : "n", L = S;
        w && (r[c][T] || (r[c][T] = {
          p: S,
          n: S
          // Negative stack
        }), L = r[c][T][k]);
        var D = void 0, E = void 0, M = void 0, R = void 0;
        if (p.dim === "radius") {
          var N = p.dataToCoord(A) - S, $ = l.dataToCoord(T);
          Math.abs(N) < m && (N = (N < 0 ? -1 : 1) * m), D = L, E = L + N, M = $ - f, R = M - d, w && (r[c][T][k] = E);
        } else {
          var V = p.dataToCoord(A, x) - S, H = l.dataToCoord(T);
          Math.abs(V) < y && (V = (V < 0 ? -1 : 1) * y), D = H + f, E = D + d, M = L, R = L + V, w && (r[c][T][k] = R);
        }
        s.setItemLayout(_, {
          cx: g,
          cy: v,
          r0: D,
          r: E,
          // Consider that positive angle is anti-clockwise,
          // while positive radian of sector is clockwise
          startAngle: -M * Math.PI / 180,
          endAngle: -R * Math.PI / 180,
          /**
           * Keep the same logic with bar in catesion: use end value to
           * control direction. Notice that if clockwise is true (by
           * default), the sector will always draw clockwisely, no matter
           * whether endAngle is greater or less than startAngle.
           */
          clockwise: M >= R
        });
      }
    }
  });
}
function WRt(n) {
  var e = {};
  I(n, function(r, i) {
    var o = r.getData(), s = r.coordinateSystem, a = s.getBaseAxis(), l = Gre(s, a), u = a.getExtent(), c = a.type === "category" ? a.getBandWidth() : Math.abs(u[1] - u[0]) / o.count(), h = e[l] || {
      bandWidth: c,
      remainedWidth: c,
      autoWidthCount: 0,
      categoryGap: "20%",
      gap: "30%",
      stacks: {}
    }, f = h.stacks;
    e[l] = h;
    var d = Wre(r);
    f[d] || h.autoWidthCount++, f[d] = f[d] || {
      width: 0,
      maxWidth: 0
    };
    var p = fe(r.get("barWidth"), c), g = fe(r.get("barMaxWidth"), c), v = r.get("barGap"), m = r.get("barCategoryGap");
    p && !f[d].width && (p = Math.min(h.remainedWidth, p), f[d].width = p, h.remainedWidth -= p), g && (f[d].maxWidth = g), v != null && (h.gap = v), m != null && (h.categoryGap = m);
  });
  var t = {};
  return I(e, function(r, i) {
    t[i] = {};
    var o = r.stacks, s = r.bandWidth, a = fe(r.categoryGap, s), l = fe(r.gap, 1), u = r.remainedWidth, c = r.autoWidthCount, h = (u - a) / (c + (c - 1) * l);
    h = Math.max(h, 0), I(o, function(g, v) {
      var m = g.maxWidth;
      m && m < h && (m = Math.min(m, u), g.width && (m = Math.min(m, g.width)), u -= m, g.width = m, c--);
    }), h = (u - a) / (c + (c - 1) * l), h = Math.max(h, 0);
    var f = 0, d;
    I(o, function(g, v) {
      g.width || (g.width = h), d = g, f += g.width * (1 + l);
    }), d && (f -= d.width * l);
    var p = -f / 2;
    I(o, function(g, v) {
      t[i][v] = t[i][v] || {
        offset: p,
        width: g.width
      }, p += g.width * (1 + l);
    });
  }), t;
}
var GRt = {
  startAngle: 90,
  clockwise: !0,
  splitNumber: 12,
  axisLabel: {
    rotate: 0
  }
}, jRt = {
  splitNumber: 5
}, HRt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "polar", e;
  }(Nn)
);
function qRt(n) {
  at(Vb), Sd.registerAxisPointerClass("PolarAxisPointer", ORt), n.registerCoordinateSystem("polar", DRt), n.registerComponentModel(xRt), n.registerComponentView(HRt), Ng(n, "angle", SRt, GRt), Ng(n, "radius", _Rt, jRt), n.registerComponentView($Rt), n.registerComponentView(QRt), n.registerLayout(je(ZRt, "bar"));
}
function eD(n, e) {
  e = e || {};
  var t = n.coordinateSystem, r = n.axis, i = {}, o = r.position, s = r.orient, a = t.getRect(), l = [a.x, a.x + a.width, a.y, a.y + a.height], u = {
    horizontal: {
      top: l[2],
      bottom: l[3]
    },
    vertical: {
      left: l[0],
      right: l[1]
    }
  };
  i.position = [s === "vertical" ? u.vertical[o] : l[0], s === "horizontal" ? u.horizontal[o] : l[3]];
  var c = {
    horizontal: 0,
    vertical: 1
  };
  i.rotation = Math.PI / 2 * c[s];
  var h = {
    top: -1,
    bottom: 1,
    right: 1,
    left: -1
  };
  i.labelDirection = i.tickDirection = i.nameDirection = h[o], n.get(["axisTick", "inside"]) && (i.tickDirection = -i.tickDirection), tr(e.labelInside, n.get(["axisLabel", "inside"])) && (i.labelDirection = -i.labelDirection);
  var f = e.rotate;
  return f == null && (f = n.get(["axisLabel", "rotate"])), i.labelRotation = o === "top" ? -f : f, i.z2 = 1, i;
}
var YRt = ["axisLine", "axisTickLabel", "axisName"], XRt = ["splitArea", "splitLine"], URt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "SingleAxisPointer", t;
    }
    return e.prototype.render = function(t, r, i, o) {
      var s = this.group;
      s.removeAll();
      var a = this._axisGroup;
      this._axisGroup = new Ve();
      var l = eD(t), u = new Vi(t, l);
      I(YRt, u.add, u), s.add(this._axisGroup), s.add(u.getGroup()), I(XRt, function(c) {
        t.get([c, "show"]) && KRt[c](this, this.group, this._axisGroup, t);
      }, this), Cb(a, this._axisGroup, t), n.prototype.render.call(this, t, r, i, o);
    }, e.prototype.remove = function() {
      cne(this);
    }, e.type = "singleAxis", e;
  }(Sd)
), KRt = {
  splitLine: function(n, e, t, r) {
    var i = r.axis;
    if (!i.scale.isBlank()) {
      var o = r.getModel("splitLine"), s = o.getModel("lineStyle"), a = s.get("color");
      a = a instanceof Array ? a : [a];
      for (var l = s.get("width"), u = r.coordinateSystem.getRect(), c = i.isHorizontal(), h = [], f = 0, d = i.getTicksCoords({
        tickModel: o
      }), p = [], g = [], v = 0; v < d.length; ++v) {
        var m = i.toGlobalCoord(d[v].coord);
        c ? (p[0] = m, p[1] = u.y, g[0] = m, g[1] = u.y + u.height) : (p[0] = u.x, p[1] = m, g[0] = u.x + u.width, g[1] = m);
        var y = new Ar({
          shape: {
            x1: p[0],
            y1: p[1],
            x2: g[0],
            y2: g[1]
          },
          silent: !0
        });
        Dg(y.shape, l);
        var b = f++ % a.length;
        h[b] = h[b] || [], h[b].push(y);
      }
      for (var O = s.getLineStyle(["color"]), v = 0; v < h.length; ++v)
        e.add(us(h[v], {
          style: Le({
            stroke: a[v % a.length]
          }, O),
          silent: !0
        }));
    }
  },
  splitArea: function(n, e, t, r) {
    une(n, t, r, r);
  }
};
const JRt = URt;
var jre = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getCoordSysModel = function() {
      return this;
    }, e.type = "singleAxis", e.layoutMode = "box", e.defaultOption = {
      left: "5%",
      top: "5%",
      right: "5%",
      bottom: "5%",
      type: "value",
      position: "bottom",
      orient: "horizontal",
      axisLine: {
        show: !0,
        lineStyle: {
          width: 1,
          type: "solid"
        }
      },
      // Single coordinate system and single axis is the,
      // which is used as the parent tooltip model.
      // same model, so we set default tooltip show as true.
      tooltip: {
        show: !0
      },
      axisTick: {
        show: !0,
        length: 6,
        lineStyle: {
          width: 1
        }
      },
      axisLabel: {
        show: !0,
        interval: "auto"
      },
      splitLine: {
        show: !0,
        lineStyle: {
          type: "dashed",
          opacity: 0.2
        }
      }
    }, e;
  }(Ot)
);
lr(jre, kb.prototype);
const eP = jre;
var e$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o, s) {
      var a = n.call(this, t, r, i) || this;
      return a.type = o || "value", a.position = s || "bottom", a;
    }
    return e.prototype.isHorizontal = function() {
      var t = this.position;
      return t === "top" || t === "bottom";
    }, e.prototype.pointToData = function(t, r) {
      return this.coordinateSystem.pointToData(t)[0];
    }, e;
  }(ba)
);
const t$t = e$t;
var Hre = ["single"], n$t = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.type = "single", this.dimension = "single", this.dimensions = Hre, this.axisPointerEnabled = !0, this.model = e, this._init(e, t, r);
    }
    return n.prototype._init = function(e, t, r) {
      var i = this.dimension, o = new t$t(i, wC(e), [0, 0], e.get("type"), e.get("position")), s = o.type === "category";
      o.onBand = s && e.get("boundaryGap"), o.inverse = e.get("inverse"), o.orient = e.get("orient"), e.axis = o, o.model = e, o.coordinateSystem = this, this._axis = o;
    }, n.prototype.update = function(e, t) {
      e.eachSeries(function(r) {
        if (r.coordinateSystem === this) {
          var i = r.getData();
          I(i.mapDimensionsAll(this.dimension), function(o) {
            this._axis.scale.unionExtentFromData(i, o);
          }, this), Rg(this._axis.scale, this._axis.model);
        }
      }, this);
    }, n.prototype.resize = function(e, t) {
      this._rect = mr({
        left: e.get("left"),
        top: e.get("top"),
        right: e.get("right"),
        bottom: e.get("bottom"),
        width: e.get("width"),
        height: e.get("height")
      }, {
        width: t.getWidth(),
        height: t.getHeight()
      }), this._adjustAxis();
    }, n.prototype.getRect = function() {
      return this._rect;
    }, n.prototype._adjustAxis = function() {
      var e = this._rect, t = this._axis, r = t.isHorizontal(), i = r ? [0, e.width] : [0, e.height], o = t.inverse ? 1 : 0;
      t.setExtent(i[o], i[1 - o]), this._updateAxisTransform(t, r ? e.x : e.y);
    }, n.prototype._updateAxisTransform = function(e, t) {
      var r = e.getExtent(), i = r[0] + r[1], o = e.isHorizontal();
      e.toGlobalCoord = o ? function(s) {
        return s + t;
      } : function(s) {
        return i - s + t;
      }, e.toLocalCoord = o ? function(s) {
        return s - t;
      } : function(s) {
        return i - s + t;
      };
    }, n.prototype.getAxis = function() {
      return this._axis;
    }, n.prototype.getBaseAxis = function() {
      return this._axis;
    }, n.prototype.getAxes = function() {
      return [this._axis];
    }, n.prototype.getTooltipAxes = function() {
      return {
        baseAxes: [this.getAxis()],
        // Empty otherAxes
        otherAxes: []
      };
    }, n.prototype.containPoint = function(e) {
      var t = this.getRect(), r = this.getAxis(), i = r.orient;
      return i === "horizontal" ? r.contain(r.toLocalCoord(e[0])) && e[1] >= t.y && e[1] <= t.y + t.height : r.contain(r.toLocalCoord(e[1])) && e[0] >= t.y && e[0] <= t.y + t.height;
    }, n.prototype.pointToData = function(e) {
      var t = this.getAxis();
      return [t.coordToData(t.toLocalCoord(e[t.orient === "horizontal" ? 0 : 1]))];
    }, n.prototype.dataToPoint = function(e) {
      var t = this.getAxis(), r = this.getRect(), i = [], o = t.orient === "horizontal" ? 0 : 1;
      return e instanceof Array && (e = e[0]), i[o] = t.toGlobalCoord(t.dataToCoord(+e)), i[1 - o] = o === 0 ? r.y + r.height / 2 : r.x + r.width / 2, i;
    }, n.prototype.convertToPixel = function(e, t, r) {
      var i = qQ(t);
      return i === this ? this.dataToPoint(r) : null;
    }, n.prototype.convertFromPixel = function(e, t, r) {
      var i = qQ(t);
      return i === this ? this.pointToData(r) : null;
    }, n;
  }()
);
function qQ(n) {
  var e = n.seriesModel, t = n.singleAxisModel;
  return t && t.coordinateSystem || e && e.coordinateSystem;
}
function r$t(n, e) {
  var t = [];
  return n.eachComponent("singleAxis", function(r, i) {
    var o = new n$t(r, n, e);
    o.name = "single_" + i, o.resize(r, e), r.coordinateSystem = o, t.push(o);
  }), n.eachSeries(function(r) {
    if (r.get("coordinateSystem") === "singleAxis") {
      var i = r.getReferringComponents("singleAxis", nr).models[0];
      r.coordinateSystem = i && i.coordinateSystem;
    }
  }), t;
}
var i$t = {
  create: r$t,
  dimensions: Hre
};
const o$t = i$t;
var YQ = ["x", "y"], s$t = ["width", "height"], a$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, r, i, o, s) {
      var a = i.axis, l = a.coordinateSystem, u = tP(l, 1 - AS(a)), c = l.dataToPoint(r)[0], h = o.get("type");
      if (h && h !== "none") {
        var f = x$(o), d = l$t[h](a, c, u);
        d.style = f, t.graphicKey = d.type, t.pointer = d;
      }
      var p = eD(i);
      Vre(
        // @ts-ignore
        r,
        t,
        p,
        i,
        o,
        s
      );
    }, e.prototype.getHandleTransform = function(t, r, i) {
      var o = eD(r, {
        labelInside: !1
      });
      o.labelMargin = i.get(["handle", "margin"]);
      var s = S$(r.axis, t, o);
      return {
        x: s[0],
        y: s[1],
        rotation: o.rotation + (o.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(t, r, i, o) {
      var s = i.axis, a = s.coordinateSystem, l = AS(s), u = tP(a, l), c = [t.x, t.y];
      c[l] += r[l], c[l] = Math.min(u[1], c[l]), c[l] = Math.max(u[0], c[l]);
      var h = tP(a, 1 - l), f = (h[1] + h[0]) / 2, d = [f, f];
      return d[l] = c[l], {
        x: c[0],
        y: c[1],
        rotation: t.rotation,
        cursorPoint: d,
        tooltipOption: {
          verticalAlign: "middle"
        }
      };
    }, e;
  }(w$)
), l$t = {
  line: function(n, e, t) {
    var r = _$([e, t[0]], [e, t[1]], AS(n));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: r
    };
  },
  shadow: function(n, e, t) {
    var r = n.getBandWidth(), i = t[1] - t[0];
    return {
      type: "Rect",
      shape: zre([e - r / 2, t[0]], [r, i], AS(n))
    };
  }
};
function AS(n) {
  return n.isHorizontal() ? 0 : 1;
}
function tP(n, e) {
  var t = n.getRect();
  return [t[YQ[e]], t[YQ[e]] + t[s$t[e]]];
}
const u$t = a$t;
var c$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "single", e;
  }(Nn)
);
function h$t(n) {
  at(Vb), Sd.registerAxisPointerClass("SingleAxisPointer", u$t), n.registerComponentView(c$t), n.registerComponentView(JRt), n.registerComponentModel(eP), Ng(n, "single", eP, eP.defaultOption), n.registerCoordinateSystem("single", o$t);
}
var f$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r, i) {
      var o = bv(t);
      n.prototype.init.apply(this, arguments), XQ(t, o);
    }, e.prototype.mergeOption = function(t) {
      n.prototype.mergeOption.apply(this, arguments), XQ(this.option, t);
    }, e.prototype.getCellSize = function() {
      return this.option.cellSize;
    }, e.type = "calendar", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      left: 80,
      top: 60,
      cellSize: 20,
      // horizontal vertical
      orient: "horizontal",
      // month separate line style
      splitLine: {
        show: !0,
        lineStyle: {
          color: "#000",
          width: 1,
          type: "solid"
        }
      },
      // rect style  temporarily unused emphasis
      itemStyle: {
        color: "#fff",
        borderWidth: 1,
        borderColor: "#ccc"
      },
      // week text style
      dayLabel: {
        show: !0,
        firstDay: 0,
        // start end
        position: "start",
        margin: "50%",
        color: "#000"
      },
      // month text style
      monthLabel: {
        show: !0,
        // start end
        position: "start",
        margin: 5,
        // center or left
        align: "center",
        formatter: null,
        color: "#000"
      },
      // year text style
      yearLabel: {
        show: !0,
        // top bottom left right
        position: null,
        margin: 30,
        formatter: null,
        color: "#ccc",
        fontFamily: "sans-serif",
        fontWeight: "bolder",
        fontSize: 20
      }
    }, e;
  }(Ot)
);
function XQ(n, e) {
  var t = n.cellSize, r;
  oe(t) ? r = t : r = n.cellSize = [t, t], r.length === 1 && (r[1] = r[0]);
  var i = ae([0, 1], function(o) {
    return zwt(e, o) && (r[o] = "auto"), r[o] != null && r[o] !== "auto";
  });
  zc(n, e, {
    type: "box",
    ignoreSize: i
  });
}
const d$t = f$t;
var p$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      var o = this.group;
      o.removeAll();
      var s = t.coordinateSystem, a = s.getRangeInfo(), l = s.getOrient(), u = r.getLocaleModel();
      this._renderDayRect(t, a, o), this._renderLines(t, a, l, o), this._renderYearText(t, a, l, o), this._renderMonthText(t, u, l, o), this._renderWeekText(t, u, a, l, o);
    }, e.prototype._renderDayRect = function(t, r, i) {
      for (var o = t.coordinateSystem, s = t.getModel("itemStyle").getItemStyle(), a = o.getCellWidth(), l = o.getCellHeight(), u = r.start.time; u <= r.end.time; u = o.getNextNDay(u, 1).time) {
        var c = o.dataToRect([u], !1).tl, h = new _t({
          shape: {
            x: c[0],
            y: c[1],
            width: a,
            height: l
          },
          cursor: "default",
          style: s
        });
        i.add(h);
      }
    }, e.prototype._renderLines = function(t, r, i, o) {
      var s = this, a = t.coordinateSystem, l = t.getModel(["splitLine", "lineStyle"]).getLineStyle(), u = t.get(["splitLine", "show"]), c = l.lineWidth;
      this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
      for (var h = r.start, f = 0; h.time <= r.end.time; f++) {
        p(h.formatedDate), f === 0 && (h = a.getDateInfo(r.start.y + "-" + r.start.m));
        var d = h.date;
        d.setMonth(d.getMonth() + 1), h = a.getDateInfo(d);
      }
      p(a.getNextNDay(r.end.time, 1).formatedDate);
      function p(g) {
        s._firstDayOfMonth.push(a.getDateInfo(g)), s._firstDayPoints.push(a.dataToRect([g], !1).tl);
        var v = s._getLinePointsOfOneWeek(t, g, i);
        s._tlpoints.push(v[0]), s._blpoints.push(v[v.length - 1]), u && s._drawSplitline(v, l, o);
      }
      u && this._drawSplitline(s._getEdgesPoints(s._tlpoints, c, i), l, o), u && this._drawSplitline(s._getEdgesPoints(s._blpoints, c, i), l, o);
    }, e.prototype._getEdgesPoints = function(t, r, i) {
      var o = [t[0].slice(), t[t.length - 1].slice()], s = i === "horizontal" ? 0 : 1;
      return o[0][s] = o[0][s] - r / 2, o[1][s] = o[1][s] + r / 2, o;
    }, e.prototype._drawSplitline = function(t, r, i) {
      var o = new Gi({
        z2: 20,
        shape: {
          points: t
        },
        style: r
      });
      i.add(o);
    }, e.prototype._getLinePointsOfOneWeek = function(t, r, i) {
      for (var o = t.coordinateSystem, s = o.getDateInfo(r), a = [], l = 0; l < 7; l++) {
        var u = o.getNextNDay(s.time, l), c = o.dataToRect([u.time], !1);
        a[2 * u.day] = c.tl, a[2 * u.day + 1] = c[i === "horizontal" ? "bl" : "tr"];
      }
      return a;
    }, e.prototype._formatterLabel = function(t, r) {
      return be(t) && t ? Nwt(t, r) : Pe(t) ? t(r) : r.nameMap;
    }, e.prototype._yearTextPositionControl = function(t, r, i, o, s) {
      var a = r[0], l = r[1], u = ["center", "bottom"];
      o === "bottom" ? (l += s, u = ["center", "top"]) : o === "left" ? a -= s : o === "right" ? (a += s, u = ["center", "top"]) : l -= s;
      var c = 0;
      return (o === "left" || o === "right") && (c = Math.PI / 2), {
        rotation: c,
        x: a,
        y: l,
        style: {
          align: u[0],
          verticalAlign: u[1]
        }
      };
    }, e.prototype._renderYearText = function(t, r, i, o) {
      var s = t.getModel("yearLabel");
      if (s.get("show")) {
        var a = s.get("margin"), l = s.get("position");
        l || (l = i !== "horizontal" ? "top" : "left");
        var u = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], c = (u[0][0] + u[1][0]) / 2, h = (u[0][1] + u[1][1]) / 2, f = i === "horizontal" ? 0 : 1, d = {
          top: [c, u[f][1]],
          bottom: [c, u[1 - f][1]],
          left: [u[1 - f][0], h],
          right: [u[f][0], h]
        }, p = r.start.y;
        +r.end.y > +r.start.y && (p = p + "-" + r.end.y);
        var g = s.get("formatter"), v = {
          start: r.start.y,
          end: r.end.y,
          nameMap: p
        }, m = this._formatterLabel(g, v), y = new At({
          z2: 30,
          style: hn(s, {
            text: m
          })
        });
        y.attr(this._yearTextPositionControl(y, d[l], i, l, a)), o.add(y);
      }
    }, e.prototype._monthTextPositionControl = function(t, r, i, o, s) {
      var a = "left", l = "top", u = t[0], c = t[1];
      return i === "horizontal" ? (c = c + s, r && (a = "center"), o === "start" && (l = "bottom")) : (u = u + s, r && (l = "middle"), o === "start" && (a = "right")), {
        x: u,
        y: c,
        align: a,
        verticalAlign: l
      };
    }, e.prototype._renderMonthText = function(t, r, i, o) {
      var s = t.getModel("monthLabel");
      if (s.get("show")) {
        var a = s.get("nameMap"), l = s.get("margin"), u = s.get("position"), c = s.get("align"), h = [this._tlpoints, this._blpoints];
        (!a || be(a)) && (a && (r = cM(a) || r), a = r.get(["time", "monthAbbr"]) || []);
        var f = u === "start" ? 0 : 1, d = i === "horizontal" ? 0 : 1;
        l = u === "start" ? -l : l;
        for (var p = c === "center", g = 0; g < h[f].length - 1; g++) {
          var v = h[f][g].slice(), m = this._firstDayOfMonth[g];
          if (p) {
            var y = this._firstDayPoints[g];
            v[d] = (y[d] + h[0][g + 1][d]) / 2;
          }
          var b = s.get("formatter"), O = a[+m.m - 1], w = {
            yyyy: m.y,
            yy: (m.y + "").slice(2),
            MM: m.m,
            M: +m.m,
            nameMap: O
          }, x = this._formatterLabel(b, w), S = new At({
            z2: 30,
            style: te(hn(s, {
              text: x
            }), this._monthTextPositionControl(v, p, i, u, l))
          });
          o.add(S);
        }
      }
    }, e.prototype._weekTextPositionControl = function(t, r, i, o, s) {
      var a = "center", l = "middle", u = t[0], c = t[1], h = i === "start";
      return r === "horizontal" ? (u = u + o + (h ? 1 : -1) * s[0] / 2, a = h ? "right" : "left") : (c = c + o + (h ? 1 : -1) * s[1] / 2, l = h ? "bottom" : "top"), {
        x: u,
        y: c,
        align: a,
        verticalAlign: l
      };
    }, e.prototype._renderWeekText = function(t, r, i, o, s) {
      var a = t.getModel("dayLabel");
      if (a.get("show")) {
        var l = t.coordinateSystem, u = a.get("position"), c = a.get("nameMap"), h = a.get("margin"), f = l.getFirstDayOfWeek();
        if (!c || be(c)) {
          c && (r = cM(c) || r);
          var d = r.get(["time", "dayOfWeekShort"]);
          c = d || ae(r.get(["time", "dayOfWeekAbbr"]), function(w) {
            return w[0];
          });
        }
        var p = l.getNextNDay(i.end.time, 7 - i.lweek).time, g = [l.getCellWidth(), l.getCellHeight()];
        h = fe(h, Math.min(g[1], g[0])), u === "start" && (p = l.getNextNDay(i.start.time, -(7 + i.fweek)).time, h = -h);
        for (var v = 0; v < 7; v++) {
          var m = l.getNextNDay(p, v), y = l.dataToRect([m.time], !1).center, b = v;
          b = Math.abs((v + f) % 7);
          var O = new At({
            z2: 30,
            style: te(hn(a, {
              text: c[b]
            }), this._weekTextPositionControl(y, o, u, h, g))
          });
          s.add(O);
        }
      }
    }, e.type = "calendar", e;
  }(Nn)
);
const g$t = p$t;
var nP = 864e5, v$t = (
  /** @class */
  function() {
    function n(e, t, r) {
      this.type = "calendar", this.dimensions = n.dimensions, this.getDimensionsInfo = n.getDimensionsInfo, this._model = e;
    }
    return n.getDimensionsInfo = function() {
      return [{
        name: "time",
        type: "time"
      }, "value"];
    }, n.prototype.getRangeInfo = function() {
      return this._rangeInfo;
    }, n.prototype.getModel = function() {
      return this._model;
    }, n.prototype.getRect = function() {
      return this._rect;
    }, n.prototype.getCellWidth = function() {
      return this._sw;
    }, n.prototype.getCellHeight = function() {
      return this._sh;
    }, n.prototype.getOrient = function() {
      return this._orient;
    }, n.prototype.getFirstDayOfWeek = function() {
      return this._firstDayOfWeek;
    }, n.prototype.getDateInfo = function(e) {
      e = gl(e);
      var t = e.getFullYear(), r = e.getMonth() + 1, i = r < 10 ? "0" + r : "" + r, o = e.getDate(), s = o < 10 ? "0" + o : "" + o, a = e.getDay();
      return a = Math.abs((a + 7 - this.getFirstDayOfWeek()) % 7), {
        y: t + "",
        m: i,
        d: s,
        day: a,
        time: e.getTime(),
        formatedDate: t + "-" + i + "-" + s,
        date: e
      };
    }, n.prototype.getNextNDay = function(e, t) {
      return t = t || 0, t === 0 ? this.getDateInfo(e) : (e = new Date(this.getDateInfo(e).time), e.setDate(e.getDate() + t), this.getDateInfo(e));
    }, n.prototype.update = function(e, t) {
      this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
      var r = this._rangeInfo.weeks || 1, i = ["width", "height"], o = this._model.getCellSize().slice(), s = this._model.getBoxLayoutParams(), a = this._orient === "horizontal" ? [r, 7] : [7, r];
      I([0, 1], function(h) {
        c(o, h) && (s[i[h]] = o[h] * a[h]);
      });
      var l = {
        width: t.getWidth(),
        height: t.getHeight()
      }, u = this._rect = mr(s, l);
      I([0, 1], function(h) {
        c(o, h) || (o[h] = u[i[h]] / a[h]);
      });
      function c(h, f) {
        return h[f] != null && h[f] !== "auto";
      }
      this._sw = o[0], this._sh = o[1];
    }, n.prototype.dataToPoint = function(e, t) {
      oe(e) && (e = e[0]), t == null && (t = !0);
      var r = this.getDateInfo(e), i = this._rangeInfo, o = r.formatedDate;
      if (t && !(r.time >= i.start.time && r.time < i.end.time + nP))
        return [NaN, NaN];
      var s = r.day, a = this._getRangeInfo([i.start.time, o]).nthWeek;
      return this._orient === "vertical" ? [this._rect.x + s * this._sw + this._sw / 2, this._rect.y + a * this._sh + this._sh / 2] : [this._rect.x + a * this._sw + this._sw / 2, this._rect.y + s * this._sh + this._sh / 2];
    }, n.prototype.pointToData = function(e) {
      var t = this.pointToDate(e);
      return t && t.time;
    }, n.prototype.dataToRect = function(e, t) {
      var r = this.dataToPoint(e, t);
      return {
        contentShape: {
          x: r[0] - (this._sw - this._lineWidth) / 2,
          y: r[1] - (this._sh - this._lineWidth) / 2,
          width: this._sw - this._lineWidth,
          height: this._sh - this._lineWidth
        },
        center: r,
        tl: [r[0] - this._sw / 2, r[1] - this._sh / 2],
        tr: [r[0] + this._sw / 2, r[1] - this._sh / 2],
        br: [r[0] + this._sw / 2, r[1] + this._sh / 2],
        bl: [r[0] - this._sw / 2, r[1] + this._sh / 2]
      };
    }, n.prototype.pointToDate = function(e) {
      var t = Math.floor((e[0] - this._rect.x) / this._sw) + 1, r = Math.floor((e[1] - this._rect.y) / this._sh) + 1, i = this._rangeInfo.range;
      return this._orient === "vertical" ? this._getDateByWeeksAndDay(r, t - 1, i) : this._getDateByWeeksAndDay(t, r - 1, i);
    }, n.prototype.convertToPixel = function(e, t, r) {
      var i = UQ(t);
      return i === this ? i.dataToPoint(r) : null;
    }, n.prototype.convertFromPixel = function(e, t, r) {
      var i = UQ(t);
      return i === this ? i.pointToData(r) : null;
    }, n.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, n.prototype._initRangeOption = function() {
      var e = this._model.get("range"), t;
      if (oe(e) && e.length === 1 && (e = e[0]), oe(e))
        t = e;
      else {
        var r = e.toString();
        if (/^\d{4}$/.test(r) && (t = [r + "-01-01", r + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(r)) {
          var i = this.getDateInfo(r), o = i.date;
          o.setMonth(o.getMonth() + 1);
          var s = this.getNextNDay(o, -1);
          t = [i.formatedDate, s.formatedDate];
        }
        /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(r) && (t = [r, r]);
      }
      if (!t)
        return process.env.NODE_ENV !== "production" && Js("Invalid date range."), e;
      var a = this._getRangeInfo(t);
      return a.start.time > a.end.time && t.reverse(), t;
    }, n.prototype._getRangeInfo = function(e) {
      var t = [this.getDateInfo(e[0]), this.getDateInfo(e[1])], r;
      t[0].time > t[1].time && (r = !0, t.reverse());
      var i = Math.floor(t[1].time / nP) - Math.floor(t[0].time / nP) + 1, o = new Date(t[0].time), s = o.getDate(), a = t[1].date.getDate();
      o.setDate(s + i - 1);
      var l = o.getDate();
      if (l !== a)
        for (var u = o.getTime() - t[1].time > 0 ? 1 : -1; (l = o.getDate()) !== a && (o.getTime() - t[1].time) * u > 0; )
          i -= u, o.setDate(l - u);
      var c = Math.floor((i + t[0].day + 6) / 7), h = r ? -c + 1 : c - 1;
      return r && t.reverse(), {
        range: [t[0].formatedDate, t[1].formatedDate],
        start: t[0],
        end: t[1],
        allDay: i,
        weeks: c,
        // From 0.
        nthWeek: h,
        fweek: t[0].day,
        lweek: t[1].day
      };
    }, n.prototype._getDateByWeeksAndDay = function(e, t, r) {
      var i = this._getRangeInfo(r);
      if (e > i.weeks || e === 0 && t < i.fweek || e === i.weeks && t > i.lweek)
        return null;
      var o = (e - 1) * 7 - i.fweek + t, s = new Date(i.start.time);
      return s.setDate(+i.start.d + o), this.getDateInfo(s);
    }, n.create = function(e, t) {
      var r = [];
      return e.eachComponent("calendar", function(i) {
        var o = new n(i);
        r.push(o), i.coordinateSystem = o;
      }), e.eachSeries(function(i) {
        i.get("coordinateSystem") === "calendar" && (i.coordinateSystem = r[i.get("calendarIndex") || 0]);
      }), r;
    }, n.dimensions = ["time", "value"], n;
  }()
);
function UQ(n) {
  var e = n.calendarModel, t = n.seriesModel, r = e ? e.coordinateSystem : t ? t.coordinateSystem : null;
  return r;
}
const m$t = v$t;
function y$t(n) {
  n.registerComponentModel(d$t), n.registerComponentView(g$t), n.registerCoordinateSystem("calendar", m$t);
}
function b$t(n, e) {
  var t = n.existing;
  if (e.id = n.keyInfo.id, !e.type && t && (e.type = t.type), e.parentId == null) {
    var r = e.parentOption;
    r ? e.parentId = r.id : t && (e.parentId = t.parentId);
  }
  e.parentOption = null;
}
function KQ(n, e) {
  var t;
  return I(e, function(r) {
    n[r] != null && n[r] !== "auto" && (t = !0);
  }), t;
}
function O$t(n, e, t) {
  var r = te({}, t), i = n[e], o = t.$action || "merge";
  if (o === "merge")
    if (i) {
      if (process.env.NODE_ENV !== "production") {
        var s = t.type;
        De(!s || i.type === s, 'Please set $action: "replace" to change `type`');
      }
      Je(i, r, !0), zc(i, r, {
        ignoreSize: !0
      }), RJ(t, i), kO(t, i), kO(t, i, "shape"), kO(t, i, "style"), kO(t, i, "extra"), t.clipPath = i.clipPath;
    } else
      n[e] = r;
  else
    o === "replace" ? n[e] = r : o === "remove" && i && (n[e] = null);
}
var qre = ["transition", "enterFrom", "leaveTo"], w$t = qre.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
function kO(n, e, t) {
  if (t && (!n[t] && e[t] && (n[t] = {}), n = n[t], e = e[t]), !(!n || !e))
    for (var r = t ? qre : w$t, i = 0; i < r.length; i++) {
      var o = r[i];
      n[o] == null && e[o] != null && (n[o] = e[o]);
    }
}
function x$t(n, e) {
  if (n && (n.hv = e.hv = [
    // Rigid body, don't care about `width`.
    KQ(e, ["left", "right"]),
    // Rigid body, don't care about `height`.
    KQ(e, ["top", "bottom"])
  ], n.type === "group")) {
    var t = n, r = e;
    t.width == null && (t.width = r.width = 0), t.height == null && (t.height = r.height = 0);
  }
}
var S$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.preventAutoZ = !0, t;
    }
    return e.prototype.mergeOption = function(t, r) {
      var i = this.option.elements;
      this.option.elements = null, n.prototype.mergeOption.call(this, t, r), this.option.elements = i;
    }, e.prototype.optionUpdated = function(t, r) {
      var i = this.option, o = (r ? i : t).elements, s = i.elements = r ? [] : i.elements, a = [];
      this._flatten(o, a, null);
      var l = wK(s, a, "normalMerge"), u = this._elOptionsToUpdate = [];
      I(l, function(c, h) {
        var f = c.newOption;
        process.env.NODE_ENV !== "production" && De(Me(f) || c.existing, "Empty graphic option definition"), f && (u.push(f), b$t(c, f), O$t(s, h, f), x$t(s[h], f));
      }, this), i.elements = Gt(s, function(c) {
        return c && delete c.$action, c != null;
      });
    }, e.prototype._flatten = function(t, r, i) {
      I(t, function(o) {
        if (o) {
          i && (o.parentOption = i), r.push(o);
          var s = o.children;
          s && s.length && this._flatten(s, r, o), delete o.children;
        }
      }, this);
    }, e.prototype.useElOptionsToUpdate = function() {
      var t = this._elOptionsToUpdate;
      return this._elOptionsToUpdate = null, t;
    }, e.type = "graphic", e.defaultOption = {
      elements: []
      // parentId: null
    }, e;
  }(Ot)
), JQ = {
  // Reserved but not supported in graphic component.
  path: null,
  compoundPath: null,
  // Supported in graphic component.
  group: Ve,
  image: fi,
  text: At
}, ns = Ct(), _$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this._elMap = _e();
    }, e.prototype.render = function(t, r, i) {
      t !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = t, this._updateElements(t), this._relocate(t, i);
    }, e.prototype._updateElements = function(t) {
      var r = t.useElOptionsToUpdate();
      if (r) {
        var i = this._elMap, o = this.group, s = t.get("z"), a = t.get("zlevel");
        I(r, function(l) {
          var u = dr(l.id, null), c = u != null ? i.get(u) : null, h = dr(l.parentId, null), f = h != null ? i.get(h) : o, d = l.type, p = l.style;
          d === "text" && p && l.hv && l.hv[1] && (p.textVerticalAlign = p.textBaseline = p.verticalAlign = p.align = null);
          var g = l.textContent, v = l.textConfig;
          if (p && Are(p, d, !!v, !!g)) {
            var m = Tre(p, d, !0);
            !v && m.textConfig && (v = l.textConfig = m.textConfig), !g && m.textContent && (g = m.textContent);
          }
          var y = C$t(l);
          process.env.NODE_ENV !== "production" && c && De(f === c.parent, "Changing parent is not supported.");
          var b = l.$action || "merge", O = b === "merge", w = b === "replace";
          if (O) {
            var x = !c, S = c;
            x ? S = eZ(u, f, l.type, i) : (S && (ns(S).isNew = !1), Dre(S)), S && (kw(S, y, t, {
              isInit: x
            }), tZ(S, l, s, a));
          } else if (w) {
            Dw(c, l, i, t);
            var _ = eZ(u, f, l.type, i);
            _ && (kw(_, y, t, {
              isInit: !0
            }), tZ(_, l, s, a));
          } else
            b === "remove" && (Ere(c, l), Dw(c, l, i, t));
          var C = i.get(u);
          if (C && g)
            if (O) {
              var A = C.getTextContent();
              A ? A.attr(g) : C.setTextContent(new At(g));
            } else
              w && C.setTextContent(new At(g));
          if (C) {
            var T = l.clipPath;
            if (T) {
              var k = T.type, L = void 0, x = !1;
              if (O) {
                var D = C.getClipPath();
                x = !D || ns(D).type !== k, L = x ? tD(k) : D;
              } else
                w && (x = !0, L = tD(k));
              C.setClipPath(L), kw(L, T, t, {
                isInit: x
              }), SS(L, T.keyframeAnimation, t);
            }
            var E = ns(C);
            C.setTextConfig(v), E.option = l, A$t(C, t, l), gv({
              el: C,
              componentModel: t,
              itemName: C.name,
              itemTooltipOption: l.tooltip
            }), SS(C, l.keyframeAnimation, t);
          }
        });
      }
    }, e.prototype._relocate = function(t, r) {
      for (var i = t.option.elements, o = this.group, s = this._elMap, a = r.getWidth(), l = r.getHeight(), u = ["x", "y"], c = 0; c < i.length; c++) {
        var h = i[c], f = dr(h.id, null), d = f != null ? s.get(f) : null;
        if (!(!d || !d.isGroup)) {
          var p = d.parent, g = p === o, v = ns(d), m = ns(p);
          v.width = fe(v.option.width, g ? a : m.width) || 0, v.height = fe(v.option.height, g ? l : m.height) || 0;
        }
      }
      for (var c = i.length - 1; c >= 0; c--) {
        var h = i[c], f = dr(h.id, null), d = f != null ? s.get(f) : null;
        if (d) {
          var p = d.parent, m = ns(p), y = p === o ? {
            width: a,
            height: l
          } : {
            width: m.width,
            height: m.height
          }, b = {}, O = dC(d, h, y, null, {
            hv: h.hv,
            boundingMode: h.bounding
          }, b);
          if (!ns(d).isNew && O) {
            for (var w = h.transition, x = {}, S = 0; S < u.length; S++) {
              var _ = u[S], C = b[_];
              w && ($f(w) || ot(w, _) >= 0) ? x[_] = C : d[_] = C;
            }
            kt(d, x, t, 0);
          } else
            d.attr(b);
        }
      }
    }, e.prototype._clear = function() {
      var t = this, r = this._elMap;
      r.each(function(i) {
        Dw(i, ns(i).option, r, t._lastGraphicModel);
      }), this._elMap = _e();
    }, e.prototype.dispose = function() {
      this._clear();
    }, e.type = "graphic", e;
  }(Nn)
);
function tD(n) {
  process.env.NODE_ENV !== "production" && De(n, "graphic type MUST be set");
  var e = we(JQ, n) ? JQ[n] : rR(n);
  process.env.NODE_ENV !== "production" && De(e, "graphic type " + n + " can not be found");
  var t = new e({});
  return ns(t).type = n, t;
}
function eZ(n, e, t, r) {
  var i = tD(t);
  return e.add(i), r.set(n, i), ns(i).id = n, ns(i).isNew = !0, i;
}
function Dw(n, e, t, r) {
  var i = n && n.parent;
  i && (n.type === "group" && n.traverse(function(o) {
    Dw(o, e, t, r);
  }), PC(n, e, r), t.removeKey(ns(n).id));
}
function tZ(n, e, t, r) {
  n.isGroup || I([
    ["cursor", As.prototype.cursor],
    // We should not support configure z and zlevel in the element level.
    // But seems we didn't limit it previously. So here still use it to avoid breaking.
    ["zlevel", r || 0],
    ["z", t || 0],
    // z2 must not be null/undefined, otherwise sort error may occur.
    ["z2", 0]
  ], function(i) {
    var o = i[0];
    we(e, o) ? n[o] = Qe(e[o], i[1]) : n[o] == null && (n[o] = i[1]);
  }), I(ft(e), function(i) {
    if (i.indexOf("on") === 0) {
      var o = e[i];
      n[i] = Pe(o) ? o : null;
    }
  }), we(e, "draggable") && (n.draggable = e.draggable), e.name != null && (n.name = e.name), e.id != null && (n.id = e.id);
}
function C$t(n) {
  return n = te({}, n), I(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(IJ), function(e) {
    delete n[e];
  }), n;
}
function A$t(n, e, t) {
  var r = Fe(n).eventData;
  !n.silent && !n.ignore && !r && (r = Fe(n).eventData = {
    componentType: "graphic",
    componentIndex: e.componentIndex,
    name: n.name
  }), r && (r.info = t.info);
}
function T$t(n) {
  n.registerComponentModel(S$t), n.registerComponentView(_$t), n.registerPreprocessor(function(e) {
    var t = e.graphic;
    oe(t) ? !t[0] || !t[0].elements ? e.graphic = [{
      elements: t
    }] : e.graphic = [e.graphic[0]] : t && !t.elements && (e.graphic = [{
      elements: [t]
    }]);
  });
}
var nZ = ["x", "y", "radius", "angle", "single"], P$t = ["cartesian2d", "polar", "singleAxis"];
function E$t(n) {
  var e = n.get("coordinateSystem");
  return ot(P$t, e) >= 0;
}
function fc(n) {
  return process.env.NODE_ENV !== "production" && De(n), n + "Axis";
}
function k$t(n, e) {
  var t = _e(), r = [], i = _e();
  n.eachComponent({
    mainType: "dataZoom",
    query: e
  }, function(c) {
    i.get(c.uid) || a(c);
  });
  var o;
  do
    o = !1, n.eachComponent("dataZoom", s);
  while (o);
  function s(c) {
    !i.get(c.uid) && l(c) && (a(c), o = !0);
  }
  function a(c) {
    i.set(c.uid, !0), r.push(c), u(c);
  }
  function l(c) {
    var h = !1;
    return c.eachTargetAxis(function(f, d) {
      var p = t.get(f);
      p && p[d] && (h = !0);
    }), h;
  }
  function u(c) {
    c.eachTargetAxis(function(h, f) {
      (t.get(h) || t.set(h, []))[f] = !0;
    });
  }
  return r;
}
function Yre(n) {
  var e = n.ecModel, t = {
    infoList: [],
    infoMap: _e()
  };
  return n.eachTargetAxis(function(r, i) {
    var o = e.getComponent(fc(r), i);
    if (o) {
      var s = o.getCoordSysModel();
      if (s) {
        var a = s.uid, l = t.infoMap.get(a);
        l || (l = {
          model: s,
          axisModels: []
        }, t.infoList.push(l), t.infoMap.set(a, l)), l.axisModels.push(o);
      }
    }
  }), t;
}
var rP = (
  /** @class */
  function() {
    function n() {
      this.indexList = [], this.indexMap = [];
    }
    return n.prototype.add = function(e) {
      this.indexMap[e] || (this.indexList.push(e), this.indexMap[e] = !0);
    }, n;
  }()
), B0 = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._autoThrottle = !0, t._noTarget = !0, t._rangePropMode = ["percent", "percent"], t;
    }
    return e.prototype.init = function(t, r, i) {
      var o = rZ(t);
      this.settledOption = o, this.mergeDefaultAndTheme(t, i), this._doInit(o);
    }, e.prototype.mergeOption = function(t) {
      var r = rZ(t);
      Je(this.option, t, !0), Je(this.settledOption, r, !0), this._doInit(r);
    }, e.prototype._doInit = function(t) {
      var r = this.option;
      this._setDefaultThrottle(t), this._updateRangeUse(t);
      var i = this.settledOption;
      I([["start", "startValue"], ["end", "endValue"]], function(o, s) {
        this._rangePropMode[s] === "value" && (r[o[0]] = i[o[0]] = null);
      }, this), this._resetTarget();
    }, e.prototype._resetTarget = function() {
      var t = this.get("orient", !0), r = this._targetAxisInfoMap = _e(), i = this._fillSpecifiedTargetAxis(r);
      i ? this._orient = t || this._makeAutoOrientByTargetAxis() : (this._orient = t || "horizontal", this._fillAutoTargetAxisByOrient(r, this._orient)), this._noTarget = !0, r.each(function(o) {
        o.indexList.length && (this._noTarget = !1);
      }, this);
    }, e.prototype._fillSpecifiedTargetAxis = function(t) {
      var r = !1;
      return I(nZ, function(i) {
        var o = this.getReferringComponents(fc(i), b1t);
        if (o.specified) {
          r = !0;
          var s = new rP();
          I(o.models, function(a) {
            s.add(a.componentIndex);
          }), t.set(i, s);
        }
      }, this), r;
    }, e.prototype._fillAutoTargetAxisByOrient = function(t, r) {
      var i = this.ecModel, o = !0;
      if (o) {
        var s = r === "vertical" ? "y" : "x", a = i.findComponents({
          mainType: s + "Axis"
        });
        l(a, s);
      }
      if (o) {
        var a = i.findComponents({
          mainType: "singleAxis",
          filter: function(c) {
            return c.get("orient", !0) === r;
          }
        });
        l(a, "single");
      }
      function l(u, c) {
        var h = u[0];
        if (h) {
          var f = new rP();
          if (f.add(h.componentIndex), t.set(c, f), o = !1, c === "x" || c === "y") {
            var d = h.getReferringComponents("grid", nr).models[0];
            d && I(u, function(p) {
              h.componentIndex !== p.componentIndex && d === p.getReferringComponents("grid", nr).models[0] && f.add(p.componentIndex);
            });
          }
        }
      }
      o && I(nZ, function(u) {
        if (o) {
          var c = i.findComponents({
            mainType: fc(u),
            filter: function(f) {
              return f.get("type", !0) === "category";
            }
          });
          if (c[0]) {
            var h = new rP();
            h.add(c[0].componentIndex), t.set(u, h), o = !1;
          }
        }
      }, this);
    }, e.prototype._makeAutoOrientByTargetAxis = function() {
      var t;
      return this.eachTargetAxis(function(r) {
        !t && (t = r);
      }, this), t === "y" ? "vertical" : "horizontal";
    }, e.prototype._setDefaultThrottle = function(t) {
      if (t.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
        var r = this.ecModel.option;
        this.option.throttle = r.animation && r.animationDurationUpdate > 0 ? 100 : 20;
      }
    }, e.prototype._updateRangeUse = function(t) {
      var r = this._rangePropMode, i = this.get("rangeMode");
      I([["start", "startValue"], ["end", "endValue"]], function(o, s) {
        var a = t[o[0]] != null, l = t[o[1]] != null;
        a && !l ? r[s] = "percent" : !a && l ? r[s] = "value" : i ? r[s] = i[s] : a && (r[s] = "percent");
      });
    }, e.prototype.noTarget = function() {
      return this._noTarget;
    }, e.prototype.getFirstTargetAxisModel = function() {
      var t;
      return this.eachTargetAxis(function(r, i) {
        t == null && (t = this.ecModel.getComponent(fc(r), i));
      }, this), t;
    }, e.prototype.eachTargetAxis = function(t, r) {
      this._targetAxisInfoMap.each(function(i, o) {
        I(i.indexList, function(s) {
          t.call(r, o, s);
        });
      });
    }, e.prototype.getAxisProxy = function(t, r) {
      var i = this.getAxisModel(t, r);
      if (i)
        return i.__dzAxisProxy;
    }, e.prototype.getAxisModel = function(t, r) {
      process.env.NODE_ENV !== "production" && De(t && r != null);
      var i = this._targetAxisInfoMap.get(t);
      if (i && i.indexMap[r])
        return this.ecModel.getComponent(fc(t), r);
    }, e.prototype.setRawRange = function(t) {
      var r = this.option, i = this.settledOption;
      I([["start", "startValue"], ["end", "endValue"]], function(o) {
        (t[o[0]] != null || t[o[1]] != null) && (r[o[0]] = i[o[0]] = t[o[0]], r[o[1]] = i[o[1]] = t[o[1]]);
      }, this), this._updateRangeUse(t);
    }, e.prototype.setCalculatedRange = function(t) {
      var r = this.option;
      I(["start", "startValue", "end", "endValue"], function(i) {
        r[i] = t[i];
      });
    }, e.prototype.getPercentRange = function() {
      var t = this.findRepresentativeAxisProxy();
      if (t)
        return t.getDataPercentWindow();
    }, e.prototype.getValueRange = function(t, r) {
      if (t == null && r == null) {
        var i = this.findRepresentativeAxisProxy();
        if (i)
          return i.getDataValueWindow();
      } else
        return this.getAxisProxy(t, r).getDataValueWindow();
    }, e.prototype.findRepresentativeAxisProxy = function(t) {
      if (t)
        return t.__dzAxisProxy;
      for (var r, i = this._targetAxisInfoMap.keys(), o = 0; o < i.length; o++)
        for (var s = i[o], a = this._targetAxisInfoMap.get(s), l = 0; l < a.indexList.length; l++) {
          var u = this.getAxisProxy(s, a.indexList[l]);
          if (u.hostedBy(this))
            return u;
          r || (r = u);
        }
      return r;
    }, e.prototype.getRangePropMode = function() {
      return this._rangePropMode.slice();
    }, e.prototype.getOrient = function() {
      return process.env.NODE_ENV !== "production" && De(this._orient), this._orient;
    }, e.type = "dataZoom", e.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      filterMode: "filter",
      start: 0,
      end: 100
    }, e;
  }(Ot)
);
function rZ(n) {
  var e = {};
  return I(["start", "end", "startValue", "endValue", "throttle"], function(t) {
    n.hasOwnProperty(t) && (e[t] = n[t]);
  }), e;
}
var M$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.select", e;
  }(B0)
);
const D$t = M$t;
var L$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i, o) {
      this.dataZoomModel = t, this.ecModel = r, this.api = i;
    }, e.type = "dataZoom", e;
  }(Nn)
);
const P$ = L$t;
var I$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.select", e;
  }(P$)
);
const R$t = I$t;
var fp = I, iZ = ds, $$t = (
  /** @class */
  function() {
    function n(e, t, r, i) {
      this._dimName = e, this._axisIndex = t, this.ecModel = i, this._dataZoomModel = r;
    }
    return n.prototype.hostedBy = function(e) {
      return this._dataZoomModel === e;
    }, n.prototype.getDataValueWindow = function() {
      return this._valueWindow.slice();
    }, n.prototype.getDataPercentWindow = function() {
      return this._percentWindow.slice();
    }, n.prototype.getTargetSeriesModels = function() {
      var e = [];
      return this.ecModel.eachSeries(function(t) {
        if (E$t(t)) {
          var r = fc(this._dimName), i = t.getReferringComponents(r, nr).models[0];
          i && this._axisIndex === i.componentIndex && e.push(t);
        }
      }, this), e;
    }, n.prototype.getAxisModel = function() {
      return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
    }, n.prototype.getMinMaxSpan = function() {
      return Re(this._minMaxSpan);
    }, n.prototype.calculateDataWindow = function(e) {
      var t = this._dataExtent, r = this.getAxisModel(), i = r.axis.scale, o = this._dataZoomModel.getRangePropMode(), s = [0, 100], a = [], l = [], u;
      fp(["start", "end"], function(f, d) {
        var p = e[f], g = e[f + "Value"];
        o[d] === "percent" ? (p == null && (p = s[d]), g = i.parse(Ft(p, s, t))) : (u = !0, g = g == null ? t[d] : i.parse(g), p = Ft(g, t, s)), l[d] = g == null || isNaN(g) ? t[d] : g, a[d] = p == null || isNaN(p) ? s[d] : p;
      }), iZ(l), iZ(a);
      var c = this._minMaxSpan;
      u ? h(l, a, t, s, !1) : h(a, l, s, t, !0);
      function h(f, d, p, g, v) {
        var m = v ? "Span" : "ValueSpan";
        _d(0, f, p, "all", c["min" + m], c["max" + m]);
        for (var y = 0; y < 2; y++)
          d[y] = Ft(f[y], p, g, !0), v && (d[y] = i.parse(d[y]));
      }
      return {
        valueWindow: l,
        percentWindow: a
      };
    }, n.prototype.reset = function(e) {
      if (e === this._dataZoomModel) {
        var t = this.getTargetSeriesModels();
        this._dataExtent = N$t(this, this._dimName, t), this._updateMinMaxSpan();
        var r = this.calculateDataWindow(e.settledOption);
        this._valueWindow = r.valueWindow, this._percentWindow = r.percentWindow, this._setAxisModel();
      }
    }, n.prototype.filterData = function(e, t) {
      if (e !== this._dataZoomModel)
        return;
      var r = this._dimName, i = this.getTargetSeriesModels(), o = e.get("filterMode"), s = this._valueWindow;
      if (o === "none")
        return;
      fp(i, function(l) {
        var u = l.getData(), c = u.mapDimensionsAll(r);
        if (c.length) {
          if (o === "weakFilter") {
            var h = u.getStore(), f = ae(c, function(d) {
              return u.getDimensionIndex(d);
            }, u);
            u.filterSelf(function(d) {
              for (var p, g, v, m = 0; m < c.length; m++) {
                var y = h.get(f[m], d), b = !isNaN(y), O = y < s[0], w = y > s[1];
                if (b && !O && !w)
                  return !0;
                b && (v = !0), O && (p = !0), w && (g = !0);
              }
              return v && p && g;
            });
          } else
            fp(c, function(d) {
              if (o === "empty")
                l.setData(u = u.map(d, function(g) {
                  return a(g) ? g : NaN;
                }));
              else {
                var p = {};
                p[d] = s, u.selectRange(p);
              }
            });
          fp(c, function(d) {
            u.setApproximateExtent(s, d);
          });
        }
      });
      function a(l) {
        return l >= s[0] && l <= s[1];
      }
    }, n.prototype._updateMinMaxSpan = function() {
      var e = this._minMaxSpan = {}, t = this._dataZoomModel, r = this._dataExtent;
      fp(["min", "max"], function(i) {
        var o = t.get(i + "Span"), s = t.get(i + "ValueSpan");
        s != null && (s = this.getAxisModel().axis.scale.parse(s)), s != null ? o = Ft(r[0] + s, r, [0, 100], !0) : o != null && (s = Ft(o, [0, 100], r, !0) - r[0]), e[i + "Span"] = o, e[i + "ValueSpan"] = s;
      }, this);
    }, n.prototype._setAxisModel = function() {
      var e = this.getAxisModel(), t = this._percentWindow, r = this._valueWindow;
      if (t) {
        var i = pK(r, [0, 500]);
        i = Math.min(i, 20);
        var o = e.axis.scale.rawExtentInfo;
        t[0] !== 0 && o.setDeterminedMinMax("min", +r[0].toFixed(i)), t[1] !== 100 && o.setDeterminedMinMax("max", +r[1].toFixed(i)), o.freeze();
      }
    }, n;
  }()
);
function N$t(n, e, t) {
  var r = [1 / 0, -1 / 0];
  fp(t, function(s) {
    CCt(r, s.getData(), e);
  });
  var i = n.getAxisModel(), o = hte(i.axis.scale, i, r).calculate();
  return [o.min, o.max];
}
var B$t = {
  // `dataZoomProcessor` will only be performed in needed series. Consider if
  // there is a line series and a pie series, it is better not to update the
  // line series if only pie series is needed to be updated.
  getTargetSeries: function(n) {
    function e(i) {
      n.eachComponent("dataZoom", function(o) {
        o.eachTargetAxis(function(s, a) {
          var l = n.getComponent(fc(s), a);
          i(s, a, l, o);
        });
      });
    }
    e(function(i, o, s, a) {
      s.__dzAxisProxy = null;
    });
    var t = [];
    e(function(i, o, s, a) {
      s.__dzAxisProxy || (s.__dzAxisProxy = new $$t(i, o, a, n), t.push(s.__dzAxisProxy));
    });
    var r = _e();
    return I(t, function(i) {
      I(i.getTargetSeriesModels(), function(o) {
        r.set(o.uid, o);
      });
    }), r;
  },
  // Consider appendData, where filter should be performed. Because data process is
  // in block mode currently, it is not need to worry about that the overallProgress
  // execute every frame.
  overallReset: function(n, e) {
    n.eachComponent("dataZoom", function(t) {
      t.eachTargetAxis(function(r, i) {
        t.getAxisProxy(r, i).reset(t);
      }), t.eachTargetAxis(function(r, i) {
        t.getAxisProxy(r, i).filterData(t, e);
      });
    }), n.eachComponent("dataZoom", function(t) {
      var r = t.findRepresentativeAxisProxy();
      if (r) {
        var i = r.getDataPercentWindow(), o = r.getDataValueWindow();
        t.setCalculatedRange({
          start: i[0],
          end: i[1],
          startValue: o[0],
          endValue: o[1]
        });
      }
    });
  }
};
const V$t = B$t;
function z$t(n) {
  n.registerAction("dataZoom", function(e, t) {
    var r = k$t(t, e);
    I(r, function(i) {
      i.setRawRange({
        start: e.start,
        end: e.end,
        startValue: e.startValue,
        endValue: e.endValue
      });
    });
  });
}
var oZ = !1;
function E$(n) {
  oZ || (oZ = !0, n.registerProcessor(n.PRIORITY.PROCESSOR.FILTER, V$t), z$t(n), n.registerSubTypeDefaulter("dataZoom", function() {
    return "slider";
  }));
}
function F$t(n) {
  n.registerComponentModel(D$t), n.registerComponentView(R$t), E$(n);
}
var ss = (
  /** @class */
  /* @__PURE__ */ function() {
    function n() {
    }
    return n;
  }()
), Xre = {};
function dp(n, e) {
  Xre[n] = e;
}
function Ure(n) {
  return Xre[n];
}
var Q$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      n.prototype.optionUpdated.apply(this, arguments);
      var t = this.ecModel;
      I(this.option.feature, function(r, i) {
        var o = Ure(i);
        o && (o.getDefaultOption && (o.defaultOption = o.getDefaultOption(t)), Je(r, o.defaultOption));
      });
    }, e.type = "toolbox", e.layoutMode = {
      type: "box",
      ignoreSize: !0
    }, e.defaultOption = {
      show: !0,
      z: 6,
      // zlevel: 0,
      orient: "horizontal",
      left: "right",
      top: "top",
      // right
      // bottom
      backgroundColor: "transparent",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemSize: 15,
      itemGap: 8,
      showTitle: !0,
      iconStyle: {
        borderColor: "#666",
        color: "none"
      },
      emphasis: {
        iconStyle: {
          borderColor: "#3E98C5"
        }
      },
      // textStyle: {},
      // feature
      tooltip: {
        show: !1,
        position: "bottom"
      }
    }, e;
  }(Ot)
);
const Z$t = Q$t;
function W$t(n, e, t) {
  var r = e.getBoxLayoutParams(), i = e.get("padding"), o = {
    width: t.getWidth(),
    height: t.getHeight()
  }, s = mr(r, o, i);
  If(e.get("orient"), n, e.get("itemGap"), s.width, s.height), dC(n, r, o, i);
}
function Kre(n, e) {
  var t = yv(e.get("padding")), r = e.getItemStyle(["color", "opacity"]);
  return r.fill = e.get("backgroundColor"), n = new _t({
    shape: {
      x: n.x - t[3],
      y: n.y - t[0],
      width: n.width + t[1] + t[3],
      height: n.height + t[0] + t[2],
      r: e.get("borderRadius")
    },
    style: r,
    silent: !0,
    z2: -1
  }), n;
}
var G$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, r, i, o) {
      var s = this.group;
      if (s.removeAll(), !t.get("show"))
        return;
      var a = +t.get("itemSize"), l = t.get("orient") === "vertical", u = t.get("feature") || {}, c = this._features || (this._features = {}), h = [];
      I(u, function(p, g) {
        h.push(g);
      }), new lu(this._featureNames || [], h).add(f).update(f).remove(je(f, null)).execute(), this._featureNames = h;
      function f(p, g) {
        var v = h[p], m = h[g], y = u[v], b = new fn(y, t, t.ecModel), O;
        if (o && o.newTitle != null && o.featureName === v && (y.title = o.newTitle), v && !m) {
          if (j$t(v))
            O = {
              onclick: b.option.onclick,
              featureName: v
            };
          else {
            var w = Ure(v);
            if (!w)
              return;
            O = new w();
          }
          c[v] = O;
        } else if (O = c[m], !O)
          return;
        O.uid = mv("toolbox-feature"), O.model = b, O.ecModel = r, O.api = i;
        var x = O instanceof ss;
        if (!v && m) {
          x && O.dispose && O.dispose(r, i);
          return;
        }
        if (!b.get("show") || x && O.unusable) {
          x && O.remove && O.remove(r, i);
          return;
        }
        d(b, O, v), b.setIconStatus = function(S, _) {
          var C = this.option, A = this.iconPaths;
          C.iconStatus = C.iconStatus || {}, C.iconStatus[S] = _, A[S] && (_ === "emphasis" ? su : au)(A[S]);
        }, O instanceof ss && O.render && O.render(b, r, i, o);
      }
      function d(p, g, v) {
        var m = p.getModel("iconStyle"), y = p.getModel(["emphasis", "iconStyle"]), b = g instanceof ss && g.getIcons ? g.getIcons() : p.get("icon"), O = p.get("title") || {}, w, x;
        be(b) ? (w = {}, w[v] = b) : w = b, be(O) ? (x = {}, x[v] = O) : x = O;
        var S = p.iconPaths = {};
        I(w, function(_, C) {
          var A = Ab(_, {}, {
            x: -a / 2,
            y: -a / 2,
            width: a,
            height: a
          });
          A.setStyle(m.getItemStyle());
          var T = A.ensureState("emphasis");
          T.style = y.getItemStyle();
          var k = new At({
            style: {
              text: x[C],
              align: y.get("textAlign"),
              borderRadius: y.get("textBorderRadius"),
              padding: y.get("textPadding"),
              fill: null,
              font: iR({
                fontStyle: y.get("textFontStyle"),
                fontFamily: y.get("textFontFamily"),
                fontSize: y.get("textFontSize"),
                fontWeight: y.get("textFontWeight")
              }, r)
            },
            ignore: !0
          });
          A.setTextContent(k), gv({
            el: A,
            componentModel: t,
            itemName: C,
            formatterParamsExtra: {
              title: x[C]
            }
          }), A.__title = x[C], A.on("mouseover", function() {
            var L = y.getItemStyle(), D = l ? t.get("right") == null && t.get("left") !== "right" ? "right" : "left" : t.get("bottom") == null && t.get("top") !== "bottom" ? "bottom" : "top";
            k.setStyle({
              fill: y.get("textFill") || L.fill || L.stroke || "#000",
              backgroundColor: y.get("textBackgroundColor")
            }), A.setTextConfig({
              position: y.get("textPosition") || D
            }), k.ignore = !t.get("showTitle"), i.enterEmphasis(this);
          }).on("mouseout", function() {
            p.get(["iconStatus", C]) !== "emphasis" && i.leaveEmphasis(this), k.hide();
          }), (p.get(["iconStatus", C]) === "emphasis" ? su : au)(A), s.add(A), A.on("click", Oe(g.onclick, g, r, i, C)), S[C] = A;
        });
      }
      W$t(s, t, i), s.add(Kre(s.getBoundingRect(), t)), l || s.eachChild(function(p) {
        var g = p.__title, v = p.ensureState("emphasis"), m = v.textConfig || (v.textConfig = {}), y = p.getTextContent(), b = y && y.ensureState("emphasis");
        if (b && !Pe(b) && g) {
          var O = b.style || (b.style = {}), w = wb(g, At.makeFont(O)), x = p.x + s.x, S = p.y + s.y + a, _ = !1;
          S + w.height > i.getHeight() && (m.position = "top", _ = !0);
          var C = _ ? -5 - w.height : a + 10;
          x + w.width / 2 > i.getWidth() ? (m.position = ["100%", C], O.align = "right") : x - w.width / 2 < 0 && (m.position = [0, C], O.align = "left");
        }
      });
    }, e.prototype.updateView = function(t, r, i, o) {
      I(this._features, function(s) {
        s instanceof ss && s.updateView && s.updateView(s.model, r, i, o);
      });
    }, e.prototype.remove = function(t, r) {
      I(this._features, function(i) {
        i instanceof ss && i.remove && i.remove(t, r);
      }), this.group.removeAll();
    }, e.prototype.dispose = function(t, r) {
      I(this._features, function(i) {
        i instanceof ss && i.dispose && i.dispose(t, r);
      });
    }, e.type = "toolbox", e;
  }(Nn)
);
function j$t(n) {
  return n.indexOf("my") === 0;
}
const H$t = G$t;
var q$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, r) {
      var i = this.model, o = i.get("name") || t.get("title.0.text") || "echarts", s = r.getZr().painter.getType() === "svg", a = s ? "svg" : i.get("type", !0) || "png", l = r.getConnectedDataURL({
        type: a,
        backgroundColor: i.get("backgroundColor", !0) || t.get("backgroundColor") || "#fff",
        connectedBackgroundColor: i.get("connectedBackgroundColor"),
        excludeComponents: i.get("excludeComponents"),
        pixelRatio: i.get("pixelRatio")
      }), u = ht.browser;
      if (Pe(MouseEvent) && (u.newEdge || !u.ie && !u.edge)) {
        var c = document.createElement("a");
        c.download = o + "." + a, c.target = "_blank", c.href = l;
        var h = new MouseEvent("click", {
          // some micro front-end framework， window maybe is a Proxy
          view: document.defaultView,
          bubbles: !0,
          cancelable: !1
        });
        c.dispatchEvent(h);
      } else if (window.navigator.msSaveOrOpenBlob || s) {
        var f = l.split(","), d = f[0].indexOf("base64") > -1, p = s ? decodeURIComponent(f[1]) : f[1];
        d && (p = window.atob(p));
        var g = o + "." + a;
        if (window.navigator.msSaveOrOpenBlob) {
          for (var v = p.length, m = new Uint8Array(v); v--; )
            m[v] = p.charCodeAt(v);
          var y = new Blob([m]);
          window.navigator.msSaveOrOpenBlob(y, g);
        } else {
          var b = document.createElement("iframe");
          document.body.appendChild(b);
          var O = b.contentWindow, w = O.document;
          w.open("image/svg+xml", "replace"), w.write(p), w.close(), O.focus(), w.execCommand("SaveAs", !0, g), document.body.removeChild(b);
        }
      } else {
        var x = i.get("lang"), S = '<body style="margin:0;"><img src="' + l + '" style="max-width:100%;" title="' + (x && x[0] || "") + '" /></body>', _ = window.open();
        _.document.write(S), _.document.title = o;
      }
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
        title: t.getLocaleModel().get(["toolbox", "saveAsImage", "title"]),
        type: "png",
        // Default use option.backgroundColor
        // backgroundColor: '#fff',
        connectedBackgroundColor: "#fff",
        name: "",
        excludeComponents: ["toolbox"],
        // use current pixel ratio of device by default
        // pixelRatio: 1,
        lang: t.getLocaleModel().get(["toolbox", "saveAsImage", "lang"])
      };
      return r;
    }, e;
  }(ss)
);
const Y$t = q$t;
var sZ = "__ec_magicType_stack__", X$t = [["line", "bar"], ["stack"]], U$t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.getIcons = function() {
      var t = this.model, r = t.get("icon"), i = {};
      return I(t.get("type"), function(o) {
        r[o] && (i[o] = r[o]);
      }), i;
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        type: [],
        // Icon group
        icon: {
          line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
          bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
          // eslint-disable-next-line
          stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z"
          // jshint ignore:line
        },
        // `line`, `bar`, `stack`, `tiled`
        title: t.getLocaleModel().get(["toolbox", "magicType", "title"]),
        option: {},
        seriesIndex: {}
      };
      return r;
    }, e.prototype.onclick = function(t, r, i) {
      var o = this.model, s = o.get(["seriesIndex", i]);
      if (aZ[i]) {
        var a = {
          series: []
        }, l = function(h) {
          var f = h.subType, d = h.id, p = aZ[i](f, d, h, o);
          p && (Le(p, h.option), a.series.push(p));
          var g = h.coordinateSystem;
          if (g && g.type === "cartesian2d" && (i === "line" || i === "bar")) {
            var v = g.getAxesByScale("ordinal")[0];
            if (v) {
              var m = v.dim, y = m + "Axis", b = h.getReferringComponents(y, nr).models[0], O = b.componentIndex;
              a[y] = a[y] || [];
              for (var w = 0; w <= O; w++)
                a[y][O] = a[y][O] || {};
              a[y][O].boundaryGap = i === "bar";
            }
          }
        };
        I(X$t, function(h) {
          ot(h, i) >= 0 && I(h, function(f) {
            o.setIconStatus(f, "normal");
          });
        }), o.setIconStatus(i, "emphasis"), t.eachComponent({
          mainType: "series",
          query: s == null ? null : {
            seriesIndex: s
          }
        }, l);
        var u, c = i;
        i === "stack" && (u = Je({
          stack: o.option.title.tiled,
          tiled: o.option.title.stack
        }, o.option.title), o.get(["iconStatus", i]) !== "emphasis" && (c = "tiled")), r.dispatchAction({
          type: "changeMagicType",
          currentType: c,
          newOption: a,
          newTitle: u,
          featureName: "magicType"
        });
      }
    }, e;
  }(ss)
), aZ = {
  line: function(n, e, t, r) {
    if (n === "bar")
      return Je({
        id: e,
        type: "line",
        // Preserve data related option
        data: t.get("data"),
        stack: t.get("stack"),
        markPoint: t.get("markPoint"),
        markLine: t.get("markLine")
      }, r.get(["option", "line"]) || {}, !0);
  },
  bar: function(n, e, t, r) {
    if (n === "line")
      return Je({
        id: e,
        type: "bar",
        // Preserve data related option
        data: t.get("data"),
        stack: t.get("stack"),
        markPoint: t.get("markPoint"),
        markLine: t.get("markLine")
      }, r.get(["option", "bar"]) || {}, !0);
  },
  stack: function(n, e, t, r) {
    var i = t.get("stack") === sZ;
    if (n === "line" || n === "bar")
      return r.setIconStatus("stack", i ? "normal" : "emphasis"), Je({
        id: e,
        stack: i ? "" : sZ
      }, r.get(["option", "stack"]) || {}, !0);
  }
};
Cl({
  type: "changeMagicType",
  event: "magicTypeChanged",
  update: "prepareAndUpdate"
}, function(n, e) {
  e.mergeOption(n.newOption);
});
const K$t = U$t;
var EC = new Array(60).join("-"), zg = "	";
function J$t(n) {
  var e = {}, t = [], r = [];
  return n.eachRawSeries(function(i) {
    var o = i.coordinateSystem;
    if (o && (o.type === "cartesian2d" || o.type === "polar")) {
      var s = o.getBaseAxis();
      if (s.type === "category") {
        var a = s.dim + "_" + s.index;
        e[a] || (e[a] = {
          categoryAxis: s,
          valueAxis: o.getOtherAxis(s),
          series: []
        }, r.push({
          axisDim: s.dim,
          axisIndex: s.index
        })), e[a].series.push(i);
      } else
        t.push(i);
    } else
      t.push(i);
  }), {
    seriesGroupByCategoryAxis: e,
    other: t,
    meta: r
  };
}
function eNt(n) {
  var e = [];
  return I(n, function(t, r) {
    var i = t.categoryAxis, o = t.valueAxis, s = o.dim, a = [" "].concat(ae(t.series, function(d) {
      return d.name;
    })), l = [i.model.getCategories()];
    I(t.series, function(d) {
      var p = d.getRawData();
      l.push(d.getRawData().mapArray(p.mapDimension(s), function(g) {
        return g;
      }));
    });
    for (var u = [a.join(zg)], c = 0; c < l[0].length; c++) {
      for (var h = [], f = 0; f < l.length; f++)
        h.push(l[f][c]);
      u.push(h.join(zg));
    }
    e.push(u.join(`
`));
  }), e.join(`

` + EC + `

`);
}
function tNt(n) {
  return ae(n, function(e) {
    var t = e.getRawData(), r = [e.name], i = [];
    return t.each(t.dimensions, function() {
      for (var o = arguments.length, s = arguments[o - 1], a = t.getName(s), l = 0; l < o - 1; l++)
        i[l] = arguments[l];
      r.push((a ? a + zg : "") + i.join(zg));
    }), r.join(`
`);
  }).join(`

` + EC + `

`);
}
function nNt(n) {
  var e = J$t(n);
  return {
    value: Gt([eNt(e.seriesGroupByCategoryAxis), tNt(e.other)], function(t) {
      return !!t.replace(/[\n\t\s]/g, "");
    }).join(`

` + EC + `

`),
    meta: e.meta
  };
}
function TS(n) {
  return n.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function rNt(n) {
  var e = n.slice(0, n.indexOf(`
`));
  if (e.indexOf(zg) >= 0)
    return !0;
}
var nD = new RegExp("[" + zg + "]+", "g");
function iNt(n) {
  for (var e = n.split(/\n+/g), t = TS(e.shift()).split(nD), r = [], i = ae(t, function(l) {
    return {
      name: l,
      data: []
    };
  }), o = 0; o < e.length; o++) {
    var s = TS(e[o]).split(nD);
    r.push(s.shift());
    for (var a = 0; a < s.length; a++)
      i[a] && (i[a].data[o] = s[a]);
  }
  return {
    series: i,
    categories: r
  };
}
function oNt(n) {
  for (var e = n.split(/\n+/g), t = TS(e.shift()), r = [], i = 0; i < e.length; i++) {
    var o = TS(e[i]);
    if (o) {
      var s = o.split(nD), a = "", l = void 0, u = !1;
      isNaN(s[0]) ? (u = !0, a = s[0], s = s.slice(1), r[i] = {
        name: a,
        value: []
      }, l = r[i].value) : l = r[i] = [];
      for (var c = 0; c < s.length; c++)
        l.push(+s[c]);
      l.length === 1 && (u ? r[i].value = l[0] : r[i] = l[0]);
    }
  }
  return {
    name: t,
    data: r
  };
}
function sNt(n, e) {
  var t = n.split(new RegExp(`
*` + EC + `
*`, "g")), r = {
    series: []
  };
  return I(t, function(i, o) {
    if (rNt(i)) {
      var s = iNt(i), a = e[o], l = a.axisDim + "Axis";
      a && (r[l] = r[l] || [], r[l][a.axisIndex] = {
        data: s.categories
      }, r.series = r.series.concat(s.series));
    } else {
      var s = oNt(i);
      r.series.push(s);
    }
  }), r;
}
var aNt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, r) {
      setTimeout(function() {
        r.dispatchAction({
          type: "hideTip"
        });
      });
      var i = r.getDom(), o = this.model;
      this._dom && i.removeChild(this._dom);
      var s = document.createElement("div");
      s.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", s.style.backgroundColor = o.get("backgroundColor") || "#fff";
      var a = document.createElement("h4"), l = o.get("lang") || [];
      a.innerHTML = l[0] || o.get("title"), a.style.cssText = "margin:10px 20px", a.style.color = o.get("textColor");
      var u = document.createElement("div"), c = document.createElement("textarea");
      u.style.cssText = "overflow:auto";
      var h = o.get("optionToContent"), f = o.get("contentToOption"), d = nNt(t);
      if (Pe(h)) {
        var p = h(r.getOption());
        be(p) ? u.innerHTML = p : Jf(p) && u.appendChild(p);
      } else {
        c.readOnly = o.get("readOnly");
        var g = c.style;
        g.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", g.color = o.get("textColor"), g.borderColor = o.get("textareaBorderColor"), g.backgroundColor = o.get("textareaColor"), c.value = d.value, u.appendChild(c);
      }
      var v = d.meta, m = document.createElement("div");
      m.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
      var y = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", b = document.createElement("div"), O = document.createElement("div");
      y += ";background-color:" + o.get("buttonColor"), y += ";color:" + o.get("buttonTextColor");
      var w = this;
      function x() {
        i.removeChild(s), w._dom = null;
      }
      Ik(b, "click", x), Ik(O, "click", function() {
        if (f == null && h != null || f != null && h == null) {
          process.env.NODE_ENV !== "production" && En("It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored."), x();
          return;
        }
        var S;
        try {
          Pe(f) ? S = f(u, r.getOption()) : S = sNt(c.value, v);
        } catch (_) {
          throw x(), new Error("Data view format error " + _);
        }
        S && r.dispatchAction({
          type: "changeDataView",
          newOption: S
        }), x();
      }), b.innerHTML = l[1], O.innerHTML = l[2], O.style.cssText = b.style.cssText = y, !o.get("readOnly") && m.appendChild(O), m.appendChild(b), s.appendChild(a), s.appendChild(u), s.appendChild(m), u.style.height = i.clientHeight - 80 + "px", i.appendChild(s), this._dom = s;
    }, e.prototype.remove = function(t, r) {
      this._dom && r.getDom().removeChild(this._dom);
    }, e.prototype.dispose = function(t, r) {
      this.remove(t, r);
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        readOnly: !1,
        optionToContent: null,
        contentToOption: null,
        // eslint-disable-next-line
        icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
        title: t.getLocaleModel().get(["toolbox", "dataView", "title"]),
        lang: t.getLocaleModel().get(["toolbox", "dataView", "lang"]),
        backgroundColor: "#fff",
        textColor: "#000",
        textareaColor: "#fff",
        textareaBorderColor: "#333",
        buttonColor: "#c23531",
        buttonTextColor: "#fff"
      };
      return r;
    }, e;
  }(ss)
);
function lNt(n, e) {
  return ae(n, function(t, r) {
    var i = e && e[r];
    if (Me(i) && !oe(i)) {
      var o = Me(t) && !oe(t);
      o || (t = {
        value: t
      });
      var s = i.name != null && t.name == null;
      return t = Le(t, i), s && delete t.name, t;
    } else
      return t;
  });
}
Cl({
  type: "changeDataView",
  event: "dataViewChanged",
  update: "prepareAndUpdate"
}, function(n, e) {
  var t = [];
  I(n.newOption.series, function(r) {
    var i = e.getSeriesByName(r.name)[0];
    if (!i)
      t.push(te({
        // Default is scatter
        type: "scatter"
      }, r));
    else {
      var o = i.get("data");
      t.push({
        name: r.name,
        data: lNt(r.data, o)
      });
    }
  }), e.mergeOption(Le({
    series: t
  }, n.newOption));
});
const uNt = aNt;
var Jre = I, eie = Ct();
function cNt(n, e) {
  var t = k$(n);
  Jre(e, function(r, i) {
    for (var o = t.length - 1; o >= 0; o--) {
      var s = t[o];
      if (s[i])
        break;
    }
    if (o < 0) {
      var a = n.queryComponents({
        mainType: "dataZoom",
        subType: "select",
        id: i
      })[0];
      if (a) {
        var l = a.getPercentRange();
        t[0][i] = {
          dataZoomId: i,
          start: l[0],
          end: l[1]
        };
      }
    }
  }), t.push(e);
}
function hNt(n) {
  var e = k$(n), t = e[e.length - 1];
  e.length > 1 && e.pop();
  var r = {};
  return Jre(t, function(i, o) {
    for (var s = e.length - 1; s >= 0; s--)
      if (i = e[s][o], i) {
        r[o] = i;
        break;
      }
  }), r;
}
function fNt(n) {
  eie(n).snapshots = null;
}
function dNt(n) {
  return k$(n).length;
}
function k$(n) {
  var e = eie(n);
  return e.snapshots || (e.snapshots = [{}]), e.snapshots;
}
var pNt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, r) {
      fNt(t), r.dispatchAction({
        type: "restore",
        from: this.uid
      });
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        // eslint-disable-next-line
        icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
        title: t.getLocaleModel().get(["toolbox", "restore", "title"])
      };
      return r;
    }, e;
  }(ss)
);
Cl({
  type: "restore",
  event: "restore",
  update: "prepareAndUpdate"
}, function(n, e) {
  e.resetOption("recreate");
});
const gNt = pNt;
var vNt = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"], mNt = (
  /** @class */
  function() {
    function n(e, t, r) {
      var i = this;
      this._targetInfoList = [];
      var o = lZ(t, e);
      I(yNt, function(s, a) {
        (!r || !r.include || ot(r.include, a) >= 0) && s(o, i._targetInfoList);
      });
    }
    return n.prototype.setOutputRanges = function(e, t) {
      return this.matchOutputRanges(e, t, function(r, i, o) {
        if ((r.coordRanges || (r.coordRanges = [])).push(i), !r.coordRange) {
          r.coordRange = i;
          var s = iP[r.brushType](0, o, i);
          r.__rangeOffset = {
            offset: fZ[r.brushType](s.values, r.range, [1, 1]),
            xyMinMax: s.xyMinMax
          };
        }
      }), e;
    }, n.prototype.matchOutputRanges = function(e, t, r) {
      I(e, function(i) {
        var o = this.findTargetInfo(i, t);
        o && o !== !0 && I(o.coordSyses, function(s) {
          var a = iP[i.brushType](1, s, i.range, !0);
          r(i, a.values, s, t);
        });
      }, this);
    }, n.prototype.setInputRanges = function(e, t) {
      I(e, function(r) {
        var i = this.findTargetInfo(r, t);
        if (process.env.NODE_ENV !== "production" && (De(!i || i === !0 || r.coordRange, "coordRange must be specified when coord index specified."), De(!i || i !== !0 || r.range, "range must be specified in global brush.")), r.range = r.range || [], i && i !== !0) {
          r.panelId = i.panelId;
          var o = iP[r.brushType](0, i.coordSys, r.coordRange), s = r.__rangeOffset;
          r.range = s ? fZ[r.brushType](o.values, s.offset, bNt(o.xyMinMax, s.xyMinMax)) : o.values;
        }
      }, this);
    }, n.prototype.makePanelOpts = function(e, t) {
      return ae(this._targetInfoList, function(r) {
        var i = r.getPanelRect();
        return {
          panelId: r.panelId,
          defaultBrushType: t ? t(r) : null,
          clipPath: sre(i),
          isTargetByCursor: lre(i, e, r.coordSysModel),
          getLinearBrushOtherExtent: are(i)
        };
      });
    }, n.prototype.controlSeries = function(e, t, r) {
      var i = this.findTargetInfo(e, r);
      return i === !0 || i && ot(i.coordSyses, t.coordinateSystem) >= 0;
    }, n.prototype.findTargetInfo = function(e, t) {
      for (var r = this._targetInfoList, i = lZ(t, e), o = 0; o < r.length; o++) {
        var s = r[o], a = e.panelId;
        if (a) {
          if (s.panelId === a)
            return s;
        } else
          for (var l = 0; l < uZ.length; l++)
            if (uZ[l](i, s))
              return s;
      }
      return !0;
    }, n;
  }()
);
function rD(n) {
  return n[0] > n[1] && n.reverse(), n;
}
function lZ(n, e) {
  return gy(n, e, {
    includeMainTypes: vNt
  });
}
var yNt = {
  grid: function(n, e) {
    var t = n.xAxisModels, r = n.yAxisModels, i = n.gridModels, o = _e(), s = {}, a = {};
    !t && !r && !i || (I(t, function(l) {
      var u = l.axis.grid.model;
      o.set(u.id, u), s[u.id] = !0;
    }), I(r, function(l) {
      var u = l.axis.grid.model;
      o.set(u.id, u), a[u.id] = !0;
    }), I(i, function(l) {
      o.set(l.id, l), s[l.id] = !0, a[l.id] = !0;
    }), o.each(function(l) {
      var u = l.coordinateSystem, c = [];
      I(u.getCartesians(), function(h, f) {
        (ot(t, h.getAxis("x").model) >= 0 || ot(r, h.getAxis("y").model) >= 0) && c.push(h);
      }), e.push({
        panelId: "grid--" + l.id,
        gridModel: l,
        coordSysModel: l,
        // Use the first one as the representitive coordSys.
        coordSys: c[0],
        coordSyses: c,
        getPanelRect: cZ.grid,
        xAxisDeclared: s[l.id],
        yAxisDeclared: a[l.id]
      });
    }));
  },
  geo: function(n, e) {
    I(n.geoModels, function(t) {
      var r = t.coordinateSystem;
      e.push({
        panelId: "geo--" + t.id,
        geoModel: t,
        coordSysModel: t,
        coordSys: r,
        coordSyses: [r],
        getPanelRect: cZ.geo
      });
    });
  }
}, uZ = [
  // grid
  function(n, e) {
    var t = n.xAxisModel, r = n.yAxisModel, i = n.gridModel;
    return !i && t && (i = t.axis.grid.model), !i && r && (i = r.axis.grid.model), i && i === e.gridModel;
  },
  // geo
  function(n, e) {
    var t = n.geoModel;
    return t && t === e.geoModel;
  }
], cZ = {
  grid: function() {
    return this.coordSys.master.getRect().clone();
  },
  geo: function() {
    var n = this.coordSys, e = n.getBoundingRect().clone();
    return e.applyTransform(Lf(n)), e;
  }
}, iP = {
  lineX: je(hZ, 0),
  lineY: je(hZ, 1),
  rect: function(n, e, t, r) {
    var i = n ? e.pointToData([t[0][0], t[1][0]], r) : e.dataToPoint([t[0][0], t[1][0]], r), o = n ? e.pointToData([t[0][1], t[1][1]], r) : e.dataToPoint([t[0][1], t[1][1]], r), s = [rD([i[0], o[0]]), rD([i[1], o[1]])];
    return {
      values: s,
      xyMinMax: s
    };
  },
  polygon: function(n, e, t, r) {
    var i = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]], o = ae(t, function(s) {
      var a = n ? e.pointToData(s, r) : e.dataToPoint(s, r);
      return i[0][0] = Math.min(i[0][0], a[0]), i[1][0] = Math.min(i[1][0], a[1]), i[0][1] = Math.max(i[0][1], a[0]), i[1][1] = Math.max(i[1][1], a[1]), a;
    });
    return {
      values: o,
      xyMinMax: i
    };
  }
};
function hZ(n, e, t, r) {
  process.env.NODE_ENV !== "production" && De(t.type === "cartesian2d", "lineX/lineY brush is available only in cartesian2d.");
  var i = t.getAxis(["x", "y"][n]), o = rD(ae([0, 1], function(a) {
    return e ? i.coordToData(i.toLocalCoord(r[a]), !0) : i.toGlobalCoord(i.dataToCoord(r[a]));
  })), s = [];
  return s[n] = o, s[1 - n] = [NaN, NaN], {
    values: o,
    xyMinMax: s
  };
}
var fZ = {
  lineX: je(dZ, 0),
  lineY: je(dZ, 1),
  rect: function(n, e, t) {
    return [[n[0][0] - t[0] * e[0][0], n[0][1] - t[0] * e[0][1]], [n[1][0] - t[1] * e[1][0], n[1][1] - t[1] * e[1][1]]];
  },
  polygon: function(n, e, t) {
    return ae(n, function(r, i) {
      return [r[0] - t[0] * e[i][0], r[1] - t[1] * e[i][1]];
    });
  }
};
function dZ(n, e, t, r) {
  return [e[0] - r[n] * t[0], e[1] - r[n] * t[1]];
}
function bNt(n, e) {
  var t = pZ(n), r = pZ(e), i = [t[0] / r[0], t[1] / r[1]];
  return isNaN(i[0]) && (i[0] = 1), isNaN(i[1]) && (i[1] = 1), i;
}
function pZ(n) {
  return n ? [n[0][1] - n[0][0], n[1][1] - n[1][0]] : [NaN, NaN];
}
const M$ = mNt;
var iD = I, ONt = p1t("toolbox-dataZoom_"), wNt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, r, i, o) {
      this._brushController || (this._brushController = new h$(i.getZr()), this._brushController.on("brush", Oe(this._onBrush, this)).mount()), _Nt(t, r, this, o, i), SNt(t, r);
    }, e.prototype.onclick = function(t, r, i) {
      xNt[i].call(this);
    }, e.prototype.remove = function(t, r) {
      this._brushController && this._brushController.unmount();
    }, e.prototype.dispose = function(t, r) {
      this._brushController && this._brushController.dispose();
    }, e.prototype._onBrush = function(t) {
      var r = t.areas;
      if (!t.isEnd || !r.length)
        return;
      var i = {}, o = this.ecModel;
      this._brushController.updateCovers([]);
      var s = new M$(D$(this.model), o, {
        include: ["grid"]
      });
      s.matchOutputRanges(r, o, function(u, c, h) {
        if (h.type === "cartesian2d") {
          var f = u.brushType;
          f === "rect" ? (a("x", h, c[0]), a("y", h, c[1])) : a({
            lineX: "x",
            lineY: "y"
          }[f], h, c);
        }
      }), cNt(o, i), this._dispatchZoomAction(i);
      function a(u, c, h) {
        var f = c.getAxis(u), d = f.model, p = l(u, d, o), g = p.findRepresentativeAxisProxy(d).getMinMaxSpan();
        (g.minValueSpan != null || g.maxValueSpan != null) && (h = _d(0, h.slice(), f.scale.getExtent(), 0, g.minValueSpan, g.maxValueSpan)), p && (i[p.id] = {
          dataZoomId: p.id,
          startValue: h[0],
          endValue: h[1]
        });
      }
      function l(u, c, h) {
        var f;
        return h.eachComponent({
          mainType: "dataZoom",
          subType: "select"
        }, function(d) {
          var p = d.getAxisModel(u, c.componentIndex);
          p && (f = d);
        }), f;
      }
    }, e.prototype._dispatchZoomAction = function(t) {
      var r = [];
      iD(t, function(i, o) {
        r.push(Re(i));
      }), r.length && this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        batch: r
      });
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        filterMode: "filter",
        // Icon group
        icon: {
          zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
          back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
        },
        // `zoom`, `back`
        title: t.getLocaleModel().get(["toolbox", "dataZoom", "title"]),
        brushStyle: {
          borderWidth: 0,
          color: "rgba(210,219,238,0.2)"
        }
      };
      return r;
    }, e;
  }(ss)
), xNt = {
  zoom: function() {
    var n = !this._isZoomActive;
    this.api.dispatchAction({
      type: "takeGlobalCursor",
      key: "dataZoomSelect",
      dataZoomSelectActive: n
    });
  },
  back: function() {
    this._dispatchZoomAction(hNt(this.ecModel));
  }
};
function D$(n) {
  var e = {
    xAxisIndex: n.get("xAxisIndex", !0),
    yAxisIndex: n.get("yAxisIndex", !0),
    xAxisId: n.get("xAxisId", !0),
    yAxisId: n.get("yAxisId", !0)
  };
  return e.xAxisIndex == null && e.xAxisId == null && (e.xAxisIndex = "all"), e.yAxisIndex == null && e.yAxisId == null && (e.yAxisIndex = "all"), e;
}
function SNt(n, e) {
  n.setIconStatus("back", dNt(e) > 1 ? "emphasis" : "normal");
}
function _Nt(n, e, t, r, i) {
  var o = t._isZoomActive;
  r && r.type === "takeGlobalCursor" && (o = r.key === "dataZoomSelect" ? r.dataZoomSelectActive : !1), t._isZoomActive = o, n.setIconStatus("zoom", o ? "emphasis" : "normal");
  var s = new M$(D$(n), e, {
    include: ["grid"]
  }), a = s.makePanelOpts(i, function(l) {
    return l.xAxisDeclared && !l.yAxisDeclared ? "lineX" : !l.xAxisDeclared && l.yAxisDeclared ? "lineY" : "rect";
  });
  t._brushController.setPanels(a).enableBrush(o && a.length ? {
    brushType: "auto",
    brushStyle: n.getModel("brushStyle").getItemStyle()
  } : !1);
}
jwt("dataZoom", function(n) {
  var e = n.getComponent("toolbox", 0), t = ["feature", "dataZoom"];
  if (!e || e.get(t) == null)
    return;
  var r = e.getModel(t), i = [], o = D$(r), s = gy(n, o);
  iD(s.xAxisModels, function(l) {
    return a(l, "xAxis", "xAxisIndex");
  }), iD(s.yAxisModels, function(l) {
    return a(l, "yAxis", "yAxisIndex");
  });
  function a(l, u, c) {
    var h = l.componentIndex, f = {
      type: "select",
      $fromToolbox: !0,
      // Default to be filter
      filterMode: r.get("filterMode", !0) || "filter",
      // Id for merge mapping.
      id: ONt + u + h
    };
    f[c] = h, i.push(f);
  }
  return i;
});
const CNt = wNt;
function ANt(n) {
  n.registerComponentModel(Z$t), n.registerComponentView(H$t), dp("saveAsImage", Y$t), dp("magicType", K$t), dp("dataView", uNt), dp("dataZoom", CNt), dp("restore", gNt), at(F$t);
}
var TNt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "tooltip", e.dependencies = ["axisPointer"], e.defaultOption = {
      // zlevel: 0,
      z: 60,
      show: !0,
      // tooltip main content
      showContent: !0,
      // 'trigger' only works on coordinate system.
      // 'item' | 'axis' | 'none'
      trigger: "item",
      // 'click' | 'mousemove' | 'none'
      triggerOn: "mousemove|click",
      alwaysShowContent: !1,
      displayMode: "single",
      renderMode: "auto",
      // whether restraint content inside viewRect.
      // If renderMode: 'richText', default true.
      // If renderMode: 'html', defaut false (for backward compat).
      confine: null,
      showDelay: 0,
      hideDelay: 100,
      // Animation transition time, unit is second
      transitionDuration: 0.4,
      enterable: !1,
      backgroundColor: "#fff",
      // box shadow
      shadowBlur: 10,
      shadowColor: "rgba(0, 0, 0, .2)",
      shadowOffsetX: 1,
      shadowOffsetY: 2,
      // tooltip border radius, unit is px, default is 4
      borderRadius: 4,
      // tooltip border width, unit is px, default is 0 (no border)
      borderWidth: 1,
      // Tooltip inside padding, default is 5 for all direction
      // Array is allowed to set up, right, bottom, left, same with css
      // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.
      padding: null,
      // Extra css text
      extraCssText: "",
      // axis indicator, trigger by axis
      axisPointer: {
        // default is line
        // legal values: 'line' | 'shadow' | 'cross'
        type: "line",
        // Valid when type is line, appoint tooltip line locate on which line. Optional
        // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'
        // default is 'auto', chose the axis which type is category.
        // for multiply y axis, cartesian coord chose x axis, polar chose angle axis
        axis: "auto",
        animation: "auto",
        animationDurationUpdate: 200,
        animationEasingUpdate: "exponentialOut",
        crossStyle: {
          color: "#999",
          width: 1,
          type: "dashed",
          // TODO formatter
          textStyle: {}
        }
        // lineStyle and shadowStyle should not be specified here,
        // otherwise it will always override those styles on option.axisPointer.
      },
      textStyle: {
        color: "#666",
        fontSize: 14
      }
    }, e;
  }(Ot)
);
const PNt = TNt;
function tie(n) {
  var e = n.get("confine");
  return e != null ? !!e : n.get("renderMode") === "richText";
}
function nie(n) {
  if (ht.domSupported) {
    for (var e = document.documentElement.style, t = 0, r = n.length; t < r; t++)
      if (n[t] in e)
        return n[t];
  }
}
var rie = nie(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]), ENt = nie(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]);
function iie(n, e) {
  if (!n)
    return e;
  e = DJ(e, !0);
  var t = n.indexOf(e);
  return n = t === -1 ? e : "-" + n.slice(0, t) + "-" + e, n.toLowerCase();
}
function kNt(n, e) {
  var t = n.currentStyle || document.defaultView && document.defaultView.getComputedStyle(n);
  return t ? e ? t[e] : t : null;
}
var MNt = iie(ENt, "transition"), L$ = iie(rie, "transform"), DNt = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (ht.transform3dSupported ? "will-change:transform;" : "");
function LNt(n) {
  return n = n === "left" ? "right" : n === "right" ? "left" : n === "top" ? "bottom" : "top", n;
}
function INt(n, e, t) {
  if (!be(t) || t === "inside")
    return "";
  var r = n.get("backgroundColor"), i = n.get("borderWidth");
  e = od(e);
  var o = LNt(t), s = Math.max(Math.round(i) * 1.5, 6), a = "", l = L$ + ":", u;
  ot(["left", "right"], o) > -1 ? (a += "top:50%", l += "translateY(-50%) rotate(" + (u = o === "left" ? -225 : -45) + "deg)") : (a += "left:50%", l += "translateX(-50%) rotate(" + (u = o === "top" ? 225 : 45) + "deg)");
  var c = u * Math.PI / 180, h = s + i, f = h * Math.abs(Math.cos(c)) + h * Math.abs(Math.sin(c)), d = Math.round(((f - Math.SQRT2 * i) / 2 + Math.SQRT2 * i - (f - h) / 2) * 100) / 100;
  a += ";" + o + ":-" + d + "px";
  var p = e + " solid " + i + "px;", g = ["position:absolute;width:" + s + "px;height:" + s + "px;z-index:-1;", a + ";" + l + ";", "border-bottom:" + p, "border-right:" + p, "background-color:" + r + ";"];
  return '<div style="' + g.join("") + '"></div>';
}
function RNt(n, e) {
  var t = "cubic-bezier(0.23,1,0.32,1)", r = " " + n / 2 + "s " + t, i = "opacity" + r + ",visibility" + r;
  return e || (r = " " + n + "s " + t, i += ht.transformSupported ? "," + L$ + r : ",left" + r + ",top" + r), MNt + ":" + i;
}
function gZ(n, e, t) {
  var r = n.toFixed(0) + "px", i = e.toFixed(0) + "px";
  if (!ht.transformSupported)
    return t ? "top:" + i + ";left:" + r + ";" : [["top", i], ["left", r]];
  var o = ht.transform3dSupported, s = "translate" + (o ? "3d" : "") + "(" + r + "," + i + (o ? ",0" : "") + ")";
  return t ? "top:0;left:0;" + L$ + ":" + s + ";" : [["top", 0], ["left", 0], [rie, s]];
}
function $Nt(n) {
  var e = [], t = n.get("fontSize"), r = n.getTextColor();
  r && e.push("color:" + r), e.push("font:" + n.getFont()), t && e.push("line-height:" + Math.round(t * 3 / 2) + "px");
  var i = n.get("textShadowColor"), o = n.get("textShadowBlur") || 0, s = n.get("textShadowOffsetX") || 0, a = n.get("textShadowOffsetY") || 0;
  return i && o && e.push("text-shadow:" + s + "px " + a + "px " + o + "px " + i), I(["decoration", "align"], function(l) {
    var u = n.get(l);
    u && e.push("text-" + l + ":" + u);
  }), e.join(";");
}
function NNt(n, e, t) {
  var r = [], i = n.get("transitionDuration"), o = n.get("backgroundColor"), s = n.get("shadowBlur"), a = n.get("shadowColor"), l = n.get("shadowOffsetX"), u = n.get("shadowOffsetY"), c = n.getModel("textStyle"), h = hee(n, "html"), f = l + "px " + u + "px " + s + "px " + a;
  return r.push("box-shadow:" + f), e && i && r.push(RNt(i, t)), o && r.push("background-color:" + o), I(["width", "color", "radius"], function(d) {
    var p = "border-" + d, g = DJ(p), v = n.get(g);
    v != null && r.push(p + ":" + v + (d === "color" ? "" : "px"));
  }), r.push($Nt(c)), h != null && r.push("padding:" + yv(h).join("px ") + "px"), r.join(";") + ";";
}
function vZ(n, e, t, r, i) {
  var o = e && e.painter;
  if (t) {
    var s = o && o.getViewportRoot();
    s && z0t(n, s, t, r, i);
  } else {
    n[0] = r, n[1] = i;
    var a = o && o.getViewportRootOffset();
    a && (n[0] += a.offsetLeft, n[1] += a.offsetTop);
  }
  n[2] = n[0] / e.getWidth(), n[3] = n[1] / e.getHeight();
}
var BNt = (
  /** @class */
  function() {
    function n(e, t) {
      if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._alwaysShowContent = !1, this._firstShow = !0, this._longHide = !0, ht.wxa)
        return null;
      var r = document.createElement("div");
      r.domBelongToZr = !0, this.el = r;
      var i = this._zr = e.getZr(), o = t.appendTo, s = o && (be(o) ? document.querySelector(o) : Jf(o) ? o : Pe(o) && o(e.getDom()));
      vZ(this._styleCoord, i, s, e.getWidth() / 2, e.getHeight() / 2), (s || e.getDom()).appendChild(r), this._api = e, this._container = s;
      var a = this;
      r.onmouseenter = function() {
        a._enterable && (clearTimeout(a._hideTimeout), a._show = !0), a._inContent = !0;
      }, r.onmousemove = function(l) {
        if (l = l || window.event, !a._enterable) {
          var u = i.handler, c = i.painter.getViewportRoot();
          Jo(c, l, !0), u.dispatch("mousemove", l);
        }
      }, r.onmouseleave = function() {
        a._inContent = !1, a._enterable && a._show && a.hideLater(a._hideDelay);
      };
    }
    return n.prototype.update = function(e) {
      if (!this._container) {
        var t = this._api.getDom(), r = kNt(t, "position"), i = t.style;
        i.position !== "absolute" && r !== "absolute" && (i.position = "relative");
      }
      var o = e.get("alwaysShowContent");
      o && this._moveIfResized(), this._alwaysShowContent = o, this.el.className = e.get("className") || "";
    }, n.prototype.show = function(e, t) {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var r = this.el, i = r.style, o = this._styleCoord;
      r.innerHTML ? i.cssText = DNt + NNt(e, !this._firstShow, this._longHide) + gZ(o[0], o[1], !0) + ("border-color:" + od(t) + ";") + (e.get("extraCssText") || "") + (";pointer-events:" + (this._enterable ? "auto" : "none")) : i.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1;
    }, n.prototype.setContent = function(e, t, r, i, o) {
      var s = this.el;
      if (e == null) {
        s.innerHTML = "";
        return;
      }
      var a = "";
      if (be(o) && r.get("trigger") === "item" && !tie(r) && (a = INt(r, i, o)), be(e))
        s.innerHTML = e + a;
      else if (e) {
        s.innerHTML = "", oe(e) || (e = [e]);
        for (var l = 0; l < e.length; l++)
          Jf(e[l]) && e[l].parentNode !== s && s.appendChild(e[l]);
        if (a && s.childNodes.length) {
          var u = document.createElement("div");
          u.innerHTML = a, s.appendChild(u);
        }
      }
    }, n.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, n.prototype.getSize = function() {
      var e = this.el;
      return [e.offsetWidth, e.offsetHeight];
    }, n.prototype.moveTo = function(e, t) {
      var r = this._styleCoord;
      if (vZ(r, this._zr, this._container, e, t), r[0] != null && r[1] != null) {
        var i = this.el.style, o = gZ(r[0], r[1]);
        I(o, function(s) {
          i[s[0]] = s[1];
        });
      }
    }, n.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], t = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
    }, n.prototype.hide = function() {
      var e = this, t = this.el.style;
      t.visibility = "hidden", t.opacity = "0", ht.transform3dSupported && (t.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function() {
        return e._longHide = !0;
      }, 500);
    }, n.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(Oe(this.hide, this), e)) : this.hide());
    }, n.prototype.isShow = function() {
      return this._show;
    }, n.prototype.dispose = function() {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var e = this.el.parentNode;
      e && e.removeChild(this.el), this.el = this._container = null;
    }, n;
  }()
);
const VNt = BNt;
var zNt = (
  /** @class */
  function() {
    function n(e) {
      this._show = !1, this._styleCoord = [0, 0, 0, 0], this._alwaysShowContent = !1, this._enterable = !0, this._zr = e.getZr(), yZ(this._styleCoord, this._zr, e.getWidth() / 2, e.getHeight() / 2);
    }
    return n.prototype.update = function(e) {
      var t = e.get("alwaysShowContent");
      t && this._moveIfResized(), this._alwaysShowContent = t;
    }, n.prototype.show = function() {
      this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0;
    }, n.prototype.setContent = function(e, t, r, i, o) {
      var s = this;
      Me(e) && Nt(process.env.NODE_ENV !== "production" ? "Passing DOM nodes as content is not supported in richText tooltip!" : ""), this.el && this._zr.remove(this.el);
      var a = r.getModel("textStyle");
      this.el = new At({
        style: {
          rich: t.richTextStyles,
          text: e,
          lineHeight: 22,
          borderWidth: 1,
          borderColor: i,
          textShadowColor: a.get("textShadowColor"),
          fill: r.get(["textStyle", "color"]),
          padding: hee(r, "richText"),
          verticalAlign: "top",
          align: "left"
        },
        z: r.get("z")
      }), I(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(u) {
        s.el.style[u] = r.get(u);
      }), I(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(u) {
        s.el.style[u] = a.get(u) || 0;
      }), this._zr.add(this.el);
      var l = this;
      this.el.on("mouseover", function() {
        l._enterable && (clearTimeout(l._hideTimeout), l._show = !0), l._inContent = !0;
      }), this.el.on("mouseout", function() {
        l._enterable && l._show && l.hideLater(l._hideDelay), l._inContent = !1;
      });
    }, n.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, n.prototype.getSize = function() {
      var e = this.el, t = this.el.getBoundingRect(), r = mZ(e.style);
      return [t.width + r.left + r.right, t.height + r.top + r.bottom];
    }, n.prototype.moveTo = function(e, t) {
      var r = this.el;
      if (r) {
        var i = this._styleCoord;
        yZ(i, this._zr, e, t), e = i[0], t = i[1];
        var o = r.style, s = Vu(o.borderWidth || 0), a = mZ(o);
        r.x = e + s + a.left, r.y = t + s + a.top, r.markRedraw();
      }
    }, n.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], t = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
    }, n.prototype.hide = function() {
      this.el && this.el.hide(), this._show = !1;
    }, n.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(Oe(this.hide, this), e)) : this.hide());
    }, n.prototype.isShow = function() {
      return this._show;
    }, n.prototype.dispose = function() {
      this._zr.remove(this.el);
    }, n;
  }()
);
function Vu(n) {
  return Math.max(0, n);
}
function mZ(n) {
  var e = Vu(n.shadowBlur || 0), t = Vu(n.shadowOffsetX || 0), r = Vu(n.shadowOffsetY || 0);
  return {
    left: Vu(e - t),
    right: Vu(e + t),
    top: Vu(e - r),
    bottom: Vu(e + r)
  };
}
function yZ(n, e, t, r) {
  n[0] = t, n[1] = r, n[2] = n[0] / e.getWidth(), n[3] = n[1] / e.getHeight();
}
var FNt = new _t({
  shape: {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }
}), QNt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r) {
      if (!(ht.node || !r.getDom())) {
        var i = t.getComponent("tooltip"), o = this._renderMode = w1t(i.get("renderMode"));
        this._tooltipContent = o === "richText" ? new zNt(r) : new VNt(r, {
          appendTo: i.get("appendToBody", !0) ? "body" : i.get("appendTo", !0)
        });
      }
    }, e.prototype.render = function(t, r, i) {
      if (!(ht.node || !i.getDom())) {
        this.group.removeAll(), this._tooltipModel = t, this._ecModel = r, this._api = i;
        var o = this._tooltipContent;
        o.update(t), o.setEnterable(t.get("enterable")), this._initGlobalListener(), this._keepShow(), this._renderMode !== "richText" && t.get("transitionDuration") ? _v(this, "_updatePosition", 50, "fixRate") : C0(this, "_updatePosition");
      }
    }, e.prototype._initGlobalListener = function() {
      var t = this._tooltipModel, r = t.get("triggerOn");
      Fre("itemTooltip", this._api, Oe(function(i, o, s) {
        r !== "none" && (r.indexOf(i) >= 0 ? this._tryShow(o, s) : i === "leave" && this._hide(s));
      }, this));
    }, e.prototype._keepShow = function() {
      var t = this._tooltipModel, r = this._ecModel, i = this._api, o = t.get("triggerOn");
      if (this._lastX != null && this._lastY != null && o !== "none" && o !== "click") {
        var s = this;
        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
          !i.isDisposed() && s.manuallyShowTip(t, r, i, {
            x: s._lastX,
            y: s._lastY,
            dataByCoordSys: s._lastDataByCoordSys
          });
        });
      }
    }, e.prototype.manuallyShowTip = function(t, r, i, o) {
      if (!(o.from === this.uid || ht.node || !i.getDom())) {
        var s = bZ(o, i);
        this._ticket = "";
        var a = o.dataByCoordSys, l = jNt(o, r, i);
        if (l) {
          var u = l.el.getBoundingRect().clone();
          u.applyTransform(l.el.transform), this._tryShow({
            offsetX: u.x + u.width / 2,
            offsetY: u.y + u.height / 2,
            target: l.el,
            position: o.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, s);
        } else if (o.tooltip && o.x != null && o.y != null) {
          var c = FNt;
          c.x = o.x, c.y = o.y, c.update(), Fe(c).tooltipConfig = {
            name: null,
            option: o.tooltip
          }, this._tryShow({
            offsetX: o.x,
            offsetY: o.y,
            target: c
          }, s);
        } else if (a)
          this._tryShow({
            offsetX: o.x,
            offsetY: o.y,
            position: o.position,
            dataByCoordSys: a,
            tooltipOption: o.tooltipOption
          }, s);
        else if (o.seriesIndex != null) {
          if (this._manuallyAxisShowTip(t, r, i, o))
            return;
          var h = Qre(o, r), f = h.point[0], d = h.point[1];
          f != null && d != null && this._tryShow({
            offsetX: f,
            offsetY: d,
            target: h.el,
            position: o.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, s);
        } else
          o.x != null && o.y != null && (i.dispatchAction({
            type: "updateAxisPointer",
            x: o.x,
            y: o.y
          }), this._tryShow({
            offsetX: o.x,
            offsetY: o.y,
            position: o.position,
            target: i.getZr().findHover(o.x, o.y).target
          }, s));
      }
    }, e.prototype.manuallyHideTip = function(t, r, i, o) {
      var s = this._tooltipContent;
      this._tooltipModel && s.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, o.from !== this.uid && this._hide(bZ(o, i));
    }, e.prototype._manuallyAxisShowTip = function(t, r, i, o) {
      var s = o.seriesIndex, a = o.dataIndex, l = r.getComponent("axisPointer").coordSysAxesInfo;
      if (!(s == null || a == null || l == null)) {
        var u = r.getSeriesByIndex(s);
        if (u) {
          var c = u.getData(), h = cm([c.getItemModel(a), u, (u.coordinateSystem || {}).model], this._tooltipModel);
          if (h.get("trigger") === "axis")
            return i.dispatchAction({
              type: "updateAxisPointer",
              seriesIndex: s,
              dataIndex: a,
              position: o.position
            }), !0;
        }
      }
    }, e.prototype._tryShow = function(t, r) {
      var i = t.target, o = this._tooltipModel;
      if (o) {
        this._lastX = t.offsetX, this._lastY = t.offsetY;
        var s = t.dataByCoordSys;
        if (s && s.length)
          this._showAxisTooltip(s, t);
        else if (i) {
          var a = Fe(i);
          if (a.ssrType === "legend")
            return;
          this._lastDataByCoordSys = null;
          var l, u;
          df(i, function(c) {
            if (Fe(c).dataIndex != null)
              return l = c, !0;
            if (Fe(c).tooltipConfig != null)
              return u = c, !0;
          }, !0), l ? this._showSeriesItemTooltip(t, l, r) : u ? this._showComponentItemTooltip(t, u, r) : this._hide(r);
        } else
          this._lastDataByCoordSys = null, this._hide(r);
      }
    }, e.prototype._showOrMove = function(t, r) {
      var i = t.get("showDelay");
      r = Oe(r, this), clearTimeout(this._showTimout), i > 0 ? this._showTimout = setTimeout(r, i) : r();
    }, e.prototype._showAxisTooltip = function(t, r) {
      var i = this._ecModel, o = this._tooltipModel, s = [r.offsetX, r.offsetY], a = cm([r.tooltipOption], o), l = this._renderMode, u = [], c = Mr("section", {
        blocks: [],
        noHeader: !0
      }), h = [], f = new FA();
      I(t, function(y) {
        I(y.dataByAxis, function(b) {
          var O = i.getComponent(b.axisDim + "Axis", b.axisIndex), w = b.value;
          if (!(!O || w == null)) {
            var x = Bre(w, O.axis, i, b.seriesDataIndices, b.valueLabelOpt), S = Mr("section", {
              header: x,
              noHeader: !Ys(x),
              sortBlocks: !0,
              blocks: []
            });
            c.blocks.push(S), I(b.seriesDataIndices, function(_) {
              var C = i.getSeriesByIndex(_.seriesIndex), A = _.dataIndexInside, T = C.getDataParams(A);
              if (!(T.dataIndex < 0)) {
                T.axisDim = b.axisDim, T.axisIndex = b.axisIndex, T.axisType = b.axisType, T.axisId = b.axisId, T.axisValue = IR(O.axis, {
                  value: w
                }), T.axisValueLabel = x, T.marker = f.makeTooltipMarker("item", od(T.color), l);
                var k = eF(C.formatTooltip(A, !0, null)), L = k.frag;
                if (L) {
                  var D = cm([C], o).get("valueFormatter");
                  S.blocks.push(D ? te({
                    valueFormatter: D
                  }, L) : L);
                }
                k.text && h.push(k.text), u.push(T);
              }
            });
          }
        });
      }), c.blocks.reverse(), h.reverse();
      var d = r.position, p = a.get("order"), g = sF(c, f, l, p, i.get("useUTC"), a.get("textStyle"));
      g && h.unshift(g);
      var v = l === "richText" ? `

` : "<br/>", m = h.join(v);
      this._showOrMove(a, function() {
        this._updateContentNotChangedOnAxis(t, u) ? this._updatePosition(a, d, s[0], s[1], this._tooltipContent, u) : this._showTooltipContent(a, m, u, Math.random() + "", s[0], s[1], d, null, f);
      });
    }, e.prototype._showSeriesItemTooltip = function(t, r, i) {
      var o = this._ecModel, s = Fe(r), a = s.seriesIndex, l = o.getSeriesByIndex(a), u = s.dataModel || l, c = s.dataIndex, h = s.dataType, f = u.getData(h), d = this._renderMode, p = t.positionDefault, g = cm([f.getItemModel(c), u, l && (l.coordinateSystem || {}).model], this._tooltipModel, p ? {
        position: p
      } : null), v = g.get("trigger");
      if (!(v != null && v !== "item")) {
        var m = u.getDataParams(c, h), y = new FA();
        m.marker = y.makeTooltipMarker("item", od(m.color), d);
        var b = eF(u.formatTooltip(c, !1, h)), O = g.get("order"), w = g.get("valueFormatter"), x = b.frag, S = x ? sF(w ? te({
          valueFormatter: w
        }, x) : x, y, d, O, o.get("useUTC"), g.get("textStyle")) : b.text, _ = "item_" + u.name + "_" + c;
        this._showOrMove(g, function() {
          this._showTooltipContent(g, S, m, _, t.offsetX, t.offsetY, t.position, t.target, y);
        }), i({
          type: "showTip",
          dataIndexInside: c,
          dataIndex: f.getRawIndex(c),
          seriesIndex: a,
          from: this.uid
        });
      }
    }, e.prototype._showComponentItemTooltip = function(t, r, i) {
      var o = Fe(r), s = o.tooltipConfig, a = s.option || {};
      if (be(a)) {
        var l = a;
        a = {
          content: l,
          // Fixed formatter
          formatter: l
        };
      }
      var u = [a], c = this._ecModel.getComponent(o.componentMainType, o.componentIndex);
      c && u.push(c), u.push({
        formatter: a.content
      });
      var h = t.positionDefault, f = cm(u, this._tooltipModel, h ? {
        position: h
      } : null), d = f.get("content"), p = Math.random() + "", g = new FA();
      this._showOrMove(f, function() {
        var v = Re(f.get("formatterParams") || {});
        this._showTooltipContent(f, d, v, p, t.offsetX, t.offsetY, t.position, r, g);
      }), i({
        type: "showTip",
        from: this.uid
      });
    }, e.prototype._showTooltipContent = function(t, r, i, o, s, a, l, u, c) {
      if (this._ticket = "", !(!t.get("showContent") || !t.get("show"))) {
        var h = this._tooltipContent;
        h.setEnterable(t.get("enterable"));
        var f = t.get("formatter");
        l = l || t.get("position");
        var d = r, p = this._getNearestPoint([s, a], i, t.get("trigger"), t.get("borderColor")), g = p.color;
        if (f)
          if (be(f)) {
            var v = t.ecModel.get("useUTC"), m = oe(i) ? i[0] : i, y = m && m.axisType && m.axisType.indexOf("time") >= 0;
            d = f, y && (d = lC(m.axisValue, d, v)), d = LJ(d, i, !0);
          } else if (Pe(f)) {
            var b = Oe(function(O, w) {
              O === this._ticket && (h.setContent(w, c, t, g, l), this._updatePosition(t, l, s, a, h, i, u));
            }, this);
            this._ticket = o, d = f(i, o, b);
          } else
            d = f;
        h.setContent(d, c, t, g, l), h.show(t, g), this._updatePosition(t, l, s, a, h, i, u);
      }
    }, e.prototype._getNearestPoint = function(t, r, i, o) {
      if (i === "axis" || oe(r))
        return {
          color: o || (this._renderMode === "html" ? "#fff" : "none")
        };
      if (!oe(r))
        return {
          color: o || r.color || r.borderColor
        };
    }, e.prototype._updatePosition = function(t, r, i, o, s, a, l) {
      var u = this._api.getWidth(), c = this._api.getHeight();
      r = r || t.get("position");
      var h = s.getSize(), f = t.get("align"), d = t.get("verticalAlign"), p = l && l.getBoundingRect().clone();
      if (l && p.applyTransform(l.transform), Pe(r) && (r = r([i, o], a, s.el, p, {
        viewSize: [u, c],
        contentSize: h.slice()
      })), oe(r))
        i = fe(r[0], u), o = fe(r[1], c);
      else if (Me(r)) {
        var g = r;
        g.width = h[0], g.height = h[1];
        var v = mr(g, {
          width: u,
          height: c
        });
        i = v.x, o = v.y, f = null, d = null;
      } else if (be(r) && l) {
        var m = GNt(r, p, h, t.get("borderWidth"));
        i = m[0], o = m[1];
      } else {
        var m = ZNt(i, o, s, u, c, f ? null : 20, d ? null : 20);
        i = m[0], o = m[1];
      }
      if (f && (i -= OZ(f) ? h[0] / 2 : f === "right" ? h[0] : 0), d && (o -= OZ(d) ? h[1] / 2 : d === "bottom" ? h[1] : 0), tie(t)) {
        var m = WNt(i, o, s, u, c);
        i = m[0], o = m[1];
      }
      s.moveTo(i, o);
    }, e.prototype._updateContentNotChangedOnAxis = function(t, r) {
      var i = this._lastDataByCoordSys, o = this._cbParamsList, s = !!i && i.length === t.length;
      return s && I(i, function(a, l) {
        var u = a.dataByAxis || [], c = t[l] || {}, h = c.dataByAxis || [];
        s = s && u.length === h.length, s && I(u, function(f, d) {
          var p = h[d] || {}, g = f.seriesDataIndices || [], v = p.seriesDataIndices || [];
          s = s && f.value === p.value && f.axisType === p.axisType && f.axisId === p.axisId && g.length === v.length, s && I(g, function(m, y) {
            var b = v[y];
            s = s && m.seriesIndex === b.seriesIndex && m.dataIndex === b.dataIndex;
          }), o && I(f.seriesDataIndices, function(m) {
            var y = m.seriesIndex, b = r[y], O = o[y];
            b && O && O.data !== b.data && (s = !1);
          });
        });
      }), this._lastDataByCoordSys = t, this._cbParamsList = r, !!s;
    }, e.prototype._hide = function(t) {
      this._lastDataByCoordSys = null, t({
        type: "hideTip",
        from: this.uid
      });
    }, e.prototype.dispose = function(t, r) {
      ht.node || !r.getDom() || (C0(this, "_updatePosition"), this._tooltipContent.dispose(), JM("itemTooltip", r));
    }, e.type = "tooltip", e;
  }(Nn)
);
function cm(n, e, t) {
  var r = e.ecModel, i;
  t ? (i = new fn(t, r, r), i = new fn(e.option, i, r)) : i = e;
  for (var o = n.length - 1; o >= 0; o--) {
    var s = n[o];
    s && (s instanceof fn && (s = s.get("tooltip", !0)), be(s) && (s = {
      formatter: s
    }), s && (i = new fn(s, i, r)));
  }
  return i;
}
function bZ(n, e) {
  return n.dispatchAction || Oe(e.dispatchAction, e);
}
function ZNt(n, e, t, r, i, o, s) {
  var a = t.getSize(), l = a[0], u = a[1];
  return o != null && (n + l + o + 2 > r ? n -= l + o : n += o), s != null && (e + u + s > i ? e -= u + s : e += s), [n, e];
}
function WNt(n, e, t, r, i) {
  var o = t.getSize(), s = o[0], a = o[1];
  return n = Math.min(n + s, r) - s, e = Math.min(e + a, i) - a, n = Math.max(n, 0), e = Math.max(e, 0), [n, e];
}
function GNt(n, e, t, r) {
  var i = t[0], o = t[1], s = Math.ceil(Math.SQRT2 * r) + 8, a = 0, l = 0, u = e.width, c = e.height;
  switch (n) {
    case "inside":
      a = e.x + u / 2 - i / 2, l = e.y + c / 2 - o / 2;
      break;
    case "top":
      a = e.x + u / 2 - i / 2, l = e.y - o - s;
      break;
    case "bottom":
      a = e.x + u / 2 - i / 2, l = e.y + c + s;
      break;
    case "left":
      a = e.x - i - s, l = e.y + c / 2 - o / 2;
      break;
    case "right":
      a = e.x + u + s, l = e.y + c / 2 - o / 2;
  }
  return [a, l];
}
function OZ(n) {
  return n === "center" || n === "middle";
}
function jNt(n, e, t) {
  var r = ZI(n).queryOptionMap, i = r.keys()[0];
  if (!(!i || i === "series")) {
    var o = xb(e, i, r.get(i), {
      useDefault: !1,
      enableAll: !1,
      enableNone: !1
    }), s = o.models[0];
    if (s) {
      var a = t.getViewOfComponentModel(s), l;
      if (a.group.traverse(function(u) {
        var c = Fe(u).tooltipConfig;
        if (c && c.name === n.name)
          return l = u, !0;
      }), l)
        return {
          componentMainType: i,
          componentIndex: s.componentIndex,
          el: l
        };
    }
  }
}
const HNt = QNt;
function qNt(n) {
  at(Vb), n.registerComponentModel(PNt), n.registerComponentView(HNt), n.registerAction({
    type: "showTip",
    event: "showTip",
    update: "tooltip:manuallyShowTip"
  }, qn), n.registerAction({
    type: "hideTip",
    event: "hideTip",
    update: "tooltip:manuallyHideTip"
  }, qn);
}
var YNt = ["rect", "polygon", "keep", "clear"];
function XNt(n, e) {
  var t = Kt(n ? n.brush : []);
  if (t.length) {
    var r = [];
    I(t, function(l) {
      var u = l.hasOwnProperty("toolbox") ? l.toolbox : [];
      u instanceof Array && (r = r.concat(u));
    });
    var i = n && n.toolbox;
    oe(i) && (i = i[0]), i || (i = {
      feature: {}
    }, n.toolbox = [i]);
    var o = i.feature || (i.feature = {}), s = o.brush || (o.brush = {}), a = s.type || (s.type = []);
    a.push.apply(a, r), UNt(a), e && !a.length && a.push.apply(a, YNt);
  }
}
function UNt(n) {
  var e = {};
  I(n, function(t) {
    e[t] = 1;
  }), n.length = 0, I(e, function(t, r) {
    n.push(r);
  });
}
var wZ = I;
function xZ(n) {
  if (n) {
    for (var e in n)
      if (n.hasOwnProperty(e))
        return !0;
  }
}
function oD(n, e, t) {
  var r = {};
  return wZ(e, function(o) {
    var s = r[o] = i();
    wZ(n[o], function(a, l) {
      if (ai.isValidType(l)) {
        var u = {
          type: l,
          visual: a
        };
        t && t(u, o), s[l] = new ai(u), l === "opacity" && (u = Re(u), u.type = "colorAlpha", s.__hidden.__alphaForOpacity = new ai(u));
      }
    });
  }), r;
  function i() {
    var o = function() {
    };
    o.prototype.__hidden = o.prototype;
    var s = new o();
    return s;
  }
}
function oie(n, e, t) {
  var r;
  I(t, function(i) {
    e.hasOwnProperty(i) && xZ(e[i]) && (r = !0);
  }), r && I(t, function(i) {
    e.hasOwnProperty(i) && xZ(e[i]) ? n[i] = Re(e[i]) : delete n[i];
  });
}
function KNt(n, e, t, r, i, o) {
  var s = {};
  I(n, function(h) {
    var f = ai.prepareVisualTypes(e[h]);
    s[h] = f;
  });
  var a;
  function l(h) {
    return SR(t, a, h);
  }
  function u(h, f) {
    wee(t, a, h, f);
  }
  o == null ? t.each(c) : t.each([o], c);
  function c(h, f) {
    a = o == null ? h : f;
    var d = t.getRawDataItem(a);
    if (!(d && d.visualMap === !1))
      for (var p = r.call(i, h), g = e[p], v = s[p], m = 0, y = v.length; m < y; m++) {
        var b = v[m];
        g[b] && g[b].applyVisual(h, l, u);
      }
  }
}
function JNt(n, e, t, r) {
  var i = {};
  return I(n, function(o) {
    var s = ai.prepareVisualTypes(e[o]);
    i[o] = s;
  }), {
    progress: function(s, a) {
      var l;
      r != null && (l = a.getDimensionIndex(r));
      function u(w) {
        return SR(a, h, w);
      }
      function c(w, x) {
        wee(a, h, w, x);
      }
      for (var h, f = a.getStore(); (h = s.next()) != null; ) {
        var d = a.getRawDataItem(h);
        if (!(d && d.visualMap === !1))
          for (var p = r != null ? f.get(l, h) : h, g = t(p), v = e[g], m = i[g], y = 0, b = m.length; y < b; y++) {
            var O = m[y];
            v[O] && v[O].applyVisual(p, u, c);
          }
      }
    }
  };
}
function e3t(n) {
  var e = n.brushType, t = {
    point: function(r) {
      return SZ[e].point(r, t, n);
    },
    rect: function(r) {
      return SZ[e].rect(r, t, n);
    }
  };
  return t;
}
var SZ = {
  lineX: _Z(0),
  lineY: _Z(1),
  rect: {
    point: function(n, e, t) {
      return n && t.boundingRect.contain(n[0], n[1]);
    },
    rect: function(n, e, t) {
      return n && t.boundingRect.intersect(n);
    }
  },
  polygon: {
    point: function(n, e, t) {
      return n && t.boundingRect.contain(n[0], n[1]) && qh(t.range, n[0], n[1]);
    },
    rect: function(n, e, t) {
      var r = t.range;
      if (!n || r.length <= 1)
        return !1;
      var i = n.x, o = n.y, s = n.width, a = n.height, l = r[0];
      if (qh(r, i, o) || qh(r, i + s, o) || qh(r, i, o + a) || qh(r, i + s, o + a) || et.create(n).contain(l[0], l[1]) || Dm(i, o, i + s, o, r) || Dm(i, o, i, o + a, r) || Dm(i + s, o, i + s, o + a, r) || Dm(i, o + a, i + s, o + a, r))
        return !0;
    }
  }
};
function _Z(n) {
  var e = ["x", "y"], t = ["width", "height"];
  return {
    point: function(r, i, o) {
      if (r) {
        var s = o.range, a = r[n];
        return hm(a, s);
      }
    },
    rect: function(r, i, o) {
      if (r) {
        var s = o.range, a = [r[e[n]], r[e[n]] + r[t[n]]];
        return a[1] < a[0] && a.reverse(), hm(a[0], s) || hm(a[1], s) || hm(s[0], a) || hm(s[1], a);
      }
    }
  };
}
function hm(n, e) {
  return e[0] <= n && n <= e[1];
}
var CZ = ["inBrush", "outOfBrush"], oP = "__ecBrushSelect", sD = "__ecInBrushSelectEvent";
function sie(n) {
  n.eachComponent({
    mainType: "brush"
  }, function(e) {
    var t = e.brushTargetManager = new M$(e.option, n);
    t.setInputRanges(e.areas, n);
  });
}
function t3t(n, e, t) {
  var r = [], i, o;
  n.eachComponent({
    mainType: "brush"
  }, function(s) {
    t && t.type === "takeGlobalCursor" && s.setBrushOption(t.key === "brush" ? t.brushOption : {
      brushType: !1
    });
  }), sie(n), n.eachComponent({
    mainType: "brush"
  }, function(s, a) {
    var l = {
      brushId: s.id,
      brushIndex: a,
      brushName: s.name,
      areas: Re(s.areas),
      selected: []
    };
    r.push(l);
    var u = s.option, c = u.brushLink, h = [], f = [], d = [], p = !1;
    a || (i = u.throttleType, o = u.throttleDelay);
    var g = ae(s.areas, function(w) {
      var x = o3t[w.brushType], S = Le({
        boundingRect: x ? x(w) : void 0
      }, w);
      return S.selectors = e3t(S), S;
    }), v = oD(s.option, CZ, function(w) {
      w.mappingMethod = "fixed";
    });
    oe(c) && I(c, function(w) {
      h[w] = 1;
    });
    function m(w) {
      return c === "all" || !!h[w];
    }
    function y(w) {
      return !!w.length;
    }
    n.eachSeries(function(w, x) {
      var S = d[x] = [];
      w.subType === "parallel" ? b(w, x) : O(w, x, S);
    });
    function b(w, x) {
      var S = w.coordinateSystem;
      p = p || S.hasAxisBrushed(), m(x) && S.eachActiveState(w.getData(), function(_, C) {
        _ === "active" && (f[C] = 1);
      });
    }
    function O(w, x, S) {
      if (!(!w.brushSelector || i3t(s, x)) && (I(g, function(C) {
        s.brushTargetManager.controlSeries(C, w, n) && S.push(C), p = p || y(S);
      }), m(x) && y(S))) {
        var _ = w.getData();
        _.each(function(C) {
          AZ(w, S, _, C) && (f[C] = 1);
        });
      }
    }
    n.eachSeries(function(w, x) {
      var S = {
        seriesId: w.id,
        seriesIndex: x,
        seriesName: w.name,
        dataIndex: []
      };
      l.selected.push(S);
      var _ = d[x], C = w.getData(), A = m(x) ? function(T) {
        return f[T] ? (S.dataIndex.push(C.getRawIndex(T)), "inBrush") : "outOfBrush";
      } : function(T) {
        return AZ(w, _, C, T) ? (S.dataIndex.push(C.getRawIndex(T)), "inBrush") : "outOfBrush";
      };
      (m(x) ? p : y(_)) && KNt(CZ, v, C, A);
    });
  }), n3t(e, i, o, r, t);
}
function n3t(n, e, t, r, i) {
  if (i) {
    var o = n.getZr();
    if (!o[sD]) {
      o[oP] || (o[oP] = r3t);
      var s = _v(o, oP, t, e);
      s(n, r);
    }
  }
}
function r3t(n, e) {
  if (!n.isDisposed()) {
    var t = n.getZr();
    t[sD] = !0, n.dispatchAction({
      type: "brushSelect",
      batch: e
    }), t[sD] = !1;
  }
}
function AZ(n, e, t, r) {
  for (var i = 0, o = e.length; i < o; i++) {
    var s = e[i];
    if (n.brushSelector(r, t, s.selectors, s))
      return !0;
  }
}
function i3t(n, e) {
  var t = n.option.seriesIndex;
  return t != null && t !== "all" && (oe(t) ? ot(t, e) < 0 : e !== t);
}
var o3t = {
  rect: function(n) {
    return TZ(n.range);
  },
  polygon: function(n) {
    for (var e, t = n.range, r = 0, i = t.length; r < i; r++) {
      e = e || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
      var o = t[r];
      o[0] < e[0][0] && (e[0][0] = o[0]), o[0] > e[0][1] && (e[0][1] = o[0]), o[1] < e[1][0] && (e[1][0] = o[1]), o[1] > e[1][1] && (e[1][1] = o[1]);
    }
    return e && TZ(e);
  }
};
function TZ(n) {
  return new et(n[0][0], n[1][0], n[0][1] - n[0][0], n[1][1] - n[1][0]);
}
var s3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r) {
      this.ecModel = t, this.api = r, this.model, (this._brushController = new h$(r.getZr())).on("brush", Oe(this._onBrush, this)).mount();
    }, e.prototype.render = function(t, r, i, o) {
      this.model = t, this._updateController(t, r, i, o);
    }, e.prototype.updateTransform = function(t, r, i, o) {
      sie(r), this._updateController(t, r, i, o);
    }, e.prototype.updateVisual = function(t, r, i, o) {
      this.updateTransform(t, r, i, o);
    }, e.prototype.updateView = function(t, r, i, o) {
      this._updateController(t, r, i, o);
    }, e.prototype._updateController = function(t, r, i, o) {
      (!o || o.$from !== t.id) && this._brushController.setPanels(t.brushTargetManager.makePanelOpts(i)).enableBrush(t.brushOption).updateCovers(t.areas.slice());
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.prototype._onBrush = function(t) {
      var r = this.model.id, i = this.model.brushTargetManager.setOutputRanges(t.areas, this.ecModel);
      (!t.isEnd || t.removeOnClick) && this.api.dispatchAction({
        type: "brush",
        brushId: r,
        areas: Re(i),
        $from: r
      }), t.isEnd && this.api.dispatchAction({
        type: "brushEnd",
        brushId: r,
        areas: Re(i),
        $from: r
      });
    }, e.type = "brush", e;
  }(Nn)
);
const a3t = s3t;
var l3t = "#ddd", u3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.areas = [], t.brushOption = {}, t;
    }
    return e.prototype.optionUpdated = function(t, r) {
      var i = this.option;
      !r && oie(i, t, ["inBrush", "outOfBrush"]);
      var o = i.inBrush = i.inBrush || {};
      i.outOfBrush = i.outOfBrush || {
        color: l3t
      }, o.hasOwnProperty("liftZ") || (o.liftZ = 5);
    }, e.prototype.setAreas = function(t) {
      process.env.NODE_ENV !== "production" && (De(oe(t)), I(t, function(r) {
        De(r.brushType, "Illegal areas");
      })), t && (this.areas = ae(t, function(r) {
        return PZ(this.option, r);
      }, this));
    }, e.prototype.setBrushOption = function(t) {
      this.brushOption = PZ(this.option, t), this.brushType = this.brushOption.brushType;
    }, e.type = "brush", e.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], e.defaultOption = {
      seriesIndex: "all",
      brushType: "rect",
      brushMode: "single",
      transformable: !0,
      brushStyle: {
        borderWidth: 1,
        color: "rgba(210,219,238,0.3)",
        borderColor: "#D2DBEE"
      },
      throttleType: "fixRate",
      throttleDelay: 0,
      removeOnClick: !0,
      z: 1e4
    }, e;
  }(Ot)
);
function PZ(n, e) {
  return Je({
    brushType: n.brushType,
    brushMode: n.brushMode,
    transformable: n.transformable,
    brushStyle: new fn(n.brushStyle).getItemStyle(),
    removeOnClick: n.removeOnClick,
    z: n.z
  }, e, !0);
}
const c3t = u3t;
var h3t = ["rect", "polygon", "lineX", "lineY", "keep", "clear"], f3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      return n !== null && n.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, r, i) {
      var o, s, a;
      r.eachComponent({
        mainType: "brush"
      }, function(l) {
        o = l.brushType, s = l.brushOption.brushMode || "single", a = a || !!l.areas.length;
      }), this._brushType = o, this._brushMode = s, I(t.get("type", !0), function(l) {
        t.setIconStatus(l, (l === "keep" ? s === "multiple" : l === "clear" ? a : l === o) ? "emphasis" : "normal");
      });
    }, e.prototype.updateView = function(t, r, i) {
      this.render(t, r, i);
    }, e.prototype.getIcons = function() {
      var t = this.model, r = t.get("icon", !0), i = {};
      return I(t.get("type", !0), function(o) {
        r[o] && (i[o] = r[o]);
      }), i;
    }, e.prototype.onclick = function(t, r, i) {
      var o = this._brushType, s = this._brushMode;
      i === "clear" ? (r.dispatchAction({
        type: "axisAreaSelect",
        intervals: []
      }), r.dispatchAction({
        type: "brush",
        command: "clear",
        // Clear all areas of all brush components.
        areas: []
      })) : r.dispatchAction({
        type: "takeGlobalCursor",
        key: "brush",
        brushOption: {
          brushType: i === "keep" ? o : o === i ? !1 : i,
          brushMode: i === "keep" ? s === "multiple" ? "single" : "multiple" : s
        }
      });
    }, e.getDefaultOption = function(t) {
      var r = {
        show: !0,
        type: h3t.slice(),
        icon: {
          /* eslint-disable */
          rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
          polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
          lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
          lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
          keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
          clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
          // jshint ignore:line
          /* eslint-enable */
        },
        // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`
        title: t.getLocaleModel().get(["toolbox", "brush", "title"])
      };
      return r;
    }, e;
  }(ss)
);
const d3t = f3t;
function p3t(n) {
  n.registerComponentView(a3t), n.registerComponentModel(c3t), n.registerPreprocessor(XNt), n.registerVisual(n.PRIORITY.VISUAL.BRUSH, t3t), n.registerAction({
    type: "brush",
    event: "brush",
    update: "updateVisual"
  }, function(e, t) {
    t.eachComponent({
      mainType: "brush",
      query: e
    }, function(r) {
      r.setAreas(e.areas);
    });
  }), n.registerAction({
    type: "brushSelect",
    event: "brushSelected",
    update: "none"
  }, qn), n.registerAction({
    type: "brushEnd",
    event: "brushEnd",
    update: "none"
  }, qn), dp("brush", d3t);
}
var g3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, t;
    }
    return e.type = "title", e.defaultOption = {
      // zlevel: 0,
      z: 6,
      show: !0,
      text: "",
      target: "blank",
      subtext: "",
      subtarget: "blank",
      left: 0,
      top: 0,
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      textStyle: {
        fontSize: 18,
        fontWeight: "bold",
        color: "#464646"
      },
      subtextStyle: {
        fontSize: 12,
        color: "#6E7079"
      }
    }, e;
  }(Ot)
), v3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, r, i) {
      if (this.group.removeAll(), !!t.get("show")) {
        var o = this.group, s = t.getModel("textStyle"), a = t.getModel("subtextStyle"), l = t.get("textAlign"), u = Qe(t.get("textBaseline"), t.get("textVerticalAlign")), c = new At({
          style: hn(s, {
            text: t.get("text"),
            fill: s.getTextColor()
          }, {
            disableBox: !0
          }),
          z2: 10
        }), h = c.getBoundingRect(), f = t.get("subtext"), d = new At({
          style: hn(a, {
            text: f,
            fill: a.getTextColor(),
            y: h.height + t.get("itemGap"),
            verticalAlign: "top"
          }, {
            disableBox: !0
          }),
          z2: 10
        }), p = t.get("link"), g = t.get("sublink"), v = t.get("triggerEvent", !0);
        c.silent = !p && !v, d.silent = !g && !v, p && c.on("click", function() {
          Jx(p, "_" + t.get("target"));
        }), g && d.on("click", function() {
          Jx(g, "_" + t.get("subtarget"));
        }), Fe(c).eventData = Fe(d).eventData = v ? {
          componentType: "title",
          componentIndex: t.componentIndex
        } : null, o.add(c), f && o.add(d);
        var m = o.getBoundingRect(), y = t.getBoxLayoutParams();
        y.width = m.width, y.height = m.height;
        var b = mr(y, {
          width: i.getWidth(),
          height: i.getHeight()
        }, t.get("padding"));
        l || (l = t.get("left") || t.get("right"), l === "middle" && (l = "center"), l === "right" ? b.x += b.width : l === "center" && (b.x += b.width / 2)), u || (u = t.get("top") || t.get("bottom"), u === "center" && (u = "middle"), u === "bottom" ? b.y += b.height : u === "middle" && (b.y += b.height / 2), u = u || "top"), o.x = b.x, o.y = b.y, o.markRedraw();
        var O = {
          align: l,
          verticalAlign: u
        };
        c.setStyle(O), d.setStyle(O), m = o.getBoundingRect();
        var w = b.margin, x = t.getItemStyle(["color", "opacity"]);
        x.fill = t.get("backgroundColor");
        var S = new _t({
          shape: {
            x: m.x - w[3],
            y: m.y - w[0],
            width: m.width + w[1] + w[3],
            height: m.height + w[0] + w[2],
            r: t.get("borderRadius")
          },
          style: x,
          subPixelOptimize: !0,
          silent: !0
        });
        o.add(S);
      }
    }, e.type = "title", e;
  }(Nn)
);
function m3t(n) {
  n.registerComponentModel(g3t), n.registerComponentView(v3t);
}
var EZ = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = "box", t;
    }
    return e.prototype.init = function(t, r, i) {
      this.mergeDefaultAndTheme(t, i), this._initData();
    }, e.prototype.mergeOption = function(t) {
      n.prototype.mergeOption.apply(this, arguments), this._initData();
    }, e.prototype.setCurrentIndex = function(t) {
      t == null && (t = this.option.currentIndex);
      var r = this._data.count();
      this.option.loop ? t = (t % r + r) % r : (t >= r && (t = r - 1), t < 0 && (t = 0)), this.option.currentIndex = t;
    }, e.prototype.getCurrentIndex = function() {
      return this.option.currentIndex;
    }, e.prototype.isIndexMax = function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    }, e.prototype.setPlayState = function(t) {
      this.option.autoPlay = !!t;
    }, e.prototype.getPlayState = function() {
      return !!this.option.autoPlay;
    }, e.prototype._initData = function() {
      var t = this.option, r = t.data || [], i = t.axisType, o = this._names = [], s;
      i === "category" ? (s = [], I(r, function(u, c) {
        var h = dr(fv(u), ""), f;
        Me(u) ? (f = Re(u), f.value = c) : f = c, s.push(f), o.push(h);
      })) : s = r;
      var a = {
        category: "ordinal",
        time: "time",
        value: "number"
      }[i] || "number", l = this._data = new Bi([{
        name: "value",
        type: a
      }], this);
      l.initData(s, o);
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.getCategories = function() {
      if (this.get("axisType") === "category")
        return this._names.slice();
    }, e.type = "timeline", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 4,
      show: !0,
      axisType: "time",
      realtime: !0,
      left: "20%",
      top: null,
      right: "20%",
      bottom: 0,
      width: null,
      height: 40,
      padding: 5,
      controlPosition: "left",
      autoPlay: !1,
      rewind: !1,
      loop: !0,
      playInterval: 2e3,
      currentIndex: 0,
      itemStyle: {},
      label: {
        color: "#000"
      },
      data: []
    }, e;
  }(Ot)
), aie = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "timeline.slider", e.defaultOption = oh(EZ.defaultOption, {
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      orient: "horizontal",
      inverse: !1,
      tooltip: {
        trigger: "item"
        // data item may also have tootip attr.
      },
      symbol: "circle",
      symbolSize: 12,
      lineStyle: {
        show: !0,
        width: 2,
        color: "#DAE1F5"
      },
      label: {
        position: "auto",
        // When using number, label position is not
        // restricted by viewRect.
        // positive: right/bottom, negative: left/top
        show: !0,
        interval: "auto",
        rotate: 0,
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#A4B1D7"
      },
      itemStyle: {
        color: "#A4B1D7",
        borderWidth: 1
      },
      checkpointStyle: {
        symbol: "circle",
        symbolSize: 15,
        color: "#316bf3",
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0, 0, 0, 0.3)",
        // borderColor: 'rgba(194,53,49, 0.5)',
        animation: !0,
        animationDuration: 300,
        animationEasing: "quinticInOut"
      },
      controlStyle: {
        show: !0,
        showPlayBtn: !0,
        showPrevBtn: !0,
        showNextBtn: !0,
        itemSize: 24,
        itemGap: 12,
        position: "left",
        playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
        stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
        // eslint-disable-next-line max-len
        nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z",
        // eslint-disable-next-line max-len
        prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z",
        prevBtnSize: 18,
        nextBtnSize: 18,
        color: "#A4B1D7",
        borderColor: "#A4B1D7",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#6f778d"
        },
        itemStyle: {
          color: "#316BF3"
        },
        controlStyle: {
          color: "#316BF3",
          borderColor: "#316BF3",
          borderWidth: 2
        }
      },
      progress: {
        lineStyle: {
          color: "#316BF3"
        },
        itemStyle: {
          color: "#316BF3"
        },
        label: {
          color: "#6f778d"
        }
      },
      data: []
    }), e;
  }(EZ)
);
lr(aie, yR.prototype);
const y3t = aie;
var b3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "timeline", e;
  }(Nn)
);
const O3t = b3t;
var w3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e(t, r, i, o) {
      var s = n.call(this, t, r, i) || this;
      return s.type = o || "value", s;
    }
    return e.prototype.getLabelModel = function() {
      return this.model.getModel("label");
    }, e.prototype.isHorizontal = function() {
      return this.model.get("orient") === "horizontal";
    }, e;
  }(ba)
);
const x3t = w3t;
var sP = Math.PI, kZ = Ct(), S3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, r) {
      this.api = r;
    }, e.prototype.render = function(t, r, i) {
      if (this.model = t, this.api = i, this.ecModel = r, this.group.removeAll(), t.get("show", !0)) {
        var o = this._layout(t, i), s = this._createGroup("_mainGroup"), a = this._createGroup("_labelGroup"), l = this._axis = this._createAxis(o, t);
        t.formatTooltip = function(u) {
          var c = l.scale.getLabel({
            value: u
          });
          return Mr("nameValue", {
            noName: !0,
            value: c
          });
        }, I(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(u) {
          this["_render" + u](o, s, l, t);
        }, this), this._renderAxisLabel(o, a, l, t), this._position(o, t);
      }
      this._doPlayStop(), this._updateTicksStatus();
    }, e.prototype.remove = function() {
      this._clearTimer(), this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._clearTimer();
    }, e.prototype._layout = function(t, r) {
      var i = t.get(["label", "position"]), o = t.get("orient"), s = C3t(t, r), a;
      i == null || i === "auto" ? a = o === "horizontal" ? s.y + s.height / 2 < r.getHeight() / 2 ? "-" : "+" : s.x + s.width / 2 < r.getWidth() / 2 ? "+" : "-" : be(i) ? a = {
        horizontal: {
          top: "-",
          bottom: "+"
        },
        vertical: {
          left: "-",
          right: "+"
        }
      }[o][i] : a = i;
      var l = {
        horizontal: "center",
        vertical: a >= 0 || a === "+" ? "left" : "right"
      }, u = {
        horizontal: a >= 0 || a === "+" ? "top" : "bottom",
        vertical: "middle"
      }, c = {
        horizontal: 0,
        vertical: sP / 2
      }, h = o === "vertical" ? s.height : s.width, f = t.getModel("controlStyle"), d = f.get("show", !0), p = d ? f.get("itemSize") : 0, g = d ? f.get("itemGap") : 0, v = p + g, m = t.get(["label", "rotate"]) || 0;
      m = m * sP / 180;
      var y, b, O, w = f.get("position", !0), x = d && f.get("showPlayBtn", !0), S = d && f.get("showPrevBtn", !0), _ = d && f.get("showNextBtn", !0), C = 0, A = h;
      w === "left" || w === "bottom" ? (x && (y = [0, 0], C += v), S && (b = [C, 0], C += v), _ && (O = [A - p, 0], A -= v)) : (x && (y = [A - p, 0], A -= v), S && (b = [0, 0], C += v), _ && (O = [A - p, 0], A -= v));
      var T = [C, A];
      return t.get("inverse") && T.reverse(), {
        viewRect: s,
        mainLength: h,
        orient: o,
        rotation: c[o],
        labelRotation: m,
        labelPosOpt: a,
        labelAlign: t.get(["label", "align"]) || l[o],
        labelBaseline: t.get(["label", "verticalAlign"]) || t.get(["label", "baseline"]) || u[o],
        // Based on mainGroup.
        playPosition: y,
        prevBtnPosition: b,
        nextBtnPosition: O,
        axisExtent: T,
        controlSize: p,
        controlGap: g
      };
    }, e.prototype._position = function(t, r) {
      var i = this._mainGroup, o = this._labelGroup, s = t.viewRect;
      if (t.orient === "vertical") {
        var a = Bo(), l = s.x, u = s.y + s.height;
        dl(a, a, [-l, -u]), md(a, a, -sP / 2), dl(a, a, [l, u]), s = s.clone(), s.applyTransform(a);
      }
      var c = y(s), h = y(i.getBoundingRect()), f = y(o.getBoundingRect()), d = [i.x, i.y], p = [o.x, o.y];
      p[0] = d[0] = c[0][0];
      var g = t.labelPosOpt;
      if (g == null || be(g)) {
        var v = g === "+" ? 0 : 1;
        b(d, h, c, 1, v), b(p, f, c, 1, 1 - v);
      } else {
        var v = g >= 0 ? 0 : 1;
        b(d, h, c, 1, v), p[1] = d[1] + g;
      }
      i.setPosition(d), o.setPosition(p), i.rotation = o.rotation = t.rotation, m(i), m(o);
      function m(O) {
        O.originX = c[0][0] - O.x, O.originY = c[1][0] - O.y;
      }
      function y(O) {
        return [[O.x, O.x + O.width], [O.y, O.y + O.height]];
      }
      function b(O, w, x, S, _) {
        O[S] += x[S][_] - w[S][_];
      }
    }, e.prototype._createAxis = function(t, r) {
      var i = r.getData(), o = r.get("axisType"), s = _3t(r, o);
      s.getTicks = function() {
        return i.mapArray(["value"], function(u) {
          return {
            value: u
          };
        });
      };
      var a = i.getDataExtent("value");
      s.setExtent(a[0], a[1]), s.calcNiceTicks();
      var l = new x3t("value", s, t.axisExtent, o);
      return l.model = r, l;
    }, e.prototype._createGroup = function(t) {
      var r = this[t] = new Ve();
      return this.group.add(r), r;
    }, e.prototype._renderAxisLine = function(t, r, i, o) {
      var s = i.getExtent();
      if (o.get(["lineStyle", "show"])) {
        var a = new Ar({
          shape: {
            x1: s[0],
            y1: 0,
            x2: s[1],
            y2: 0
          },
          style: te({
            lineCap: "round"
          }, o.getModel("lineStyle").getLineStyle()),
          silent: !0,
          z2: 1
        });
        r.add(a);
        var l = this._progressLine = new Ar({
          shape: {
            x1: s[0],
            x2: this._currentPointer ? this._currentPointer.x : s[0],
            y1: 0,
            y2: 0
          },
          style: Le({
            lineCap: "round",
            lineWidth: a.style.lineWidth
          }, o.getModel(["progress", "lineStyle"]).getLineStyle()),
          silent: !0,
          z2: 1
        });
        r.add(l);
      }
    }, e.prototype._renderAxisTick = function(t, r, i, o) {
      var s = this, a = o.getData(), l = i.scale.getTicks();
      this._tickSymbols = [], I(l, function(u) {
        var c = i.dataToCoord(u.value), h = a.getItemModel(u.value), f = h.getModel("itemStyle"), d = h.getModel(["emphasis", "itemStyle"]), p = h.getModel(["progress", "itemStyle"]), g = {
          x: c,
          y: 0,
          onclick: Oe(s._changeTimeline, s, u.value)
        }, v = MZ(h, f, r, g);
        v.ensureState("emphasis").style = d.getItemStyle(), v.ensureState("progress").style = p.getItemStyle(), Df(v);
        var m = Fe(v);
        h.get("tooltip") ? (m.dataIndex = u.value, m.dataModel = o) : m.dataIndex = m.dataModel = null, s._tickSymbols.push(v);
      });
    }, e.prototype._renderAxisLabel = function(t, r, i, o) {
      var s = this, a = i.getLabelModel();
      if (a.get("show")) {
        var l = o.getData(), u = i.getViewLabels();
        this._tickLabels = [], I(u, function(c) {
          var h = c.tickValue, f = l.getItemModel(h), d = f.getModel("label"), p = f.getModel(["emphasis", "label"]), g = f.getModel(["progress", "label"]), v = i.dataToCoord(c.tickValue), m = new At({
            x: v,
            y: 0,
            rotation: t.labelRotation - t.rotation,
            onclick: Oe(s._changeTimeline, s, h),
            silent: !1,
            style: hn(d, {
              text: c.formattedLabel,
              align: t.labelAlign,
              verticalAlign: t.labelBaseline
            })
          });
          m.ensureState("emphasis").style = hn(p), m.ensureState("progress").style = hn(g), r.add(m), Df(m), kZ(m).dataIndex = h, s._tickLabels.push(m);
        });
      }
    }, e.prototype._renderControl = function(t, r, i, o) {
      var s = t.controlSize, a = t.rotation, l = o.getModel("controlStyle").getItemStyle(), u = o.getModel(["emphasis", "controlStyle"]).getItemStyle(), c = o.getPlayState(), h = o.get("inverse", !0);
      f(t.nextBtnPosition, "next", Oe(this._changeTimeline, this, h ? "-" : "+")), f(t.prevBtnPosition, "prev", Oe(this._changeTimeline, this, h ? "+" : "-")), f(t.playPosition, c ? "stop" : "play", Oe(this._handlePlayClick, this, !c), !0);
      function f(d, p, g, v) {
        if (d) {
          var m = aa(Qe(o.get(["controlStyle", p + "BtnSize"]), s), s), y = [0, -m / 2, m, m], b = A3t(o, p + "Icon", y, {
            x: d[0],
            y: d[1],
            originX: s / 2,
            originY: 0,
            rotation: v ? -a : 0,
            rectHover: !0,
            style: l,
            onclick: g
          });
          b.ensureState("emphasis").style = u, r.add(b), Df(b);
        }
      }
    }, e.prototype._renderCurrentPointer = function(t, r, i, o) {
      var s = o.getData(), a = o.getCurrentIndex(), l = s.getItemModel(a).getModel("checkpointStyle"), u = this, c = {
        onCreate: function(h) {
          h.draggable = !0, h.drift = Oe(u._handlePointerDrag, u), h.ondragend = Oe(u._handlePointerDragend, u), DZ(h, u._progressLine, a, i, o, !0);
        },
        onUpdate: function(h) {
          DZ(h, u._progressLine, a, i, o);
        }
      };
      this._currentPointer = MZ(l, l, this._mainGroup, {}, this._currentPointer, c);
    }, e.prototype._handlePlayClick = function(t) {
      this._clearTimer(), this.api.dispatchAction({
        type: "timelinePlayChange",
        playState: t,
        from: this.uid
      });
    }, e.prototype._handlePointerDrag = function(t, r, i) {
      this._clearTimer(), this._pointerChangeTimeline([i.offsetX, i.offsetY]);
    }, e.prototype._handlePointerDragend = function(t) {
      this._pointerChangeTimeline([t.offsetX, t.offsetY], !0);
    }, e.prototype._pointerChangeTimeline = function(t, r) {
      var i = this._toAxisCoord(t)[0], o = this._axis, s = ds(o.getExtent().slice());
      i > s[1] && (i = s[1]), i < s[0] && (i = s[0]), this._currentPointer.x = i, this._currentPointer.markRedraw();
      var a = this._progressLine;
      a && (a.shape.x2 = i, a.dirty());
      var l = this._findNearestTick(i), u = this.model;
      (r || l !== u.getCurrentIndex() && u.get("realtime")) && this._changeTimeline(l);
    }, e.prototype._doPlayStop = function() {
      var t = this;
      this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
        var r = t.model;
        t._changeTimeline(r.getCurrentIndex() + (r.get("rewind", !0) ? -1 : 1));
      }, this.model.get("playInterval")));
    }, e.prototype._toAxisCoord = function(t) {
      var r = this._mainGroup.getLocalTransform();
      return ta(t, r, !0);
    }, e.prototype._findNearestTick = function(t) {
      var r = this.model.getData(), i = 1 / 0, o, s = this._axis;
      return r.each(["value"], function(a, l) {
        var u = s.dataToCoord(a), c = Math.abs(u - t);
        c < i && (i = c, o = l);
      }), o;
    }, e.prototype._clearTimer = function() {
      this._timer && (clearTimeout(this._timer), this._timer = null);
    }, e.prototype._changeTimeline = function(t) {
      var r = this.model.getCurrentIndex();
      t === "+" ? t = r + 1 : t === "-" && (t = r - 1), this.api.dispatchAction({
        type: "timelineChange",
        currentIndex: t,
        from: this.uid
      });
    }, e.prototype._updateTicksStatus = function() {
      var t = this.model.getCurrentIndex(), r = this._tickSymbols, i = this._tickLabels;
      if (r)
        for (var o = 0; o < r.length; o++)
          r && r[o] && r[o].toggleState("progress", o < t);
      if (i)
        for (var o = 0; o < i.length; o++)
          i && i[o] && i[o].toggleState("progress", kZ(i[o]).dataIndex <= t);
    }, e.type = "timeline.slider", e;
  }(O3t)
);
function _3t(n, e) {
  if (e = e || n.get("type"), e)
    switch (e) {
      case "category":
        return new kR({
          ordinalMeta: n.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new ute({
          locale: n.ecModel.getLocaleModel(),
          useUTC: n.ecModel.get("useUTC")
        });
      default:
        return new Qc();
    }
}
function C3t(n, e) {
  return mr(n.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  }, n.get("padding"));
}
function A3t(n, e, t, r) {
  var i = r.style, o = Ab(n.get(["controlStyle", e]), r || {}, new et(t[0], t[1], t[2], t[3]));
  return i && o.setStyle(i), o;
}
function MZ(n, e, t, r, i, o) {
  var s = e.get("color");
  if (i)
    i.setColor(s), t.add(i), o && o.onUpdate(i);
  else {
    var a = n.get("symbol");
    i = ar(a, -1, -1, 2, 2, s), i.setStyle("strokeNoScale", !0), t.add(i), o && o.onCreate(i);
  }
  var l = e.getItemStyle(["color"]);
  i.setStyle(l), r = Je({
    rectHover: !0,
    z2: 100
  }, r, !0);
  var u = Cv(n.get("symbolSize"));
  r.scaleX = u[0] / 2, r.scaleY = u[1] / 2;
  var c = Od(n.get("symbolOffset"), u);
  c && (r.x = (r.x || 0) + c[0], r.y = (r.y || 0) + c[1]);
  var h = n.get("symbolRotate");
  return r.rotation = (h || 0) * Math.PI / 180 || 0, i.attr(r), i.updateTransform(), i;
}
function DZ(n, e, t, r, i, o) {
  if (!n.dragging) {
    var s = i.getModel("checkpointStyle"), a = r.dataToCoord(i.getData().get("value", t));
    if (o || !s.get("animation", !0))
      n.attr({
        x: a,
        y: 0
      }), e && e.attr({
        shape: {
          x2: a
        }
      });
    else {
      var l = {
        duration: s.get("animationDuration", !0),
        easing: s.get("animationEasing", !0)
      };
      n.stopAnimation(null, !0), n.animateTo({
        x: a,
        y: 0
      }, l), e && e.animateTo({
        shape: {
          x2: a
        }
      }, l);
    }
  }
}
const T3t = S3t;
function P3t(n) {
  n.registerAction({
    type: "timelineChange",
    event: "timelineChanged",
    update: "prepareAndUpdate"
  }, function(e, t, r) {
    var i = t.getComponent("timeline");
    return i && e.currentIndex != null && (i.setCurrentIndex(e.currentIndex), !i.get("loop", !0) && i.isIndexMax() && i.getPlayState() && (i.setPlayState(!1), r.dispatchAction({
      type: "timelinePlayChange",
      playState: !1,
      from: e.from
    }))), t.resetOption("timeline", {
      replaceMerge: i.get("replaceMerge", !0)
    }), Le({
      currentIndex: i.option.currentIndex
    }, e);
  }), n.registerAction({
    type: "timelinePlayChange",
    event: "timelinePlayChanged",
    update: "update"
  }, function(e, t) {
    var r = t.getComponent("timeline");
    r && e.playState != null && r.setPlayState(e.playState);
  });
}
function E3t(n) {
  var e = n && n.timeline;
  oe(e) || (e = e ? [e] : []), I(e, function(t) {
    t && k3t(t);
  });
}
function k3t(n) {
  var e = n.type, t = {
    number: "value",
    time: "time"
  };
  if (t[e] && (n.axisType = t[e], delete n.type), LZ(n), Uh(n, "controlPosition")) {
    var r = n.controlStyle || (n.controlStyle = {});
    Uh(r, "position") || (r.position = n.controlPosition), r.position === "none" && !Uh(r, "show") && (r.show = !1, delete r.position), delete n.controlPosition;
  }
  I(n.data || [], function(i) {
    Me(i) && !oe(i) && (!Uh(i, "value") && Uh(i, "name") && (i.value = i.name), LZ(i));
  });
}
function LZ(n) {
  var e = n.itemStyle || (n.itemStyle = {}), t = e.emphasis || (e.emphasis = {}), r = n.label || n.label || {}, i = r.normal || (r.normal = {}), o = {
    normal: 1,
    emphasis: 1
  };
  I(r, function(s, a) {
    !o[a] && !Uh(i, a) && (i[a] = s);
  }), t.label && !Uh(r, "emphasis") && (r.emphasis = t.label, delete t.label);
}
function Uh(n, e) {
  return n.hasOwnProperty(e);
}
function M3t(n) {
  n.registerComponentModel(y3t), n.registerComponentView(T3t), n.registerSubTypeDefaulter("timeline", function() {
    return "slider";
  }), P3t(n), n.registerPreprocessor(E3t);
}
function I$(n, e) {
  if (!n)
    return !1;
  for (var t = oe(n) ? n : [n], r = 0; r < t.length; r++)
    if (t[r] && t[r][e])
      return !0;
  return !1;
}
function MO(n) {
  td(n, "label", ["show"]);
}
var DO = Ct(), lie = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.createdBySelf = !1, t;
    }
    return e.prototype.init = function(t, r, i) {
      if (process.env.NODE_ENV !== "production" && this.type === "marker")
        throw new Error("Marker component is abstract component. Use markLine, markPoint, markArea instead.");
      this.mergeDefaultAndTheme(t, i), this._mergeOption(t, i, !1, !0);
    }, e.prototype.isAnimationEnabled = function() {
      if (ht.node)
        return !1;
      var t = this.__hostSeries;
      return this.getShallow("animation") && t && t.isAnimationEnabled();
    }, e.prototype.mergeOption = function(t, r) {
      this._mergeOption(t, r, !1, !1);
    }, e.prototype._mergeOption = function(t, r, i, o) {
      var s = this.mainType;
      i || r.eachSeries(function(a) {
        var l = a.get(this.mainType, !0), u = DO(a)[s];
        if (!l || !l.data) {
          DO(a)[s] = null;
          return;
        }
        u ? u._mergeOption(l, r, !0) : (o && MO(l), I(l.data, function(c) {
          c instanceof Array ? (MO(c[0]), MO(c[1])) : MO(c);
        }), u = this.createMarkerModelFromSeries(l, this, r), te(u, {
          mainType: this.mainType,
          // Use the same series index and name
          seriesIndex: a.seriesIndex,
          name: a.name,
          createdBySelf: !0
        }), u.__hostSeries = a), DO(a)[s] = u;
      }, this);
    }, e.prototype.formatTooltip = function(t, r, i) {
      var o = this.getData(), s = this.getRawValue(t), a = o.getName(t);
      return Mr("section", {
        header: this.name,
        blocks: [Mr("nameValue", {
          name: a,
          value: s,
          noName: !a,
          noValue: s == null
        })]
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.setData = function(t) {
      this._data = t;
    }, e.getMarkerModelFromSeries = function(t, r) {
      return DO(t)[r];
    }, e.type = "marker", e.dependencies = ["series", "grid", "polar", "geo"], e;
  }(Ot)
);
lr(lie, yR.prototype);
const Gc = lie;
var D3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, r, i) {
      return new e(t, r, i);
    }, e.type = "markPoint", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: "pin",
      symbolSize: 50,
      // symbolRotate: 0,
      // symbolOffset: [0, 0]
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "inside"
      },
      itemStyle: {
        borderWidth: 2
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(Gc)
);
const L3t = D3t;
function aD(n) {
  return !(isNaN(parseFloat(n.x)) && isNaN(parseFloat(n.y)));
}
function I3t(n) {
  return !isNaN(parseFloat(n.x)) && !isNaN(parseFloat(n.y));
}
function LO(n, e, t, r, i, o) {
  var s = [], a = Fc(
    e,
    r
    /* , otherDataDim */
  ), l = a ? e.getCalculationInfo("stackResultDimension") : r, u = R$(e, l, n), c = e.indicesOfNearest(l, u)[0];
  s[i] = e.get(t, c), s[o] = e.get(l, c);
  var h = e.get(r, c), f = Ha(e.get(r, c));
  return f = Math.min(f, 20), f >= 0 && (s[o] = +s[o].toFixed(f)), [s, h];
}
var aP = {
  min: je(LO, "min"),
  max: je(LO, "max"),
  average: je(LO, "average"),
  median: je(LO, "median")
};
function V0(n, e) {
  if (e) {
    var t = n.getData(), r = n.coordinateSystem, i = r && r.dimensions;
    if (!I3t(e) && !oe(e.coord) && oe(i)) {
      var o = uie(e, t, r, n);
      if (e = Re(e), e.type && aP[e.type] && o.baseAxis && o.valueAxis) {
        var s = ot(i, o.baseAxis.dim), a = ot(i, o.valueAxis.dim), l = aP[e.type](t, o.baseDataDim, o.valueDataDim, s, a);
        e.coord = l[0], e.value = l[1];
      } else
        e.coord = [e.xAxis != null ? e.xAxis : e.radiusAxis, e.yAxis != null ? e.yAxis : e.angleAxis];
    }
    if (e.coord == null || !oe(i))
      e.coord = [];
    else
      for (var u = e.coord, c = 0; c < 2; c++)
        aP[u[c]] && (u[c] = R$(t, t.mapDimension(i[c]), u[c]));
    return e;
  }
}
function uie(n, e, t, r) {
  var i = {};
  return n.valueIndex != null || n.valueDim != null ? (i.valueDataDim = n.valueIndex != null ? e.getDimension(n.valueIndex) : n.valueDim, i.valueAxis = t.getAxis(R3t(r, i.valueDataDim)), i.baseAxis = t.getOtherAxis(i.valueAxis), i.baseDataDim = e.mapDimension(i.baseAxis.dim)) : (i.baseAxis = r.getBaseAxis(), i.valueAxis = t.getOtherAxis(i.baseAxis), i.baseDataDim = e.mapDimension(i.baseAxis.dim), i.valueDataDim = e.mapDimension(i.valueAxis.dim)), i;
}
function R3t(n, e) {
  var t = n.getData().getDimensionInfo(e);
  return t && t.coordDim;
}
function z0(n, e) {
  return n && n.containData && e.coord && !aD(e) ? n.containData(e.coord) : !0;
}
function $3t(n, e, t) {
  return n && n.containZone && e.coord && t.coord && !aD(e) && !aD(t) ? n.containZone(e.coord, t.coord) : !0;
}
function cie(n, e) {
  return n ? function(t, r, i, o) {
    var s = o < 2 ? t.coord && t.coord[o] : t.value;
    return mc(s, e[o]);
  } : function(t, r, i, o) {
    return mc(t.value, e[o]);
  };
}
function R$(n, e, t) {
  if (t === "average") {
    var r = 0, i = 0;
    return n.each(e, function(o, s) {
      isNaN(o) || (r += o, i++);
    }), r / i;
  } else
    return t === "median" ? n.getMedian(e) : n.getDataExtent(e)[t === "max" ? 1 : 0];
}
var lP = Ct(), N3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this.markerGroupMap = _e();
    }, e.prototype.render = function(t, r, i) {
      var o = this, s = this.markerGroupMap;
      s.each(function(a) {
        lP(a).keep = !1;
      }), r.eachSeries(function(a) {
        var l = Gc.getMarkerModelFromSeries(a, o.type);
        l && o.renderSeries(a, l, r, i);
      }), s.each(function(a) {
        !lP(a).keep && o.group.remove(a.group);
      });
    }, e.prototype.markKeep = function(t) {
      lP(t).keep = !0;
    }, e.prototype.toggleBlurSeries = function(t, r) {
      var i = this;
      I(t, function(o) {
        var s = Gc.getMarkerModelFromSeries(o, i.type);
        if (s) {
          var a = s.getData();
          a.eachItemGraphicEl(function(l) {
            l && (r ? WK(l) : XI(l));
          });
        }
      });
    }, e.type = "marker", e;
  }(Nn)
);
const $$ = N3t;
function IZ(n, e, t) {
  var r = e.coordinateSystem;
  n.each(function(i) {
    var o = n.getItemModel(i), s, a = fe(o.get("x"), t.getWidth()), l = fe(o.get("y"), t.getHeight());
    if (!isNaN(a) && !isNaN(l))
      s = [a, l];
    else if (e.getMarkerPosition)
      s = e.getMarkerPosition(n.getValues(n.dimensions, i));
    else if (r) {
      var u = n.get(r.dimensions[0], i), c = n.get(r.dimensions[1], i);
      s = r.dataToPoint([u, c]);
    }
    isNaN(a) || (s[0] = a), isNaN(l) || (s[1] = l), n.setItemLayout(i, s);
  });
}
var B3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, r, i) {
      r.eachSeries(function(o) {
        var s = Gc.getMarkerModelFromSeries(o, "markPoint");
        s && (IZ(s.getData(), o, i), this.markerGroupMap.get(o.id).updateLayout());
      }, this);
    }, e.prototype.renderSeries = function(t, r, i, o) {
      var s = t.coordinateSystem, a = t.id, l = t.getData(), u = this.markerGroupMap, c = u.get(a) || u.set(a, new Db()), h = V3t(s, t, r);
      r.setData(h), IZ(r.getData(), t, o), h.each(function(f) {
        var d = h.getItemModel(f), p = d.getShallow("symbol"), g = d.getShallow("symbolSize"), v = d.getShallow("symbolRotate"), m = d.getShallow("symbolOffset"), y = d.getShallow("symbolKeepAspect");
        if (Pe(p) || Pe(g) || Pe(v) || Pe(m)) {
          var b = r.getRawValue(f), O = r.getDataParams(f);
          Pe(p) && (p = p(b, O)), Pe(g) && (g = g(b, O)), Pe(v) && (v = v(b, O)), Pe(m) && (m = m(b, O));
        }
        var w = d.getModel("itemStyle").getItemStyle(), x = Tb(l, "color");
        w.fill || (w.fill = x), h.setItemVisual(f, {
          symbol: p,
          symbolSize: g,
          symbolRotate: v,
          symbolOffset: m,
          symbolKeepAspect: y,
          style: w
        });
      }), c.updateData(h), this.group.add(c.group), h.eachItemGraphicEl(function(f) {
        f.traverse(function(d) {
          Fe(d).dataModel = r;
        });
      }), this.markKeep(c), c.group.silent = r.get("silent") || t.get("silent");
    }, e.type = "markPoint", e;
  }($$)
);
function V3t(n, e, t) {
  var r;
  n ? r = ae(n && n.dimensions, function(a) {
    var l = e.getData().getDimensionInfo(e.getData().mapDimension(a)) || {};
    return te(te({}, l), {
      name: a,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : r = [{
    name: "value",
    type: "float"
  }];
  var i = new Bi(r, t), o = ae(t.get("data"), je(V0, e));
  n && (o = Gt(o, je(z0, n)));
  var s = cie(!!n, r);
  return i.initData(o, null, s), i;
}
const z3t = B3t;
function F3t(n) {
  n.registerComponentModel(L3t), n.registerComponentView(z3t), n.registerPreprocessor(function(e) {
    I$(e.series, "markPoint") && (e.markPoint = e.markPoint || {});
  });
}
var Q3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, r, i) {
      return new e(t, r, i);
    }, e.type = "markLine", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: ["circle", "arrow"],
      symbolSize: [8, 16],
      // symbolRotate: 0,
      symbolOffset: 0,
      precision: 2,
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "end",
        distance: 5
      },
      lineStyle: {
        type: "dashed"
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          width: 3
        }
      },
      animationEasing: "linear"
    }, e;
  }(Gc)
);
const Z3t = Q3t;
var IO = Ct(), W3t = function(n, e, t, r) {
  var i = n.getData(), o;
  if (oe(r))
    o = r;
  else {
    var s = r.type;
    if (s === "min" || s === "max" || s === "average" || s === "median" || r.xAxis != null || r.yAxis != null) {
      var a = void 0, l = void 0;
      if (r.yAxis != null || r.xAxis != null)
        a = e.getAxis(r.yAxis != null ? "y" : "x"), l = tr(r.yAxis, r.xAxis);
      else {
        var u = uie(r, i, e, n);
        a = u.valueAxis;
        var c = Yee(i, u.valueDataDim);
        l = R$(i, c, s);
      }
      var h = a.dim === "x" ? 0 : 1, f = 1 - h, d = Re(r), p = {
        coord: []
      };
      d.type = null, d.coord = [], d.coord[f] = -1 / 0, p.coord[f] = 1 / 0;
      var g = t.get("precision");
      g >= 0 && Tt(l) && (l = +l.toFixed(Math.min(g, 20))), d.coord[h] = p.coord[h] = l, o = [d, p, {
        type: s,
        valueIndex: r.valueIndex,
        // Force to use the value of calculated value.
        value: l
      }];
    } else
      process.env.NODE_ENV !== "production" && Js("Invalid markLine data."), o = [];
  }
  var v = [V0(n, o[0]), V0(n, o[1]), te({}, o[2])];
  return v[2].type = v[2].type || null, Je(v[2], v[0]), Je(v[2], v[1]), v;
};
function PS(n) {
  return !isNaN(n) && !isFinite(n);
}
function RZ(n, e, t, r) {
  var i = 1 - n, o = r.dimensions[n];
  return PS(e[i]) && PS(t[i]) && e[n] === t[n] && r.getAxis(o).containData(e[n]);
}
function G3t(n, e) {
  if (n.type === "cartesian2d") {
    var t = e[0].coord, r = e[1].coord;
    if (t && r && (RZ(1, t, r, n) || RZ(0, t, r, n)))
      return !0;
  }
  return z0(n, e[0]) && z0(n, e[1]);
}
function uP(n, e, t, r, i) {
  var o = r.coordinateSystem, s = n.getItemModel(e), a, l = fe(s.get("x"), i.getWidth()), u = fe(s.get("y"), i.getHeight());
  if (!isNaN(l) && !isNaN(u))
    a = [l, u];
  else {
    if (r.getMarkerPosition)
      a = r.getMarkerPosition(n.getValues(n.dimensions, e));
    else {
      var c = o.dimensions, h = n.get(c[0], e), f = n.get(c[1], e);
      a = o.dataToPoint([h, f]);
    }
    if (xd(o, "cartesian2d")) {
      var d = o.getAxis("x"), p = o.getAxis("y"), c = o.dimensions;
      PS(n.get(c[0], e)) ? a[0] = d.toGlobalCoord(d.getExtent()[t ? 0 : 1]) : PS(n.get(c[1], e)) && (a[1] = p.toGlobalCoord(p.getExtent()[t ? 0 : 1]));
    }
    isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
  }
  n.setItemLayout(e, a);
}
var j3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, r, i) {
      r.eachSeries(function(o) {
        var s = Gc.getMarkerModelFromSeries(o, "markLine");
        if (s) {
          var a = s.getData(), l = IO(s).from, u = IO(s).to;
          l.each(function(c) {
            uP(l, c, !0, o, i), uP(u, c, !1, o, i);
          }), a.each(function(c) {
            a.setItemLayout(c, [l.getItemLayout(c), u.getItemLayout(c)]);
          }), this.markerGroupMap.get(o.id).updateLayout();
        }
      }, this);
    }, e.prototype.renderSeries = function(t, r, i, o) {
      var s = t.coordinateSystem, a = t.id, l = t.getData(), u = this.markerGroupMap, c = u.get(a) || u.set(a, new o$());
      this.group.add(c.group);
      var h = H3t(s, t, r), f = h.from, d = h.to, p = h.line;
      IO(r).from = f, IO(r).to = d, r.setData(p);
      var g = r.get("symbol"), v = r.get("symbolSize"), m = r.get("symbolRotate"), y = r.get("symbolOffset");
      oe(g) || (g = [g, g]), oe(v) || (v = [v, v]), oe(m) || (m = [m, m]), oe(y) || (y = [y, y]), h.from.each(function(O) {
        b(f, O, !0), b(d, O, !1);
      }), p.each(function(O) {
        var w = p.getItemModel(O).getModel("lineStyle").getLineStyle();
        p.setItemLayout(O, [f.getItemLayout(O), d.getItemLayout(O)]), w.stroke == null && (w.stroke = f.getItemVisual(O, "style").fill), p.setItemVisual(O, {
          fromSymbolKeepAspect: f.getItemVisual(O, "symbolKeepAspect"),
          fromSymbolOffset: f.getItemVisual(O, "symbolOffset"),
          fromSymbolRotate: f.getItemVisual(O, "symbolRotate"),
          fromSymbolSize: f.getItemVisual(O, "symbolSize"),
          fromSymbol: f.getItemVisual(O, "symbol"),
          toSymbolKeepAspect: d.getItemVisual(O, "symbolKeepAspect"),
          toSymbolOffset: d.getItemVisual(O, "symbolOffset"),
          toSymbolRotate: d.getItemVisual(O, "symbolRotate"),
          toSymbolSize: d.getItemVisual(O, "symbolSize"),
          toSymbol: d.getItemVisual(O, "symbol"),
          style: w
        });
      }), c.updateData(p), h.line.eachItemGraphicEl(function(O) {
        Fe(O).dataModel = r, O.traverse(function(w) {
          Fe(w).dataModel = r;
        });
      });
      function b(O, w, x) {
        var S = O.getItemModel(w);
        uP(O, w, x, t, o);
        var _ = S.getModel("itemStyle").getItemStyle();
        _.fill == null && (_.fill = Tb(l, "color")), O.setItemVisual(w, {
          symbolKeepAspect: S.get("symbolKeepAspect"),
          // `0` should be considered as a valid value, so use `retrieve2` instead of `||`
          symbolOffset: Qe(S.get("symbolOffset", !0), y[x ? 0 : 1]),
          symbolRotate: Qe(S.get("symbolRotate", !0), m[x ? 0 : 1]),
          // TODO: when 2d array is supported, it should ignore parent
          symbolSize: Qe(S.get("symbolSize"), v[x ? 0 : 1]),
          symbol: Qe(S.get("symbol", !0), g[x ? 0 : 1]),
          style: _
        });
      }
      this.markKeep(c), c.group.silent = r.get("silent") || t.get("silent");
    }, e.type = "markLine", e;
  }($$)
);
function H3t(n, e, t) {
  var r;
  n ? r = ae(n && n.dimensions, function(u) {
    var c = e.getData().getDimensionInfo(e.getData().mapDimension(u)) || {};
    return te(te({}, c), {
      name: u,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : r = [{
    name: "value",
    type: "float"
  }];
  var i = new Bi(r, t), o = new Bi(r, t), s = new Bi([], t), a = ae(t.get("data"), je(W3t, e, n, t));
  n && (a = Gt(a, je(G3t, n)));
  var l = cie(!!n, r);
  return i.initData(ae(a, function(u) {
    return u[0];
  }), null, l), o.initData(ae(a, function(u) {
    return u[1];
  }), null, l), s.initData(ae(a, function(u) {
    return u[2];
  })), s.hasItemOption = !0, {
    from: i,
    to: o,
    line: s
  };
}
const q3t = j3t;
function Y3t(n) {
  n.registerComponentModel(Z3t), n.registerComponentView(q3t), n.registerPreprocessor(function(e) {
    I$(e.series, "markLine") && (e.markLine = e.markLine || {});
  });
}
var X3t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, r, i) {
      return new e(t, r, i);
    }, e.type = "markArea", e.defaultOption = {
      // zlevel: 0,
      // PENDING
      z: 1,
      tooltip: {
        trigger: "item"
      },
      // markArea should fixed on the coordinate system
      animation: !1,
      label: {
        show: !0,
        position: "top"
      },
      itemStyle: {
        // color and borderColor default to use color from series
        // color: 'auto'
        // borderColor: 'auto'
        borderWidth: 0
      },
      emphasis: {
        label: {
          show: !0,
          position: "top"
        }
      }
    }, e;
  }(Gc)
);
const U3t = X3t;
var RO = Ct(), K3t = function(n, e, t, r) {
  var i = r[0], o = r[1];
  if (!(!i || !o)) {
    var s = V0(n, i), a = V0(n, o), l = s.coord, u = a.coord;
    l[0] = tr(l[0], -1 / 0), l[1] = tr(l[1], -1 / 0), u[0] = tr(u[0], 1 / 0), u[1] = tr(u[1], 1 / 0);
    var c = MI([{}, s, a]);
    return c.coord = [s.coord, a.coord], c.x0 = s.x, c.y0 = s.y, c.x1 = a.x, c.y1 = a.y, c;
  }
};
function ES(n) {
  return !isNaN(n) && !isFinite(n);
}
function $Z(n, e, t, r) {
  var i = 1 - n;
  return ES(e[i]) && ES(t[i]);
}
function J3t(n, e) {
  var t = e.coord[0], r = e.coord[1], i = {
    coord: t,
    x: e.x0,
    y: e.y0
  }, o = {
    coord: r,
    x: e.x1,
    y: e.y1
  };
  return xd(n, "cartesian2d") ? t && r && ($Z(1, t, r) || $Z(0, t, r)) ? !0 : $3t(n, i, o) : z0(n, i) || z0(n, o);
}
function NZ(n, e, t, r, i) {
  var o = r.coordinateSystem, s = n.getItemModel(e), a, l = fe(s.get(t[0]), i.getWidth()), u = fe(s.get(t[1]), i.getHeight());
  if (!isNaN(l) && !isNaN(u))
    a = [l, u];
  else {
    if (r.getMarkerPosition) {
      var c = n.getValues(["x0", "y0"], e), h = n.getValues(["x1", "y1"], e), f = o.clampData(c), d = o.clampData(h), p = [];
      t[0] === "x0" ? p[0] = f[0] > d[0] ? h[0] : c[0] : p[0] = f[0] > d[0] ? c[0] : h[0], t[1] === "y0" ? p[1] = f[1] > d[1] ? h[1] : c[1] : p[1] = f[1] > d[1] ? c[1] : h[1], a = r.getMarkerPosition(p, t, !0);
    } else {
      var g = n.get(t[0], e), v = n.get(t[1], e), m = [g, v];
      o.clampData && o.clampData(m, m), a = o.dataToPoint(m, !0);
    }
    if (xd(o, "cartesian2d")) {
      var y = o.getAxis("x"), b = o.getAxis("y"), g = n.get(t[0], e), v = n.get(t[1], e);
      ES(g) ? a[0] = y.toGlobalCoord(y.getExtent()[t[0] === "x0" ? 0 : 1]) : ES(v) && (a[1] = b.toGlobalCoord(b.getExtent()[t[1] === "y0" ? 0 : 1]));
    }
    isNaN(l) || (a[0] = l), isNaN(u) || (a[1] = u);
  }
  return a;
}
var BZ = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]], e5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, r, i) {
      r.eachSeries(function(o) {
        var s = Gc.getMarkerModelFromSeries(o, "markArea");
        if (s) {
          var a = s.getData();
          a.each(function(l) {
            var u = ae(BZ, function(h) {
              return NZ(a, l, h, o, i);
            });
            a.setItemLayout(l, u);
            var c = a.getItemGraphicEl(l);
            c.setShape("points", u);
          });
        }
      }, this);
    }, e.prototype.renderSeries = function(t, r, i, o) {
      var s = t.coordinateSystem, a = t.id, l = t.getData(), u = this.markerGroupMap, c = u.get(a) || u.set(a, {
        group: new Ve()
      });
      this.group.add(c.group), this.markKeep(c);
      var h = t5t(s, t, r);
      r.setData(h), h.each(function(f) {
        var d = ae(BZ, function(_) {
          return NZ(h, f, _, t, o);
        }), p = s.getAxis("x").scale, g = s.getAxis("y").scale, v = p.getExtent(), m = g.getExtent(), y = [p.parse(h.get("x0", f)), p.parse(h.get("x1", f))], b = [g.parse(h.get("y0", f)), g.parse(h.get("y1", f))];
        ds(y), ds(b);
        var O = !(v[0] > y[1] || v[1] < y[0] || m[0] > b[1] || m[1] < b[0]), w = !O;
        h.setItemLayout(f, {
          points: d,
          allClipped: w
        });
        var x = h.getItemModel(f).getModel("itemStyle").getItemStyle(), S = Tb(l, "color");
        x.fill || (x.fill = S, be(x.fill) && (x.fill = Fx(x.fill, 0.4))), x.stroke || (x.stroke = S), h.setItemVisual(f, "style", x);
      }), h.diff(RO(c).data).add(function(f) {
        var d = h.getItemLayout(f);
        if (!d.allClipped) {
          var p = new Zi({
            shape: {
              points: d.points
            }
          });
          h.setItemGraphicEl(f, p), c.group.add(p);
        }
      }).update(function(f, d) {
        var p = RO(c).data.getItemGraphicEl(d), g = h.getItemLayout(f);
        g.allClipped ? p && c.group.remove(p) : (p ? kt(p, {
          shape: {
            points: g.points
          }
        }, r, f) : p = new Zi({
          shape: {
            points: g.points
          }
        }), h.setItemGraphicEl(f, p), c.group.add(p));
      }).remove(function(f) {
        var d = RO(c).data.getItemGraphicEl(f);
        c.group.remove(d);
      }).execute(), h.eachItemGraphicEl(function(f, d) {
        var p = h.getItemModel(d), g = h.getItemVisual(d, "style");
        f.useStyle(h.getItemVisual(d, "style")), ci(f, kr(p), {
          labelFetcher: r,
          labelDataIndex: d,
          defaultText: h.getName(d) || "",
          inheritColor: be(g.fill) ? Fx(g.fill, 1) : "#000"
        }), ui(f, p), $n(f, null, null, p.get(["emphasis", "disabled"])), Fe(f).dataModel = r;
      }), RO(c).data = h, c.group.silent = r.get("silent") || t.get("silent");
    }, e.type = "markArea", e;
  }($$)
);
function t5t(n, e, t) {
  var r, i, o = ["x0", "y0", "x1", "y1"];
  if (n) {
    var s = ae(n && n.dimensions, function(u) {
      var c = e.getData(), h = c.getDimensionInfo(c.mapDimension(u)) || {};
      return te(te({}, h), {
        name: u,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    });
    i = ae(o, function(u, c) {
      return {
        name: u,
        type: s[c % 2].type
      };
    }), r = new Bi(i, t);
  } else
    i = [{
      name: "value",
      type: "float"
    }], r = new Bi(i, t);
  var a = ae(t.get("data"), je(K3t, e, n, t));
  n && (a = Gt(a, je(J3t, n)));
  var l = n ? function(u, c, h, f) {
    var d = u.coord[Math.floor(f / 2)][f % 2];
    return mc(d, i[f]);
  } : function(u, c, h, f) {
    return mc(u.value, i[f]);
  };
  return r.initData(a, null, l), r.hasItemOption = !0, r;
}
const n5t = e5t;
function r5t(n) {
  n.registerComponentModel(U3t), n.registerComponentView(n5t), n.registerPreprocessor(function(e) {
    I$(e.series, "markArea") && (e.markArea = e.markArea || {});
  });
}
var i5t = function(n, e) {
  if (e === "all")
    return {
      type: "all",
      title: n.getLocaleModel().get(["legend", "selector", "all"])
    };
  if (e === "inverse")
    return {
      type: "inverse",
      title: n.getLocaleModel().get(["legend", "selector", "inverse"])
    };
}, o5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = {
        type: "box",
        // legend.width/height are maxWidth/maxHeight actually,
        // whereas real width/height is calculated by its content.
        // (Setting {left: 10, right: 10} does not make sense).
        // So consider the case:
        // `setOption({legend: {left: 10});`
        // then `setOption({legend: {right: 10});`
        // The previous `left` should be cleared by setting `ignoreSize`.
        ignoreSize: !0
      }, t;
    }
    return e.prototype.init = function(t, r, i) {
      this.mergeDefaultAndTheme(t, i), t.selected = t.selected || {}, this._updateSelector(t);
    }, e.prototype.mergeOption = function(t, r) {
      n.prototype.mergeOption.call(this, t, r), this._updateSelector(t);
    }, e.prototype._updateSelector = function(t) {
      var r = t.selector, i = this.ecModel;
      r === !0 && (r = t.selector = ["all", "inverse"]), oe(r) && I(r, function(o, s) {
        be(o) && (o = {
          type: o
        }), r[s] = Je(o, i5t(i, o.type));
      });
    }, e.prototype.optionUpdated = function() {
      this._updateData(this.ecModel);
      var t = this._data;
      if (t[0] && this.get("selectedMode") === "single") {
        for (var r = !1, i = 0; i < t.length; i++) {
          var o = t[i].get("name");
          if (this.isSelected(o)) {
            this.select(o), r = !0;
            break;
          }
        }
        !r && this.select(t[0].get("name"));
      }
    }, e.prototype._updateData = function(t) {
      var r = [], i = [];
      t.eachRawSeries(function(l) {
        var u = l.name;
        i.push(u);
        var c;
        if (l.legendVisualProvider) {
          var h = l.legendVisualProvider, f = h.getAllNames();
          t.isSeriesFiltered(l) || (i = i.concat(f)), f.length ? r = r.concat(f) : c = !0;
        } else
          c = !0;
        c && QI(l) && r.push(l.name);
      }), this._availableNames = i;
      var o = this.get("data") || r, s = _e(), a = ae(o, function(l) {
        return (be(l) || Tt(l)) && (l = {
          name: l
        }), s.get(l.name) ? null : (s.set(l.name, !0), new fn(l, this, this.ecModel));
      }, this);
      this._data = Gt(a, function(l) {
        return !!l;
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.select = function(t) {
      var r = this.option.selected, i = this.get("selectedMode");
      if (i === "single") {
        var o = this._data;
        I(o, function(s) {
          r[s.get("name")] = !1;
        });
      }
      r[t] = !0;
    }, e.prototype.unSelect = function(t) {
      this.get("selectedMode") !== "single" && (this.option.selected[t] = !1);
    }, e.prototype.toggleSelected = function(t) {
      var r = this.option.selected;
      r.hasOwnProperty(t) || (r[t] = !0), this[r[t] ? "unSelect" : "select"](t);
    }, e.prototype.allSelect = function() {
      var t = this._data, r = this.option.selected;
      I(t, function(i) {
        r[i.get("name", !0)] = !0;
      });
    }, e.prototype.inverseSelect = function() {
      var t = this._data, r = this.option.selected;
      I(t, function(i) {
        var o = i.get("name", !0);
        r.hasOwnProperty(o) || (r[o] = !0), r[o] = !r[o];
      });
    }, e.prototype.isSelected = function(t) {
      var r = this.option.selected;
      return !(r.hasOwnProperty(t) && !r[t]) && ot(this._availableNames, t) >= 0;
    }, e.prototype.getOrient = function() {
      return this.get("orient") === "vertical" ? {
        index: 1,
        name: "vertical"
      } : {
        index: 0,
        name: "horizontal"
      };
    }, e.type = "legend.plain", e.dependencies = ["series"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      show: !0,
      orient: "horizontal",
      left: "center",
      // right: 'center',
      top: 0,
      // bottom: null,
      align: "auto",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      symbolRotate: "inherit",
      symbolKeepAspect: !0,
      inactiveColor: "#ccc",
      inactiveBorderColor: "#ccc",
      inactiveBorderWidth: "auto",
      itemStyle: {
        color: "inherit",
        opacity: "inherit",
        borderColor: "inherit",
        borderWidth: "auto",
        borderCap: "inherit",
        borderJoin: "inherit",
        borderDashOffset: "inherit",
        borderMiterLimit: "inherit"
      },
      lineStyle: {
        width: "auto",
        color: "inherit",
        inactiveColor: "#ccc",
        inactiveWidth: 2,
        opacity: "inherit",
        type: "inherit",
        cap: "inherit",
        join: "inherit",
        dashOffset: "inherit",
        miterLimit: "inherit"
      },
      textStyle: {
        color: "#333"
      },
      selectedMode: !0,
      selector: !1,
      selectorLabel: {
        show: !0,
        borderRadius: 10,
        padding: [3, 5, 3, 5],
        fontSize: 12,
        fontFamily: "sans-serif",
        color: "#666",
        borderWidth: 1,
        borderColor: "#666"
      },
      emphasis: {
        selectorLabel: {
          show: !0,
          color: "#eee",
          backgroundColor: "#666"
        }
      },
      selectorPosition: "auto",
      selectorItemGap: 7,
      selectorButtonGap: 10,
      tooltip: {
        show: !1
      }
    }, e;
  }(Ot)
);
const lD = o5t;
var tp = je, uD = I, $O = Ve, s5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.newlineDisabled = !1, t;
    }
    return e.prototype.init = function() {
      this.group.add(this._contentGroup = new $O()), this.group.add(this._selectorGroup = new $O()), this._isFirstRender = !0;
    }, e.prototype.getContentGroup = function() {
      return this._contentGroup;
    }, e.prototype.getSelectorGroup = function() {
      return this._selectorGroup;
    }, e.prototype.render = function(t, r, i) {
      var o = this._isFirstRender;
      if (this._isFirstRender = !1, this.resetInner(), !!t.get("show", !0)) {
        var s = t.get("align"), a = t.get("orient");
        (!s || s === "auto") && (s = t.get("left") === "right" && a === "vertical" ? "right" : "left");
        var l = t.get("selector", !0), u = t.get("selectorPosition", !0);
        l && (!u || u === "auto") && (u = a === "horizontal" ? "end" : "start"), this.renderInner(s, t, r, i, l, a, u);
        var c = t.getBoxLayoutParams(), h = {
          width: i.getWidth(),
          height: i.getHeight()
        }, f = t.get("padding"), d = mr(c, h, f), p = this.layoutInner(t, s, d, o, l, u), g = mr(Le({
          width: p.width,
          height: p.height
        }, c), h, f);
        this.group.x = g.x - p.x, this.group.y = g.y - p.y, this.group.markRedraw(), this.group.add(this._backgroundEl = Kre(p, t));
      }
    }, e.prototype.resetInner = function() {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, e.prototype.renderInner = function(t, r, i, o, s, a, l) {
      var u = this.getContentGroup(), c = _e(), h = r.get("selectedMode"), f = [];
      i.eachRawSeries(function(d) {
        !d.get("legendHoverLink") && f.push(d.id);
      }), uD(r.getData(), function(d, p) {
        var g = d.get("name");
        if (!this.newlineDisabled && (g === "" || g === `
`)) {
          var v = new $O();
          v.newline = !0, u.add(v);
          return;
        }
        var m = i.getSeriesByName(g)[0];
        if (!c.get(g)) {
          if (m) {
            var y = m.getData(), b = y.getVisual("legendLineStyle") || {}, O = y.getVisual("legendIcon"), w = y.getVisual("style"), x = this._createItem(m, g, p, d, r, t, b, w, O, h, o);
            x.on("click", tp(VZ, g, null, o, f)).on("mouseover", tp(cD, m.name, null, o, f)).on("mouseout", tp(hD, m.name, null, o, f)), i.ssr && x.eachChild(function(S) {
              var _ = Fe(S);
              _.seriesIndex = m.seriesIndex, _.dataIndex = p, _.ssrType = "legend";
            }), c.set(g, !0);
          } else
            i.eachRawSeries(function(S) {
              if (!c.get(g) && S.legendVisualProvider) {
                var _ = S.legendVisualProvider;
                if (!_.containName(g))
                  return;
                var C = _.indexOfName(g), A = _.getItemVisual(C, "style"), T = _.getItemVisual(C, "legendIcon"), k = Vo(A.fill);
                k && k[3] === 0 && (k[3] = 0.2, A = te(te({}, A), {
                  fill: jl(k, "rgba")
                }));
                var L = this._createItem(S, g, p, d, r, t, {}, A, T, h, o);
                L.on("click", tp(VZ, null, g, o, f)).on("mouseover", tp(cD, null, g, o, f)).on("mouseout", tp(hD, null, g, o, f)), i.ssr && L.eachChild(function(D) {
                  var E = Fe(D);
                  E.seriesIndex = S.seriesIndex, E.dataIndex = p, E.ssrType = "legend";
                }), c.set(g, !0);
              }
            }, this);
          process.env.NODE_ENV !== "production" && (c.get(g) || console.warn(g + " series not exists. Legend data should be same with series name or data name."));
        }
      }, this), s && this._createSelector(s, r, o, a, l);
    }, e.prototype._createSelector = function(t, r, i, o, s) {
      var a = this.getSelectorGroup();
      uD(t, function(u) {
        var c = u.type, h = new At({
          style: {
            x: 0,
            y: 0,
            align: "center",
            verticalAlign: "middle"
          },
          onclick: function() {
            i.dispatchAction({
              type: c === "all" ? "legendAllSelect" : "legendInverseSelect"
            });
          }
        });
        a.add(h);
        var f = r.getModel("selectorLabel"), d = r.getModel(["emphasis", "selectorLabel"]);
        ci(h, {
          normal: f,
          emphasis: d
        }, {
          defaultText: u.title
        }), Df(h);
      });
    }, e.prototype._createItem = function(t, r, i, o, s, a, l, u, c, h, f) {
      var d = t.visualDrawType, p = s.get("itemWidth"), g = s.get("itemHeight"), v = s.isSelected(r), m = o.get("symbolRotate"), y = o.get("symbolKeepAspect"), b = o.get("icon");
      c = b || c || "roundRect";
      var O = a5t(c, o, l, u, d, v, f), w = new $O(), x = o.getModel("textStyle");
      if (Pe(t.getLegendIcon) && (!b || b === "inherit"))
        w.add(t.getLegendIcon({
          itemWidth: p,
          itemHeight: g,
          icon: c,
          iconRotate: m,
          itemStyle: O.itemStyle,
          lineStyle: O.lineStyle,
          symbolKeepAspect: y
        }));
      else {
        var S = b === "inherit" && t.getData().getVisual("symbol") ? m === "inherit" ? t.getData().getVisual("symbolRotate") : m : 0;
        w.add(l5t({
          itemWidth: p,
          itemHeight: g,
          icon: c,
          iconRotate: S,
          itemStyle: O.itemStyle,
          lineStyle: O.lineStyle,
          symbolKeepAspect: y
        }));
      }
      var _ = a === "left" ? p + 5 : -5, C = a, A = s.get("formatter"), T = r;
      be(A) && A ? T = A.replace("{name}", r ?? "") : Pe(A) && (T = A(r));
      var k = v ? x.getTextColor() : o.get("inactiveColor");
      w.add(new At({
        style: hn(x, {
          text: T,
          x: _,
          y: g / 2,
          fill: k,
          align: C,
          verticalAlign: "middle"
        }, {
          inheritColor: k
        })
      }));
      var L = new _t({
        shape: w.getBoundingRect(),
        style: {
          // Cannot use 'invisible' because SVG SSR will miss the node
          fill: "transparent"
        }
      }), D = o.getModel("tooltip");
      return D.get("show") && gv({
        el: L,
        componentModel: s,
        itemName: r,
        itemTooltipOption: D.option
      }), w.add(L), w.eachChild(function(E) {
        E.silent = !0;
      }), L.silent = !h, this.getContentGroup().add(w), Df(w), w.__legendDataIndex = i, w;
    }, e.prototype.layoutInner = function(t, r, i, o, s, a) {
      var l = this.getContentGroup(), u = this.getSelectorGroup();
      If(t.get("orient"), l, t.get("itemGap"), i.width, i.height);
      var c = l.getBoundingRect(), h = [-c.x, -c.y];
      if (u.markRedraw(), l.markRedraw(), s) {
        If(
          // Buttons in selectorGroup always layout horizontally
          "horizontal",
          u,
          t.get("selectorItemGap", !0)
        );
        var f = u.getBoundingRect(), d = [-f.x, -f.y], p = t.get("selectorButtonGap", !0), g = t.getOrient().index, v = g === 0 ? "width" : "height", m = g === 0 ? "height" : "width", y = g === 0 ? "y" : "x";
        a === "end" ? d[g] += c[v] + p : h[g] += f[v] + p, d[1 - g] += c[m] / 2 - f[m] / 2, u.x = d[0], u.y = d[1], l.x = h[0], l.y = h[1];
        var b = {
          x: 0,
          y: 0
        };
        return b[v] = c[v] + p + f[v], b[m] = Math.max(c[m], f[m]), b[y] = Math.min(0, f[y] + d[1 - g]), b;
      } else
        return l.x = h[0], l.y = h[1], this.group.getBoundingRect();
    }, e.prototype.remove = function() {
      this.getContentGroup().removeAll(), this._isFirstRender = !0;
    }, e.type = "legend.plain", e;
  }(Nn)
);
function a5t(n, e, t, r, i, o, s) {
  function a(v, m) {
    v.lineWidth === "auto" && (v.lineWidth = m.lineWidth > 0 ? 2 : 0), uD(v, function(y, b) {
      v[b] === "inherit" && (v[b] = m[b]);
    });
  }
  var l = e.getModel("itemStyle"), u = l.getItemStyle(), c = n.lastIndexOf("empty", 0) === 0 ? "fill" : "stroke", h = l.getShallow("decal");
  u.decal = !h || h === "inherit" ? r.decal : Ig(h, s), u.fill === "inherit" && (u.fill = r[i]), u.stroke === "inherit" && (u.stroke = r[c]), u.opacity === "inherit" && (u.opacity = (i === "fill" ? r : t).opacity), a(u, r);
  var f = e.getModel("lineStyle"), d = f.getLineStyle();
  if (a(d, t), u.fill === "auto" && (u.fill = r.fill), u.stroke === "auto" && (u.stroke = r.fill), d.stroke === "auto" && (d.stroke = r.fill), !o) {
    var p = e.get("inactiveBorderWidth"), g = u[c];
    u.lineWidth = p === "auto" ? r.lineWidth > 0 && g ? 2 : 0 : u.lineWidth, u.fill = e.get("inactiveColor"), u.stroke = e.get("inactiveBorderColor"), d.stroke = f.get("inactiveColor"), d.lineWidth = f.get("inactiveWidth");
  }
  return {
    itemStyle: u,
    lineStyle: d
  };
}
function l5t(n) {
  var e = n.icon || "roundRect", t = ar(e, 0, 0, n.itemWidth, n.itemHeight, n.itemStyle.fill, n.symbolKeepAspect);
  return t.setStyle(n.itemStyle), t.rotation = (n.iconRotate || 0) * Math.PI / 180, t.setOrigin([n.itemWidth / 2, n.itemHeight / 2]), e.indexOf("empty") > -1 && (t.style.stroke = t.style.fill, t.style.fill = "#fff", t.style.lineWidth = 2), t;
}
function VZ(n, e, t, r) {
  hD(n, e, t, r), t.dispatchAction({
    type: "legendToggleSelect",
    name: n ?? e
  }), cD(n, e, t, r);
}
function hie(n) {
  for (var e = n.getZr().storage.getDisplayList(), t, r = 0, i = e.length; r < i && !(t = e[r].states.emphasis); )
    r++;
  return t && t.hoverLayer;
}
function cD(n, e, t, r) {
  hie(t) || t.dispatchAction({
    type: "highlight",
    seriesName: n,
    name: e,
    excludeSeriesId: r
  });
}
function hD(n, e, t, r) {
  hie(t) || t.dispatchAction({
    type: "downplay",
    seriesName: n,
    name: e,
    excludeSeriesId: r
  });
}
const fie = s5t;
function u5t(n) {
  var e = n.findComponents({
    mainType: "legend"
  });
  e && e.length && n.filterSeries(function(t) {
    for (var r = 0; r < e.length; r++)
      if (!e[r].isSelected(t.name))
        return !1;
    return !0;
  });
}
function fm(n, e, t) {
  var r = {}, i = n === "toggleSelected", o;
  return t.eachComponent("legend", function(s) {
    i && o != null ? s[o ? "select" : "unSelect"](e.name) : n === "allSelect" || n === "inverseSelect" ? s[n]() : (s[n](e.name), o = s.isSelected(e.name));
    var a = s.getData();
    I(a, function(l) {
      var u = l.get("name");
      if (!(u === `
` || u === "")) {
        var c = s.isSelected(u);
        r.hasOwnProperty(u) ? r[u] = r[u] && c : r[u] = c;
      }
    });
  }), n === "allSelect" || n === "inverseSelect" ? {
    selected: r
  } : {
    name: e.name,
    selected: r
  };
}
function c5t(n) {
  n.registerAction("legendToggleSelect", "legendselectchanged", je(fm, "toggleSelected")), n.registerAction("legendAllSelect", "legendselectall", je(fm, "allSelect")), n.registerAction("legendInverseSelect", "legendinverseselect", je(fm, "inverseSelect")), n.registerAction("legendSelect", "legendselected", je(fm, "select")), n.registerAction("legendUnSelect", "legendunselected", je(fm, "unSelect"));
}
function die(n) {
  n.registerComponentModel(lD), n.registerComponentView(fie), n.registerProcessor(n.PRIORITY.PROCESSOR.SERIES_FILTER, u5t), n.registerSubTypeDefaulter("legend", function() {
    return "plain";
  }), c5t(n);
}
var h5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.setScrollDataIndex = function(t) {
      this.option.scrollDataIndex = t;
    }, e.prototype.init = function(t, r, i) {
      var o = bv(t);
      n.prototype.init.call(this, t, r, i), zZ(this, t, o);
    }, e.prototype.mergeOption = function(t, r) {
      n.prototype.mergeOption.call(this, t, r), zZ(this, this.option, t);
    }, e.type = "legend.scroll", e.defaultOption = oh(lD.defaultOption, {
      scrollDataIndex: 0,
      pageButtonItemGap: 5,
      pageButtonGap: null,
      pageButtonPosition: "end",
      pageFormatter: "{current}/{total}",
      pageIcons: {
        horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
        vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
      },
      pageIconColor: "#2f4554",
      pageIconInactiveColor: "#aaa",
      pageIconSize: 15,
      pageTextStyle: {
        color: "#333"
      },
      animationDurationUpdate: 800
    }), e;
  }(lD)
);
function zZ(n, e, t) {
  var r = n.getOrient(), i = [1, 1];
  i[r.index] = 0, zc(e, t, {
    type: "box",
    ignoreSize: !!i
  });
}
const f5t = h5t;
var FZ = Ve, cP = ["width", "height"], hP = ["x", "y"], d5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.newlineDisabled = !0, t._currentIndex = 0, t;
    }
    return e.prototype.init = function() {
      n.prototype.init.call(this), this.group.add(this._containerGroup = new FZ()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new FZ());
    }, e.prototype.resetInner = function() {
      n.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, e.prototype.renderInner = function(t, r, i, o, s, a, l) {
      var u = this;
      n.prototype.renderInner.call(this, t, r, i, o, s, a, l);
      var c = this._controllerGroup, h = r.get("pageIconSize", !0), f = oe(h) ? h : [h, h];
      p("pagePrev", 0);
      var d = r.getModel("pageTextStyle");
      c.add(new At({
        name: "pageText",
        style: {
          // Placeholder to calculate a proper layout.
          text: "xx/xx",
          fill: d.getTextColor(),
          font: d.getFont(),
          verticalAlign: "middle",
          align: "center"
        },
        silent: !0
      })), p("pageNext", 1);
      function p(g, v) {
        var m = g + "DataIndex", y = Ab(r.get("pageIcons", !0)[r.getOrient().name][v], {
          // Buttons will be created in each render, so we do not need
          // to worry about avoiding using legendModel kept in scope.
          onclick: Oe(u._pageGo, u, m, r, o)
        }, {
          x: -f[0] / 2,
          y: -f[1] / 2,
          width: f[0],
          height: f[1]
        });
        y.name = g, c.add(y);
      }
    }, e.prototype.layoutInner = function(t, r, i, o, s, a) {
      var l = this.getSelectorGroup(), u = t.getOrient().index, c = cP[u], h = hP[u], f = cP[1 - u], d = hP[1 - u];
      s && If(
        // Buttons in selectorGroup always layout horizontally
        "horizontal",
        l,
        t.get("selectorItemGap", !0)
      );
      var p = t.get("selectorButtonGap", !0), g = l.getBoundingRect(), v = [-g.x, -g.y], m = Re(i);
      s && (m[c] = i[c] - g[c] - p);
      var y = this._layoutContentAndController(t, o, m, u, c, f, d, h);
      if (s) {
        if (a === "end")
          v[u] += y[c] + p;
        else {
          var b = g[c] + p;
          v[u] -= b, y[h] -= b;
        }
        y[c] += g[c] + p, v[1 - u] += y[d] + y[f] / 2 - g[f] / 2, y[f] = Math.max(y[f], g[f]), y[d] = Math.min(y[d], g[d] + v[1 - u]), l.x = v[0], l.y = v[1], l.markRedraw();
      }
      return y;
    }, e.prototype._layoutContentAndController = function(t, r, i, o, s, a, l, u) {
      var c = this.getContentGroup(), h = this._containerGroup, f = this._controllerGroup;
      If(t.get("orient"), c, t.get("itemGap"), o ? i.width : null, o ? null : i.height), If(
        // Buttons in controller are layout always horizontally.
        "horizontal",
        f,
        t.get("pageButtonItemGap", !0)
      );
      var d = c.getBoundingRect(), p = f.getBoundingRect(), g = this._showController = d[s] > i[s], v = [-d.x, -d.y];
      r || (v[o] = c[u]);
      var m = [0, 0], y = [-p.x, -p.y], b = Qe(t.get("pageButtonGap", !0), t.get("itemGap", !0));
      if (g) {
        var O = t.get("pageButtonPosition", !0);
        O === "end" ? y[o] += i[s] - p[s] : m[o] += p[s] + b;
      }
      y[1 - o] += d[a] / 2 - p[a] / 2, c.setPosition(v), h.setPosition(m), f.setPosition(y);
      var w = {
        x: 0,
        y: 0
      };
      if (w[s] = g ? i[s] : d[s], w[a] = Math.max(d[a], p[a]), w[l] = Math.min(0, p[l] + y[1 - o]), h.__rectSize = i[s], g) {
        var x = {
          x: 0,
          y: 0
        };
        x[s] = Math.max(i[s] - p[s] - b, 0), x[a] = w[a], h.setClipPath(new _t({
          shape: x
        })), h.__rectSize = x[s];
      } else
        f.eachChild(function(_) {
          _.attr({
            invisible: !0,
            silent: !0
          });
        });
      var S = this._getPageInfo(t);
      return S.pageIndex != null && kt(
        c,
        {
          x: S.contentPosition[0],
          y: S.contentPosition[1]
        },
        // When switch from "show controller" to "not show controller", view should be
        // updated immediately without animation, otherwise causes weird effect.
        g ? t : null
      ), this._updatePageInfoView(t, S), w;
    }, e.prototype._pageGo = function(t, r, i) {
      var o = this._getPageInfo(r)[t];
      o != null && i.dispatchAction({
        type: "legendScroll",
        scrollDataIndex: o,
        legendId: r.id
      });
    }, e.prototype._updatePageInfoView = function(t, r) {
      var i = this._controllerGroup;
      I(["pagePrev", "pageNext"], function(c) {
        var h = c + "DataIndex", f = r[h] != null, d = i.childOfName(c);
        d && (d.setStyle("fill", f ? t.get("pageIconColor", !0) : t.get("pageIconInactiveColor", !0)), d.cursor = f ? "pointer" : "default");
      });
      var o = i.childOfName("pageText"), s = t.get("pageFormatter"), a = r.pageIndex, l = a != null ? a + 1 : 0, u = r.pageCount;
      o && s && o.setStyle("text", be(s) ? s.replace("{current}", l == null ? "" : l + "").replace("{total}", u == null ? "" : u + "") : s({
        current: l,
        total: u
      }));
    }, e.prototype._getPageInfo = function(t) {
      var r = t.get("scrollDataIndex", !0), i = this.getContentGroup(), o = this._containerGroup.__rectSize, s = t.getOrient().index, a = cP[s], l = hP[s], u = this._findTargetItemIndex(r), c = i.children(), h = c[u], f = c.length, d = f ? 1 : 0, p = {
        contentPosition: [i.x, i.y],
        pageCount: d,
        pageIndex: d - 1,
        pagePrevDataIndex: null,
        pageNextDataIndex: null
      };
      if (!h)
        return p;
      var g = O(h);
      p.contentPosition[s] = -g.s;
      for (var v = u + 1, m = g, y = g, b = null; v <= f; ++v)
        b = O(c[v]), // Half of the last item is out of the window.
        (!b && y.e > m.s + o || b && !w(b, m.s)) && (y.i > m.i ? m = y : m = b, m && (p.pageNextDataIndex == null && (p.pageNextDataIndex = m.i), ++p.pageCount)), y = b;
      for (var v = u - 1, m = g, y = g, b = null; v >= -1; --v)
        b = O(c[v]), // If the the end item does not intersect with the window started
        // from the current item, a page can be settled.
        (!b || !w(y, b.s)) && m.i < y.i && (y = m, p.pagePrevDataIndex == null && (p.pagePrevDataIndex = m.i), ++p.pageCount, ++p.pageIndex), m = b;
      return p;
      function O(x) {
        if (x) {
          var S = x.getBoundingRect(), _ = S[l] + x[l];
          return {
            s: _,
            e: _ + S[a],
            i: x.__legendDataIndex
          };
        }
      }
      function w(x, S) {
        return x.e >= S && x.s <= S + o;
      }
    }, e.prototype._findTargetItemIndex = function(t) {
      if (!this._showController)
        return 0;
      var r, i = this.getContentGroup(), o;
      return i.eachChild(function(s, a) {
        var l = s.__legendDataIndex;
        o == null && l != null && (o = a), l === t && (r = a);
      }), r ?? o;
    }, e.type = "legend.scroll", e;
  }(fie)
);
const p5t = d5t;
function g5t(n) {
  n.registerAction("legendScroll", "legendscroll", function(e, t) {
    var r = e.scrollDataIndex;
    r != null && t.eachComponent({
      mainType: "legend",
      subType: "scroll",
      query: e
    }, function(i) {
      i.setScrollDataIndex(r);
    });
  });
}
function v5t(n) {
  at(die), n.registerComponentModel(f5t), n.registerComponentView(p5t), g5t(n);
}
function m5t(n) {
  at(die), at(v5t);
}
var y5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.inside", e.defaultOption = oh(B0.defaultOption, {
      disabled: !1,
      zoomLock: !1,
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !1,
      preventDefaultMouseMove: !0
    }), e;
  }(B0)
);
const b5t = y5t;
var N$ = Ct();
function O5t(n, e, t) {
  N$(n).coordSysRecordMap.each(function(r) {
    var i = r.dataZoomInfoMap.get(e.uid);
    i && (i.getRange = t);
  });
}
function w5t(n, e) {
  for (var t = N$(n).coordSysRecordMap, r = t.keys(), i = 0; i < r.length; i++) {
    var o = r[i], s = t.get(o), a = s.dataZoomInfoMap;
    if (a) {
      var l = e.uid, u = a.get(l);
      u && (a.removeKey(l), a.keys().length || pie(t, s));
    }
  }
}
function pie(n, e) {
  if (e) {
    n.removeKey(e.model.uid);
    var t = e.controller;
    t && t.dispose();
  }
}
function x5t(n, e) {
  var t = {
    model: e,
    containsPoint: je(_5t, e),
    dispatchAction: je(S5t, n),
    dataZoomInfoMap: null,
    controller: null
  }, r = t.controller = new Nb(n.getZr());
  return I(["pan", "zoom", "scrollMove"], function(i) {
    r.on(i, function(o) {
      var s = [];
      t.dataZoomInfoMap.each(function(a) {
        if (o.isAvailableBehavior(a.model.option)) {
          var l = (a.getRange || {})[i], u = l && l(a.dzReferCoordSysInfo, t.model.mainType, t.controller, o);
          !a.model.get("disabled", !0) && u && s.push({
            dataZoomId: a.model.id,
            start: u[0],
            end: u[1]
          });
        }
      }), s.length && t.dispatchAction(s);
    });
  }), t;
}
function S5t(n, e) {
  n.isDisposed() || n.dispatchAction({
    type: "dataZoom",
    animation: {
      easing: "cubicOut",
      duration: 100
    },
    batch: e
  });
}
function _5t(n, e, t, r) {
  return n.coordinateSystem.containPoint([t, r]);
}
function C5t(n) {
  var e, t = "type_", r = {
    type_true: 2,
    type_move: 1,
    type_false: 0,
    type_undefined: -1
  }, i = !0;
  return n.each(function(o) {
    var s = o.model, a = s.get("disabled", !0) ? !1 : s.get("zoomLock", !0) ? "move" : !0;
    r[t + a] > r[t + e] && (e = a), i = i && s.get("preventDefaultMouseMove", !0);
  }), {
    controlType: e,
    opt: {
      // RoamController will enable all of these functionalities,
      // and the final behavior is determined by its event listener
      // provided by each inside zoom.
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !0,
      preventDefaultMouseMove: !!i
    }
  };
}
function A5t(n) {
  n.registerProcessor(n.PRIORITY.PROCESSOR.FILTER, function(e, t) {
    var r = N$(t), i = r.coordSysRecordMap || (r.coordSysRecordMap = _e());
    i.each(function(o) {
      o.dataZoomInfoMap = null;
    }), e.eachComponent({
      mainType: "dataZoom",
      subType: "inside"
    }, function(o) {
      var s = Yre(o);
      I(s.infoList, function(a) {
        var l = a.model.uid, u = i.get(l) || i.set(l, x5t(t, a.model)), c = u.dataZoomInfoMap || (u.dataZoomInfoMap = _e());
        c.set(o.uid, {
          dzReferCoordSysInfo: a,
          model: o,
          getRange: null
        });
      });
    }), i.each(function(o) {
      var s = o.controller, a, l = o.dataZoomInfoMap;
      if (l) {
        var u = l.keys()[0];
        u != null && (a = l.get(u));
      }
      if (!a) {
        pie(i, o);
        return;
      }
      var c = C5t(l);
      s.enable(c.controlType, c.opt), s.setPointerChecker(o.containsPoint), _v(o, "dispatchAction", a.model.get("throttle", !0), "fixRate");
    });
  });
}
var T5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "dataZoom.inside", t;
    }
    return e.prototype.render = function(t, r, i) {
      if (n.prototype.render.apply(this, arguments), t.noTarget()) {
        this._clear();
        return;
      }
      this.range = t.getPercentRange(), O5t(i, t, {
        pan: Oe(fP.pan, this),
        zoom: Oe(fP.zoom, this),
        scrollMove: Oe(fP.scrollMove, this)
      });
    }, e.prototype.dispose = function() {
      this._clear(), n.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      w5t(this.api, this.dataZoomModel), this.range = null;
    }, e.type = "dataZoom.inside", e;
  }(P$)
), fP = {
  zoom: function(n, e, t, r) {
    var i = this.range, o = i.slice(), s = n.axisModels[0];
    if (s) {
      var a = dP[e](null, [r.originX, r.originY], s, t, n), l = (a.signal > 0 ? a.pixelStart + a.pixelLength - a.pixel : a.pixel - a.pixelStart) / a.pixelLength * (o[1] - o[0]) + o[0], u = Math.max(1 / r.scale, 0);
      o[0] = (o[0] - l) * u + l, o[1] = (o[1] - l) * u + l;
      var c = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
      if (_d(0, o, [0, 100], 0, c.minSpan, c.maxSpan), this.range = o, i[0] !== o[0] || i[1] !== o[1])
        return o;
    }
  },
  pan: QZ(function(n, e, t, r, i, o) {
    var s = dP[r]([o.oldX, o.oldY], [o.newX, o.newY], e, i, t);
    return s.signal * (n[1] - n[0]) * s.pixel / s.pixelLength;
  }),
  scrollMove: QZ(function(n, e, t, r, i, o) {
    var s = dP[r]([0, 0], [o.scrollDelta, o.scrollDelta], e, i, t);
    return s.signal * (n[1] - n[0]) * o.scrollDelta;
  })
};
function QZ(n) {
  return function(e, t, r, i) {
    var o = this.range, s = o.slice(), a = e.axisModels[0];
    if (a) {
      var l = n(s, a, e, t, r, i);
      if (_d(l, s, [0, 100], "all"), this.range = s, o[0] !== s[0] || o[1] !== s[1])
        return s;
    }
  };
}
var dP = {
  grid: function(n, e, t, r, i) {
    var o = t.axis, s = {}, a = i.model.coordinateSystem.getRect();
    return n = n || [0, 0], o.dim === "x" ? (s.pixel = e[0] - n[0], s.pixelLength = a.width, s.pixelStart = a.x, s.signal = o.inverse ? 1 : -1) : (s.pixel = e[1] - n[1], s.pixelLength = a.height, s.pixelStart = a.y, s.signal = o.inverse ? -1 : 1), s;
  },
  polar: function(n, e, t, r, i) {
    var o = t.axis, s = {}, a = i.model.coordinateSystem, l = a.getRadiusAxis().getExtent(), u = a.getAngleAxis().getExtent();
    return n = n ? a.pointToCoord(n) : [0, 0], e = a.pointToCoord(e), t.mainType === "radiusAxis" ? (s.pixel = e[0] - n[0], s.pixelLength = l[1] - l[0], s.pixelStart = l[0], s.signal = o.inverse ? 1 : -1) : (s.pixel = e[1] - n[1], s.pixelLength = u[1] - u[0], s.pixelStart = u[0], s.signal = o.inverse ? -1 : 1), s;
  },
  singleAxis: function(n, e, t, r, i) {
    var o = t.axis, s = i.model.coordinateSystem.getRect(), a = {};
    return n = n || [0, 0], o.orient === "horizontal" ? (a.pixel = e[0] - n[0], a.pixelLength = s.width, a.pixelStart = s.x, a.signal = o.inverse ? 1 : -1) : (a.pixel = e[1] - n[1], a.pixelLength = s.height, a.pixelStart = s.y, a.signal = o.inverse ? -1 : 1), a;
  }
};
const P5t = T5t;
function gie(n) {
  E$(n), n.registerComponentModel(b5t), n.registerComponentView(P5t), A5t(n);
}
var E5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.slider", e.layoutMode = "box", e.defaultOption = oh(B0.defaultOption, {
      show: !0,
      // deault value can only be drived in view stage.
      right: "ph",
      top: "ph",
      width: "ph",
      height: "ph",
      left: null,
      bottom: null,
      borderColor: "#d2dbee",
      borderRadius: 3,
      backgroundColor: "rgba(47,69,84,0)",
      // dataBackgroundColor: '#ddd',
      dataBackground: {
        lineStyle: {
          color: "#d2dbee",
          width: 0.5
        },
        areaStyle: {
          color: "#d2dbee",
          opacity: 0.2
        }
      },
      selectedDataBackground: {
        lineStyle: {
          color: "#8fb0f7",
          width: 0.5
        },
        areaStyle: {
          color: "#8fb0f7",
          opacity: 0.2
        }
      },
      // Color of selected window.
      fillerColor: "rgba(135,175,274,0.2)",
      handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z",
      // Percent of the slider height
      handleSize: "100%",
      handleStyle: {
        color: "#fff",
        borderColor: "#ACB8D1"
      },
      moveHandleSize: 7,
      moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z",
      moveHandleStyle: {
        color: "#D2DBEE",
        opacity: 0.7
      },
      showDetail: !0,
      showDataShadow: "auto",
      realtime: !0,
      zoomLock: !1,
      textStyle: {
        color: "#6E7079"
      },
      brushSelect: !0,
      brushStyle: {
        color: "rgba(135,175,274,0.15)"
      },
      emphasis: {
        handleStyle: {
          borderColor: "#8FB0F7"
        },
        moveHandleStyle: {
          color: "#8FB0F7"
        }
      }
    }), e;
  }(B0)
);
const k5t = E5t;
var dm = _t, ZZ = 7, M5t = 1, pP = 30, D5t = 7, pm = "horizontal", WZ = "vertical", L5t = 5, I5t = ["line", "bar", "candlestick", "scatter"], R5t = {
  easing: "cubicOut",
  duration: 100,
  delay: 0
}, $5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._displayables = {}, t;
    }
    return e.prototype.init = function(t, r) {
      this.api = r, this._onBrush = Oe(this._onBrush, this), this._onBrushEnd = Oe(this._onBrushEnd, this);
    }, e.prototype.render = function(t, r, i, o) {
      if (n.prototype.render.apply(this, arguments), _v(this, "_dispatchZoomAction", t.get("throttle"), "fixRate"), this._orient = t.getOrient(), t.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      if (t.noTarget()) {
        this._clear(), this.group.removeAll();
        return;
      }
      (!o || o.type !== "dataZoom" || o.from !== this.uid) && this._buildView(), this._updateView();
    }, e.prototype.dispose = function() {
      this._clear(), n.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      C0(this, "_dispatchZoomAction");
      var t = this.api.getZr();
      t.off("mousemove", this._onBrush), t.off("mouseup", this._onBrushEnd);
    }, e.prototype._buildView = function() {
      var t = this.group;
      t.removeAll(), this._brushing = !1, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
      var r = this._displayables.sliderGroup = new Ve();
      this._renderBackground(), this._renderHandle(), this._renderDataShadow(), t.add(r), this._positionGroup();
    }, e.prototype._resetLocation = function() {
      var t = this.dataZoomModel, r = this.api, i = t.get("brushSelect"), o = i ? D5t : 0, s = this._findCoordRect(), a = {
        width: r.getWidth(),
        height: r.getHeight()
      }, l = this._orient === pm ? {
        // Why using 'right', because right should be used in vertical,
        // and it is better to be consistent for dealing with position param merge.
        right: a.width - s.x - s.width,
        top: a.height - pP - ZZ - o,
        width: s.width,
        height: pP
      } : {
        right: ZZ,
        top: s.y,
        width: pP,
        height: s.height
      }, u = bv(t.option);
      I(["right", "top", "width", "height"], function(h) {
        u[h] === "ph" && (u[h] = l[h]);
      });
      var c = mr(u, a);
      this._location = {
        x: c.x,
        y: c.y
      }, this._size = [c.width, c.height], this._orient === WZ && this._size.reverse();
    }, e.prototype._positionGroup = function() {
      var t = this.group, r = this._location, i = this._orient, o = this.dataZoomModel.getFirstTargetAxisModel(), s = o && o.get("inverse"), a = this._displayables.sliderGroup, l = (this._dataShadowInfo || {}).otherAxisInverse;
      a.attr(i === pm && !s ? {
        scaleY: l ? 1 : -1,
        scaleX: 1
      } : i === pm && s ? {
        scaleY: l ? 1 : -1,
        scaleX: -1
      } : i === WZ && !s ? {
        scaleY: l ? -1 : 1,
        scaleX: 1,
        rotation: Math.PI / 2
      } : {
        scaleY: l ? -1 : 1,
        scaleX: -1,
        rotation: Math.PI / 2
      });
      var u = t.getBoundingRect([a]);
      t.x = r.x - u.x, t.y = r.y - u.y, t.markRedraw();
    }, e.prototype._getViewExtent = function() {
      return [0, this._size[0]];
    }, e.prototype._renderBackground = function() {
      var t = this.dataZoomModel, r = this._size, i = this._displayables.sliderGroup, o = t.get("brushSelect");
      i.add(new dm({
        silent: !0,
        shape: {
          x: 0,
          y: 0,
          width: r[0],
          height: r[1]
        },
        style: {
          fill: t.get("backgroundColor")
        },
        z2: -40
      }));
      var s = new dm({
        shape: {
          x: 0,
          y: 0,
          width: r[0],
          height: r[1]
        },
        style: {
          fill: "transparent"
        },
        z2: 0,
        onclick: Oe(this._onClickPanel, this)
      }), a = this.api.getZr();
      o ? (s.on("mousedown", this._onBrushStart, this), s.cursor = "crosshair", a.on("mousemove", this._onBrush), a.on("mouseup", this._onBrushEnd)) : (a.off("mousemove", this._onBrush), a.off("mouseup", this._onBrushEnd)), i.add(s);
    }, e.prototype._renderDataShadow = function() {
      var t = this._dataShadowInfo = this._prepareDataShadowInfo();
      if (this._displayables.dataShadowSegs = [], !t)
        return;
      var r = this._size, i = this._shadowSize || [], o = t.series, s = o.getRawData(), a = o.getShadowDim && o.getShadowDim(), l = a && s.getDimensionInfo(a) ? o.getShadowDim() : t.otherDim;
      if (l == null)
        return;
      var u = this._shadowPolygonPts, c = this._shadowPolylinePts;
      if (s !== this._shadowData || l !== this._shadowDim || r[0] !== i[0] || r[1] !== i[1]) {
        var h = s.getDataExtent(l), f = (h[1] - h[0]) * 0.3;
        h = [h[0] - f, h[1] + f];
        var d = [0, r[1]], p = [0, r[0]], g = [[r[0], 0], [0, 0]], v = [], m = p[1] / (s.count() - 1), y = 0, b = Math.round(s.count() / r[0]), O;
        s.each([l], function(C, A) {
          if (b > 0 && A % b) {
            y += m;
            return;
          }
          var T = C == null || isNaN(C) || C === "", k = T ? 0 : Ft(C, h, d, !0);
          T && !O && A ? (g.push([g[g.length - 1][0], 0]), v.push([v[v.length - 1][0], 0])) : !T && O && (g.push([y, 0]), v.push([y, 0])), g.push([y, k]), v.push([y, k]), y += m, O = T;
        }), u = this._shadowPolygonPts = g, c = this._shadowPolylinePts = v;
      }
      this._shadowData = s, this._shadowDim = l, this._shadowSize = [r[0], r[1]];
      var w = this.dataZoomModel;
      function x(C) {
        var A = w.getModel(C ? "selectedDataBackground" : "dataBackground"), T = new Ve(), k = new Zi({
          shape: {
            points: u
          },
          segmentIgnoreThreshold: 1,
          style: A.getModel("areaStyle").getAreaStyle(),
          silent: !0,
          z2: -20
        }), L = new Gi({
          shape: {
            points: c
          },
          segmentIgnoreThreshold: 1,
          style: A.getModel("lineStyle").getLineStyle(),
          silent: !0,
          z2: -19
        });
        return T.add(k), T.add(L), T;
      }
      for (var S = 0; S < 3; S++) {
        var _ = x(S === 1);
        this._displayables.sliderGroup.add(_), this._displayables.dataShadowSegs.push(_);
      }
    }, e.prototype._prepareDataShadowInfo = function() {
      var t = this.dataZoomModel, r = t.get("showDataShadow");
      if (r !== !1) {
        var i, o = this.ecModel;
        return t.eachTargetAxis(function(s, a) {
          var l = t.getAxisProxy(s, a).getTargetSeriesModels();
          I(l, function(u) {
            if (!i && !(r !== !0 && ot(I5t, u.get("type")) < 0)) {
              var c = o.getComponent(fc(s), a).axis, h = N5t(s), f, d = u.coordinateSystem;
              h != null && d.getOtherAxis && (f = d.getOtherAxis(c).inverse), h = u.getData().mapDimension(h), i = {
                thisAxis: c,
                series: u,
                thisDim: s,
                otherDim: h,
                otherAxisInverse: f
              };
            }
          }, this);
        }, this), i;
      }
    }, e.prototype._renderHandle = function() {
      var t = this.group, r = this._displayables, i = r.handles = [null, null], o = r.handleLabels = [null, null], s = this._displayables.sliderGroup, a = this._size, l = this.dataZoomModel, u = this.api, c = l.get("borderRadius") || 0, h = l.get("brushSelect"), f = r.filler = new dm({
        silent: h,
        style: {
          fill: l.get("fillerColor")
        },
        textConfig: {
          position: "inside"
        }
      });
      s.add(f), s.add(new dm({
        silent: !0,
        subPixelOptimize: !0,
        shape: {
          x: 0,
          y: 0,
          width: a[0],
          height: a[1],
          r: c
        },
        style: {
          // deprecated option
          stroke: l.get("dataBackgroundColor") || l.get("borderColor"),
          lineWidth: M5t,
          fill: "rgba(0,0,0,0)"
        }
      })), I([0, 1], function(b) {
        var O = l.get("handleIcon");
        !rS[O] && O.indexOf("path://") < 0 && O.indexOf("image://") < 0 && (O = "path://" + O, process.env.NODE_ENV !== "production" && la("handleIcon now needs 'path://' prefix when using a path string"));
        var w = ar(O, -1, 0, 2, 2, null, !0);
        w.attr({
          cursor: GZ(this._orient),
          draggable: !0,
          drift: Oe(this._onDragMove, this, b),
          ondragend: Oe(this._onDragEnd, this),
          onmouseover: Oe(this._showDataInfo, this, !0),
          onmouseout: Oe(this._showDataInfo, this, !1),
          z2: 5
        });
        var x = w.getBoundingRect(), S = l.get("handleSize");
        this._handleHeight = fe(S, this._size[1]), this._handleWidth = x.width / x.height * this._handleHeight, w.setStyle(l.getModel("handleStyle").getItemStyle()), w.style.strokeNoScale = !0, w.rectHover = !0, w.ensureState("emphasis").style = l.getModel(["emphasis", "handleStyle"]).getItemStyle(), Df(w);
        var _ = l.get("handleColor");
        _ != null && (w.style.fill = _), s.add(i[b] = w);
        var C = l.getModel("textStyle");
        t.add(o[b] = new At({
          silent: !0,
          invisible: !0,
          style: hn(C, {
            x: 0,
            y: 0,
            text: "",
            verticalAlign: "middle",
            align: "center",
            fill: C.getTextColor(),
            font: C.getFont()
          }),
          z2: 10
        }));
      }, this);
      var d = f;
      if (h) {
        var p = fe(l.get("moveHandleSize"), a[1]), g = r.moveHandle = new _t({
          style: l.getModel("moveHandleStyle").getItemStyle(),
          silent: !0,
          shape: {
            r: [0, 0, 2, 2],
            y: a[1] - 0.5,
            height: p
          }
        }), v = p * 0.8, m = r.moveHandleIcon = ar(l.get("moveHandleIcon"), -v / 2, -v / 2, v, v, "#fff", !0);
        m.silent = !0, m.y = a[1] + p / 2 - 0.5, g.ensureState("emphasis").style = l.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
        var y = Math.min(a[1] / 2, Math.max(p, 10));
        d = r.moveZone = new _t({
          invisible: !0,
          shape: {
            y: a[1] - y,
            height: p + y
          }
        }), d.on("mouseover", function() {
          u.enterEmphasis(g);
        }).on("mouseout", function() {
          u.leaveEmphasis(g);
        }), s.add(g), s.add(m), s.add(d);
      }
      d.attr({
        draggable: !0,
        cursor: GZ(this._orient),
        drift: Oe(this._onDragMove, this, "all"),
        ondragstart: Oe(this._showDataInfo, this, !0),
        ondragend: Oe(this._onDragEnd, this),
        onmouseover: Oe(this._showDataInfo, this, !0),
        onmouseout: Oe(this._showDataInfo, this, !1)
      });
    }, e.prototype._resetInterval = function() {
      var t = this._range = this.dataZoomModel.getPercentRange(), r = this._getViewExtent();
      this._handleEnds = [Ft(t[0], [0, 100], r, !0), Ft(t[1], [0, 100], r, !0)];
    }, e.prototype._updateInterval = function(t, r) {
      var i = this.dataZoomModel, o = this._handleEnds, s = this._getViewExtent(), a = i.findRepresentativeAxisProxy().getMinMaxSpan(), l = [0, 100];
      _d(r, o, s, i.get("zoomLock") ? "all" : t, a.minSpan != null ? Ft(a.minSpan, l, s, !0) : null, a.maxSpan != null ? Ft(a.maxSpan, l, s, !0) : null);
      var u = this._range, c = this._range = ds([Ft(o[0], s, l, !0), Ft(o[1], s, l, !0)]);
      return !u || u[0] !== c[0] || u[1] !== c[1];
    }, e.prototype._updateView = function(t) {
      var r = this._displayables, i = this._handleEnds, o = ds(i.slice()), s = this._size;
      I([0, 1], function(d) {
        var p = r.handles[d], g = this._handleHeight;
        p.attr({
          scaleX: g / 2,
          scaleY: g / 2,
          // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.
          // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.
          x: i[d] + (d ? -1 : 1),
          y: s[1] / 2 - g / 2
        });
      }, this), r.filler.setShape({
        x: o[0],
        y: 0,
        width: o[1] - o[0],
        height: s[1]
      });
      var a = {
        x: o[0],
        width: o[1] - o[0]
      };
      r.moveHandle && (r.moveHandle.setShape(a), r.moveZone.setShape(a), r.moveZone.getBoundingRect(), r.moveHandleIcon && r.moveHandleIcon.attr("x", a.x + a.width / 2));
      for (var l = r.dataShadowSegs, u = [0, o[0], o[1], s[0]], c = 0; c < l.length; c++) {
        var h = l[c], f = h.getClipPath();
        f || (f = new _t(), h.setClipPath(f)), f.setShape({
          x: u[c],
          y: 0,
          width: u[c + 1] - u[c],
          height: s[1]
        });
      }
      this._updateDataInfo(t);
    }, e.prototype._updateDataInfo = function(t) {
      var r = this.dataZoomModel, i = this._displayables, o = i.handleLabels, s = this._orient, a = ["", ""];
      if (r.get("showDetail")) {
        var l = r.findRepresentativeAxisProxy();
        if (l) {
          var u = l.getAxisModel().axis, c = this._range, h = t ? l.calculateDataWindow({
            start: c[0],
            end: c[1]
          }).valueWindow : l.getDataValueWindow();
          a = [this._formatLabel(h[0], u), this._formatLabel(h[1], u)];
        }
      }
      var f = ds(this._handleEnds.slice());
      d.call(this, 0), d.call(this, 1);
      function d(p) {
        var g = Lf(i.handles[p].parent, this.group), v = sC(p === 0 ? "right" : "left", g), m = this._handleWidth / 2 + L5t, y = ta([f[p] + (p === 0 ? -m : m), this._size[1] / 2], g);
        o[p].setStyle({
          x: y[0],
          y: y[1],
          verticalAlign: s === pm ? "middle" : v,
          align: s === pm ? v : "center",
          text: a[p]
        });
      }
    }, e.prototype._formatLabel = function(t, r) {
      var i = this.dataZoomModel, o = i.get("labelFormatter"), s = i.get("labelPrecision");
      (s == null || s === "auto") && (s = r.getPixelPrecision());
      var a = t == null || isNaN(t) ? "" : r.type === "category" || r.type === "time" ? r.scale.getLabel({
        value: Math.round(t)
      }) : t.toFixed(Math.min(s, 20));
      return Pe(o) ? o(t, a) : be(o) ? o.replace("{value}", a) : a;
    }, e.prototype._showDataInfo = function(t) {
      t = this._dragging || t;
      var r = this._displayables, i = r.handleLabels;
      i[0].attr("invisible", !t), i[1].attr("invisible", !t), r.moveHandle && this.api[t ? "enterEmphasis" : "leaveEmphasis"](r.moveHandle, 1);
    }, e.prototype._onDragMove = function(t, r, i, o) {
      this._dragging = !0, iu(o.event);
      var s = this._displayables.sliderGroup.getLocalTransform(), a = ta([r, i], s, !0), l = this._updateInterval(t, a[0]), u = this.dataZoomModel.get("realtime");
      this._updateView(!u), l && u && this._dispatchZoomAction(!0);
    }, e.prototype._onDragEnd = function() {
      this._dragging = !1, this._showDataInfo(!1);
      var t = this.dataZoomModel.get("realtime");
      !t && this._dispatchZoomAction(!1);
    }, e.prototype._onClickPanel = function(t) {
      var r = this._size, i = this._displayables.sliderGroup.transformCoordToLocal(t.offsetX, t.offsetY);
      if (!(i[0] < 0 || i[0] > r[0] || i[1] < 0 || i[1] > r[1])) {
        var o = this._handleEnds, s = (o[0] + o[1]) / 2, a = this._updateInterval("all", i[0] - s);
        this._updateView(), a && this._dispatchZoomAction(!1);
      }
    }, e.prototype._onBrushStart = function(t) {
      var r = t.offsetX, i = t.offsetY;
      this._brushStart = new Xe(r, i), this._brushing = !0, this._brushStartTime = +/* @__PURE__ */ new Date();
    }, e.prototype._onBrushEnd = function(t) {
      if (this._brushing) {
        var r = this._displayables.brushRect;
        if (this._brushing = !1, !!r) {
          r.attr("ignore", !0);
          var i = r.shape, o = +/* @__PURE__ */ new Date();
          if (!(o - this._brushStartTime < 200 && Math.abs(i.width) < 5)) {
            var s = this._getViewExtent(), a = [0, 100];
            this._range = ds([Ft(i.x, s, a, !0), Ft(i.x + i.width, s, a, !0)]), this._handleEnds = [i.x, i.x + i.width], this._updateView(), this._dispatchZoomAction(!1);
          }
        }
      }
    }, e.prototype._onBrush = function(t) {
      this._brushing && (iu(t.event), this._updateBrushRect(t.offsetX, t.offsetY));
    }, e.prototype._updateBrushRect = function(t, r) {
      var i = this._displayables, o = this.dataZoomModel, s = i.brushRect;
      s || (s = i.brushRect = new dm({
        silent: !0,
        style: o.getModel("brushStyle").getItemStyle()
      }), i.sliderGroup.add(s)), s.attr("ignore", !1);
      var a = this._brushStart, l = this._displayables.sliderGroup, u = l.transformCoordToLocal(t, r), c = l.transformCoordToLocal(a.x, a.y), h = this._size;
      u[0] = Math.max(Math.min(h[0], u[0]), 0), s.setShape({
        x: c[0],
        y: 0,
        width: u[0] - c[0],
        height: h[1]
      });
    }, e.prototype._dispatchZoomAction = function(t) {
      var r = this._range;
      this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        dataZoomId: this.dataZoomModel.id,
        animation: t ? R5t : null,
        start: r[0],
        end: r[1]
      });
    }, e.prototype._findCoordRect = function() {
      var t, r = Yre(this.dataZoomModel).infoList;
      if (!t && r.length) {
        var i = r[0].model.coordinateSystem;
        t = i.getRect && i.getRect();
      }
      if (!t) {
        var o = this.api.getWidth(), s = this.api.getHeight();
        t = {
          x: o * 0.2,
          y: s * 0.2,
          width: o * 0.6,
          height: s * 0.6
        };
      }
      return t;
    }, e.type = "dataZoom.slider", e;
  }(P$)
);
function N5t(n) {
  var e = {
    x: "y",
    y: "x",
    radius: "angle",
    angle: "radius"
  };
  return e[n];
}
function GZ(n) {
  return n === "vertical" ? "ns-resize" : "ew-resize";
}
const B5t = $5t;
function vie(n) {
  n.registerComponentModel(k5t), n.registerComponentView(B5t), E$(n);
}
function V5t(n) {
  at(gie), at(vie);
}
var mie = {
  /**
   * @public
   */
  get: function(n, e, t) {
    var r = Re((z5t[n] || {})[e]);
    return t && oe(r) ? r[r.length - 1] : r;
  }
}, z5t = {
  color: {
    active: ["#006edd", "#e0ffff"],
    inactive: ["rgba(0,0,0,0)"]
  },
  colorHue: {
    active: [0, 360],
    inactive: [0, 0]
  },
  colorSaturation: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  colorLightness: {
    active: [0.9, 0.5],
    inactive: [0, 0]
  },
  colorAlpha: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  opacity: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  symbol: {
    active: ["circle", "roundRect", "diamond"],
    inactive: ["none"]
  },
  symbolSize: {
    active: [10, 50],
    inactive: [0, 0]
  }
}, jZ = ai.mapVisual, F5t = ai.eachVisual, Q5t = oe, HZ = I, Z5t = ds, W5t = Ft, kS = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.stateList = ["inRange", "outOfRange"], t.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], t.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, t.dataBound = [-1 / 0, 1 / 0], t.targetVisuals = {}, t.controllerVisuals = {}, t;
    }
    return e.prototype.init = function(t, r, i) {
      this.mergeDefaultAndTheme(t, i);
    }, e.prototype.optionUpdated = function(t, r) {
      var i = this.option;
      !r && oie(i, t, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
    }, e.prototype.resetVisual = function(t) {
      var r = this.stateList;
      t = Oe(t, this), this.controllerVisuals = oD(this.option.controller, r, t), this.targetVisuals = oD(this.option.target, r, t);
    }, e.prototype.getItemSymbol = function() {
      return null;
    }, e.prototype.getTargetSeriesIndices = function() {
      var t = this.option.seriesIndex, r = [];
      return t == null || t === "all" ? this.ecModel.eachSeries(function(i, o) {
        r.push(o);
      }) : r = Kt(t), r;
    }, e.prototype.eachTargetSeries = function(t, r) {
      I(this.getTargetSeriesIndices(), function(i) {
        var o = this.ecModel.getSeriesByIndex(i);
        o && t.call(r, o);
      }, this);
    }, e.prototype.isTargetSeries = function(t) {
      var r = !1;
      return this.eachTargetSeries(function(i) {
        i === t && (r = !0);
      }), r;
    }, e.prototype.formatValueText = function(t, r, i) {
      var o = this.option, s = o.precision, a = this.dataBound, l = o.formatter, u;
      i = i || ["<", ">"], oe(t) && (t = t.slice(), u = !0);
      var c = r ? t : u ? [h(t[0]), h(t[1])] : h(t);
      if (be(l))
        return l.replace("{value}", u ? c[0] : c).replace("{value2}", u ? c[1] : c);
      if (Pe(l))
        return u ? l(t[0], t[1]) : l(t);
      if (u)
        return t[0] === a[0] ? i[0] + " " + c[1] : t[1] === a[1] ? i[1] + " " + c[0] : c[0] + " - " + c[1];
      return c;
      function h(f) {
        return f === a[0] ? "min" : f === a[1] ? "max" : (+f).toFixed(Math.min(s, 20));
      }
    }, e.prototype.resetExtent = function() {
      var t = this.option, r = Z5t([t.min, t.max]);
      this._dataExtent = r;
    }, e.prototype.getDataDimensionIndex = function(t) {
      var r = this.option.dimension;
      if (r != null)
        return t.getDimensionIndex(r);
      for (var i = t.dimensions, o = i.length - 1; o >= 0; o--) {
        var s = i[o], a = t.getDimensionInfo(s);
        if (!a.isCalculationCoord)
          return a.storeDimIndex;
      }
    }, e.prototype.getExtent = function() {
      return this._dataExtent.slice();
    }, e.prototype.completeVisualOption = function() {
      var t = this.ecModel, r = this.option, i = {
        inRange: r.inRange,
        outOfRange: r.outOfRange
      }, o = r.target || (r.target = {}), s = r.controller || (r.controller = {});
      Je(o, i), Je(s, i);
      var a = this.isCategory();
      l.call(this, o), l.call(this, s), u.call(this, o, "inRange", "outOfRange"), c.call(this, s);
      function l(h) {
        Q5t(r.color) && !h.inRange && (h.inRange = {
          color: r.color.slice().reverse()
        }), h.inRange = h.inRange || {
          color: t.get("gradientColor")
        };
      }
      function u(h, f, d) {
        var p = h[f], g = h[d];
        p && !g && (g = h[d] = {}, HZ(p, function(v, m) {
          if (ai.isValidType(m)) {
            var y = mie.get(m, "inactive", a);
            y != null && (g[m] = y, m === "color" && !g.hasOwnProperty("opacity") && !g.hasOwnProperty("colorAlpha") && (g.opacity = [0, 0]));
          }
        }));
      }
      function c(h) {
        var f = (h.inRange || {}).symbol || (h.outOfRange || {}).symbol, d = (h.inRange || {}).symbolSize || (h.outOfRange || {}).symbolSize, p = this.get("inactiveColor"), g = this.getItemSymbol(), v = g || "roundRect";
        HZ(this.stateList, function(m) {
          var y = this.itemSize, b = h[m];
          b || (b = h[m] = {
            color: a ? p : [p]
          }), b.symbol == null && (b.symbol = f && Re(f) || (a ? v : [v])), b.symbolSize == null && (b.symbolSize = d && Re(d) || (a ? y[0] : [y[0], y[0]])), b.symbol = jZ(b.symbol, function(x) {
            return x === "none" ? v : x;
          });
          var O = b.symbolSize;
          if (O != null) {
            var w = -1 / 0;
            F5t(O, function(x) {
              x > w && (w = x);
            }), b.symbolSize = jZ(O, function(x) {
              return W5t(x, [0, w], [0, y[0]], !0);
            });
          }
        }, this);
      }
    }, e.prototype.resetItemSize = function() {
      this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
    }, e.prototype.isCategory = function() {
      return !!this.option.categories;
    }, e.prototype.setSelected = function(t) {
    }, e.prototype.getSelected = function() {
      return null;
    }, e.prototype.getValueState = function(t) {
      return null;
    }, e.prototype.getVisualMeta = function(t) {
      return null;
    }, e.type = "visualMap", e.dependencies = ["series"], e.defaultOption = {
      show: !0,
      // zlevel: 0,
      z: 4,
      seriesIndex: "all",
      min: 0,
      max: 200,
      left: 0,
      right: null,
      top: null,
      bottom: 0,
      itemWidth: null,
      itemHeight: null,
      inverse: !1,
      orient: "vertical",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      contentColor: "#5793f3",
      inactiveColor: "#aaa",
      borderWidth: 0,
      padding: 5,
      // 接受数组分别设定上右下左边距，同css
      textGap: 10,
      precision: 0,
      textStyle: {
        color: "#333"
        // 值域文字颜色
      }
    }, e;
  }(Ot)
), qZ = [20, 140], G5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function(t, r) {
      n.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(i) {
        i.mappingMethod = "linear", i.dataExtent = this.getExtent();
      }), this._resetRange();
    }, e.prototype.resetItemSize = function() {
      n.prototype.resetItemSize.apply(this, arguments);
      var t = this.itemSize;
      (t[0] == null || isNaN(t[0])) && (t[0] = qZ[0]), (t[1] == null || isNaN(t[1])) && (t[1] = qZ[1]);
    }, e.prototype._resetRange = function() {
      var t = this.getExtent(), r = this.option.range;
      !r || r.auto ? (t.auto = 1, this.option.range = t) : oe(r) && (r[0] > r[1] && r.reverse(), r[0] = Math.max(r[0], t[0]), r[1] = Math.min(r[1], t[1]));
    }, e.prototype.completeVisualOption = function() {
      n.prototype.completeVisualOption.apply(this, arguments), I(this.stateList, function(t) {
        var r = this.option.controller[t].symbolSize;
        r && r[0] !== r[1] && (r[0] = r[1] / 3);
      }, this);
    }, e.prototype.setSelected = function(t) {
      this.option.range = t.slice(), this._resetRange();
    }, e.prototype.getSelected = function() {
      var t = this.getExtent(), r = ds((this.get("range") || []).slice());
      return r[0] > t[1] && (r[0] = t[1]), r[1] > t[1] && (r[1] = t[1]), r[0] < t[0] && (r[0] = t[0]), r[1] < t[0] && (r[1] = t[0]), r;
    }, e.prototype.getValueState = function(t) {
      var r = this.option.range, i = this.getExtent();
      return (r[0] <= i[0] || r[0] <= t) && (r[1] >= i[1] || t <= r[1]) ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(t) {
      var r = [];
      return this.eachTargetSeries(function(i) {
        var o = [], s = i.getData();
        s.each(this.getDataDimensionIndex(s), function(a, l) {
          t[0] <= a && a <= t[1] && o.push(l);
        }, this), r.push({
          seriesId: i.id,
          dataIndex: o
        });
      }, this), r;
    }, e.prototype.getVisualMeta = function(t) {
      var r = YZ(this, "outOfRange", this.getExtent()), i = YZ(this, "inRange", this.option.range.slice()), o = [];
      function s(d, p) {
        o.push({
          value: d,
          color: t(d, p)
        });
      }
      for (var a = 0, l = 0, u = i.length, c = r.length; l < c && (!i.length || r[l] <= i[0]); l++)
        r[l] < i[a] && s(r[l], "outOfRange");
      for (var h = 1; a < u; a++, h = 0)
        h && o.length && s(i[a], "outOfRange"), s(i[a], "inRange");
      for (var h = 1; l < c; l++)
        (!i.length || i[i.length - 1] < r[l]) && (h && (o.length && s(o[o.length - 1].value, "outOfRange"), h = 0), s(r[l], "outOfRange"));
      var f = o.length;
      return {
        stops: o,
        outerColors: [f ? o[0].color : "transparent", f ? o[f - 1].color : "transparent"]
      };
    }, e.type = "visualMap.continuous", e.defaultOption = oh(kS.defaultOption, {
      align: "auto",
      calculable: !1,
      hoverLink: !0,
      realtime: !0,
      handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z",
      handleSize: "120%",
      handleStyle: {
        borderColor: "#fff",
        borderWidth: 1
      },
      indicatorIcon: "circle",
      indicatorSize: "50%",
      indicatorStyle: {
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0,0,0,0.2)"
      }
      // emphasis: {
      //     handleStyle: {
      //         shadowBlur: 3,
      //         shadowOffsetX: 1,
      //         shadowOffsetY: 1,
      //         shadowColor: 'rgba(0,0,0,0.2)'
      //     }
      // }
    }), e;
  }(kS)
);
function YZ(n, e, t) {
  if (t[0] === t[1])
    return t.slice();
  for (var r = 200, i = (t[1] - t[0]) / r, o = t[0], s = [], a = 0; a <= r && o < t[1]; a++)
    s.push(o), o += i;
  return s.push(t[1]), s;
}
const j5t = G5t;
var H5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t.autoPositionValues = {
        left: 1,
        right: 1,
        top: 1,
        bottom: 1
      }, t;
    }
    return e.prototype.init = function(t, r) {
      this.ecModel = t, this.api = r;
    }, e.prototype.render = function(t, r, i, o) {
      if (this.visualMapModel = t, t.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      this.doRender(t, r, i, o);
    }, e.prototype.renderBackground = function(t) {
      var r = this.visualMapModel, i = yv(r.get("padding") || 0), o = t.getBoundingRect();
      t.add(new _t({
        z2: -1,
        silent: !0,
        shape: {
          x: o.x - i[3],
          y: o.y - i[0],
          width: o.width + i[3] + i[1],
          height: o.height + i[0] + i[2]
        },
        style: {
          fill: r.get("backgroundColor"),
          stroke: r.get("borderColor"),
          lineWidth: r.get("borderWidth")
        }
      }));
    }, e.prototype.getControllerVisual = function(t, r, i) {
      i = i || {};
      var o = i.forceState, s = this.visualMapModel, a = {};
      if (r === "color") {
        var l = s.get("contentColor");
        a.color = l;
      }
      function u(d) {
        return a[d];
      }
      function c(d, p) {
        a[d] = p;
      }
      var h = s.controllerVisuals[o || s.getValueState(t)], f = ai.prepareVisualTypes(h);
      return I(f, function(d) {
        var p = h[d];
        i.convertOpacityToAlpha && d === "opacity" && (d = "colorAlpha", p = h.__alphaForOpacity), ai.dependsOn(d, r) && p && p.applyVisual(t, u, c);
      }), a[r];
    }, e.prototype.positionGroup = function(t) {
      var r = this.visualMapModel, i = this.api;
      dC(t, r.getBoxLayoutParams(), {
        width: i.getWidth(),
        height: i.getHeight()
      });
    }, e.prototype.doRender = function(t, r, i, o) {
    }, e.type = "visualMap", e;
  }(Nn)
);
const yie = H5t;
var XZ = [["left", "right", "width"], ["top", "bottom", "height"]];
function bie(n, e, t) {
  var r = n.option, i = r.align;
  if (i != null && i !== "auto")
    return i;
  for (var o = {
    width: e.getWidth(),
    height: e.getHeight()
  }, s = r.orient === "horizontal" ? 1 : 0, a = XZ[s], l = [0, null, 10], u = {}, c = 0; c < 3; c++)
    u[XZ[1 - s][c]] = l[c], u[a[c]] = c === 2 ? t[0] : r[a[c]];
  var h = [["x", "width", 3], ["y", "height", 0]][s], f = mr(u, o, r.padding);
  return a[(f.margin[h[2]] || 0) + f[h[0]] + f[h[1]] * 0.5 < o[h[1]] * 0.5 ? 0 : 1];
}
function Lw(n, e) {
  return I(n || [], function(t) {
    t.dataIndex != null && (t.dataIndexInside = t.dataIndex, t.dataIndex = null), t.highlightKey = "visualMap" + (e ? e.componentIndex : "");
  }), n;
}
var Ma = Ft, q5t = I, UZ = Math.min, gP = Math.max, Y5t = 12, X5t = 6, U5t = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._shapes = {}, t._dataInterval = [], t._handleEnds = [], t._hoverLinkDataIndices = [], t;
    }
    return e.prototype.init = function(t, r) {
      n.prototype.init.call(this, t, r), this._hoverLinkFromSeriesMouseOver = Oe(this._hoverLinkFromSeriesMouseOver, this), this._hideIndicator = Oe(this._hideIndicator, this);
    }, e.prototype.doRender = function(t, r, i, o) {
      (!o || o.type !== "selectDataRange" || o.from !== this.uid) && this._buildView();
    }, e.prototype._buildView = function() {
      this.group.removeAll();
      var t = this.visualMapModel, r = this.group;
      this._orient = t.get("orient"), this._useHandle = t.get("calculable"), this._resetInterval(), this._renderBar(r);
      var i = t.get("text");
      this._renderEndsText(r, i, 0), this._renderEndsText(r, i, 1), this._updateView(!0), this.renderBackground(r), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(r);
    }, e.prototype._renderEndsText = function(t, r, i) {
      if (r) {
        var o = r[1 - i];
        o = o != null ? o + "" : "";
        var s = this.visualMapModel, a = s.get("textGap"), l = s.itemSize, u = this._shapes.mainGroup, c = this._applyTransform([l[0] / 2, i === 0 ? -a : l[1] + a], u), h = this._applyTransform(i === 0 ? "bottom" : "top", u), f = this._orient, d = this.visualMapModel.textStyleModel;
        this.group.add(new At({
          style: hn(d, {
            x: c[0],
            y: c[1],
            verticalAlign: f === "horizontal" ? "middle" : h,
            align: f === "horizontal" ? h : "center",
            text: o
          })
        }));
      }
    }, e.prototype._renderBar = function(t) {
      var r = this.visualMapModel, i = this._shapes, o = r.itemSize, s = this._orient, a = this._useHandle, l = bie(r, this.api, o), u = i.mainGroup = this._createBarGroup(l), c = new Ve();
      u.add(c), c.add(i.outOfRange = KZ()), c.add(i.inRange = KZ(null, a ? eW(this._orient) : null, Oe(this._dragHandle, this, "all", !1), Oe(this._dragHandle, this, "all", !0))), c.setClipPath(new _t({
        shape: {
          x: 0,
          y: 0,
          width: o[0],
          height: o[1],
          r: 3
        }
      }));
      var h = r.textStyleModel.getTextRect("国"), f = gP(h.width, h.height);
      a && (i.handleThumbs = [], i.handleLabels = [], i.handleLabelPoints = [], this._createHandle(r, u, 0, o, f, s), this._createHandle(r, u, 1, o, f, s)), this._createIndicator(r, u, o, f, s), t.add(u);
    }, e.prototype._createHandle = function(t, r, i, o, s, a) {
      var l = Oe(this._dragHandle, this, i, !1), u = Oe(this._dragHandle, this, i, !0), c = aa(t.get("handleSize"), o[0]), h = ar(t.get("handleIcon"), -c / 2, -c / 2, c, c, null, !0), f = eW(this._orient);
      h.attr({
        cursor: f,
        draggable: !0,
        drift: l,
        ondragend: u,
        onmousemove: function(m) {
          iu(m.event);
        }
      }), h.x = o[0] / 2, h.useStyle(t.getModel("handleStyle").getItemStyle()), h.setStyle({
        strokeNoScale: !0,
        strokeFirst: !0
      }), h.style.lineWidth *= 2, h.ensureState("emphasis").style = t.getModel(["emphasis", "handleStyle"]).getItemStyle(), hf(h, !0), r.add(h);
      var d = this.visualMapModel.textStyleModel, p = new At({
        cursor: f,
        draggable: !0,
        drift: l,
        onmousemove: function(m) {
          iu(m.event);
        },
        ondragend: u,
        style: hn(d, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      p.ensureState("blur").style = {
        opacity: 0.1
      }, p.stateTransition = {
        duration: 200
      }, this.group.add(p);
      var g = [c, 0], v = this._shapes;
      v.handleThumbs[i] = h, v.handleLabelPoints[i] = g, v.handleLabels[i] = p;
    }, e.prototype._createIndicator = function(t, r, i, o, s) {
      var a = aa(t.get("indicatorSize"), i[0]), l = ar(t.get("indicatorIcon"), -a / 2, -a / 2, a, a, null, !0);
      l.attr({
        cursor: "move",
        invisible: !0,
        silent: !0,
        x: i[0] / 2
      });
      var u = t.getModel("indicatorStyle").getItemStyle();
      if (l instanceof fi) {
        var c = l.style;
        l.useStyle(te({
          // TODO other properties like x, y ?
          image: c.image,
          x: c.x,
          y: c.y,
          width: c.width,
          height: c.height
        }, u));
      } else
        l.useStyle(u);
      r.add(l);
      var h = this.visualMapModel.textStyleModel, f = new At({
        silent: !0,
        invisible: !0,
        style: hn(h, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      this.group.add(f);
      var d = [(s === "horizontal" ? o / 2 : X5t) + i[0] / 2, 0], p = this._shapes;
      p.indicator = l, p.indicatorLabel = f, p.indicatorLabelPoint = d, this._firstShowIndicator = !0;
    }, e.prototype._dragHandle = function(t, r, i, o) {
      if (this._useHandle) {
        if (this._dragging = !r, !r) {
          var s = this._applyTransform([i, o], this._shapes.mainGroup, !0);
          this._updateInterval(t, s[1]), this._hideIndicator(), this._updateView();
        }
        r === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: this._dataInterval.slice()
        }), r ? !this._hovering && this._clearHoverLinkToSeries() : JZ(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[t], !1);
      }
    }, e.prototype._resetInterval = function() {
      var t = this.visualMapModel, r = this._dataInterval = t.getSelected(), i = t.getExtent(), o = [0, t.itemSize[1]];
      this._handleEnds = [Ma(r[0], i, o, !0), Ma(r[1], i, o, !0)];
    }, e.prototype._updateInterval = function(t, r) {
      r = r || 0;
      var i = this.visualMapModel, o = this._handleEnds, s = [0, i.itemSize[1]];
      _d(
        r,
        o,
        s,
        t,
        // cross is forbidden
        0
      );
      var a = i.getExtent();
      this._dataInterval = [Ma(o[0], s, a, !0), Ma(o[1], s, a, !0)];
    }, e.prototype._updateView = function(t) {
      var r = this.visualMapModel, i = r.getExtent(), o = this._shapes, s = [0, r.itemSize[1]], a = t ? s : this._handleEnds, l = this._createBarVisual(this._dataInterval, i, a, "inRange"), u = this._createBarVisual(i, i, s, "outOfRange");
      o.inRange.setStyle({
        fill: l.barColor
        // opacity: visualInRange.opacity
      }).setShape("points", l.barPoints), o.outOfRange.setStyle({
        fill: u.barColor
        // opacity: visualOutOfRange.opacity
      }).setShape("points", u.barPoints), this._updateHandle(a, l);
    }, e.prototype._createBarVisual = function(t, r, i, o) {
      var s = {
        forceState: o,
        convertOpacityToAlpha: !0
      }, a = this._makeColorGradient(t, s), l = [this.getControllerVisual(t[0], "symbolSize", s), this.getControllerVisual(t[1], "symbolSize", s)], u = this._createBarPoints(i, l);
      return {
        barColor: new _b(0, 0, 0, 1, a),
        barPoints: u,
        handlesColor: [a[0].color, a[a.length - 1].color]
      };
    }, e.prototype._makeColorGradient = function(t, r) {
      var i = 100, o = [], s = (t[1] - t[0]) / i;
      o.push({
        color: this.getControllerVisual(t[0], "color", r),
        offset: 0
      });
      for (var a = 1; a < i; a++) {
        var l = t[0] + s * a;
        if (l > t[1])
          break;
        o.push({
          color: this.getControllerVisual(l, "color", r),
          offset: a / i
        });
      }
      return o.push({
        color: this.getControllerVisual(t[1], "color", r),
        offset: 1
      }), o;
    }, e.prototype._createBarPoints = function(t, r) {
      var i = this.visualMapModel.itemSize;
      return [[i[0] - r[0], t[0]], [i[0], t[0]], [i[0], t[1]], [i[0] - r[1], t[1]]];
    }, e.prototype._createBarGroup = function(t) {
      var r = this._orient, i = this.visualMapModel.get("inverse");
      return new Ve(r === "horizontal" && !i ? {
        scaleX: t === "bottom" ? 1 : -1,
        rotation: Math.PI / 2
      } : r === "horizontal" && i ? {
        scaleX: t === "bottom" ? -1 : 1,
        rotation: -Math.PI / 2
      } : r === "vertical" && !i ? {
        scaleX: t === "left" ? 1 : -1,
        scaleY: -1
      } : {
        scaleX: t === "left" ? 1 : -1
      });
    }, e.prototype._updateHandle = function(t, r) {
      if (this._useHandle) {
        var i = this._shapes, o = this.visualMapModel, s = i.handleThumbs, a = i.handleLabels, l = o.itemSize, u = o.getExtent();
        q5t([0, 1], function(c) {
          var h = s[c];
          h.setStyle("fill", r.handlesColor[c]), h.y = t[c];
          var f = Ma(t[c], [0, l[1]], u, !0), d = this.getControllerVisual(f, "symbolSize");
          h.scaleX = h.scaleY = d / l[0], h.x = l[0] - d / 2;
          var p = ta(i.handleLabelPoints[c], Lf(h, this.group));
          a[c].setStyle({
            x: p[0],
            y: p[1],
            text: o.formatValueText(this._dataInterval[c]),
            verticalAlign: "middle",
            align: this._orient === "vertical" ? this._applyTransform("left", i.mainGroup) : "center"
          });
        }, this);
      }
    }, e.prototype._showIndicator = function(t, r, i, o) {
      var s = this.visualMapModel, a = s.getExtent(), l = s.itemSize, u = [0, l[1]], c = this._shapes, h = c.indicator;
      if (h) {
        h.attr("invisible", !1);
        var f = {
          convertOpacityToAlpha: !0
        }, d = this.getControllerVisual(t, "color", f), p = this.getControllerVisual(t, "symbolSize"), g = Ma(t, a, u, !0), v = l[0] - p / 2, m = {
          x: h.x,
          y: h.y
        };
        h.y = g, h.x = v;
        var y = ta(c.indicatorLabelPoint, Lf(h, this.group)), b = c.indicatorLabel;
        b.attr("invisible", !1);
        var O = this._applyTransform("left", c.mainGroup), w = this._orient, x = w === "horizontal";
        b.setStyle({
          text: (i || "") + s.formatValueText(r),
          verticalAlign: x ? O : "middle",
          align: x ? "center" : O
        });
        var S = {
          x: v,
          y: g,
          style: {
            fill: d
          }
        }, _ = {
          style: {
            x: y[0],
            y: y[1]
          }
        };
        if (s.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
          var C = {
            duration: 100,
            easing: "cubicInOut",
            additive: !0
          };
          h.x = m.x, h.y = m.y, h.animateTo(S, C), b.animateTo(_, C);
        } else
          h.attr(S), b.attr(_);
        this._firstShowIndicator = !1;
        var A = this._shapes.handleLabels;
        if (A)
          for (var T = 0; T < A.length; T++)
            this.api.enterBlur(A[T]);
      }
    }, e.prototype._enableHoverLinkToSeries = function() {
      var t = this;
      this._shapes.mainGroup.on("mousemove", function(r) {
        if (t._hovering = !0, !t._dragging) {
          var i = t.visualMapModel.itemSize, o = t._applyTransform([r.offsetX, r.offsetY], t._shapes.mainGroup, !0, !0);
          o[1] = UZ(gP(0, o[1]), i[1]), t._doHoverLinkToSeries(o[1], 0 <= o[0] && o[0] <= i[0]);
        }
      }).on("mouseout", function() {
        t._hovering = !1, !t._dragging && t._clearHoverLinkToSeries();
      });
    }, e.prototype._enableHoverLinkFromSeries = function() {
      var t = this.api.getZr();
      this.visualMapModel.option.hoverLink ? (t.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), t.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
    }, e.prototype._doHoverLinkToSeries = function(t, r) {
      var i = this.visualMapModel, o = i.itemSize;
      if (i.option.hoverLink) {
        var s = [0, o[1]], a = i.getExtent();
        t = UZ(gP(s[0], t), s[1]);
        var l = K5t(i, a, s), u = [t - l, t + l], c = Ma(t, s, a, !0), h = [Ma(u[0], s, a, !0), Ma(u[1], s, a, !0)];
        u[0] < s[0] && (h[0] = -1 / 0), u[1] > s[1] && (h[1] = 1 / 0), r && (h[0] === -1 / 0 ? this._showIndicator(c, h[1], "< ", l) : h[1] === 1 / 0 ? this._showIndicator(c, h[0], "> ", l) : this._showIndicator(c, c, "≈ ", l));
        var f = this._hoverLinkDataIndices, d = [];
        (r || JZ(i)) && (d = this._hoverLinkDataIndices = i.findTargetDataIndices(h));
        var p = m1t(f, d);
        this._dispatchHighDown("downplay", Lw(p[0], i)), this._dispatchHighDown("highlight", Lw(p[1], i));
      }
    }, e.prototype._hoverLinkFromSeriesMouseOver = function(t) {
      var r;
      if (df(t.target, function(l) {
        var u = Fe(l);
        if (u.dataIndex != null)
          return r = u, !0;
      }, !0), !!r) {
        var i = this.ecModel.getSeriesByIndex(r.seriesIndex), o = this.visualMapModel;
        if (o.isTargetSeries(i)) {
          var s = i.getData(r.dataType), a = s.getStore().get(o.getDataDimensionIndex(s), r.dataIndex);
          isNaN(a) || this._showIndicator(a, a);
        }
      }
    }, e.prototype._hideIndicator = function() {
      var t = this._shapes;
      t.indicator && t.indicator.attr("invisible", !0), t.indicatorLabel && t.indicatorLabel.attr("invisible", !0);
      var r = this._shapes.handleLabels;
      if (r)
        for (var i = 0; i < r.length; i++)
          this.api.leaveBlur(r[i]);
    }, e.prototype._clearHoverLinkToSeries = function() {
      this._hideIndicator();
      var t = this._hoverLinkDataIndices;
      this._dispatchHighDown("downplay", Lw(t, this.visualMapModel)), t.length = 0;
    }, e.prototype._clearHoverLinkFromSeries = function() {
      this._hideIndicator();
      var t = this.api.getZr();
      t.off("mouseover", this._hoverLinkFromSeriesMouseOver), t.off("mouseout", this._hideIndicator);
    }, e.prototype._applyTransform = function(t, r, i, o) {
      var s = Lf(r, o ? null : this.group);
      return oe(t) ? ta(t, s, i) : sC(t, s, i);
    }, e.prototype._dispatchHighDown = function(t, r) {
      r && r.length && this.api.dispatchAction({
        type: t,
        batch: r
      });
    }, e.prototype.dispose = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, e.type = "visualMap.continuous", e;
  }(yie)
);
function KZ(n, e, t, r) {
  return new Zi({
    shape: {
      points: n
    },
    draggable: !!t,
    cursor: e,
    drift: t,
    onmousemove: function(i) {
      iu(i.event);
    },
    ondragend: r
  });
}
function K5t(n, e, t) {
  var r = Y5t / 2, i = n.get("hoverLinkDataSize");
  return i && (r = Ma(i, e, t, !0) / 2), r;
}
function JZ(n) {
  var e = n.get("hoverLinkOnHandle");
  return !!(e ?? n.get("realtime"));
}
function eW(n) {
  return n === "vertical" ? "ns-resize" : "ew-resize";
}
const J5t = U5t;
var eBt = {
  type: "selectDataRange",
  event: "dataRangeSelected",
  // FIXME use updateView appears wrong
  update: "update"
}, tBt = function(n, e) {
  e.eachComponent({
    mainType: "visualMap",
    query: n
  }, function(t) {
    t.setSelected(n.selected);
  });
}, nBt = [
  {
    createOnAllSeries: !0,
    reset: function(n, e) {
      var t = [];
      return e.eachComponent("visualMap", function(r) {
        var i = n.pipelineContext;
        !r.isTargetSeries(n) || i && i.large || t.push(JNt(r.stateList, r.targetVisuals, Oe(r.getValueState, r), r.getDataDimensionIndex(n.getData())));
      }), t;
    }
  },
  // Only support color.
  {
    createOnAllSeries: !0,
    reset: function(n, e) {
      var t = n.getData(), r = [];
      e.eachComponent("visualMap", function(i) {
        if (i.isTargetSeries(n)) {
          var o = i.getVisualMeta(Oe(rBt, null, n, i)) || {
            stops: [],
            outerColors: []
          }, s = i.getDataDimensionIndex(t);
          s >= 0 && (o.dimension = s, r.push(o));
        }
      }), n.getData().setVisual("visualMeta", r);
    }
  }
];
function rBt(n, e, t, r) {
  for (var i = e.targetVisuals[r], o = ai.prepareVisualTypes(i), s = {
    color: Tb(n.getData(), "color")
    // default color.
  }, a = 0, l = o.length; a < l; a++) {
    var u = o[a], c = i[u === "opacity" ? "__alphaForOpacity" : u];
    c && c.applyVisual(t, h, f);
  }
  return s.color;
  function h(d) {
    return s[d];
  }
  function f(d, p) {
    s[d] = p;
  }
}
var tW = I;
function iBt(n) {
  var e = n && n.visualMap;
  oe(e) || (e = e ? [e] : []), tW(e, function(t) {
    if (t) {
      np(t, "splitList") && !np(t, "pieces") && (t.pieces = t.splitList, delete t.splitList);
      var r = t.pieces;
      r && oe(r) && tW(r, function(i) {
        Me(i) && (np(i, "start") && !np(i, "min") && (i.min = i.start), np(i, "end") && !np(i, "max") && (i.max = i.end));
      });
    }
  });
}
function np(n, e) {
  return n && n.hasOwnProperty && n.hasOwnProperty(e);
}
var nW = !1;
function Oie(n) {
  nW || (nW = !0, n.registerSubTypeDefaulter("visualMap", function(e) {
    return !e.categories && (!(e.pieces ? e.pieces.length > 0 : e.splitNumber > 0) || e.calculable) ? "continuous" : "piecewise";
  }), n.registerAction(eBt, tBt), I(nBt, function(e) {
    n.registerVisual(n.PRIORITY.VISUAL.COMPONENT, e);
  }), n.registerPreprocessor(iBt));
}
function wie(n) {
  n.registerComponentModel(j5t), n.registerComponentView(J5t), Oie(n);
}
var oBt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t._pieceList = [], t;
    }
    return e.prototype.optionUpdated = function(t, r) {
      n.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
      var i = this._mode = this._determineMode();
      this._pieceList = [], sBt[this._mode].call(this, this._pieceList), this._resetSelected(t, r);
      var o = this.option.categories;
      this.resetVisual(function(s, a) {
        i === "categories" ? (s.mappingMethod = "category", s.categories = Re(o)) : (s.dataExtent = this.getExtent(), s.mappingMethod = "piecewise", s.pieceList = ae(this._pieceList, function(l) {
          return l = Re(l), a !== "inRange" && (l.visual = null), l;
        }));
      });
    }, e.prototype.completeVisualOption = function() {
      var t = this.option, r = {}, i = ai.listVisualTypes(), o = this.isCategory();
      I(t.pieces, function(a) {
        I(i, function(l) {
          a.hasOwnProperty(l) && (r[l] = 1);
        });
      }), I(r, function(a, l) {
        var u = !1;
        I(this.stateList, function(c) {
          u = u || s(t, c, l) || s(t.target, c, l);
        }, this), !u && I(this.stateList, function(c) {
          (t[c] || (t[c] = {}))[l] = mie.get(l, c === "inRange" ? "active" : "inactive", o);
        });
      }, this);
      function s(a, l, u) {
        return a && a[l] && a[l].hasOwnProperty(u);
      }
      n.prototype.completeVisualOption.apply(this, arguments);
    }, e.prototype._resetSelected = function(t, r) {
      var i = this.option, o = this._pieceList, s = (r ? i : t).selected || {};
      if (i.selected = s, I(o, function(l, u) {
        var c = this.getSelectedMapKey(l);
        s.hasOwnProperty(c) || (s[c] = !0);
      }, this), i.selectedMode === "single") {
        var a = !1;
        I(o, function(l, u) {
          var c = this.getSelectedMapKey(l);
          s[c] && (a ? s[c] = !1 : a = !0);
        }, this);
      }
    }, e.prototype.getItemSymbol = function() {
      return this.get("itemSymbol");
    }, e.prototype.getSelectedMapKey = function(t) {
      return this._mode === "categories" ? t.value + "" : t.index + "";
    }, e.prototype.getPieceList = function() {
      return this._pieceList;
    }, e.prototype._determineMode = function() {
      var t = this.option;
      return t.pieces && t.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
    }, e.prototype.setSelected = function(t) {
      this.option.selected = Re(t);
    }, e.prototype.getValueState = function(t) {
      var r = ai.findPieceIndex(t, this._pieceList);
      return r != null && this.option.selected[this.getSelectedMapKey(this._pieceList[r])] ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(t) {
      var r = [], i = this._pieceList;
      return this.eachTargetSeries(function(o) {
        var s = [], a = o.getData();
        a.each(this.getDataDimensionIndex(a), function(l, u) {
          var c = ai.findPieceIndex(l, i);
          c === t && s.push(u);
        }, this), r.push({
          seriesId: o.id,
          dataIndex: s
        });
      }, this), r;
    }, e.prototype.getRepresentValue = function(t) {
      var r;
      if (this.isCategory())
        r = t.value;
      else if (t.value != null)
        r = t.value;
      else {
        var i = t.interval || [];
        r = i[0] === -1 / 0 && i[1] === 1 / 0 ? 0 : (i[0] + i[1]) / 2;
      }
      return r;
    }, e.prototype.getVisualMeta = function(t) {
      if (this.isCategory())
        return;
      var r = [], i = ["", ""], o = this;
      function s(c, h) {
        var f = o.getRepresentValue({
          interval: c
        });
        h || (h = o.getValueState(f));
        var d = t(f, h);
        c[0] === -1 / 0 ? i[0] = d : c[1] === 1 / 0 ? i[1] = d : r.push({
          value: c[0],
          color: d
        }, {
          value: c[1],
          color: d
        });
      }
      var a = this._pieceList.slice();
      if (!a.length)
        a.push({
          interval: [-1 / 0, 1 / 0]
        });
      else {
        var l = a[0].interval[0];
        l !== -1 / 0 && a.unshift({
          interval: [-1 / 0, l]
        }), l = a[a.length - 1].interval[1], l !== 1 / 0 && a.push({
          interval: [l, 1 / 0]
        });
      }
      var u = -1 / 0;
      return I(a, function(c) {
        var h = c.interval;
        h && (h[0] > u && s([u, h[0]], "outOfRange"), s(h.slice()), u = h[1]);
      }, this), {
        stops: r,
        outerColors: i
      };
    }, e.type = "visualMap.piecewise", e.defaultOption = oh(kS.defaultOption, {
      selected: null,
      minOpen: !1,
      maxOpen: !1,
      align: "auto",
      itemWidth: 20,
      itemHeight: 14,
      itemSymbol: "roundRect",
      pieces: null,
      categories: null,
      splitNumber: 5,
      selectedMode: "multiple",
      itemGap: 10,
      hoverLink: !0
      // Enable hover highlight.
    }), e;
  }(kS)
), sBt = {
  splitNumber: function(n) {
    var e = this.option, t = Math.min(e.precision, 20), r = this.getExtent(), i = e.splitNumber;
    i = Math.max(parseInt(i, 10), 1), e.splitNumber = i;
    for (var o = (r[1] - r[0]) / i; +o.toFixed(t) !== o && t < 5; )
      t++;
    e.precision = t, o = +o.toFixed(t), e.minOpen && n.push({
      interval: [-1 / 0, r[0]],
      close: [0, 0]
    });
    for (var s = 0, a = r[0]; s < i; a += o, s++) {
      var l = s === i - 1 ? r[1] : a + o;
      n.push({
        interval: [a, l],
        close: [1, 1]
      });
    }
    e.maxOpen && n.push({
      interval: [r[1], 1 / 0],
      close: [0, 0]
    }), Z4(n), I(n, function(u, c) {
      u.index = c, u.text = this.formatValueText(u.interval);
    }, this);
  },
  categories: function(n) {
    var e = this.option;
    I(e.categories, function(t) {
      n.push({
        text: this.formatValueText(t, !0),
        value: t
      });
    }, this), rW(e, n);
  },
  pieces: function(n) {
    var e = this.option;
    I(e.pieces, function(t, r) {
      Me(t) || (t = {
        value: t
      });
      var i = {
        text: "",
        index: r
      };
      if (t.label != null && (i.text = t.label), t.hasOwnProperty("value")) {
        var o = i.value = t.value;
        i.interval = [o, o], i.close = [1, 1];
      } else {
        for (var s = i.interval = [], a = i.close = [0, 0], l = [1, 0, 1], u = [-1 / 0, 1 / 0], c = [], h = 0; h < 2; h++) {
          for (var f = [["gte", "gt", "min"], ["lte", "lt", "max"]][h], d = 0; d < 3 && s[h] == null; d++)
            s[h] = t[f[d]], a[h] = l[d], c[h] = d === 2;
          s[h] == null && (s[h] = u[h]);
        }
        c[0] && s[1] === 1 / 0 && (a[0] = 0), c[1] && s[0] === -1 / 0 && (a[1] = 0), process.env.NODE_ENV !== "production" && s[0] > s[1] && console.warn("Piece " + r + "is illegal: " + s + " lower bound should not greater then uppper bound."), s[0] === s[1] && a[0] && a[1] && (i.value = s[0]);
      }
      i.visual = ai.retrieveVisuals(t), n.push(i);
    }, this), rW(e, n), Z4(n), I(n, function(t) {
      var r = t.close, i = [["<", "≤"][r[1]], [">", "≥"][r[0]]];
      t.text = t.text || this.formatValueText(t.value != null ? t.value : t.interval, !1, i);
    }, this);
  }
};
function rW(n, e) {
  var t = n.inverse;
  (n.orient === "vertical" ? !t : t) && e.reverse();
}
const aBt = oBt;
var lBt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.doRender = function() {
      var t = this.group;
      t.removeAll();
      var r = this.visualMapModel, i = r.get("textGap"), o = r.textStyleModel, s = o.getFont(), a = o.getTextColor(), l = this._getItemAlign(), u = r.itemSize, c = this._getViewData(), h = c.endsText, f = tr(r.get("showLabel", !0), !h);
      h && this._renderEndsText(t, h[0], u, f, l), I(c.viewPieceList, function(d) {
        var p = d.piece, g = new Ve();
        g.onclick = Oe(this._onItemClick, this, p), this._enableHoverLink(g, d.indexInModelPieceList);
        var v = r.getRepresentValue(p);
        if (this._createItemSymbol(g, v, [0, 0, u[0], u[1]]), f) {
          var m = this.visualMapModel.getValueState(v);
          g.add(new At({
            style: {
              x: l === "right" ? -i : u[0] + i,
              y: u[1] / 2,
              text: p.text,
              verticalAlign: "middle",
              align: l,
              font: s,
              fill: a,
              opacity: m === "outOfRange" ? 0.5 : 1
            }
          }));
        }
        t.add(g);
      }, this), h && this._renderEndsText(t, h[1], u, f, l), If(r.get("orient"), t, r.get("itemGap")), this.renderBackground(t), this.positionGroup(t);
    }, e.prototype._enableHoverLink = function(t, r) {
      var i = this;
      t.on("mouseover", function() {
        return o("highlight");
      }).on("mouseout", function() {
        return o("downplay");
      });
      var o = function(s) {
        var a = i.visualMapModel;
        a.option.hoverLink && i.api.dispatchAction({
          type: s,
          batch: Lw(a.findTargetDataIndices(r), a)
        });
      };
    }, e.prototype._getItemAlign = function() {
      var t = this.visualMapModel, r = t.option;
      if (r.orient === "vertical")
        return bie(t, this.api, t.itemSize);
      var i = r.align;
      return (!i || i === "auto") && (i = "left"), i;
    }, e.prototype._renderEndsText = function(t, r, i, o, s) {
      if (r) {
        var a = new Ve(), l = this.visualMapModel.textStyleModel;
        a.add(new At({
          style: hn(l, {
            x: o ? s === "right" ? i[0] : 0 : i[0] / 2,
            y: i[1] / 2,
            verticalAlign: "middle",
            align: o ? s : "center",
            text: r
          })
        })), t.add(a);
      }
    }, e.prototype._getViewData = function() {
      var t = this.visualMapModel, r = ae(t.getPieceList(), function(a, l) {
        return {
          piece: a,
          indexInModelPieceList: l
        };
      }), i = t.get("text"), o = t.get("orient"), s = t.get("inverse");
      return (o === "horizontal" ? s : !s) ? r.reverse() : i && (i = i.slice().reverse()), {
        viewPieceList: r,
        endsText: i
      };
    }, e.prototype._createItemSymbol = function(t, r, i) {
      t.add(ar(
        // symbol will be string
        this.getControllerVisual(r, "symbol"),
        i[0],
        i[1],
        i[2],
        i[3],
        // color will be string
        this.getControllerVisual(r, "color")
      ));
    }, e.prototype._onItemClick = function(t) {
      var r = this.visualMapModel, i = r.option, o = i.selectedMode;
      if (o) {
        var s = Re(i.selected), a = r.getSelectedMapKey(t);
        o === "single" || o === !0 ? (s[a] = !0, I(s, function(l, u) {
          s[u] = u === a;
        })) : s[a] = !s[a], this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: s
        });
      }
    }, e.type = "visualMap.piecewise", e;
  }(yie)
);
const uBt = lBt;
function xie(n) {
  n.registerComponentModel(aBt), n.registerComponentView(uBt), Oie(n);
}
function cBt(n) {
  at(wie), at(xie);
}
var hBt = {
  label: {
    enabled: !0
  },
  decal: {
    show: !1
  }
}, iW = Ct(), fBt = {};
function dBt(n, e) {
  var t = n.getModel("aria");
  if (!t.get("enabled"))
    return;
  var r = Re(hBt);
  Je(r.label, n.getLocaleModel().get("aria"), !1), Je(t.option, r, !1), i(), o();
  function i() {
    var u = t.getModel("decal"), c = u.get("show");
    if (c) {
      var h = _e();
      n.eachSeries(function(f) {
        if (!f.isColorBySeries()) {
          var d = h.get(f.type);
          d || (d = {}, h.set(f.type, d)), iW(f).scope = d;
        }
      }), n.eachRawSeries(function(f) {
        if (n.isSeriesFiltered(f))
          return;
        if (Pe(f.enableAriaDecal)) {
          f.enableAriaDecal();
          return;
        }
        var d = f.getData();
        if (f.isColorBySeries()) {
          var y = pM(f.ecModel, f.name, fBt, n.getSeriesCount()), b = d.getVisual("decal");
          d.setVisual("decal", O(b, y));
        } else {
          var p = f.getRawData(), g = {}, v = iW(f).scope;
          d.each(function(w) {
            var x = d.getRawIndex(w);
            g[x] = w;
          });
          var m = p.count();
          p.each(function(w) {
            var x = g[w], S = p.getName(w) || w + "", _ = pM(f.ecModel, S, v, m), C = d.getItemVisual(x, "decal");
            d.setItemVisual(x, "decal", O(C, _));
          });
        }
        function O(w, x) {
          var S = w ? te(te({}, x), w) : x;
          return S.dirty = !0, S;
        }
      });
    }
  }
  function o() {
    var u = n.getLocaleModel().get("aria"), c = t.getModel("label");
    if (c.option = Le(c.option, u), !!c.get("enabled")) {
      var h = e.getZr().dom;
      if (c.get("description")) {
        h.setAttribute("aria-label", c.get("description"));
        return;
      }
      var f = n.getSeriesCount(), d = c.get(["data", "maxCount"]) || 10, p = c.get(["series", "maxCount"]) || 10, g = Math.min(f, p), v;
      if (!(f < 1)) {
        var m = a();
        if (m) {
          var y = c.get(["general", "withTitle"]);
          v = s(y, {
            title: m
          });
        } else
          v = c.get(["general", "withoutTitle"]);
        var b = [], O = f > 1 ? c.get(["series", "multiple", "prefix"]) : c.get(["series", "single", "prefix"]);
        v += s(O, {
          seriesCount: f
        }), n.eachSeries(function(_, C) {
          if (C < g) {
            var A = void 0, T = _.get("name"), k = T ? "withName" : "withoutName";
            A = f > 1 ? c.get(["series", "multiple", k]) : c.get(["series", "single", k]), A = s(A, {
              seriesId: _.seriesIndex,
              seriesName: _.get("name"),
              seriesType: l(_.subType)
            });
            var L = _.getData();
            if (L.count() > d) {
              var D = c.get(["data", "partialData"]);
              A += s(D, {
                displayCnt: d
              });
            } else
              A += c.get(["data", "allData"]);
            for (var E = c.get(["data", "separator", "middle"]), M = c.get(["data", "separator", "end"]), R = [], N = 0; N < L.count(); N++)
              if (N < d) {
                var $ = L.getName(N), V = L.getValues(N), H = c.get(["data", $ ? "withName" : "withoutName"]);
                R.push(s(H, {
                  name: $,
                  value: V.join(E)
                }));
              }
            A += R.join(E) + M, b.push(A);
          }
        });
        var w = c.getModel(["series", "multiple", "separator"]), x = w.get("middle"), S = w.get("end");
        v += b.join(x) + S, h.setAttribute("aria-label", v);
      }
    }
  }
  function s(u, c) {
    if (!be(u))
      return u;
    var h = u;
    return I(c, function(f, d) {
      h = h.replace(new RegExp("\\{\\s*" + d + "\\s*\\}", "g"), f);
    }), h;
  }
  function a() {
    var u = n.get("title");
    return u && u.length && (u = u[0]), u && u.text;
  }
  function l(u) {
    var c = n.getLocaleModel().get(["series", "typeNames"]);
    return c[u] || c.chart;
  }
}
function pBt(n) {
  if (!(!n || !n.aria)) {
    var e = n.aria;
    e.show != null && (e.enabled = e.show), e.label = e.label || {}, I(["description", "general", "series", "data"], function(t) {
      e[t] != null && (e.label[t] = e[t]);
    });
  }
}
function gBt(n) {
  n.registerPreprocessor(pBt), n.registerVisual(n.PRIORITY.VISUAL.ARIA, dBt);
}
var oW = {
  value: "eq",
  // PENDING: not good for literal semantic?
  "<": "lt",
  "<=": "lte",
  ">": "gt",
  ">=": "gte",
  "=": "eq",
  "!=": "ne",
  "<>": "ne"
  // Might be misleading for sake of the difference between '==' and '===',
  // so don't support them.
  // '==': 'eq',
  // '===': 'seq',
  // '!==': 'sne'
  // PENDING: Whether support some common alias "ge", "le", "neq"?
  // ge: 'gte',
  // le: 'lte',
  // neq: 'ne',
}, vBt = (
  /** @class */
  function() {
    function n(e) {
      var t = this._condVal = be(e) ? new RegExp(e) : $U(e) ? e : null;
      if (t == null) {
        var r = "";
        process.env.NODE_ENV !== "production" && (r = Fi("Illegal regexp", e, "in")), Nt(r);
      }
    }
    return n.prototype.evaluate = function(e) {
      var t = typeof e;
      return be(t) ? this._condVal.test(e) : Tt(t) ? this._condVal.test(e + "") : !1;
    }, n;
  }()
), mBt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.evaluate = function() {
      return this.value;
    }, n;
  }()
), yBt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.evaluate = function() {
      for (var e = this.children, t = 0; t < e.length; t++)
        if (!e[t].evaluate())
          return !1;
      return !0;
    }, n;
  }()
), bBt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.evaluate = function() {
      for (var e = this.children, t = 0; t < e.length; t++)
        if (e[t].evaluate())
          return !0;
      return !1;
    }, n;
  }()
), OBt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.evaluate = function() {
      return !this.child.evaluate();
    }, n;
  }()
), wBt = (
  /** @class */
  function() {
    function n() {
    }
    return n.prototype.evaluate = function() {
      for (var e = !!this.valueParser, t = this.getValue, r = t(this.valueGetterParam), i = e ? this.valueParser(r) : null, o = 0; o < this.subCondList.length; o++)
        if (!this.subCondList[o].evaluate(e ? i : r))
          return !1;
      return !0;
    }, n;
  }()
);
function B$(n, e) {
  if (n === !0 || n === !1) {
    var t = new mBt();
    return t.value = n, t;
  }
  var r = "";
  return Sie(n) || (process.env.NODE_ENV !== "production" && (r = Fi("Illegal config. Expect a plain object but actually", n)), Nt(r)), n.and ? sW("and", n, e) : n.or ? sW("or", n, e) : n.not ? xBt(n, e) : SBt(n, e);
}
function sW(n, e, t) {
  var r = e[n], i = "";
  process.env.NODE_ENV !== "production" && (i = Fi('"and"/"or" condition should only be `' + n + ": [...]` and must not be empty array.", "Illegal condition:", e)), oe(r) || Nt(i), r.length || Nt(i);
  var o = n === "and" ? new yBt() : new bBt();
  return o.children = ae(r, function(s) {
    return B$(s, t);
  }), o.children.length || Nt(i), o;
}
function xBt(n, e) {
  var t = n.not, r = "";
  process.env.NODE_ENV !== "production" && (r = Fi('"not" condition should only be `not: {}`.', "Illegal condition:", n)), Sie(t) || Nt(r);
  var i = new OBt();
  return i.child = B$(t, e), i.child || Nt(r), i;
}
function SBt(n, e) {
  for (var t = "", r = e.prepareGetValue(n), i = [], o = ft(n), s = n.parser, a = s ? KJ(s) : null, l = 0; l < o.length; l++) {
    var u = o[l];
    if (!(u === "parser" || e.valueGetterAttrMap.get(u))) {
      var c = we(oW, u) ? oW[u] : u, h = n[u], f = a ? a(h) : h, d = Mxt(c, f) || c === "reg" && new vBt(f);
      d || (process.env.NODE_ENV !== "production" && (t = Fi('Illegal relational operation: "' + u + '" in condition:', n)), Nt(t)), i.push(d);
    }
  }
  i.length || (process.env.NODE_ENV !== "production" && (t = Fi("Relational condition must have at least one operator.", "Illegal condition:", n)), Nt(t));
  var p = new wBt();
  return p.valueGetterParam = r, p.valueParser = a, p.getValue = e.getValue, p.subCondList = i, p;
}
function Sie(n) {
  return Me(n) && !_i(n);
}
var _Bt = (
  /** @class */
  function() {
    function n(e, t) {
      this._cond = B$(e, t);
    }
    return n.prototype.evaluate = function() {
      return this._cond.evaluate();
    }, n;
  }()
);
function CBt(n, e) {
  return new _Bt(n, e);
}
var ABt = {
  type: "echarts:filter",
  // PENDING: enhance to filter by index rather than create new data
  transform: function(n) {
    for (var e = n.upstream, t, r = CBt(n.config, {
      valueGetterAttrMap: _e({
        dimension: !0
      }),
      prepareGetValue: function(a) {
        var l = "", u = a.dimension;
        we(a, "dimension") || (process.env.NODE_ENV !== "production" && (l = Fi('Relation condition must has prop "dimension" specified.', "Illegal condition:", a)), Nt(l));
        var c = e.getDimensionInfo(u);
        return c || (process.env.NODE_ENV !== "production" && (l = Fi("Can not find dimension info via: " + u + `.
`, "Existing dimensions: ", e.cloneAllDimensionInfo(), `.
`, "Illegal condition:", a, `.
`)), Nt(l)), {
          dimIdx: c.index
        };
      },
      getValue: function(a) {
        return e.retrieveValueFromItem(t, a.dimIdx);
      }
    }), i = [], o = 0, s = e.count(); o < s; o++)
      t = e.getRawDataItem(o), r.evaluate() && i.push(t);
    return {
      data: i
    };
  }
}, fD = "";
process.env.NODE_ENV !== "production" && (fD = ["Valid config is like:", '{ dimension: "age", order: "asc" }', 'or [{ dimension: "age", order: "asc"], { dimension: "date", order: "desc" }]'].join(" "));
var TBt = {
  type: "echarts:sort",
  transform: function(n) {
    var e = n.upstream, t = n.config, r = "", i = Kt(t);
    i.length || (process.env.NODE_ENV !== "production" && (r = "Empty `config` in sort transform."), Nt(r));
    var o = [];
    I(i, function(c) {
      var h = c.dimension, f = c.order, d = c.parser, p = c.incomparable;
      if (h == null && (process.env.NODE_ENV !== "production" && (r = 'Sort transform config must has "dimension" specified.' + fD), Nt(r)), f !== "asc" && f !== "desc" && (process.env.NODE_ENV !== "production" && (r = 'Sort transform config must has "order" specified.' + fD), Nt(r)), p && p !== "min" && p !== "max") {
        var g = "";
        process.env.NODE_ENV !== "production" && (g = 'incomparable must be "min" or "max" rather than "' + p + '".'), Nt(g);
      }
      if (f !== "asc" && f !== "desc") {
        var v = "";
        process.env.NODE_ENV !== "production" && (v = 'order must be "asc" or "desc" rather than "' + f + '".'), Nt(v);
      }
      var m = e.getDimensionInfo(h);
      m || (process.env.NODE_ENV !== "production" && (r = Fi("Can not find dimension info via: " + h + `.
`, "Existing dimensions: ", e.cloneAllDimensionInfo(), `.
`, "Illegal config:", c, `.
`)), Nt(r));
      var y = d ? KJ(d) : null;
      d && !y && (process.env.NODE_ENV !== "production" && (r = Fi("Invalid parser name " + d + `.
`, "Illegal config:", c, `.
`)), Nt(r)), o.push({
        dimIdx: m.index,
        parser: y,
        comparator: new eee(f, p)
      });
    });
    var s = e.sourceFormat;
    s !== Ci && s !== ks && (process.env.NODE_ENV !== "production" && (r = 'sourceFormat "' + s + '" is not supported yet'), Nt(r));
    for (var a = [], l = 0, u = e.count(); l < u; l++)
      a.push(e.getRawDataItem(l));
    return a.sort(function(c, h) {
      for (var f = 0; f < o.length; f++) {
        var d = o[f], p = e.retrieveValueFromItem(c, d.dimIdx), g = e.retrieveValueFromItem(h, d.dimIdx);
        d.parser && (p = d.parser(p), g = d.parser(g));
        var v = d.comparator.evaluate(p, g);
        if (v !== 0)
          return v;
      }
      return 0;
    }), {
      data: a
    };
  }
};
function PBt(n) {
  n.registerTransform(ABt), n.registerTransform(TBt);
}
var EBt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "dataset", t;
    }
    return e.prototype.init = function(t, r, i) {
      n.prototype.init.call(this, t, r, i), this._sourceManager = new iee(this), iF(this);
    }, e.prototype.mergeOption = function(t, r) {
      n.prototype.mergeOption.call(this, t, r), iF(this);
    }, e.prototype.optionUpdated = function() {
      this._sourceManager.dirty();
    }, e.prototype.getSourceManager = function() {
      return this._sourceManager;
    }, e.type = "dataset", e.defaultOption = {
      seriesLayoutBy: rl
    }, e;
  }(Ot)
), kBt = (
  /** @class */
  function(n) {
    j(e, n);
    function e() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t.type = "dataset", t;
    }
    return e.type = "dataset", e;
  }(Nn)
);
function MBt(n) {
  n.registerComponentModel(EBt), n.registerComponentView(kBt);
}
var Pa = vl.CMD;
function Op(n, e) {
  return Math.abs(n - e) < 1e-5;
}
function dD(n) {
  var e = n.data, t = n.len(), r = [], i, o = 0, s = 0, a = 0, l = 0;
  function u(L, D) {
    i && i.length > 2 && r.push(i), i = [L, D];
  }
  function c(L, D, E, M) {
    Op(L, E) && Op(D, M) || i.push(L, D, E, M, E, M);
  }
  function h(L, D, E, M, R, N) {
    var $ = Math.abs(D - L), V = Math.tan($ / 4) * 4 / 3, H = D < L ? -1 : 1, G = Math.cos(L), q = Math.sin(L), Y = Math.cos(D), ie = Math.sin(D), se = G * R + E, K = q * N + M, re = Y * R + E, ge = ie * N + M, ne = R * V * H, ue = N * V * H;
    i.push(se - ne * q, K + ue * G, re + ne * ie, ge - ue * Y, re, ge);
  }
  for (var f, d, p, g, v = 0; v < t; ) {
    var m = e[v++], y = v === 1;
    switch (y && (o = e[v], s = e[v + 1], a = o, l = s, (m === Pa.L || m === Pa.C || m === Pa.Q) && (i = [a, l])), m) {
      case Pa.M:
        o = a = e[v++], s = l = e[v++], u(a, l);
        break;
      case Pa.L:
        f = e[v++], d = e[v++], c(o, s, f, d), o = f, s = d;
        break;
      case Pa.C:
        i.push(e[v++], e[v++], e[v++], e[v++], o = e[v++], s = e[v++]);
        break;
      case Pa.Q:
        f = e[v++], d = e[v++], p = e[v++], g = e[v++], i.push(o + 2 / 3 * (f - o), s + 2 / 3 * (d - s), p + 2 / 3 * (f - p), g + 2 / 3 * (d - g), p, g), o = p, s = g;
        break;
      case Pa.A:
        var b = e[v++], O = e[v++], w = e[v++], x = e[v++], S = e[v++], _ = e[v++] + S;
        v += 1;
        var C = !e[v++];
        f = Math.cos(S) * w + b, d = Math.sin(S) * x + O, y ? (a = f, l = d, u(a, l)) : c(o, s, f, d), o = Math.cos(_) * w + b, s = Math.sin(_) * x + O;
        for (var A = (C ? -1 : 1) * Math.PI / 2, T = S; C ? T > _ : T < _; T += A) {
          var k = C ? Math.max(T + A, _) : Math.min(T + A, _);
          h(T, k, b, O, w, x);
        }
        break;
      case Pa.R:
        a = o = e[v++], l = s = e[v++], f = a + e[v++], d = l + e[v++], u(f, l), c(f, l, f, d), c(f, d, a, d), c(a, d, a, l), c(a, l, f, l);
        break;
      case Pa.Z:
        i && c(o, s, a, l), o = a, s = l;
        break;
    }
  }
  return i && i.length > 2 && r.push(i), r;
}
function pD(n, e, t, r, i, o, s, a, l, u) {
  if (Op(n, t) && Op(e, r) && Op(i, s) && Op(o, a)) {
    l.push(s, a);
    return;
  }
  var c = 2 / u, h = c * c, f = s - n, d = a - e, p = Math.sqrt(f * f + d * d);
  f /= p, d /= p;
  var g = t - n, v = r - e, m = i - s, y = o - a, b = g * g + v * v, O = m * m + y * y;
  if (b < h && O < h) {
    l.push(s, a);
    return;
  }
  var w = f * g + d * v, x = -f * m - d * y, S = b - w * w, _ = O - x * x;
  if (S < h && w >= 0 && _ < h && x >= 0) {
    l.push(s, a);
    return;
  }
  var C = [], A = [];
  Nc(n, t, i, s, 0.5, C), Nc(e, r, o, a, 0.5, A), pD(C[0], A[0], C[1], A[1], C[2], A[2], C[3], A[3], l, u), pD(C[4], A[4], C[5], A[5], C[6], A[6], C[7], A[7], l, u);
}
function DBt(n, e) {
  var t = dD(n), r = [];
  e = e || 1;
  for (var i = 0; i < t.length; i++) {
    var o = t[i], s = [], a = o[0], l = o[1];
    s.push(a, l);
    for (var u = 2; u < o.length; ) {
      var c = o[u++], h = o[u++], f = o[u++], d = o[u++], p = o[u++], g = o[u++];
      pD(a, l, c, h, f, d, p, g, s, e), a = p, l = g;
    }
    r.push(s);
  }
  return r;
}
function _ie(n, e, t) {
  var r = n[e], i = n[1 - e], o = Math.abs(r / i), s = Math.ceil(Math.sqrt(o * t)), a = Math.floor(t / s);
  a === 0 && (a = 1, s = t);
  for (var l = [], u = 0; u < s; u++)
    l.push(a);
  var c = s * a, h = t - c;
  if (h > 0)
    for (var u = 0; u < h; u++)
      l[u % s] += 1;
  return l;
}
function aW(n, e, t) {
  for (var r = n.r0, i = n.r, o = n.startAngle, s = n.endAngle, a = Math.abs(s - o), l = a * i, u = i - r, c = l > Math.abs(u), h = _ie([l, u], c ? 0 : 1, e), f = (c ? a : u) / h.length, d = 0; d < h.length; d++)
    for (var p = (c ? u : a) / h[d], g = 0; g < h[d]; g++) {
      var v = {};
      c ? (v.startAngle = o + f * d, v.endAngle = o + f * (d + 1), v.r0 = r + p * g, v.r = r + p * (g + 1)) : (v.startAngle = o + p * g, v.endAngle = o + p * (g + 1), v.r0 = r + f * d, v.r = r + f * (d + 1)), v.clockwise = n.clockwise, v.cx = n.cx, v.cy = n.cy, t.push(v);
    }
}
function LBt(n, e, t) {
  for (var r = n.width, i = n.height, o = r > i, s = _ie([r, i], o ? 0 : 1, e), a = o ? "width" : "height", l = o ? "height" : "width", u = o ? "x" : "y", c = o ? "y" : "x", h = n[a] / s.length, f = 0; f < s.length; f++)
    for (var d = n[l] / s[f], p = 0; p < s[f]; p++) {
      var g = {};
      g[u] = f * h, g[c] = p * d, g[a] = h, g[l] = d, g.x += n.x, g.y += n.y, t.push(g);
    }
}
function lW(n, e, t, r) {
  return n * r - t * e;
}
function IBt(n, e, t, r, i, o, s, a) {
  var l = t - n, u = r - e, c = s - i, h = a - o, f = lW(c, h, l, u);
  if (Math.abs(f) < 1e-6)
    return null;
  var d = n - i, p = e - o, g = lW(d, p, c, h) / f;
  return g < 0 || g > 1 ? null : new Xe(g * l + n, g * u + e);
}
function RBt(n, e, t) {
  var r = new Xe();
  Xe.sub(r, t, e), r.normalize();
  var i = new Xe();
  Xe.sub(i, n, e);
  var o = i.dot(r);
  return o;
}
function rp(n, e) {
  var t = n[n.length - 1];
  t && t[0] === e[0] && t[1] === e[1] || n.push(e);
}
function $Bt(n, e, t) {
  for (var r = n.length, i = [], o = 0; o < r; o++) {
    var s = n[o], a = n[(o + 1) % r], l = IBt(s[0], s[1], a[0], a[1], e.x, e.y, t.x, t.y);
    l && i.push({
      projPt: RBt(l, e, t),
      pt: l,
      idx: o
    });
  }
  if (i.length < 2)
    return [{ points: n }, { points: n }];
  i.sort(function(v, m) {
    return v.projPt - m.projPt;
  });
  var u = i[0], c = i[i.length - 1];
  if (c.idx < u.idx) {
    var h = u;
    u = c, c = h;
  }
  for (var f = [u.pt.x, u.pt.y], d = [c.pt.x, c.pt.y], p = [f], g = [d], o = u.idx + 1; o <= c.idx; o++)
    rp(p, n[o].slice());
  rp(p, d), rp(p, f);
  for (var o = c.idx + 1; o <= u.idx + r; o++)
    rp(g, n[o % r].slice());
  return rp(g, f), rp(g, d), [{
    points: p
  }, {
    points: g
  }];
}
function uW(n) {
  var e = n.points, t = [], r = [];
  eC(e, t, r);
  var i = new et(t[0], t[1], r[0] - t[0], r[1] - t[1]), o = i.width, s = i.height, a = i.x, l = i.y, u = new Xe(), c = new Xe();
  return o > s ? (u.x = c.x = a + o / 2, u.y = l, c.y = l + s) : (u.y = c.y = l + s / 2, u.x = a, c.x = a + o), $Bt(e, u, c);
}
function MS(n, e, t, r) {
  if (t === 1)
    r.push(e);
  else {
    var i = Math.floor(t / 2), o = n(e);
    MS(n, o[0], i, r), MS(n, o[1], t - i, r);
  }
  return r;
}
function NBt(n, e) {
  for (var t = [], r = 0; r < e; r++)
    t.push(KI(n));
  return t;
}
function BBt(n, e) {
  e.setStyle(n.style), e.z = n.z, e.z2 = n.z2, e.zlevel = n.zlevel;
}
function VBt(n) {
  for (var e = [], t = 0; t < n.length; )
    e.push([n[t++], n[t++]]);
  return e;
}
function zBt(n, e) {
  var t = [], r = n.shape, i;
  switch (n.type) {
    case "rect":
      LBt(r, e, t), i = _t;
      break;
    case "sector":
      aW(r, e, t), i = go;
      break;
    case "circle":
      aW({
        r0: 0,
        r: r.r,
        startAngle: 0,
        endAngle: Math.PI * 2,
        cx: r.cx,
        cy: r.cy
      }, e, t), i = go;
      break;
    default:
      var o = n.getComputedTransform(), s = o ? Math.sqrt(Math.max(o[0] * o[0] + o[1] * o[1], o[2] * o[2] + o[3] * o[3])) : 1, a = ae(DBt(n.getUpdatedPathProxy(), s), function(m) {
        return VBt(m);
      }), l = a.length;
      if (l === 0)
        MS(uW, {
          points: a[0]
        }, e, t);
      else if (l === e)
        for (var u = 0; u < l; u++)
          t.push({
            points: a[u]
          });
      else {
        var c = 0, h = ae(a, function(m) {
          var y = [], b = [];
          eC(m, y, b);
          var O = (b[1] - y[1]) * (b[0] - y[0]);
          return c += O, { poly: m, area: O };
        });
        h.sort(function(m, y) {
          return y.area - m.area;
        });
        for (var f = e, u = 0; u < l; u++) {
          var d = h[u];
          if (f <= 0)
            break;
          var p = u === l - 1 ? f : Math.ceil(d.area / c * e);
          p < 0 || (MS(uW, {
            points: d.poly
          }, p, t), f -= p);
        }
      }
      i = Zi;
      break;
  }
  if (!i)
    return NBt(n, e);
  for (var g = [], u = 0; u < t.length; u++) {
    var v = new i();
    v.setShape(t[u]), BBt(n, v), g.push(v);
  }
  return g;
}
function FBt(n, e) {
  var t = n.length, r = e.length;
  if (t === r)
    return [n, e];
  for (var i = [], o = [], s = t < r ? n : e, a = Math.min(t, r), l = Math.abs(r - t) / 6, u = (a - 2) / 6, c = Math.ceil(l / u) + 1, h = [s[0], s[1]], f = l, d = 2; d < a; ) {
    var p = s[d - 2], g = s[d - 1], v = s[d++], m = s[d++], y = s[d++], b = s[d++], O = s[d++], w = s[d++];
    if (f <= 0) {
      h.push(v, m, y, b, O, w);
      continue;
    }
    for (var x = Math.min(f, c - 1) + 1, S = 1; S <= x; S++) {
      var _ = S / x;
      Nc(p, v, y, O, _, i), Nc(g, m, b, w, _, o), p = i[3], g = o[3], h.push(i[1], o[1], i[2], o[2], p, g), v = i[5], m = o[5], y = i[6], b = o[6];
    }
    f -= x - 1;
  }
  return s === n ? [h, e] : [n, h];
}
function cW(n, e) {
  for (var t = n.length, r = n[t - 2], i = n[t - 1], o = [], s = 0; s < e.length; )
    o[s++] = r, o[s++] = i;
  return o;
}
function QBt(n, e) {
  for (var t, r, i, o = [], s = [], a = 0; a < Math.max(n.length, e.length); a++) {
    var l = n[a], u = e[a], c = void 0, h = void 0;
    l ? u ? (t = FBt(l, u), c = t[0], h = t[1], r = c, i = h) : (h = cW(i || l, l), c = l) : (c = cW(r || u, u), h = u), o.push(c), s.push(h);
  }
  return [o, s];
}
function hW(n) {
  for (var e = 0, t = 0, r = 0, i = n.length, o = 0, s = i - 2; o < i; s = o, o += 2) {
    var a = n[s], l = n[s + 1], u = n[o], c = n[o + 1], h = a * c - u * l;
    e += h, t += (a + u) * h, r += (l + c) * h;
  }
  return e === 0 ? [n[0] || 0, n[1] || 0] : [t / e / 3, r / e / 3, e];
}
function ZBt(n, e, t, r) {
  for (var i = (n.length - 2) / 6, o = 1 / 0, s = 0, a = n.length, l = a - 2, u = 0; u < i; u++) {
    for (var c = u * 6, h = 0, f = 0; f < a; f += 2) {
      var d = f === 0 ? c : (c + f - 2) % l + 2, p = n[d] - t[0], g = n[d + 1] - t[1], v = e[f] - r[0], m = e[f + 1] - r[1], y = v - p, b = m - g;
      h += y * y + b * b;
    }
    h < o && (o = h, s = u);
  }
  return s;
}
function WBt(n) {
  for (var e = [], t = n.length, r = 0; r < t; r += 2)
    e[r] = n[t - r - 2], e[r + 1] = n[t - r - 1];
  return e;
}
function GBt(n, e, t, r) {
  for (var i = [], o, s = 0; s < n.length; s++) {
    var a = n[s], l = e[s], u = hW(a), c = hW(l);
    o == null && (o = u[2] < 0 != c[2] < 0);
    var h = [], f = [], d = 0, p = 1 / 0, g = [], v = a.length;
    o && (a = WBt(a));
    for (var m = ZBt(a, l, u, c) * 6, y = v - 2, b = 0; b < y; b += 2) {
      var O = (m + b) % y + 2;
      h[b + 2] = a[O] - u[0], h[b + 3] = a[O + 1] - u[1];
    }
    if (h[0] = a[m] - u[0], h[1] = a[m + 1] - u[1], t > 0)
      for (var w = r / t, x = -r / 2; x <= r / 2; x += w) {
        for (var S = Math.sin(x), _ = Math.cos(x), C = 0, b = 0; b < a.length; b += 2) {
          var A = h[b], T = h[b + 1], k = l[b] - c[0], L = l[b + 1] - c[1], D = k * _ - L * S, E = k * S + L * _;
          g[b] = D, g[b + 1] = E;
          var M = D - A, R = E - T;
          C += M * M + R * R;
        }
        if (C < p) {
          p = C, d = x;
          for (var N = 0; N < g.length; N++)
            f[N] = g[N];
        }
      }
    else
      for (var $ = 0; $ < v; $ += 2)
        f[$] = l[$] - c[0], f[$ + 1] = l[$ + 1] - c[1];
    i.push({
      from: h,
      to: f,
      fromCp: u,
      toCp: c,
      rotation: -d
    });
  }
  return i;
}
function DS(n) {
  return n.__isCombineMorphing;
}
var Cie = "__mOriginal_";
function LS(n, e, t) {
  var r = Cie + e, i = n[r] || n[e];
  n[r] || (n[r] = n[e]);
  var o = t.replace, s = t.after, a = t.before;
  n[e] = function() {
    var l = arguments, u;
    return a && a.apply(this, l), o ? u = o.apply(this, l) : u = i.apply(this, l), s && s.apply(this, l), u;
  };
}
function Ay(n, e) {
  var t = Cie + e;
  n[t] && (n[e] = n[t], n[t] = null);
}
function fW(n, e) {
  for (var t = 0; t < n.length; t++)
    for (var r = n[t], i = 0; i < r.length; ) {
      var o = r[i], s = r[i + 1];
      r[i++] = e[0] * o + e[2] * s + e[4], r[i++] = e[1] * o + e[3] * s + e[5];
    }
}
function Aie(n, e) {
  var t = n.getUpdatedPathProxy(), r = e.getUpdatedPathProxy(), i = QBt(dD(t), dD(r)), o = i[0], s = i[1], a = n.getComputedTransform(), l = e.getComputedTransform();
  function u() {
    this.transform = null;
  }
  a && fW(o, a), l && fW(s, l), LS(e, "updateTransform", { replace: u }), e.transform = null;
  var c = GBt(o, s, 10, Math.PI), h = [];
  LS(e, "buildPath", { replace: function(f) {
    for (var d = e.__morphT, p = 1 - d, g = [], v = 0; v < c.length; v++) {
      var m = c[v], y = m.from, b = m.to, O = m.rotation * d, w = m.fromCp, x = m.toCp, S = Math.sin(O), _ = Math.cos(O);
      mw(g, w, x, d);
      for (var C = 0; C < y.length; C += 2) {
        var A = y[C], T = y[C + 1], k = b[C], L = b[C + 1], D = A * p + k * d, E = T * p + L * d;
        h[C] = D * _ - E * S + g[0], h[C + 1] = D * S + E * _ + g[1];
      }
      var M = h[0], R = h[1];
      f.moveTo(M, R);
      for (var C = 2; C < y.length; ) {
        var k = h[C++], L = h[C++], N = h[C++], $ = h[C++], V = h[C++], H = h[C++];
        M === k && R === L && N === V && $ === H ? f.lineTo(V, H) : f.bezierCurveTo(k, L, N, $, V, H), M = V, R = H;
      }
    }
  } });
}
function V$(n, e, t) {
  if (!n || !e)
    return e;
  var r = t.done, i = t.during;
  Aie(n, e), e.__morphT = 0;
  function o() {
    Ay(e, "buildPath"), Ay(e, "updateTransform"), e.__morphT = -1, e.createPathProxy(), e.dirtyShape();
  }
  return e.animateTo({
    __morphT: 1
  }, Le({
    during: function(s) {
      e.dirtyShape(), i && i(s);
    },
    done: function() {
      o(), r && r();
    }
  }, t)), e;
}
function jBt(n, e, t, r, i, o) {
  var s = 16;
  n = i === t ? 0 : Math.round(32767 * (n - t) / (i - t)), e = o === r ? 0 : Math.round(32767 * (e - r) / (o - r));
  for (var a = 0, l, u = (1 << s) / 2; u > 0; u /= 2) {
    var c = 0, h = 0;
    (n & u) > 0 && (c = 1), (e & u) > 0 && (h = 1), a += u * u * (3 * c ^ h), h === 0 && (c === 1 && (n = u - 1 - n, e = u - 1 - e), l = n, n = e, e = l);
  }
  return a;
}
function IS(n) {
  var e = 1 / 0, t = 1 / 0, r = -1 / 0, i = -1 / 0, o = ae(n, function(a) {
    var l = a.getBoundingRect(), u = a.getComputedTransform(), c = l.x + l.width / 2 + (u ? u[4] : 0), h = l.y + l.height / 2 + (u ? u[5] : 0);
    return e = Math.min(c, e), t = Math.min(h, t), r = Math.max(c, r), i = Math.max(h, i), [c, h];
  }), s = ae(o, function(a, l) {
    return {
      cp: a,
      z: jBt(a[0], a[1], e, t, r, i),
      path: n[l]
    };
  });
  return s.sort(function(a, l) {
    return a.z - l.z;
  }).map(function(a) {
    return a.path;
  });
}
function Tie(n) {
  return zBt(n.path, n.count);
}
function gD() {
  return {
    fromIndividuals: [],
    toIndividuals: [],
    count: 0
  };
}
function HBt(n, e, t) {
  var r = [];
  function i(w) {
    for (var x = 0; x < w.length; x++) {
      var S = w[x];
      DS(S) ? i(S.childrenRef()) : S instanceof ct && r.push(S);
    }
  }
  i(n);
  var o = r.length;
  if (!o)
    return gD();
  var s = t.dividePath || Tie, a = s({
    path: e,
    count: o
  });
  if (a.length !== o)
    return console.error("Invalid morphing: unmatched splitted path"), gD();
  r = IS(r), a = IS(a);
  for (var l = t.done, u = t.during, c = t.individualDelay, h = new zl(), f = 0; f < o; f++) {
    var d = r[f], p = a[f];
    p.parent = e, p.copyTransform(h), c || Aie(d, p);
  }
  e.__isCombineMorphing = !0, e.childrenRef = function() {
    return a;
  };
  function g(w) {
    for (var x = 0; x < a.length; x++)
      a[x].addSelfToZr(w);
  }
  LS(e, "addSelfToZr", {
    after: function(w) {
      g(w);
    }
  }), LS(e, "removeSelfFromZr", {
    after: function(w) {
      for (var x = 0; x < a.length; x++)
        a[x].removeSelfFromZr(w);
    }
  });
  function v() {
    e.__isCombineMorphing = !1, e.__morphT = -1, e.childrenRef = null, Ay(e, "addSelfToZr"), Ay(e, "removeSelfFromZr");
  }
  var m = a.length;
  if (c)
    for (var y = m, b = function() {
      y--, y === 0 && (v(), l && l());
    }, f = 0; f < m; f++) {
      var O = c ? Le({
        delay: (t.delay || 0) + c(f, m, r[f], a[f]),
        done: b
      }, t) : t;
      V$(r[f], a[f], O);
    }
  else
    e.__morphT = 0, e.animateTo({
      __morphT: 1
    }, Le({
      during: function(w) {
        for (var x = 0; x < m; x++) {
          var S = a[x];
          S.__morphT = e.__morphT, S.dirtyShape();
        }
        u && u(w);
      },
      done: function() {
        v();
        for (var w = 0; w < n.length; w++)
          Ay(n[w], "updateTransform");
        l && l();
      }
    }, t));
  return e.__zr && g(e.__zr), {
    fromIndividuals: r,
    toIndividuals: a,
    count: m
  };
}
function qBt(n, e, t) {
  var r = e.length, i = [], o = t.dividePath || Tie;
  function s(d) {
    for (var p = 0; p < d.length; p++) {
      var g = d[p];
      DS(g) ? s(g.childrenRef()) : g instanceof ct && i.push(g);
    }
  }
  if (DS(n)) {
    s(n.childrenRef());
    var a = i.length;
    if (a < r)
      for (var l = 0, u = a; u < r; u++)
        i.push(KI(i[l++ % a]));
    i.length = r;
  } else {
    i = o({ path: n, count: r });
    for (var c = n.getComputedTransform(), u = 0; u < i.length; u++)
      i[u].setLocalTransform(c);
    if (i.length !== r)
      return console.error("Invalid morphing: unmatched splitted path"), gD();
  }
  i = IS(i), e = IS(e);
  for (var h = t.individualDelay, u = 0; u < r; u++) {
    var f = h ? Le({
      delay: (t.delay || 0) + h(u, r, i[u], e[u])
    }, t) : t;
    V$(i[u], e[u], f);
  }
  return {
    fromIndividuals: i,
    toIndividuals: e,
    count: e.length
  };
}
function dW(n) {
  return oe(n[0]);
}
function pW(n, e) {
  for (var t = [], r = n.length, i = 0; i < r; i++)
    t.push({
      one: n[i],
      many: []
    });
  for (var i = 0; i < e.length; i++) {
    var o = e[i].length, s = void 0;
    for (s = 0; s < o; s++)
      t[s % r].many.push(e[i][s]);
  }
  for (var a = 0, i = r - 1; i >= 0; i--)
    if (!t[i].many.length) {
      var l = t[a].many;
      if (l.length <= 1)
        if (a)
          a = 0;
        else
          return t;
      var o = l.length, u = Math.ceil(o / 2);
      t[i].many = l.slice(u, o), t[a].many = l.slice(0, u), a++;
    }
  return t;
}
var YBt = {
  clone: function(n) {
    for (var e = [], t = 1 - Math.pow(1 - n.path.style.opacity, 1 / n.count), r = 0; r < n.count; r++) {
      var i = KI(n.path);
      i.setStyle("opacity", t), e.push(i);
    }
    return e;
  },
  // Use the default divider
  split: null
};
function vP(n, e, t, r, i, o) {
  if (!n.length || !e.length)
    return;
  var s = pv("update", r, i);
  if (!(s && s.duration > 0))
    return;
  var a = r.getModel("universalTransition").get("delay"), l = Object.assign({
    // Need to setToFinal so the further calculation based on the style can be correct.
    // Like emphasis color.
    setToFinal: !0
  }, s), u, c;
  dW(n) && (u = n, c = e), dW(e) && (u = e, c = n);
  function h(m, y, b, O, w) {
    var x = m.many, S = m.one;
    if (x.length === 1 && !w) {
      var _ = y ? x[0] : S, C = y ? S : x[0];
      if (DS(_))
        h({
          many: [_],
          one: C
        }, !0, b, O, !0);
      else {
        var A = a ? Le({
          delay: a(b, O)
        }, l) : l;
        V$(_, C, A), o(_, C, _, C, A);
      }
    } else
      for (var T = Le({
        dividePath: YBt[t],
        individualDelay: a && function(R, N, $, V) {
          return a(R + b, O);
        }
      }, l), k = y ? HBt(x, S, T) : qBt(S, x, T), L = k.fromIndividuals, D = k.toIndividuals, E = L.length, M = 0; M < E; M++) {
        var A = a ? Le({
          delay: a(M, E)
        }, l) : l;
        o(L[M], D[M], y ? x[M] : m.one, y ? m.one : x[M], A);
      }
  }
  for (var f = u ? u === n : n.length > e.length, d = u ? pW(c, u) : pW(f ? e : n, [f ? n : e]), p = 0, g = 0; g < d.length; g++)
    p += d[g].many.length;
  for (var v = 0, g = 0; g < d.length; g++)
    h(d[g], f, v, p), v += d[g].many.length;
}
function Qh(n) {
  if (!n)
    return [];
  if (oe(n)) {
    for (var e = [], t = 0; t < n.length; t++)
      e.push(Qh(n[t]));
    return e;
  }
  var r = [];
  return n.traverse(function(i) {
    i instanceof ct && !i.disableMorphing && !i.invisible && !i.ignore && r.push(i);
  }), r;
}
var Pie = 1e4, XBt = 0, gW = 1, vW = 2, UBt = Ct();
function KBt(n, e) {
  for (var t = n.dimensions, r = 0; r < t.length; r++) {
    var i = n.getDimensionInfo(t[r]);
    if (i && i.otherDims[e] === 0)
      return t[r];
  }
}
function JBt(n, e, t) {
  var r = n.getDimensionInfo(t), i = r && r.ordinalMeta;
  if (r) {
    var o = n.get(r.name, e);
    return i && i.categories[o] || o + "";
  }
}
function mW(n, e, t, r) {
  var i = r ? "itemChildGroupId" : "itemGroupId", o = KBt(n, i);
  if (o) {
    var s = JBt(n, e, o);
    return s;
  }
  var a = n.getRawDataItem(e), l = r ? "childGroupId" : "groupId";
  if (a && a[l])
    return a[l] + "";
  if (!r)
    return t || n.getId(e);
}
function yW(n) {
  var e = [];
  return I(n, function(t) {
    var r = t.data, i = t.dataGroupId;
    if (r.count() > Pie) {
      process.env.NODE_ENV !== "production" && En("Universal transition is disabled on large data > 10k.");
      return;
    }
    for (var o = r.getIndices(), s = 0; s < o.length; s++)
      e.push({
        data: r,
        groupId: mW(r, s, i, !1),
        childGroupId: mW(r, s, i, !0),
        divide: t.divide,
        dataIndex: s
      });
  }), e;
}
function mP(n, e, t) {
  n.traverse(function(r) {
    r instanceof ct && vn(r, {
      style: {
        opacity: 0
      }
    }, e, {
      dataIndex: t,
      isFrom: !0
    });
  });
}
function yP(n) {
  if (n.parent) {
    var e = n.getComputedTransform();
    n.setLocalTransform(e), n.parent.remove(n);
  }
}
function ip(n) {
  n.stopAnimation(), n.isGroup && n.traverse(function(e) {
    e.stopAnimation();
  });
}
function eVt(n, e, t) {
  var r = pv("update", t, e);
  r && n.traverse(function(i) {
    if (i instanceof As) {
      var o = uwt(i);
      o && i.animateFrom({
        style: o
      }, r);
    }
  });
}
function tVt(n, e) {
  var t = n.length;
  if (t !== e.length)
    return !1;
  for (var r = 0; r < t; r++) {
    var i = n[r], o = e[r];
    if (i.data.getId(i.dataIndex) !== o.data.getId(o.dataIndex))
      return !1;
  }
  return !0;
}
function Eie(n, e, t) {
  var r = yW(n), i = yW(e);
  function o(b, O, w, x, S) {
    (w || b) && O.animateFrom({
      style: w && w !== b ? te(te({}, w.style), b.style) : b.style
    }, S);
  }
  var s = !1, a = XBt, l = _e(), u = _e();
  r.forEach(function(b) {
    b.groupId && l.set(b.groupId, !0), b.childGroupId && u.set(b.childGroupId, !0);
  });
  for (var c = 0; c < i.length; c++) {
    var h = i[c].groupId;
    if (u.get(h)) {
      a = gW;
      break;
    }
    var f = i[c].childGroupId;
    if (f && l.get(f)) {
      a = vW;
      break;
    }
  }
  function d(b, O) {
    return function(w) {
      var x = w.data, S = w.dataIndex;
      return O ? x.getId(S) : b ? a === gW ? w.childGroupId : w.groupId : a === vW ? w.childGroupId : w.groupId;
    };
  }
  var p = tVt(r, i), g = {};
  if (!p)
    for (var c = 0; c < i.length; c++) {
      var v = i[c], m = v.data.getItemGraphicEl(v.dataIndex);
      m && (g[m.id] = !0);
    }
  function y(b, O) {
    var w = r[O], x = i[b], S = x.data.hostModel, _ = w.data.getItemGraphicEl(w.dataIndex), C = x.data.getItemGraphicEl(x.dataIndex);
    if (_ === C) {
      C && eVt(C, x.dataIndex, S);
      return;
    }
    // We can't use the elements that already being morphed
    _ && g[_.id] || C && (ip(C), _ ? (ip(_), yP(_), s = !0, vP(Qh(_), Qh(C), x.divide, S, b, o)) : mP(C, S, b));
  }
  new lu(r, i, d(!0, p), d(!1, p), null, "multiple").update(y).updateManyToOne(function(b, O) {
    var w = i[b], x = w.data, S = x.hostModel, _ = x.getItemGraphicEl(w.dataIndex), C = Gt(ae(O, function(A) {
      return r[A].data.getItemGraphicEl(r[A].dataIndex);
    }), function(A) {
      return A && A !== _ && !g[A.id];
    });
    _ && (ip(_), C.length ? (I(C, function(A) {
      ip(A), yP(A);
    }), s = !0, vP(Qh(C), Qh(_), w.divide, S, b, o)) : mP(_, S, w.dataIndex));
  }).updateOneToMany(function(b, O) {
    var w = r[O], x = w.data.getItemGraphicEl(w.dataIndex);
    if (!(x && g[x.id])) {
      var S = Gt(ae(b, function(C) {
        return i[C].data.getItemGraphicEl(i[C].dataIndex);
      }), function(C) {
        return C && C !== x;
      }), _ = i[b[0]].data.hostModel;
      S.length && (I(S, function(C) {
        return ip(C);
      }), x ? (ip(x), yP(x), s = !0, vP(
        Qh(x),
        Qh(S),
        w.divide,
        // Use divide on old.
        _,
        b[0],
        o
      )) : I(S, function(C) {
        return mP(C, _, b[0]);
      }));
    }
  }).updateManyToMany(function(b, O) {
    new lu(O, b, function(w) {
      return r[w].data.getId(r[w].dataIndex);
    }, function(w) {
      return i[w].data.getId(i[w].dataIndex);
    }).update(function(w, x) {
      y(b[w], O[x]);
    }).execute();
  }).execute(), s && I(e, function(b) {
    var O = b.data, w = O.hostModel, x = w && t.getViewOfSeriesModel(w), S = pv("update", w, 0);
    x && w.isAnimationEnabled() && S && S.duration > 0 && x.group.traverse(function(_) {
      _ instanceof ct && !_.animators.length && _.animateFrom({
        style: {
          opacity: 0
        }
      }, S);
    });
  });
}
function bW(n) {
  var e = n.getModel("universalTransition").get("seriesKey");
  return e || n.id;
}
function OW(n) {
  return oe(n) ? n.sort().join(",") : n;
}
function ju(n) {
  if (n.hostModel)
    return n.hostModel.getModel("universalTransition").get("divideShape");
}
function nVt(n, e) {
  var t = _e(), r = _e(), i = _e();
  I(n.oldSeries, function(s, a) {
    var l = n.oldDataGroupIds[a], u = n.oldData[a], c = bW(s), h = OW(c);
    r.set(h, {
      dataGroupId: l,
      data: u
    }), oe(c) && I(c, function(f) {
      i.set(f, {
        key: h,
        dataGroupId: l,
        data: u
      });
    });
  });
  function o(s) {
    t.get(s) && En("Duplicated seriesKey in universalTransition " + s);
  }
  return I(e.updatedSeries, function(s) {
    if (s.isUniversalTransitionEnabled() && s.isAnimationEnabled()) {
      var a = s.get("dataGroupId"), l = s.getData(), u = bW(s), c = OW(u), h = r.get(c);
      if (h)
        process.env.NODE_ENV !== "production" && o(c), t.set(c, {
          oldSeries: [{
            dataGroupId: h.dataGroupId,
            divide: ju(h.data),
            data: h.data
          }],
          newSeries: [{
            dataGroupId: a,
            divide: ju(l),
            data: l
          }]
        });
      else if (oe(u)) {
        process.env.NODE_ENV !== "production" && o(c);
        var f = [];
        I(u, function(g) {
          var v = r.get(g);
          v.data && f.push({
            dataGroupId: v.dataGroupId,
            divide: ju(v.data),
            data: v.data
          });
        }), f.length && t.set(c, {
          oldSeries: f,
          newSeries: [{
            dataGroupId: a,
            data: l,
            divide: ju(l)
          }]
        });
      } else {
        var d = i.get(u);
        if (d) {
          var p = t.get(d.key);
          p || (p = {
            oldSeries: [{
              dataGroupId: d.dataGroupId,
              data: d.data,
              divide: ju(d.data)
            }],
            newSeries: []
          }, t.set(d.key, p)), p.newSeries.push({
            dataGroupId: a,
            data: l,
            divide: ju(l)
          });
        }
      }
    }
  }), t;
}
function wW(n, e) {
  for (var t = 0; t < n.length; t++) {
    var r = e.seriesIndex != null && e.seriesIndex === n[t].seriesIndex || e.seriesId != null && e.seriesId === n[t].id;
    if (r)
      return t;
  }
}
function rVt(n, e, t, r) {
  var i = [], o = [];
  I(Kt(n.from), function(s) {
    var a = wW(e.oldSeries, s);
    a >= 0 && i.push({
      dataGroupId: e.oldDataGroupIds[a],
      data: e.oldData[a],
      // TODO can specify divideShape in transition.
      divide: ju(e.oldData[a]),
      groupIdDim: s.dimension
    });
  }), I(Kt(n.to), function(s) {
    var a = wW(t.updatedSeries, s);
    if (a >= 0) {
      var l = t.updatedSeries[a].getData();
      o.push({
        dataGroupId: e.oldDataGroupIds[a],
        data: l,
        divide: ju(l),
        groupIdDim: s.dimension
      });
    }
  }), i.length > 0 && o.length > 0 && Eie(i, o, r);
}
function iVt(n) {
  n.registerUpdateLifecycle("series:beforeupdate", function(e, t, r) {
    I(Kt(r.seriesTransition), function(i) {
      I(Kt(i.to), function(o) {
        for (var s = r.updatedSeries, a = 0; a < s.length; a++)
          (o.seriesIndex != null && o.seriesIndex === s[a].seriesIndex || o.seriesId != null && o.seriesId === s[a].id) && (s[a][Tw] = !0);
      });
    });
  }), n.registerUpdateLifecycle("series:transition", function(e, t, r) {
    var i = UBt(t);
    if (i.oldSeries && r.updatedSeries && r.optionChanged) {
      var o = r.seriesTransition;
      if (o)
        I(Kt(o), function(d) {
          rVt(d, i, r, t);
        });
      else {
        var s = nVt(i, r);
        I(s.keys(), function(d) {
          var p = s.get(d);
          Eie(p.oldSeries, p.newSeries, t);
        });
      }
      I(r.updatedSeries, function(d) {
        d[Tw] && (d[Tw] = !1);
      });
    }
    for (var a = e.getSeries(), l = i.oldSeries = [], u = i.oldDataGroupIds = [], c = i.oldData = [], h = 0; h < a.length; h++) {
      var f = a[h].getData();
      f.count() < Pie && (l.push(a[h]), u.push(a[h].get("dataGroupId")), c.push(f));
    }
  });
}
at([Q2t]);
at([R2t]);
at([cAt, TAt, zAt, CTt, QTt, RPt, hEt, UEt, xkt, kkt, Fkt, WMt, mDt, kDt, XDt, rLt, OLt, kLt, ZLt, ULt, uIt, HIt]);
at(vRt);
at(qRt);
at(Sne);
at(h$t);
at(ure);
at(y$t);
at(T$t);
at(ANt);
at(qNt);
at(Vb);
at(p3t);
at(m3t);
at(M3t);
at(F3t);
at(Y3t);
at(r5t);
at(m5t);
at(V5t);
at(gie);
at(vie);
at(cBt);
at(wie);
at(xie);
at(gBt);
at(PBt);
at(MBt);
at(iVt);
at(e2t);
export {
  SVt as $,
  IVt as A,
  CVt as B,
  YS as C,
  NVt as D,
  o4t as E,
  kVt as F,
  Ee as G,
  DVt as H,
  vVt as I,
  OVt as J,
  KVt as K,
  xVt as L,
  On as M,
  JVt as N,
  a4t as O,
  l4t as P,
  Zb as Q,
  f4t as R,
  HVt as S,
  qVt as T,
  _g as U,
  _N as V,
  VG as W,
  AVt as X,
  TVt as Y,
  VVt as Z,
  zVt as _,
  m4t as a,
  UVt as a0,
  Cg as a1,
  Yy as a2,
  nPe as a3,
  Xy as a4,
  u4t as a5,
  HG as a6,
  h4t as a7,
  S4t as a8,
  dOe as a9,
  k4t as aA,
  p4t as aB,
  Ne as aC,
  Yt as aD,
  P4t as aE,
  _Vt as aF,
  j2 as aG,
  Pn as aH,
  My as aI,
  Fr as aJ,
  Hn as aK,
  gVt as aL,
  cVt as aM,
  eb as aN,
  FVt as aO,
  WS as aP,
  QVt as aQ,
  bD as aR,
  Ahe as aS,
  ha as aT,
  Wue as aU,
  Nw as aV,
  pVt as aW,
  lVt as aX,
  hVt as aY,
  y4t as aZ,
  ufe as aa,
  fOe as ab,
  g4t as ac,
  ZVt as ad,
  K0e as ae,
  EVt as af,
  i4t as ag,
  e4t as ah,
  GVt as ai,
  WVt as aj,
  M4t as ak,
  dVt as al,
  Yhe as am,
  fVt as an,
  LVt as ao,
  RVt as ap,
  c4t as aq,
  r4t as ar,
  kfe as as,
  BVt as at,
  qfe as au,
  Z7 as av,
  sb as aw,
  XVt as ax,
  jVt as ay,
  E4t as az,
  jw as b,
  s4t as c,
  FP as d,
  bVt as e,
  mVt as f,
  as as g,
  $Vt as h,
  yVt as i,
  uVt as j,
  Dt as k,
  wVt as l,
  t4t as m,
  rg as n,
  ob as o,
  qG as p,
  CN as q,
  PVt as r,
  MVt as s,
  n4t as t,
  v4t as u,
  vde as v,
  d4t as w,
  DD as x,
  jn as y,
  x4t as z
};
