var L4 = Object.defineProperty;
var I4 = (n, e, t) => e in n ? L4(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t;
var ni = (n, e, t) => (I4(n, typeof e != "symbol" ? e + "" : e, t), t), tv = (n, e, t) => {
  if (!e.has(n))
    throw TypeError("Cannot " + t);
};
var Q = (n, e, t) => (tv(n, e, "read from private field"), t ? t.call(n) : e.get(n)), ht = (n, e, t) => {
  if (e.has(n))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(n) : e.set(n, t);
}, Ge = (n, e, t, i) => (tv(n, e, "write to private field"), i ? i.call(n, t) : e.set(n, t), t);
var Ff = (n, e, t, i) => ({
  set _(s) {
    Ge(n, e, s, t);
  },
  get _() {
    return Q(n, e, i);
  }
}), ze = (n, e, t) => (tv(n, e, "access private method"), t);
import "../css/vendor-BycN2tkO.css";
import { defineComponent as F, openBlock as R, createElementBlock as V, createElementVNode as Z, shallowRef as Ln, watchEffect as Vs, readonly as n1, ref as D, watch as ne, getCurrentScope as ME, onScopeDispose as i1, unref as y, getCurrentInstance as Xe, onMounted as qe, nextTick as $e, computed as $, warn as B4, isVNode as lo, onBeforeUnmount as Gn, inject as ke, isRef as Fi, onBeforeMount as s1, provide as ft, renderSlot as de, mergeProps as ki, toRef as ks, onUnmounted as Vu, reactive as Gt, toRefs as Ws, normalizeClass as L, onUpdated as Zl, createVNode as K, Fragment as Tt, useSlots as go, withCtx as Y, createBlock as ie, resolveDynamicComponent as yt, normalizeStyle as Qe, createTextVNode as Xn, toDisplayString as xe, createCommentVNode as G, TransitionGroup as RE, useAttrs as NE, withDirectives as it, withModifiers as Le, vShow as Qt, Transition as mo, cloneVNode as Q4, Text as DE, Comment as LE, Teleport as jm, onDeactivated as z4, toRaw as vd, vModelCheckbox as Tg, vModelRadio as IE, h as Re, resolveComponent as nt, renderList as oi, onBeforeUpdate as j4, withKeys as Ut, vModelText as r1, toHandlers as V4, createSlots as _g, resolveDirective as Vm, normalizeProps as F4, guardReactiveProps as Z4, render as $l, shallowReactive as q4, customRef as W4, markRaw as H4, createApp as X4 } from "vue";
var BE = typeof global == "object" && global && global.Object === Object && global, Y4 = typeof self == "object" && self && self.Object === Object && self, Cr = BE || Y4 || Function("return this")(), Hs = Cr.Symbol, QE = Object.prototype, U4 = QE.hasOwnProperty, G4 = QE.toString, vh = Hs ? Hs.toStringTag : void 0;
function K4(n) {
  var e = U4.call(n, vh), t = n[vh];
  try {
    n[vh] = void 0;
    var i = !0;
  } catch {
  }
  var s = G4.call(n);
  return i && (e ? n[vh] = t : delete n[vh]), s;
}
var J4 = Object.prototype, eL = J4.toString;
function tL(n) {
  return eL.call(n);
}
var nL = "[object Null]", iL = "[object Undefined]", Px = Hs ? Hs.toStringTag : void 0;
function Ho(n) {
  return n == null ? n === void 0 ? iL : nL : Px && Px in Object(n) ? K4(n) : tL(n);
}
function Xs(n) {
  return n != null && typeof n == "object";
}
var sL = "[object Symbol]";
function ao(n) {
  return typeof n == "symbol" || Xs(n) && Ho(n) == sL;
}
function Aa(n, e) {
  for (var t = -1, i = n == null ? 0 : n.length, s = Array(i); ++t < i; )
    s[t] = e(n[t], t, n);
  return s;
}
var li = Array.isArray, rL = 1 / 0, Ex = Hs ? Hs.prototype : void 0, Ax = Ex ? Ex.toString : void 0;
function zE(n) {
  if (typeof n == "string")
    return n;
  if (li(n))
    return Aa(n, zE) + "";
  if (ao(n))
    return Ax ? Ax.call(n) : "";
  var e = n + "";
  return e == "0" && 1 / n == -rL ? "-0" : e;
}
var oL = /\s/;
function lL(n) {
  for (var e = n.length; e-- && oL.test(n.charAt(e)); )
    ;
  return e;
}
var aL = /^\s+/;
function cL(n) {
  return n && n.slice(0, lL(n) + 1).replace(aL, "");
}
function wn(n) {
  var e = typeof n;
  return n != null && (e == "object" || e == "function");
}
var $x = NaN, uL = /^[-+]0x[0-9a-f]+$/i, hL = /^0b[01]+$/i, dL = /^0o[0-7]+$/i, fL = parseInt;
function Rc(n) {
  if (typeof n == "number")
    return n;
  if (ao(n))
    return $x;
  if (wn(n)) {
    var e = typeof n.valueOf == "function" ? n.valueOf() : n;
    n = wn(e) ? e + "" : e;
  }
  if (typeof n != "string")
    return n === 0 ? n : +n;
  n = cL(n);
  var t = hL.test(n);
  return t || dL.test(n) ? fL(n.slice(2), t ? 2 : 8) : uL.test(n) ? $x : +n;
}
var Tx = 1 / 0, pL = 17976931348623157e292;
function gL(n) {
  if (!n)
    return n === 0 ? n : 0;
  if (n = Rc(n), n === Tx || n === -Tx) {
    var e = n < 0 ? -1 : 1;
    return e * pL;
  }
  return n === n ? n : 0;
}
function o1(n) {
  var e = gL(n), t = e % 1;
  return e === e ? t ? e - t : e : 0;
}
function Fu(n) {
  return n;
}
var mL = "[object AsyncFunction]", vL = "[object Function]", bL = "[object GeneratorFunction]", yL = "[object Proxy]";
function l1(n) {
  if (!wn(n))
    return !1;
  var e = Ho(n);
  return e == vL || e == bL || e == mL || e == yL;
}
var nv = Cr["__core-js_shared__"], _x = function() {
  var n = /[^.]+$/.exec(nv && nv.keys && nv.keys.IE_PROTO || "");
  return n ? "Symbol(src)_1." + n : "";
}();
function OL(n) {
  return !!_x && _x in n;
}
var wL = Function.prototype, xL = wL.toString;
function Ua(n) {
  if (n != null) {
    try {
      return xL.call(n);
    } catch {
    }
    try {
      return n + "";
    } catch {
    }
  }
  return "";
}
var SL = /[\\^$.*+?()[\]{}|]/g, CL = /^\[object .+?Constructor\]$/, kL = Function.prototype, PL = Object.prototype, EL = kL.toString, AL = PL.hasOwnProperty, $L = RegExp(
  "^" + EL.call(AL).replace(SL, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function TL(n) {
  if (!wn(n) || OL(n))
    return !1;
  var e = l1(n) ? $L : CL;
  return e.test(Ua(n));
}
function _L(n, e) {
  return n == null ? void 0 : n[e];
}
function Ga(n, e) {
  var t = _L(n, e);
  return TL(t) ? t : void 0;
}
var Ab = Ga(Cr, "WeakMap"), Mx = Object.create, ML = /* @__PURE__ */ function() {
  function n() {
  }
  return function(e) {
    if (!wn(e))
      return {};
    if (Mx)
      return Mx(e);
    n.prototype = e;
    var t = new n();
    return n.prototype = void 0, t;
  };
}();
function jE(n, e, t) {
  switch (t.length) {
    case 0:
      return n.call(e);
    case 1:
      return n.call(e, t[0]);
    case 2:
      return n.call(e, t[0], t[1]);
    case 3:
      return n.call(e, t[0], t[1], t[2]);
  }
  return n.apply(e, t);
}
function RL() {
}
function VE(n, e) {
  var t = -1, i = n.length;
  for (e || (e = Array(i)); ++t < i; )
    e[t] = n[t];
  return e;
}
var NL = 800, DL = 16, LL = Date.now;
function IL(n) {
  var e = 0, t = 0;
  return function() {
    var i = LL(), s = DL - (i - t);
    if (t = i, s > 0) {
      if (++e >= NL)
        return arguments[0];
    } else
      e = 0;
    return n.apply(void 0, arguments);
  };
}
function BL(n) {
  return function() {
    return n;
  };
}
var Mg = function() {
  try {
    var n = Ga(Object, "defineProperty");
    return n({}, "", {}), n;
  } catch {
  }
}(), QL = Mg ? function(n, e) {
  return Mg(n, "toString", {
    configurable: !0,
    enumerable: !1,
    value: BL(e),
    writable: !0
  });
} : Fu;
const zL = QL;
var FE = IL(zL);
function jL(n, e) {
  for (var t = -1, i = n == null ? 0 : n.length; ++t < i && e(n[t], t, n) !== !1; )
    ;
  return n;
}
function a1(n, e, t, i) {
  for (var s = n.length, r = t + (i ? 1 : -1); i ? r-- : ++r < s; )
    if (e(n[r], r, n))
      return r;
  return -1;
}
function VL(n) {
  return n !== n;
}
function FL(n, e, t) {
  for (var i = t - 1, s = n.length; ++i < s; )
    if (n[i] === e)
      return i;
  return -1;
}
function ZL(n, e, t) {
  return e === e ? FL(n, e, t) : a1(n, VL, t);
}
function ZE(n, e) {
  var t = n == null ? 0 : n.length;
  return !!t && ZL(n, e, 0) > -1;
}
var qL = 9007199254740991, WL = /^(?:0|[1-9]\d*)$/;
function Fm(n, e) {
  var t = typeof n;
  return e = e ?? qL, !!e && (t == "number" || t != "symbol" && WL.test(n)) && n > -1 && n % 1 == 0 && n < e;
}
function Zm(n, e, t) {
  e == "__proto__" && Mg ? Mg(n, e, {
    configurable: !0,
    enumerable: !0,
    value: t,
    writable: !0
  }) : n[e] = t;
}
function Zu(n, e) {
  return n === e || n !== n && e !== e;
}
var HL = Object.prototype, XL = HL.hasOwnProperty;
function qm(n, e, t) {
  var i = n[e];
  (!(XL.call(n, e) && Zu(i, t)) || t === void 0 && !(e in n)) && Zm(n, e, t);
}
function Ka(n, e, t, i) {
  var s = !t;
  t || (t = {});
  for (var r = -1, o = e.length; ++r < o; ) {
    var l = e[r], a = i ? i(t[l], n[l], l, t, n) : void 0;
    a === void 0 && (a = n[l]), s ? Zm(t, l, a) : qm(t, l, a);
  }
  return t;
}
var Rx = Math.max;
function qE(n, e, t) {
  return e = Rx(e === void 0 ? n.length - 1 : e, 0), function() {
    for (var i = arguments, s = -1, r = Rx(i.length - e, 0), o = Array(r); ++s < r; )
      o[s] = i[e + s];
    s = -1;
    for (var l = Array(e + 1); ++s < e; )
      l[s] = i[s];
    return l[e] = t(o), jE(n, this, l);
  };
}
function qu(n, e) {
  return FE(qE(n, e, Fu), n + "");
}
var YL = 9007199254740991;
function c1(n) {
  return typeof n == "number" && n > -1 && n % 1 == 0 && n <= YL;
}
function ql(n) {
  return n != null && c1(n.length) && !l1(n);
}
function bd(n, e, t) {
  if (!wn(t))
    return !1;
  var i = typeof e;
  return (i == "number" ? ql(t) && Fm(e, t.length) : i == "string" && e in t) ? Zu(t[e], n) : !1;
}
function u1(n) {
  return qu(function(e, t) {
    var i = -1, s = t.length, r = s > 1 ? t[s - 1] : void 0, o = s > 2 ? t[2] : void 0;
    for (r = n.length > 3 && typeof r == "function" ? (s--, r) : void 0, o && bd(t[0], t[1], o) && (r = s < 3 ? void 0 : r, s = 1), e = Object(e); ++i < s; ) {
      var l = t[i];
      l && n(e, l, i, r);
    }
    return e;
  });
}
var UL = Object.prototype;
function df(n) {
  var e = n && n.constructor, t = typeof e == "function" && e.prototype || UL;
  return n === t;
}
function GL(n, e) {
  for (var t = -1, i = Array(n); ++t < n; )
    i[t] = e(t);
  return i;
}
var KL = "[object Arguments]";
function Nx(n) {
  return Xs(n) && Ho(n) == KL;
}
var WE = Object.prototype, JL = WE.hasOwnProperty, eI = WE.propertyIsEnumerable, eu = Nx(/* @__PURE__ */ function() {
  return arguments;
}()) ? Nx : function(n) {
  return Xs(n) && JL.call(n, "callee") && !eI.call(n, "callee");
};
function tI() {
  return !1;
}
var HE = typeof exports == "object" && exports && !exports.nodeType && exports, Dx = HE && typeof module == "object" && module && !module.nodeType && module, nI = Dx && Dx.exports === HE, Lx = nI ? Cr.Buffer : void 0, iI = Lx ? Lx.isBuffer : void 0, tu = iI || tI, sI = "[object Arguments]", rI = "[object Array]", oI = "[object Boolean]", lI = "[object Date]", aI = "[object Error]", cI = "[object Function]", uI = "[object Map]", hI = "[object Number]", dI = "[object Object]", fI = "[object RegExp]", pI = "[object Set]", gI = "[object String]", mI = "[object WeakMap]", vI = "[object ArrayBuffer]", bI = "[object DataView]", yI = "[object Float32Array]", OI = "[object Float64Array]", wI = "[object Int8Array]", xI = "[object Int16Array]", SI = "[object Int32Array]", CI = "[object Uint8Array]", kI = "[object Uint8ClampedArray]", PI = "[object Uint16Array]", EI = "[object Uint32Array]", Jt = {};
Jt[yI] = Jt[OI] = Jt[wI] = Jt[xI] = Jt[SI] = Jt[CI] = Jt[kI] = Jt[PI] = Jt[EI] = !0;
Jt[sI] = Jt[rI] = Jt[vI] = Jt[oI] = Jt[bI] = Jt[lI] = Jt[aI] = Jt[cI] = Jt[uI] = Jt[hI] = Jt[dI] = Jt[fI] = Jt[pI] = Jt[gI] = Jt[mI] = !1;
function AI(n) {
  return Xs(n) && c1(n.length) && !!Jt[Ho(n)];
}
function ff(n) {
  return function(e) {
    return n(e);
  };
}
var XE = typeof exports == "object" && exports && !exports.nodeType && exports, Fh = XE && typeof module == "object" && module && !module.nodeType && module, $I = Fh && Fh.exports === XE, iv = $I && BE.process, nu = function() {
  try {
    var n = Fh && Fh.require && Fh.require("util").types;
    return n || iv && iv.binding && iv.binding("util");
  } catch {
  }
}(), Ix = nu && nu.isTypedArray, TI = Ix ? ff(Ix) : AI;
const Wm = TI;
var _I = Object.prototype, MI = _I.hasOwnProperty;
function YE(n, e) {
  var t = li(n), i = !t && eu(n), s = !t && !i && tu(n), r = !t && !i && !s && Wm(n), o = t || i || s || r, l = o ? GL(n.length, String) : [], a = l.length;
  for (var c in n)
    (e || MI.call(n, c)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (c == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (c == "offset" || c == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    r && (c == "buffer" || c == "byteLength" || c == "byteOffset") || // Skip index properties.
    Fm(c, a))) && l.push(c);
  return l;
}
function UE(n, e) {
  return function(t) {
    return n(e(t));
  };
}
var RI = UE(Object.keys, Object), NI = Object.prototype, DI = NI.hasOwnProperty;
function GE(n) {
  if (!df(n))
    return RI(n);
  var e = [];
  for (var t in Object(n))
    DI.call(n, t) && t != "constructor" && e.push(t);
  return e;
}
function Wu(n) {
  return ql(n) ? YE(n) : GE(n);
}
var LI = Object.prototype, II = LI.hasOwnProperty, BI = u1(function(n, e) {
  if (df(e) || ql(e)) {
    Ka(e, Wu(e), n);
    return;
  }
  for (var t in e)
    II.call(e, t) && qm(n, t, e[t]);
});
const AYe = BI;
function QI(n) {
  var e = [];
  if (n != null)
    for (var t in Object(n))
      e.push(t);
  return e;
}
var zI = Object.prototype, jI = zI.hasOwnProperty;
function VI(n) {
  if (!wn(n))
    return QI(n);
  var e = df(n), t = [];
  for (var i in n)
    i == "constructor" && (e || !jI.call(n, i)) || t.push(i);
  return t;
}
function Hu(n) {
  return ql(n) ? YE(n, !0) : VI(n);
}
var FI = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ZI = /^\w*$/;
function h1(n, e) {
  if (li(n))
    return !1;
  var t = typeof n;
  return t == "number" || t == "symbol" || t == "boolean" || n == null || ao(n) ? !0 : ZI.test(n) || !FI.test(n) || e != null && n in Object(e);
}
var yd = Ga(Object, "create");
function qI() {
  this.__data__ = yd ? yd(null) : {}, this.size = 0;
}
function WI(n) {
  var e = this.has(n) && delete this.__data__[n];
  return this.size -= e ? 1 : 0, e;
}
var HI = "__lodash_hash_undefined__", XI = Object.prototype, YI = XI.hasOwnProperty;
function UI(n) {
  var e = this.__data__;
  if (yd) {
    var t = e[n];
    return t === HI ? void 0 : t;
  }
  return YI.call(e, n) ? e[n] : void 0;
}
var GI = Object.prototype, KI = GI.hasOwnProperty;
function JI(n) {
  var e = this.__data__;
  return yd ? e[n] !== void 0 : KI.call(e, n);
}
var e5 = "__lodash_hash_undefined__";
function t5(n, e) {
  var t = this.__data__;
  return this.size += this.has(n) ? 0 : 1, t[n] = yd && e === void 0 ? e5 : e, this;
}
function La(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var i = n[e];
    this.set(i[0], i[1]);
  }
}
La.prototype.clear = qI;
La.prototype.delete = WI;
La.prototype.get = UI;
La.prototype.has = JI;
La.prototype.set = t5;
function n5() {
  this.__data__ = [], this.size = 0;
}
function Hm(n, e) {
  for (var t = n.length; t--; )
    if (Zu(n[t][0], e))
      return t;
  return -1;
}
var i5 = Array.prototype, s5 = i5.splice;
function r5(n) {
  var e = this.__data__, t = Hm(e, n);
  if (t < 0)
    return !1;
  var i = e.length - 1;
  return t == i ? e.pop() : s5.call(e, t, 1), --this.size, !0;
}
function o5(n) {
  var e = this.__data__, t = Hm(e, n);
  return t < 0 ? void 0 : e[t][1];
}
function l5(n) {
  return Hm(this.__data__, n) > -1;
}
function a5(n, e) {
  var t = this.__data__, i = Hm(t, n);
  return i < 0 ? (++this.size, t.push([n, e])) : t[i][1] = e, this;
}
function Xo(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var i = n[e];
    this.set(i[0], i[1]);
  }
}
Xo.prototype.clear = n5;
Xo.prototype.delete = r5;
Xo.prototype.get = o5;
Xo.prototype.has = l5;
Xo.prototype.set = a5;
var Od = Ga(Cr, "Map");
function c5() {
  this.size = 0, this.__data__ = {
    hash: new La(),
    map: new (Od || Xo)(),
    string: new La()
  };
}
function u5(n) {
  var e = typeof n;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? n !== "__proto__" : n === null;
}
function Xm(n, e) {
  var t = n.__data__;
  return u5(e) ? t[typeof e == "string" ? "string" : "hash"] : t.map;
}
function h5(n) {
  var e = Xm(this, n).delete(n);
  return this.size -= e ? 1 : 0, e;
}
function d5(n) {
  return Xm(this, n).get(n);
}
function f5(n) {
  return Xm(this, n).has(n);
}
function p5(n, e) {
  var t = Xm(this, n), i = t.size;
  return t.set(n, e), this.size += t.size == i ? 0 : 1, this;
}
function Yo(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.clear(); ++e < t; ) {
    var i = n[e];
    this.set(i[0], i[1]);
  }
}
Yo.prototype.clear = c5;
Yo.prototype.delete = h5;
Yo.prototype.get = d5;
Yo.prototype.has = f5;
Yo.prototype.set = p5;
var g5 = "Expected a function";
function Ym(n, e) {
  if (typeof n != "function" || e != null && typeof e != "function")
    throw new TypeError(g5);
  var t = function() {
    var i = arguments, s = e ? e.apply(this, i) : i[0], r = t.cache;
    if (r.has(s))
      return r.get(s);
    var o = n.apply(this, i);
    return t.cache = r.set(s, o) || r, o;
  };
  return t.cache = new (Ym.Cache || Yo)(), t;
}
Ym.Cache = Yo;
var m5 = 500;
function v5(n) {
  var e = Ym(n, function(i) {
    return t.size === m5 && t.clear(), i;
  }), t = e.cache;
  return e;
}
var b5 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, y5 = /\\(\\)?/g, O5 = v5(function(n) {
  var e = [];
  return n.charCodeAt(0) === 46 && e.push(""), n.replace(b5, function(t, i, s, r) {
    e.push(s ? r.replace(y5, "$1") : i || t);
  }), e;
});
function pf(n) {
  return n == null ? "" : zE(n);
}
function Xu(n, e) {
  return li(n) ? n : h1(n, e) ? [n] : O5(pf(n));
}
var w5 = 1 / 0;
function Yu(n) {
  if (typeof n == "string" || ao(n))
    return n;
  var e = n + "";
  return e == "0" && 1 / n == -w5 ? "-0" : e;
}
function gf(n, e) {
  e = Xu(e, n);
  for (var t = 0, i = e.length; n != null && t < i; )
    n = n[Yu(e[t++])];
  return t && t == i ? n : void 0;
}
function on(n, e, t) {
  var i = n == null ? void 0 : gf(n, e);
  return i === void 0 ? t : i;
}
function d1(n, e) {
  for (var t = -1, i = e.length, s = n.length; ++t < i; )
    n[s + t] = e[t];
  return n;
}
var Bx = Hs ? Hs.isConcatSpreadable : void 0;
function x5(n) {
  return li(n) || eu(n) || !!(Bx && n && n[Bx]);
}
function Ja(n, e, t, i, s) {
  var r = -1, o = n.length;
  for (t || (t = x5), s || (s = []); ++r < o; ) {
    var l = n[r];
    e > 0 && t(l) ? e > 1 ? Ja(l, e - 1, t, i, s) : d1(s, l) : i || (s[s.length] = l);
  }
  return s;
}
function S5(n) {
  var e = n == null ? 0 : n.length;
  return e ? Ja(n, 1) : [];
}
function KE(n) {
  return FE(qE(n, void 0, S5), n + "");
}
var f1 = UE(Object.getPrototypeOf, Object), C5 = "[object Object]", k5 = Function.prototype, P5 = Object.prototype, JE = k5.toString, E5 = P5.hasOwnProperty, A5 = JE.call(Object);
function kr(n) {
  if (!Xs(n) || Ho(n) != C5)
    return !1;
  var e = f1(n);
  if (e === null)
    return !0;
  var t = E5.call(e, "constructor") && e.constructor;
  return typeof t == "function" && t instanceof t && JE.call(t) == A5;
}
function p1(n, e, t) {
  var i = -1, s = n.length;
  e < 0 && (e = -e > s ? 0 : s + e), t = t > s ? s : t, t < 0 && (t += s), s = e > t ? 0 : t - e >>> 0, e >>>= 0;
  for (var r = Array(s); ++i < s; )
    r[i] = n[i + e];
  return r;
}
function $5(n, e, t) {
  var i = n.length;
  return t = t === void 0 ? i : t, !e && t >= i ? n : p1(n, e, t);
}
var T5 = "\\ud800-\\udfff", _5 = "\\u0300-\\u036f", M5 = "\\ufe20-\\ufe2f", R5 = "\\u20d0-\\u20ff", N5 = _5 + M5 + R5, D5 = "\\ufe0e\\ufe0f", L5 = "\\u200d", I5 = RegExp("[" + L5 + T5 + N5 + D5 + "]");
function eA(n) {
  return I5.test(n);
}
function B5(n) {
  return n.split("");
}
var tA = "\\ud800-\\udfff", Q5 = "\\u0300-\\u036f", z5 = "\\ufe20-\\ufe2f", j5 = "\\u20d0-\\u20ff", V5 = Q5 + z5 + j5, F5 = "\\ufe0e\\ufe0f", Z5 = "[" + tA + "]", $b = "[" + V5 + "]", Tb = "\\ud83c[\\udffb-\\udfff]", q5 = "(?:" + $b + "|" + Tb + ")", nA = "[^" + tA + "]", iA = "(?:\\ud83c[\\udde6-\\uddff]){2}", sA = "[\\ud800-\\udbff][\\udc00-\\udfff]", W5 = "\\u200d", rA = q5 + "?", oA = "[" + F5 + "]?", H5 = "(?:" + W5 + "(?:" + [nA, iA, sA].join("|") + ")" + oA + rA + ")*", X5 = oA + rA + H5, Y5 = "(?:" + [nA + $b + "?", $b, iA, sA, Z5].join("|") + ")", U5 = RegExp(Tb + "(?=" + Tb + ")|" + Y5 + X5, "g");
function G5(n) {
  return n.match(U5) || [];
}
function K5(n) {
  return eA(n) ? G5(n) : B5(n);
}
function lA(n) {
  return function(e) {
    e = pf(e);
    var t = eA(e) ? K5(e) : void 0, i = t ? t[0] : e.charAt(0), s = t ? $5(t, 1).join("") : e.slice(1);
    return i[n]() + s;
  };
}
var Rg = lA("toUpperCase");
function J5(n) {
  return Rg(pf(n).toLowerCase());
}
function e8(n, e, t, i) {
  var s = -1, r = n == null ? 0 : n.length;
  for (i && r && (t = n[++s]); ++s < r; )
    t = e(t, n[s], s, n);
  return t;
}
function t8(n) {
  return function(e) {
    return n == null ? void 0 : n[e];
  };
}
var n8 = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "s"
}, i8 = t8(n8);
const s8 = i8;
var r8 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, o8 = "\\u0300-\\u036f", l8 = "\\ufe20-\\ufe2f", a8 = "\\u20d0-\\u20ff", c8 = o8 + l8 + a8, u8 = "[" + c8 + "]", h8 = RegExp(u8, "g");
function d8(n) {
  return n = pf(n), n && n.replace(r8, s8).replace(h8, "");
}
var f8 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function p8(n) {
  return n.match(f8) || [];
}
var g8 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function m8(n) {
  return g8.test(n);
}
var aA = "\\ud800-\\udfff", v8 = "\\u0300-\\u036f", b8 = "\\ufe20-\\ufe2f", y8 = "\\u20d0-\\u20ff", O8 = v8 + b8 + y8, cA = "\\u2700-\\u27bf", uA = "a-z\\xdf-\\xf6\\xf8-\\xff", w8 = "\\xac\\xb1\\xd7\\xf7", x8 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", S8 = "\\u2000-\\u206f", C8 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", hA = "A-Z\\xc0-\\xd6\\xd8-\\xde", k8 = "\\ufe0e\\ufe0f", dA = w8 + x8 + S8 + C8, fA = "['’]", Qx = "[" + dA + "]", P8 = "[" + O8 + "]", pA = "\\d+", E8 = "[" + cA + "]", gA = "[" + uA + "]", mA = "[^" + aA + dA + pA + cA + uA + hA + "]", A8 = "\\ud83c[\\udffb-\\udfff]", $8 = "(?:" + P8 + "|" + A8 + ")", T8 = "[^" + aA + "]", vA = "(?:\\ud83c[\\udde6-\\uddff]){2}", bA = "[\\ud800-\\udbff][\\udc00-\\udfff]", wc = "[" + hA + "]", _8 = "\\u200d", zx = "(?:" + gA + "|" + mA + ")", M8 = "(?:" + wc + "|" + mA + ")", jx = "(?:" + fA + "(?:d|ll|m|re|s|t|ve))?", Vx = "(?:" + fA + "(?:D|LL|M|RE|S|T|VE))?", yA = $8 + "?", OA = "[" + k8 + "]?", R8 = "(?:" + _8 + "(?:" + [T8, vA, bA].join("|") + ")" + OA + yA + ")*", N8 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", D8 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", L8 = OA + yA + R8, I8 = "(?:" + [E8, vA, bA].join("|") + ")" + L8, B8 = RegExp([
  wc + "?" + gA + "+" + jx + "(?=" + [Qx, wc, "$"].join("|") + ")",
  M8 + "+" + Vx + "(?=" + [Qx, wc + zx, "$"].join("|") + ")",
  wc + "?" + zx + "+" + jx,
  wc + "+" + Vx,
  D8,
  N8,
  pA,
  I8
].join("|"), "g");
function Q8(n) {
  return n.match(B8) || [];
}
function z8(n, e, t) {
  return n = pf(n), e = t ? void 0 : e, e === void 0 ? m8(n) ? Q8(n) : p8(n) : n.match(e) || [];
}
var j8 = "['’]", V8 = RegExp(j8, "g");
function g1(n) {
  return function(e) {
    return e8(z8(d8(e).replace(V8, "")), n, "");
  };
}
var Um = g1(function(n, e, t) {
  return e = e.toLowerCase(), n + (t ? J5(e) : e);
});
function wd() {
  if (!arguments.length)
    return [];
  var n = arguments[0];
  return li(n) ? n : [n];
}
var F8 = Math.ceil, Z8 = Math.max;
function $Ye(n, e, t) {
  (t ? bd(n, e, t) : e === void 0) ? e = 1 : e = Z8(o1(e), 0);
  var i = n == null ? 0 : n.length;
  if (!i || e < 1)
    return [];
  for (var s = 0, r = 0, o = Array(F8(i / e)); s < i; )
    o[r++] = p1(n, s, s += e);
  return o;
}
function q8(n, e, t) {
  return n === n && (t !== void 0 && (n = n <= t ? n : t), e !== void 0 && (n = n >= e ? n : e)), n;
}
function is(n, e, t) {
  return t === void 0 && (t = e, e = void 0), t !== void 0 && (t = Rc(t), t = t === t ? t : 0), e !== void 0 && (e = Rc(e), e = e === e ? e : 0), q8(Rc(n), e, t);
}
function W8() {
  this.__data__ = new Xo(), this.size = 0;
}
function H8(n) {
  var e = this.__data__, t = e.delete(n);
  return this.size = e.size, t;
}
function X8(n) {
  return this.__data__.get(n);
}
function Y8(n) {
  return this.__data__.has(n);
}
var U8 = 200;
function G8(n, e) {
  var t = this.__data__;
  if (t instanceof Xo) {
    var i = t.__data__;
    if (!Od || i.length < U8 - 1)
      return i.push([n, e]), this.size = ++t.size, this;
    t = this.__data__ = new Yo(i);
  }
  return t.set(n, e), this.size = t.size, this;
}
function vr(n) {
  var e = this.__data__ = new Xo(n);
  this.size = e.size;
}
vr.prototype.clear = W8;
vr.prototype.delete = H8;
vr.prototype.get = X8;
vr.prototype.has = Y8;
vr.prototype.set = G8;
function K8(n, e) {
  return n && Ka(e, Wu(e), n);
}
function J8(n, e) {
  return n && Ka(e, Hu(e), n);
}
var wA = typeof exports == "object" && exports && !exports.nodeType && exports, Fx = wA && typeof module == "object" && module && !module.nodeType && module, e6 = Fx && Fx.exports === wA, Zx = e6 ? Cr.Buffer : void 0, qx = Zx ? Zx.allocUnsafe : void 0;
function xA(n, e) {
  if (e)
    return n.slice();
  var t = n.length, i = qx ? qx(t) : new n.constructor(t);
  return n.copy(i), i;
}
function t6(n, e) {
  for (var t = -1, i = n == null ? 0 : n.length, s = 0, r = []; ++t < i; ) {
    var o = n[t];
    e(o, t, n) && (r[s++] = o);
  }
  return r;
}
function SA() {
  return [];
}
var n6 = Object.prototype, i6 = n6.propertyIsEnumerable, Wx = Object.getOwnPropertySymbols, m1 = Wx ? function(n) {
  return n == null ? [] : (n = Object(n), t6(Wx(n), function(e) {
    return i6.call(n, e);
  }));
} : SA;
function s6(n, e) {
  return Ka(n, m1(n), e);
}
var r6 = Object.getOwnPropertySymbols, CA = r6 ? function(n) {
  for (var e = []; n; )
    d1(e, m1(n)), n = f1(n);
  return e;
} : SA;
function o6(n, e) {
  return Ka(n, CA(n), e);
}
function kA(n, e, t) {
  var i = e(n);
  return li(n) ? i : d1(i, t(n));
}
function _b(n) {
  return kA(n, Wu, m1);
}
function PA(n) {
  return kA(n, Hu, CA);
}
var Mb = Ga(Cr, "DataView"), Rb = Ga(Cr, "Promise"), Nc = Ga(Cr, "Set"), Hx = "[object Map]", l6 = "[object Object]", Xx = "[object Promise]", Yx = "[object Set]", Ux = "[object WeakMap]", Gx = "[object DataView]", a6 = Ua(Mb), c6 = Ua(Od), u6 = Ua(Rb), h6 = Ua(Nc), d6 = Ua(Ab), oa = Ho;
(Mb && oa(new Mb(new ArrayBuffer(1))) != Gx || Od && oa(new Od()) != Hx || Rb && oa(Rb.resolve()) != Xx || Nc && oa(new Nc()) != Yx || Ab && oa(new Ab()) != Ux) && (oa = function(n) {
  var e = Ho(n), t = e == l6 ? n.constructor : void 0, i = t ? Ua(t) : "";
  if (i)
    switch (i) {
      case a6:
        return Gx;
      case c6:
        return Hx;
      case u6:
        return Xx;
      case h6:
        return Yx;
      case d6:
        return Ux;
    }
  return e;
});
const iu = oa;
var f6 = Object.prototype, p6 = f6.hasOwnProperty;
function g6(n) {
  var e = n.length, t = new n.constructor(e);
  return e && typeof n[0] == "string" && p6.call(n, "index") && (t.index = n.index, t.input = n.input), t;
}
var Ng = Cr.Uint8Array;
function v1(n) {
  var e = new n.constructor(n.byteLength);
  return new Ng(e).set(new Ng(n)), e;
}
function m6(n, e) {
  var t = e ? v1(n.buffer) : n.buffer;
  return new n.constructor(t, n.byteOffset, n.byteLength);
}
var v6 = /\w*$/;
function b6(n) {
  var e = new n.constructor(n.source, v6.exec(n));
  return e.lastIndex = n.lastIndex, e;
}
var Kx = Hs ? Hs.prototype : void 0, Jx = Kx ? Kx.valueOf : void 0;
function y6(n) {
  return Jx ? Object(Jx.call(n)) : {};
}
function EA(n, e) {
  var t = e ? v1(n.buffer) : n.buffer;
  return new n.constructor(t, n.byteOffset, n.length);
}
var O6 = "[object Boolean]", w6 = "[object Date]", x6 = "[object Map]", S6 = "[object Number]", C6 = "[object RegExp]", k6 = "[object Set]", P6 = "[object String]", E6 = "[object Symbol]", A6 = "[object ArrayBuffer]", $6 = "[object DataView]", T6 = "[object Float32Array]", _6 = "[object Float64Array]", M6 = "[object Int8Array]", R6 = "[object Int16Array]", N6 = "[object Int32Array]", D6 = "[object Uint8Array]", L6 = "[object Uint8ClampedArray]", I6 = "[object Uint16Array]", B6 = "[object Uint32Array]";
function Q6(n, e, t) {
  var i = n.constructor;
  switch (e) {
    case A6:
      return v1(n);
    case O6:
    case w6:
      return new i(+n);
    case $6:
      return m6(n, t);
    case T6:
    case _6:
    case M6:
    case R6:
    case N6:
    case D6:
    case L6:
    case I6:
    case B6:
      return EA(n, t);
    case x6:
      return new i();
    case S6:
    case P6:
      return new i(n);
    case C6:
      return b6(n);
    case k6:
      return new i();
    case E6:
      return y6(n);
  }
}
function AA(n) {
  return typeof n.constructor == "function" && !df(n) ? ML(f1(n)) : {};
}
var z6 = "[object Map]";
function j6(n) {
  return Xs(n) && iu(n) == z6;
}
var eS = nu && nu.isMap, V6 = eS ? ff(eS) : j6, F6 = "[object Set]";
function Z6(n) {
  return Xs(n) && iu(n) == F6;
}
var tS = nu && nu.isSet, q6 = tS ? ff(tS) : Z6, W6 = 1, H6 = 2, X6 = 4, $A = "[object Arguments]", Y6 = "[object Array]", U6 = "[object Boolean]", G6 = "[object Date]", K6 = "[object Error]", TA = "[object Function]", J6 = "[object GeneratorFunction]", eB = "[object Map]", tB = "[object Number]", _A = "[object Object]", nB = "[object RegExp]", iB = "[object Set]", sB = "[object String]", rB = "[object Symbol]", oB = "[object WeakMap]", lB = "[object ArrayBuffer]", aB = "[object DataView]", cB = "[object Float32Array]", uB = "[object Float64Array]", hB = "[object Int8Array]", dB = "[object Int16Array]", fB = "[object Int32Array]", pB = "[object Uint8Array]", gB = "[object Uint8ClampedArray]", mB = "[object Uint16Array]", vB = "[object Uint32Array]", Wt = {};
Wt[$A] = Wt[Y6] = Wt[lB] = Wt[aB] = Wt[U6] = Wt[G6] = Wt[cB] = Wt[uB] = Wt[hB] = Wt[dB] = Wt[fB] = Wt[eB] = Wt[tB] = Wt[_A] = Wt[nB] = Wt[iB] = Wt[sB] = Wt[rB] = Wt[pB] = Wt[gB] = Wt[mB] = Wt[vB] = !0;
Wt[K6] = Wt[TA] = Wt[oB] = !1;
function Dc(n, e, t, i, s, r) {
  var o, l = e & W6, a = e & H6, c = e & X6;
  if (t && (o = s ? t(n, i, s, r) : t(n)), o !== void 0)
    return o;
  if (!wn(n))
    return n;
  var u = li(n);
  if (u) {
    if (o = g6(n), !l)
      return VE(n, o);
  } else {
    var h = iu(n), d = h == TA || h == J6;
    if (tu(n))
      return xA(n, l);
    if (h == _A || h == $A || d && !s) {
      if (o = a || d ? {} : AA(n), !l)
        return a ? o6(n, J8(o, n)) : s6(n, K8(o, n));
    } else {
      if (!Wt[h])
        return s ? n : {};
      o = Q6(n, h, l);
    }
  }
  r || (r = new vr());
  var f = r.get(n);
  if (f)
    return f;
  r.set(n, o), q6(n) ? n.forEach(function(m) {
    o.add(Dc(m, e, t, m, n, r));
  }) : V6(n) && n.forEach(function(m, v) {
    o.set(v, Dc(m, e, t, v, n, r));
  });
  var p = c ? a ? PA : _b : a ? Hu : Wu, g = u ? void 0 : p(n);
  return jL(g || n, function(m, v) {
    g && (v = m, m = n[v]), qm(o, v, Dc(m, e, t, v, n, r));
  }), o;
}
var bB = 4;
function xd(n) {
  return Dc(n, bB);
}
var yB = 1, OB = 4;
function Bt(n) {
  return Dc(n, yB | OB);
}
var wB = "__lodash_hash_undefined__";
function xB(n) {
  return this.__data__.set(n, wB), this;
}
function SB(n) {
  return this.__data__.has(n);
}
function su(n) {
  var e = -1, t = n == null ? 0 : n.length;
  for (this.__data__ = new Yo(); ++e < t; )
    this.add(n[e]);
}
su.prototype.add = su.prototype.push = xB;
su.prototype.has = SB;
function CB(n, e) {
  for (var t = -1, i = n == null ? 0 : n.length; ++t < i; )
    if (e(n[t], t, n))
      return !0;
  return !1;
}
function b1(n, e) {
  return n.has(e);
}
var kB = 1, PB = 2;
function MA(n, e, t, i, s, r) {
  var o = t & kB, l = n.length, a = e.length;
  if (l != a && !(o && a > l))
    return !1;
  var c = r.get(n), u = r.get(e);
  if (c && u)
    return c == e && u == n;
  var h = -1, d = !0, f = t & PB ? new su() : void 0;
  for (r.set(n, e), r.set(e, n); ++h < l; ) {
    var p = n[h], g = e[h];
    if (i)
      var m = o ? i(g, p, h, e, n, r) : i(p, g, h, n, e, r);
    if (m !== void 0) {
      if (m)
        continue;
      d = !1;
      break;
    }
    if (f) {
      if (!CB(e, function(v, O) {
        if (!b1(f, O) && (p === v || s(p, v, t, i, r)))
          return f.push(O);
      })) {
        d = !1;
        break;
      }
    } else if (!(p === g || s(p, g, t, i, r))) {
      d = !1;
      break;
    }
  }
  return r.delete(n), r.delete(e), d;
}
function EB(n) {
  var e = -1, t = Array(n.size);
  return n.forEach(function(i, s) {
    t[++e] = [s, i];
  }), t;
}
function y1(n) {
  var e = -1, t = Array(n.size);
  return n.forEach(function(i) {
    t[++e] = i;
  }), t;
}
var AB = 1, $B = 2, TB = "[object Boolean]", _B = "[object Date]", MB = "[object Error]", RB = "[object Map]", NB = "[object Number]", DB = "[object RegExp]", LB = "[object Set]", IB = "[object String]", BB = "[object Symbol]", QB = "[object ArrayBuffer]", zB = "[object DataView]", nS = Hs ? Hs.prototype : void 0, sv = nS ? nS.valueOf : void 0;
function jB(n, e, t, i, s, r, o) {
  switch (t) {
    case zB:
      if (n.byteLength != e.byteLength || n.byteOffset != e.byteOffset)
        return !1;
      n = n.buffer, e = e.buffer;
    case QB:
      return !(n.byteLength != e.byteLength || !r(new Ng(n), new Ng(e)));
    case TB:
    case _B:
    case NB:
      return Zu(+n, +e);
    case MB:
      return n.name == e.name && n.message == e.message;
    case DB:
    case IB:
      return n == e + "";
    case RB:
      var l = EB;
    case LB:
      var a = i & AB;
      if (l || (l = y1), n.size != e.size && !a)
        return !1;
      var c = o.get(n);
      if (c)
        return c == e;
      i |= $B, o.set(n, e);
      var u = MA(l(n), l(e), i, s, r, o);
      return o.delete(n), u;
    case BB:
      if (sv)
        return sv.call(n) == sv.call(e);
  }
  return !1;
}
var VB = 1, FB = Object.prototype, ZB = FB.hasOwnProperty;
function qB(n, e, t, i, s, r) {
  var o = t & VB, l = _b(n), a = l.length, c = _b(e), u = c.length;
  if (a != u && !o)
    return !1;
  for (var h = a; h--; ) {
    var d = l[h];
    if (!(o ? d in e : ZB.call(e, d)))
      return !1;
  }
  var f = r.get(n), p = r.get(e);
  if (f && p)
    return f == e && p == n;
  var g = !0;
  r.set(n, e), r.set(e, n);
  for (var m = o; ++h < a; ) {
    d = l[h];
    var v = n[d], O = e[d];
    if (i)
      var b = o ? i(O, v, d, e, n, r) : i(v, O, d, n, e, r);
    if (!(b === void 0 ? v === O || s(v, O, t, i, r) : b)) {
      g = !1;
      break;
    }
    m || (m = d == "constructor");
  }
  if (g && !m) {
    var w = n.constructor, x = e.constructor;
    w != x && "constructor" in n && "constructor" in e && !(typeof w == "function" && w instanceof w && typeof x == "function" && x instanceof x) && (g = !1);
  }
  return r.delete(n), r.delete(e), g;
}
var WB = 1, iS = "[object Arguments]", sS = "[object Array]", Zf = "[object Object]", HB = Object.prototype, rS = HB.hasOwnProperty;
function XB(n, e, t, i, s, r) {
  var o = li(n), l = li(e), a = o ? sS : iu(n), c = l ? sS : iu(e);
  a = a == iS ? Zf : a, c = c == iS ? Zf : c;
  var u = a == Zf, h = c == Zf, d = a == c;
  if (d && tu(n)) {
    if (!tu(e))
      return !1;
    o = !0, u = !1;
  }
  if (d && !u)
    return r || (r = new vr()), o || Wm(n) ? MA(n, e, t, i, s, r) : jB(n, e, a, t, i, s, r);
  if (!(t & WB)) {
    var f = u && rS.call(n, "__wrapped__"), p = h && rS.call(e, "__wrapped__");
    if (f || p) {
      var g = f ? n.value() : n, m = p ? e.value() : e;
      return r || (r = new vr()), s(g, m, t, i, r);
    }
  }
  return d ? (r || (r = new vr()), qB(n, e, t, i, s, r)) : !1;
}
function Gm(n, e, t, i, s) {
  return n === e ? !0 : n == null || e == null || !Xs(n) && !Xs(e) ? n !== n && e !== e : XB(n, e, t, i, Gm, s);
}
var YB = 1, UB = 2;
function GB(n, e, t, i) {
  var s = t.length, r = s, o = !i;
  if (n == null)
    return !r;
  for (n = Object(n); s--; ) {
    var l = t[s];
    if (o && l[2] ? l[1] !== n[l[0]] : !(l[0] in n))
      return !1;
  }
  for (; ++s < r; ) {
    l = t[s];
    var a = l[0], c = n[a], u = l[1];
    if (o && l[2]) {
      if (c === void 0 && !(a in n))
        return !1;
    } else {
      var h = new vr();
      if (i)
        var d = i(c, u, a, n, e, h);
      if (!(d === void 0 ? Gm(u, c, YB | UB, i, h) : d))
        return !1;
    }
  }
  return !0;
}
function RA(n) {
  return n === n && !wn(n);
}
function KB(n) {
  for (var e = Wu(n), t = e.length; t--; ) {
    var i = e[t], s = n[i];
    e[t] = [i, s, RA(s)];
  }
  return e;
}
function NA(n, e) {
  return function(t) {
    return t == null ? !1 : t[n] === e && (e !== void 0 || n in Object(t));
  };
}
function JB(n) {
  var e = KB(n);
  return e.length == 1 && e[0][2] ? NA(e[0][0], e[0][1]) : function(t) {
    return t === n || GB(t, n, e);
  };
}
function eQ(n, e) {
  return n != null && e in Object(n);
}
function DA(n, e, t) {
  e = Xu(e, n);
  for (var i = -1, s = e.length, r = !1; ++i < s; ) {
    var o = Yu(e[i]);
    if (!(r = n != null && t(n, o)))
      break;
    n = n[o];
  }
  return r || ++i != s ? r : (s = n == null ? 0 : n.length, !!s && c1(s) && Fm(o, s) && (li(n) || eu(n)));
}
function LA(n, e) {
  return n != null && DA(n, e, eQ);
}
var tQ = 1, nQ = 2;
function iQ(n, e) {
  return h1(n) && RA(e) ? NA(Yu(n), e) : function(t) {
    var i = on(t, n);
    return i === void 0 && i === e ? LA(t, n) : Gm(e, i, tQ | nQ);
  };
}
function sQ(n) {
  return function(e) {
    return e == null ? void 0 : e[n];
  };
}
function rQ(n) {
  return function(e) {
    return gf(e, n);
  };
}
function oQ(n) {
  return h1(n) ? sQ(Yu(n)) : rQ(n);
}
function Uu(n) {
  return typeof n == "function" ? n : n == null ? Fu : typeof n == "object" ? li(n) ? iQ(n[0], n[1]) : JB(n) : oQ(n);
}
function lQ(n, e, t, i) {
  for (var s = -1, r = n == null ? 0 : n.length; ++s < r; ) {
    var o = n[s];
    e(i, o, t(o), n);
  }
  return i;
}
function aQ(n) {
  return function(e, t, i) {
    for (var s = -1, r = Object(e), o = i(e), l = o.length; l--; ) {
      var a = o[n ? l : ++s];
      if (t(r[a], a, r) === !1)
        break;
    }
    return e;
  };
}
var IA = aQ();
function cQ(n, e) {
  return n && IA(n, e, Wu);
}
function uQ(n, e) {
  return function(t, i) {
    if (t == null)
      return t;
    if (!ql(t))
      return n(t, i);
    for (var s = t.length, r = e ? s : -1, o = Object(t); (e ? r-- : ++r < s) && i(o[r], r, o) !== !1; )
      ;
    return t;
  };
}
var BA = uQ(cQ);
function hQ(n, e, t, i) {
  return BA(n, function(s, r, o) {
    e(i, s, t(s), o);
  }), i;
}
function dQ(n, e) {
  return function(t, i) {
    var s = li(t) ? lQ : hQ, r = e ? e() : {};
    return s(t, n, Uu(i), r);
  };
}
var rv = function() {
  return Cr.Date.now();
}, fQ = "Expected a function", pQ = Math.max, gQ = Math.min;
function Do(n, e, t) {
  var i, s, r, o, l, a, c = 0, u = !1, h = !1, d = !0;
  if (typeof n != "function")
    throw new TypeError(fQ);
  e = Rc(e) || 0, wn(t) && (u = !!t.leading, h = "maxWait" in t, r = h ? pQ(Rc(t.maxWait) || 0, e) : r, d = "trailing" in t ? !!t.trailing : d);
  function f(S) {
    var C = i, k = s;
    return i = s = void 0, c = S, o = n.apply(k, C), o;
  }
  function p(S) {
    return c = S, l = setTimeout(v, e), u ? f(S) : o;
  }
  function g(S) {
    var C = S - a, k = S - c, E = e - C;
    return h ? gQ(E, r - k) : E;
  }
  function m(S) {
    var C = S - a, k = S - c;
    return a === void 0 || C >= e || C < 0 || h && k >= r;
  }
  function v() {
    var S = rv();
    if (m(S))
      return O(S);
    l = setTimeout(v, g(S));
  }
  function O(S) {
    return l = void 0, d && i ? f(S) : (i = s = void 0, o);
  }
  function b() {
    l !== void 0 && clearTimeout(l), c = 0, i = a = s = l = void 0;
  }
  function w() {
    return l === void 0 ? o : O(rv());
  }
  function x() {
    var S = rv(), C = m(S);
    if (i = arguments, s = this, a = S, C) {
      if (l === void 0)
        return p(a);
      if (h)
        return clearTimeout(l), l = setTimeout(v, e), f(a);
    }
    return l === void 0 && (l = setTimeout(v, e)), o;
  }
  return x.cancel = b, x.flush = w, x;
}
var QA = Object.prototype, mQ = QA.hasOwnProperty, vQ = qu(function(n, e) {
  n = Object(n);
  var t = -1, i = e.length, s = i > 2 ? e[2] : void 0;
  for (s && bd(e[0], e[1], s) && (i = 1); ++t < i; )
    for (var r = e[t], o = Hu(r), l = -1, a = o.length; ++l < a; ) {
      var c = o[l], u = n[c];
      (u === void 0 || Zu(u, QA[c]) && !mQ.call(n, c)) && (n[c] = r[c]);
    }
  return n;
});
function Nb(n, e, t) {
  (t !== void 0 && !Zu(n[e], t) || t === void 0 && !(e in n)) && Zm(n, e, t);
}
function Dg(n) {
  return Xs(n) && ql(n);
}
function Db(n, e) {
  if (!(e === "constructor" && typeof n[e] == "function") && e != "__proto__")
    return n[e];
}
function bQ(n) {
  return Ka(n, Hu(n));
}
function yQ(n, e, t, i, s, r, o) {
  var l = Db(n, t), a = Db(e, t), c = o.get(a);
  if (c) {
    Nb(n, t, c);
    return;
  }
  var u = r ? r(l, a, t + "", n, e, o) : void 0, h = u === void 0;
  if (h) {
    var d = li(a), f = !d && tu(a), p = !d && !f && Wm(a);
    u = a, d || f || p ? li(l) ? u = l : Dg(l) ? u = VE(l) : f ? (h = !1, u = xA(a, !0)) : p ? (h = !1, u = EA(a, !0)) : u = [] : kr(a) || eu(a) ? (u = l, eu(l) ? u = bQ(l) : (!wn(l) || l1(l)) && (u = AA(a))) : h = !1;
  }
  h && (o.set(a, u), s(u, a, i, r, o), o.delete(a)), Nb(n, t, u);
}
function Km(n, e, t, i, s) {
  n !== e && IA(e, function(r, o) {
    if (s || (s = new vr()), wn(r))
      yQ(n, e, o, t, Km, i, s);
    else {
      var l = i ? i(Db(n, o), r, o + "", n, e, s) : void 0;
      l === void 0 && (l = r), Nb(n, o, l);
    }
  }, Hu);
}
function zA(n, e, t, i, s, r) {
  return wn(n) && wn(e) && (r.set(e, n), Km(n, e, void 0, zA, r), r.delete(e)), n;
}
var OQ = u1(function(n, e, t, i) {
  Km(n, e, t, i);
});
const wQ = OQ;
var jA = qu(function(n) {
  return n.push(void 0, zA), jE(wQ, void 0, n);
});
function VA(n, e, t) {
  for (var i = -1, s = n == null ? 0 : n.length; ++i < s; )
    if (t(e, n[i]))
      return !0;
  return !1;
}
var xQ = 200;
function SQ(n, e, t, i) {
  var s = -1, r = ZE, o = !0, l = n.length, a = [], c = e.length;
  if (!l)
    return a;
  t && (e = Aa(e, ff(t))), i ? (r = VA, o = !1) : e.length >= xQ && (r = b1, o = !1, e = new su(e));
  e:
    for (; ++s < l; ) {
      var u = n[s], h = t == null ? u : t(u);
      if (u = i || u !== 0 ? u : 0, o && h === h) {
        for (var d = c; d--; )
          if (e[d] === h)
            continue e;
        a.push(u);
      } else
        r(e, h, i) || a.push(u);
    }
  return a;
}
var CQ = qu(function(n, e) {
  return Dg(n) ? SQ(n, Ja(e, 1, Dg, !0)) : [];
});
function kQ(n) {
  var e = n == null ? 0 : n.length;
  return e ? n[e - 1] : void 0;
}
var PQ = Math.max;
function TYe(n, e, t) {
  var i = n == null ? 0 : n.length;
  if (!i)
    return -1;
  var s = t == null ? 0 : o1(t);
  return s < 0 && (s = PQ(i + s, 0)), a1(n, Uu(e), s);
}
var EQ = Math.max, AQ = Math.min;
function FA(n, e, t) {
  var i = n == null ? 0 : n.length;
  if (!i)
    return -1;
  var s = i - 1;
  return t !== void 0 && (s = o1(t), s = t < 0 ? EQ(i + s, 0) : AQ(s, i - 1)), a1(n, Uu(e), s, !0);
}
function ZA(n, e) {
  var t = -1, i = ql(n) ? Array(n.length) : [];
  return BA(n, function(s, r, o) {
    i[++t] = e(s, r, o);
  }), i;
}
function $Q(n, e) {
  var t = li(n) ? Aa : ZA;
  return t(n, Uu(e));
}
function TQ(n, e) {
  return Ja($Q(n, e), 1);
}
var _Q = 1 / 0;
function MQ(n) {
  var e = n == null ? 0 : n.length;
  return e ? Ja(n, _Q) : [];
}
function Lg(n) {
  for (var e = -1, t = n == null ? 0 : n.length, i = {}; ++e < t; ) {
    var s = n[e];
    i[s[0]] = s[1];
  }
  return i;
}
var RQ = Object.prototype, NQ = RQ.hasOwnProperty, oS = dQ(function(n, e, t) {
  NQ.call(n, t) ? n[t].push(e) : Zm(n, t, [e]);
});
function DQ(n, e) {
  return n > e;
}
var LQ = Object.prototype, IQ = LQ.hasOwnProperty;
function BQ(n, e) {
  return n != null && IQ.call(n, e);
}
function qf(n, e) {
  return n != null && DA(n, e, BQ);
}
function QQ(n, e) {
  return e.length < 2 ? n : gf(n, p1(e, 0, -1));
}
var zQ = "[object Boolean]";
function _Ye(n) {
  return n === !0 || n === !1 || Xs(n) && Ho(n) == zQ;
}
var jQ = "[object Map]", VQ = "[object Set]", FQ = Object.prototype, ZQ = FQ.hasOwnProperty;
function qA(n) {
  if (n == null)
    return !0;
  if (ql(n) && (li(n) || typeof n == "string" || typeof n.splice == "function" || tu(n) || Wm(n) || eu(n)))
    return !n.length;
  var e = iu(n);
  if (e == jQ || e == VQ)
    return !n.size;
  if (df(n))
    return !GE(n).length;
  for (var t in n)
    if (ZQ.call(n, t))
      return !1;
  return !0;
}
function cn(n, e) {
  return Gm(n, e);
}
var qQ = "[object Number]";
function lS(n) {
  return typeof n == "number" || Xs(n) && Ho(n) == qQ;
}
function Ri(n) {
  return n == null;
}
function WA(n) {
  return n === void 0;
}
var WQ = g1(function(n, e, t) {
  return n + (t ? "-" : "") + e.toLowerCase();
});
const MYe = WQ;
var HQ = lA("toLowerCase");
function XQ(n, e, t) {
  for (var i = -1, s = n.length; ++i < s; ) {
    var r = n[i], o = e(r);
    if (o != null && (l === void 0 ? o === o && !ao(o) : t(o, l)))
      var l = o, a = r;
  }
  return a;
}
function YQ(n) {
  return n && n.length ? XQ(n, Fu, DQ) : void 0;
}
var On = u1(function(n, e, t) {
  Km(n, e, t);
});
function HA(n, e) {
  return e = Xu(e, n), n = QQ(n, e), n == null || delete n[Yu(kQ(e))];
}
function UQ(n) {
  return kr(n) ? void 0 : n;
}
var GQ = 1, KQ = 2, JQ = 4, RYe = KE(function(n, e) {
  var t = {};
  if (n == null)
    return t;
  var i = !1;
  e = Aa(e, function(r) {
    return r = Xu(r, n), i || (i = r.length > 1), r;
  }), Ka(n, PA(n), t), i && (t = Dc(t, GQ | KQ | JQ, UQ));
  for (var s = e.length; s--; )
    HA(t, e[s]);
  return t;
});
function XA(n, e, t, i) {
  if (!wn(n))
    return n;
  e = Xu(e, n);
  for (var s = -1, r = e.length, o = r - 1, l = n; l != null && ++s < r; ) {
    var a = Yu(e[s]), c = t;
    if (a === "__proto__" || a === "constructor" || a === "prototype")
      return n;
    if (s != o) {
      var u = l[a];
      c = i ? i(u, a, l) : void 0, c === void 0 && (c = wn(u) ? u : Fm(e[s + 1]) ? [] : {});
    }
    qm(l, a, c), l = l[a];
  }
  return n;
}
function ez(n, e, t) {
  for (var i = -1, s = e.length, r = {}; ++i < s; ) {
    var o = e[i], l = gf(n, o);
    t(l, o) && XA(r, Xu(o, n), l);
  }
  return r;
}
function tz(n, e) {
  var t = n.length;
  for (n.sort(e); t--; )
    n[t] = n[t].value;
  return n;
}
function nz(n, e) {
  if (n !== e) {
    var t = n !== void 0, i = n === null, s = n === n, r = ao(n), o = e !== void 0, l = e === null, a = e === e, c = ao(e);
    if (!l && !c && !r && n > e || r && o && a && !l && !c || i && o && a || !t && a || !s)
      return 1;
    if (!i && !r && !c && n < e || c && t && s && !i && !r || l && t && s || !o && s || !a)
      return -1;
  }
  return 0;
}
function iz(n, e, t) {
  for (var i = -1, s = n.criteria, r = e.criteria, o = s.length, l = t.length; ++i < o; ) {
    var a = nz(s[i], r[i]);
    if (a) {
      if (i >= l)
        return a;
      var c = t[i];
      return a * (c == "desc" ? -1 : 1);
    }
  }
  return n.index - e.index;
}
function sz(n, e, t) {
  e.length ? e = Aa(e, function(r) {
    return li(r) ? function(o) {
      return gf(o, r.length === 1 ? r[0] : r);
    } : r;
  }) : e = [Fu];
  var i = -1;
  e = Aa(e, ff(Uu));
  var s = ZA(n, function(r, o, l) {
    var a = Aa(e, function(c) {
      return c(r);
    });
    return { criteria: a, index: ++i, value: r };
  });
  return tz(s, function(r, o) {
    return iz(r, o, t);
  });
}
function rz(n, e) {
  return ez(n, e, function(t, i) {
    return LA(n, i);
  });
}
var Lb = KE(function(n, e) {
  return n == null ? {} : rz(n, e);
});
function oz(n, e, t) {
  return n == null ? n : XA(n, e, t);
}
var YA = qu(function(n, e) {
  if (n == null)
    return [];
  var t = e.length;
  return t > 1 && bd(n, e[0], e[1]) ? e = [] : t > 2 && bd(e[0], e[1], e[2]) && (e = [e[0]]), sz(n, Ja(e, 1), []);
}), lz = 4294967295, az = lz - 1, cz = Math.floor, uz = Math.min;
function UA(n, e, t, i) {
  var s = 0, r = n == null ? 0 : n.length;
  if (r === 0)
    return 0;
  e = t(e);
  for (var o = e !== e, l = e === null, a = ao(e), c = e === void 0; s < r; ) {
    var u = cz((s + r) / 2), h = t(n[u]), d = h !== void 0, f = h === null, p = h === h, g = ao(h);
    if (o)
      var m = i || p;
    else
      c ? m = p && (i || d) : l ? m = p && d && (i || !f) : a ? m = p && d && !f && (i || !g) : f || g ? m = !1 : m = i ? h <= e : h < e;
    m ? s = u + 1 : r = u;
  }
  return uz(r, az);
}
var hz = 4294967295, dz = hz >>> 1;
function fz(n, e, t) {
  var i = 0, s = n == null ? i : n.length;
  if (typeof e == "number" && e === e && s <= dz) {
    for (; i < s; ) {
      var r = i + s >>> 1, o = n[r];
      o !== null && !ao(o) && (t ? o <= e : o < e) ? i = r + 1 : s = r;
    }
    return s;
  }
  return UA(n, e, Fu, t);
}
function pz(n, e) {
  return fz(n, e);
}
function gz(n, e, t) {
  return UA(n, e, Uu(t));
}
var mz = g1(function(n, e, t) {
  return n + (t ? " " : "") + Rg(e);
}), vz = "Expected a function";
function bz(n, e, t) {
  var i = !0, s = !0;
  if (typeof n != "function")
    throw new TypeError(vz);
  return wn(t) && (i = "leading" in t ? !!t.leading : i, s = "trailing" in t ? !!t.trailing : s), Do(n, e, {
    leading: i,
    maxWait: e,
    trailing: s
  });
}
var yz = 1 / 0, Oz = Nc && 1 / y1(new Nc([, -0]))[1] == yz ? function(n) {
  return new Nc(n);
} : RL, wz = 200;
function GA(n, e, t) {
  var i = -1, s = ZE, r = n.length, o = !0, l = [], a = l;
  if (t)
    o = !1, s = VA;
  else if (r >= wz) {
    var c = e ? null : Oz(n);
    if (c)
      return y1(c);
    o = !1, s = b1, a = new su();
  } else
    a = e ? [] : l;
  e:
    for (; ++i < r; ) {
      var u = n[i], h = e ? e(u) : u;
      if (u = t || u !== 0 ? u : 0, o && h === h) {
        for (var d = a.length; d--; )
          if (a[d] === h)
            continue e;
        e && a.push(h), l.push(u);
      } else
        s(a, h, t) || (a !== l && a.push(h), l.push(u));
    }
  return l;
}
var aS = qu(function(n) {
  return GA(Ja(n, 1, Dg, !0));
});
function KA(n) {
  return n && n.length ? GA(n) : [];
}
function NYe(n, e) {
  return n == null ? !0 : HA(n, e);
}
/*! Element Plus Icons Vue v2.3.1 */
var xz = /* @__PURE__ */ F({
  name: "ArrowDown",
  __name: "arrow-down",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M831.872 340.864 512 652.672 192.128 340.864a30.592 30.592 0 0 0-42.752 0 29.12 29.12 0 0 0 0 41.6L489.664 714.24a32 32 0 0 0 44.672 0l340.288-331.712a29.12 29.12 0 0 0 0-41.728 30.592 30.592 0 0 0-42.752 0z"
      })
    ]));
  }
}), Gu = xz, Sz = /* @__PURE__ */ F({
  name: "ArrowLeft",
  __name: "arrow-left",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M609.408 149.376 277.76 489.6a32 32 0 0 0 0 44.672l331.648 340.352a29.12 29.12 0 0 0 41.728 0 30.592 30.592 0 0 0 0-42.752L339.264 511.936l311.872-319.872a30.592 30.592 0 0 0 0-42.688 29.12 29.12 0 0 0-41.728 0z"
      })
    ]));
  }
}), O1 = Sz, Cz = /* @__PURE__ */ F({
  name: "ArrowRight",
  __name: "arrow-right",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M340.864 149.312a30.592 30.592 0 0 0 0 42.752L652.736 512 340.864 831.872a30.592 30.592 0 0 0 0 42.752 29.12 29.12 0 0 0 41.728 0L714.24 534.336a32 32 0 0 0 0-44.672L382.592 149.376a29.12 29.12 0 0 0-41.728 0z"
      })
    ]));
  }
}), ec = Cz, kz = /* @__PURE__ */ F({
  name: "ArrowUp",
  __name: "arrow-up",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m488.832 344.32-339.84 356.672a32 32 0 0 0 0 44.16l.384.384a29.44 29.44 0 0 0 42.688 0l320-335.872 319.872 335.872a29.44 29.44 0 0 0 42.688 0l.384-.384a32 32 0 0 0 0-44.16L535.168 344.32a32 32 0 0 0-46.336 0"
      })
    ]));
  }
}), JA = kz, Pz = /* @__PURE__ */ F({
  name: "Bottom",
  __name: "bottom",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M544 805.888V168a32 32 0 1 0-64 0v637.888L246.656 557.952a30.72 30.72 0 0 0-45.312 0 35.52 35.52 0 0 0 0 48.064l288 306.048a30.72 30.72 0 0 0 45.312 0l288-306.048a35.52 35.52 0 0 0 0-48 30.72 30.72 0 0 0-45.312 0L544 805.824z"
      })
    ]));
  }
}), DYe = Pz, Ez = /* @__PURE__ */ F({
  name: "CaretRight",
  __name: "caret-right",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M384 192v640l384-320.064z"
      })
    ]));
  }
}), Az = Ez, $z = /* @__PURE__ */ F({
  name: "Check",
  __name: "check",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M406.656 706.944 195.84 496.256a32 32 0 1 0-45.248 45.248l256 256 512-512a32 32 0 0 0-45.248-45.248L406.592 706.944z"
      })
    ]));
  }
}), Jm = $z, Tz = /* @__PURE__ */ F({
  name: "CircleCheck",
  __name: "circle-check",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M745.344 361.344a32 32 0 0 1 45.312 45.312l-288 288a32 32 0 0 1-45.312 0l-160-160a32 32 0 1 1 45.312-45.312L480 626.752l265.344-265.408z"
      })
    ]));
  }
}), w1 = Tz, _z = /* @__PURE__ */ F({
  name: "CircleCloseFilled",
  __name: "circle-close-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 393.664L407.936 353.6a38.4 38.4 0 1 0-54.336 54.336L457.664 512 353.6 616.064a38.4 38.4 0 1 0 54.336 54.336L512 566.336 616.064 670.4a38.4 38.4 0 1 0 54.336-54.336L566.336 512 670.4 407.936a38.4 38.4 0 1 0-54.336-54.336z"
      })
    ]));
  }
}), e$ = _z, Mz = /* @__PURE__ */ F({
  name: "CircleClose",
  __name: "circle-close",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m466.752 512-90.496-90.496a32 32 0 0 1 45.248-45.248L512 466.752l90.496-90.496a32 32 0 1 1 45.248 45.248L557.248 512l90.496 90.496a32 32 0 1 1-45.248 45.248L512 557.248l-90.496 90.496a32 32 0 0 1-45.248-45.248z"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      })
    ]));
  }
}), Ku = Mz, Rz = /* @__PURE__ */ F({
  name: "Close",
  __name: "close",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M764.288 214.592 512 466.88 259.712 214.592a31.936 31.936 0 0 0-45.12 45.12L466.752 512 214.528 764.224a31.936 31.936 0 1 0 45.12 45.184L512 557.184l252.288 252.288a31.936 31.936 0 0 0 45.12-45.12L557.12 512.064l252.288-252.352a31.936 31.936 0 1 0-45.12-45.184z"
      })
    ]));
  }
}), Lo = Rz, Nz = /* @__PURE__ */ F({
  name: "CopyDocument",
  __name: "copy-document",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M768 832a128 128 0 0 1-128 128H192A128 128 0 0 1 64 832V384a128 128 0 0 1 128-128v64a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64z"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M384 128a64 64 0 0 0-64 64v448a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64zm0-64h448a128 128 0 0 1 128 128v448a128 128 0 0 1-128 128H384a128 128 0 0 1-128-128V192A128 128 0 0 1 384 64"
      })
    ]));
  }
}), LYe = Nz, Dz = /* @__PURE__ */ F({
  name: "DArrowLeft",
  __name: "d-arrow-left",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M529.408 149.376a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L259.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L197.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224zm256 0a29.12 29.12 0 0 1 41.728 0 30.592 30.592 0 0 1 0 42.688L515.264 511.936l311.872 319.936a30.592 30.592 0 0 1-.512 43.264 29.12 29.12 0 0 1-41.216-.512L453.76 534.272a32 32 0 0 1 0-44.672l331.648-340.224z"
      })
    ]));
  }
}), Lz = Dz, Iz = /* @__PURE__ */ F({
  name: "DArrowRight",
  __name: "d-arrow-right",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M452.864 149.312a29.12 29.12 0 0 1 41.728.064L826.24 489.664a32 32 0 0 1 0 44.672L494.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L764.736 512 452.864 192a30.592 30.592 0 0 1 0-42.688m-256 0a29.12 29.12 0 0 1 41.728.064L570.24 489.664a32 32 0 0 1 0 44.672L238.592 874.624a29.12 29.12 0 0 1-41.728 0 30.592 30.592 0 0 1 0-42.752L508.736 512 196.864 192a30.592 30.592 0 0 1 0-42.688z"
      })
    ]));
  }
}), Bz = Iz, Qz = /* @__PURE__ */ F({
  name: "Delete",
  __name: "delete",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M160 256H96a32 32 0 0 1 0-64h256V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64h-64v672a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32zm448-64v-64H416v64zM224 896h576V256H224zm192-128a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32m192 0a32 32 0 0 1-32-32V416a32 32 0 0 1 64 0v320a32 32 0 0 1-32 32"
      })
    ]));
  }
}), zz = Qz, jz = /* @__PURE__ */ F({
  name: "Document",
  __name: "document",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M832 384H576V128H192v768h640zm-26.496-64L640 154.496V320zM160 64h480l256 256v608a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32m160 448h384v64H320zm0-192h160v64H320zm0 384h384v64H320z"
      })
    ]));
  }
}), Vz = jz, Fz = /* @__PURE__ */ F({
  name: "Download",
  __name: "download",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64m384-253.696 236.288-236.352 45.248 45.248L508.8 704 192 387.2l45.248-45.248L480 584.704V128h64z"
      })
    ]));
  }
}), IYe = Fz, Zz = /* @__PURE__ */ F({
  name: "Drizzling",
  __name: "drizzling",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m739.328 291.328-35.2-6.592-12.8-33.408a192.064 192.064 0 0 0-365.952 23.232l-9.92 40.896-41.472 7.04a176.32 176.32 0 0 0-146.24 173.568c0 97.28 78.72 175.936 175.808 175.936h400a192 192 0 0 0 35.776-380.672zM959.552 480a256 256 0 0 1-256 256h-400A239.808 239.808 0 0 1 63.744 496.192a240.32 240.32 0 0 1 199.488-236.8 256.128 256.128 0 0 1 487.872-30.976A256.064 256.064 0 0 1 959.552 480M288 800h64v64h-64zm192 0h64v64h-64zm-96 96h64v64h-64zm192 0h64v64h-64zm96-96h64v64h-64z"
      })
    ]));
  }
}), BYe = Zz, qz = /* @__PURE__ */ F({
  name: "Edit",
  __name: "edit",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M832 512a32 32 0 1 1 64 0v352a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h352a32 32 0 0 1 0 64H192v640h640z"
      }),
      Z("path", {
        fill: "currentColor",
        d: "m469.952 554.24 52.8-7.552L847.104 222.4a32 32 0 1 0-45.248-45.248L477.44 501.44l-7.552 52.8zm422.4-422.4a96 96 0 0 1 0 135.808l-331.84 331.84a32 32 0 0 1-18.112 9.088L436.8 623.68a32 32 0 0 1-36.224-36.224l15.104-105.6a32 32 0 0 1 9.024-18.112l331.904-331.84a96 96 0 0 1 135.744 0z"
      })
    ]));
  }
}), QYe = qz, Wz = /* @__PURE__ */ F({
  name: "Files",
  __name: "files",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M128 384v448h768V384zm-32-64h832a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V352a32 32 0 0 1 32-32m64-128h704v64H160zm96-128h512v64H256z"
      })
    ]));
  }
}), zYe = Wz, Hz = /* @__PURE__ */ F({
  name: "Filter",
  __name: "filter",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M384 523.392V928a32 32 0 0 0 46.336 28.608l192-96A32 32 0 0 0 640 832V523.392l280.768-343.104a32 32 0 1 0-49.536-40.576l-288 352A32 32 0 0 0 576 512v300.224l-128 64V512a32 32 0 0 0-7.232-20.288L195.52 192H704a32 32 0 1 0 0-64H128a32 32 0 0 0-24.768 52.288z"
      })
    ]));
  }
}), jYe = Hz, Xz = /* @__PURE__ */ F({
  name: "Fold",
  __name: "fold",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M896 192H128v128h768zm0 256H384v128h512zm0 256H128v128h768zM320 384 128 512l192 128z"
      })
    ]));
  }
}), VYe = Xz, Yz = /* @__PURE__ */ F({
  name: "FullScreen",
  __name: "full-screen",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m160 96.064 192 .192a32 32 0 0 1 0 64l-192-.192V352a32 32 0 0 1-64 0V96h64zm0 831.872V928H96V672a32 32 0 1 1 64 0v191.936l192-.192a32 32 0 1 1 0 64zM864 96.064V96h64v256a32 32 0 1 1-64 0V160.064l-192 .192a32 32 0 1 1 0-64l192-.192zm0 831.872-192-.192a32 32 0 0 1 0-64l192 .192V672a32 32 0 1 1 64 0v256h-64z"
      })
    ]));
  }
}), FYe = Yz, Uz = /* @__PURE__ */ F({
  name: "Help",
  __name: "help",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m759.936 805.248-90.944-91.008A254.912 254.912 0 0 1 512 768a254.912 254.912 0 0 1-156.992-53.76l-90.944 91.008A382.464 382.464 0 0 0 512 896c94.528 0 181.12-34.176 247.936-90.752m45.312-45.312A382.464 382.464 0 0 0 896 512c0-94.528-34.176-181.12-90.752-247.936l-91.008 90.944C747.904 398.4 768 452.864 768 512c0 59.136-20.096 113.6-53.76 156.992l91.008 90.944zm-45.312-541.184A382.464 382.464 0 0 0 512 128c-94.528 0-181.12 34.176-247.936 90.752l90.944 91.008A254.912 254.912 0 0 1 512 256c59.136 0 113.6 20.096 156.992 53.76l90.944-91.008zm-541.184 45.312A382.464 382.464 0 0 0 128 512c0 94.528 34.176 181.12 90.752 247.936l91.008-90.944A254.912 254.912 0 0 1 256 512c0-59.136 20.096-113.6 53.76-156.992zm417.28 394.496a194.56 194.56 0 0 0 22.528-22.528C686.912 602.56 704 559.232 704 512a191.232 191.232 0 0 0-67.968-146.56A191.296 191.296 0 0 0 512 320a191.232 191.232 0 0 0-146.56 67.968C337.088 421.44 320 464.768 320 512a191.232 191.232 0 0 0 67.968 146.56C421.44 686.912 464.768 704 512 704c47.296 0 90.56-17.088 124.032-45.44zM512 960a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      })
    ]));
  }
}), ZYe = Uz, Gz = /* @__PURE__ */ F({
  name: "Hide",
  __name: "hide",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M876.8 156.8c0-9.6-3.2-16-9.6-22.4-6.4-6.4-12.8-9.6-22.4-9.6-9.6 0-16 3.2-22.4 9.6L736 220.8c-64-32-137.6-51.2-224-60.8-160 16-288 73.6-377.6 176C44.8 438.4 0 496 0 512s48 73.6 134.4 176c22.4 25.6 44.8 48 73.6 67.2l-86.4 89.6c-6.4 6.4-9.6 12.8-9.6 22.4 0 9.6 3.2 16 9.6 22.4 6.4 6.4 12.8 9.6 22.4 9.6 9.6 0 16-3.2 22.4-9.6l704-710.4c3.2-6.4 6.4-12.8 6.4-22.4Zm-646.4 528c-76.8-70.4-128-128-153.6-172.8 28.8-48 80-105.6 153.6-172.8C304 272 400 230.4 512 224c64 3.2 124.8 19.2 176 44.8l-54.4 54.4C598.4 300.8 560 288 512 288c-64 0-115.2 22.4-160 64s-64 96-64 160c0 48 12.8 89.6 35.2 124.8L256 707.2c-9.6-6.4-19.2-16-25.6-22.4Zm140.8-96c-12.8-22.4-19.2-48-19.2-76.8 0-44.8 16-83.2 48-112 32-28.8 67.2-48 112-48 28.8 0 54.4 6.4 73.6 19.2zM889.599 336c-12.8-16-28.8-28.8-41.6-41.6l-48 48c73.6 67.2 124.8 124.8 150.4 169.6-28.8 48-80 105.6-153.6 172.8-73.6 67.2-172.8 108.8-284.8 115.2-51.2-3.2-99.2-12.8-140.8-28.8l-48 48c57.6 22.4 118.4 38.4 188.8 44.8 160-16 288-73.6 377.6-176C979.199 585.6 1024 528 1024 512s-48.001-73.6-134.401-176Z"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M511.998 672c-12.8 0-25.6-3.2-38.4-6.4l-51.2 51.2c28.8 12.8 57.6 19.2 89.6 19.2 64 0 115.2-22.4 160-64 41.6-41.6 64-96 64-160 0-32-6.4-64-19.2-89.6l-51.2 51.2c3.2 12.8 6.4 25.6 6.4 38.4 0 44.8-16 83.2-48 112-32 28.8-67.2 48-112 48Z"
      })
    ]));
  }
}), Kz = Gz, Jz = /* @__PURE__ */ F({
  name: "InfoFilled",
  __name: "info-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896.064A448 448 0 0 1 512 64m67.2 275.072c33.28 0 60.288-23.104 60.288-57.344s-27.072-57.344-60.288-57.344c-33.28 0-60.16 23.104-60.16 57.344s26.88 57.344 60.16 57.344M590.912 699.2c0-6.848 2.368-24.64 1.024-34.752l-52.608 60.544c-10.88 11.456-24.512 19.392-30.912 17.28a12.992 12.992 0 0 1-8.256-14.72l87.68-276.992c7.168-35.136-12.544-67.2-54.336-71.296-44.096 0-108.992 44.736-148.48 101.504 0 6.784-1.28 23.68.064 33.792l52.544-60.608c10.88-11.328 23.552-19.328 29.952-17.152a12.8 12.8 0 0 1 7.808 16.128L388.48 728.576c-10.048 32.256 8.96 63.872 55.04 71.04 67.84 0 107.904-43.648 147.456-100.416z"
      })
    ]));
  }
}), t$ = Jz, ej = /* @__PURE__ */ F({
  name: "Lightning",
  __name: "lightning",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M288 671.36v64.128A239.808 239.808 0 0 1 63.744 496.192a240.32 240.32 0 0 1 199.488-236.8 256.128 256.128 0 0 1 487.872-30.976A256.064 256.064 0 0 1 736 734.016v-64.768a192 192 0 0 0 3.328-377.92l-35.2-6.592-12.8-33.408a192.064 192.064 0 0 0-365.952 23.232l-9.92 40.896-41.472 7.04a176.32 176.32 0 0 0-146.24 173.568c0 91.968 70.464 167.36 160.256 175.232z"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M416 736a32 32 0 0 1-27.776-47.872l128-224a32 32 0 1 1 55.552 31.744L471.168 672H608a32 32 0 0 1 27.776 47.872l-128 224a32 32 0 1 1-55.68-31.744L552.96 736z"
      })
    ]));
  }
}), qYe = ej, tj = /* @__PURE__ */ F({
  name: "Link",
  __name: "link",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M715.648 625.152 670.4 579.904l90.496-90.56c75.008-74.944 85.12-186.368 22.656-248.896-62.528-62.464-173.952-52.352-248.96 22.656L444.16 353.6l-45.248-45.248 90.496-90.496c100.032-99.968 251.968-110.08 339.456-22.656 87.488 87.488 77.312 239.424-22.656 339.456l-90.496 90.496zm-90.496 90.496-90.496 90.496C434.624 906.112 282.688 916.224 195.2 828.8c-87.488-87.488-77.312-239.424 22.656-339.456l90.496-90.496 45.248 45.248-90.496 90.56c-75.008 74.944-85.12 186.368-22.656 248.896 62.528 62.464 173.952 52.352 248.96-22.656l90.496-90.496zm0-362.048 45.248 45.248L398.848 670.4 353.6 625.152z"
      })
    ]));
  }
}), WYe = tj, nj = /* @__PURE__ */ F({
  name: "List",
  __name: "list",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M704 192h160v736H160V192h160v64h384zM288 512h448v-64H288zm0 256h448v-64H288zm96-576V96h256v96z"
      })
    ]));
  }
}), HYe = nj, ij = /* @__PURE__ */ F({
  name: "Loading",
  __name: "loading",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a32 32 0 0 1 32 32v192a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32m0 640a32 32 0 0 1 32 32v192a32 32 0 1 1-64 0V736a32 32 0 0 1 32-32m448-192a32 32 0 0 1-32 32H736a32 32 0 1 1 0-64h192a32 32 0 0 1 32 32m-640 0a32 32 0 0 1-32 32H96a32 32 0 0 1 0-64h192a32 32 0 0 1 32 32M195.2 195.2a32 32 0 0 1 45.248 0L376.32 331.008a32 32 0 0 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm452.544 452.544a32 32 0 0 1 45.248 0L828.8 783.552a32 32 0 0 1-45.248 45.248L647.744 692.992a32 32 0 0 1 0-45.248zM828.8 195.264a32 32 0 0 1 0 45.184L692.992 376.32a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0m-452.544 452.48a32 32 0 0 1 0 45.248L240.448 828.8a32 32 0 0 1-45.248-45.248l135.808-135.808a32 32 0 0 1 45.248 0z"
      })
    ]));
  }
}), tc = ij, sj = /* @__PURE__ */ F({
  name: "MagicStick",
  __name: "magic-stick",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64h64v192h-64zm0 576h64v192h-64zM160 480v-64h192v64zm576 0v-64h192v64zM249.856 199.04l45.248-45.184L430.848 289.6 385.6 334.848 249.856 199.104zM657.152 606.4l45.248-45.248 135.744 135.744-45.248 45.248zM114.048 923.2 68.8 877.952l316.8-316.8 45.248 45.248zM702.4 334.848 657.152 289.6l135.744-135.744 45.248 45.248z"
      })
    ]));
  }
}), XYe = sj, rj = /* @__PURE__ */ F({
  name: "Minus",
  __name: "minus",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64"
      })
    ]));
  }
}), oj = rj, lj = /* @__PURE__ */ F({
  name: "MoreFilled",
  __name: "more-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M176 416a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224m336 0a112 112 0 1 1 0 224 112 112 0 0 1 0-224"
      })
    ]));
  }
}), cS = lj, aj = /* @__PURE__ */ F({
  name: "MostlyCloudy",
  __name: "mostly-cloudy",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M737.216 357.952 704 349.824l-11.776-32a192.064 192.064 0 0 0-367.424 23.04l-8.96 39.04-39.04 8.96A192.064 192.064 0 0 0 320 768h368a207.808 207.808 0 0 0 207.808-208 208.32 208.32 0 0 0-158.592-202.048m15.168-62.208A272.32 272.32 0 0 1 959.744 560a271.808 271.808 0 0 1-271.552 272H320a256 256 0 0 1-57.536-505.536 256.128 256.128 0 0 1 489.92-30.72"
      })
    ]));
  }
}), YYe = aj, cj = /* @__PURE__ */ F({
  name: "Plus",
  __name: "plus",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M480 480V128a32 32 0 0 1 64 0v352h352a32 32 0 1 1 0 64H544v352a32 32 0 1 1-64 0V544H128a32 32 0 0 1 0-64z"
      })
    ]));
  }
}), n$ = cj, uj = /* @__PURE__ */ F({
  name: "Promotion",
  __name: "promotion",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m64 448 832-320-128 704-446.08-243.328L832 192 242.816 545.472zm256 512V657.024L512 768z"
      })
    ]));
  }
}), UYe = uj, hj = /* @__PURE__ */ F({
  name: "QuestionFilled",
  __name: "question-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m23.744 191.488c-52.096 0-92.928 14.784-123.2 44.352-30.976 29.568-45.76 70.4-45.76 122.496h80.256c0-29.568 5.632-52.8 17.6-68.992 13.376-19.712 35.2-28.864 66.176-28.864 23.936 0 42.944 6.336 56.32 19.712 12.672 13.376 19.712 31.68 19.712 54.912 0 17.6-6.336 34.496-19.008 49.984l-8.448 9.856c-45.76 40.832-73.216 70.4-82.368 89.408-9.856 19.008-14.08 42.24-14.08 68.992v9.856h80.96v-9.856c0-16.896 3.52-31.68 10.56-45.76 6.336-12.672 15.488-24.64 28.16-35.2 33.792-29.568 54.208-48.576 60.544-55.616 16.896-22.528 26.048-51.392 26.048-86.592 0-42.944-14.08-76.736-42.24-101.376-28.16-25.344-65.472-37.312-111.232-37.312zm-12.672 406.208a54.272 54.272 0 0 0-38.72 14.784 49.408 49.408 0 0 0-15.488 38.016c0 15.488 4.928 28.16 15.488 38.016A54.848 54.848 0 0 0 523.072 768c15.488 0 28.16-4.928 38.72-14.784a51.52 51.52 0 0 0 16.192-38.72 51.968 51.968 0 0 0-15.488-38.016 55.936 55.936 0 0 0-39.424-14.784z"
      })
    ]));
  }
}), dj = hj, fj = /* @__PURE__ */ F({
  name: "RefreshLeft",
  __name: "refresh-left",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M289.088 296.704h92.992a32 32 0 0 1 0 64H232.96a32 32 0 0 1-32-32V179.712a32 32 0 0 1 64 0v50.56a384 384 0 0 1 643.84 282.88 384 384 0 0 1-383.936 384 384 384 0 0 1-384-384h64a320 320 0 1 0 640 0 320 320 0 0 0-555.712-216.448z"
      })
    ]));
  }
}), GYe = fj, pj = /* @__PURE__ */ F({
  name: "RefreshRight",
  __name: "refresh-right",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M784.512 230.272v-50.56a32 32 0 1 1 64 0v149.056a32 32 0 0 1-32 32H667.52a32 32 0 1 1 0-64h92.992A320 320 0 1 0 524.8 833.152a320 320 0 0 0 320-320h64a384 384 0 0 1-384 384 384 384 0 0 1-384-384 384 384 0 0 1 643.712-282.88z"
      })
    ]));
  }
}), KYe = pj, gj = /* @__PURE__ */ F({
  name: "Refresh",
  __name: "refresh",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M771.776 794.88A384 384 0 0 1 128 512h64a320 320 0 0 0 555.712 216.448H654.72a32 32 0 1 1 0-64h149.056a32 32 0 0 1 32 32v148.928a32 32 0 1 1-64 0v-50.56zM276.288 295.616h92.992a32 32 0 0 1 0 64H220.16a32 32 0 0 1-32-32V178.56a32 32 0 0 1 64 0v50.56A384 384 0 0 1 896.128 512h-64a320 320 0 0 0-555.776-216.384z"
      })
    ]));
  }
}), JYe = gj, mj = /* @__PURE__ */ F({
  name: "RemoveFilled",
  __name: "remove-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896M288 512a38.4 38.4 0 0 0 38.4 38.4h371.2a38.4 38.4 0 0 0 0-76.8H326.4A38.4 38.4 0 0 0 288 512"
      })
    ]));
  }
}), eUe = mj, vj = /* @__PURE__ */ F({
  name: "Search",
  __name: "search",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704"
      })
    ]));
  }
}), bj = vj, yj = /* @__PURE__ */ F({
  name: "Select",
  __name: "select",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M77.248 415.04a64 64 0 0 1 90.496 0l226.304 226.304L846.528 188.8a64 64 0 1 1 90.56 90.496l-543.04 543.04-316.8-316.8a64 64 0 0 1 0-90.496z"
      })
    ]));
  }
}), tUe = yj, Oj = /* @__PURE__ */ F({
  name: "Stopwatch",
  __name: "stopwatch",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 896a384 384 0 1 0 0-768 384 384 0 0 0 0 768m0 64a448 448 0 1 1 0-896 448 448 0 0 1 0 896"
      }),
      Z("path", {
        fill: "currentColor",
        d: "M672 234.88c-39.168 174.464-80 298.624-122.688 372.48-64 110.848-202.624 30.848-138.624-80C453.376 453.44 540.48 355.968 672 234.816z"
      })
    ]));
  }
}), nUe = Oj, wj = /* @__PURE__ */ F({
  name: "SuccessFilled",
  __name: "success-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m-55.808 536.384-99.52-99.584a38.4 38.4 0 1 0-54.336 54.336l126.72 126.72a38.272 38.272 0 0 0 54.336 0l262.4-262.464a38.4 38.4 0 1 0-54.272-54.336z"
      })
    ]));
  }
}), i$ = wj, xj = /* @__PURE__ */ F({
  name: "Sunny",
  __name: "sunny",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 704a192 192 0 1 0 0-384 192 192 0 0 0 0 384m0 64a256 256 0 1 1 0-512 256 256 0 0 1 0 512m0-704a32 32 0 0 1 32 32v64a32 32 0 0 1-64 0V96a32 32 0 0 1 32-32m0 768a32 32 0 0 1 32 32v64a32 32 0 1 1-64 0v-64a32 32 0 0 1 32-32M195.2 195.2a32 32 0 0 1 45.248 0l45.248 45.248a32 32 0 1 1-45.248 45.248L195.2 240.448a32 32 0 0 1 0-45.248zm543.104 543.104a32 32 0 0 1 45.248 0l45.248 45.248a32 32 0 0 1-45.248 45.248l-45.248-45.248a32 32 0 0 1 0-45.248M64 512a32 32 0 0 1 32-32h64a32 32 0 0 1 0 64H96a32 32 0 0 1-32-32m768 0a32 32 0 0 1 32-32h64a32 32 0 1 1 0 64h-64a32 32 0 0 1-32-32M195.2 828.8a32 32 0 0 1 0-45.248l45.248-45.248a32 32 0 0 1 45.248 45.248L240.448 828.8a32 32 0 0 1-45.248 0zm543.104-543.104a32 32 0 0 1 0-45.248l45.248-45.248a32 32 0 0 1 45.248 45.248l-45.248 45.248a32 32 0 0 1-45.248 0"
      })
    ]));
  }
}), iUe = xj, Sj = /* @__PURE__ */ F({
  name: "Tickets",
  __name: "tickets",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M192 128v768h640V128zm-32-64h704a32 32 0 0 1 32 32v832a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32m160 448h384v64H320zm0-192h192v64H320zm0 384h384v64H320z"
      })
    ]));
  }
}), sUe = Sj, Cj = /* @__PURE__ */ F({
  name: "Tools",
  __name: "tools",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M764.416 254.72a351.68 351.68 0 0 1 86.336 149.184H960v192.064H850.752a351.68 351.68 0 0 1-86.336 149.312l54.72 94.72-166.272 96-54.592-94.72a352.64 352.64 0 0 1-172.48 0L371.136 936l-166.272-96 54.72-94.72a351.68 351.68 0 0 1-86.336-149.312H64v-192h109.248a351.68 351.68 0 0 1 86.336-149.312L204.8 160l166.208-96h.192l54.656 94.592a352.64 352.64 0 0 1 172.48 0L652.8 64h.128L819.2 160l-54.72 94.72zM704 499.968a192 192 0 1 0-384 0 192 192 0 0 0 384 0"
      })
    ]));
  }
}), rUe = Cj, kj = /* @__PURE__ */ F({
  name: "Top",
  __name: "top",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M572.235 205.282v600.365a30.118 30.118 0 1 1-60.235 0V205.282L292.382 438.633a28.913 28.913 0 0 1-42.646 0 33.43 33.43 0 0 1 0-45.236l271.058-288.045a28.913 28.913 0 0 1 42.647 0L834.5 393.397a33.43 33.43 0 0 1 0 45.176 28.913 28.913 0 0 1-42.647 0l-219.618-233.23z"
      })
    ]));
  }
}), oUe = kj, Pj = /* @__PURE__ */ F({
  name: "TrendCharts",
  __name: "trend-charts",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M128 896V128h768v768zm291.712-327.296 128 102.4 180.16-201.792-47.744-42.624-139.84 156.608-128-102.4-180.16 201.792 47.744 42.624 139.84-156.608zM816 352a48 48 0 1 0-96 0 48 48 0 0 0 96 0"
      })
    ]));
  }
}), lUe = Pj, Ej = /* @__PURE__ */ F({
  name: "Upload",
  __name: "upload",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M160 832h704a32 32 0 1 1 0 64H160a32 32 0 1 1 0-64m384-578.304V704h-64V247.296L237.248 490.048 192 444.8 508.8 128l316.8 316.8-45.312 45.248z"
      })
    ]));
  }
}), aUe = Ej, Aj = /* @__PURE__ */ F({
  name: "View",
  __name: "view",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 160c320 0 512 352 512 352S832 864 512 864 0 512 0 512s192-352 512-352m0 64c-225.28 0-384.128 208.064-436.8 288 52.608 79.872 211.456 288 436.8 288 225.28 0 384.128-208.064 436.8-288-52.608-79.872-211.456-288-436.8-288zm0 64a224 224 0 1 1 0 448 224 224 0 0 1 0-448m0 64a160.192 160.192 0 0 0-160 160c0 88.192 71.744 160 160 160s160-71.808 160-160-71.744-160-160-160"
      })
    ]));
  }
}), $j = Aj, Tj = /* @__PURE__ */ F({
  name: "WarnTriangleFilled",
  __name: "warn-triangle-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      "xml:space": "preserve",
      style: { "enable-background": "new 0 0 1024 1024" },
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M928.99 755.83 574.6 203.25c-12.89-20.16-36.76-32.58-62.6-32.58s-49.71 12.43-62.6 32.58L95.01 755.83c-12.91 20.12-12.9 44.91.01 65.03 12.92 20.12 36.78 32.51 62.59 32.49h708.78c25.82.01 49.68-12.37 62.59-32.49 12.91-20.12 12.92-44.91.01-65.03M554.67 768h-85.33v-85.33h85.33zm0-426.67v298.66h-85.33V341.32z"
      })
    ]));
  }
}), cUe = Tj, _j = /* @__PURE__ */ F({
  name: "WarningFilled",
  __name: "warning-filled",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "M512 64a448 448 0 1 1 0 896 448 448 0 0 1 0-896m0 192a58.432 58.432 0 0 0-58.24 63.744l23.36 256.384a35.072 35.072 0 0 0 69.76 0l23.296-256.384A58.432 58.432 0 0 0 512 256m0 512a51.2 51.2 0 1 0 0-102.4 51.2 51.2 0 0 0 0 102.4"
      })
    ]));
  }
}), x1 = _j, Mj = /* @__PURE__ */ F({
  name: "ZoomIn",
  __name: "zoom-in",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704m-32-384v-96a32 32 0 0 1 64 0v96h96a32 32 0 0 1 0 64h-96v96a32 32 0 0 1-64 0v-96h-96a32 32 0 0 1 0-64z"
      })
    ]));
  }
}), Rj = Mj, Nj = /* @__PURE__ */ F({
  name: "ZoomOut",
  __name: "zoom-out",
  setup(n) {
    return (e, t) => (R(), V("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 1024 1024"
    }, [
      Z("path", {
        fill: "currentColor",
        d: "m795.904 750.72 124.992 124.928a32 32 0 0 1-45.248 45.248L750.656 795.904a416 416 0 1 1 45.248-45.248zM480 832a352 352 0 1 0 0-704 352 352 0 0 0 0 704M352 448h256a32 32 0 0 1 0 64H352a32 32 0 0 1 0-64"
      })
    ]));
  }
}), uUe = Nj;
function ma() {
  return ma = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, ma.apply(this, arguments);
}
function Dj(n, e) {
  n.prototype = Object.create(e.prototype), n.prototype.constructor = n, Sd(n, e);
}
function Ib(n) {
  return Ib = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, Ib(n);
}
function Sd(n, e) {
  return Sd = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, s) {
    return i.__proto__ = s, i;
  }, Sd(n, e);
}
function Lj() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch {
    return !1;
  }
}
function Vp(n, e, t) {
  return Lj() ? Vp = Reflect.construct.bind() : Vp = function(s, r, o) {
    var l = [null];
    l.push.apply(l, r);
    var a = Function.bind.apply(s, l), c = new a();
    return o && Sd(c, o.prototype), c;
  }, Vp.apply(null, arguments);
}
function Ij(n) {
  return Function.toString.call(n).indexOf("[native code]") !== -1;
}
function Bb(n) {
  var e = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return Bb = function(i) {
    if (i === null || !Ij(i))
      return i;
    if (typeof i != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof e < "u") {
      if (e.has(i))
        return e.get(i);
      e.set(i, s);
    }
    function s() {
      return Vp(i, arguments, Ib(this).constructor);
    }
    return s.prototype = Object.create(i.prototype, {
      constructor: {
        value: s,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), Sd(s, i);
  }, Bb(n);
}
var Bj = /%[sdj%]/g, s$ = function() {
};
typeof process < "u" && process.env && process.env.NODE_ENV !== "production" && typeof window < "u" && typeof document < "u" && (s$ = function(e, t) {
  typeof console < "u" && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING > "u" && t.every(function(i) {
    return typeof i == "string";
  }) && console.warn(e, t);
});
function Qb(n) {
  if (!n || !n.length)
    return null;
  var e = {};
  return n.forEach(function(t) {
    var i = t.field;
    e[i] = e[i] || [], e[i].push(t);
  }), e;
}
function Ps(n) {
  for (var e = arguments.length, t = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
    t[i - 1] = arguments[i];
  var s = 0, r = t.length;
  if (typeof n == "function")
    return n.apply(null, t);
  if (typeof n == "string") {
    var o = n.replace(Bj, function(l) {
      if (l === "%%")
        return "%";
      if (s >= r)
        return l;
      switch (l) {
        case "%s":
          return String(t[s++]);
        case "%d":
          return Number(t[s++]);
        case "%j":
          try {
            return JSON.stringify(t[s++]);
          } catch {
            return "[Circular]";
          }
          break;
        default:
          return l;
      }
    });
    return o;
  }
  return n;
}
function Qj(n) {
  return n === "string" || n === "url" || n === "hex" || n === "email" || n === "date" || n === "pattern";
}
function Yn(n, e) {
  return !!(n == null || e === "array" && Array.isArray(n) && !n.length || Qj(e) && typeof n == "string" && !n);
}
function zj(n, e, t) {
  var i = [], s = 0, r = n.length;
  function o(l) {
    i.push.apply(i, l || []), s++, s === r && t(i);
  }
  n.forEach(function(l) {
    e(l, o);
  });
}
function uS(n, e, t) {
  var i = 0, s = n.length;
  function r(o) {
    if (o && o.length) {
      t(o);
      return;
    }
    var l = i;
    i = i + 1, l < s ? e(n[l], r) : t([]);
  }
  r([]);
}
function jj(n) {
  var e = [];
  return Object.keys(n).forEach(function(t) {
    e.push.apply(e, n[t] || []);
  }), e;
}
var hS = /* @__PURE__ */ function(n) {
  Dj(e, n);
  function e(t, i) {
    var s;
    return s = n.call(this, "Async Validation Error") || this, s.errors = t, s.fields = i, s;
  }
  return e;
}(/* @__PURE__ */ Bb(Error));
function Vj(n, e, t, i, s) {
  if (e.first) {
    var r = new Promise(function(d, f) {
      var p = function(v) {
        return i(v), v.length ? f(new hS(v, Qb(v))) : d(s);
      }, g = jj(n);
      uS(g, t, p);
    });
    return r.catch(function(d) {
      return d;
    }), r;
  }
  var o = e.firstFields === !0 ? Object.keys(n) : e.firstFields || [], l = Object.keys(n), a = l.length, c = 0, u = [], h = new Promise(function(d, f) {
    var p = function(m) {
      if (u.push.apply(u, m), c++, c === a)
        return i(u), u.length ? f(new hS(u, Qb(u))) : d(s);
    };
    l.length || (i(u), d(s)), l.forEach(function(g) {
      var m = n[g];
      o.indexOf(g) !== -1 ? uS(m, t, p) : zj(m, t, p);
    });
  });
  return h.catch(function(d) {
    return d;
  }), h;
}
function Fj(n) {
  return !!(n && n.message !== void 0);
}
function Zj(n, e) {
  for (var t = n, i = 0; i < e.length; i++) {
    if (t == null)
      return t;
    t = t[e[i]];
  }
  return t;
}
function dS(n, e) {
  return function(t) {
    var i;
    return n.fullFields ? i = Zj(e, n.fullFields) : i = e[t.field || n.fullField], Fj(t) ? (t.field = t.field || n.fullField, t.fieldValue = i, t) : {
      message: typeof t == "function" ? t() : t,
      fieldValue: i,
      field: t.field || n.fullField
    };
  };
}
function fS(n, e) {
  if (e) {
    for (var t in e)
      if (e.hasOwnProperty(t)) {
        var i = e[t];
        typeof i == "object" && typeof n[t] == "object" ? n[t] = ma({}, n[t], i) : n[t] = i;
      }
  }
  return n;
}
var r$ = function(e, t, i, s, r, o) {
  e.required && (!i.hasOwnProperty(e.field) || Yn(t, o || e.type)) && s.push(Ps(r.messages.required, e.fullField));
}, qj = function(e, t, i, s, r) {
  (/^\s+$/.test(t) || t === "") && s.push(Ps(r.messages.whitespace, e.fullField));
}, Wf, Wj = function() {
  if (Wf)
    return Wf;
  var n = "[a-fA-F\\d:]", e = function(w) {
    return w && w.includeBoundaries ? "(?:(?<=\\s|^)(?=" + n + ")|(?<=" + n + ")(?=\\s|$))" : "";
  }, t = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}", i = "[a-fA-F\\d]{1,4}", s = (`
(?:
(?:` + i + ":){7}(?:" + i + `|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:` + i + ":){6}(?:" + t + "|:" + i + `|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:` + i + ":){5}(?::" + t + "|(?::" + i + `){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:` + i + ":){4}(?:(?::" + i + "){0,1}:" + t + "|(?::" + i + `){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:` + i + ":){3}(?:(?::" + i + "){0,2}:" + t + "|(?::" + i + `){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:` + i + ":){2}(?:(?::" + i + "){0,3}:" + t + "|(?::" + i + `){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:` + i + ":){1}(?:(?::" + i + "){0,4}:" + t + "|(?::" + i + `){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::` + i + "){0,5}:" + t + "|(?::" + i + `){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`).replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim(), r = new RegExp("(?:^" + t + "$)|(?:^" + s + "$)"), o = new RegExp("^" + t + "$"), l = new RegExp("^" + s + "$"), a = function(w) {
    return w && w.exact ? r : new RegExp("(?:" + e(w) + t + e(w) + ")|(?:" + e(w) + s + e(w) + ")", "g");
  };
  a.v4 = function(b) {
    return b && b.exact ? o : new RegExp("" + e(b) + t + e(b), "g");
  }, a.v6 = function(b) {
    return b && b.exact ? l : new RegExp("" + e(b) + s + e(b), "g");
  };
  var c = "(?:(?:[a-z]+:)?//)", u = "(?:\\S+(?::\\S*)?@)?", h = a.v4().source, d = a.v6().source, f = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)", p = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*", g = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))", m = "(?::\\d{2,5})?", v = '(?:[/?#][^\\s"]*)?', O = "(?:" + c + "|www\\.)" + u + "(?:localhost|" + h + "|" + d + "|" + f + p + g + ")" + m + v;
  return Wf = new RegExp("(?:^" + O + "$)", "i"), Wf;
}, pS = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
  // url: new RegExp(
  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
  //   'i',
  // ),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
}, Th = {
  integer: function(e) {
    return Th.number(e) && parseInt(e, 10) === e;
  },
  float: function(e) {
    return Th.number(e) && !Th.integer(e);
  },
  array: function(e) {
    return Array.isArray(e);
  },
  regexp: function(e) {
    if (e instanceof RegExp)
      return !0;
    try {
      return !!new RegExp(e);
    } catch {
      return !1;
    }
  },
  date: function(e) {
    return typeof e.getTime == "function" && typeof e.getMonth == "function" && typeof e.getYear == "function" && !isNaN(e.getTime());
  },
  number: function(e) {
    return isNaN(e) ? !1 : typeof e == "number";
  },
  object: function(e) {
    return typeof e == "object" && !Th.array(e);
  },
  method: function(e) {
    return typeof e == "function";
  },
  email: function(e) {
    return typeof e == "string" && e.length <= 320 && !!e.match(pS.email);
  },
  url: function(e) {
    return typeof e == "string" && e.length <= 2048 && !!e.match(Wj());
  },
  hex: function(e) {
    return typeof e == "string" && !!e.match(pS.hex);
  }
}, Hj = function(e, t, i, s, r) {
  if (e.required && t === void 0) {
    r$(e, t, i, s, r);
    return;
  }
  var o = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"], l = e.type;
  o.indexOf(l) > -1 ? Th[l](t) || s.push(Ps(r.messages.types[l], e.fullField, e.type)) : l && typeof t !== e.type && s.push(Ps(r.messages.types[l], e.fullField, e.type));
}, Xj = function(e, t, i, s, r) {
  var o = typeof e.len == "number", l = typeof e.min == "number", a = typeof e.max == "number", c = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, u = t, h = null, d = typeof t == "number", f = typeof t == "string", p = Array.isArray(t);
  if (d ? h = "number" : f ? h = "string" : p && (h = "array"), !h)
    return !1;
  p && (u = t.length), f && (u = t.replace(c, "_").length), o ? u !== e.len && s.push(Ps(r.messages[h].len, e.fullField, e.len)) : l && !a && u < e.min ? s.push(Ps(r.messages[h].min, e.fullField, e.min)) : a && !l && u > e.max ? s.push(Ps(r.messages[h].max, e.fullField, e.max)) : l && a && (u < e.min || u > e.max) && s.push(Ps(r.messages[h].range, e.fullField, e.min, e.max));
}, hc = "enum", Yj = function(e, t, i, s, r) {
  e[hc] = Array.isArray(e[hc]) ? e[hc] : [], e[hc].indexOf(t) === -1 && s.push(Ps(r.messages[hc], e.fullField, e[hc].join(", ")));
}, Uj = function(e, t, i, s, r) {
  if (e.pattern) {
    if (e.pattern instanceof RegExp)
      e.pattern.lastIndex = 0, e.pattern.test(t) || s.push(Ps(r.messages.pattern.mismatch, e.fullField, t, e.pattern));
    else if (typeof e.pattern == "string") {
      var o = new RegExp(e.pattern);
      o.test(t) || s.push(Ps(r.messages.pattern.mismatch, e.fullField, t, e.pattern));
    }
  }
}, Ot = {
  required: r$,
  whitespace: qj,
  type: Hj,
  range: Xj,
  enum: Yj,
  pattern: Uj
}, Gj = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t, "string") && !e.required)
      return i();
    Ot.required(e, t, s, o, r, "string"), Yn(t, "string") || (Ot.type(e, t, s, o, r), Ot.range(e, t, s, o, r), Ot.pattern(e, t, s, o, r), e.whitespace === !0 && Ot.whitespace(e, t, s, o, r));
  }
  i(o);
}, Kj = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && Ot.type(e, t, s, o, r);
  }
  i(o);
}, Jj = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (t === "" && (t = void 0), Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && (Ot.type(e, t, s, o, r), Ot.range(e, t, s, o, r));
  }
  i(o);
}, eV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && Ot.type(e, t, s, o, r);
  }
  i(o);
}, tV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), Yn(t) || Ot.type(e, t, s, o, r);
  }
  i(o);
}, nV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && (Ot.type(e, t, s, o, r), Ot.range(e, t, s, o, r));
  }
  i(o);
}, iV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && (Ot.type(e, t, s, o, r), Ot.range(e, t, s, o, r));
  }
  i(o);
}, sV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (t == null && !e.required)
      return i();
    Ot.required(e, t, s, o, r, "array"), t != null && (Ot.type(e, t, s, o, r), Ot.range(e, t, s, o, r));
  }
  i(o);
}, rV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && Ot.type(e, t, s, o, r);
  }
  i(o);
}, oV = "enum", lV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r), t !== void 0 && Ot[oV](e, t, s, o, r);
  }
  i(o);
}, aV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t, "string") && !e.required)
      return i();
    Ot.required(e, t, s, o, r), Yn(t, "string") || Ot.pattern(e, t, s, o, r);
  }
  i(o);
}, cV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t, "date") && !e.required)
      return i();
    if (Ot.required(e, t, s, o, r), !Yn(t, "date")) {
      var a;
      t instanceof Date ? a = t : a = new Date(t), Ot.type(e, a, s, o, r), a && Ot.range(e, a.getTime(), s, o, r);
    }
  }
  i(o);
}, uV = function(e, t, i, s, r) {
  var o = [], l = Array.isArray(t) ? "array" : typeof t;
  Ot.required(e, t, s, o, r, l), i(o);
}, ov = function(e, t, i, s, r) {
  var o = e.type, l = [], a = e.required || !e.required && s.hasOwnProperty(e.field);
  if (a) {
    if (Yn(t, o) && !e.required)
      return i();
    Ot.required(e, t, s, l, r, o), Yn(t, o) || Ot.type(e, t, s, l, r);
  }
  i(l);
}, hV = function(e, t, i, s, r) {
  var o = [], l = e.required || !e.required && s.hasOwnProperty(e.field);
  if (l) {
    if (Yn(t) && !e.required)
      return i();
    Ot.required(e, t, s, o, r);
  }
  i(o);
}, Zh = {
  string: Gj,
  method: Kj,
  number: Jj,
  boolean: eV,
  regexp: tV,
  integer: nV,
  float: iV,
  array: sV,
  object: rV,
  enum: lV,
  pattern: aV,
  date: cV,
  url: ov,
  hex: ov,
  email: ov,
  required: uV,
  any: hV
};
function zb() {
  return {
    default: "Validation error on field %s",
    required: "%s is required",
    enum: "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      boolean: "%s is not a %s",
      integer: "%s is not an %s",
      float: "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function() {
      var e = JSON.parse(JSON.stringify(this));
      return e.clone = this.clone, e;
    }
  };
}
var jb = zb(), mf = /* @__PURE__ */ function() {
  function n(t) {
    this.rules = null, this._messages = jb, this.define(t);
  }
  var e = n.prototype;
  return e.define = function(i) {
    var s = this;
    if (!i)
      throw new Error("Cannot configure a schema with no rules");
    if (typeof i != "object" || Array.isArray(i))
      throw new Error("Rules must be an object");
    this.rules = {}, Object.keys(i).forEach(function(r) {
      var o = i[r];
      s.rules[r] = Array.isArray(o) ? o : [o];
    });
  }, e.messages = function(i) {
    return i && (this._messages = fS(zb(), i)), this._messages;
  }, e.validate = function(i, s, r) {
    var o = this;
    s === void 0 && (s = {}), r === void 0 && (r = function() {
    });
    var l = i, a = s, c = r;
    if (typeof a == "function" && (c = a, a = {}), !this.rules || Object.keys(this.rules).length === 0)
      return c && c(null, l), Promise.resolve(l);
    function u(g) {
      var m = [], v = {};
      function O(w) {
        if (Array.isArray(w)) {
          var x;
          m = (x = m).concat.apply(x, w);
        } else
          m.push(w);
      }
      for (var b = 0; b < g.length; b++)
        O(g[b]);
      m.length ? (v = Qb(m), c(m, v)) : c(null, l);
    }
    if (a.messages) {
      var h = this.messages();
      h === jb && (h = zb()), fS(h, a.messages), a.messages = h;
    } else
      a.messages = this.messages();
    var d = {}, f = a.keys || Object.keys(this.rules);
    f.forEach(function(g) {
      var m = o.rules[g], v = l[g];
      m.forEach(function(O) {
        var b = O;
        typeof b.transform == "function" && (l === i && (l = ma({}, l)), v = l[g] = b.transform(v)), typeof b == "function" ? b = {
          validator: b
        } : b = ma({}, b), b.validator = o.getValidationMethod(b), b.validator && (b.field = g, b.fullField = b.fullField || g, b.type = o.getType(b), d[g] = d[g] || [], d[g].push({
          rule: b,
          value: v,
          source: l,
          field: g
        }));
      });
    });
    var p = {};
    return Vj(d, a, function(g, m) {
      var v = g.rule, O = (v.type === "object" || v.type === "array") && (typeof v.fields == "object" || typeof v.defaultField == "object");
      O = O && (v.required || !v.required && g.value), v.field = g.field;
      function b(S, C) {
        return ma({}, C, {
          fullField: v.fullField + "." + S,
          fullFields: v.fullFields ? [].concat(v.fullFields, [S]) : [S]
        });
      }
      function w(S) {
        S === void 0 && (S = []);
        var C = Array.isArray(S) ? S : [S];
        !a.suppressWarning && C.length && n.warning("async-validator:", C), C.length && v.message !== void 0 && (C = [].concat(v.message));
        var k = C.map(dS(v, l));
        if (a.first && k.length)
          return p[v.field] = 1, m(k);
        if (!O)
          m(k);
        else {
          if (v.required && !g.value)
            return v.message !== void 0 ? k = [].concat(v.message).map(dS(v, l)) : a.error && (k = [a.error(v, Ps(a.messages.required, v.field))]), m(k);
          var E = {};
          v.defaultField && Object.keys(g.value).map(function(T) {
            E[T] = v.defaultField;
          }), E = ma({}, E, g.rule.fields);
          var M = {};
          Object.keys(E).forEach(function(T) {
            var B = E[T], I = Array.isArray(B) ? B : [B];
            M[T] = I.map(b.bind(null, T));
          });
          var _ = new n(M);
          _.messages(a.messages), g.rule.options && (g.rule.options.messages = a.messages, g.rule.options.error = a.error), _.validate(g.value, g.rule.options || a, function(T) {
            var B = [];
            k && k.length && B.push.apply(B, k), T && T.length && B.push.apply(B, T), m(B.length ? B : null);
          });
        }
      }
      var x;
      if (v.asyncValidator)
        x = v.asyncValidator(v, g.value, w, g.source, a);
      else if (v.validator) {
        try {
          x = v.validator(v, g.value, w, g.source, a);
        } catch (S) {
          console.error == null || console.error(S), a.suppressValidatorError || setTimeout(function() {
            throw S;
          }, 0), w(S.message);
        }
        x === !0 ? w() : x === !1 ? w(typeof v.message == "function" ? v.message(v.fullField || v.field) : v.message || (v.fullField || v.field) + " fails") : x instanceof Array ? w(x) : x instanceof Error && w(x.message);
      }
      x && x.then && x.then(function() {
        return w();
      }, function(S) {
        return w(S);
      });
    }, function(g) {
      u(g);
    }, l);
  }, e.getType = function(i) {
    if (i.type === void 0 && i.pattern instanceof RegExp && (i.type = "pattern"), typeof i.validator != "function" && i.type && !Zh.hasOwnProperty(i.type))
      throw new Error(Ps("Unknown rule type %s", i.type));
    return i.type || "string";
  }, e.getValidationMethod = function(i) {
    if (typeof i.validator == "function")
      return i.validator;
    var s = Object.keys(i), r = s.indexOf("message");
    return r !== -1 && s.splice(r, 1), s.length === 1 && s[0] === "required" ? Zh.required : Zh[this.getType(i)] || void 0;
  }, n;
}();
mf.register = function(e, t) {
  if (typeof t != "function")
    throw new Error("Cannot register a validator by type, validator is not a function");
  Zh[e] = t;
};
mf.warning = s$;
mf.messages = jb;
mf.validators = Zh;
const dV = 'a[href],button:not([disabled]),button:not([hidden]),:not([tabindex="-1"]),input:not([disabled]),input:not([type="hidden"]),select:not([disabled]),textarea:not([disabled])', fV = (n) => process.env.NODE_ENV === "test" ? !0 : getComputedStyle(n).position === "fixed" ? !1 : n.offsetParent !== null, gS = (n) => Array.from(n.querySelectorAll(dV)).filter((e) => pV(e) && fV(e)), pV = (n) => {
  if (n.tabIndex > 0 || n.tabIndex === 0 && n.getAttribute("tabIndex") !== null)
    return !0;
  if (n.disabled)
    return !1;
  switch (n.nodeName) {
    case "A":
      return !!n.href && n.rel !== "ignore";
    case "INPUT":
      return !(n.type === "hidden" || n.type === "file");
    case "BUTTON":
    case "SELECT":
    case "TEXTAREA":
      return !0;
    default:
      return !1;
  }
}, o$ = (n) => !n.getAttribute("aria-owns"), l$ = (n, e, t) => {
  const { parentNode: i } = n;
  if (!i)
    return null;
  const s = i.querySelectorAll(t), r = Array.prototype.indexOf.call(s, n);
  return s[r + e] || null;
}, Fp = (n) => {
  n && (n.focus(), !o$(n) && n.click());
}, ko = (n, e, { checkForDefaultPrevented: t = !0 } = {}) => (s) => {
  const r = n == null ? void 0 : n(s);
  if (t === !1 || !r)
    return e == null ? void 0 : e(s);
};
var gV = Object.defineProperty, mV = Object.defineProperties, vV = Object.getOwnPropertyDescriptors, mS = Object.getOwnPropertySymbols, bV = Object.prototype.hasOwnProperty, yV = Object.prototype.propertyIsEnumerable, vS = (n, e, t) => e in n ? gV(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, OV = (n, e) => {
  for (var t in e || (e = {}))
    bV.call(e, t) && vS(n, t, e[t]);
  if (mS)
    for (var t of mS(e))
      yV.call(e, t) && vS(n, t, e[t]);
  return n;
}, wV = (n, e) => mV(n, vV(e));
function bS(n, e) {
  var t;
  const i = Ln();
  return Vs(() => {
    i.value = n();
  }, wV(OV({}, e), {
    flush: (t = e == null ? void 0 : e.flush) != null ? t : "sync"
  })), n1(i);
}
var yS;
const vt = typeof window < "u", xV = (n) => typeof n < "u", SV = (n) => typeof n == "function", CV = (n) => typeof n == "string", Ig = () => {
}, kV = vt && ((yS = window == null ? void 0 : window.navigator) == null ? void 0 : yS.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function Ia(n) {
  return typeof n == "function" ? n() : y(n);
}
function PV(n, e) {
  function t(...i) {
    return new Promise((s, r) => {
      Promise.resolve(n(() => e.apply(this, i), { fn: e, thisArg: this, args: i })).then(s).catch(r);
    });
  }
  return t;
}
function EV(n, e = {}) {
  let t, i, s = Ig;
  const r = (l) => {
    clearTimeout(l), s(), s = Ig;
  };
  return (l) => {
    const a = Ia(n), c = Ia(e.maxWait);
    return t && r(t), a <= 0 || c !== void 0 && c <= 0 ? (i && (r(i), i = null), Promise.resolve(l())) : new Promise((u, h) => {
      s = e.rejectOnCancel ? h : u, c && !i && (i = setTimeout(() => {
        t && r(t), i = null, u(l());
      }, c)), t = setTimeout(() => {
        i && r(i), i = null, u(l());
      }, a);
    });
  };
}
function AV(n) {
  return n;
}
function vf(n) {
  return ME() ? (i1(n), !0) : !1;
}
function $V(n, e = 200, t = {}) {
  return PV(EV(e, t), n);
}
function TV(n, e = 200, t = {}) {
  const i = D(n.value), s = $V(() => {
    i.value = n.value;
  }, e, t);
  return ne(n, () => s()), i;
}
function _V(n, e = !0) {
  Xe() ? qe(n) : e ? n() : $e(n);
}
function Bg(n, e, t = {}) {
  const {
    immediate: i = !0
  } = t, s = D(!1);
  let r = null;
  function o() {
    r && (clearTimeout(r), r = null);
  }
  function l() {
    s.value = !1, o();
  }
  function a(...c) {
    o(), s.value = !0, r = setTimeout(() => {
      s.value = !1, r = null, n(...c);
    }, Ia(e));
  }
  return i && (s.value = !0, vt && a()), vf(l), {
    isPending: n1(s),
    start: a,
    stop: l
  };
}
function Yr(n) {
  var e;
  const t = Ia(n);
  return (e = t == null ? void 0 : t.$el) != null ? e : t;
}
const Ju = vt ? window : void 0, MV = vt ? window.document : void 0;
function Zi(...n) {
  let e, t, i, s;
  if (CV(n[0]) || Array.isArray(n[0]) ? ([t, i, s] = n, e = Ju) : [e, t, i, s] = n, !e)
    return Ig;
  Array.isArray(t) || (t = [t]), Array.isArray(i) || (i = [i]);
  const r = [], o = () => {
    r.forEach((u) => u()), r.length = 0;
  }, l = (u, h, d, f) => (u.addEventListener(h, d, f), () => u.removeEventListener(h, d, f)), a = ne(() => [Yr(e), Ia(s)], ([u, h]) => {
    o(), u && r.push(...t.flatMap((d) => i.map((f) => l(u, d, f, h))));
  }, { immediate: !0, flush: "post" }), c = () => {
    a(), o();
  };
  return vf(c), c;
}
let OS = !1;
function RV(n, e, t = {}) {
  const { window: i = Ju, ignore: s = [], capture: r = !0, detectIframe: o = !1 } = t;
  if (!i)
    return;
  kV && !OS && (OS = !0, Array.from(i.document.body.children).forEach((d) => d.addEventListener("click", Ig)));
  let l = !0;
  const a = (d) => s.some((f) => {
    if (typeof f == "string")
      return Array.from(i.document.querySelectorAll(f)).some((p) => p === d.target || d.composedPath().includes(p));
    {
      const p = Yr(f);
      return p && (d.target === p || d.composedPath().includes(p));
    }
  }), u = [
    Zi(i, "click", (d) => {
      const f = Yr(n);
      if (!(!f || f === d.target || d.composedPath().includes(f))) {
        if (d.detail === 0 && (l = !a(d)), !l) {
          l = !0;
          return;
        }
        e(d);
      }
    }, { passive: !0, capture: r }),
    Zi(i, "pointerdown", (d) => {
      const f = Yr(n);
      f && (l = !d.composedPath().includes(f) && !a(d));
    }, { passive: !0 }),
    o && Zi(i, "blur", (d) => {
      var f;
      const p = Yr(n);
      ((f = i.document.activeElement) == null ? void 0 : f.tagName) === "IFRAME" && !(p != null && p.contains(i.document.activeElement)) && e(d);
    })
  ].filter(Boolean);
  return () => u.forEach((d) => d());
}
function a$(n, e = !1) {
  const t = D(), i = () => t.value = !!n();
  return i(), _V(i, e), t;
}
function NV(n) {
  return JSON.parse(JSON.stringify(n));
}
const wS = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, xS = "__vueuse_ssr_handlers__";
wS[xS] = wS[xS] || {};
function DV(n, e, { window: t = Ju, initialValue: i = "" } = {}) {
  const s = D(i), r = $(() => {
    var o;
    return Yr(e) || ((o = t == null ? void 0 : t.document) == null ? void 0 : o.documentElement);
  });
  return ne([r, () => Ia(n)], ([o, l]) => {
    var a;
    if (o && t) {
      const c = (a = t.getComputedStyle(o).getPropertyValue(l)) == null ? void 0 : a.trim();
      s.value = c || i;
    }
  }, { immediate: !0 }), ne(s, (o) => {
    var l;
    (l = r.value) != null && l.style && r.value.style.setProperty(Ia(n), o);
  }), s;
}
function LV({ document: n = MV } = {}) {
  if (!n)
    return D("visible");
  const e = D(n.visibilityState);
  return Zi(n, "visibilitychange", () => {
    e.value = n.visibilityState;
  }), e;
}
var SS = Object.getOwnPropertySymbols, IV = Object.prototype.hasOwnProperty, BV = Object.prototype.propertyIsEnumerable, QV = (n, e) => {
  var t = {};
  for (var i in n)
    IV.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && SS)
    for (var i of SS(n))
      e.indexOf(i) < 0 && BV.call(n, i) && (t[i] = n[i]);
  return t;
};
function pn(n, e, t = {}) {
  const i = t, { window: s = Ju } = i, r = QV(i, ["window"]);
  let o;
  const l = a$(() => s && "ResizeObserver" in s), a = () => {
    o && (o.disconnect(), o = void 0);
  }, c = ne(() => Yr(n), (h) => {
    a(), l.value && s && h && (o = new ResizeObserver(e), o.observe(h, r));
  }, { immediate: !0, flush: "post" }), u = () => {
    a(), c();
  };
  return vf(u), {
    isSupported: l,
    stop: u
  };
}
var CS = Object.getOwnPropertySymbols, zV = Object.prototype.hasOwnProperty, jV = Object.prototype.propertyIsEnumerable, VV = (n, e) => {
  var t = {};
  for (var i in n)
    zV.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && CS)
    for (var i of CS(n))
      e.indexOf(i) < 0 && jV.call(n, i) && (t[i] = n[i]);
  return t;
};
function FV(n, e, t = {}) {
  const i = t, { window: s = Ju } = i, r = VV(i, ["window"]);
  let o;
  const l = a$(() => s && "MutationObserver" in s), a = () => {
    o && (o.disconnect(), o = void 0);
  }, c = ne(() => Yr(n), (h) => {
    a(), l.value && s && h && (o = new MutationObserver(e), o.observe(h, r));
  }, { immediate: !0 }), u = () => {
    a(), c();
  };
  return vf(u), {
    isSupported: l,
    stop: u
  };
}
var kS;
(function(n) {
  n.UP = "UP", n.RIGHT = "RIGHT", n.DOWN = "DOWN", n.LEFT = "LEFT", n.NONE = "NONE";
})(kS || (kS = {}));
var ZV = Object.defineProperty, PS = Object.getOwnPropertySymbols, qV = Object.prototype.hasOwnProperty, WV = Object.prototype.propertyIsEnumerable, ES = (n, e, t) => e in n ? ZV(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, HV = (n, e) => {
  for (var t in e || (e = {}))
    qV.call(e, t) && ES(n, t, e[t]);
  if (PS)
    for (var t of PS(e))
      WV.call(e, t) && ES(n, t, e[t]);
  return n;
};
const XV = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
HV({
  linear: AV
}, XV);
function YV(n, e, t, i = {}) {
  var s, r, o;
  const {
    clone: l = !1,
    passive: a = !1,
    eventName: c,
    deep: u = !1,
    defaultValue: h
  } = i, d = Xe(), f = t || (d == null ? void 0 : d.emit) || ((s = d == null ? void 0 : d.$emit) == null ? void 0 : s.bind(d)) || ((o = (r = d == null ? void 0 : d.proxy) == null ? void 0 : r.$emit) == null ? void 0 : o.bind(d == null ? void 0 : d.proxy));
  let p = c;
  e || (e = "modelValue"), p = c || p || `update:${e.toString()}`;
  const g = (v) => l ? SV(l) ? l(v) : NV(v) : v, m = () => xV(n[e]) ? g(n[e]) : h;
  if (a) {
    const v = m(), O = D(v);
    return ne(() => n[e], (b) => O.value = g(b)), ne(O, (b) => {
      (b !== n[e] || u) && f(p, b);
    }, { deep: u }), O;
  } else
    return $({
      get() {
        return m();
      },
      set(v) {
        f(p, v);
      }
    });
}
function UV({ window: n = Ju } = {}) {
  if (!n)
    return D(!1);
  const e = D(n.document.hasFocus());
  return Zi(n, "blur", () => {
    e.value = !1;
  }), Zi(n, "focus", () => {
    e.value = !0;
  }), e;
}
const c$ = () => vt && /firefox/i.test(window.navigator.userAgent), S1 = (n) => {
  let e, t;
  return n.type === "touchend" ? (t = n.changedTouches[0].clientY, e = n.changedTouches[0].clientX) : n.type.startsWith("touch") ? (t = n.touches[0].clientY, e = n.touches[0].clientX) : (t = n.clientY, e = n.clientX), {
    clientX: e,
    clientY: t
  };
};
/**
* @vue/shared v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
process.env.NODE_ENV !== "production" && Object.freeze({});
process.env.NODE_ENV !== "production" && Object.freeze([]);
const Xt = () => {
}, u$ = Object.assign, GV = Object.prototype.hasOwnProperty, Hi = (n, e) => GV.call(n, e), xt = Array.isArray, wt = (n) => typeof n == "function", bt = (n) => typeof n == "string", KV = (n) => typeof n == "symbol", ln = (n) => n !== null && typeof n == "object", Vb = (n) => (ln(n) || wt(n)) && wt(n.then) && wt(n.catch), JV = Object.prototype.toString, h$ = (n) => JV.call(n), lv = (n) => h$(n).slice(8, -1), AS = (n) => h$(n) === "[object Object]", d$ = (n) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}, eF = /-(\w)/g, tF = d$((n) => n.replace(eF, (e, t) => t ? t.toUpperCase() : "")), nF = d$((n) => n.charAt(0).toUpperCase() + n.slice(1)), iF = (n, e) => !Object.is(n, e), Si = (n) => n === void 0, Pi = (n) => typeof n == "boolean", tt = (n) => typeof n == "number", qr = (n) => !n && n !== 0 || xt(n) && n.length === 0 || ln(n) && !Object.keys(n).length, yr = (n) => typeof Element > "u" ? !1 : n instanceof Element, sF = (n) => bt(n) ? !Number.isNaN(Number(n)) : !1, f$ = (n = "") => n.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d"), Wr = (n) => nF(n), $S = (n) => Object.keys(n), rF = (n) => Object.entries(n), Zp = (n, e, t) => ({
  get value() {
    return on(n, e, t);
  },
  set value(i) {
    oz(n, e, i);
  }
});
class p$ extends Error {
  constructor(e) {
    super(e), this.name = "ElementPlusError";
  }
}
function hs(n, e) {
  throw new p$(`[${n}] ${e}`);
}
function pt(n, e) {
  if (process.env.NODE_ENV !== "production") {
    const t = bt(n) ? new p$(`[${n}] ${e}`) : n;
    console.warn(t);
  }
}
const oF = "utils/dom/style", g$ = (n = "") => n.split(" ").filter((e) => !!e.trim()), Lc = (n, e) => {
  if (!n || !e)
    return !1;
  if (e.includes(" "))
    throw new Error("className should not contain space.");
  return n.classList.contains(e);
}, ru = (n, e) => {
  !n || !e.trim() || n.classList.add(...g$(e));
}, Mo = (n, e) => {
  !n || !e.trim() || n.classList.remove(...g$(e));
}, lF = (n, e) => {
  var t;
  if (!vt || !n || !e)
    return "";
  let i = tF(e);
  i === "float" && (i = "cssFloat");
  try {
    const s = n.style[i];
    if (s)
      return s;
    const r = (t = document.defaultView) == null ? void 0 : t.getComputedStyle(n, "");
    return r ? r[i] : "";
  } catch {
    return n.style[i];
  }
};
function cs(n, e = "px") {
  if (!n)
    return "";
  if (tt(n) || sF(n))
    return `${n}${e}`;
  if (bt(n))
    return n;
  pt(oF, "binding value must be a string or number");
}
let Hf;
const aF = (n) => {
  var e;
  if (!vt)
    return 0;
  if (Hf !== void 0)
    return Hf;
  const t = document.createElement("div");
  t.className = `${n}-scrollbar__wrap`, t.style.visibility = "hidden", t.style.width = "100px", t.style.position = "absolute", t.style.top = "-9999px", document.body.appendChild(t);
  const i = t.offsetWidth;
  t.style.overflow = "scroll";
  const s = document.createElement("div");
  s.style.width = "100%", t.appendChild(s);
  const r = s.offsetWidth;
  return (e = t.parentNode) == null || e.removeChild(t), Hf = i - r, Hf;
};
function m$(n, e) {
  if (!vt)
    return;
  if (!e) {
    n.scrollTop = 0;
    return;
  }
  const t = [];
  let i = e.offsetParent;
  for (; i !== null && n !== i && n.contains(i); )
    t.push(i), i = i.offsetParent;
  const s = e.offsetTop + t.reduce((a, c) => a + c.offsetTop, 0), r = s + e.offsetHeight, o = n.scrollTop, l = o + n.clientHeight;
  s < o ? n.scrollTop = s : r > l && (n.scrollTop = r - n.clientHeight);
}
const v$ = "__epPropKey", ce = (n) => n, cF = (n) => ln(n) && !!n[v$], Pr = (n, e) => {
  if (!ln(n) || cF(n))
    return n;
  const { values: t, required: i, default: s, type: r, validator: o } = n, a = {
    type: r,
    required: !!i,
    validator: t || o ? (c) => {
      let u = !1, h = [];
      if (t && (h = Array.from(t), Hi(n, "default") && h.push(s), u || (u = h.includes(c))), o && (u || (u = o(c))), !u && h.length > 0) {
        const d = [...new Set(h)].map((f) => JSON.stringify(f)).join(", ");
        B4(`Invalid prop: validation failed${e ? ` for prop "${e}"` : ""}. Expected one of [${d}], got value ${JSON.stringify(c)}.`);
      }
      return u;
    } : void 0,
    [v$]: !0
  };
  return Hi(n, "default") && (a.default = s), a;
}, Ee = (n) => Lg(Object.entries(n).map(([e, t]) => [
  e,
  Pr(t, e)
])), kn = ce([
  String,
  Object,
  Function
]), b$ = {
  Close: Lo
}, y$ = {
  Close: Lo,
  SuccessFilled: i$,
  InfoFilled: t$,
  WarningFilled: x1,
  CircleCloseFilled: e$
}, ou = {
  success: i$,
  warning: x1,
  error: e$,
  info: t$
}, C1 = {
  validating: tc,
  success: w1,
  error: Ku
}, Ft = (n, e) => {
  if (n.install = (t) => {
    for (const i of [n, ...Object.values(e ?? {})])
      t.component(i.name, i);
  }, e)
    for (const [t, i] of Object.entries(e))
      n[t] = i;
  return n;
}, O$ = (n, e) => (n.install = (t) => {
  n._context = t._context, t.config.globalProperties[e] = n;
}, n), uF = (n, e) => (n.install = (t) => {
  t.directive(e, n);
}, n), Er = (n) => (n.install = Xt, n), hF = (...n) => (e) => {
  n.forEach((t) => {
    wt(t) ? t(e) : t.value = e;
  });
}, dt = {
  tab: "Tab",
  enter: "Enter",
  space: "Space",
  left: "ArrowLeft",
  up: "ArrowUp",
  right: "ArrowRight",
  down: "ArrowDown",
  esc: "Escape",
  delete: "Delete",
  backspace: "Backspace",
  numpadEnter: "NumpadEnter",
  pageUp: "PageUp",
  pageDown: "PageDown",
  home: "Home",
  end: "End"
}, ot = "update:modelValue", Un = "change", $a = "input", nc = ["", "default", "small", "large"], w$ = (n) => ["", ...nc].includes(n);
var qp = /* @__PURE__ */ ((n) => (n[n.TEXT = 1] = "TEXT", n[n.CLASS = 2] = "CLASS", n[n.STYLE = 4] = "STYLE", n[n.PROPS = 8] = "PROPS", n[n.FULL_PROPS = 16] = "FULL_PROPS", n[n.HYDRATE_EVENTS = 32] = "HYDRATE_EVENTS", n[n.STABLE_FRAGMENT = 64] = "STABLE_FRAGMENT", n[n.KEYED_FRAGMENT = 128] = "KEYED_FRAGMENT", n[n.UNKEYED_FRAGMENT = 256] = "UNKEYED_FRAGMENT", n[n.NEED_PATCH = 512] = "NEED_PATCH", n[n.DYNAMIC_SLOTS = 1024] = "DYNAMIC_SLOTS", n[n.HOISTED = -1] = "HOISTED", n[n.BAIL = -2] = "BAIL", n))(qp || {});
const Wp = (n) => {
  const e = xt(n) ? n : [n], t = [];
  return e.forEach((i) => {
    var s;
    xt(i) ? t.push(...Wp(i)) : lo(i) && xt(i.children) ? t.push(...Wp(i.children)) : (t.push(i), lo(i) && ((s = i.component) != null && s.subTree) && t.push(...Wp(i.component.subTree)));
  }), t;
}, TS = (n) => [...new Set(n)], _S = (n) => !n && n !== 0 ? [] : Array.isArray(n) ? n : [n], k1 = (n) => /([\uAC00-\uD7AF\u3130-\u318F])+/gi.test(n), P1 = (n) => vt ? window.requestAnimationFrame(n) : setTimeout(n, 16), x$ = (n) => vt ? window.cancelAnimationFrame(n) : clearTimeout(n), Ys = (n) => n, dF = ["class", "style"], fF = /^on[A-Z]/, pF = (n = {}) => {
  const { excludeListeners: e = !1, excludeKeys: t } = n, i = $(() => ((t == null ? void 0 : t.value) || []).concat(dF)), s = Xe();
  return s ? $(() => {
    var r;
    return Lg(Object.entries((r = s.proxy) == null ? void 0 : r.$attrs).filter(([o]) => !i.value.includes(o) && !(e && fF.test(o))));
  }) : (pt("use-attrs", "getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function"), $(() => ({})));
}, Ba = ({ from: n, replacement: e, scope: t, version: i, ref: s, type: r = "API" }, o) => {
  ne(() => y(o), (l) => {
    l && pt(t, `[${r}] ${n} is about to be deprecated in version ${i}, please use ${e} instead.
For more detail, please visit: ${s}
`);
  }, {
    immediate: !0
  });
}, S$ = (n, e, t, i) => {
  let s = {
    offsetX: 0,
    offsetY: 0
  };
  const r = (a) => {
    const c = a.clientX, u = a.clientY, { offsetX: h, offsetY: d } = s, f = n.value.getBoundingClientRect(), p = f.left, g = f.top, m = f.width, v = f.height, O = document.documentElement.clientWidth, b = document.documentElement.clientHeight, w = -p + h, x = -g + d, S = O - p - m + h, C = b - g - v + d, k = (M) => {
      let _ = h + M.clientX - c, T = d + M.clientY - u;
      i != null && i.value || (_ = Math.min(Math.max(_, w), S), T = Math.min(Math.max(T, x), C)), s = {
        offsetX: _,
        offsetY: T
      }, n.value && (n.value.style.transform = `translate(${cs(_)}, ${cs(T)})`);
    }, E = () => {
      document.removeEventListener("mousemove", k), document.removeEventListener("mouseup", E);
    };
    document.addEventListener("mousemove", k), document.addEventListener("mouseup", E);
  }, o = () => {
    e.value && n.value && e.value.addEventListener("mousedown", r);
  }, l = () => {
    e.value && n.value && e.value.removeEventListener("mousedown", r);
  };
  qe(() => {
    Vs(() => {
      t.value ? o() : l();
    });
  }), Gn(() => {
    l();
  });
};
var gF = {
  name: "en",
  el: {
    colorpicker: {
      confirm: "OK",
      clear: "Clear",
      defaultLabel: "color picker",
      description: "current color is {color}. press enter to select a new color."
    },
    datepicker: {
      now: "Now",
      today: "Today",
      cancel: "Cancel",
      clear: "Clear",
      confirm: "OK",
      dateTablePrompt: "Use the arrow keys and enter to select the day of the month",
      monthTablePrompt: "Use the arrow keys and enter to select the month",
      yearTablePrompt: "Use the arrow keys and enter to select the year",
      selectedDate: "Selected date",
      selectDate: "Select date",
      selectTime: "Select time",
      startDate: "Start Date",
      startTime: "Start Time",
      endDate: "End Date",
      endTime: "End Time",
      prevYear: "Previous Year",
      nextYear: "Next Year",
      prevMonth: "Previous Month",
      nextMonth: "Next Month",
      year: "",
      month1: "January",
      month2: "February",
      month3: "March",
      month4: "April",
      month5: "May",
      month6: "June",
      month7: "July",
      month8: "August",
      month9: "September",
      month10: "October",
      month11: "November",
      month12: "December",
      week: "week",
      weeks: {
        sun: "Sun",
        mon: "Mon",
        tue: "Tue",
        wed: "Wed",
        thu: "Thu",
        fri: "Fri",
        sat: "Sat"
      },
      weeksFull: {
        sun: "Sunday",
        mon: "Monday",
        tue: "Tuesday",
        wed: "Wednesday",
        thu: "Thursday",
        fri: "Friday",
        sat: "Saturday"
      },
      months: {
        jan: "Jan",
        feb: "Feb",
        mar: "Mar",
        apr: "Apr",
        may: "May",
        jun: "Jun",
        jul: "Jul",
        aug: "Aug",
        sep: "Sep",
        oct: "Oct",
        nov: "Nov",
        dec: "Dec"
      }
    },
    inputNumber: {
      decrease: "decrease number",
      increase: "increase number"
    },
    select: {
      loading: "Loading",
      noMatch: "No matching data",
      noData: "No data",
      placeholder: "Select"
    },
    dropdown: {
      toggleDropdown: "Toggle Dropdown"
    },
    cascader: {
      noMatch: "No matching data",
      loading: "Loading",
      placeholder: "Select",
      noData: "No data"
    },
    pagination: {
      goto: "Go to",
      pagesize: "/page",
      total: "Total {total}",
      pageClassifier: "",
      page: "Page",
      prev: "Go to previous page",
      next: "Go to next page",
      currentPage: "page {pager}",
      prevPages: "Previous {pager} pages",
      nextPages: "Next {pager} pages",
      deprecationWarning: "Deprecated usages detected, please refer to the el-pagination documentation for more details"
    },
    dialog: {
      close: "Close this dialog"
    },
    drawer: {
      close: "Close this dialog"
    },
    messagebox: {
      title: "Message",
      confirm: "OK",
      cancel: "Cancel",
      error: "Illegal input",
      close: "Close this dialog"
    },
    upload: {
      deleteTip: "press delete to remove",
      delete: "Delete",
      preview: "Preview",
      continue: "Continue"
    },
    slider: {
      defaultLabel: "slider between {min} and {max}",
      defaultRangeStartLabel: "pick start value",
      defaultRangeEndLabel: "pick end value"
    },
    table: {
      emptyText: "No Data",
      confirmFilter: "Confirm",
      resetFilter: "Reset",
      clearFilter: "All",
      sumText: "Sum"
    },
    tour: {
      next: "Next",
      previous: "Previous",
      finish: "Finish"
    },
    tree: {
      emptyText: "No Data"
    },
    transfer: {
      noMatch: "No matching data",
      noData: "No data",
      titles: ["List 1", "List 2"],
      filterPlaceholder: "Enter keyword",
      noCheckedFormat: "{total} items",
      hasCheckedFormat: "{checked}/{total} checked"
    },
    image: {
      error: "FAILED"
    },
    pageHeader: {
      title: "Back"
    },
    popconfirm: {
      confirmButtonText: "Yes",
      cancelButtonText: "No"
    },
    carousel: {
      leftArrow: "Carousel arrow left",
      rightArrow: "Carousel arrow right",
      indicator: "Carousel switch to index {index}"
    }
  }
};
const mF = (n) => (e, t) => vF(e, t, y(n)), vF = (n, e, t) => on(t, n, n).replace(/\{(\w+)\}/g, (i, s) => {
  var r;
  return `${(r = e == null ? void 0 : e[s]) != null ? r : `{${s}}`}`;
}), bF = (n) => {
  const e = $(() => y(n).name), t = Fi(n) ? n : D(n);
  return {
    lang: e,
    locale: t,
    t: mF(n)
  };
}, C$ = Symbol("localeContextKey"), mn = (n) => {
  const e = n || ke(C$, D());
  return bF($(() => e.value || gF));
};
/**
* @vue/reactivity v3.4.19
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
function k$(n, ...e) {
  console.warn(`[Vue warn] ${n}`, ...e);
}
let yF;
function OF(n, e = yF) {
  e && e.active && e.effects.push(n);
}
let qh;
class wF {
  constructor(e, t, i, s) {
    this.fn = e, this.trigger = t, this.scheduler = i, this.active = !0, this.deps = [], this._dirtyLevel = 4, this._trackId = 0, this._runnings = 0, this._shouldSchedule = !1, this._depsLength = 0, OF(this, s);
  }
  get dirty() {
    if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {
      this._dirtyLevel = 1, SF();
      for (let e = 0; e < this._depsLength; e++) {
        const t = this.deps[e];
        if (t.computed && (xF(t.computed), this._dirtyLevel >= 4))
          break;
      }
      this._dirtyLevel === 1 && (this._dirtyLevel = 0), CF();
    }
    return this._dirtyLevel >= 4;
  }
  set dirty(e) {
    this._dirtyLevel = e ? 4 : 0;
  }
  run() {
    if (this._dirtyLevel = 0, !this.active)
      return this.fn();
    let e = Ta, t = qh;
    try {
      return Ta = !0, qh = this, this._runnings++, MS(this), this.fn();
    } finally {
      RS(this), this._runnings--, qh = t, Ta = e;
    }
  }
  stop() {
    var e;
    this.active && (MS(this), RS(this), (e = this.onStop) == null || e.call(this), this.active = !1);
  }
}
function xF(n) {
  return n.value;
}
function MS(n) {
  n._trackId++, n._depsLength = 0;
}
function RS(n) {
  if (n.deps.length > n._depsLength) {
    for (let e = n._depsLength; e < n.deps.length; e++)
      P$(n.deps[e], n);
    n.deps.length = n._depsLength;
  }
}
function P$(n, e) {
  const t = n.get(e);
  t !== void 0 && e._trackId !== t && (n.delete(e), n.size === 0 && n.cleanup());
}
let Ta = !0, Fb = 0;
const E$ = [];
function SF() {
  E$.push(Ta), Ta = !1;
}
function CF() {
  const n = E$.pop();
  Ta = n === void 0 ? !0 : n;
}
function kF() {
  Fb++;
}
function PF() {
  for (Fb--; !Fb && Zb.length; )
    Zb.shift()();
}
function EF(n, e, t) {
  var i;
  if (e.get(n) !== n._trackId) {
    e.set(n, n._trackId);
    const s = n.deps[n._depsLength];
    s !== e ? (s && P$(s, n), n.deps[n._depsLength++] = e) : n._depsLength++, process.env.NODE_ENV !== "production" && ((i = n.onTrack) == null || i.call(n, u$({ effect: n }, t)));
  }
}
const Zb = [];
function AF(n, e, t) {
  var i;
  kF();
  for (const s of n.keys()) {
    let r;
    s._dirtyLevel < e && (r ?? (r = n.get(s) === s._trackId)) && (s._shouldSchedule || (s._shouldSchedule = s._dirtyLevel === 0), s._dirtyLevel = e), s._shouldSchedule && (r ?? (r = n.get(s) === s._trackId)) && (process.env.NODE_ENV !== "production" && ((i = s.onTrigger) == null || i.call(s, u$({ effect: s }, t))), s.trigger(), (!s._runnings || s.allowRecurse) && s._dirtyLevel !== 2 && (s._shouldSchedule = !1, s.scheduler && Zb.push(s.scheduler)));
  }
  PF();
}
const $F = (n, e) => {
  const t = /* @__PURE__ */ new Map();
  return t.cleanup = n, t.computed = e, t;
};
Symbol(process.env.NODE_ENV !== "production" ? "iterate" : "");
Symbol(process.env.NODE_ENV !== "production" ? "Map key iterate" : "");
new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((n) => n !== "arguments" && n !== "caller").map((n) => Symbol[n]).filter(KV)
);
function e0(n) {
  const e = n && n.__v_raw;
  return e ? e0(e) : n;
}
const TF = "Computed is still dirty after getter evaluation, likely because a computed is mutating its own dependency in its getter. State mutations in computed getters should be avoided.  Check the docs for more details: https://vuejs.org/guide/essentials/computed.html#getters-should-be-side-effect-free";
class A$ {
  constructor(e, t, i, s) {
    this._setter = t, this.dep = void 0, this.__v_isRef = !0, this.__v_isReadonly = !1, this.effect = new wF(
      () => e(this._value),
      () => av(
        this,
        this.effect._dirtyLevel === 2 ? 2 : 3
      )
    ), this.effect.computed = this, this.effect.active = this._cacheable = !s, this.__v_isReadonly = i;
  }
  get value() {
    const e = e0(this);
    return (!e._cacheable || e.effect.dirty) && iF(e._value, e._value = e.effect.run()) && av(e, 4), MF(e), e.effect._dirtyLevel >= 2 && (process.env.NODE_ENV !== "production" && k$(TF), av(e, 2)), e._value;
  }
  set value(e) {
    this._setter(e);
  }
  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x
  get _dirty() {
    return this.effect.dirty;
  }
  set _dirty(e) {
    this.effect.dirty = e;
  }
  // #endregion
}
function _F(n, e, t = !1) {
  let i, s;
  const r = wt(n);
  r ? (i = n, s = process.env.NODE_ENV !== "production" ? () => {
    k$("Write operation failed: computed value is readonly");
  } : Xt) : (i = n.get, s = n.set);
  const o = new A$(i, s, r || !s, t);
  return process.env.NODE_ENV !== "production" && e && !t && (o.effect.onTrack = e.onTrack, o.effect.onTrigger = e.onTrigger), o;
}
function MF(n) {
  var e;
  Ta && qh && (n = e0(n), EF(
    qh,
    (e = n.dep) != null ? e : n.dep = $F(
      () => n.dep = void 0,
      n instanceof A$ ? n : void 0
    ),
    process.env.NODE_ENV !== "production" ? {
      target: n,
      type: "get",
      key: "value"
    } : void 0
  ));
}
function av(n, e = 4, t) {
  n = e0(n);
  const i = n.dep;
  i && AF(
    i,
    e,
    process.env.NODE_ENV !== "production" ? {
      target: n,
      type: "set",
      key: "value",
      newValue: t
    } : void 0
  );
}
const Wh = "el", RF = "is-", Jl = (n, e, t, i, s) => {
  let r = `${n}-${e}`;
  return t && (r += `-${t}`), i && (r += `__${i}`), s && (r += `--${s}`), r;
}, $$ = Symbol("namespaceContextKey"), E1 = (n) => {
  const e = n || (Xe() ? ke($$, D(Wh)) : D(Wh));
  return $(() => y(e) || Wh);
}, me = (n, e) => {
  const t = E1(e);
  return {
    namespace: t,
    b: (g = "") => Jl(t.value, n, g, "", ""),
    e: (g) => g ? Jl(t.value, n, "", g, "") : "",
    m: (g) => g ? Jl(t.value, n, "", "", g) : "",
    be: (g, m) => g && m ? Jl(t.value, n, g, m, "") : "",
    em: (g, m) => g && m ? Jl(t.value, n, "", g, m) : "",
    bm: (g, m) => g && m ? Jl(t.value, n, g, "", m) : "",
    bem: (g, m, v) => g && m && v ? Jl(t.value, n, g, m, v) : "",
    is: (g, ...m) => {
      const v = m.length >= 1 ? m[0] : !0;
      return g && v ? `${RF}${g}` : "";
    },
    cssVar: (g) => {
      const m = {};
      for (const v in g)
        g[v] && (m[`--${t.value}-${v}`] = g[v]);
      return m;
    },
    cssVarName: (g) => `--${t.value}-${g}`,
    cssVarBlock: (g) => {
      const m = {};
      for (const v in g)
        g[v] && (m[`--${t.value}-${n}-${v}`] = g[v]);
      return m;
    },
    cssVarBlockName: (g) => `--${t.value}-${n}-${g}`
  };
}, T$ = (n, e = {}) => {
  Fi(n) || hs("[useLockscreen]", "You need to pass a ref param to this function");
  const t = e.ns || me("popup"), i = _F(() => t.bm("parent", "hidden"));
  if (!vt || Lc(document.body, i.value))
    return;
  let s = 0, r = !1, o = "0";
  const l = () => {
    setTimeout(() => {
      Mo(document == null ? void 0 : document.body, i.value), r && document && (document.body.style.width = o);
    }, 200);
  };
  ne(n, (a) => {
    if (!a) {
      l();
      return;
    }
    r = !Lc(document.body, i.value), r && (o = document.body.style.width), s = aF(t.namespace.value);
    const c = document.documentElement.clientHeight < document.body.scrollHeight, u = lF(document.body, "overflowY");
    s > 0 && (c || u === "scroll") && r && (document.body.style.width = `calc(100% - ${s}px)`), ru(document.body, i.value);
  }), i1(() => l());
}, NF = Pr({
  type: ce(Boolean),
  default: null
}), DF = Pr({
  type: ce(Function)
}), _$ = (n) => {
  const e = `update:${n}`, t = `onUpdate:${n}`, i = [e], s = {
    [n]: NF,
    [t]: DF
  };
  return {
    useModelToggle: ({
      indicator: o,
      toggleReason: l,
      shouldHideWhenRouteChanges: a,
      shouldProceed: c,
      onShow: u,
      onHide: h
    }) => {
      const d = Xe(), { emit: f } = d, p = d.props, g = $(() => wt(p[t])), m = $(() => p[n] === null), v = (C) => {
        o.value !== !0 && (o.value = !0, l && (l.value = C), wt(u) && u(C));
      }, O = (C) => {
        o.value !== !1 && (o.value = !1, l && (l.value = C), wt(h) && h(C));
      }, b = (C) => {
        if (p.disabled === !0 || wt(c) && !c())
          return;
        const k = g.value && vt;
        k && f(e, !0), (m.value || !k) && v(C);
      }, w = (C) => {
        if (p.disabled === !0 || !vt)
          return;
        const k = g.value && vt;
        k && f(e, !1), (m.value || !k) && O(C);
      }, x = (C) => {
        Pi(C) && (p.disabled && C ? g.value && f(e, !1) : o.value !== C && (C ? v() : O()));
      }, S = () => {
        o.value ? w() : b();
      };
      return ne(() => p[n], x), a && d.appContext.config.globalProperties.$route !== void 0 && ne(() => ({
        ...d.proxy.$route
      }), () => {
        a.value && o.value && w();
      }), qe(() => {
        x(p[n]);
      }), {
        hide: w,
        show: b,
        toggle: S,
        hasUpdateHandler: g
      };
    },
    useModelToggleProps: s,
    useModelToggleEmits: i
  };
};
_$("modelValue");
const M$ = (n) => {
  const e = Xe();
  return $(() => {
    var t, i;
    return (i = (t = e == null ? void 0 : e.proxy) == null ? void 0 : t.$props) == null ? void 0 : i[n];
  });
};
var rs = "top", Us = "bottom", Gs = "right", os = "left", A1 = "auto", bf = [rs, Us, Gs, os], lu = "start", Cd = "end", LF = "clippingParents", R$ = "viewport", bh = "popper", IF = "reference", NS = bf.reduce(function(n, e) {
  return n.concat([e + "-" + lu, e + "-" + Cd]);
}, []), yf = [].concat(bf, [A1]).reduce(function(n, e) {
  return n.concat([e, e + "-" + lu, e + "-" + Cd]);
}, []), BF = "beforeRead", QF = "read", zF = "afterRead", jF = "beforeMain", VF = "main", FF = "afterMain", ZF = "beforeWrite", qF = "write", WF = "afterWrite", HF = [BF, QF, zF, jF, VF, FF, ZF, qF, WF];
function co(n) {
  return n ? (n.nodeName || "").toLowerCase() : null;
}
function Ar(n) {
  if (n == null)
    return window;
  if (n.toString() !== "[object Window]") {
    var e = n.ownerDocument;
    return e && e.defaultView || window;
  }
  return n;
}
function au(n) {
  var e = Ar(n).Element;
  return n instanceof e || n instanceof Element;
}
function Fs(n) {
  var e = Ar(n).HTMLElement;
  return n instanceof e || n instanceof HTMLElement;
}
function $1(n) {
  if (typeof ShadowRoot > "u")
    return !1;
  var e = Ar(n).ShadowRoot;
  return n instanceof e || n instanceof ShadowRoot;
}
function XF(n) {
  var e = n.state;
  Object.keys(e.elements).forEach(function(t) {
    var i = e.styles[t] || {}, s = e.attributes[t] || {}, r = e.elements[t];
    !Fs(r) || !co(r) || (Object.assign(r.style, i), Object.keys(s).forEach(function(o) {
      var l = s[o];
      l === !1 ? r.removeAttribute(o) : r.setAttribute(o, l === !0 ? "" : l);
    }));
  });
}
function YF(n) {
  var e = n.state, t = { popper: { position: e.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
  return Object.assign(e.elements.popper.style, t.popper), e.styles = t, e.elements.arrow && Object.assign(e.elements.arrow.style, t.arrow), function() {
    Object.keys(e.elements).forEach(function(i) {
      var s = e.elements[i], r = e.attributes[i] || {}, o = Object.keys(e.styles.hasOwnProperty(i) ? e.styles[i] : t[i]), l = o.reduce(function(a, c) {
        return a[c] = "", a;
      }, {});
      !Fs(s) || !co(s) || (Object.assign(s.style, l), Object.keys(r).forEach(function(a) {
        s.removeAttribute(a);
      }));
    });
  };
}
var N$ = { name: "applyStyles", enabled: !0, phase: "write", fn: XF, effect: YF, requires: ["computeStyles"] };
function to(n) {
  return n.split("-")[0];
}
var _a = Math.max, Qg = Math.min, cu = Math.round;
function uu(n, e) {
  e === void 0 && (e = !1);
  var t = n.getBoundingClientRect(), i = 1, s = 1;
  if (Fs(n) && e) {
    var r = n.offsetHeight, o = n.offsetWidth;
    o > 0 && (i = cu(t.width) / o || 1), r > 0 && (s = cu(t.height) / r || 1);
  }
  return { width: t.width / i, height: t.height / s, top: t.top / s, right: t.right / i, bottom: t.bottom / s, left: t.left / i, x: t.left / i, y: t.top / s };
}
function T1(n) {
  var e = uu(n), t = n.offsetWidth, i = n.offsetHeight;
  return Math.abs(e.width - t) <= 1 && (t = e.width), Math.abs(e.height - i) <= 1 && (i = e.height), { x: n.offsetLeft, y: n.offsetTop, width: t, height: i };
}
function D$(n, e) {
  var t = e.getRootNode && e.getRootNode();
  if (n.contains(e))
    return !0;
  if (t && $1(t)) {
    var i = e;
    do {
      if (i && n.isSameNode(i))
        return !0;
      i = i.parentNode || i.host;
    } while (i);
  }
  return !1;
}
function Io(n) {
  return Ar(n).getComputedStyle(n);
}
function UF(n) {
  return ["table", "td", "th"].indexOf(co(n)) >= 0;
}
function Wl(n) {
  return ((au(n) ? n.ownerDocument : n.document) || window.document).documentElement;
}
function t0(n) {
  return co(n) === "html" ? n : n.assignedSlot || n.parentNode || ($1(n) ? n.host : null) || Wl(n);
}
function DS(n) {
  return !Fs(n) || Io(n).position === "fixed" ? null : n.offsetParent;
}
function GF(n) {
  var e = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1, t = navigator.userAgent.indexOf("Trident") !== -1;
  if (t && Fs(n)) {
    var i = Io(n);
    if (i.position === "fixed")
      return null;
  }
  var s = t0(n);
  for ($1(s) && (s = s.host); Fs(s) && ["html", "body"].indexOf(co(s)) < 0; ) {
    var r = Io(s);
    if (r.transform !== "none" || r.perspective !== "none" || r.contain === "paint" || ["transform", "perspective"].indexOf(r.willChange) !== -1 || e && r.willChange === "filter" || e && r.filter && r.filter !== "none")
      return s;
    s = s.parentNode;
  }
  return null;
}
function Of(n) {
  for (var e = Ar(n), t = DS(n); t && UF(t) && Io(t).position === "static"; )
    t = DS(t);
  return t && (co(t) === "html" || co(t) === "body" && Io(t).position === "static") ? e : t || GF(n) || e;
}
function _1(n) {
  return ["top", "bottom"].indexOf(n) >= 0 ? "x" : "y";
}
function Hh(n, e, t) {
  return _a(n, Qg(e, t));
}
function KF(n, e, t) {
  var i = Hh(n, e, t);
  return i > t ? t : i;
}
function L$() {
  return { top: 0, right: 0, bottom: 0, left: 0 };
}
function I$(n) {
  return Object.assign({}, L$(), n);
}
function B$(n, e) {
  return e.reduce(function(t, i) {
    return t[i] = n, t;
  }, {});
}
var JF = function(n, e) {
  return n = typeof n == "function" ? n(Object.assign({}, e.rects, { placement: e.placement })) : n, I$(typeof n != "number" ? n : B$(n, bf));
};
function eZ(n) {
  var e, t = n.state, i = n.name, s = n.options, r = t.elements.arrow, o = t.modifiersData.popperOffsets, l = to(t.placement), a = _1(l), c = [os, Gs].indexOf(l) >= 0, u = c ? "height" : "width";
  if (!(!r || !o)) {
    var h = JF(s.padding, t), d = T1(r), f = a === "y" ? rs : os, p = a === "y" ? Us : Gs, g = t.rects.reference[u] + t.rects.reference[a] - o[a] - t.rects.popper[u], m = o[a] - t.rects.reference[a], v = Of(r), O = v ? a === "y" ? v.clientHeight || 0 : v.clientWidth || 0 : 0, b = g / 2 - m / 2, w = h[f], x = O - d[u] - h[p], S = O / 2 - d[u] / 2 + b, C = Hh(w, S, x), k = a;
    t.modifiersData[i] = (e = {}, e[k] = C, e.centerOffset = C - S, e);
  }
}
function tZ(n) {
  var e = n.state, t = n.options, i = t.element, s = i === void 0 ? "[data-popper-arrow]" : i;
  s != null && (typeof s == "string" && (s = e.elements.popper.querySelector(s), !s) || !D$(e.elements.popper, s) || (e.elements.arrow = s));
}
var nZ = { name: "arrow", enabled: !0, phase: "main", fn: eZ, effect: tZ, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] };
function hu(n) {
  return n.split("-")[1];
}
var iZ = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
function sZ(n) {
  var e = n.x, t = n.y, i = window, s = i.devicePixelRatio || 1;
  return { x: cu(e * s) / s || 0, y: cu(t * s) / s || 0 };
}
function LS(n) {
  var e, t = n.popper, i = n.popperRect, s = n.placement, r = n.variation, o = n.offsets, l = n.position, a = n.gpuAcceleration, c = n.adaptive, u = n.roundOffsets, h = n.isFixed, d = o.x, f = d === void 0 ? 0 : d, p = o.y, g = p === void 0 ? 0 : p, m = typeof u == "function" ? u({ x: f, y: g }) : { x: f, y: g };
  f = m.x, g = m.y;
  var v = o.hasOwnProperty("x"), O = o.hasOwnProperty("y"), b = os, w = rs, x = window;
  if (c) {
    var S = Of(t), C = "clientHeight", k = "clientWidth";
    if (S === Ar(t) && (S = Wl(t), Io(S).position !== "static" && l === "absolute" && (C = "scrollHeight", k = "scrollWidth")), S = S, s === rs || (s === os || s === Gs) && r === Cd) {
      w = Us;
      var E = h && S === x && x.visualViewport ? x.visualViewport.height : S[C];
      g -= E - i.height, g *= a ? 1 : -1;
    }
    if (s === os || (s === rs || s === Us) && r === Cd) {
      b = Gs;
      var M = h && S === x && x.visualViewport ? x.visualViewport.width : S[k];
      f -= M - i.width, f *= a ? 1 : -1;
    }
  }
  var _ = Object.assign({ position: l }, c && iZ), T = u === !0 ? sZ({ x: f, y: g }) : { x: f, y: g };
  if (f = T.x, g = T.y, a) {
    var B;
    return Object.assign({}, _, (B = {}, B[w] = O ? "0" : "", B[b] = v ? "0" : "", B.transform = (x.devicePixelRatio || 1) <= 1 ? "translate(" + f + "px, " + g + "px)" : "translate3d(" + f + "px, " + g + "px, 0)", B));
  }
  return Object.assign({}, _, (e = {}, e[w] = O ? g + "px" : "", e[b] = v ? f + "px" : "", e.transform = "", e));
}
function rZ(n) {
  var e = n.state, t = n.options, i = t.gpuAcceleration, s = i === void 0 ? !0 : i, r = t.adaptive, o = r === void 0 ? !0 : r, l = t.roundOffsets, a = l === void 0 ? !0 : l, c = { placement: to(e.placement), variation: hu(e.placement), popper: e.elements.popper, popperRect: e.rects.popper, gpuAcceleration: s, isFixed: e.options.strategy === "fixed" };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign({}, e.styles.popper, LS(Object.assign({}, c, { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: o, roundOffsets: a })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign({}, e.styles.arrow, LS(Object.assign({}, c, { offsets: e.modifiersData.arrow, position: "absolute", adaptive: !1, roundOffsets: a })))), e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-placement": e.placement });
}
var Q$ = { name: "computeStyles", enabled: !0, phase: "beforeWrite", fn: rZ, data: {} }, Xf = { passive: !0 };
function oZ(n) {
  var e = n.state, t = n.instance, i = n.options, s = i.scroll, r = s === void 0 ? !0 : s, o = i.resize, l = o === void 0 ? !0 : o, a = Ar(e.elements.popper), c = [].concat(e.scrollParents.reference, e.scrollParents.popper);
  return r && c.forEach(function(u) {
    u.addEventListener("scroll", t.update, Xf);
  }), l && a.addEventListener("resize", t.update, Xf), function() {
    r && c.forEach(function(u) {
      u.removeEventListener("scroll", t.update, Xf);
    }), l && a.removeEventListener("resize", t.update, Xf);
  };
}
var z$ = { name: "eventListeners", enabled: !0, phase: "write", fn: function() {
}, effect: oZ, data: {} }, lZ = { left: "right", right: "left", bottom: "top", top: "bottom" };
function Hp(n) {
  return n.replace(/left|right|bottom|top/g, function(e) {
    return lZ[e];
  });
}
var aZ = { start: "end", end: "start" };
function IS(n) {
  return n.replace(/start|end/g, function(e) {
    return aZ[e];
  });
}
function M1(n) {
  var e = Ar(n), t = e.pageXOffset, i = e.pageYOffset;
  return { scrollLeft: t, scrollTop: i };
}
function R1(n) {
  return uu(Wl(n)).left + M1(n).scrollLeft;
}
function cZ(n) {
  var e = Ar(n), t = Wl(n), i = e.visualViewport, s = t.clientWidth, r = t.clientHeight, o = 0, l = 0;
  return i && (s = i.width, r = i.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (o = i.offsetLeft, l = i.offsetTop)), { width: s, height: r, x: o + R1(n), y: l };
}
function uZ(n) {
  var e, t = Wl(n), i = M1(n), s = (e = n.ownerDocument) == null ? void 0 : e.body, r = _a(t.scrollWidth, t.clientWidth, s ? s.scrollWidth : 0, s ? s.clientWidth : 0), o = _a(t.scrollHeight, t.clientHeight, s ? s.scrollHeight : 0, s ? s.clientHeight : 0), l = -i.scrollLeft + R1(n), a = -i.scrollTop;
  return Io(s || t).direction === "rtl" && (l += _a(t.clientWidth, s ? s.clientWidth : 0) - r), { width: r, height: o, x: l, y: a };
}
function N1(n) {
  var e = Io(n), t = e.overflow, i = e.overflowX, s = e.overflowY;
  return /auto|scroll|overlay|hidden/.test(t + s + i);
}
function j$(n) {
  return ["html", "body", "#document"].indexOf(co(n)) >= 0 ? n.ownerDocument.body : Fs(n) && N1(n) ? n : j$(t0(n));
}
function Xh(n, e) {
  var t;
  e === void 0 && (e = []);
  var i = j$(n), s = i === ((t = n.ownerDocument) == null ? void 0 : t.body), r = Ar(i), o = s ? [r].concat(r.visualViewport || [], N1(i) ? i : []) : i, l = e.concat(o);
  return s ? l : l.concat(Xh(t0(o)));
}
function qb(n) {
  return Object.assign({}, n, { left: n.x, top: n.y, right: n.x + n.width, bottom: n.y + n.height });
}
function hZ(n) {
  var e = uu(n);
  return e.top = e.top + n.clientTop, e.left = e.left + n.clientLeft, e.bottom = e.top + n.clientHeight, e.right = e.left + n.clientWidth, e.width = n.clientWidth, e.height = n.clientHeight, e.x = e.left, e.y = e.top, e;
}
function BS(n, e) {
  return e === R$ ? qb(cZ(n)) : au(e) ? hZ(e) : qb(uZ(Wl(n)));
}
function dZ(n) {
  var e = Xh(t0(n)), t = ["absolute", "fixed"].indexOf(Io(n).position) >= 0, i = t && Fs(n) ? Of(n) : n;
  return au(i) ? e.filter(function(s) {
    return au(s) && D$(s, i) && co(s) !== "body";
  }) : [];
}
function fZ(n, e, t) {
  var i = e === "clippingParents" ? dZ(n) : [].concat(e), s = [].concat(i, [t]), r = s[0], o = s.reduce(function(l, a) {
    var c = BS(n, a);
    return l.top = _a(c.top, l.top), l.right = Qg(c.right, l.right), l.bottom = Qg(c.bottom, l.bottom), l.left = _a(c.left, l.left), l;
  }, BS(n, r));
  return o.width = o.right - o.left, o.height = o.bottom - o.top, o.x = o.left, o.y = o.top, o;
}
function V$(n) {
  var e = n.reference, t = n.element, i = n.placement, s = i ? to(i) : null, r = i ? hu(i) : null, o = e.x + e.width / 2 - t.width / 2, l = e.y + e.height / 2 - t.height / 2, a;
  switch (s) {
    case rs:
      a = { x: o, y: e.y - t.height };
      break;
    case Us:
      a = { x: o, y: e.y + e.height };
      break;
    case Gs:
      a = { x: e.x + e.width, y: l };
      break;
    case os:
      a = { x: e.x - t.width, y: l };
      break;
    default:
      a = { x: e.x, y: e.y };
  }
  var c = s ? _1(s) : null;
  if (c != null) {
    var u = c === "y" ? "height" : "width";
    switch (r) {
      case lu:
        a[c] = a[c] - (e[u] / 2 - t[u] / 2);
        break;
      case Cd:
        a[c] = a[c] + (e[u] / 2 - t[u] / 2);
        break;
    }
  }
  return a;
}
function kd(n, e) {
  e === void 0 && (e = {});
  var t = e, i = t.placement, s = i === void 0 ? n.placement : i, r = t.boundary, o = r === void 0 ? LF : r, l = t.rootBoundary, a = l === void 0 ? R$ : l, c = t.elementContext, u = c === void 0 ? bh : c, h = t.altBoundary, d = h === void 0 ? !1 : h, f = t.padding, p = f === void 0 ? 0 : f, g = I$(typeof p != "number" ? p : B$(p, bf)), m = u === bh ? IF : bh, v = n.rects.popper, O = n.elements[d ? m : u], b = fZ(au(O) ? O : O.contextElement || Wl(n.elements.popper), o, a), w = uu(n.elements.reference), x = V$({ reference: w, element: v, strategy: "absolute", placement: s }), S = qb(Object.assign({}, v, x)), C = u === bh ? S : w, k = { top: b.top - C.top + g.top, bottom: C.bottom - b.bottom + g.bottom, left: b.left - C.left + g.left, right: C.right - b.right + g.right }, E = n.modifiersData.offset;
  if (u === bh && E) {
    var M = E[s];
    Object.keys(k).forEach(function(_) {
      var T = [Gs, Us].indexOf(_) >= 0 ? 1 : -1, B = [rs, Us].indexOf(_) >= 0 ? "y" : "x";
      k[_] += M[B] * T;
    });
  }
  return k;
}
function pZ(n, e) {
  e === void 0 && (e = {});
  var t = e, i = t.placement, s = t.boundary, r = t.rootBoundary, o = t.padding, l = t.flipVariations, a = t.allowedAutoPlacements, c = a === void 0 ? yf : a, u = hu(i), h = u ? l ? NS : NS.filter(function(p) {
    return hu(p) === u;
  }) : bf, d = h.filter(function(p) {
    return c.indexOf(p) >= 0;
  });
  d.length === 0 && (d = h);
  var f = d.reduce(function(p, g) {
    return p[g] = kd(n, { placement: g, boundary: s, rootBoundary: r, padding: o })[to(g)], p;
  }, {});
  return Object.keys(f).sort(function(p, g) {
    return f[p] - f[g];
  });
}
function gZ(n) {
  if (to(n) === A1)
    return [];
  var e = Hp(n);
  return [IS(n), e, IS(e)];
}
function mZ(n) {
  var e = n.state, t = n.options, i = n.name;
  if (!e.modifiersData[i]._skip) {
    for (var s = t.mainAxis, r = s === void 0 ? !0 : s, o = t.altAxis, l = o === void 0 ? !0 : o, a = t.fallbackPlacements, c = t.padding, u = t.boundary, h = t.rootBoundary, d = t.altBoundary, f = t.flipVariations, p = f === void 0 ? !0 : f, g = t.allowedAutoPlacements, m = e.options.placement, v = to(m), O = v === m, b = a || (O || !p ? [Hp(m)] : gZ(m)), w = [m].concat(b).reduce(function(U, le) {
      return U.concat(to(le) === A1 ? pZ(e, { placement: le, boundary: u, rootBoundary: h, padding: c, flipVariations: p, allowedAutoPlacements: g }) : le);
    }, []), x = e.rects.reference, S = e.rects.popper, C = /* @__PURE__ */ new Map(), k = !0, E = w[0], M = 0; M < w.length; M++) {
      var _ = w[M], T = to(_), B = hu(_) === lu, I = [rs, Us].indexOf(T) >= 0, P = I ? "width" : "height", A = kd(e, { placement: _, boundary: u, rootBoundary: h, altBoundary: d, padding: c }), N = I ? B ? Gs : os : B ? Us : rs;
      x[P] > S[P] && (N = Hp(N));
      var q = Hp(N), j = [];
      if (r && j.push(A[T] <= 0), l && j.push(A[N] <= 0, A[q] <= 0), j.every(function(U) {
        return U;
      })) {
        E = _, k = !1;
        break;
      }
      C.set(_, j);
    }
    if (k)
      for (var H = p ? 3 : 1, oe = function(U) {
        var le = w.find(function(he) {
          var ee = C.get(he);
          if (ee)
            return ee.slice(0, U).every(function(pe) {
              return pe;
            });
        });
        if (le)
          return E = le, "break";
      }, te = H; te > 0; te--) {
        var W = oe(te);
        if (W === "break")
          break;
      }
    e.placement !== E && (e.modifiersData[i]._skip = !0, e.placement = E, e.reset = !0);
  }
}
var vZ = { name: "flip", enabled: !0, phase: "main", fn: mZ, requiresIfExists: ["offset"], data: { _skip: !1 } };
function QS(n, e, t) {
  return t === void 0 && (t = { x: 0, y: 0 }), { top: n.top - e.height - t.y, right: n.right - e.width + t.x, bottom: n.bottom - e.height + t.y, left: n.left - e.width - t.x };
}
function zS(n) {
  return [rs, Gs, Us, os].some(function(e) {
    return n[e] >= 0;
  });
}
function bZ(n) {
  var e = n.state, t = n.name, i = e.rects.reference, s = e.rects.popper, r = e.modifiersData.preventOverflow, o = kd(e, { elementContext: "reference" }), l = kd(e, { altBoundary: !0 }), a = QS(o, i), c = QS(l, s, r), u = zS(a), h = zS(c);
  e.modifiersData[t] = { referenceClippingOffsets: a, popperEscapeOffsets: c, isReferenceHidden: u, hasPopperEscaped: h }, e.attributes.popper = Object.assign({}, e.attributes.popper, { "data-popper-reference-hidden": u, "data-popper-escaped": h });
}
var yZ = { name: "hide", enabled: !0, phase: "main", requiresIfExists: ["preventOverflow"], fn: bZ };
function OZ(n, e, t) {
  var i = to(n), s = [os, rs].indexOf(i) >= 0 ? -1 : 1, r = typeof t == "function" ? t(Object.assign({}, e, { placement: n })) : t, o = r[0], l = r[1];
  return o = o || 0, l = (l || 0) * s, [os, Gs].indexOf(i) >= 0 ? { x: l, y: o } : { x: o, y: l };
}
function wZ(n) {
  var e = n.state, t = n.options, i = n.name, s = t.offset, r = s === void 0 ? [0, 0] : s, o = yf.reduce(function(u, h) {
    return u[h] = OZ(h, e.rects, r), u;
  }, {}), l = o[e.placement], a = l.x, c = l.y;
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += a, e.modifiersData.popperOffsets.y += c), e.modifiersData[i] = o;
}
var xZ = { name: "offset", enabled: !0, phase: "main", requires: ["popperOffsets"], fn: wZ };
function SZ(n) {
  var e = n.state, t = n.name;
  e.modifiersData[t] = V$({ reference: e.rects.reference, element: e.rects.popper, strategy: "absolute", placement: e.placement });
}
var F$ = { name: "popperOffsets", enabled: !0, phase: "read", fn: SZ, data: {} };
function CZ(n) {
  return n === "x" ? "y" : "x";
}
function kZ(n) {
  var e = n.state, t = n.options, i = n.name, s = t.mainAxis, r = s === void 0 ? !0 : s, o = t.altAxis, l = o === void 0 ? !1 : o, a = t.boundary, c = t.rootBoundary, u = t.altBoundary, h = t.padding, d = t.tether, f = d === void 0 ? !0 : d, p = t.tetherOffset, g = p === void 0 ? 0 : p, m = kd(e, { boundary: a, rootBoundary: c, padding: h, altBoundary: u }), v = to(e.placement), O = hu(e.placement), b = !O, w = _1(v), x = CZ(w), S = e.modifiersData.popperOffsets, C = e.rects.reference, k = e.rects.popper, E = typeof g == "function" ? g(Object.assign({}, e.rects, { placement: e.placement })) : g, M = typeof E == "number" ? { mainAxis: E, altAxis: E } : Object.assign({ mainAxis: 0, altAxis: 0 }, E), _ = e.modifiersData.offset ? e.modifiersData.offset[e.placement] : null, T = { x: 0, y: 0 };
  if (S) {
    if (r) {
      var B, I = w === "y" ? rs : os, P = w === "y" ? Us : Gs, A = w === "y" ? "height" : "width", N = S[w], q = N + m[I], j = N - m[P], H = f ? -k[A] / 2 : 0, oe = O === lu ? C[A] : k[A], te = O === lu ? -k[A] : -C[A], W = e.elements.arrow, U = f && W ? T1(W) : { width: 0, height: 0 }, le = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : L$(), he = le[I], ee = le[P], pe = Hh(0, C[A], U[A]), be = b ? C[A] / 2 - H - pe - he - M.mainAxis : oe - pe - he - M.mainAxis, fe = b ? -C[A] / 2 + H + pe + ee + M.mainAxis : te + pe + ee + M.mainAxis, Ae = e.elements.arrow && Of(e.elements.arrow), ut = Ae ? w === "y" ? Ae.clientTop || 0 : Ae.clientLeft || 0 : 0, zt = (B = _ == null ? void 0 : _[w]) != null ? B : 0, Kn = N + be - zt - ut, Jn = N + fe - zt, Di = Hh(f ? Qg(q, Kn) : q, N, f ? _a(j, Jn) : j);
      S[w] = Di, T[w] = Di - N;
    }
    if (l) {
      var hi, Li = w === "x" ? rs : os, ds = w === "x" ? Us : Gs, un = S[x], Ii = x === "y" ? "height" : "width", Yi = un + m[Li], Bi = un - m[ds], ei = [rs, os].indexOf(v) !== -1, ge = (hi = _ == null ? void 0 : _[x]) != null ? hi : 0, Ke = ei ? Yi : un - C[Ii] - k[Ii] - ge + M.altAxis, Dt = ei ? un + C[Ii] + k[Ii] - ge - M.altAxis : Bi, ti = f && ei ? KF(Ke, un, Dt) : Hh(f ? Ke : Yi, un, f ? Dt : Bi);
      S[x] = ti, T[x] = ti - un;
    }
    e.modifiersData[i] = T;
  }
}
var PZ = { name: "preventOverflow", enabled: !0, phase: "main", fn: kZ, requiresIfExists: ["offset"] };
function EZ(n) {
  return { scrollLeft: n.scrollLeft, scrollTop: n.scrollTop };
}
function AZ(n) {
  return n === Ar(n) || !Fs(n) ? M1(n) : EZ(n);
}
function $Z(n) {
  var e = n.getBoundingClientRect(), t = cu(e.width) / n.offsetWidth || 1, i = cu(e.height) / n.offsetHeight || 1;
  return t !== 1 || i !== 1;
}
function TZ(n, e, t) {
  t === void 0 && (t = !1);
  var i = Fs(e), s = Fs(e) && $Z(e), r = Wl(e), o = uu(n, s), l = { scrollLeft: 0, scrollTop: 0 }, a = { x: 0, y: 0 };
  return (i || !i && !t) && ((co(e) !== "body" || N1(r)) && (l = AZ(e)), Fs(e) ? (a = uu(e, !0), a.x += e.clientLeft, a.y += e.clientTop) : r && (a.x = R1(r))), { x: o.left + l.scrollLeft - a.x, y: o.top + l.scrollTop - a.y, width: o.width, height: o.height };
}
function _Z(n) {
  var e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Set(), i = [];
  n.forEach(function(r) {
    e.set(r.name, r);
  });
  function s(r) {
    t.add(r.name);
    var o = [].concat(r.requires || [], r.requiresIfExists || []);
    o.forEach(function(l) {
      if (!t.has(l)) {
        var a = e.get(l);
        a && s(a);
      }
    }), i.push(r);
  }
  return n.forEach(function(r) {
    t.has(r.name) || s(r);
  }), i;
}
function MZ(n) {
  var e = _Z(n);
  return HF.reduce(function(t, i) {
    return t.concat(e.filter(function(s) {
      return s.phase === i;
    }));
  }, []);
}
function RZ(n) {
  var e;
  return function() {
    return e || (e = new Promise(function(t) {
      Promise.resolve().then(function() {
        e = void 0, t(n());
      });
    })), e;
  };
}
function NZ(n) {
  var e = n.reduce(function(t, i) {
    var s = t[i.name];
    return t[i.name] = s ? Object.assign({}, s, i, { options: Object.assign({}, s.options, i.options), data: Object.assign({}, s.data, i.data) }) : i, t;
  }, {});
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}
var jS = { placement: "bottom", modifiers: [], strategy: "absolute" };
function VS() {
  for (var n = arguments.length, e = new Array(n), t = 0; t < n; t++)
    e[t] = arguments[t];
  return !e.some(function(i) {
    return !(i && typeof i.getBoundingClientRect == "function");
  });
}
function D1(n) {
  n === void 0 && (n = {});
  var e = n, t = e.defaultModifiers, i = t === void 0 ? [] : t, s = e.defaultOptions, r = s === void 0 ? jS : s;
  return function(o, l, a) {
    a === void 0 && (a = r);
    var c = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, jS, r), modifiersData: {}, elements: { reference: o, popper: l }, attributes: {}, styles: {} }, u = [], h = !1, d = { state: c, setOptions: function(g) {
      var m = typeof g == "function" ? g(c.options) : g;
      p(), c.options = Object.assign({}, r, c.options, m), c.scrollParents = { reference: au(o) ? Xh(o) : o.contextElement ? Xh(o.contextElement) : [], popper: Xh(l) };
      var v = MZ(NZ([].concat(i, c.options.modifiers)));
      return c.orderedModifiers = v.filter(function(O) {
        return O.enabled;
      }), f(), d.update();
    }, forceUpdate: function() {
      if (!h) {
        var g = c.elements, m = g.reference, v = g.popper;
        if (VS(m, v)) {
          c.rects = { reference: TZ(m, Of(v), c.options.strategy === "fixed"), popper: T1(v) }, c.reset = !1, c.placement = c.options.placement, c.orderedModifiers.forEach(function(k) {
            return c.modifiersData[k.name] = Object.assign({}, k.data);
          });
          for (var O = 0; O < c.orderedModifiers.length; O++) {
            if (c.reset === !0) {
              c.reset = !1, O = -1;
              continue;
            }
            var b = c.orderedModifiers[O], w = b.fn, x = b.options, S = x === void 0 ? {} : x, C = b.name;
            typeof w == "function" && (c = w({ state: c, options: S, name: C, instance: d }) || c);
          }
        }
      }
    }, update: RZ(function() {
      return new Promise(function(g) {
        d.forceUpdate(), g(c);
      });
    }), destroy: function() {
      p(), h = !0;
    } };
    if (!VS(o, l))
      return d;
    d.setOptions(a).then(function(g) {
      !h && a.onFirstUpdate && a.onFirstUpdate(g);
    });
    function f() {
      c.orderedModifiers.forEach(function(g) {
        var m = g.name, v = g.options, O = v === void 0 ? {} : v, b = g.effect;
        if (typeof b == "function") {
          var w = b({ state: c, name: m, instance: d, options: O }), x = function() {
          };
          u.push(w || x);
        }
      });
    }
    function p() {
      u.forEach(function(g) {
        return g();
      }), u = [];
    }
    return d;
  };
}
D1();
var DZ = [z$, F$, Q$, N$];
D1({ defaultModifiers: DZ });
var LZ = [z$, F$, Q$, N$, xZ, vZ, PZ, nZ, yZ], IZ = D1({ defaultModifiers: LZ });
const BZ = (n, e, t = {}) => {
  const i = {
    name: "updateState",
    enabled: !0,
    phase: "write",
    fn: ({ state: a }) => {
      const c = QZ(a);
      Object.assign(o.value, c);
    },
    requires: ["computeStyles"]
  }, s = $(() => {
    const { onFirstUpdate: a, placement: c, strategy: u, modifiers: h } = y(t);
    return {
      onFirstUpdate: a,
      placement: c || "bottom",
      strategy: u || "absolute",
      modifiers: [
        ...h || [],
        i,
        { name: "applyStyles", enabled: !1 }
      ]
    };
  }), r = Ln(), o = D({
    styles: {
      popper: {
        position: y(s).strategy,
        left: "0",
        top: "0"
      },
      arrow: {
        position: "absolute"
      }
    },
    attributes: {}
  }), l = () => {
    r.value && (r.value.destroy(), r.value = void 0);
  };
  return ne(s, (a) => {
    const c = y(r);
    c && c.setOptions(a);
  }, {
    deep: !0
  }), ne([n, e], ([a, c]) => {
    l(), !(!a || !c) && (r.value = IZ(a, c, y(s)));
  }), Gn(() => {
    l();
  }), {
    state: $(() => {
      var a;
      return { ...((a = y(r)) == null ? void 0 : a.state) || {} };
    }),
    styles: $(() => y(o).styles),
    attributes: $(() => y(o).attributes),
    update: () => {
      var a;
      return (a = y(r)) == null ? void 0 : a.update();
    },
    forceUpdate: () => {
      var a;
      return (a = y(r)) == null ? void 0 : a.forceUpdate();
    },
    instanceRef: $(() => y(r))
  };
};
function QZ(n) {
  const e = Object.keys(n.elements), t = Lg(e.map((s) => [s, n.styles[s] || {}])), i = Lg(e.map((s) => [s, n.attributes[s]]));
  return {
    styles: t,
    attributes: i
  };
}
const L1 = (n) => {
  if (!n)
    return { onClick: Xt, onMousedown: Xt, onMouseup: Xt };
  let e = !1, t = !1;
  return { onClick: (o) => {
    e && t && n(o), e = t = !1;
  }, onMousedown: (o) => {
    e = o.target === o.currentTarget;
  }, onMouseup: (o) => {
    t = o.target === o.currentTarget;
  } };
};
function FS() {
  let n;
  const e = (i, s) => {
    t(), n = window.setTimeout(i, s);
  }, t = () => window.clearTimeout(n);
  return vf(() => t()), {
    registerTimeout: e,
    cancelTimeout: t
  };
}
const Wb = {
  prefix: Math.floor(Math.random() * 1e4),
  current: 0
}, zZ = Symbol("elIdInjection"), I1 = () => Xe() ? ke(zZ, Wb) : Wb, Or = (n) => {
  const e = I1();
  !vt && e === Wb && pt("IdInjection", `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed
usage: app.provide(ID_INJECTION_KEY, {
  prefix: number,
  current: number,
})`);
  const t = E1();
  return $(() => y(n) || `${t.value}-id-${e.prefix}-${e.current++}`);
};
let xc = [];
const ZS = (n) => {
  const e = n;
  e.key === dt.esc && xc.forEach((t) => t(e));
}, jZ = (n) => {
  qe(() => {
    xc.length === 0 && document.addEventListener("keydown", ZS), vt && xc.push(n);
  }), Gn(() => {
    xc = xc.filter((e) => e !== n), xc.length === 0 && vt && document.removeEventListener("keydown", ZS);
  });
};
let qS;
const Z$ = () => {
  const n = E1(), e = I1(), t = $(() => `${n.value}-popper-container-${e.prefix}`), i = $(() => `#${t.value}`);
  return {
    id: t,
    selector: i
  };
}, VZ = (n) => {
  const e = document.createElement("div");
  return e.id = n, document.body.appendChild(e), e;
}, FZ = () => {
  const { id: n, selector: e } = Z$();
  return s1(() => {
    vt && (process.env.NODE_ENV === "test" || !qS && !document.body.querySelector(e.value)) && (qS = VZ(n.value));
  }), {
    id: n,
    selector: e
  };
}, ZZ = Ee({
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  }
}), qZ = ({
  showAfter: n,
  hideAfter: e,
  autoClose: t,
  open: i,
  close: s
}) => {
  const { registerTimeout: r } = FS(), {
    registerTimeout: o,
    cancelTimeout: l
  } = FS();
  return {
    onOpen: (u) => {
      r(() => {
        i(u);
        const h = y(t);
        tt(h) && h > 0 && o(() => {
          s(u);
        }, h);
      }, y(n));
    },
    onClose: (u) => {
      l(), r(() => {
        s(u);
      }, y(e));
    }
  };
}, q$ = Symbol("elForwardRef"), WZ = (n) => {
  ft(q$, {
    setForwardRef: (t) => {
      n.value = t;
    }
  });
}, HZ = (n) => ({
  mounted(e) {
    n(e);
  },
  updated(e) {
    n(e);
  },
  unmounted() {
    n(null);
  }
}), WS = D(0), W$ = 2e3, H$ = Symbol("zIndexContextKey"), B1 = (n) => {
  const e = n || (Xe() ? ke(H$, void 0) : void 0), t = $(() => {
    const r = y(e);
    return tt(r) ? r : W$;
  }), i = $(() => t.value + WS.value);
  return {
    initialZIndex: t,
    currentZIndex: i,
    nextZIndex: () => (WS.value++, i.value)
  };
};
function XZ(n) {
  const e = D();
  function t() {
    if (n.value == null)
      return;
    const { selectionStart: s, selectionEnd: r, value: o } = n.value;
    if (s == null || r == null)
      return;
    const l = o.slice(0, Math.max(0, s)), a = o.slice(Math.max(0, r));
    e.value = {
      selectionStart: s,
      selectionEnd: r,
      value: o,
      beforeTxt: l,
      afterTxt: a
    };
  }
  function i() {
    if (n.value == null || e.value == null)
      return;
    const { value: s } = n.value, { beforeTxt: r, afterTxt: o, selectionStart: l } = e.value;
    if (r == null || o == null || l == null)
      return;
    let a = s.length;
    if (s.endsWith(o))
      a = s.length - o.length;
    else if (s.startsWith(r))
      a = r.length;
    else {
      const c = r[l - 1], u = s.indexOf(c, l - 1);
      u !== -1 && (a = u + 1);
    }
    n.value.setSelectionRange(a, a);
  }
  return [t, i];
}
const YZ = (n, e, t) => Wp(n.subTree).filter((r) => {
  var o;
  return lo(r) && ((o = r.type) == null ? void 0 : o.name) === e && !!r.component;
}).map((r) => r.component.uid).map((r) => t[r]).filter((r) => !!r), UZ = (n, e) => {
  const t = {}, i = Ln([]);
  return {
    children: i,
    addChild: (o) => {
      t[o.uid] = o, i.value = YZ(n, e, t);
    },
    removeChild: (o) => {
      delete t[o], i.value = i.value.filter((l) => l.uid !== o);
    }
  };
}, Ts = Pr({
  type: String,
  values: nc,
  required: !1
}), X$ = Symbol("size"), GZ = () => {
  const n = ke(X$, {});
  return $(() => y(n.size) || "");
};
function n0(n, { afterFocus: e, beforeBlur: t, afterBlur: i } = {}) {
  const s = Xe(), { emit: r } = s, o = Ln(), l = D(!1), a = (h) => {
    l.value || (l.value = !0, r("focus", h), e == null || e());
  }, c = (h) => {
    var d;
    wt(t) && t(h) || h.relatedTarget && ((d = o.value) != null && d.contains(h.relatedTarget)) || (l.value = !1, r("blur", h), i == null || i());
  }, u = () => {
    var h;
    (h = n.value) == null || h.focus();
  };
  return ne(o, (h) => {
    h && h.setAttribute("tabindex", "-1");
  }), Zi(o, "click", u), {
    wrapperRef: o,
    isFocused: l,
    handleFocus: a,
    handleBlur: c
  };
}
const Y$ = Symbol(), zg = D();
function i0(n, e = void 0) {
  const t = Xe() ? ke(Y$, zg) : zg;
  return n ? $(() => {
    var i, s;
    return (s = (i = t.value) == null ? void 0 : i[n]) != null ? s : e;
  }) : t;
}
function Q1(n, e) {
  const t = i0(), i = me(n, $(() => {
    var l;
    return ((l = t.value) == null ? void 0 : l.namespace) || Wh;
  })), s = mn($(() => {
    var l;
    return (l = t.value) == null ? void 0 : l.locale;
  })), r = B1($(() => {
    var l;
    return ((l = t.value) == null ? void 0 : l.zIndex) || W$;
  })), o = $(() => {
    var l;
    return y(e) || ((l = t.value) == null ? void 0 : l.size) || "";
  });
  return U$($(() => y(t) || {})), {
    ns: i,
    locale: s,
    zIndex: r,
    size: o
  };
}
const U$ = (n, e, t = !1) => {
  var i;
  const s = !!Xe(), r = s ? i0() : void 0, o = (i = e == null ? void 0 : e.provide) != null ? i : s ? ft : void 0;
  if (!o) {
    pt("provideGlobalConfig", "provideGlobalConfig() can only be used inside setup().");
    return;
  }
  const l = $(() => {
    const a = y(n);
    return r != null && r.value ? KZ(r.value, a) : a;
  });
  return o(Y$, l), o(C$, $(() => l.value.locale)), o($$, $(() => l.value.namespace)), o(H$, $(() => l.value.zIndex)), o(X$, {
    size: $(() => l.value.size || "")
  }), (t || !zg.value) && (zg.value = l.value), l;
}, KZ = (n, e) => {
  var t;
  const i = [.../* @__PURE__ */ new Set([...$S(n), ...$S(e)])], s = {};
  for (const r of i)
    s[r] = (t = e[r]) != null ? t : n[r];
  return s;
}, JZ = Ee({
  a11y: {
    type: Boolean,
    default: !0
  },
  locale: {
    type: ce(Object)
  },
  size: Ts,
  button: {
    type: ce(Object)
  },
  experimentalFeatures: {
    type: ce(Object)
  },
  keyboardNavigation: {
    type: Boolean,
    default: !0
  },
  message: {
    type: ce(Object)
  },
  zIndex: Number,
  namespace: {
    type: String,
    default: "el"
  }
}), Hb = {};
F({
  name: "ElConfigProvider",
  props: JZ,
  setup(n, { slots: e }) {
    ne(() => n.message, (i) => {
      Object.assign(Hb, i ?? {});
    }, { immediate: !0, deep: !0 });
    const t = U$(n);
    return () => de(e, "default", { config: t == null ? void 0 : t.value });
  }
});
var Ce = (n, e) => {
  const t = n.__vccOpts || n;
  for (const [i, s] of e)
    t[i] = s;
  return t;
};
const eq = Ee({
  size: {
    type: ce([Number, String])
  },
  color: {
    type: String
  }
}), tq = F({
  name: "ElIcon",
  inheritAttrs: !1
}), nq = /* @__PURE__ */ F({
  ...tq,
  props: eq,
  setup(n) {
    const e = n, t = me("icon"), i = $(() => {
      const { size: s, color: r } = e;
      return !s && !r ? {} : {
        fontSize: Si(s) ? void 0 : cs(s),
        "--color": r
      };
    });
    return (s, r) => (R(), V("i", ki({
      class: y(t).b(),
      style: y(i)
    }, s.$attrs), [
      de(s.$slots, "default")
    ], 16));
  }
});
var iq = /* @__PURE__ */ Ce(nq, [["__file", "icon.vue"]]);
const Fe = Ft(iq), eh = Symbol("formContextKey"), Tl = Symbol("formItemContextKey"), Xi = (n, e = {}) => {
  const t = D(void 0), i = e.prop ? t : M$("size"), s = e.global ? t : GZ(), r = e.form ? { size: void 0 } : ke(eh, void 0), o = e.formItem ? { size: void 0 } : ke(Tl, void 0);
  return $(() => i.value || y(n) || (o == null ? void 0 : o.size) || (r == null ? void 0 : r.size) || s.value || "");
}, er = (n) => {
  const e = M$("disabled"), t = ke(eh, void 0);
  return $(() => e.value || y(n) || (t == null ? void 0 : t.disabled) || !1);
}, _s = () => {
  const n = ke(eh, void 0), e = ke(Tl, void 0);
  return {
    form: n,
    formItem: e
  };
}, Hl = (n, {
  formItemContext: e,
  disableIdGeneration: t,
  disableIdManagement: i
}) => {
  t || (t = D(!1)), i || (i = D(!1));
  const s = D();
  let r;
  const o = $(() => {
    var l;
    return !!(!n.label && e && e.inputIds && ((l = e.inputIds) == null ? void 0 : l.length) <= 1);
  });
  return qe(() => {
    r = ne([ks(n, "id"), t], ([l, a]) => {
      const c = l ?? (a ? void 0 : Or().value);
      c !== s.value && (e != null && e.removeInputId && (s.value && e.removeInputId(s.value), !(i != null && i.value) && !a && c && e.addInputId(c)), s.value = c);
    }, { immediate: !0 });
  }), Vu(() => {
    r && r(), e != null && e.removeInputId && s.value && e.removeInputId(s.value);
  }), {
    isLabeledByFormItem: o,
    inputId: s
  };
}, sq = Ee({
  size: {
    type: String,
    values: nc
  },
  disabled: Boolean
}), rq = Ee({
  ...sq,
  model: Object,
  rules: {
    type: ce(Object)
  },
  labelPosition: {
    type: String,
    values: ["left", "right", "top"],
    default: "right"
  },
  requireAsteriskPosition: {
    type: String,
    values: ["left", "right"],
    default: "left"
  },
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  labelSuffix: {
    type: String,
    default: ""
  },
  inline: Boolean,
  inlineMessage: Boolean,
  statusIcon: Boolean,
  showMessage: {
    type: Boolean,
    default: !0
  },
  validateOnRuleChange: {
    type: Boolean,
    default: !0
  },
  hideRequiredAsterisk: Boolean,
  scrollToError: Boolean,
  scrollIntoViewOptions: {
    type: [Object, Boolean]
  }
}), oq = {
  validate: (n, e, t) => (xt(n) || bt(n)) && Pi(e) && bt(t)
}, lq = "ElForm";
function aq() {
  const n = D([]), e = $(() => {
    if (!n.value.length)
      return "0";
    const r = Math.max(...n.value);
    return r ? `${r}px` : "";
  });
  function t(r) {
    const o = n.value.indexOf(r);
    return o === -1 && e.value === "0" && pt(lq, `unexpected width ${r}`), o;
  }
  function i(r, o) {
    if (r && o) {
      const l = t(o);
      n.value.splice(l, 1, r);
    } else
      r && n.value.push(r);
  }
  function s(r) {
    const o = t(r);
    o > -1 && n.value.splice(o, 1);
  }
  return {
    autoLabelWidth: e,
    registerLabelWidth: i,
    deregisterLabelWidth: s
  };
}
const Yf = (n, e) => {
  const t = wd(e);
  return t.length > 0 ? n.filter((i) => i.prop && t.includes(i.prop)) : n;
}, Xp = "ElForm", cq = F({
  name: Xp
}), uq = /* @__PURE__ */ F({
  ...cq,
  props: rq,
  emits: oq,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = [], r = Xi(), o = me("form"), l = $(() => {
      const { labelPosition: b, inline: w } = i;
      return [
        o.b(),
        o.m(r.value || "default"),
        {
          [o.m(`label-${b}`)]: b,
          [o.m("inline")]: w
        }
      ];
    }), a = (b) => s.find((w) => w.prop === b), c = (b) => {
      s.push(b);
    }, u = (b) => {
      b.prop && s.splice(s.indexOf(b), 1);
    }, h = (b = []) => {
      if (!i.model) {
        pt(Xp, "model is required for resetFields to work.");
        return;
      }
      Yf(s, b).forEach((w) => w.resetField());
    }, d = (b = []) => {
      Yf(s, b).forEach((w) => w.clearValidate());
    }, f = $(() => {
      const b = !!i.model;
      return b || pt(Xp, "model is required for validate to work."), b;
    }), p = (b) => {
      if (s.length === 0)
        return [];
      const w = Yf(s, b);
      return w.length ? w : (pt(Xp, "please pass correct props!"), []);
    }, g = async (b) => v(void 0, b), m = async (b = []) => {
      if (!f.value)
        return !1;
      const w = p(b);
      if (w.length === 0)
        return !0;
      let x = {};
      for (const S of w)
        try {
          await S.validate("");
        } catch (C) {
          x = {
            ...x,
            ...C
          };
        }
      return Object.keys(x).length === 0 ? !0 : Promise.reject(x);
    }, v = async (b = [], w) => {
      const x = !wt(w);
      try {
        const S = await m(b);
        return S === !0 && (w == null || w(S)), S;
      } catch (S) {
        if (S instanceof Error)
          throw S;
        const C = S;
        return i.scrollToError && O(Object.keys(C)[0]), w == null || w(!1, C), x && Promise.reject(C);
      }
    }, O = (b) => {
      var w;
      const x = Yf(s, b)[0];
      x && ((w = x.$el) == null || w.scrollIntoView(i.scrollIntoViewOptions));
    };
    return ne(() => i.rules, () => {
      i.validateOnRuleChange && g().catch((b) => pt(b));
    }, { deep: !0 }), ft(eh, Gt({
      ...Ws(i),
      emit: t,
      resetFields: h,
      clearValidate: d,
      validateField: v,
      getField: a,
      addField: c,
      removeField: u,
      ...aq()
    })), e({
      validate: g,
      validateField: v,
      resetFields: h,
      clearValidate: d,
      scrollToField: O
    }), (b, w) => (R(), V("form", {
      class: L(y(l))
    }, [
      de(b.$slots, "default")
    ], 2));
  }
});
var hq = /* @__PURE__ */ Ce(uq, [["__file", "form.vue"]]);
const dq = [
  "",
  "error",
  "validating",
  "success"
], fq = Ee({
  label: String,
  labelWidth: {
    type: [String, Number],
    default: ""
  },
  prop: {
    type: ce([String, Array])
  },
  required: {
    type: Boolean,
    default: void 0
  },
  rules: {
    type: ce([Object, Array])
  },
  error: String,
  validateStatus: {
    type: String,
    values: dq
  },
  for: String,
  inlineMessage: {
    type: [String, Boolean],
    default: ""
  },
  showMessage: {
    type: Boolean,
    default: !0
  },
  size: {
    type: String,
    values: nc
  }
}), HS = "ElLabelWrap";
var pq = F({
  name: HS,
  props: {
    isAutoWidth: Boolean,
    updateAll: Boolean
  },
  setup(n, {
    slots: e
  }) {
    const t = ke(eh, void 0), i = ke(Tl);
    i || hs(HS, "usage: <el-form-item><label-wrap /></el-form-item>");
    const s = me("form"), r = D(), o = D(0), l = () => {
      var u;
      if ((u = r.value) != null && u.firstElementChild) {
        const h = window.getComputedStyle(r.value.firstElementChild).width;
        return Math.ceil(Number.parseFloat(h));
      } else
        return 0;
    }, a = (u = "update") => {
      $e(() => {
        e.default && n.isAutoWidth && (u === "update" ? o.value = l() : u === "remove" && (t == null || t.deregisterLabelWidth(o.value)));
      });
    }, c = () => a("update");
    return qe(() => {
      c();
    }), Gn(() => {
      a("remove");
    }), Zl(() => c()), ne(o, (u, h) => {
      n.updateAll && (t == null || t.registerLabelWidth(u, h));
    }), pn($(() => {
      var u, h;
      return (h = (u = r.value) == null ? void 0 : u.firstElementChild) != null ? h : null;
    }), c), () => {
      var u, h;
      if (!e)
        return null;
      const {
        isAutoWidth: d
      } = n;
      if (d) {
        const f = t == null ? void 0 : t.autoLabelWidth, p = i == null ? void 0 : i.hasLabel, g = {};
        if (p && f && f !== "auto") {
          const m = Math.max(0, Number.parseInt(f, 10) - o.value), v = t.labelPosition === "left" ? "marginRight" : "marginLeft";
          m && (g[v] = `${m}px`);
        }
        return K("div", {
          ref: r,
          class: [s.be("item", "label-wrap")],
          style: g
        }, [(u = e.default) == null ? void 0 : u.call(e)]);
      } else
        return K(Tt, {
          ref: r
        }, [(h = e.default) == null ? void 0 : h.call(e)]);
    };
  }
});
const gq = ["role", "aria-labelledby"], mq = F({
  name: "ElFormItem"
}), vq = /* @__PURE__ */ F({
  ...mq,
  props: fq,
  setup(n, { expose: e }) {
    const t = n, i = go(), s = ke(eh, void 0), r = ke(Tl, void 0), o = Xi(void 0, { formItem: !1 }), l = me("form-item"), a = Or().value, c = D([]), u = D(""), h = TV(u, 100), d = D(""), f = D();
    let p, g = !1;
    const m = $(() => {
      if ((s == null ? void 0 : s.labelPosition) === "top")
        return {};
      const ee = cs(t.labelWidth || (s == null ? void 0 : s.labelWidth) || "");
      return ee ? { width: ee } : {};
    }), v = $(() => {
      if ((s == null ? void 0 : s.labelPosition) === "top" || s != null && s.inline)
        return {};
      if (!t.label && !t.labelWidth && E)
        return {};
      const ee = cs(t.labelWidth || (s == null ? void 0 : s.labelWidth) || "");
      return !t.label && !i.label ? { marginLeft: ee } : {};
    }), O = $(() => [
      l.b(),
      l.m(o.value),
      l.is("error", u.value === "error"),
      l.is("validating", u.value === "validating"),
      l.is("success", u.value === "success"),
      l.is("required", I.value || t.required),
      l.is("no-asterisk", s == null ? void 0 : s.hideRequiredAsterisk),
      (s == null ? void 0 : s.requireAsteriskPosition) === "right" ? "asterisk-right" : "asterisk-left",
      { [l.m("feedback")]: s == null ? void 0 : s.statusIcon }
    ]), b = $(() => Pi(t.inlineMessage) ? t.inlineMessage : (s == null ? void 0 : s.inlineMessage) || !1), w = $(() => [
      l.e("error"),
      { [l.em("error", "inline")]: b.value }
    ]), x = $(() => t.prop ? bt(t.prop) ? t.prop : t.prop.join(".") : ""), S = $(() => !!(t.label || i.label)), C = $(() => t.for || (c.value.length === 1 ? c.value[0] : void 0)), k = $(() => !C.value && S.value), E = !!r, M = $(() => {
      const ee = s == null ? void 0 : s.model;
      if (!(!ee || !t.prop))
        return Zp(ee, t.prop).value;
    }), _ = $(() => {
      const { required: ee } = t, pe = [];
      t.rules && pe.push(...wd(t.rules));
      const be = s == null ? void 0 : s.rules;
      if (be && t.prop) {
        const fe = Zp(be, t.prop).value;
        fe && pe.push(...wd(fe));
      }
      if (ee !== void 0) {
        const fe = pe.map((Ae, ut) => [Ae, ut]).filter(([Ae]) => Object.keys(Ae).includes("required"));
        if (fe.length > 0)
          for (const [Ae, ut] of fe)
            Ae.required !== ee && (pe[ut] = { ...Ae, required: ee });
        else
          pe.push({ required: ee });
      }
      return pe;
    }), T = $(() => _.value.length > 0), B = (ee) => _.value.filter((be) => !be.trigger || !ee ? !0 : Array.isArray(be.trigger) ? be.trigger.includes(ee) : be.trigger === ee).map(({ trigger: be, ...fe }) => fe), I = $(() => _.value.some((ee) => ee.required)), P = $(() => {
      var ee;
      return h.value === "error" && t.showMessage && ((ee = s == null ? void 0 : s.showMessage) != null ? ee : !0);
    }), A = $(() => `${t.label || ""}${(s == null ? void 0 : s.labelSuffix) || ""}`), N = (ee) => {
      u.value = ee;
    }, q = (ee) => {
      var pe, be;
      const { errors: fe, fields: Ae } = ee;
      (!fe || !Ae) && console.error(ee), N("error"), d.value = fe ? (be = (pe = fe == null ? void 0 : fe[0]) == null ? void 0 : pe.message) != null ? be : `${t.prop} is required` : "", s == null || s.emit("validate", t.prop, !1, d.value);
    }, j = () => {
      N("success"), s == null || s.emit("validate", t.prop, !0, "");
    }, H = async (ee) => {
      const pe = x.value;
      return new mf({
        [pe]: ee
      }).validate({ [pe]: M.value }, { firstFields: !0 }).then(() => (j(), !0)).catch((fe) => (q(fe), Promise.reject(fe)));
    }, oe = async (ee, pe) => {
      if (g || !t.prop)
        return !1;
      const be = wt(pe);
      if (!T.value)
        return pe == null || pe(!1), !1;
      const fe = B(ee);
      return fe.length === 0 ? (pe == null || pe(!0), !0) : (N("validating"), H(fe).then(() => (pe == null || pe(!0), !0)).catch((Ae) => {
        const { fields: ut } = Ae;
        return pe == null || pe(!1, ut), be ? !1 : Promise.reject(ut);
      }));
    }, te = () => {
      N(""), d.value = "", g = !1;
    }, W = async () => {
      const ee = s == null ? void 0 : s.model;
      if (!ee || !t.prop)
        return;
      const pe = Zp(ee, t.prop);
      g = !0, pe.value = xd(p), await $e(), te(), g = !1;
    }, U = (ee) => {
      c.value.includes(ee) || c.value.push(ee);
    }, le = (ee) => {
      c.value = c.value.filter((pe) => pe !== ee);
    };
    ne(() => t.error, (ee) => {
      d.value = ee || "", N(ee ? "error" : "");
    }, { immediate: !0 }), ne(() => t.validateStatus, (ee) => N(ee || ""));
    const he = Gt({
      ...Ws(t),
      $el: f,
      size: o,
      validateState: u,
      labelId: a,
      inputIds: c,
      isGroup: k,
      hasLabel: S,
      fieldValue: M,
      addInputId: U,
      removeInputId: le,
      resetField: W,
      clearValidate: te,
      validate: oe
    });
    return ft(Tl, he), qe(() => {
      t.prop && (s == null || s.addField(he), p = xd(M.value));
    }), Gn(() => {
      s == null || s.removeField(he);
    }), e({
      size: o,
      validateMessage: d,
      validateState: u,
      validate: oe,
      clearValidate: te,
      resetField: W
    }), (ee, pe) => {
      var be;
      return R(), V("div", {
        ref_key: "formItemRef",
        ref: f,
        class: L(y(O)),
        role: y(k) ? "group" : void 0,
        "aria-labelledby": y(k) ? y(a) : void 0
      }, [
        K(y(pq), {
          "is-auto-width": y(m).width === "auto",
          "update-all": ((be = y(s)) == null ? void 0 : be.labelWidth) === "auto"
        }, {
          default: Y(() => [
            y(S) ? (R(), ie(yt(y(C) ? "label" : "div"), {
              key: 0,
              id: y(a),
              for: y(C),
              class: L(y(l).e("label")),
              style: Qe(y(m))
            }, {
              default: Y(() => [
                de(ee.$slots, "label", { label: y(A) }, () => [
                  Xn(xe(y(A)), 1)
                ])
              ]),
              _: 3
            }, 8, ["id", "for", "class", "style"])) : G("v-if", !0)
          ]),
          _: 3
        }, 8, ["is-auto-width", "update-all"]),
        Z("div", {
          class: L(y(l).e("content")),
          style: Qe(y(v))
        }, [
          de(ee.$slots, "default"),
          K(RE, {
            name: `${y(l).namespace.value}-zoom-in-top`
          }, {
            default: Y(() => [
              y(P) ? de(ee.$slots, "error", {
                key: 0,
                error: d.value
              }, () => [
                Z("div", {
                  class: L(y(w))
                }, xe(d.value), 3)
              ]) : G("v-if", !0)
            ]),
            _: 3
          }, 8, ["name"])
        ], 6)
      ], 10, gq);
    };
  }
});
var G$ = /* @__PURE__ */ Ce(vq, [["__file", "form-item.vue"]]);
const hUe = Ft(hq, {
  FormItem: G$
}), dUe = Er(G$);
let sr;
const bq = `
  height:0 !important;
  visibility:hidden !important;
  ${c$() ? "" : "overflow:hidden !important;"}
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`, yq = [
  "letter-spacing",
  "line-height",
  "padding-top",
  "padding-bottom",
  "font-family",
  "font-weight",
  "font-size",
  "text-rendering",
  "text-transform",
  "width",
  "text-indent",
  "padding-left",
  "padding-right",
  "border-width",
  "box-sizing"
];
function Oq(n) {
  const e = window.getComputedStyle(n), t = e.getPropertyValue("box-sizing"), i = Number.parseFloat(e.getPropertyValue("padding-bottom")) + Number.parseFloat(e.getPropertyValue("padding-top")), s = Number.parseFloat(e.getPropertyValue("border-bottom-width")) + Number.parseFloat(e.getPropertyValue("border-top-width"));
  return { contextStyle: yq.map((o) => `${o}:${e.getPropertyValue(o)}`).join(";"), paddingSize: i, borderSize: s, boxSizing: t };
}
function XS(n, e = 1, t) {
  var i;
  sr || (sr = document.createElement("textarea"), document.body.appendChild(sr));
  const { paddingSize: s, borderSize: r, boxSizing: o, contextStyle: l } = Oq(n);
  sr.setAttribute("style", `${l};${bq}`), sr.value = n.value || n.placeholder || "";
  let a = sr.scrollHeight;
  const c = {};
  o === "border-box" ? a = a + r : o === "content-box" && (a = a - s), sr.value = "";
  const u = sr.scrollHeight - s;
  if (tt(e)) {
    let h = u * e;
    o === "border-box" && (h = h + s + r), a = Math.max(h, a), c.minHeight = `${h}px`;
  }
  if (tt(t)) {
    let h = u * t;
    o === "border-box" && (h = h + s + r), a = Math.min(h, a);
  }
  return c.height = `${a}px`, (i = sr.parentNode) == null || i.removeChild(sr), sr = void 0, c;
}
const wq = Ee({
  id: {
    type: String,
    default: void 0
  },
  size: Ts,
  disabled: Boolean,
  modelValue: {
    type: ce([
      String,
      Number,
      Object
    ]),
    default: ""
  },
  maxlength: {
    type: [String, Number]
  },
  minlength: {
    type: [String, Number]
  },
  type: {
    type: String,
    default: "text"
  },
  resize: {
    type: String,
    values: ["none", "both", "horizontal", "vertical"]
  },
  autosize: {
    type: ce([Boolean, Object]),
    default: !1
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  formatter: {
    type: Function
  },
  parser: {
    type: Function
  },
  placeholder: {
    type: String
  },
  form: {
    type: String
  },
  readonly: {
    type: Boolean,
    default: !1
  },
  clearable: {
    type: Boolean,
    default: !1
  },
  showPassword: {
    type: Boolean,
    default: !1
  },
  showWordLimit: {
    type: Boolean,
    default: !1
  },
  suffixIcon: {
    type: kn
  },
  prefixIcon: {
    type: kn
  },
  containerRole: {
    type: String,
    default: void 0
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  inputStyle: {
    type: ce([Object, Array, String]),
    default: () => Ys({})
  },
  autofocus: {
    type: Boolean,
    default: !1
  }
}), xq = {
  [ot]: (n) => bt(n),
  input: (n) => bt(n),
  change: (n) => bt(n),
  focus: (n) => n instanceof FocusEvent,
  blur: (n) => n instanceof FocusEvent,
  clear: () => !0,
  mouseleave: (n) => n instanceof MouseEvent,
  mouseenter: (n) => n instanceof MouseEvent,
  keydown: (n) => n instanceof Event,
  compositionstart: (n) => n instanceof CompositionEvent,
  compositionupdate: (n) => n instanceof CompositionEvent,
  compositionend: (n) => n instanceof CompositionEvent
}, Sq = ["role"], Cq = ["id", "minlength", "maxlength", "type", "disabled", "readonly", "autocomplete", "tabindex", "aria-label", "placeholder", "form", "autofocus"], kq = ["id", "minlength", "maxlength", "tabindex", "disabled", "readonly", "autocomplete", "aria-label", "placeholder", "form", "autofocus"], Pq = F({
  name: "ElInput",
  inheritAttrs: !1
}), Eq = /* @__PURE__ */ F({
  ...Pq,
  props: wq,
  emits: xq,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = NE(), r = go(), o = $(() => {
      const ge = {};
      return i.containerRole === "combobox" && (ge["aria-haspopup"] = s["aria-haspopup"], ge["aria-owns"] = s["aria-owns"], ge["aria-expanded"] = s["aria-expanded"]), ge;
    }), l = $(() => [
      i.type === "textarea" ? m.b() : g.b(),
      g.m(f.value),
      g.is("disabled", p.value),
      g.is("exceed", U.value),
      {
        [g.b("group")]: r.prepend || r.append,
        [g.bm("group", "append")]: r.append,
        [g.bm("group", "prepend")]: r.prepend,
        [g.m("prefix")]: r.prefix || i.prefixIcon,
        [g.m("suffix")]: r.suffix || i.suffixIcon || i.clearable || i.showPassword,
        [g.bm("suffix", "password-clear")]: H.value && oe.value
      },
      s.class
    ]), a = $(() => [
      g.e("wrapper"),
      g.is("focus", M.value)
    ]), c = pF({
      excludeKeys: $(() => Object.keys(o.value))
    }), { form: u, formItem: h } = _s(), { inputId: d } = Hl(i, {
      formItemContext: h
    }), f = Xi(), p = er(), g = me("input"), m = me("textarea"), v = Ln(), O = Ln(), b = D(!1), w = D(!1), x = D(!1), S = D(), C = Ln(i.inputStyle), k = $(() => v.value || O.value), { wrapperRef: E, isFocused: M, handleFocus: _, handleBlur: T } = n0(k, {
      afterBlur() {
        var ge;
        i.validateEvent && ((ge = h == null ? void 0 : h.validate) == null || ge.call(h, "blur").catch((Ke) => pt(Ke)));
      }
    }), B = $(() => {
      var ge;
      return (ge = u == null ? void 0 : u.statusIcon) != null ? ge : !1;
    }), I = $(() => (h == null ? void 0 : h.validateState) || ""), P = $(() => I.value && C1[I.value]), A = $(() => x.value ? $j : Kz), N = $(() => [
      s.style
    ]), q = $(() => [
      i.inputStyle,
      C.value,
      { resize: i.resize }
    ]), j = $(() => Ri(i.modelValue) ? "" : String(i.modelValue)), H = $(() => i.clearable && !p.value && !i.readonly && !!j.value && (M.value || b.value)), oe = $(() => i.showPassword && !p.value && !i.readonly && !!j.value && (!!j.value || M.value)), te = $(() => i.showWordLimit && !!i.maxlength && (i.type === "text" || i.type === "textarea") && !p.value && !i.readonly && !i.showPassword), W = $(() => j.value.length), U = $(() => !!te.value && W.value > Number(i.maxlength)), le = $(() => !!r.suffix || !!i.suffixIcon || H.value || i.showPassword || te.value || !!I.value && B.value), [he, ee] = XZ(v);
    pn(O, (ge) => {
      if (fe(), !te.value || i.resize !== "both")
        return;
      const Ke = ge[0], { width: Dt } = Ke.contentRect;
      S.value = {
        right: `calc(100% - ${Dt + 15 + 6}px)`
      };
    });
    const pe = () => {
      const { type: ge, autosize: Ke } = i;
      if (!(!vt || ge !== "textarea" || !O.value))
        if (Ke) {
          const Dt = ln(Ke) ? Ke.minRows : void 0, ti = ln(Ke) ? Ke.maxRows : void 0, Mr = XS(O.value, Dt, ti);
          C.value = {
            overflowY: "hidden",
            ...Mr
          }, $e(() => {
            O.value.offsetHeight, C.value = Mr;
          });
        } else
          C.value = {
            minHeight: XS(O.value).minHeight
          };
    }, fe = ((ge) => {
      let Ke = !1;
      return () => {
        var Dt;
        if (Ke || !i.autosize)
          return;
        ((Dt = O.value) == null ? void 0 : Dt.offsetParent) === null || (ge(), Ke = !0);
      };
    })(pe), Ae = () => {
      const ge = k.value, Ke = i.formatter ? i.formatter(j.value) : j.value;
      !ge || ge.value === Ke || (ge.value = Ke);
    }, ut = async (ge) => {
      he();
      let { value: Ke } = ge.target;
      if (i.formatter && (Ke = i.parser ? i.parser(Ke) : Ke), !w.value) {
        if (Ke === j.value) {
          Ae();
          return;
        }
        t(ot, Ke), t("input", Ke), await $e(), Ae(), ee();
      }
    }, zt = (ge) => {
      t("change", ge.target.value);
    }, Kn = (ge) => {
      t("compositionstart", ge), w.value = !0;
    }, Jn = (ge) => {
      var Ke;
      t("compositionupdate", ge);
      const Dt = (Ke = ge.target) == null ? void 0 : Ke.value, ti = Dt[Dt.length - 1] || "";
      w.value = !k1(ti);
    }, Di = (ge) => {
      t("compositionend", ge), w.value && (w.value = !1, ut(ge));
    }, hi = () => {
      x.value = !x.value, Li();
    }, Li = async () => {
      var ge;
      await $e(), (ge = k.value) == null || ge.focus();
    }, ds = () => {
      var ge;
      return (ge = k.value) == null ? void 0 : ge.blur();
    }, un = (ge) => {
      b.value = !1, t("mouseleave", ge);
    }, Ii = (ge) => {
      b.value = !0, t("mouseenter", ge);
    }, Yi = (ge) => {
      t("keydown", ge);
    }, Bi = () => {
      var ge;
      (ge = k.value) == null || ge.select();
    }, ei = () => {
      t(ot, ""), t("change", ""), t("clear"), t("input", "");
    };
    return ne(() => i.modelValue, () => {
      var ge;
      $e(() => pe()), i.validateEvent && ((ge = h == null ? void 0 : h.validate) == null || ge.call(h, "change").catch((Ke) => pt(Ke)));
    }), ne(j, () => Ae()), ne(() => i.type, async () => {
      await $e(), Ae(), pe();
    }), qe(() => {
      !i.formatter && i.parser && pt("ElInput", "If you set the parser, you also need to set the formatter."), Ae(), $e(pe);
    }), e({
      input: v,
      textarea: O,
      ref: k,
      textareaStyle: q,
      autosize: ks(i, "autosize"),
      focus: Li,
      blur: ds,
      select: Bi,
      clear: ei,
      resizeTextarea: pe
    }), (ge, Ke) => it((R(), V("div", ki(y(o), {
      class: y(l),
      style: y(N),
      role: ge.containerRole,
      onMouseenter: Ii,
      onMouseleave: un
    }), [
      G(" input "),
      ge.type !== "textarea" ? (R(), V(Tt, { key: 0 }, [
        G(" prepend slot "),
        ge.$slots.prepend ? (R(), V("div", {
          key: 0,
          class: L(y(g).be("group", "prepend"))
        }, [
          de(ge.$slots, "prepend")
        ], 2)) : G("v-if", !0),
        Z("div", {
          ref_key: "wrapperRef",
          ref: E,
          class: L(y(a))
        }, [
          G(" prefix slot "),
          ge.$slots.prefix || ge.prefixIcon ? (R(), V("span", {
            key: 0,
            class: L(y(g).e("prefix"))
          }, [
            Z("span", {
              class: L(y(g).e("prefix-inner"))
            }, [
              de(ge.$slots, "prefix"),
              ge.prefixIcon ? (R(), ie(y(Fe), {
                key: 0,
                class: L(y(g).e("icon"))
              }, {
                default: Y(() => [
                  (R(), ie(yt(ge.prefixIcon)))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0)
            ], 2)
          ], 2)) : G("v-if", !0),
          Z("input", ki({
            id: y(d),
            ref_key: "input",
            ref: v,
            class: y(g).e("inner")
          }, y(c), {
            minlength: ge.minlength,
            maxlength: ge.maxlength,
            type: ge.showPassword ? x.value ? "text" : "password" : ge.type,
            disabled: y(p),
            readonly: ge.readonly,
            autocomplete: ge.autocomplete,
            tabindex: ge.tabindex,
            "aria-label": ge.label,
            placeholder: ge.placeholder,
            style: ge.inputStyle,
            form: ge.form,
            autofocus: ge.autofocus,
            onCompositionstart: Kn,
            onCompositionupdate: Jn,
            onCompositionend: Di,
            onInput: ut,
            onFocus: Ke[0] || (Ke[0] = (...Dt) => y(_) && y(_)(...Dt)),
            onBlur: Ke[1] || (Ke[1] = (...Dt) => y(T) && y(T)(...Dt)),
            onChange: zt,
            onKeydown: Yi
          }), null, 16, Cq),
          G(" suffix slot "),
          y(le) ? (R(), V("span", {
            key: 1,
            class: L(y(g).e("suffix"))
          }, [
            Z("span", {
              class: L(y(g).e("suffix-inner"))
            }, [
              !y(H) || !y(oe) || !y(te) ? (R(), V(Tt, { key: 0 }, [
                de(ge.$slots, "suffix"),
                ge.suffixIcon ? (R(), ie(y(Fe), {
                  key: 0,
                  class: L(y(g).e("icon"))
                }, {
                  default: Y(() => [
                    (R(), ie(yt(ge.suffixIcon)))
                  ]),
                  _: 1
                }, 8, ["class"])) : G("v-if", !0)
              ], 64)) : G("v-if", !0),
              y(H) ? (R(), ie(y(Fe), {
                key: 1,
                class: L([y(g).e("icon"), y(g).e("clear")]),
                onMousedown: Le(y(Xt), ["prevent"]),
                onClick: ei
              }, {
                default: Y(() => [
                  K(y(Ku))
                ]),
                _: 1
              }, 8, ["class", "onMousedown"])) : G("v-if", !0),
              y(oe) ? (R(), ie(y(Fe), {
                key: 2,
                class: L([y(g).e("icon"), y(g).e("password")]),
                onClick: hi
              }, {
                default: Y(() => [
                  (R(), ie(yt(y(A))))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0),
              y(te) ? (R(), V("span", {
                key: 3,
                class: L(y(g).e("count"))
              }, [
                Z("span", {
                  class: L(y(g).e("count-inner"))
                }, xe(y(W)) + " / " + xe(ge.maxlength), 3)
              ], 2)) : G("v-if", !0),
              y(I) && y(P) && y(B) ? (R(), ie(y(Fe), {
                key: 4,
                class: L([
                  y(g).e("icon"),
                  y(g).e("validateIcon"),
                  y(g).is("loading", y(I) === "validating")
                ])
              }, {
                default: Y(() => [
                  (R(), ie(yt(y(P))))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0)
            ], 2)
          ], 2)) : G("v-if", !0)
        ], 2),
        G(" append slot "),
        ge.$slots.append ? (R(), V("div", {
          key: 1,
          class: L(y(g).be("group", "append"))
        }, [
          de(ge.$slots, "append")
        ], 2)) : G("v-if", !0)
      ], 64)) : (R(), V(Tt, { key: 1 }, [
        G(" textarea "),
        Z("textarea", ki({
          id: y(d),
          ref_key: "textarea",
          ref: O,
          class: y(m).e("inner")
        }, y(c), {
          minlength: ge.minlength,
          maxlength: ge.maxlength,
          tabindex: ge.tabindex,
          disabled: y(p),
          readonly: ge.readonly,
          autocomplete: ge.autocomplete,
          style: y(q),
          "aria-label": ge.label,
          placeholder: ge.placeholder,
          form: ge.form,
          autofocus: ge.autofocus,
          onCompositionstart: Kn,
          onCompositionupdate: Jn,
          onCompositionend: Di,
          onInput: ut,
          onFocus: Ke[2] || (Ke[2] = (...Dt) => y(_) && y(_)(...Dt)),
          onBlur: Ke[3] || (Ke[3] = (...Dt) => y(T) && y(T)(...Dt)),
          onChange: zt,
          onKeydown: Yi
        }), null, 16, kq),
        y(te) ? (R(), V("span", {
          key: 0,
          style: Qe(S.value),
          class: L(y(g).e("count"))
        }, xe(y(W)) + " / " + xe(ge.maxlength), 7)) : G("v-if", !0)
      ], 64))
    ], 16, Sq)), [
      [Qt, ge.type !== "hidden"]
    ]);
  }
});
var Aq = /* @__PURE__ */ Ce(Eq, [["__file", "input.vue"]]);
const ic = Ft(Aq), dc = 4, K$ = {
  vertical: {
    offset: "offsetHeight",
    scroll: "scrollTop",
    scrollSize: "scrollHeight",
    size: "height",
    key: "vertical",
    axis: "Y",
    client: "clientY",
    direction: "top"
  },
  horizontal: {
    offset: "offsetWidth",
    scroll: "scrollLeft",
    scrollSize: "scrollWidth",
    size: "width",
    key: "horizontal",
    axis: "X",
    client: "clientX",
    direction: "left"
  }
}, $q = ({
  move: n,
  size: e,
  bar: t
}) => ({
  [t.size]: e,
  transform: `translate${t.axis}(${n}%)`
}), z1 = Symbol("scrollbarContextKey"), Tq = Ee({
  vertical: Boolean,
  size: String,
  move: Number,
  ratio: {
    type: Number,
    required: !0
  },
  always: Boolean
}), _q = "Thumb", Mq = /* @__PURE__ */ F({
  __name: "thumb",
  props: Tq,
  setup(n) {
    const e = n, t = ke(z1), i = me("scrollbar");
    t || hs(_q, "can not inject scrollbar context");
    const s = D(), r = D(), o = D({}), l = D(!1);
    let a = !1, c = !1, u = vt ? document.onselectstart : null;
    const h = $(() => K$[e.vertical ? "vertical" : "horizontal"]), d = $(() => $q({
      size: e.size,
      move: e.move,
      bar: h.value
    })), f = $(() => s.value[h.value.offset] ** 2 / t.wrapElement[h.value.scrollSize] / e.ratio / r.value[h.value.offset]), p = (S) => {
      var C;
      if (S.stopPropagation(), S.ctrlKey || [1, 2].includes(S.button))
        return;
      (C = window.getSelection()) == null || C.removeAllRanges(), m(S);
      const k = S.currentTarget;
      k && (o.value[h.value.axis] = k[h.value.offset] - (S[h.value.client] - k.getBoundingClientRect()[h.value.direction]));
    }, g = (S) => {
      if (!r.value || !s.value || !t.wrapElement)
        return;
      const C = Math.abs(S.target.getBoundingClientRect()[h.value.direction] - S[h.value.client]), k = r.value[h.value.offset] / 2, E = (C - k) * 100 * f.value / s.value[h.value.offset];
      t.wrapElement[h.value.scroll] = E * t.wrapElement[h.value.scrollSize] / 100;
    }, m = (S) => {
      S.stopImmediatePropagation(), a = !0, document.addEventListener("mousemove", v), document.addEventListener("mouseup", O), u = document.onselectstart, document.onselectstart = () => !1;
    }, v = (S) => {
      if (!s.value || !r.value || a === !1)
        return;
      const C = o.value[h.value.axis];
      if (!C)
        return;
      const k = (s.value.getBoundingClientRect()[h.value.direction] - S[h.value.client]) * -1, E = r.value[h.value.offset] - C, M = (k - E) * 100 * f.value / s.value[h.value.offset];
      t.wrapElement[h.value.scroll] = M * t.wrapElement[h.value.scrollSize] / 100;
    }, O = () => {
      a = !1, o.value[h.value.axis] = 0, document.removeEventListener("mousemove", v), document.removeEventListener("mouseup", O), x(), c && (l.value = !1);
    }, b = () => {
      c = !1, l.value = !!e.size;
    }, w = () => {
      c = !0, l.value = a;
    };
    Gn(() => {
      x(), document.removeEventListener("mouseup", O);
    });
    const x = () => {
      document.onselectstart !== u && (document.onselectstart = u);
    };
    return Zi(ks(t, "scrollbarElement"), "mousemove", b), Zi(ks(t, "scrollbarElement"), "mouseleave", w), (S, C) => (R(), ie(mo, {
      name: y(i).b("fade"),
      persisted: ""
    }, {
      default: Y(() => [
        it(Z("div", {
          ref_key: "instance",
          ref: s,
          class: L([y(i).e("bar"), y(i).is(y(h).key)]),
          onMousedown: g
        }, [
          Z("div", {
            ref_key: "thumb",
            ref: r,
            class: L(y(i).e("thumb")),
            style: Qe(y(d)),
            onMousedown: p
          }, null, 38)
        ], 34), [
          [Qt, S.always || l.value]
        ])
      ]),
      _: 1
    }, 8, ["name"]));
  }
});
var YS = /* @__PURE__ */ Ce(Mq, [["__file", "thumb.vue"]]);
const Rq = Ee({
  always: {
    type: Boolean,
    default: !0
  },
  minSize: {
    type: Number,
    required: !0
  }
}), Nq = /* @__PURE__ */ F({
  __name: "bar",
  props: Rq,
  setup(n, { expose: e }) {
    const t = n, i = ke(z1), s = D(0), r = D(0), o = D(""), l = D(""), a = D(1), c = D(1);
    return e({
      handleScroll: (d) => {
        if (d) {
          const f = d.offsetHeight - dc, p = d.offsetWidth - dc;
          r.value = d.scrollTop * 100 / f * a.value, s.value = d.scrollLeft * 100 / p * c.value;
        }
      },
      update: () => {
        const d = i == null ? void 0 : i.wrapElement;
        if (!d)
          return;
        const f = d.offsetHeight - dc, p = d.offsetWidth - dc, g = f ** 2 / d.scrollHeight, m = p ** 2 / d.scrollWidth, v = Math.max(g, t.minSize), O = Math.max(m, t.minSize);
        a.value = g / (f - g) / (v / (f - v)), c.value = m / (p - m) / (O / (p - O)), l.value = v + dc < f ? `${v}px` : "", o.value = O + dc < p ? `${O}px` : "";
      }
    }), (d, f) => (R(), V(Tt, null, [
      K(YS, {
        move: s.value,
        ratio: c.value,
        size: o.value,
        always: d.always
      }, null, 8, ["move", "ratio", "size", "always"]),
      K(YS, {
        move: r.value,
        ratio: a.value,
        size: l.value,
        vertical: "",
        always: d.always
      }, null, 8, ["move", "ratio", "size", "always"])
    ], 64));
  }
});
var Dq = /* @__PURE__ */ Ce(Nq, [["__file", "bar.vue"]]);
const Lq = Ee({
  height: {
    type: [String, Number],
    default: ""
  },
  maxHeight: {
    type: [String, Number],
    default: ""
  },
  native: {
    type: Boolean,
    default: !1
  },
  wrapStyle: {
    type: ce([String, Object, Array]),
    default: ""
  },
  wrapClass: {
    type: [String, Array],
    default: ""
  },
  viewClass: {
    type: [String, Array],
    default: ""
  },
  viewStyle: {
    type: [String, Array, Object],
    default: ""
  },
  noresize: Boolean,
  tag: {
    type: String,
    default: "div"
  },
  always: Boolean,
  minSize: {
    type: Number,
    default: 20
  },
  id: String,
  role: String,
  ariaLabel: String,
  ariaOrientation: {
    type: String,
    values: ["horizontal", "vertical"]
  }
}), Iq = {
  scroll: ({
    scrollTop: n,
    scrollLeft: e
  }) => [n, e].every(tt)
}, Xb = "ElScrollbar", Bq = F({
  name: Xb
}), Qq = /* @__PURE__ */ F({
  ...Bq,
  props: Lq,
  emits: Iq,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = me("scrollbar");
    let r, o;
    const l = D(), a = D(), c = D(), u = D(), h = $(() => {
      const b = {};
      return i.height && (b.height = cs(i.height)), i.maxHeight && (b.maxHeight = cs(i.maxHeight)), [i.wrapStyle, b];
    }), d = $(() => [
      i.wrapClass,
      s.e("wrap"),
      { [s.em("wrap", "hidden-default")]: !i.native }
    ]), f = $(() => [s.e("view"), i.viewClass]), p = () => {
      var b;
      a.value && ((b = u.value) == null || b.handleScroll(a.value), t("scroll", {
        scrollTop: a.value.scrollTop,
        scrollLeft: a.value.scrollLeft
      }));
    };
    function g(b, w) {
      ln(b) ? a.value.scrollTo(b) : tt(b) && tt(w) && a.value.scrollTo(b, w);
    }
    const m = (b) => {
      if (!tt(b)) {
        pt(Xb, "value must be a number");
        return;
      }
      a.value.scrollTop = b;
    }, v = (b) => {
      if (!tt(b)) {
        pt(Xb, "value must be a number");
        return;
      }
      a.value.scrollLeft = b;
    }, O = () => {
      var b;
      (b = u.value) == null || b.update();
    };
    return ne(() => i.noresize, (b) => {
      b ? (r == null || r(), o == null || o()) : ({ stop: r } = pn(c, O), o = Zi("resize", O));
    }, { immediate: !0 }), ne(() => [i.maxHeight, i.height], () => {
      i.native || $e(() => {
        var b;
        O(), a.value && ((b = u.value) == null || b.handleScroll(a.value));
      });
    }), ft(z1, Gt({
      scrollbarElement: l,
      wrapElement: a
    })), qe(() => {
      i.native || $e(() => {
        O();
      });
    }), Zl(() => O()), e({
      wrapRef: a,
      update: O,
      scrollTo: g,
      setScrollTop: m,
      setScrollLeft: v,
      handleScroll: p
    }), (b, w) => (R(), V("div", {
      ref_key: "scrollbarRef",
      ref: l,
      class: L(y(s).b())
    }, [
      Z("div", {
        ref_key: "wrapRef",
        ref: a,
        class: L(y(d)),
        style: Qe(y(h)),
        onScroll: p
      }, [
        (R(), ie(yt(b.tag), {
          id: b.id,
          ref_key: "resizeRef",
          ref: c,
          class: L(y(f)),
          style: Qe(b.viewStyle),
          role: b.role,
          "aria-label": b.ariaLabel,
          "aria-orientation": b.ariaOrientation
        }, {
          default: Y(() => [
            de(b.$slots, "default")
          ]),
          _: 3
        }, 8, ["id", "class", "style", "role", "aria-label", "aria-orientation"]))
      ], 38),
      b.native ? G("v-if", !0) : (R(), ie(Dq, {
        key: 0,
        ref_key: "barRef",
        ref: u,
        always: b.always,
        "min-size": b.minSize
      }, null, 8, ["always", "min-size"]))
    ], 2));
  }
});
var zq = /* @__PURE__ */ Ce(Qq, [["__file", "scrollbar.vue"]]);
const wf = Ft(zq), j1 = Symbol("popper"), J$ = Symbol("popperContent"), jq = [
  "dialog",
  "grid",
  "group",
  "listbox",
  "menu",
  "navigation",
  "tooltip",
  "tree"
], eT = Ee({
  role: {
    type: String,
    values: jq,
    default: "tooltip"
  }
}), Vq = F({
  name: "ElPopper",
  inheritAttrs: !1
}), Fq = /* @__PURE__ */ F({
  ...Vq,
  props: eT,
  setup(n, { expose: e }) {
    const t = n, i = D(), s = D(), r = D(), o = D(), l = $(() => t.role), a = {
      triggerRef: i,
      popperInstanceRef: s,
      contentRef: r,
      referenceRef: o,
      role: l
    };
    return e(a), ft(j1, a), (c, u) => de(c.$slots, "default");
  }
});
var Zq = /* @__PURE__ */ Ce(Fq, [["__file", "popper.vue"]]);
const tT = Ee({
  arrowOffset: {
    type: Number,
    default: 5
  }
}), qq = F({
  name: "ElPopperArrow",
  inheritAttrs: !1
}), Wq = /* @__PURE__ */ F({
  ...qq,
  props: tT,
  setup(n, { expose: e }) {
    const t = n, i = me("popper"), { arrowOffset: s, arrowRef: r, arrowStyle: o } = ke(J$, void 0);
    return ne(() => t.arrowOffset, (l) => {
      s.value = l;
    }), Gn(() => {
      r.value = void 0;
    }), e({
      arrowRef: r
    }), (l, a) => (R(), V("span", {
      ref_key: "arrowRef",
      ref: r,
      class: L(y(i).e("arrow")),
      style: Qe(y(o)),
      "data-popper-arrow": ""
    }, null, 6));
  }
});
var Hq = /* @__PURE__ */ Ce(Wq, [["__file", "arrow.vue"]]);
const cv = "ElOnlyChild", Xq = F({
  name: cv,
  setup(n, {
    slots: e,
    attrs: t
  }) {
    var i;
    const s = ke(q$), r = HZ((i = s == null ? void 0 : s.setForwardRef) != null ? i : Xt);
    return () => {
      var o;
      const l = (o = e.default) == null ? void 0 : o.call(e, t);
      if (!l)
        return null;
      if (l.length > 1)
        return pt(cv, "requires exact only one valid child."), null;
      const a = nT(l);
      return a ? it(Q4(a, t), [[r]]) : (pt(cv, "no valid child node found"), null);
    };
  }
});
function nT(n) {
  if (!n)
    return null;
  const e = n;
  for (const t of e) {
    if (ln(t))
      switch (t.type) {
        case LE:
          continue;
        case DE:
        case "svg":
          return US(t);
        case Tt:
          return nT(t.children);
        default:
          return t;
      }
    return US(t);
  }
  return null;
}
function US(n) {
  const e = me("only-child");
  return K("span", {
    class: e.e("content")
  }, [n]);
}
const iT = Ee({
  virtualRef: {
    type: ce(Object)
  },
  virtualTriggering: Boolean,
  onMouseenter: {
    type: ce(Function)
  },
  onMouseleave: {
    type: ce(Function)
  },
  onClick: {
    type: ce(Function)
  },
  onKeydown: {
    type: ce(Function)
  },
  onFocus: {
    type: ce(Function)
  },
  onBlur: {
    type: ce(Function)
  },
  onContextmenu: {
    type: ce(Function)
  },
  id: String,
  open: Boolean
}), Yq = F({
  name: "ElPopperTrigger",
  inheritAttrs: !1
}), Uq = /* @__PURE__ */ F({
  ...Yq,
  props: iT,
  setup(n, { expose: e }) {
    const t = n, { role: i, triggerRef: s } = ke(j1, void 0);
    WZ(s);
    const r = $(() => l.value ? t.id : void 0), o = $(() => {
      if (i && i.value === "tooltip")
        return t.open && t.id ? t.id : void 0;
    }), l = $(() => {
      if (i && i.value !== "tooltip")
        return i.value;
    }), a = $(() => l.value ? `${t.open}` : void 0);
    let c;
    return qe(() => {
      ne(() => t.virtualRef, (u) => {
        u && (s.value = Yr(u));
      }, {
        immediate: !0
      }), ne(s, (u, h) => {
        c == null || c(), c = void 0, yr(u) && ([
          "onMouseenter",
          "onMouseleave",
          "onClick",
          "onKeydown",
          "onFocus",
          "onBlur",
          "onContextmenu"
        ].forEach((d) => {
          var f;
          const p = t[d];
          p && (u.addEventListener(d.slice(2).toLowerCase(), p), (f = h == null ? void 0 : h.removeEventListener) == null || f.call(h, d.slice(2).toLowerCase(), p));
        }), c = ne([r, o, l, a], (d) => {
          [
            "aria-controls",
            "aria-describedby",
            "aria-haspopup",
            "aria-expanded"
          ].forEach((f, p) => {
            Ri(d[p]) ? u.removeAttribute(f) : u.setAttribute(f, d[p]);
          });
        }, { immediate: !0 })), yr(h) && [
          "aria-controls",
          "aria-describedby",
          "aria-haspopup",
          "aria-expanded"
        ].forEach((d) => h.removeAttribute(d));
      }, {
        immediate: !0
      });
    }), Gn(() => {
      c == null || c(), c = void 0;
    }), e({
      triggerRef: s
    }), (u, h) => u.virtualTriggering ? G("v-if", !0) : (R(), ie(y(Xq), ki({ key: 0 }, u.$attrs, {
      "aria-controls": y(r),
      "aria-describedby": y(o),
      "aria-expanded": y(a),
      "aria-haspopup": y(l)
    }), {
      default: Y(() => [
        de(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-controls", "aria-describedby", "aria-expanded", "aria-haspopup"]));
  }
});
var Gq = /* @__PURE__ */ Ce(Uq, [["__file", "trigger.vue"]]);
const uv = "focus-trap.focus-after-trapped", hv = "focus-trap.focus-after-released", Kq = "focus-trap.focusout-prevented", GS = {
  cancelable: !0,
  bubbles: !1
}, Jq = {
  cancelable: !0,
  bubbles: !1
}, KS = "focusAfterTrapped", JS = "focusAfterReleased", sT = Symbol("elFocusTrap"), V1 = D(), s0 = D(0), F1 = D(0);
let Uf = 0;
const rT = (n) => {
  const e = [], t = document.createTreeWalker(n, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (i) => {
      const s = i.tagName === "INPUT" && i.type === "hidden";
      return i.disabled || i.hidden || s ? NodeFilter.FILTER_SKIP : i.tabIndex >= 0 || i === document.activeElement ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; t.nextNode(); )
    e.push(t.currentNode);
  return e;
}, eC = (n, e) => {
  for (const t of n)
    if (!e7(t, e))
      return t;
}, e7 = (n, e) => {
  if (process.env.NODE_ENV === "test")
    return !1;
  if (getComputedStyle(n).visibility === "hidden")
    return !0;
  for (; n; ) {
    if (e && n === e)
      return !1;
    if (getComputedStyle(n).display === "none")
      return !0;
    n = n.parentElement;
  }
  return !1;
}, t7 = (n) => {
  const e = rT(n), t = eC(e, n), i = eC(e.reverse(), n);
  return [t, i];
}, n7 = (n) => n instanceof HTMLInputElement && "select" in n, il = (n, e) => {
  if (n && n.focus) {
    const t = document.activeElement;
    n.focus({ preventScroll: !0 }), F1.value = window.performance.now(), n !== t && n7(n) && e && n.select();
  }
};
function tC(n, e) {
  const t = [...n], i = n.indexOf(e);
  return i !== -1 && t.splice(i, 1), t;
}
const i7 = () => {
  let n = [];
  return {
    push: (i) => {
      const s = n[0];
      s && i !== s && s.pause(), n = tC(n, i), n.unshift(i);
    },
    remove: (i) => {
      var s, r;
      n = tC(n, i), (r = (s = n[0]) == null ? void 0 : s.resume) == null || r.call(s);
    }
  };
}, s7 = (n, e = !1) => {
  const t = document.activeElement;
  for (const i of n)
    if (il(i, e), document.activeElement !== t)
      return;
}, nC = i7(), r7 = () => s0.value > F1.value, Gf = () => {
  V1.value = "pointer", s0.value = window.performance.now();
}, iC = () => {
  V1.value = "keyboard", s0.value = window.performance.now();
}, o7 = () => (qe(() => {
  Uf === 0 && (document.addEventListener("mousedown", Gf), document.addEventListener("touchstart", Gf), document.addEventListener("keydown", iC)), Uf++;
}), Gn(() => {
  Uf--, Uf <= 0 && (document.removeEventListener("mousedown", Gf), document.removeEventListener("touchstart", Gf), document.removeEventListener("keydown", iC));
}), {
  focusReason: V1,
  lastUserFocusTimestamp: s0,
  lastAutomatedFocusTimestamp: F1
}), Kf = (n) => new CustomEvent(Kq, {
  ...Jq,
  detail: n
}), l7 = F({
  name: "ElFocusTrap",
  inheritAttrs: !1,
  props: {
    loop: Boolean,
    trapped: Boolean,
    focusTrapEl: Object,
    focusStartEl: {
      type: [Object, String],
      default: "first"
    }
  },
  emits: [
    KS,
    JS,
    "focusin",
    "focusout",
    "focusout-prevented",
    "release-requested"
  ],
  setup(n, { emit: e }) {
    const t = D();
    let i, s;
    const { focusReason: r } = o7();
    jZ((p) => {
      n.trapped && !o.paused && e("release-requested", p);
    });
    const o = {
      paused: !1,
      pause() {
        this.paused = !0;
      },
      resume() {
        this.paused = !1;
      }
    }, l = (p) => {
      if (!n.loop && !n.trapped || o.paused)
        return;
      const { key: g, altKey: m, ctrlKey: v, metaKey: O, currentTarget: b, shiftKey: w } = p, { loop: x } = n, S = g === dt.tab && !m && !v && !O, C = document.activeElement;
      if (S && C) {
        const k = b, [E, M] = t7(k);
        if (E && M) {
          if (!w && C === M) {
            const T = Kf({
              focusReason: r.value
            });
            e("focusout-prevented", T), T.defaultPrevented || (p.preventDefault(), x && il(E, !0));
          } else if (w && [E, k].includes(C)) {
            const T = Kf({
              focusReason: r.value
            });
            e("focusout-prevented", T), T.defaultPrevented || (p.preventDefault(), x && il(M, !0));
          }
        } else if (C === k) {
          const T = Kf({
            focusReason: r.value
          });
          e("focusout-prevented", T), T.defaultPrevented || p.preventDefault();
        }
      }
    };
    ft(sT, {
      focusTrapRef: t,
      onKeydown: l
    }), ne(() => n.focusTrapEl, (p) => {
      p && (t.value = p);
    }, { immediate: !0 }), ne([t], ([p], [g]) => {
      p && (p.addEventListener("keydown", l), p.addEventListener("focusin", u), p.addEventListener("focusout", h)), g && (g.removeEventListener("keydown", l), g.removeEventListener("focusin", u), g.removeEventListener("focusout", h));
    });
    const a = (p) => {
      e(KS, p);
    }, c = (p) => e(JS, p), u = (p) => {
      const g = y(t);
      if (!g)
        return;
      const m = p.target, v = p.relatedTarget, O = m && g.contains(m);
      n.trapped || v && g.contains(v) || (i = v), O && e("focusin", p), !o.paused && n.trapped && (O ? s = m : il(s, !0));
    }, h = (p) => {
      const g = y(t);
      if (!(o.paused || !g))
        if (n.trapped) {
          const m = p.relatedTarget;
          !Ri(m) && !g.contains(m) && setTimeout(() => {
            if (!o.paused && n.trapped) {
              const v = Kf({
                focusReason: r.value
              });
              e("focusout-prevented", v), v.defaultPrevented || il(s, !0);
            }
          }, 0);
        } else {
          const m = p.target;
          m && g.contains(m) || e("focusout", p);
        }
    };
    async function d() {
      await $e();
      const p = y(t);
      if (p) {
        nC.push(o);
        const g = p.contains(document.activeElement) ? i : document.activeElement;
        if (i = g, !p.contains(g)) {
          const v = new Event(uv, GS);
          p.addEventListener(uv, a), p.dispatchEvent(v), v.defaultPrevented || $e(() => {
            let O = n.focusStartEl;
            bt(O) || (il(O), document.activeElement !== O && (O = "first")), O === "first" && s7(rT(p), !0), (document.activeElement === g || O === "container") && il(p);
          });
        }
      }
    }
    function f() {
      const p = y(t);
      if (p) {
        p.removeEventListener(uv, a);
        const g = new CustomEvent(hv, {
          ...GS,
          detail: {
            focusReason: r.value
          }
        });
        p.addEventListener(hv, c), p.dispatchEvent(g), !g.defaultPrevented && (r.value == "keyboard" || !r7() || p.contains(document.activeElement)) && il(i ?? document.body), p.removeEventListener(hv, c), nC.remove(o);
      }
    }
    return qe(() => {
      n.trapped && d(), ne(() => n.trapped, (p) => {
        p ? d() : f();
      });
    }), Gn(() => {
      n.trapped && f();
    }), {
      onKeydown: l
    };
  }
});
function a7(n, e, t, i, s, r) {
  return de(n.$slots, "default", { handleKeydown: n.onKeydown });
}
var r0 = /* @__PURE__ */ Ce(l7, [["render", a7], ["__file", "focus-trap.vue"]]);
const c7 = ["fixed", "absolute"], u7 = Ee({
  boundariesPadding: {
    type: Number,
    default: 0
  },
  fallbackPlacements: {
    type: ce(Array),
    default: void 0
  },
  gpuAcceleration: {
    type: Boolean,
    default: !0
  },
  offset: {
    type: Number,
    default: 12
  },
  placement: {
    type: String,
    values: yf,
    default: "bottom"
  },
  popperOptions: {
    type: ce(Object),
    default: () => ({})
  },
  strategy: {
    type: String,
    values: c7,
    default: "absolute"
  }
}), oT = Ee({
  ...u7,
  id: String,
  style: {
    type: ce([String, Array, Object])
  },
  className: {
    type: ce([String, Array, Object])
  },
  effect: {
    type: String,
    default: "dark"
  },
  visible: Boolean,
  enterable: {
    type: Boolean,
    default: !0
  },
  pure: Boolean,
  focusOnShow: {
    type: Boolean,
    default: !1
  },
  trapping: {
    type: Boolean,
    default: !1
  },
  popperClass: {
    type: ce([String, Array, Object])
  },
  popperStyle: {
    type: ce([String, Array, Object])
  },
  referenceEl: {
    type: ce(Object)
  },
  triggerTargetEl: {
    type: ce(Object)
  },
  stopPopperMouseEvent: {
    type: Boolean,
    default: !0
  },
  ariaLabel: {
    type: String,
    default: void 0
  },
  virtualTriggering: Boolean,
  zIndex: Number
}), h7 = {
  mouseenter: (n) => n instanceof MouseEvent,
  mouseleave: (n) => n instanceof MouseEvent,
  focus: () => !0,
  blur: () => !0,
  close: () => !0
}, d7 = (n, e = []) => {
  const { placement: t, strategy: i, popperOptions: s } = n, r = {
    placement: t,
    strategy: i,
    ...s,
    modifiers: [...p7(n), ...e]
  };
  return g7(r, s == null ? void 0 : s.modifiers), r;
}, f7 = (n) => {
  if (vt)
    return Yr(n);
};
function p7(n) {
  const { offset: e, gpuAcceleration: t, fallbackPlacements: i } = n;
  return [
    {
      name: "offset",
      options: {
        offset: [0, e ?? 12]
      }
    },
    {
      name: "preventOverflow",
      options: {
        padding: {
          top: 2,
          bottom: 2,
          left: 5,
          right: 5
        }
      }
    },
    {
      name: "flip",
      options: {
        padding: 5,
        fallbackPlacements: i
      }
    },
    {
      name: "computeStyles",
      options: {
        gpuAcceleration: t
      }
    }
  ];
}
function g7(n, e) {
  e && (n.modifiers = [...n.modifiers, ...e ?? []]);
}
const m7 = 0, v7 = (n) => {
  const { popperInstanceRef: e, contentRef: t, triggerRef: i, role: s } = ke(j1, void 0), r = D(), o = D(), l = $(() => ({
    name: "eventListeners",
    enabled: !!n.visible
  })), a = $(() => {
    var v;
    const O = y(r), b = (v = y(o)) != null ? v : m7;
    return {
      name: "arrow",
      enabled: !WA(O),
      options: {
        element: O,
        padding: b
      }
    };
  }), c = $(() => ({
    onFirstUpdate: () => {
      p();
    },
    ...d7(n, [
      y(a),
      y(l)
    ])
  })), u = $(() => f7(n.referenceEl) || y(i)), { attributes: h, state: d, styles: f, update: p, forceUpdate: g, instanceRef: m } = BZ(u, t, c);
  return ne(m, (v) => e.value = v), qe(() => {
    ne(() => {
      var v;
      return (v = y(u)) == null ? void 0 : v.getBoundingClientRect();
    }, () => {
      p();
    });
  }), {
    attributes: h,
    arrowRef: r,
    contentRef: t,
    instanceRef: m,
    state: d,
    styles: f,
    role: s,
    forceUpdate: g,
    update: p
  };
}, b7 = (n, {
  attributes: e,
  styles: t,
  role: i
}) => {
  const { nextZIndex: s } = B1(), r = me("popper"), o = $(() => y(e).popper), l = D(tt(n.zIndex) ? n.zIndex : s()), a = $(() => [
    r.b(),
    r.is("pure", n.pure),
    r.is(n.effect),
    n.popperClass
  ]), c = $(() => [
    { zIndex: y(l) },
    y(t).popper,
    n.popperStyle || {}
  ]), u = $(() => i.value === "dialog" ? "false" : void 0), h = $(() => y(t).arrow || {});
  return {
    ariaModal: u,
    arrowStyle: h,
    contentAttrs: o,
    contentClass: a,
    contentStyle: c,
    contentZIndex: l,
    updateZIndex: () => {
      l.value = tt(n.zIndex) ? n.zIndex : s();
    }
  };
}, y7 = (n, e) => {
  const t = D(!1), i = D();
  return {
    focusStartRef: i,
    trapped: t,
    onFocusAfterReleased: (c) => {
      var u;
      ((u = c.detail) == null ? void 0 : u.focusReason) !== "pointer" && (i.value = "first", e("blur"));
    },
    onFocusAfterTrapped: () => {
      e("focus");
    },
    onFocusInTrap: (c) => {
      n.visible && !t.value && (c.target && (i.value = c.target), t.value = !0);
    },
    onFocusoutPrevented: (c) => {
      n.trapping || (c.detail.focusReason === "pointer" && c.preventDefault(), t.value = !1);
    },
    onReleaseRequested: () => {
      t.value = !1, e("close");
    }
  };
}, O7 = F({
  name: "ElPopperContent"
}), w7 = /* @__PURE__ */ F({
  ...O7,
  props: oT,
  emits: h7,
  setup(n, { expose: e, emit: t }) {
    const i = n, {
      focusStartRef: s,
      trapped: r,
      onFocusAfterReleased: o,
      onFocusAfterTrapped: l,
      onFocusInTrap: a,
      onFocusoutPrevented: c,
      onReleaseRequested: u
    } = y7(i, t), { attributes: h, arrowRef: d, contentRef: f, styles: p, instanceRef: g, role: m, update: v } = v7(i), {
      ariaModal: O,
      arrowStyle: b,
      contentAttrs: w,
      contentClass: x,
      contentStyle: S,
      updateZIndex: C
    } = b7(i, {
      styles: p,
      attributes: h,
      role: m
    }), k = ke(Tl, void 0), E = D();
    ft(J$, {
      arrowStyle: b,
      arrowRef: d,
      arrowOffset: E
    }), k && (k.addInputId || k.removeInputId) && ft(Tl, {
      ...k,
      addInputId: Xt,
      removeInputId: Xt
    });
    let M;
    const _ = (B = !0) => {
      v(), B && C();
    }, T = () => {
      _(!1), i.visible && i.focusOnShow ? r.value = !0 : i.visible === !1 && (r.value = !1);
    };
    return qe(() => {
      ne(() => i.triggerTargetEl, (B, I) => {
        M == null || M(), M = void 0;
        const P = y(B || f.value), A = y(I || f.value);
        yr(P) && (M = ne([m, () => i.ariaLabel, O, () => i.id], (N) => {
          ["role", "aria-label", "aria-modal", "id"].forEach((q, j) => {
            Ri(N[j]) ? P.removeAttribute(q) : P.setAttribute(q, N[j]);
          });
        }, { immediate: !0 })), A !== P && yr(A) && ["role", "aria-label", "aria-modal", "id"].forEach((N) => {
          A.removeAttribute(N);
        });
      }, { immediate: !0 }), ne(() => i.visible, T, { immediate: !0 });
    }), Gn(() => {
      M == null || M(), M = void 0;
    }), e({
      popperContentRef: f,
      popperInstanceRef: g,
      updatePopper: _,
      contentStyle: S
    }), (B, I) => (R(), V("div", ki({
      ref_key: "contentRef",
      ref: f
    }, y(w), {
      style: y(S),
      class: y(x),
      tabindex: "-1",
      onMouseenter: I[0] || (I[0] = (P) => B.$emit("mouseenter", P)),
      onMouseleave: I[1] || (I[1] = (P) => B.$emit("mouseleave", P))
    }), [
      K(y(r0), {
        trapped: y(r),
        "trap-on-focus-in": !0,
        "focus-trap-el": y(f),
        "focus-start-el": y(s),
        onFocusAfterTrapped: y(l),
        onFocusAfterReleased: y(o),
        onFocusin: y(a),
        onFocusoutPrevented: y(c),
        onReleaseRequested: y(u)
      }, {
        default: Y(() => [
          de(B.$slots, "default")
        ]),
        _: 3
      }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusin", "onFocusoutPrevented", "onReleaseRequested"])
    ], 16));
  }
});
var x7 = /* @__PURE__ */ Ce(w7, [["__file", "content.vue"]]);
const S7 = Ft(Zq), Z1 = Symbol("elTooltip"), gi = Ee({
  ...ZZ,
  ...oT,
  appendTo: {
    type: ce([String, Object])
  },
  content: {
    type: String,
    default: ""
  },
  rawContent: {
    type: Boolean,
    default: !1
  },
  persistent: Boolean,
  ariaLabel: String,
  visible: {
    type: ce(Boolean),
    default: null
  },
  transition: String,
  teleported: {
    type: Boolean,
    default: !0
  },
  disabled: Boolean
}), Pd = Ee({
  ...iT,
  disabled: Boolean,
  trigger: {
    type: ce([String, Array]),
    default: "hover"
  },
  triggerKeys: {
    type: ce(Array),
    default: () => [dt.enter, dt.space]
  }
}), {
  useModelToggleProps: C7,
  useModelToggleEmits: k7,
  useModelToggle: P7
} = _$("visible"), E7 = Ee({
  ...eT,
  ...C7,
  ...gi,
  ...Pd,
  ...tT,
  showArrow: {
    type: Boolean,
    default: !0
  }
}), A7 = [
  ...k7,
  "before-show",
  "before-hide",
  "show",
  "hide",
  "open",
  "close"
], $7 = (n, e) => xt(n) ? n.includes(e) : n === e, fc = (n, e, t) => (i) => {
  $7(y(n), e) && t(i);
}, T7 = F({
  name: "ElTooltipTrigger"
}), _7 = /* @__PURE__ */ F({
  ...T7,
  props: Pd,
  setup(n, { expose: e }) {
    const t = n, i = me("tooltip"), { controlled: s, id: r, open: o, onOpen: l, onClose: a, onToggle: c } = ke(Z1, void 0), u = D(null), h = () => {
      if (y(s) || t.disabled)
        return !0;
    }, d = ks(t, "trigger"), f = ko(h, fc(d, "hover", l)), p = ko(h, fc(d, "hover", a)), g = ko(h, fc(d, "click", (w) => {
      w.button === 0 && c(w);
    })), m = ko(h, fc(d, "focus", l)), v = ko(h, fc(d, "focus", a)), O = ko(h, fc(d, "contextmenu", (w) => {
      w.preventDefault(), c(w);
    })), b = ko(h, (w) => {
      const { code: x } = w;
      t.triggerKeys.includes(x) && (w.preventDefault(), c(w));
    });
    return e({
      triggerRef: u
    }), (w, x) => (R(), ie(y(Gq), {
      id: y(r),
      "virtual-ref": w.virtualRef,
      open: y(o),
      "virtual-triggering": w.virtualTriggering,
      class: L(y(i).e("trigger")),
      onBlur: y(v),
      onClick: y(g),
      onContextmenu: y(O),
      onFocus: y(m),
      onMouseenter: y(f),
      onMouseleave: y(p),
      onKeydown: y(b)
    }, {
      default: Y(() => [
        de(w.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "virtual-ref", "open", "virtual-triggering", "class", "onBlur", "onClick", "onContextmenu", "onFocus", "onMouseenter", "onMouseleave", "onKeydown"]));
  }
});
var M7 = /* @__PURE__ */ Ce(_7, [["__file", "trigger.vue"]]);
const R7 = F({
  name: "ElTooltipContent",
  inheritAttrs: !1
}), N7 = /* @__PURE__ */ F({
  ...R7,
  props: gi,
  setup(n, { expose: e }) {
    const t = n, { selector: i } = Z$(), s = me("tooltip"), r = D(null), o = D(!1), {
      controlled: l,
      id: a,
      open: c,
      trigger: u,
      onClose: h,
      onOpen: d,
      onShow: f,
      onHide: p,
      onBeforeShow: g,
      onBeforeHide: m
    } = ke(Z1, void 0), v = $(() => t.transition || `${s.namespace.value}-fade-in-linear`), O = $(() => process.env.NODE_ENV === "test" ? !0 : t.persistent);
    Gn(() => {
      o.value = !0;
    });
    const b = $(() => y(O) ? !0 : y(c)), w = $(() => t.disabled ? !1 : y(c)), x = $(() => t.appendTo || i.value), S = $(() => {
      var N;
      return (N = t.style) != null ? N : {};
    }), C = $(() => !y(c)), k = () => {
      p();
    }, E = () => {
      if (y(l))
        return !0;
    }, M = ko(E, () => {
      t.enterable && y(u) === "hover" && d();
    }), _ = ko(E, () => {
      y(u) === "hover" && h();
    }), T = () => {
      var N, q;
      (q = (N = r.value) == null ? void 0 : N.updatePopper) == null || q.call(N), g == null || g();
    }, B = () => {
      m == null || m();
    }, I = () => {
      f(), A = RV($(() => {
        var N;
        return (N = r.value) == null ? void 0 : N.popperContentRef;
      }), () => {
        if (y(l))
          return;
        y(u) !== "hover" && h();
      });
    }, P = () => {
      t.virtualTriggering || h();
    };
    let A;
    return ne(() => y(c), (N) => {
      N || A == null || A();
    }, {
      flush: "post"
    }), ne(() => t.content, () => {
      var N, q;
      (q = (N = r.value) == null ? void 0 : N.updatePopper) == null || q.call(N);
    }), e({
      contentRef: r
    }), (N, q) => (R(), ie(jm, {
      disabled: !N.teleported,
      to: y(x)
    }, [
      K(mo, {
        name: y(v),
        onAfterLeave: k,
        onBeforeEnter: T,
        onAfterEnter: I,
        onBeforeLeave: B
      }, {
        default: Y(() => [
          y(b) ? it((R(), ie(y(x7), ki({
            key: 0,
            id: y(a),
            ref_key: "contentRef",
            ref: r
          }, N.$attrs, {
            "aria-label": N.ariaLabel,
            "aria-hidden": y(C),
            "boundaries-padding": N.boundariesPadding,
            "fallback-placements": N.fallbackPlacements,
            "gpu-acceleration": N.gpuAcceleration,
            offset: N.offset,
            placement: N.placement,
            "popper-options": N.popperOptions,
            strategy: N.strategy,
            effect: N.effect,
            enterable: N.enterable,
            pure: N.pure,
            "popper-class": N.popperClass,
            "popper-style": [N.popperStyle, y(S)],
            "reference-el": N.referenceEl,
            "trigger-target-el": N.triggerTargetEl,
            visible: y(w),
            "z-index": N.zIndex,
            onMouseenter: y(M),
            onMouseleave: y(_),
            onBlur: P,
            onClose: y(h)
          }), {
            default: Y(() => [
              o.value ? G("v-if", !0) : de(N.$slots, "default", { key: 0 })
            ]),
            _: 3
          }, 16, ["id", "aria-label", "aria-hidden", "boundaries-padding", "fallback-placements", "gpu-acceleration", "offset", "placement", "popper-options", "strategy", "effect", "enterable", "pure", "popper-class", "popper-style", "reference-el", "trigger-target-el", "visible", "z-index", "onMouseenter", "onMouseleave", "onClose"])), [
            [Qt, y(w)]
          ]) : G("v-if", !0)
        ]),
        _: 3
      }, 8, ["name"])
    ], 8, ["disabled", "to"]));
  }
});
var D7 = /* @__PURE__ */ Ce(N7, [["__file", "content.vue"]]);
const L7 = ["innerHTML"], I7 = { key: 1 }, B7 = F({
  name: "ElTooltip"
}), Q7 = /* @__PURE__ */ F({
  ...B7,
  props: E7,
  emits: A7,
  setup(n, { expose: e, emit: t }) {
    const i = n;
    FZ();
    const s = Or(), r = D(), o = D(), l = () => {
      var v;
      const O = y(r);
      O && ((v = O.popperInstanceRef) == null || v.update());
    }, a = D(!1), c = D(), { show: u, hide: h, hasUpdateHandler: d } = P7({
      indicator: a,
      toggleReason: c
    }), { onOpen: f, onClose: p } = qZ({
      showAfter: ks(i, "showAfter"),
      hideAfter: ks(i, "hideAfter"),
      autoClose: ks(i, "autoClose"),
      open: u,
      close: h
    }), g = $(() => Pi(i.visible) && !d.value);
    ft(Z1, {
      controlled: g,
      id: s,
      open: n1(a),
      trigger: ks(i, "trigger"),
      onOpen: (v) => {
        f(v);
      },
      onClose: (v) => {
        p(v);
      },
      onToggle: (v) => {
        y(a) ? p(v) : f(v);
      },
      onShow: () => {
        t("show", c.value);
      },
      onHide: () => {
        t("hide", c.value);
      },
      onBeforeShow: () => {
        t("before-show", c.value);
      },
      onBeforeHide: () => {
        t("before-hide", c.value);
      },
      updatePopper: l
    }), ne(() => i.disabled, (v) => {
      v && a.value && (a.value = !1);
    });
    const m = (v) => {
      var O, b;
      const w = (b = (O = o.value) == null ? void 0 : O.contentRef) == null ? void 0 : b.popperContentRef, x = (v == null ? void 0 : v.relatedTarget) || document.activeElement;
      return w && w.contains(x);
    };
    return z4(() => a.value && h()), e({
      popperRef: r,
      contentRef: o,
      isFocusInsideContent: m,
      updatePopper: l,
      onOpen: f,
      onClose: p,
      hide: h
    }), (v, O) => (R(), ie(y(S7), {
      ref_key: "popperRef",
      ref: r,
      role: v.role
    }, {
      default: Y(() => [
        K(M7, {
          disabled: v.disabled,
          trigger: v.trigger,
          "trigger-keys": v.triggerKeys,
          "virtual-ref": v.virtualRef,
          "virtual-triggering": v.virtualTriggering
        }, {
          default: Y(() => [
            v.$slots.default ? de(v.$slots, "default", { key: 0 }) : G("v-if", !0)
          ]),
          _: 3
        }, 8, ["disabled", "trigger", "trigger-keys", "virtual-ref", "virtual-triggering"]),
        K(D7, {
          ref_key: "contentRef",
          ref: o,
          "aria-label": v.ariaLabel,
          "boundaries-padding": v.boundariesPadding,
          content: v.content,
          disabled: v.disabled,
          effect: v.effect,
          enterable: v.enterable,
          "fallback-placements": v.fallbackPlacements,
          "hide-after": v.hideAfter,
          "gpu-acceleration": v.gpuAcceleration,
          offset: v.offset,
          persistent: v.persistent,
          "popper-class": v.popperClass,
          "popper-style": v.popperStyle,
          placement: v.placement,
          "popper-options": v.popperOptions,
          pure: v.pure,
          "raw-content": v.rawContent,
          "reference-el": v.referenceEl,
          "trigger-target-el": v.triggerTargetEl,
          "show-after": v.showAfter,
          strategy: v.strategy,
          teleported: v.teleported,
          transition: v.transition,
          "virtual-triggering": v.virtualTriggering,
          "z-index": v.zIndex,
          "append-to": v.appendTo
        }, {
          default: Y(() => [
            de(v.$slots, "content", {}, () => [
              v.rawContent ? (R(), V("span", {
                key: 0,
                innerHTML: v.content
              }, null, 8, L7)) : (R(), V("span", I7, xe(v.content), 1))
            ]),
            v.showArrow ? (R(), ie(y(Hq), {
              key: 0,
              "arrow-offset": v.arrowOffset
            }, null, 8, ["arrow-offset"])) : G("v-if", !0)
          ]),
          _: 3
        }, 8, ["aria-label", "boundaries-padding", "content", "disabled", "effect", "enterable", "fallback-placements", "hide-after", "gpu-acceleration", "offset", "persistent", "popper-class", "popper-style", "placement", "popper-options", "pure", "raw-content", "reference-el", "trigger-target-el", "show-after", "strategy", "teleported", "transition", "virtual-triggering", "z-index", "append-to"])
      ]),
      _: 3
    }, 8, ["role"]));
  }
});
var z7 = /* @__PURE__ */ Ce(Q7, [["__file", "tooltip.vue"]]);
const Bo = Ft(z7), j7 = Ee({
  value: {
    type: [String, Number],
    default: ""
  },
  max: {
    type: Number,
    default: 99
  },
  isDot: Boolean,
  hidden: Boolean,
  type: {
    type: String,
    values: ["primary", "success", "warning", "info", "danger"],
    default: "danger"
  }
}), V7 = ["textContent"], F7 = F({
  name: "ElBadge"
}), Z7 = /* @__PURE__ */ F({
  ...F7,
  props: j7,
  setup(n, { expose: e }) {
    const t = n, i = me("badge"), s = $(() => t.isDot ? "" : tt(t.value) && tt(t.max) ? t.max < t.value ? `${t.max}+` : `${t.value}` : `${t.value}`);
    return e({
      content: s
    }), (r, o) => (R(), V("div", {
      class: L(y(i).b())
    }, [
      de(r.$slots, "default"),
      K(mo, {
        name: `${y(i).namespace.value}-zoom-in-center`,
        persisted: ""
      }, {
        default: Y(() => [
          it(Z("sup", {
            class: L([
              y(i).e("content"),
              y(i).em("content", r.type),
              y(i).is("fixed", !!r.$slots.default),
              y(i).is("dot", r.isDot)
            ]),
            textContent: xe(y(s))
          }, null, 10, V7), [
            [Qt, !r.hidden && (y(s) || r.isDot)]
          ])
        ]),
        _: 1
      }, 8, ["name"])
    ], 2));
  }
});
var q7 = /* @__PURE__ */ Ce(Z7, [["__file", "badge.vue"]]);
const W7 = Ft(q7), lT = Symbol("buttonGroupContextKey"), H7 = (n, e) => {
  Ba({
    from: "type.text",
    replacement: "link",
    version: "3.0.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/button.html#button-attributes"
  }, $(() => n.type === "text"));
  const t = ke(lT, void 0), i = i0("button"), { form: s } = _s(), r = Xi($(() => t == null ? void 0 : t.size)), o = er(), l = D(), a = go(), c = $(() => n.type || (t == null ? void 0 : t.type) || ""), u = $(() => {
    var p, g, m;
    return (m = (g = n.autoInsertSpace) != null ? g : (p = i.value) == null ? void 0 : p.autoInsertSpace) != null ? m : !1;
  }), h = $(() => n.tag === "button" ? {
    ariaDisabled: o.value || n.loading,
    disabled: o.value || n.loading,
    autofocus: n.autofocus,
    type: n.nativeType
  } : {}), d = $(() => {
    var p;
    const g = (p = a.default) == null ? void 0 : p.call(a);
    if (u.value && (g == null ? void 0 : g.length) === 1) {
      const m = g[0];
      if ((m == null ? void 0 : m.type) === DE) {
        const v = m.children;
        return new RegExp("^\\p{Unified_Ideograph}{2}$", "u").test(v.trim());
      }
    }
    return !1;
  });
  return {
    _disabled: o,
    _size: r,
    _type: c,
    _ref: l,
    _props: h,
    shouldAddSpace: d,
    handleClick: (p) => {
      n.nativeType === "reset" && (s == null || s.resetFields()), e("click", p);
    }
  };
}, Yb = [
  "default",
  "primary",
  "success",
  "warning",
  "info",
  "danger",
  "text",
  ""
], X7 = ["button", "submit", "reset"], Ub = Ee({
  size: Ts,
  disabled: Boolean,
  type: {
    type: String,
    values: Yb,
    default: ""
  },
  icon: {
    type: kn
  },
  nativeType: {
    type: String,
    values: X7,
    default: "button"
  },
  loading: Boolean,
  loadingIcon: {
    type: kn,
    default: () => tc
  },
  plain: Boolean,
  text: Boolean,
  link: Boolean,
  bg: Boolean,
  autofocus: Boolean,
  round: Boolean,
  circle: Boolean,
  color: String,
  dark: Boolean,
  autoInsertSpace: {
    type: Boolean,
    default: void 0
  },
  tag: {
    type: ce([String, Object]),
    default: "button"
  }
}), Y7 = {
  click: (n) => n instanceof MouseEvent
};
function Ei(n, e) {
  U7(n) && (n = "100%");
  var t = G7(n);
  return n = e === 360 ? n : Math.min(e, Math.max(0, parseFloat(n))), t && (n = parseInt(String(n * e), 10) / 100), Math.abs(n - e) < 1e-6 ? 1 : (e === 360 ? n = (n < 0 ? n % e + e : n % e) / parseFloat(String(e)) : n = n % e / parseFloat(String(e)), n);
}
function Jf(n) {
  return Math.min(1, Math.max(0, n));
}
function U7(n) {
  return typeof n == "string" && n.indexOf(".") !== -1 && parseFloat(n) === 1;
}
function G7(n) {
  return typeof n == "string" && n.indexOf("%") !== -1;
}
function aT(n) {
  return n = parseFloat(n), (isNaN(n) || n < 0 || n > 1) && (n = 1), n;
}
function ep(n) {
  return n <= 1 ? "".concat(Number(n) * 100, "%") : n;
}
function va(n) {
  return n.length === 1 ? "0" + n : String(n);
}
function K7(n, e, t) {
  return {
    r: Ei(n, 255) * 255,
    g: Ei(e, 255) * 255,
    b: Ei(t, 255) * 255
  };
}
function sC(n, e, t) {
  n = Ei(n, 255), e = Ei(e, 255), t = Ei(t, 255);
  var i = Math.max(n, e, t), s = Math.min(n, e, t), r = 0, o = 0, l = (i + s) / 2;
  if (i === s)
    o = 0, r = 0;
  else {
    var a = i - s;
    switch (o = l > 0.5 ? a / (2 - i - s) : a / (i + s), i) {
      case n:
        r = (e - t) / a + (e < t ? 6 : 0);
        break;
      case e:
        r = (t - n) / a + 2;
        break;
      case t:
        r = (n - e) / a + 4;
        break;
    }
    r /= 6;
  }
  return { h: r, s: o, l };
}
function dv(n, e, t) {
  return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? n + (e - n) * (6 * t) : t < 1 / 2 ? e : t < 2 / 3 ? n + (e - n) * (2 / 3 - t) * 6 : n;
}
function J7(n, e, t) {
  var i, s, r;
  if (n = Ei(n, 360), e = Ei(e, 100), t = Ei(t, 100), e === 0)
    s = t, r = t, i = t;
  else {
    var o = t < 0.5 ? t * (1 + e) : t + e - t * e, l = 2 * t - o;
    i = dv(l, o, n + 1 / 3), s = dv(l, o, n), r = dv(l, o, n - 1 / 3);
  }
  return { r: i * 255, g: s * 255, b: r * 255 };
}
function rC(n, e, t) {
  n = Ei(n, 255), e = Ei(e, 255), t = Ei(t, 255);
  var i = Math.max(n, e, t), s = Math.min(n, e, t), r = 0, o = i, l = i - s, a = i === 0 ? 0 : l / i;
  if (i === s)
    r = 0;
  else {
    switch (i) {
      case n:
        r = (e - t) / l + (e < t ? 6 : 0);
        break;
      case e:
        r = (t - n) / l + 2;
        break;
      case t:
        r = (n - e) / l + 4;
        break;
    }
    r /= 6;
  }
  return { h: r, s: a, v: o };
}
function e9(n, e, t) {
  n = Ei(n, 360) * 6, e = Ei(e, 100), t = Ei(t, 100);
  var i = Math.floor(n), s = n - i, r = t * (1 - e), o = t * (1 - s * e), l = t * (1 - (1 - s) * e), a = i % 6, c = [t, o, r, r, l, t][a], u = [l, t, t, o, r, r][a], h = [r, r, l, t, t, o][a];
  return { r: c * 255, g: u * 255, b: h * 255 };
}
function oC(n, e, t, i) {
  var s = [
    va(Math.round(n).toString(16)),
    va(Math.round(e).toString(16)),
    va(Math.round(t).toString(16))
  ];
  return i && s[0].startsWith(s[0].charAt(1)) && s[1].startsWith(s[1].charAt(1)) && s[2].startsWith(s[2].charAt(1)) ? s[0].charAt(0) + s[1].charAt(0) + s[2].charAt(0) : s.join("");
}
function t9(n, e, t, i, s) {
  var r = [
    va(Math.round(n).toString(16)),
    va(Math.round(e).toString(16)),
    va(Math.round(t).toString(16)),
    va(n9(i))
  ];
  return s && r[0].startsWith(r[0].charAt(1)) && r[1].startsWith(r[1].charAt(1)) && r[2].startsWith(r[2].charAt(1)) && r[3].startsWith(r[3].charAt(1)) ? r[0].charAt(0) + r[1].charAt(0) + r[2].charAt(0) + r[3].charAt(0) : r.join("");
}
function n9(n) {
  return Math.round(parseFloat(n) * 255).toString(16);
}
function lC(n) {
  return gs(n) / 255;
}
function gs(n) {
  return parseInt(n, 16);
}
function i9(n) {
  return {
    r: n >> 16,
    g: (n & 65280) >> 8,
    b: n & 255
  };
}
var Gb = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function s9(n) {
  var e = { r: 0, g: 0, b: 0 }, t = 1, i = null, s = null, r = null, o = !1, l = !1;
  return typeof n == "string" && (n = l9(n)), typeof n == "object" && (Co(n.r) && Co(n.g) && Co(n.b) ? (e = K7(n.r, n.g, n.b), o = !0, l = String(n.r).substr(-1) === "%" ? "prgb" : "rgb") : Co(n.h) && Co(n.s) && Co(n.v) ? (i = ep(n.s), s = ep(n.v), e = e9(n.h, i, s), o = !0, l = "hsv") : Co(n.h) && Co(n.s) && Co(n.l) && (i = ep(n.s), r = ep(n.l), e = J7(n.h, i, r), o = !0, l = "hsl"), Object.prototype.hasOwnProperty.call(n, "a") && (t = n.a)), t = aT(t), {
    ok: o,
    format: n.format || l,
    r: Math.min(255, Math.max(e.r, 0)),
    g: Math.min(255, Math.max(e.g, 0)),
    b: Math.min(255, Math.max(e.b, 0)),
    a: t
  };
}
var r9 = "[-\\+]?\\d+%?", o9 = "[-\\+]?\\d*\\.\\d+%?", yl = "(?:".concat(o9, ")|(?:").concat(r9, ")"), fv = "[\\s|\\(]+(".concat(yl, ")[,|\\s]+(").concat(yl, ")[,|\\s]+(").concat(yl, ")\\s*\\)?"), pv = "[\\s|\\(]+(".concat(yl, ")[,|\\s]+(").concat(yl, ")[,|\\s]+(").concat(yl, ")[,|\\s]+(").concat(yl, ")\\s*\\)?"), or = {
  CSS_UNIT: new RegExp(yl),
  rgb: new RegExp("rgb" + fv),
  rgba: new RegExp("rgba" + pv),
  hsl: new RegExp("hsl" + fv),
  hsla: new RegExp("hsla" + pv),
  hsv: new RegExp("hsv" + fv),
  hsva: new RegExp("hsva" + pv),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function l9(n) {
  if (n = n.trim().toLowerCase(), n.length === 0)
    return !1;
  var e = !1;
  if (Gb[n])
    n = Gb[n], e = !0;
  else if (n === "transparent")
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  var t = or.rgb.exec(n);
  return t ? { r: t[1], g: t[2], b: t[3] } : (t = or.rgba.exec(n), t ? { r: t[1], g: t[2], b: t[3], a: t[4] } : (t = or.hsl.exec(n), t ? { h: t[1], s: t[2], l: t[3] } : (t = or.hsla.exec(n), t ? { h: t[1], s: t[2], l: t[3], a: t[4] } : (t = or.hsv.exec(n), t ? { h: t[1], s: t[2], v: t[3] } : (t = or.hsva.exec(n), t ? { h: t[1], s: t[2], v: t[3], a: t[4] } : (t = or.hex8.exec(n), t ? {
    r: gs(t[1]),
    g: gs(t[2]),
    b: gs(t[3]),
    a: lC(t[4]),
    format: e ? "name" : "hex8"
  } : (t = or.hex6.exec(n), t ? {
    r: gs(t[1]),
    g: gs(t[2]),
    b: gs(t[3]),
    format: e ? "name" : "hex"
  } : (t = or.hex4.exec(n), t ? {
    r: gs(t[1] + t[1]),
    g: gs(t[2] + t[2]),
    b: gs(t[3] + t[3]),
    a: lC(t[4] + t[4]),
    format: e ? "name" : "hex8"
  } : (t = or.hex3.exec(n), t ? {
    r: gs(t[1] + t[1]),
    g: gs(t[2] + t[2]),
    b: gs(t[3] + t[3]),
    format: e ? "name" : "hex"
  } : !1)))))))));
}
function Co(n) {
  return !!or.CSS_UNIT.exec(String(n));
}
var a9 = (
  /** @class */
  function() {
    function n(e, t) {
      e === void 0 && (e = ""), t === void 0 && (t = {});
      var i;
      if (e instanceof n)
        return e;
      typeof e == "number" && (e = i9(e)), this.originalInput = e;
      var s = s9(e);
      this.originalInput = e, this.r = s.r, this.g = s.g, this.b = s.b, this.a = s.a, this.roundA = Math.round(100 * this.a) / 100, this.format = (i = t.format) !== null && i !== void 0 ? i : s.format, this.gradientType = t.gradientType, this.r < 1 && (this.r = Math.round(this.r)), this.g < 1 && (this.g = Math.round(this.g)), this.b < 1 && (this.b = Math.round(this.b)), this.isValid = s.ok;
    }
    return n.prototype.isDark = function() {
      return this.getBrightness() < 128;
    }, n.prototype.isLight = function() {
      return !this.isDark();
    }, n.prototype.getBrightness = function() {
      var e = this.toRgb();
      return (e.r * 299 + e.g * 587 + e.b * 114) / 1e3;
    }, n.prototype.getLuminance = function() {
      var e = this.toRgb(), t, i, s, r = e.r / 255, o = e.g / 255, l = e.b / 255;
      return r <= 0.03928 ? t = r / 12.92 : t = Math.pow((r + 0.055) / 1.055, 2.4), o <= 0.03928 ? i = o / 12.92 : i = Math.pow((o + 0.055) / 1.055, 2.4), l <= 0.03928 ? s = l / 12.92 : s = Math.pow((l + 0.055) / 1.055, 2.4), 0.2126 * t + 0.7152 * i + 0.0722 * s;
    }, n.prototype.getAlpha = function() {
      return this.a;
    }, n.prototype.setAlpha = function(e) {
      return this.a = aT(e), this.roundA = Math.round(100 * this.a) / 100, this;
    }, n.prototype.isMonochrome = function() {
      var e = this.toHsl().s;
      return e === 0;
    }, n.prototype.toHsv = function() {
      var e = rC(this.r, this.g, this.b);
      return { h: e.h * 360, s: e.s, v: e.v, a: this.a };
    }, n.prototype.toHsvString = function() {
      var e = rC(this.r, this.g, this.b), t = Math.round(e.h * 360), i = Math.round(e.s * 100), s = Math.round(e.v * 100);
      return this.a === 1 ? "hsv(".concat(t, ", ").concat(i, "%, ").concat(s, "%)") : "hsva(".concat(t, ", ").concat(i, "%, ").concat(s, "%, ").concat(this.roundA, ")");
    }, n.prototype.toHsl = function() {
      var e = sC(this.r, this.g, this.b);
      return { h: e.h * 360, s: e.s, l: e.l, a: this.a };
    }, n.prototype.toHslString = function() {
      var e = sC(this.r, this.g, this.b), t = Math.round(e.h * 360), i = Math.round(e.s * 100), s = Math.round(e.l * 100);
      return this.a === 1 ? "hsl(".concat(t, ", ").concat(i, "%, ").concat(s, "%)") : "hsla(".concat(t, ", ").concat(i, "%, ").concat(s, "%, ").concat(this.roundA, ")");
    }, n.prototype.toHex = function(e) {
      return e === void 0 && (e = !1), oC(this.r, this.g, this.b, e);
    }, n.prototype.toHexString = function(e) {
      return e === void 0 && (e = !1), "#" + this.toHex(e);
    }, n.prototype.toHex8 = function(e) {
      return e === void 0 && (e = !1), t9(this.r, this.g, this.b, this.a, e);
    }, n.prototype.toHex8String = function(e) {
      return e === void 0 && (e = !1), "#" + this.toHex8(e);
    }, n.prototype.toHexShortString = function(e) {
      return e === void 0 && (e = !1), this.a === 1 ? this.toHexString(e) : this.toHex8String(e);
    }, n.prototype.toRgb = function() {
      return {
        r: Math.round(this.r),
        g: Math.round(this.g),
        b: Math.round(this.b),
        a: this.a
      };
    }, n.prototype.toRgbString = function() {
      var e = Math.round(this.r), t = Math.round(this.g), i = Math.round(this.b);
      return this.a === 1 ? "rgb(".concat(e, ", ").concat(t, ", ").concat(i, ")") : "rgba(".concat(e, ", ").concat(t, ", ").concat(i, ", ").concat(this.roundA, ")");
    }, n.prototype.toPercentageRgb = function() {
      var e = function(t) {
        return "".concat(Math.round(Ei(t, 255) * 100), "%");
      };
      return {
        r: e(this.r),
        g: e(this.g),
        b: e(this.b),
        a: this.a
      };
    }, n.prototype.toPercentageRgbString = function() {
      var e = function(t) {
        return Math.round(Ei(t, 255) * 100);
      };
      return this.a === 1 ? "rgb(".concat(e(this.r), "%, ").concat(e(this.g), "%, ").concat(e(this.b), "%)") : "rgba(".concat(e(this.r), "%, ").concat(e(this.g), "%, ").concat(e(this.b), "%, ").concat(this.roundA, ")");
    }, n.prototype.toName = function() {
      if (this.a === 0)
        return "transparent";
      if (this.a < 1)
        return !1;
      for (var e = "#" + oC(this.r, this.g, this.b, !1), t = 0, i = Object.entries(Gb); t < i.length; t++) {
        var s = i[t], r = s[0], o = s[1];
        if (e === o)
          return r;
      }
      return !1;
    }, n.prototype.toString = function(e) {
      var t = !!e;
      e = e ?? this.format;
      var i = !1, s = this.a < 1 && this.a >= 0, r = !t && s && (e.startsWith("hex") || e === "name");
      return r ? e === "name" && this.a === 0 ? this.toName() : this.toRgbString() : (e === "rgb" && (i = this.toRgbString()), e === "prgb" && (i = this.toPercentageRgbString()), (e === "hex" || e === "hex6") && (i = this.toHexString()), e === "hex3" && (i = this.toHexString(!0)), e === "hex4" && (i = this.toHex8String(!0)), e === "hex8" && (i = this.toHex8String()), e === "name" && (i = this.toName()), e === "hsl" && (i = this.toHslString()), e === "hsv" && (i = this.toHsvString()), i || this.toHexString());
    }, n.prototype.toNumber = function() {
      return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
    }, n.prototype.clone = function() {
      return new n(this.toString());
    }, n.prototype.lighten = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.l += e / 100, t.l = Jf(t.l), new n(t);
    }, n.prototype.brighten = function(e) {
      e === void 0 && (e = 10);
      var t = this.toRgb();
      return t.r = Math.max(0, Math.min(255, t.r - Math.round(255 * -(e / 100)))), t.g = Math.max(0, Math.min(255, t.g - Math.round(255 * -(e / 100)))), t.b = Math.max(0, Math.min(255, t.b - Math.round(255 * -(e / 100)))), new n(t);
    }, n.prototype.darken = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.l -= e / 100, t.l = Jf(t.l), new n(t);
    }, n.prototype.tint = function(e) {
      return e === void 0 && (e = 10), this.mix("white", e);
    }, n.prototype.shade = function(e) {
      return e === void 0 && (e = 10), this.mix("black", e);
    }, n.prototype.desaturate = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.s -= e / 100, t.s = Jf(t.s), new n(t);
    }, n.prototype.saturate = function(e) {
      e === void 0 && (e = 10);
      var t = this.toHsl();
      return t.s += e / 100, t.s = Jf(t.s), new n(t);
    }, n.prototype.greyscale = function() {
      return this.desaturate(100);
    }, n.prototype.spin = function(e) {
      var t = this.toHsl(), i = (t.h + e) % 360;
      return t.h = i < 0 ? 360 + i : i, new n(t);
    }, n.prototype.mix = function(e, t) {
      t === void 0 && (t = 50);
      var i = this.toRgb(), s = new n(e).toRgb(), r = t / 100, o = {
        r: (s.r - i.r) * r + i.r,
        g: (s.g - i.g) * r + i.g,
        b: (s.b - i.b) * r + i.b,
        a: (s.a - i.a) * r + i.a
      };
      return new n(o);
    }, n.prototype.analogous = function(e, t) {
      e === void 0 && (e = 6), t === void 0 && (t = 30);
      var i = this.toHsl(), s = 360 / t, r = [this];
      for (i.h = (i.h - (s * e >> 1) + 720) % 360; --e; )
        i.h = (i.h + s) % 360, r.push(new n(i));
      return r;
    }, n.prototype.complement = function() {
      var e = this.toHsl();
      return e.h = (e.h + 180) % 360, new n(e);
    }, n.prototype.monochromatic = function(e) {
      e === void 0 && (e = 6);
      for (var t = this.toHsv(), i = t.h, s = t.s, r = t.v, o = [], l = 1 / e; e--; )
        o.push(new n({ h: i, s, v: r })), r = (r + l) % 1;
      return o;
    }, n.prototype.splitcomplement = function() {
      var e = this.toHsl(), t = e.h;
      return [
        this,
        new n({ h: (t + 72) % 360, s: e.s, l: e.l }),
        new n({ h: (t + 216) % 360, s: e.s, l: e.l })
      ];
    }, n.prototype.onBackground = function(e) {
      var t = this.toRgb(), i = new n(e).toRgb(), s = t.a + i.a * (1 - t.a);
      return new n({
        r: (t.r * t.a + i.r * i.a * (1 - t.a)) / s,
        g: (t.g * t.a + i.g * i.a * (1 - t.a)) / s,
        b: (t.b * t.a + i.b * i.a * (1 - t.a)) / s,
        a: s
      });
    }, n.prototype.triad = function() {
      return this.polyad(3);
    }, n.prototype.tetrad = function() {
      return this.polyad(4);
    }, n.prototype.polyad = function(e) {
      for (var t = this.toHsl(), i = t.h, s = [this], r = 360 / e, o = 1; o < e; o++)
        s.push(new n({ h: (i + o * r) % 360, s: t.s, l: t.l }));
      return s;
    }, n.prototype.equals = function(e) {
      return this.toRgbString() === new n(e).toRgbString();
    }, n;
  }()
);
function nl(n, e = 20) {
  return n.mix("#141414", e).toString();
}
function c9(n) {
  const e = er(), t = me("button");
  return $(() => {
    let i = {};
    const s = n.color;
    if (s) {
      const r = new a9(s), o = n.dark ? r.tint(20).toString() : nl(r, 20);
      if (n.plain)
        i = t.cssVarBlock({
          "bg-color": n.dark ? nl(r, 90) : r.tint(90).toString(),
          "text-color": s,
          "border-color": n.dark ? nl(r, 50) : r.tint(50).toString(),
          "hover-text-color": `var(${t.cssVarName("color-white")})`,
          "hover-bg-color": s,
          "hover-border-color": s,
          "active-bg-color": o,
          "active-text-color": `var(${t.cssVarName("color-white")})`,
          "active-border-color": o
        }), e.value && (i[t.cssVarBlockName("disabled-bg-color")] = n.dark ? nl(r, 90) : r.tint(90).toString(), i[t.cssVarBlockName("disabled-text-color")] = n.dark ? nl(r, 50) : r.tint(50).toString(), i[t.cssVarBlockName("disabled-border-color")] = n.dark ? nl(r, 80) : r.tint(80).toString());
      else {
        const l = n.dark ? nl(r, 30) : r.tint(30).toString(), a = r.isDark() ? `var(${t.cssVarName("color-white")})` : `var(${t.cssVarName("color-black")})`;
        if (i = t.cssVarBlock({
          "bg-color": s,
          "text-color": a,
          "border-color": s,
          "hover-bg-color": l,
          "hover-text-color": a,
          "hover-border-color": l,
          "active-bg-color": o,
          "active-border-color": o
        }), e.value) {
          const c = n.dark ? nl(r, 50) : r.tint(50).toString();
          i[t.cssVarBlockName("disabled-bg-color")] = c, i[t.cssVarBlockName("disabled-text-color")] = n.dark ? "rgba(255, 255, 255, 0.5)" : `var(${t.cssVarName("color-white")})`, i[t.cssVarBlockName("disabled-border-color")] = c;
        }
      }
    }
    return i;
  });
}
const u9 = F({
  name: "ElButton"
}), h9 = /* @__PURE__ */ F({
  ...u9,
  props: Ub,
  emits: Y7,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = c9(i), r = me("button"), { _ref: o, _size: l, _type: a, _disabled: c, _props: u, shouldAddSpace: h, handleClick: d } = H7(i, t);
    return e({
      ref: o,
      size: l,
      type: a,
      disabled: c,
      shouldAddSpace: h
    }), (f, p) => (R(), ie(yt(f.tag), ki({
      ref_key: "_ref",
      ref: o
    }, y(u), {
      class: [
        y(r).b(),
        y(r).m(y(a)),
        y(r).m(y(l)),
        y(r).is("disabled", y(c)),
        y(r).is("loading", f.loading),
        y(r).is("plain", f.plain),
        y(r).is("round", f.round),
        y(r).is("circle", f.circle),
        y(r).is("text", f.text),
        y(r).is("link", f.link),
        y(r).is("has-bg", f.bg)
      ],
      style: y(s),
      onClick: y(d)
    }), {
      default: Y(() => [
        f.loading ? (R(), V(Tt, { key: 0 }, [
          f.$slots.loading ? de(f.$slots, "loading", { key: 0 }) : (R(), ie(y(Fe), {
            key: 1,
            class: L(y(r).is("loading"))
          }, {
            default: Y(() => [
              (R(), ie(yt(f.loadingIcon)))
            ]),
            _: 1
          }, 8, ["class"]))
        ], 64)) : f.icon || f.$slots.icon ? (R(), ie(y(Fe), { key: 1 }, {
          default: Y(() => [
            f.icon ? (R(), ie(yt(f.icon), { key: 0 })) : de(f.$slots, "icon", { key: 1 })
          ]),
          _: 3
        })) : G("v-if", !0),
        f.$slots.default ? (R(), V("span", {
          key: 2,
          class: L({ [y(r).em("text", "expand")]: y(h) })
        }, [
          de(f.$slots, "default")
        ], 2)) : G("v-if", !0)
      ]),
      _: 3
    }, 16, ["class", "style", "onClick"]));
  }
});
var d9 = /* @__PURE__ */ Ce(h9, [["__file", "button.vue"]]);
const f9 = {
  size: Ub.size,
  type: Ub.type
}, p9 = F({
  name: "ElButtonGroup"
}), g9 = /* @__PURE__ */ F({
  ...p9,
  props: f9,
  setup(n) {
    const e = n;
    ft(lT, Gt({
      size: ks(e, "size"),
      type: ks(e, "type")
    }));
    const t = me("button");
    return (i, s) => (R(), V("div", {
      class: L(`${y(t).b("group")}`)
    }, [
      de(i.$slots, "default")
    ], 2));
  }
});
var cT = /* @__PURE__ */ Ce(g9, [["__file", "button-group.vue"]]);
const Qa = Ft(d9, {
  ButtonGroup: cT
});
Er(cT);
var m9 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function xf(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function v9(n) {
  if (n.__esModule)
    return n;
  var e = n.default;
  if (typeof e == "function") {
    var t = function i() {
      return this instanceof i ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(i) {
    var s = Object.getOwnPropertyDescriptor(n, i);
    Object.defineProperty(t, i, s.get ? s : {
      enumerable: !0,
      get: function() {
        return n[i];
      }
    });
  }), t;
}
const sl = /* @__PURE__ */ new Map();
let aC;
vt && (document.addEventListener("mousedown", (n) => aC = n), document.addEventListener("mouseup", (n) => {
  for (const e of sl.values())
    for (const { documentHandler: t } of e)
      t(n, aC);
}));
function cC(n, e) {
  let t = [];
  return Array.isArray(e.arg) ? t = e.arg : yr(e.arg) && t.push(e.arg), function(i, s) {
    const r = e.instance.popperRef, o = i.target, l = s == null ? void 0 : s.target, a = !e || !e.instance, c = !o || !l, u = n.contains(o) || n.contains(l), h = n === o, d = t.length && t.some((p) => p == null ? void 0 : p.contains(o)) || t.length && t.includes(l), f = r && (r.contains(o) || r.contains(l));
    a || c || u || h || d || f || e.value(i, s);
  };
}
const Sf = {
  beforeMount(n, e) {
    sl.has(n) || sl.set(n, []), sl.get(n).push({
      documentHandler: cC(n, e),
      bindingFn: e.value
    });
  },
  updated(n, e) {
    sl.has(n) || sl.set(n, []);
    const t = sl.get(n), i = t.findIndex((r) => r.bindingFn === e.oldValue), s = {
      documentHandler: cC(n, e),
      bindingFn: e.value
    };
    i >= 0 ? t.splice(i, 1, s) : t.push(s);
  },
  unmounted(n) {
    sl.delete(n);
  }
}, b9 = 100, y9 = 600, uC = {
  beforeMount(n, e) {
    const t = e.value, { interval: i = b9, delay: s = y9 } = wt(t) ? {} : t;
    let r, o;
    const l = () => wt(t) ? t() : t.handler(), a = () => {
      o && (clearTimeout(o), o = void 0), r && (clearInterval(r), r = void 0);
    };
    n.addEventListener("mousedown", (c) => {
      c.button === 0 && (a(), l(), document.addEventListener("mouseup", () => a(), {
        once: !0
      }), o = setTimeout(() => {
        r = setInterval(() => {
          l();
        }, i);
      }, s));
    });
  }
}, Kb = "_trap-focus-children", ba = [], hC = (n) => {
  var e;
  if (ba.length === 0)
    return;
  const t = ba[ba.length - 1][Kb];
  if (t.length > 0 && n.code === dt.tab) {
    if (t.length === 1) {
      n.preventDefault(), document.activeElement !== t[0] && t[0].focus();
      return;
    }
    const i = n.shiftKey, s = n.target === t[0], r = n.target === t[t.length - 1];
    if (s && i && (n.preventDefault(), t[t.length - 1].focus()), r && !i && (n.preventDefault(), t[0].focus()), process.env.NODE_ENV === "test") {
      const o = t.indexOf(n.target);
      o !== -1 && ((e = t[i ? o - 1 : o + 1]) == null || e.focus());
    }
  }
}, O9 = {
  beforeMount(n) {
    n[Kb] = gS(n), ba.push(n), ba.length <= 1 && document.addEventListener("keydown", hC);
  },
  updated(n) {
    $e(() => {
      n[Kb] = gS(n);
    });
  },
  unmounted() {
    ba.shift(), ba.length === 0 && document.removeEventListener("keydown", hC);
  }
};
var dC = !1, ua, Jb, ey, Yp, Up, uT, Gp, ty, ny, iy, hT, sy, ry, dT, fT;
function Ui() {
  if (!dC) {
    dC = !0;
    var n = navigator.userAgent, e = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(n), t = /(Mac OS X)|(Windows)|(Linux)/.exec(n);
    if (sy = /\b(iPhone|iP[ao]d)/.exec(n), ry = /\b(iP[ao]d)/.exec(n), iy = /Android/i.exec(n), dT = /FBAN\/\w+;/i.exec(n), fT = /Mobile/i.exec(n), hT = !!/Win64/.exec(n), e) {
      ua = e[1] ? parseFloat(e[1]) : e[5] ? parseFloat(e[5]) : NaN, ua && document && document.documentMode && (ua = document.documentMode);
      var i = /(?:Trident\/(\d+.\d+))/.exec(n);
      uT = i ? parseFloat(i[1]) + 4 : ua, Jb = e[2] ? parseFloat(e[2]) : NaN, ey = e[3] ? parseFloat(e[3]) : NaN, Yp = e[4] ? parseFloat(e[4]) : NaN, Yp ? (e = /(?:Chrome\/(\d+\.\d+))/.exec(n), Up = e && e[1] ? parseFloat(e[1]) : NaN) : Up = NaN;
    } else
      ua = Jb = ey = Up = Yp = NaN;
    if (t) {
      if (t[1]) {
        var s = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(n);
        Gp = s ? parseFloat(s[1].replace("_", ".")) : !0;
      } else
        Gp = !1;
      ty = !!t[2], ny = !!t[3];
    } else
      Gp = ty = ny = !1;
  }
}
var oy = { ie: function() {
  return Ui() || ua;
}, ieCompatibilityMode: function() {
  return Ui() || uT > ua;
}, ie64: function() {
  return oy.ie() && hT;
}, firefox: function() {
  return Ui() || Jb;
}, opera: function() {
  return Ui() || ey;
}, webkit: function() {
  return Ui() || Yp;
}, safari: function() {
  return oy.webkit();
}, chrome: function() {
  return Ui() || Up;
}, windows: function() {
  return Ui() || ty;
}, osx: function() {
  return Ui() || Gp;
}, linux: function() {
  return Ui() || ny;
}, iphone: function() {
  return Ui() || sy;
}, mobile: function() {
  return Ui() || sy || ry || iy || fT;
}, nativeApp: function() {
  return Ui() || dT;
}, android: function() {
  return Ui() || iy;
}, ipad: function() {
  return Ui() || ry;
} }, w9 = oy, tp = !!(typeof window < "u" && window.document && window.document.createElement), x9 = { canUseDOM: tp, canUseWorkers: typeof Worker < "u", canUseEventListeners: tp && !!(window.addEventListener || window.attachEvent), canUseViewport: tp && !!window.screen, isInWorker: !tp }, pT = x9, gT;
pT.canUseDOM && (gT = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature("", "") !== !0);
function S9(n, e) {
  if (!pT.canUseDOM || e && !("addEventListener" in document))
    return !1;
  var t = "on" + n, i = t in document;
  if (!i) {
    var s = document.createElement("div");
    s.setAttribute(t, "return;"), i = typeof s[t] == "function";
  }
  return !i && gT && n === "wheel" && (i = document.implementation.hasFeature("Events.wheel", "3.0")), i;
}
var C9 = S9, fC = 10, pC = 40, gC = 800;
function mT(n) {
  var e = 0, t = 0, i = 0, s = 0;
  return "detail" in n && (t = n.detail), "wheelDelta" in n && (t = -n.wheelDelta / 120), "wheelDeltaY" in n && (t = -n.wheelDeltaY / 120), "wheelDeltaX" in n && (e = -n.wheelDeltaX / 120), "axis" in n && n.axis === n.HORIZONTAL_AXIS && (e = t, t = 0), i = e * fC, s = t * fC, "deltaY" in n && (s = n.deltaY), "deltaX" in n && (i = n.deltaX), (i || s) && n.deltaMode && (n.deltaMode == 1 ? (i *= pC, s *= pC) : (i *= gC, s *= gC)), i && !e && (e = i < 1 ? -1 : 1), s && !t && (t = s < 1 ? -1 : 1), { spinX: e, spinY: t, pixelX: i, pixelY: s };
}
mT.getEventType = function() {
  return w9.firefox() ? "DOMMouseScroll" : C9("wheel") ? "wheel" : "mousewheel";
};
var k9 = mT;
/**
* Checks if an event is supported in the current execution environment.
*
* NOTE: This will not work correctly for non-generic events such as `change`,
* `reset`, `load`, `error`, and `select`.
*
* Borrows from Modernizr.
*
* @param {string} eventNameSuffix Event name, e.g. "click".
* @param {?boolean} capture Check if the capture phase is supported.
* @return {boolean} True if the event is supported.
* @internal
* @license Modernizr 3.0.0pre (Custom Build) | MIT
*/
const P9 = function(n, e) {
  if (n && n.addEventListener) {
    const t = function(i) {
      const s = k9(i);
      e && Reflect.apply(e, this, [i, s]);
    };
    n.addEventListener("wheel", t, { passive: !0 });
  }
}, E9 = {
  beforeMount(n, e) {
    P9(n, e.value);
  }
}, vT = {
  modelValue: {
    type: [Number, String, Boolean],
    default: void 0
  },
  label: {
    type: [String, Boolean, Number, Object],
    default: void 0
  },
  indeterminate: Boolean,
  disabled: Boolean,
  checked: Boolean,
  name: {
    type: String,
    default: void 0
  },
  trueLabel: {
    type: [String, Number],
    default: void 0
  },
  falseLabel: {
    type: [String, Number],
    default: void 0
  },
  id: {
    type: String,
    default: void 0
  },
  controls: {
    type: String,
    default: void 0
  },
  border: Boolean,
  size: Ts,
  tabindex: [String, Number],
  validateEvent: {
    type: Boolean,
    default: !0
  }
}, bT = {
  [ot]: (n) => bt(n) || tt(n) || Pi(n),
  change: (n) => bt(n) || tt(n) || Pi(n)
}, th = Symbol("checkboxGroupContextKey"), A9 = ({
  model: n,
  isChecked: e
}) => {
  const t = ke(th, void 0), i = $(() => {
    var r, o;
    const l = (r = t == null ? void 0 : t.max) == null ? void 0 : r.value, a = (o = t == null ? void 0 : t.min) == null ? void 0 : o.value;
    return !Si(l) && n.value.length >= l && !e.value || !Si(a) && n.value.length <= a && e.value;
  });
  return {
    isDisabled: er($(() => (t == null ? void 0 : t.disabled.value) || i.value)),
    isLimitDisabled: i
  };
}, $9 = (n, {
  model: e,
  isLimitExceeded: t,
  hasOwnLabel: i,
  isDisabled: s,
  isLabeledByFormItem: r
}) => {
  const o = ke(th, void 0), { formItem: l } = _s(), { emit: a } = Xe();
  function c(p) {
    var g, m;
    return p === n.trueLabel || p === !0 ? (g = n.trueLabel) != null ? g : !0 : (m = n.falseLabel) != null ? m : !1;
  }
  function u(p, g) {
    a("change", c(p), g);
  }
  function h(p) {
    if (t.value)
      return;
    const g = p.target;
    a("change", c(g.checked), p);
  }
  async function d(p) {
    t.value || !i.value && !s.value && r.value && (p.composedPath().some((v) => v.tagName === "LABEL") || (e.value = c([!1, n.falseLabel].includes(e.value)), await $e(), u(e.value, p)));
  }
  const f = $(() => (o == null ? void 0 : o.validateEvent) || n.validateEvent);
  return ne(() => n.modelValue, () => {
    f.value && (l == null || l.validate("change").catch((p) => pt(p)));
  }), {
    handleChange: h,
    onClickRoot: d
  };
}, T9 = (n) => {
  const e = D(!1), { emit: t } = Xe(), i = ke(th, void 0), s = $(() => Si(i) === !1), r = D(!1), o = $({
    get() {
      var l, a;
      return s.value ? (l = i == null ? void 0 : i.modelValue) == null ? void 0 : l.value : (a = n.modelValue) != null ? a : e.value;
    },
    set(l) {
      var a, c;
      s.value && xt(l) ? (r.value = ((a = i == null ? void 0 : i.max) == null ? void 0 : a.value) !== void 0 && l.length > (i == null ? void 0 : i.max.value) && l.length > o.value.length, r.value === !1 && ((c = i == null ? void 0 : i.changeEvent) == null || c.call(i, l))) : (t(ot, l), e.value = l);
    }
  });
  return {
    model: o,
    isGroup: s,
    isLimitExceeded: r
  };
}, _9 = (n, e, { model: t }) => {
  const i = ke(th, void 0), s = D(!1), r = $(() => {
    const c = t.value;
    return Pi(c) ? c : xt(c) ? ln(n.label) ? c.map(vd).some((u) => cn(u, n.label)) : c.map(vd).includes(n.label) : c != null ? c === n.trueLabel : !!c;
  }), o = Xi($(() => {
    var c;
    return (c = i == null ? void 0 : i.size) == null ? void 0 : c.value;
  }), {
    prop: !0
  }), l = Xi($(() => {
    var c;
    return (c = i == null ? void 0 : i.size) == null ? void 0 : c.value;
  })), a = $(() => !!e.default || !Ri(n.label));
  return {
    checkboxButtonSize: o,
    isChecked: r,
    isFocused: s,
    checkboxSize: l,
    hasOwnLabel: a
  };
}, M9 = (n, { model: e }) => {
  function t() {
    xt(e.value) && !e.value.includes(n.label) ? e.value.push(n.label) : e.value = n.trueLabel || !0;
  }
  n.checked && t();
}, yT = (n, e) => {
  const { formItem: t } = _s(), { model: i, isGroup: s, isLimitExceeded: r } = T9(n), {
    isFocused: o,
    isChecked: l,
    checkboxButtonSize: a,
    checkboxSize: c,
    hasOwnLabel: u
  } = _9(n, e, { model: i }), { isDisabled: h } = A9({ model: i, isChecked: l }), { inputId: d, isLabeledByFormItem: f } = Hl(n, {
    formItemContext: t,
    disableIdGeneration: u,
    disableIdManagement: s
  }), { handleChange: p, onClickRoot: g } = $9(n, {
    model: i,
    isLimitExceeded: r,
    hasOwnLabel: u,
    isDisabled: h,
    isLabeledByFormItem: f
  });
  return M9(n, { model: i }), {
    inputId: d,
    isLabeledByFormItem: f,
    isChecked: l,
    isDisabled: h,
    isFocused: o,
    checkboxButtonSize: a,
    checkboxSize: c,
    hasOwnLabel: u,
    model: i,
    handleChange: p,
    onClickRoot: g
  };
}, R9 = ["id", "indeterminate", "name", "tabindex", "disabled", "true-value", "false-value"], N9 = ["id", "indeterminate", "disabled", "value", "name", "tabindex"], D9 = F({
  name: "ElCheckbox"
}), L9 = /* @__PURE__ */ F({
  ...D9,
  props: vT,
  emits: bT,
  setup(n) {
    const e = n, t = go(), {
      inputId: i,
      isLabeledByFormItem: s,
      isChecked: r,
      isDisabled: o,
      isFocused: l,
      checkboxSize: a,
      hasOwnLabel: c,
      model: u,
      handleChange: h,
      onClickRoot: d
    } = yT(e, t), f = me("checkbox"), p = $(() => [
      f.b(),
      f.m(a.value),
      f.is("disabled", o.value),
      f.is("bordered", e.border),
      f.is("checked", r.value)
    ]), g = $(() => [
      f.e("input"),
      f.is("disabled", o.value),
      f.is("checked", r.value),
      f.is("indeterminate", e.indeterminate),
      f.is("focus", l.value)
    ]);
    return (m, v) => (R(), ie(yt(!y(c) && y(s) ? "span" : "label"), {
      class: L(y(p)),
      "aria-controls": m.indeterminate ? m.controls : null,
      onClick: y(d)
    }, {
      default: Y(() => [
        Z("span", {
          class: L(y(g))
        }, [
          m.trueLabel || m.falseLabel ? it((R(), V("input", {
            key: 0,
            id: y(i),
            "onUpdate:modelValue": v[0] || (v[0] = (O) => Fi(u) ? u.value = O : null),
            class: L(y(f).e("original")),
            type: "checkbox",
            indeterminate: m.indeterminate,
            name: m.name,
            tabindex: m.tabindex,
            disabled: y(o),
            "true-value": m.trueLabel,
            "false-value": m.falseLabel,
            onChange: v[1] || (v[1] = (...O) => y(h) && y(h)(...O)),
            onFocus: v[2] || (v[2] = (O) => l.value = !0),
            onBlur: v[3] || (v[3] = (O) => l.value = !1),
            onClick: v[4] || (v[4] = Le(() => {
            }, ["stop"]))
          }, null, 42, R9)), [
            [Tg, y(u)]
          ]) : it((R(), V("input", {
            key: 1,
            id: y(i),
            "onUpdate:modelValue": v[5] || (v[5] = (O) => Fi(u) ? u.value = O : null),
            class: L(y(f).e("original")),
            type: "checkbox",
            indeterminate: m.indeterminate,
            disabled: y(o),
            value: m.label,
            name: m.name,
            tabindex: m.tabindex,
            onChange: v[6] || (v[6] = (...O) => y(h) && y(h)(...O)),
            onFocus: v[7] || (v[7] = (O) => l.value = !0),
            onBlur: v[8] || (v[8] = (O) => l.value = !1),
            onClick: v[9] || (v[9] = Le(() => {
            }, ["stop"]))
          }, null, 42, N9)), [
            [Tg, y(u)]
          ]),
          Z("span", {
            class: L(y(f).e("inner"))
          }, null, 2)
        ], 2),
        y(c) ? (R(), V("span", {
          key: 0,
          class: L(y(f).e("label"))
        }, [
          de(m.$slots, "default"),
          m.$slots.default ? G("v-if", !0) : (R(), V(Tt, { key: 0 }, [
            Xn(xe(m.label), 1)
          ], 64))
        ], 2)) : G("v-if", !0)
      ]),
      _: 3
    }, 8, ["class", "aria-controls", "onClick"]));
  }
});
var I9 = /* @__PURE__ */ Ce(L9, [["__file", "checkbox.vue"]]);
const B9 = ["name", "tabindex", "disabled", "true-value", "false-value"], Q9 = ["name", "tabindex", "disabled", "value"], z9 = F({
  name: "ElCheckboxButton"
}), j9 = /* @__PURE__ */ F({
  ...z9,
  props: vT,
  emits: bT,
  setup(n) {
    const e = n, t = go(), {
      isFocused: i,
      isChecked: s,
      isDisabled: r,
      checkboxButtonSize: o,
      model: l,
      handleChange: a
    } = yT(e, t), c = ke(th, void 0), u = me("checkbox"), h = $(() => {
      var f, p, g, m;
      const v = (p = (f = c == null ? void 0 : c.fill) == null ? void 0 : f.value) != null ? p : "";
      return {
        backgroundColor: v,
        borderColor: v,
        color: (m = (g = c == null ? void 0 : c.textColor) == null ? void 0 : g.value) != null ? m : "",
        boxShadow: v ? `-1px 0 0 0 ${v}` : void 0
      };
    }), d = $(() => [
      u.b("button"),
      u.bm("button", o.value),
      u.is("disabled", r.value),
      u.is("checked", s.value),
      u.is("focus", i.value)
    ]);
    return (f, p) => (R(), V("label", {
      class: L(y(d))
    }, [
      f.trueLabel || f.falseLabel ? it((R(), V("input", {
        key: 0,
        "onUpdate:modelValue": p[0] || (p[0] = (g) => Fi(l) ? l.value = g : null),
        class: L(y(u).be("button", "original")),
        type: "checkbox",
        name: f.name,
        tabindex: f.tabindex,
        disabled: y(r),
        "true-value": f.trueLabel,
        "false-value": f.falseLabel,
        onChange: p[1] || (p[1] = (...g) => y(a) && y(a)(...g)),
        onFocus: p[2] || (p[2] = (g) => i.value = !0),
        onBlur: p[3] || (p[3] = (g) => i.value = !1),
        onClick: p[4] || (p[4] = Le(() => {
        }, ["stop"]))
      }, null, 42, B9)), [
        [Tg, y(l)]
      ]) : it((R(), V("input", {
        key: 1,
        "onUpdate:modelValue": p[5] || (p[5] = (g) => Fi(l) ? l.value = g : null),
        class: L(y(u).be("button", "original")),
        type: "checkbox",
        name: f.name,
        tabindex: f.tabindex,
        disabled: y(r),
        value: f.label,
        onChange: p[6] || (p[6] = (...g) => y(a) && y(a)(...g)),
        onFocus: p[7] || (p[7] = (g) => i.value = !0),
        onBlur: p[8] || (p[8] = (g) => i.value = !1),
        onClick: p[9] || (p[9] = Le(() => {
        }, ["stop"]))
      }, null, 42, Q9)), [
        [Tg, y(l)]
      ]),
      f.$slots.default || f.label ? (R(), V("span", {
        key: 2,
        class: L(y(u).be("button", "inner")),
        style: Qe(y(s) ? y(h) : void 0)
      }, [
        de(f.$slots, "default", {}, () => [
          Xn(xe(f.label), 1)
        ])
      ], 6)) : G("v-if", !0)
    ], 2));
  }
});
var OT = /* @__PURE__ */ Ce(j9, [["__file", "checkbox-button.vue"]]);
const V9 = Ee({
  modelValue: {
    type: ce(Array),
    default: () => []
  },
  disabled: Boolean,
  min: Number,
  max: Number,
  size: Ts,
  label: String,
  fill: String,
  textColor: String,
  tag: {
    type: String,
    default: "div"
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), F9 = {
  [ot]: (n) => xt(n),
  change: (n) => xt(n)
}, Z9 = F({
  name: "ElCheckboxGroup"
}), q9 = /* @__PURE__ */ F({
  ...Z9,
  props: V9,
  emits: F9,
  setup(n, { emit: e }) {
    const t = n, i = me("checkbox"), { formItem: s } = _s(), { inputId: r, isLabeledByFormItem: o } = Hl(t, {
      formItemContext: s
    }), l = async (c) => {
      e(ot, c), await $e(), e("change", c);
    }, a = $({
      get() {
        return t.modelValue;
      },
      set(c) {
        l(c);
      }
    });
    return ft(th, {
      ...Lb(Ws(t), [
        "size",
        "min",
        "max",
        "disabled",
        "validateEvent",
        "fill",
        "textColor"
      ]),
      modelValue: a,
      changeEvent: l
    }), ne(() => t.modelValue, () => {
      t.validateEvent && (s == null || s.validate("change").catch((c) => pt(c)));
    }), (c, u) => {
      var h;
      return R(), ie(yt(c.tag), {
        id: y(r),
        class: L(y(i).b("group")),
        role: "group",
        "aria-label": y(o) ? void 0 : c.label || "checkbox-group",
        "aria-labelledby": y(o) ? (h = y(s)) == null ? void 0 : h.labelId : void 0
      }, {
        default: Y(() => [
          de(c.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "class", "aria-label", "aria-labelledby"]);
    };
  }
});
var wT = /* @__PURE__ */ Ce(q9, [["__file", "checkbox-group.vue"]]);
const uo = Ft(I9, {
  CheckboxButton: OT,
  CheckboxGroup: wT
});
Er(OT);
const W9 = Er(wT), xT = Ee({
  size: Ts,
  disabled: Boolean,
  label: {
    type: [String, Number, Boolean],
    default: ""
  }
}), H9 = Ee({
  ...xT,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  border: Boolean
}), ST = {
  [ot]: (n) => bt(n) || tt(n) || Pi(n),
  [Un]: (n) => bt(n) || tt(n) || Pi(n)
}, CT = Symbol("radioGroupKey"), kT = (n, e) => {
  const t = D(), i = ke(CT, void 0), s = $(() => !!i), r = $({
    get() {
      return s.value ? i.modelValue : n.modelValue;
    },
    set(u) {
      s.value ? i.changeEvent(u) : e && e(ot, u), t.value.checked = n.modelValue === n.label;
    }
  }), o = Xi($(() => i == null ? void 0 : i.size)), l = er($(() => i == null ? void 0 : i.disabled)), a = D(!1), c = $(() => l.value || s.value && r.value !== n.label ? -1 : 0);
  return {
    radioRef: t,
    isGroup: s,
    radioGroup: i,
    focus: a,
    size: o,
    disabled: l,
    tabIndex: c,
    modelValue: r
  };
}, X9 = ["value", "name", "disabled"], Y9 = F({
  name: "ElRadio"
}), U9 = /* @__PURE__ */ F({
  ...Y9,
  props: H9,
  emits: ST,
  setup(n, { emit: e }) {
    const t = n, i = me("radio"), { radioRef: s, radioGroup: r, focus: o, size: l, disabled: a, modelValue: c } = kT(t, e);
    function u() {
      $e(() => e("change", c.value));
    }
    return (h, d) => {
      var f;
      return R(), V("label", {
        class: L([
          y(i).b(),
          y(i).is("disabled", y(a)),
          y(i).is("focus", y(o)),
          y(i).is("bordered", h.border),
          y(i).is("checked", y(c) === h.label),
          y(i).m(y(l))
        ])
      }, [
        Z("span", {
          class: L([
            y(i).e("input"),
            y(i).is("disabled", y(a)),
            y(i).is("checked", y(c) === h.label)
          ])
        }, [
          it(Z("input", {
            ref_key: "radioRef",
            ref: s,
            "onUpdate:modelValue": d[0] || (d[0] = (p) => Fi(c) ? c.value = p : null),
            class: L(y(i).e("original")),
            value: h.label,
            name: h.name || ((f = y(r)) == null ? void 0 : f.name),
            disabled: y(a),
            type: "radio",
            onFocus: d[1] || (d[1] = (p) => o.value = !0),
            onBlur: d[2] || (d[2] = (p) => o.value = !1),
            onChange: u,
            onClick: d[3] || (d[3] = Le(() => {
            }, ["stop"]))
          }, null, 42, X9), [
            [IE, y(c)]
          ]),
          Z("span", {
            class: L(y(i).e("inner"))
          }, null, 2)
        ], 2),
        Z("span", {
          class: L(y(i).e("label")),
          onKeydown: d[4] || (d[4] = Le(() => {
          }, ["stop"]))
        }, [
          de(h.$slots, "default", {}, () => [
            Xn(xe(h.label), 1)
          ])
        ], 34)
      ], 2);
    };
  }
});
var G9 = /* @__PURE__ */ Ce(U9, [["__file", "radio.vue"]]);
const K9 = Ee({
  ...xT,
  name: {
    type: String,
    default: ""
  }
}), J9 = ["value", "name", "disabled"], eW = F({
  name: "ElRadioButton"
}), tW = /* @__PURE__ */ F({
  ...eW,
  props: K9,
  setup(n) {
    const e = n, t = me("radio"), { radioRef: i, focus: s, size: r, disabled: o, modelValue: l, radioGroup: a } = kT(e), c = $(() => ({
      backgroundColor: (a == null ? void 0 : a.fill) || "",
      borderColor: (a == null ? void 0 : a.fill) || "",
      boxShadow: a != null && a.fill ? `-1px 0 0 0 ${a.fill}` : "",
      color: (a == null ? void 0 : a.textColor) || ""
    }));
    return (u, h) => {
      var d;
      return R(), V("label", {
        class: L([
          y(t).b("button"),
          y(t).is("active", y(l) === u.label),
          y(t).is("disabled", y(o)),
          y(t).is("focus", y(s)),
          y(t).bm("button", y(r))
        ])
      }, [
        it(Z("input", {
          ref_key: "radioRef",
          ref: i,
          "onUpdate:modelValue": h[0] || (h[0] = (f) => Fi(l) ? l.value = f : null),
          class: L(y(t).be("button", "original-radio")),
          value: u.label,
          type: "radio",
          name: u.name || ((d = y(a)) == null ? void 0 : d.name),
          disabled: y(o),
          onFocus: h[1] || (h[1] = (f) => s.value = !0),
          onBlur: h[2] || (h[2] = (f) => s.value = !1),
          onClick: h[3] || (h[3] = Le(() => {
          }, ["stop"]))
        }, null, 42, J9), [
          [IE, y(l)]
        ]),
        Z("span", {
          class: L(y(t).be("button", "inner")),
          style: Qe(y(l) === u.label ? y(c) : {}),
          onKeydown: h[4] || (h[4] = Le(() => {
          }, ["stop"]))
        }, [
          de(u.$slots, "default", {}, () => [
            Xn(xe(u.label), 1)
          ])
        ], 38)
      ], 2);
    };
  }
});
var PT = /* @__PURE__ */ Ce(tW, [["__file", "radio-button.vue"]]);
const nW = Ee({
  id: {
    type: String,
    default: void 0
  },
  size: Ts,
  disabled: Boolean,
  modelValue: {
    type: [String, Number, Boolean],
    default: ""
  },
  fill: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  textColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: void 0
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), iW = ST, sW = ["id", "aria-label", "aria-labelledby"], rW = F({
  name: "ElRadioGroup"
}), oW = /* @__PURE__ */ F({
  ...rW,
  props: nW,
  emits: iW,
  setup(n, { emit: e }) {
    const t = n, i = me("radio"), s = Or(), r = D(), { formItem: o } = _s(), { inputId: l, isLabeledByFormItem: a } = Hl(t, {
      formItemContext: o
    }), c = (h) => {
      e(ot, h), $e(() => e("change", h));
    };
    qe(() => {
      const h = r.value.querySelectorAll("[type=radio]"), d = h[0];
      !Array.from(h).some((f) => f.checked) && d && (d.tabIndex = 0);
    });
    const u = $(() => t.name || s.value);
    return ft(CT, Gt({
      ...Ws(t),
      changeEvent: c,
      name: u
    })), ne(() => t.modelValue, () => {
      t.validateEvent && (o == null || o.validate("change").catch((h) => pt(h)));
    }), (h, d) => (R(), V("div", {
      id: y(l),
      ref_key: "radioGroupRef",
      ref: r,
      class: L(y(i).b("group")),
      role: "radiogroup",
      "aria-label": y(a) ? void 0 : h.label || "radio-group",
      "aria-labelledby": y(a) ? y(o).labelId : void 0
    }, [
      de(h.$slots, "default")
    ], 10, sW));
  }
});
var ET = /* @__PURE__ */ Ce(oW, [["__file", "radio-group.vue"]]);
const lW = Ft(G9, {
  RadioButton: PT,
  RadioGroup: ET
}), fUe = Er(ET), pUe = Er(PT);
var aW = F({
  name: "NodeContent",
  setup() {
    return {
      ns: me("cascader-node")
    };
  },
  render() {
    const { ns: n } = this, { node: e, panel: t } = this.$parent, { data: i, label: s } = e, { renderLabelFn: r } = t;
    return Re("span", { class: n.e("label") }, r ? r({ node: e, data: i }) : s);
  }
});
const q1 = Symbol(), cW = F({
  name: "ElCascaderNode",
  components: {
    ElCheckbox: uo,
    ElRadio: lW,
    NodeContent: aW,
    ElIcon: Fe,
    Check: Jm,
    Loading: tc,
    ArrowRight: ec
  },
  props: {
    node: {
      type: Object,
      required: !0
    },
    menuId: String
  },
  emits: ["expand"],
  setup(n, { emit: e }) {
    const t = ke(q1), i = me("cascader-node"), s = $(() => t.isHoverMenu), r = $(() => t.config.multiple), o = $(() => t.config.checkStrictly), l = $(() => {
      var S;
      return (S = t.checkedNodes[0]) == null ? void 0 : S.uid;
    }), a = $(() => n.node.isDisabled), c = $(() => n.node.isLeaf), u = $(() => o.value && !c.value || !a.value), h = $(() => f(t.expandingNode)), d = $(() => o.value && t.checkedNodes.some(f)), f = (S) => {
      var C;
      const { level: k, uid: E } = n.node;
      return ((C = S == null ? void 0 : S.pathNodes[k - 1]) == null ? void 0 : C.uid) === E;
    }, p = () => {
      h.value || t.expandNode(n.node);
    }, g = (S) => {
      const { node: C } = n;
      S !== C.checked && t.handleCheckChange(C, S);
    }, m = () => {
      t.lazyLoad(n.node, () => {
        c.value || p();
      });
    }, v = (S) => {
      s.value && (O(), !c.value && e("expand", S));
    }, O = () => {
      const { node: S } = n;
      !u.value || S.loading || (S.loaded ? p() : m());
    }, b = () => {
      s.value && !c.value || (c.value && !a.value && !o.value && !r.value ? x(!0) : O());
    }, w = (S) => {
      o.value ? (g(S), n.node.loaded && p()) : x(S);
    }, x = (S) => {
      n.node.loaded ? (g(S), !o.value && p()) : m();
    };
    return {
      panel: t,
      isHoverMenu: s,
      multiple: r,
      checkStrictly: o,
      checkedNodeId: l,
      isDisabled: a,
      isLeaf: c,
      expandable: u,
      inExpandingPath: h,
      inCheckedPath: d,
      ns: i,
      handleHoverExpand: v,
      handleExpand: O,
      handleClick: b,
      handleCheck: x,
      handleSelectCheck: w
    };
  }
}), uW = ["id", "aria-haspopup", "aria-owns", "aria-expanded", "tabindex"], hW = /* @__PURE__ */ Z("span", null, null, -1);
function dW(n, e, t, i, s, r) {
  const o = nt("el-checkbox"), l = nt("el-radio"), a = nt("check"), c = nt("el-icon"), u = nt("node-content"), h = nt("loading"), d = nt("arrow-right");
  return R(), V("li", {
    id: `${n.menuId}-${n.node.uid}`,
    role: "menuitem",
    "aria-haspopup": !n.isLeaf,
    "aria-owns": n.isLeaf ? null : n.menuId,
    "aria-expanded": n.inExpandingPath,
    tabindex: n.expandable ? -1 : void 0,
    class: L([
      n.ns.b(),
      n.ns.is("selectable", n.checkStrictly),
      n.ns.is("active", n.node.checked),
      n.ns.is("disabled", !n.expandable),
      n.inExpandingPath && "in-active-path",
      n.inCheckedPath && "in-checked-path"
    ]),
    onMouseenter: e[2] || (e[2] = (...f) => n.handleHoverExpand && n.handleHoverExpand(...f)),
    onFocus: e[3] || (e[3] = (...f) => n.handleHoverExpand && n.handleHoverExpand(...f)),
    onClick: e[4] || (e[4] = (...f) => n.handleClick && n.handleClick(...f))
  }, [
    G(" prefix "),
    n.multiple ? (R(), ie(o, {
      key: 0,
      "model-value": n.node.checked,
      indeterminate: n.node.indeterminate,
      disabled: n.isDisabled,
      onClick: e[0] || (e[0] = Le(() => {
      }, ["stop"])),
      "onUpdate:modelValue": n.handleSelectCheck
    }, null, 8, ["model-value", "indeterminate", "disabled", "onUpdate:modelValue"])) : n.checkStrictly ? (R(), ie(l, {
      key: 1,
      "model-value": n.checkedNodeId,
      label: n.node.uid,
      disabled: n.isDisabled,
      "onUpdate:modelValue": n.handleSelectCheck,
      onClick: e[1] || (e[1] = Le(() => {
      }, ["stop"]))
    }, {
      default: Y(() => [
        G(`
        Add an empty element to avoid render label,
        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485
      `),
        hW
      ]),
      _: 1
    }, 8, ["model-value", "label", "disabled", "onUpdate:modelValue"])) : n.isLeaf && n.node.checked ? (R(), ie(c, {
      key: 2,
      class: L(n.ns.e("prefix"))
    }, {
      default: Y(() => [
        K(a)
      ]),
      _: 1
    }, 8, ["class"])) : G("v-if", !0),
    G(" content "),
    K(u),
    G(" postfix "),
    n.isLeaf ? G("v-if", !0) : (R(), V(Tt, { key: 3 }, [
      n.node.loading ? (R(), ie(c, {
        key: 0,
        class: L([n.ns.is("loading"), n.ns.e("postfix")])
      }, {
        default: Y(() => [
          K(h)
        ]),
        _: 1
      }, 8, ["class"])) : (R(), ie(c, {
        key: 1,
        class: L(["arrow-right", n.ns.e("postfix")])
      }, {
        default: Y(() => [
          K(d)
        ]),
        _: 1
      }, 8, ["class"]))
    ], 64))
  ], 42, uW);
}
var fW = /* @__PURE__ */ Ce(cW, [["render", dW], ["__file", "node.vue"]]);
const pW = F({
  name: "ElCascaderMenu",
  components: {
    Loading: tc,
    ElIcon: Fe,
    ElScrollbar: wf,
    ElCascaderNode: fW
  },
  props: {
    nodes: {
      type: Array,
      required: !0
    },
    index: {
      type: Number,
      required: !0
    }
  },
  setup(n) {
    const e = Xe(), t = me("cascader-menu"), { t: i } = mn(), s = Or();
    let r = null, o = null;
    const l = ke(q1), a = D(null), c = $(() => !n.nodes.length), u = $(() => !l.initialLoaded), h = $(() => `${s.value}-${n.index}`), d = (m) => {
      r = m.target;
    }, f = (m) => {
      if (!(!l.isHoverMenu || !r || !a.value))
        if (r.contains(m.target)) {
          p();
          const v = e.vnode.el, { left: O } = v.getBoundingClientRect(), { offsetWidth: b, offsetHeight: w } = v, x = m.clientX - O, S = r.offsetTop, C = S + r.offsetHeight;
          a.value.innerHTML = `
          <path style="pointer-events: auto;" fill="transparent" d="M${x} ${S} L${b} 0 V${S} Z" />
          <path style="pointer-events: auto;" fill="transparent" d="M${x} ${C} L${b} ${w} V${C} Z" />
        `;
        } else
          o || (o = window.setTimeout(g, l.config.hoverThreshold));
    }, p = () => {
      o && (clearTimeout(o), o = null);
    }, g = () => {
      a.value && (a.value.innerHTML = "", p());
    };
    return {
      ns: t,
      panel: l,
      hoverZone: a,
      isEmpty: c,
      isLoading: u,
      menuId: h,
      t: i,
      handleExpand: d,
      handleMouseMove: f,
      clearHoverZone: g
    };
  }
});
function gW(n, e, t, i, s, r) {
  const o = nt("el-cascader-node"), l = nt("loading"), a = nt("el-icon"), c = nt("el-scrollbar");
  return R(), ie(c, {
    key: n.menuId,
    tag: "ul",
    role: "menu",
    class: L(n.ns.b()),
    "wrap-class": n.ns.e("wrap"),
    "view-class": [n.ns.e("list"), n.ns.is("empty", n.isEmpty)],
    onMousemove: n.handleMouseMove,
    onMouseleave: n.clearHoverZone
  }, {
    default: Y(() => {
      var u;
      return [
        (R(!0), V(Tt, null, oi(n.nodes, (h) => (R(), ie(o, {
          key: h.uid,
          node: h,
          "menu-id": n.menuId,
          onExpand: n.handleExpand
        }, null, 8, ["node", "menu-id", "onExpand"]))), 128)),
        n.isLoading ? (R(), V("div", {
          key: 0,
          class: L(n.ns.e("empty-text"))
        }, [
          K(a, {
            size: "14",
            class: L(n.ns.is("loading"))
          }, {
            default: Y(() => [
              K(l)
            ]),
            _: 1
          }, 8, ["class"]),
          Xn(" " + xe(n.t("el.cascader.loading")), 1)
        ], 2)) : n.isEmpty ? (R(), V("div", {
          key: 1,
          class: L(n.ns.e("empty-text"))
        }, xe(n.t("el.cascader.noData")), 3)) : (u = n.panel) != null && u.isHoverMenu ? (R(), V("svg", {
          key: 2,
          ref: "hoverZone",
          class: L(n.ns.e("hover-zone"))
        }, null, 2)) : G("v-if", !0)
      ];
    }),
    _: 1
  }, 8, ["class", "wrap-class", "view-class", "onMousemove", "onMouseleave"]);
}
var mW = /* @__PURE__ */ Ce(pW, [["render", gW], ["__file", "menu.vue"]]);
let vW = 0;
const bW = (n) => {
  const e = [n];
  let { parent: t } = n;
  for (; t; )
    e.unshift(t), t = t.parent;
  return e;
};
let ly = class ay {
  constructor(e, t, i, s = !1) {
    this.data = e, this.config = t, this.parent = i, this.root = s, this.uid = vW++, this.checked = !1, this.indeterminate = !1, this.loading = !1;
    const { value: r, label: o, children: l } = t, a = e[l], c = bW(this);
    this.level = s ? 0 : i ? i.level + 1 : 1, this.value = e[r], this.label = e[o], this.pathNodes = c, this.pathValues = c.map((u) => u.value), this.pathLabels = c.map((u) => u.label), this.childrenData = a, this.children = (a || []).map((u) => new ay(u, t, this)), this.loaded = !t.lazy || this.isLeaf || !qr(a);
  }
  get isDisabled() {
    const { data: e, parent: t, config: i } = this, { disabled: s, checkStrictly: r } = i;
    return (wt(s) ? s(e, this) : !!e[s]) || !r && (t == null ? void 0 : t.isDisabled);
  }
  get isLeaf() {
    const { data: e, config: t, childrenData: i, loaded: s } = this, { lazy: r, leaf: o } = t, l = wt(o) ? o(e, this) : e[o];
    return Si(l) ? r && !s ? !1 : !(Array.isArray(i) && i.length) : !!l;
  }
  get valueByOption() {
    return this.config.emitPath ? this.pathValues : this.value;
  }
  appendChild(e) {
    const { childrenData: t, children: i } = this, s = new ay(e, this.config, this);
    return Array.isArray(t) ? t.push(e) : this.childrenData = [e], i.push(s), s;
  }
  calcText(e, t) {
    const i = e ? this.pathLabels.join(t) : this.label;
    return this.text = i, i;
  }
  broadcast(e, ...t) {
    const i = `onParent${Wr(e)}`;
    this.children.forEach((s) => {
      s && (s.broadcast(e, ...t), s[i] && s[i](...t));
    });
  }
  emit(e, ...t) {
    const { parent: i } = this, s = `onChild${Wr(e)}`;
    i && (i[s] && i[s](...t), i.emit(e, ...t));
  }
  onParentCheck(e) {
    this.isDisabled || this.setCheckState(e);
  }
  onChildCheck() {
    const { children: e } = this, t = e.filter((s) => !s.isDisabled), i = t.length ? t.every((s) => s.checked) : !1;
    this.setCheckState(i);
  }
  setCheckState(e) {
    const t = this.children.length, i = this.children.reduce((s, r) => {
      const o = r.checked ? 1 : r.indeterminate ? 0.5 : 0;
      return s + o;
    }, 0);
    this.checked = this.loaded && this.children.filter((s) => !s.isDisabled).every((s) => s.loaded && s.checked) && e, this.indeterminate = this.loaded && i !== t && i > 0;
  }
  doCheck(e) {
    if (this.checked === e)
      return;
    const { checkStrictly: t, multiple: i } = this.config;
    t || !i ? this.checked = e : (this.broadcast("check", e), this.setCheckState(e), this.emit("check"));
  }
};
const cy = (n, e) => n.reduce((t, i) => (i.isLeaf ? t.push(i) : (!e && t.push(i), t = t.concat(cy(i.children, e))), t), []);
let mC = class {
  constructor(e, t) {
    this.config = t;
    const i = (e || []).map((s) => new ly(s, this.config));
    this.nodes = i, this.allNodes = cy(i, !1), this.leafNodes = cy(i, !0);
  }
  getNodes() {
    return this.nodes;
  }
  getFlattedNodes(e) {
    return e ? this.leafNodes : this.allNodes;
  }
  appendNode(e, t) {
    const i = t ? t.appendChild(e) : new ly(e, this.config);
    t || this.nodes.push(i), this.allNodes.push(i), i.isLeaf && this.leafNodes.push(i);
  }
  appendNodes(e, t) {
    e.forEach((i) => this.appendNode(i, t));
  }
  getNodeByValue(e, t = !1) {
    return !e && e !== 0 ? null : this.getFlattedNodes(t).find((s) => cn(s.value, e) || cn(s.pathValues, e)) || null;
  }
  getSameNode(e) {
    return e && this.getFlattedNodes(!1).find(({ value: i, level: s }) => cn(e.value, i) && e.level === s) || null;
  }
};
const AT = Ee({
  modelValue: {
    type: ce([Number, String, Array])
  },
  options: {
    type: ce(Array),
    default: () => []
  },
  props: {
    type: ce(Object),
    default: () => ({})
  }
}), yW = {
  expandTrigger: "click",
  multiple: !1,
  checkStrictly: !1,
  emitPath: !0,
  lazy: !1,
  lazyLoad: Xt,
  value: "value",
  label: "label",
  children: "children",
  leaf: "leaf",
  disabled: "disabled",
  hoverThreshold: 500
}, OW = (n) => $(() => ({
  ...yW,
  ...n.props
})), vC = (n) => {
  if (!n)
    return 0;
  const e = n.id.split("-");
  return Number(e[e.length - 2]);
}, wW = (n) => {
  if (!n)
    return;
  const e = n.querySelector("input");
  e ? e.click() : o$(n) && n.click();
}, xW = (n, e) => {
  const t = e.slice(0), i = t.map((r) => r.uid), s = n.reduce((r, o) => {
    const l = i.indexOf(o.uid);
    return l > -1 && (r.push(o), t.splice(l, 1), i.splice(l, 1)), r;
  }, []);
  return s.push(...t), s;
}, SW = F({
  name: "ElCascaderPanel",
  components: {
    ElCascaderMenu: mW
  },
  props: {
    ...AT,
    border: {
      type: Boolean,
      default: !0
    },
    renderLabel: Function
  },
  emits: [ot, Un, "close", "expand-change"],
  setup(n, { emit: e, slots: t }) {
    let i = !1;
    const s = me("cascader"), r = OW(n);
    let o = null;
    const l = D(!0), a = D([]), c = D(null), u = D([]), h = D(null), d = D([]), f = $(() => r.value.expandTrigger === "hover"), p = $(() => n.renderLabel || t.default), g = () => {
      const { options: T } = n, B = r.value;
      i = !1, o = new mC(T, B), u.value = [o.getNodes()], B.lazy && qr(n.options) ? (l.value = !1, m(void 0, (I) => {
        I && (o = new mC(I, B), u.value = [o.getNodes()]), l.value = !0, k(!1, !0);
      })) : k(!1, !0);
    }, m = (T, B) => {
      const I = r.value;
      T = T || new ly({}, I, void 0, !0), T.loading = !0;
      const P = (A) => {
        const N = T, q = N.root ? null : N;
        A && (o == null || o.appendNodes(A, q)), N.loading = !1, N.loaded = !0, N.childrenData = N.childrenData || [], B && B(A);
      };
      I.lazyLoad(T, P);
    }, v = (T, B) => {
      var I;
      const { level: P } = T, A = u.value.slice(0, P);
      let N;
      T.isLeaf ? N = T.pathNodes[P - 2] : (N = T, A.push(T.children)), ((I = h.value) == null ? void 0 : I.uid) !== (N == null ? void 0 : N.uid) && (h.value = T, u.value = A, !B && e("expand-change", (T == null ? void 0 : T.pathValues) || []));
    }, O = (T, B, I = !0) => {
      const { checkStrictly: P, multiple: A } = r.value, N = d.value[0];
      i = !0, !A && (N == null || N.doCheck(!1)), T.doCheck(B), C(), I && !A && !P && e("close"), !I && !A && !P && b(T);
    }, b = (T) => {
      T && (T = T.parent, b(T), T && v(T));
    }, w = (T) => o == null ? void 0 : o.getFlattedNodes(T), x = (T) => {
      var B;
      return (B = w(T)) == null ? void 0 : B.filter((I) => I.checked !== !1);
    }, S = () => {
      d.value.forEach((T) => T.doCheck(!1)), C(), u.value = u.value.slice(0, 1), h.value = null, e("expand-change", []);
    }, C = () => {
      var T;
      const { checkStrictly: B, multiple: I } = r.value, P = d.value, A = x(!B), N = xW(P, A), q = N.map((j) => j.valueByOption);
      d.value = N, c.value = I ? q : (T = q[0]) != null ? T : null;
    }, k = (T = !1, B = !1) => {
      const { modelValue: I } = n, { lazy: P, multiple: A, checkStrictly: N } = r.value, q = !N;
      if (!(!l.value || i || !B && cn(I, c.value)))
        if (P && !T) {
          const H = TS(MQ(_S(I))).map((oe) => o == null ? void 0 : o.getNodeByValue(oe)).filter((oe) => !!oe && !oe.loaded && !oe.loading);
          H.length ? H.forEach((oe) => {
            m(oe, () => k(!1, B));
          }) : k(!0, B);
        } else {
          const j = A ? _S(I) : [I], H = TS(j.map((oe) => o == null ? void 0 : o.getNodeByValue(oe, q)));
          E(H, B), c.value = Bt(I);
        }
    }, E = (T, B = !0) => {
      const { checkStrictly: I } = r.value, P = d.value, A = T.filter((j) => !!j && (I || j.isLeaf)), N = o == null ? void 0 : o.getSameNode(h.value), q = B && N || A[0];
      q ? q.pathNodes.forEach((j) => v(j, !0)) : h.value = null, P.forEach((j) => j.doCheck(!1)), n.props.multiple ? Gt(A).forEach((j) => j.doCheck(!0)) : A.forEach((j) => j.doCheck(!0)), d.value = A, $e(M);
    }, M = () => {
      vt && a.value.forEach((T) => {
        const B = T == null ? void 0 : T.$el;
        if (B) {
          const I = B.querySelector(`.${s.namespace.value}-scrollbar__wrap`), P = B.querySelector(`.${s.b("node")}.${s.is("active")}`) || B.querySelector(`.${s.b("node")}.in-active-path`);
          m$(I, P);
        }
      });
    }, _ = (T) => {
      const B = T.target, { code: I } = T;
      switch (I) {
        case dt.up:
        case dt.down: {
          T.preventDefault();
          const P = I === dt.up ? -1 : 1;
          Fp(l$(B, P, `.${s.b("node")}[tabindex="-1"]`));
          break;
        }
        case dt.left: {
          T.preventDefault();
          const P = a.value[vC(B) - 1], A = P == null ? void 0 : P.$el.querySelector(`.${s.b("node")}[aria-expanded="true"]`);
          Fp(A);
          break;
        }
        case dt.right: {
          T.preventDefault();
          const P = a.value[vC(B) + 1], A = P == null ? void 0 : P.$el.querySelector(`.${s.b("node")}[tabindex="-1"]`);
          Fp(A);
          break;
        }
        case dt.enter:
          wW(B);
          break;
      }
    };
    return ft(q1, Gt({
      config: r,
      expandingNode: h,
      checkedNodes: d,
      isHoverMenu: f,
      initialLoaded: l,
      renderLabelFn: p,
      lazyLoad: m,
      expandNode: v,
      handleCheckChange: O
    })), ne([r, () => n.options], g, {
      deep: !0,
      immediate: !0
    }), ne(() => n.modelValue, () => {
      i = !1, k();
    }, {
      deep: !0
    }), ne(() => c.value, (T) => {
      cn(T, n.modelValue) || (e(ot, T), e(Un, T));
    }), j4(() => a.value = []), qe(() => !qr(n.modelValue) && k()), {
      ns: s,
      menuList: a,
      menus: u,
      checkedNodes: d,
      handleKeyDown: _,
      handleCheckChange: O,
      getFlattedNodes: w,
      getCheckedNodes: x,
      clearCheckedNodes: S,
      calculateCheckedValue: C,
      scrollToExpandingNode: M
    };
  }
});
function CW(n, e, t, i, s, r) {
  const o = nt("el-cascader-menu");
  return R(), V("div", {
    class: L([n.ns.b("panel"), n.ns.is("bordered", n.border)]),
    onKeydown: e[0] || (e[0] = (...l) => n.handleKeyDown && n.handleKeyDown(...l))
  }, [
    (R(!0), V(Tt, null, oi(n.menus, (l, a) => (R(), ie(o, {
      key: a,
      ref_for: !0,
      ref: (c) => n.menuList[a] = c,
      index: a,
      nodes: [...l]
    }, null, 8, ["index", "nodes"]))), 128))
  ], 34);
}
var Kp = /* @__PURE__ */ Ce(SW, [["render", CW], ["__file", "index.vue"]]);
Kp.install = (n) => {
  n.component(Kp.name, Kp);
};
const kW = Kp, o0 = Ee({
  type: {
    type: String,
    values: ["primary", "success", "info", "warning", "danger"],
    default: "primary"
  },
  closable: Boolean,
  disableTransitions: Boolean,
  hit: Boolean,
  color: String,
  size: {
    type: String,
    values: nc
  },
  effect: {
    type: String,
    values: ["dark", "light", "plain"],
    default: "light"
  },
  round: Boolean
}), PW = {
  close: (n) => n instanceof MouseEvent,
  click: (n) => n instanceof MouseEvent
}, EW = F({
  name: "ElTag"
}), AW = /* @__PURE__ */ F({
  ...EW,
  props: o0,
  emits: PW,
  setup(n, { emit: e }) {
    const t = n, i = Xi(), s = me("tag"), r = $(() => {
      const { type: a, hit: c, effect: u, closable: h, round: d } = t;
      return [
        s.b(),
        s.is("closable", h),
        s.m(a || "primary"),
        s.m(i.value),
        s.m(u),
        s.is("hit", c),
        s.is("round", d)
      ];
    }), o = (a) => {
      e("close", a);
    }, l = (a) => {
      e("click", a);
    };
    return (a, c) => a.disableTransitions ? (R(), V("span", {
      key: 0,
      class: L(y(r)),
      style: Qe({ backgroundColor: a.color }),
      onClick: l
    }, [
      Z("span", {
        class: L(y(s).e("content"))
      }, [
        de(a.$slots, "default")
      ], 2),
      a.closable ? (R(), ie(y(Fe), {
        key: 0,
        class: L(y(s).e("close")),
        onClick: Le(o, ["stop"])
      }, {
        default: Y(() => [
          K(y(Lo))
        ]),
        _: 1
      }, 8, ["class", "onClick"])) : G("v-if", !0)
    ], 6)) : (R(), ie(mo, {
      key: 1,
      name: `${y(s).namespace.value}-zoom-in-center`,
      appear: ""
    }, {
      default: Y(() => [
        Z("span", {
          class: L(y(r)),
          style: Qe({ backgroundColor: a.color }),
          onClick: l
        }, [
          Z("span", {
            class: L(y(s).e("content"))
          }, [
            de(a.$slots, "default")
          ], 2),
          a.closable ? (R(), ie(y(Fe), {
            key: 0,
            class: L(y(s).e("close")),
            onClick: Le(o, ["stop"])
          }, {
            default: Y(() => [
              K(y(Lo))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : G("v-if", !0)
        ], 6)
      ]),
      _: 3
    }, 8, ["name"]));
  }
});
var $W = /* @__PURE__ */ Ce(AW, [["__file", "tag.vue"]]);
const jg = Ft($W), TW = Ee({
  ...AT,
  size: Ts,
  placeholder: String,
  disabled: Boolean,
  clearable: Boolean,
  filterable: Boolean,
  filterMethod: {
    type: ce(Function),
    default: (n, e) => n.text.includes(e)
  },
  separator: {
    type: String,
    default: " / "
  },
  showAllLevels: {
    type: Boolean,
    default: !0
  },
  collapseTags: Boolean,
  maxCollapseTags: {
    type: Number,
    default: 1
  },
  collapseTagsTooltip: {
    type: Boolean,
    default: !1
  },
  debounce: {
    type: Number,
    default: 300
  },
  beforeFilter: {
    type: ce(Function),
    default: () => !0
  },
  popperClass: {
    type: String,
    default: ""
  },
  teleported: gi.teleported,
  tagType: { ...o0.type, default: "info" },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), _W = {
  [ot]: (n) => !!n || n === null,
  [Un]: (n) => !!n || n === null,
  focus: (n) => n instanceof FocusEvent,
  blur: (n) => n instanceof FocusEvent,
  visibleChange: (n) => Pi(n),
  expandChange: (n) => !!n,
  removeTag: (n) => !!n
}, MW = { key: 0 }, RW = ["placeholder", "onKeydown"], NW = ["onClick"], DW = "ElCascader", LW = F({
  name: DW
}), IW = /* @__PURE__ */ F({
  ...LW,
  props: TW,
  emits: _W,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = {
      modifiers: [
        {
          name: "arrowPosition",
          enabled: !0,
          phase: "main",
          fn: ({ state: J }) => {
            const { modifiersData: ae, placement: ve } = J;
            ["right", "left", "bottom", "top"].includes(ve) || (ae.arrow.x = 35);
          },
          requires: ["arrow"]
        }
      ]
    }, r = NE();
    let o = 0, l = 0;
    const a = me("cascader"), c = me("input"), { t: u } = mn(), { form: h, formItem: d } = _s(), f = D(null), p = D(null), g = D(null), m = D(null), v = D(null), O = D(!1), b = D(!1), w = D(!1), x = D(!1), S = D(""), C = D(""), k = D([]), E = D([]), M = D([]), _ = D(!1), T = $(() => r.style), B = $(() => i.disabled || (h == null ? void 0 : h.disabled)), I = $(() => i.placeholder || u("el.cascader.placeholder")), P = $(() => C.value || k.value.length > 0 || _.value ? "" : I.value), A = Xi(), N = $(() => ["small"].includes(A.value) ? "small" : "default"), q = $(() => !!i.props.multiple), j = $(() => !i.filterable || q.value), H = $(() => q.value ? C.value : S.value), oe = $(() => {
      var J;
      return ((J = m.value) == null ? void 0 : J.checkedNodes) || [];
    }), te = $(() => !i.clearable || B.value || w.value || !b.value ? !1 : !!oe.value.length), W = $(() => {
      const { showAllLevels: J, separator: ae } = i, ve = oe.value;
      return ve.length ? q.value ? "" : ve[0].calcText(J, ae) : "";
    }), U = $({
      get() {
        return Bt(i.modelValue);
      },
      set(J) {
        t(ot, J), t(Un, J), i.validateEvent && (d == null || d.validate("change").catch((ae) => pt(ae)));
      }
    }), le = $(() => [
      a.b(),
      a.m(A.value),
      a.is("disabled", B.value),
      r.class
    ]), he = $(() => [
      c.e("icon"),
      "icon-arrow-down",
      a.is("reverse", O.value)
    ]), ee = $(() => a.is("focus", O.value || x.value)), pe = $(() => {
      var J, ae;
      return (ae = (J = f.value) == null ? void 0 : J.popperRef) == null ? void 0 : ae.contentRef;
    }), be = (J) => {
      var ae, ve, Ue;
      B.value || (J = J ?? !O.value, J !== O.value && (O.value = J, (ve = (ae = p.value) == null ? void 0 : ae.input) == null || ve.setAttribute("aria-expanded", `${J}`), J ? (fe(), $e((Ue = m.value) == null ? void 0 : Ue.scrollToExpandingNode)) : i.filterable && Bi(), t("visibleChange", J)));
    }, fe = () => {
      $e(() => {
        var J;
        (J = f.value) == null || J.updatePopper();
      });
    }, Ae = () => {
      w.value = !1;
    }, ut = (J) => {
      const { showAllLevels: ae, separator: ve } = i;
      return {
        node: J,
        key: J.uid,
        text: J.calcText(ae, ve),
        hitState: !1,
        closable: !B.value && !J.isDisabled,
        isCollapseTag: !1
      };
    }, zt = (J) => {
      var ae;
      const ve = J.node;
      ve.doCheck(!1), (ae = m.value) == null || ae.calculateCheckedValue(), t("removeTag", ve.valueByOption);
    }, Kn = () => {
      if (!q.value)
        return;
      const J = oe.value, ae = [], ve = [];
      if (J.forEach((Ue) => ve.push(ut(Ue))), E.value = ve, J.length) {
        J.slice(0, i.maxCollapseTags).forEach((Sn) => ae.push(ut(Sn)));
        const Ue = J.slice(i.maxCollapseTags), Zt = Ue.length;
        Zt && (i.collapseTags ? ae.push({
          key: -1,
          text: `+ ${Zt}`,
          closable: !1,
          isCollapseTag: !0
        }) : Ue.forEach((Sn) => ae.push(ut(Sn))));
      }
      k.value = ae;
    }, Jn = () => {
      var J, ae;
      const { filterMethod: ve, showAllLevels: Ue, separator: Zt } = i, Sn = (ae = (J = m.value) == null ? void 0 : J.getFlattedNodes(!i.props.checkStrictly)) == null ? void 0 : ae.filter((jt) => jt.isDisabled ? !1 : (jt.calcText(Ue, Zt), ve(jt, H.value)));
      q.value && (k.value.forEach((jt) => {
        jt.hitState = !1;
      }), E.value.forEach((jt) => {
        jt.hitState = !1;
      })), w.value = !0, M.value = Sn, fe();
    }, Di = () => {
      var J;
      let ae;
      w.value && v.value ? ae = v.value.$el.querySelector(`.${a.e("suggestion-item")}`) : ae = (J = m.value) == null ? void 0 : J.$el.querySelector(`.${a.b("node")}[tabindex="-1"]`), ae && (ae.focus(), !w.value && ae.click());
    }, hi = () => {
      var J, ae;
      const ve = (J = p.value) == null ? void 0 : J.input, Ue = g.value, Zt = (ae = v.value) == null ? void 0 : ae.$el;
      if (!(!vt || !ve)) {
        if (Zt) {
          const Sn = Zt.querySelector(`.${a.e("suggestion-list")}`);
          Sn.style.minWidth = `${ve.offsetWidth}px`;
        }
        if (Ue) {
          const { offsetHeight: Sn } = Ue, jt = k.value.length > 0 ? `${Math.max(Sn + 6, o)}px` : `${o}px`;
          ve.style.height = jt, fe();
        }
      }
    }, Li = (J) => {
      var ae;
      return (ae = m.value) == null ? void 0 : ae.getCheckedNodes(J);
    }, ds = (J) => {
      fe(), t("expandChange", J);
    }, un = (J) => {
      var ae;
      const ve = (ae = J.target) == null ? void 0 : ae.value;
      if (J.type === "compositionend")
        _.value = !1, $e(() => Te(ve));
      else {
        const Ue = ve[ve.length - 1] || "";
        _.value = !k1(Ue);
      }
    }, Ii = (J) => {
      if (!_.value)
        switch (J.code) {
          case dt.enter:
            be();
            break;
          case dt.down:
            be(!0), $e(Di), J.preventDefault();
            break;
          case dt.esc:
            O.value === !0 && (J.preventDefault(), J.stopPropagation(), be(!1));
            break;
          case dt.tab:
            be(!1);
            break;
        }
    }, Yi = () => {
      var J;
      (J = m.value) == null || J.clearCheckedNodes(), !O.value && i.filterable && Bi(), be(!1);
    }, Bi = () => {
      const { value: J } = W;
      S.value = J, C.value = J;
    }, ei = (J) => {
      var ae, ve;
      const { checked: Ue } = J;
      q.value ? (ae = m.value) == null || ae.handleCheckChange(J, !Ue, !1) : (!Ue && ((ve = m.value) == null || ve.handleCheckChange(J, !0, !1)), be(!1));
    }, ge = (J) => {
      const ae = J.target, { code: ve } = J;
      switch (ve) {
        case dt.up:
        case dt.down: {
          const Ue = ve === dt.up ? -1 : 1;
          Fp(l$(ae, Ue, `.${a.e("suggestion-item")}[tabindex="-1"]`));
          break;
        }
        case dt.enter:
          ae.click();
          break;
      }
    }, Ke = () => {
      const J = k.value, ae = J[J.length - 1];
      l = C.value ? 0 : l + 1, !(!ae || !l || i.collapseTags && J.length > 1) && (ae.hitState ? zt(ae) : ae.hitState = !0);
    }, Dt = (J) => {
      const ae = J.target, ve = a.e("search-input");
      ae.className === ve && (x.value = !0), t("focus", J);
    }, ti = (J) => {
      x.value = !1, t("blur", J);
    }, Mr = Do(() => {
      const { value: J } = H;
      if (!J)
        return;
      const ae = i.beforeFilter(J);
      Vb(ae) ? ae.then(Jn).catch(() => {
      }) : ae !== !1 ? Jn() : Ae();
    }, i.debounce), Te = (J, ae) => {
      !O.value && be(!0), !(ae != null && ae.isComposing) && (J ? Mr() : Ae());
    }, je = (J) => Number.parseFloat(DV(c.cssVarName("input-height"), J).value) - 2;
    return ne(w, fe), ne([oe, B], Kn), ne(k, () => {
      $e(() => hi());
    }), ne(A, async () => {
      await $e();
      const J = p.value.input;
      o = je(J) || o, hi();
    }), ne(W, Bi, { immediate: !0 }), qe(() => {
      const J = p.value.input, ae = je(J);
      o = J.offsetHeight || ae, pn(J, hi);
    }), e({
      getCheckedNodes: Li,
      cascaderPanelRef: m,
      togglePopperVisible: be,
      contentRef: pe
    }), (J, ae) => (R(), ie(y(Bo), {
      ref_key: "tooltipRef",
      ref: f,
      visible: O.value,
      teleported: J.teleported,
      "popper-class": [y(a).e("dropdown"), J.popperClass],
      "popper-options": s,
      "fallback-placements": [
        "bottom-start",
        "bottom",
        "top-start",
        "top",
        "right",
        "left"
      ],
      "stop-popper-mouse-event": !1,
      "gpu-acceleration": !1,
      placement: "bottom-start",
      transition: `${y(a).namespace.value}-zoom-in-top`,
      effect: "light",
      pure: "",
      persistent: "",
      onHide: Ae
    }, {
      default: Y(() => [
        it((R(), V("div", {
          class: L(y(le)),
          style: Qe(y(T)),
          onClick: ae[5] || (ae[5] = () => be(y(j) ? void 0 : !0)),
          onKeydown: Ii,
          onMouseenter: ae[6] || (ae[6] = (ve) => b.value = !0),
          onMouseleave: ae[7] || (ae[7] = (ve) => b.value = !1)
        }, [
          K(y(ic), {
            ref_key: "input",
            ref: p,
            modelValue: S.value,
            "onUpdate:modelValue": ae[1] || (ae[1] = (ve) => S.value = ve),
            placeholder: y(P),
            readonly: y(j),
            disabled: y(B),
            "validate-event": !1,
            size: y(A),
            class: L(y(ee)),
            tabindex: y(q) && J.filterable && !y(B) ? -1 : void 0,
            onCompositionstart: un,
            onCompositionupdate: un,
            onCompositionend: un,
            onFocus: Dt,
            onBlur: ti,
            onInput: Te
          }, {
            suffix: Y(() => [
              y(te) ? (R(), ie(y(Fe), {
                key: "clear",
                class: L([y(c).e("icon"), "icon-circle-close"]),
                onClick: Le(Yi, ["stop"])
              }, {
                default: Y(() => [
                  K(y(Ku))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : (R(), ie(y(Fe), {
                key: "arrow-down",
                class: L(y(he)),
                onClick: ae[0] || (ae[0] = Le((ve) => be(), ["stop"]))
              }, {
                default: Y(() => [
                  K(y(Gu))
                ]),
                _: 1
              }, 8, ["class"]))
            ]),
            _: 1
          }, 8, ["modelValue", "placeholder", "readonly", "disabled", "size", "class", "tabindex"]),
          y(q) ? (R(), V("div", {
            key: 0,
            ref_key: "tagWrapper",
            ref: g,
            class: L(y(a).e("tags"))
          }, [
            (R(!0), V(Tt, null, oi(k.value, (ve) => (R(), ie(y(jg), {
              key: ve.key,
              type: J.tagType,
              size: y(N),
              hit: ve.hitState,
              closable: ve.closable,
              "disable-transitions": "",
              onClose: (Ue) => zt(ve)
            }, {
              default: Y(() => [
                ve.isCollapseTag === !1 ? (R(), V("span", MW, xe(ve.text), 1)) : (R(), ie(y(Bo), {
                  key: 1,
                  disabled: O.value || !J.collapseTagsTooltip,
                  "fallback-placements": ["bottom", "top", "right", "left"],
                  placement: "bottom",
                  effect: "light"
                }, {
                  default: Y(() => [
                    Z("span", null, xe(ve.text), 1)
                  ]),
                  content: Y(() => [
                    Z("div", {
                      class: L(y(a).e("collapse-tags"))
                    }, [
                      (R(!0), V(Tt, null, oi(E.value.slice(J.maxCollapseTags), (Ue, Zt) => (R(), V("div", {
                        key: Zt,
                        class: L(y(a).e("collapse-tag"))
                      }, [
                        (R(), ie(y(jg), {
                          key: Ue.key,
                          class: "in-tooltip",
                          type: J.tagType,
                          size: y(N),
                          hit: Ue.hitState,
                          closable: Ue.closable,
                          "disable-transitions": "",
                          onClose: (Sn) => zt(Ue)
                        }, {
                          default: Y(() => [
                            Z("span", null, xe(Ue.text), 1)
                          ]),
                          _: 2
                        }, 1032, ["type", "size", "hit", "closable", "onClose"]))
                      ], 2))), 128))
                    ], 2)
                  ]),
                  _: 2
                }, 1032, ["disabled"]))
              ]),
              _: 2
            }, 1032, ["type", "size", "hit", "closable", "onClose"]))), 128)),
            J.filterable && !y(B) ? it((R(), V("input", {
              key: 0,
              "onUpdate:modelValue": ae[2] || (ae[2] = (ve) => C.value = ve),
              type: "text",
              class: L(y(a).e("search-input")),
              placeholder: y(W) ? "" : y(I),
              onInput: ae[3] || (ae[3] = (ve) => Te(C.value, ve)),
              onClick: ae[4] || (ae[4] = Le((ve) => be(!0), ["stop"])),
              onKeydown: Ut(Ke, ["delete"]),
              onCompositionstart: un,
              onCompositionupdate: un,
              onCompositionend: un,
              onFocus: Dt,
              onBlur: ti
            }, null, 42, RW)), [
              [r1, C.value]
            ]) : G("v-if", !0)
          ], 2)) : G("v-if", !0)
        ], 38)), [
          [y(Sf), () => be(!1), y(pe)]
        ])
      ]),
      content: Y(() => [
        it(K(y(kW), {
          ref_key: "cascaderPanelRef",
          ref: m,
          modelValue: y(U),
          "onUpdate:modelValue": ae[8] || (ae[8] = (ve) => Fi(U) ? U.value = ve : null),
          options: J.options,
          props: i.props,
          border: !1,
          "render-label": J.$slots.default,
          onExpandChange: ds,
          onClose: ae[9] || (ae[9] = (ve) => J.$nextTick(() => be(!1)))
        }, null, 8, ["modelValue", "options", "props", "render-label"]), [
          [Qt, !w.value]
        ]),
        J.filterable ? it((R(), ie(y(wf), {
          key: 0,
          ref_key: "suggestionPanel",
          ref: v,
          tag: "ul",
          class: L(y(a).e("suggestion-panel")),
          "view-class": y(a).e("suggestion-list"),
          onKeydown: ge
        }, {
          default: Y(() => [
            M.value.length ? (R(!0), V(Tt, { key: 0 }, oi(M.value, (ve) => (R(), V("li", {
              key: ve.uid,
              class: L([
                y(a).e("suggestion-item"),
                y(a).is("checked", ve.checked)
              ]),
              tabindex: -1,
              onClick: (Ue) => ei(ve)
            }, [
              Z("span", null, xe(ve.text), 1),
              ve.checked ? (R(), ie(y(Fe), { key: 0 }, {
                default: Y(() => [
                  K(y(Jm))
                ]),
                _: 1
              })) : G("v-if", !0)
            ], 10, NW))), 128)) : de(J.$slots, "empty", { key: 1 }, () => [
              Z("li", {
                class: L(y(a).e("empty-text"))
              }, xe(y(u)("el.cascader.noMatch")), 3)
            ])
          ]),
          _: 3
        }, 8, ["class", "view-class"])), [
          [Qt, w.value]
        ]) : G("v-if", !0)
      ]),
      _: 3
    }, 8, ["visible", "teleported", "popper-class", "transition"]));
  }
});
var Jp = /* @__PURE__ */ Ce(IW, [["__file", "cascader.vue"]]);
Jp.install = (n) => {
  n.component(Jp.name, Jp);
};
const BW = Jp, mUe = BW, bC = (n) => tt(n) || bt(n) || xt(n), QW = Ee({
  accordion: Boolean,
  modelValue: {
    type: ce([Array, String, Number]),
    default: () => Ys([])
  }
}), zW = {
  [ot]: bC,
  [Un]: bC
}, $T = Symbol("collapseContextKey"), jW = (n, e) => {
  const t = D(wd(n.modelValue)), i = (r) => {
    t.value = r;
    const o = n.accordion ? t.value[0] : t.value;
    e(ot, o), e(Un, o);
  }, s = (r) => {
    if (n.accordion)
      i([t.value[0] === r ? "" : r]);
    else {
      const o = [...t.value], l = o.indexOf(r);
      l > -1 ? o.splice(l, 1) : o.push(r), i(o);
    }
  };
  return ne(() => n.modelValue, () => t.value = wd(n.modelValue), { deep: !0 }), ft($T, {
    activeNames: t,
    handleItemClick: s
  }), {
    activeNames: t,
    setActiveNames: i
  };
}, VW = () => {
  const n = me("collapse");
  return {
    rootKls: $(() => n.b())
  };
}, FW = F({
  name: "ElCollapse"
}), ZW = /* @__PURE__ */ F({
  ...FW,
  props: QW,
  emits: zW,
  setup(n, { expose: e, emit: t }) {
    const i = n, { activeNames: s, setActiveNames: r } = jW(i, t), { rootKls: o } = VW();
    return e({
      activeNames: s,
      setActiveNames: r
    }), (l, a) => (R(), V("div", {
      class: L(y(o))
    }, [
      de(l.$slots, "default")
    ], 2));
  }
});
var qW = /* @__PURE__ */ Ce(ZW, [["__file", "collapse.vue"]]);
const WW = F({
  name: "ElCollapseTransition"
}), HW = /* @__PURE__ */ F({
  ...WW,
  setup(n) {
    const e = me("collapse-transition"), t = (s) => {
      s.style.maxHeight = "", s.style.overflow = s.dataset.oldOverflow, s.style.paddingTop = s.dataset.oldPaddingTop, s.style.paddingBottom = s.dataset.oldPaddingBottom;
    }, i = {
      beforeEnter(s) {
        s.dataset || (s.dataset = {}), s.dataset.oldPaddingTop = s.style.paddingTop, s.dataset.oldPaddingBottom = s.style.paddingBottom, s.style.height && (s.dataset.elExistsHeight = s.style.height), s.style.maxHeight = 0, s.style.paddingTop = 0, s.style.paddingBottom = 0;
      },
      enter(s) {
        requestAnimationFrame(() => {
          s.dataset.oldOverflow = s.style.overflow, s.dataset.elExistsHeight ? s.style.maxHeight = s.dataset.elExistsHeight : s.scrollHeight !== 0 ? s.style.maxHeight = `${s.scrollHeight}px` : s.style.maxHeight = 0, s.style.paddingTop = s.dataset.oldPaddingTop, s.style.paddingBottom = s.dataset.oldPaddingBottom, s.style.overflow = "hidden";
        });
      },
      afterEnter(s) {
        s.style.maxHeight = "", s.style.overflow = s.dataset.oldOverflow;
      },
      enterCancelled(s) {
        t(s);
      },
      beforeLeave(s) {
        s.dataset || (s.dataset = {}), s.dataset.oldPaddingTop = s.style.paddingTop, s.dataset.oldPaddingBottom = s.style.paddingBottom, s.dataset.oldOverflow = s.style.overflow, s.style.maxHeight = `${s.scrollHeight}px`, s.style.overflow = "hidden";
      },
      leave(s) {
        s.scrollHeight !== 0 && (s.style.maxHeight = 0, s.style.paddingTop = 0, s.style.paddingBottom = 0);
      },
      afterLeave(s) {
        t(s);
      },
      leaveCancelled(s) {
        t(s);
      }
    };
    return (s, r) => (R(), ie(mo, ki({
      name: y(e).b()
    }, V4(i)), {
      default: Y(() => [
        de(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["name"]));
  }
});
var eg = /* @__PURE__ */ Ce(HW, [["__file", "collapse-transition.vue"]]);
eg.install = (n) => {
  n.component(eg.name, eg);
};
const TT = eg, XW = Ee({
  title: {
    type: String,
    default: ""
  },
  name: {
    type: ce([String, Number]),
    default: void 0
  },
  disabled: Boolean
}), YW = (n) => {
  const e = ke($T), { namespace: t } = me("collapse"), i = D(!1), s = D(!1), r = I1(), o = $(() => r.current++), l = $(() => {
    var d;
    return (d = n.name) != null ? d : `${t.value}-id-${r.prefix}-${y(o)}`;
  }), a = $(() => e == null ? void 0 : e.activeNames.value.includes(y(l)));
  return {
    focusing: i,
    id: o,
    isActive: a,
    handleFocus: () => {
      setTimeout(() => {
        s.value ? s.value = !1 : i.value = !0;
      }, 50);
    },
    handleHeaderClick: () => {
      n.disabled || (e == null || e.handleItemClick(y(l)), i.value = !1, s.value = !0);
    },
    handleEnterClick: () => {
      e == null || e.handleItemClick(y(l));
    }
  };
}, UW = (n, { focusing: e, isActive: t, id: i }) => {
  const s = me("collapse"), r = $(() => [
    s.b("item"),
    s.is("active", y(t)),
    s.is("disabled", n.disabled)
  ]), o = $(() => [
    s.be("item", "header"),
    s.is("active", y(t)),
    { focusing: y(e) && !n.disabled }
  ]), l = $(() => [
    s.be("item", "arrow"),
    s.is("active", y(t))
  ]), a = $(() => s.be("item", "wrap")), c = $(() => s.be("item", "content")), u = $(() => s.b(`content-${y(i)}`)), h = $(() => s.b(`head-${y(i)}`));
  return {
    arrowKls: l,
    headKls: o,
    rootKls: r,
    itemWrapperKls: a,
    itemContentKls: c,
    scopedContentId: u,
    scopedHeadId: h
  };
}, GW = ["id", "aria-expanded", "aria-controls", "aria-describedby", "tabindex"], KW = ["id", "aria-hidden", "aria-labelledby"], JW = F({
  name: "ElCollapseItem"
}), eH = /* @__PURE__ */ F({
  ...JW,
  props: XW,
  setup(n, { expose: e }) {
    const t = n, {
      focusing: i,
      id: s,
      isActive: r,
      handleFocus: o,
      handleHeaderClick: l,
      handleEnterClick: a
    } = YW(t), {
      arrowKls: c,
      headKls: u,
      rootKls: h,
      itemWrapperKls: d,
      itemContentKls: f,
      scopedContentId: p,
      scopedHeadId: g
    } = UW(t, { focusing: i, isActive: r, id: s });
    return e({
      isActive: r
    }), (m, v) => (R(), V("div", {
      class: L(y(h))
    }, [
      Z("button", {
        id: y(g),
        class: L(y(u)),
        "aria-expanded": y(r),
        "aria-controls": y(p),
        "aria-describedby": y(p),
        tabindex: m.disabled ? -1 : 0,
        type: "button",
        onClick: v[0] || (v[0] = (...O) => y(l) && y(l)(...O)),
        onKeydown: v[1] || (v[1] = Ut(Le((...O) => y(a) && y(a)(...O), ["stop", "prevent"]), ["space", "enter"])),
        onFocus: v[2] || (v[2] = (...O) => y(o) && y(o)(...O)),
        onBlur: v[3] || (v[3] = (O) => i.value = !1)
      }, [
        de(m.$slots, "title", {}, () => [
          Xn(xe(m.title), 1)
        ]),
        K(y(Fe), {
          class: L(y(c))
        }, {
          default: Y(() => [
            K(y(ec))
          ]),
          _: 1
        }, 8, ["class"])
      ], 42, GW),
      K(y(TT), null, {
        default: Y(() => [
          it(Z("div", {
            id: y(p),
            role: "region",
            class: L(y(d)),
            "aria-hidden": !y(r),
            "aria-labelledby": y(g)
          }, [
            Z("div", {
              class: L(y(f))
            }, [
              de(m.$slots, "default")
            ], 2)
          ], 10, KW), [
            [Qt, y(r)]
          ])
        ]),
        _: 3
      })
    ], 2));
  }
});
var _T = /* @__PURE__ */ Ce(eH, [["__file", "collapse-item.vue"]]);
const vUe = Ft(qW, {
  CollapseItem: _T
}), bUe = Er(_T), tH = Ee({
  color: {
    type: ce(Object),
    required: !0
  },
  vertical: {
    type: Boolean,
    default: !1
  }
});
let gv = !1;
function Ed(n, e) {
  if (!vt)
    return;
  const t = function(r) {
    var o;
    (o = e.drag) == null || o.call(e, r);
  }, i = function(r) {
    var o;
    document.removeEventListener("mousemove", t), document.removeEventListener("mouseup", i), document.removeEventListener("touchmove", t), document.removeEventListener("touchend", i), document.onselectstart = null, document.ondragstart = null, gv = !1, (o = e.end) == null || o.call(e, r);
  }, s = function(r) {
    var o;
    gv || (r.preventDefault(), document.onselectstart = () => !1, document.ondragstart = () => !1, document.addEventListener("mousemove", t), document.addEventListener("mouseup", i), document.addEventListener("touchmove", t), document.addEventListener("touchend", i), gv = !0, (o = e.start) == null || o.call(e, r));
  };
  n.addEventListener("mousedown", s), n.addEventListener("touchstart", s);
}
const nH = (n) => {
  const e = Xe(), t = Ln(), i = Ln();
  function s(o) {
    o.target !== t.value && r(o);
  }
  function r(o) {
    if (!i.value || !t.value)
      return;
    const a = e.vnode.el.getBoundingClientRect(), { clientX: c, clientY: u } = S1(o);
    if (n.vertical) {
      let h = u - a.top;
      h = Math.max(t.value.offsetHeight / 2, h), h = Math.min(h, a.height - t.value.offsetHeight / 2), n.color.set("alpha", Math.round((h - t.value.offsetHeight / 2) / (a.height - t.value.offsetHeight) * 100));
    } else {
      let h = c - a.left;
      h = Math.max(t.value.offsetWidth / 2, h), h = Math.min(h, a.width - t.value.offsetWidth / 2), n.color.set("alpha", Math.round((h - t.value.offsetWidth / 2) / (a.width - t.value.offsetWidth) * 100));
    }
  }
  return {
    thumb: t,
    bar: i,
    handleDrag: r,
    handleClick: s
  };
}, iH = (n, {
  bar: e,
  thumb: t,
  handleDrag: i
}) => {
  const s = Xe(), r = me("color-alpha-slider"), o = D(0), l = D(0), a = D();
  function c() {
    if (!t.value || n.vertical)
      return 0;
    const O = s.vnode.el, b = n.color.get("alpha");
    return O ? Math.round(b * (O.offsetWidth - t.value.offsetWidth / 2) / 100) : 0;
  }
  function u() {
    if (!t.value)
      return 0;
    const O = s.vnode.el;
    if (!n.vertical)
      return 0;
    const b = n.color.get("alpha");
    return O ? Math.round(b * (O.offsetHeight - t.value.offsetHeight / 2) / 100) : 0;
  }
  function h() {
    if (n.color && n.color.value) {
      const { r: O, g: b, b: w } = n.color.toRgb();
      return `linear-gradient(to right, rgba(${O}, ${b}, ${w}, 0) 0%, rgba(${O}, ${b}, ${w}, 1) 100%)`;
    }
    return "";
  }
  function d() {
    o.value = c(), l.value = u(), a.value = h();
  }
  qe(() => {
    if (!e.value || !t.value)
      return;
    const O = {
      drag: (b) => {
        i(b);
      },
      end: (b) => {
        i(b);
      }
    };
    Ed(e.value, O), Ed(t.value, O), d();
  }), ne(() => n.color.get("alpha"), () => d()), ne(() => n.color.value, () => d());
  const f = $(() => [r.b(), r.is("vertical", n.vertical)]), p = $(() => r.e("bar")), g = $(() => r.e("thumb")), m = $(() => ({ background: a.value })), v = $(() => ({
    left: cs(o.value),
    top: cs(l.value)
  }));
  return { rootKls: f, barKls: p, barStyle: m, thumbKls: g, thumbStyle: v, update: d };
}, sH = "ElColorAlphaSlider", rH = F({
  name: sH
}), oH = /* @__PURE__ */ F({
  ...rH,
  props: tH,
  setup(n, { expose: e }) {
    const t = n, { bar: i, thumb: s, handleDrag: r, handleClick: o } = nH(t), { rootKls: l, barKls: a, barStyle: c, thumbKls: u, thumbStyle: h, update: d } = iH(t, {
      bar: i,
      thumb: s,
      handleDrag: r
    });
    return e({
      update: d,
      bar: i,
      thumb: s
    }), (f, p) => (R(), V("div", {
      class: L(y(l))
    }, [
      Z("div", {
        ref_key: "bar",
        ref: i,
        class: L(y(a)),
        style: Qe(y(c)),
        onClick: p[0] || (p[0] = (...g) => y(o) && y(o)(...g))
      }, null, 6),
      Z("div", {
        ref_key: "thumb",
        ref: s,
        class: L(y(u)),
        style: Qe(y(h))
      }, null, 6)
    ], 2));
  }
});
var lH = /* @__PURE__ */ Ce(oH, [["__file", "alpha-slider.vue"]]);
const aH = F({
  name: "ElColorHueSlider",
  props: {
    color: {
      type: Object,
      required: !0
    },
    vertical: Boolean
  },
  setup(n) {
    const e = me("color-hue-slider"), t = Xe(), i = D(), s = D(), r = D(0), o = D(0), l = $(() => n.color.get("hue"));
    ne(() => l.value, () => {
      d();
    });
    function a(f) {
      f.target !== i.value && c(f);
    }
    function c(f) {
      if (!s.value || !i.value)
        return;
      const g = t.vnode.el.getBoundingClientRect(), { clientX: m, clientY: v } = S1(f);
      let O;
      if (n.vertical) {
        let b = v - g.top;
        b = Math.min(b, g.height - i.value.offsetHeight / 2), b = Math.max(i.value.offsetHeight / 2, b), O = Math.round((b - i.value.offsetHeight / 2) / (g.height - i.value.offsetHeight) * 360);
      } else {
        let b = m - g.left;
        b = Math.min(b, g.width - i.value.offsetWidth / 2), b = Math.max(i.value.offsetWidth / 2, b), O = Math.round((b - i.value.offsetWidth / 2) / (g.width - i.value.offsetWidth) * 360);
      }
      n.color.set("hue", O);
    }
    function u() {
      if (!i.value)
        return 0;
      const f = t.vnode.el;
      if (n.vertical)
        return 0;
      const p = n.color.get("hue");
      return f ? Math.round(p * (f.offsetWidth - i.value.offsetWidth / 2) / 360) : 0;
    }
    function h() {
      if (!i.value)
        return 0;
      const f = t.vnode.el;
      if (!n.vertical)
        return 0;
      const p = n.color.get("hue");
      return f ? Math.round(p * (f.offsetHeight - i.value.offsetHeight / 2) / 360) : 0;
    }
    function d() {
      r.value = u(), o.value = h();
    }
    return qe(() => {
      if (!s.value || !i.value)
        return;
      const f = {
        drag: (p) => {
          c(p);
        },
        end: (p) => {
          c(p);
        }
      };
      Ed(s.value, f), Ed(i.value, f), d();
    }), {
      bar: s,
      thumb: i,
      thumbLeft: r,
      thumbTop: o,
      hueValue: l,
      handleClick: a,
      update: d,
      ns: e
    };
  }
});
function cH(n, e, t, i, s, r) {
  return R(), V("div", {
    class: L([n.ns.b(), n.ns.is("vertical", n.vertical)])
  }, [
    Z("div", {
      ref: "bar",
      class: L(n.ns.e("bar")),
      onClick: e[0] || (e[0] = (...o) => n.handleClick && n.handleClick(...o))
    }, null, 2),
    Z("div", {
      ref: "thumb",
      class: L(n.ns.e("thumb")),
      style: Qe({
        left: n.thumbLeft + "px",
        top: n.thumbTop + "px"
      })
    }, null, 6)
  ], 2);
}
var uH = /* @__PURE__ */ Ce(aH, [["render", cH], ["__file", "hue-slider.vue"]]);
const hH = Ee({
  modelValue: String,
  id: String,
  showAlpha: Boolean,
  colorFormat: String,
  disabled: Boolean,
  size: Ts,
  popperClass: {
    type: String,
    default: ""
  },
  label: {
    type: String,
    default: void 0
  },
  tabindex: {
    type: [String, Number],
    default: 0
  },
  predefine: {
    type: ce(Array)
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), dH = {
  [ot]: (n) => bt(n) || Ri(n),
  [Un]: (n) => bt(n) || Ri(n),
  activeChange: (n) => bt(n) || Ri(n),
  focus: (n) => n instanceof FocusEvent,
  blur: (n) => n instanceof FocusEvent
}, MT = Symbol("colorPickerContextKey"), yC = function(n, e, t) {
  return [
    n,
    e * t / ((n = (2 - e) * t) < 1 ? n : 2 - n) || 0,
    n / 2
  ];
}, fH = function(n) {
  return typeof n == "string" && n.includes(".") && Number.parseFloat(n) === 1;
}, pH = function(n) {
  return typeof n == "string" && n.includes("%");
}, Ic = function(n, e) {
  fH(n) && (n = "100%");
  const t = pH(n);
  return n = Math.min(e, Math.max(0, Number.parseFloat(`${n}`))), t && (n = Number.parseInt(`${n * e}`, 10) / 100), Math.abs(n - e) < 1e-6 ? 1 : n % e / Number.parseFloat(e);
}, OC = {
  10: "A",
  11: "B",
  12: "C",
  13: "D",
  14: "E",
  15: "F"
}, tg = (n) => {
  n = Math.min(Math.round(n), 255);
  const e = Math.floor(n / 16), t = n % 16;
  return `${OC[e] || e}${OC[t] || t}`;
}, wC = function({ r: n, g: e, b: t }) {
  return Number.isNaN(+n) || Number.isNaN(+e) || Number.isNaN(+t) ? "" : `#${tg(n)}${tg(e)}${tg(t)}`;
}, mv = {
  A: 10,
  B: 11,
  C: 12,
  D: 13,
  E: 14,
  F: 15
}, ea = function(n) {
  return n.length === 2 ? (mv[n[0].toUpperCase()] || +n[0]) * 16 + (mv[n[1].toUpperCase()] || +n[1]) : mv[n[1].toUpperCase()] || +n[1];
}, gH = function(n, e, t) {
  e = e / 100, t = t / 100;
  let i = e;
  const s = Math.max(t, 0.01);
  t *= 2, e *= t <= 1 ? t : 2 - t, i *= s <= 1 ? s : 2 - s;
  const r = (t + e) / 2, o = t === 0 ? 2 * i / (s + i) : 2 * e / (t + e);
  return {
    h: n,
    s: o * 100,
    v: r * 100
  };
}, xC = (n, e, t) => {
  n = Ic(n, 255), e = Ic(e, 255), t = Ic(t, 255);
  const i = Math.max(n, e, t), s = Math.min(n, e, t);
  let r;
  const o = i, l = i - s, a = i === 0 ? 0 : l / i;
  if (i === s)
    r = 0;
  else {
    switch (i) {
      case n: {
        r = (e - t) / l + (e < t ? 6 : 0);
        break;
      }
      case e: {
        r = (t - n) / l + 2;
        break;
      }
      case t: {
        r = (n - e) / l + 4;
        break;
      }
    }
    r /= 6;
  }
  return { h: r * 360, s: a * 100, v: o * 100 };
}, yh = function(n, e, t) {
  n = Ic(n, 360) * 6, e = Ic(e, 100), t = Ic(t, 100);
  const i = Math.floor(n), s = n - i, r = t * (1 - e), o = t * (1 - s * e), l = t * (1 - (1 - s) * e), a = i % 6, c = [t, o, r, r, l, t][a], u = [l, t, t, o, r, r][a], h = [r, r, l, t, t, o][a];
  return {
    r: Math.round(c * 255),
    g: Math.round(u * 255),
    b: Math.round(h * 255)
  };
};
let Yh = class {
  constructor(e = {}) {
    this._hue = 0, this._saturation = 100, this._value = 100, this._alpha = 100, this.enableAlpha = !1, this.format = "hex", this.value = "";
    for (const t in e)
      Hi(e, t) && (this[t] = e[t]);
    e.value ? this.fromString(e.value) : this.doOnChange();
  }
  set(e, t) {
    if (arguments.length === 1 && typeof e == "object") {
      for (const i in e)
        Hi(e, i) && this.set(i, e[i]);
      return;
    }
    this[`_${e}`] = t, this.doOnChange();
  }
  get(e) {
    return e === "alpha" ? Math.floor(this[`_${e}`]) : this[`_${e}`];
  }
  toRgb() {
    return yh(this._hue, this._saturation, this._value);
  }
  fromString(e) {
    if (!e) {
      this._hue = 0, this._saturation = 100, this._value = 100, this.doOnChange();
      return;
    }
    const t = (i, s, r) => {
      this._hue = Math.max(0, Math.min(360, i)), this._saturation = Math.max(0, Math.min(100, s)), this._value = Math.max(0, Math.min(100, r)), this.doOnChange();
    };
    if (e.includes("hsl")) {
      const i = e.replace(/hsla|hsl|\(|\)/gm, "").split(/\s|,/g).filter((s) => s !== "").map((s, r) => r > 2 ? Number.parseFloat(s) : Number.parseInt(s, 10));
      if (i.length === 4 ? this._alpha = Number.parseFloat(i[3]) * 100 : i.length === 3 && (this._alpha = 100), i.length >= 3) {
        const { h: s, s: r, v: o } = gH(i[0], i[1], i[2]);
        t(s, r, o);
      }
    } else if (e.includes("hsv")) {
      const i = e.replace(/hsva|hsv|\(|\)/gm, "").split(/\s|,/g).filter((s) => s !== "").map((s, r) => r > 2 ? Number.parseFloat(s) : Number.parseInt(s, 10));
      i.length === 4 ? this._alpha = Number.parseFloat(i[3]) * 100 : i.length === 3 && (this._alpha = 100), i.length >= 3 && t(i[0], i[1], i[2]);
    } else if (e.includes("rgb")) {
      const i = e.replace(/rgba|rgb|\(|\)/gm, "").split(/\s|,/g).filter((s) => s !== "").map((s, r) => r > 2 ? Number.parseFloat(s) : Number.parseInt(s, 10));
      if (i.length === 4 ? this._alpha = Number.parseFloat(i[3]) * 100 : i.length === 3 && (this._alpha = 100), i.length >= 3) {
        const { h: s, s: r, v: o } = xC(i[0], i[1], i[2]);
        t(s, r, o);
      }
    } else if (e.includes("#")) {
      const i = e.replace("#", "").trim();
      if (!/^[0-9a-fA-F]{3}$|^[0-9a-fA-F]{6}$|^[0-9a-fA-F]{8}$/.test(i))
        return;
      let s, r, o;
      i.length === 3 ? (s = ea(i[0] + i[0]), r = ea(i[1] + i[1]), o = ea(i[2] + i[2])) : (i.length === 6 || i.length === 8) && (s = ea(i.slice(0, 2)), r = ea(i.slice(2, 4)), o = ea(i.slice(4, 6))), i.length === 8 ? this._alpha = ea(i.slice(6)) / 255 * 100 : (i.length === 3 || i.length === 6) && (this._alpha = 100);
      const { h: l, s: a, v: c } = xC(s, r, o);
      t(l, a, c);
    }
  }
  compare(e) {
    return Math.abs(e._hue - this._hue) < 2 && Math.abs(e._saturation - this._saturation) < 1 && Math.abs(e._value - this._value) < 1 && Math.abs(e._alpha - this._alpha) < 1;
  }
  doOnChange() {
    const { _hue: e, _saturation: t, _value: i, _alpha: s, format: r } = this;
    if (this.enableAlpha)
      switch (r) {
        case "hsl": {
          const o = yC(e, t / 100, i / 100);
          this.value = `hsla(${e}, ${Math.round(o[1] * 100)}%, ${Math.round(o[2] * 100)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hsv": {
          this.value = `hsva(${e}, ${Math.round(t)}%, ${Math.round(i)}%, ${this.get("alpha") / 100})`;
          break;
        }
        case "hex": {
          this.value = `${wC(yh(e, t, i))}${tg(s * 255 / 100)}`;
          break;
        }
        default: {
          const { r: o, g: l, b: a } = yh(e, t, i);
          this.value = `rgba(${o}, ${l}, ${a}, ${this.get("alpha") / 100})`;
        }
      }
    else
      switch (r) {
        case "hsl": {
          const o = yC(e, t / 100, i / 100);
          this.value = `hsl(${e}, ${Math.round(o[1] * 100)}%, ${Math.round(o[2] * 100)}%)`;
          break;
        }
        case "hsv": {
          this.value = `hsv(${e}, ${Math.round(t)}%, ${Math.round(i)}%)`;
          break;
        }
        case "rgb": {
          const { r: o, g: l, b: a } = yh(e, t, i);
          this.value = `rgb(${o}, ${l}, ${a})`;
          break;
        }
        default:
          this.value = wC(yh(e, t, i));
      }
  }
};
const mH = F({
  props: {
    colors: {
      type: Array,
      required: !0
    },
    color: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = me("color-predefine"), { currentColor: t } = ke(MT), i = D(r(n.colors, n.color));
    ne(() => t.value, (o) => {
      const l = new Yh();
      l.fromString(o), i.value.forEach((a) => {
        a.selected = l.compare(a);
      });
    }), Vs(() => {
      i.value = r(n.colors, n.color);
    });
    function s(o) {
      n.color.fromString(n.colors[o]);
    }
    function r(o, l) {
      return o.map((a) => {
        const c = new Yh();
        return c.enableAlpha = !0, c.format = "rgba", c.fromString(a), c.selected = c.value === l.value, c;
      });
    }
    return {
      rgbaColors: i,
      handleSelect: s,
      ns: e
    };
  }
}), vH = ["onClick"];
function bH(n, e, t, i, s, r) {
  return R(), V("div", {
    class: L(n.ns.b())
  }, [
    Z("div", {
      class: L(n.ns.e("colors"))
    }, [
      (R(!0), V(Tt, null, oi(n.rgbaColors, (o, l) => (R(), V("div", {
        key: n.colors[l],
        class: L([
          n.ns.e("color-selector"),
          n.ns.is("alpha", o._alpha < 100),
          { selected: o.selected }
        ]),
        onClick: (a) => n.handleSelect(l)
      }, [
        Z("div", {
          style: Qe({ backgroundColor: o.value })
        }, null, 4)
      ], 10, vH))), 128))
    ], 2)
  ], 2);
}
var yH = /* @__PURE__ */ Ce(mH, [["render", bH], ["__file", "predefine.vue"]]);
const OH = F({
  name: "ElSlPanel",
  props: {
    color: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = me("color-svpanel"), t = Xe(), i = D(0), s = D(0), r = D("hsl(0, 100%, 50%)"), o = $(() => {
      const c = n.color.get("hue"), u = n.color.get("value");
      return { hue: c, value: u };
    });
    function l() {
      const c = n.color.get("saturation"), u = n.color.get("value"), h = t.vnode.el, { clientWidth: d, clientHeight: f } = h;
      s.value = c * d / 100, i.value = (100 - u) * f / 100, r.value = `hsl(${n.color.get("hue")}, 100%, 50%)`;
    }
    function a(c) {
      const h = t.vnode.el.getBoundingClientRect(), { clientX: d, clientY: f } = S1(c);
      let p = d - h.left, g = f - h.top;
      p = Math.max(0, p), p = Math.min(p, h.width), g = Math.max(0, g), g = Math.min(g, h.height), s.value = p, i.value = g, n.color.set({
        saturation: p / h.width * 100,
        value: 100 - g / h.height * 100
      });
    }
    return ne(() => o.value, () => {
      l();
    }), qe(() => {
      Ed(t.vnode.el, {
        drag: (c) => {
          a(c);
        },
        end: (c) => {
          a(c);
        }
      }), l();
    }), {
      cursorTop: i,
      cursorLeft: s,
      background: r,
      colorValue: o,
      handleDrag: a,
      update: l,
      ns: e
    };
  }
}), wH = /* @__PURE__ */ Z("div", null, null, -1), xH = [
  wH
];
function SH(n, e, t, i, s, r) {
  return R(), V("div", {
    class: L(n.ns.b()),
    style: Qe({
      backgroundColor: n.background
    })
  }, [
    Z("div", {
      class: L(n.ns.e("white"))
    }, null, 2),
    Z("div", {
      class: L(n.ns.e("black"))
    }, null, 2),
    Z("div", {
      class: L(n.ns.e("cursor")),
      style: Qe({
        top: n.cursorTop + "px",
        left: n.cursorLeft + "px"
      })
    }, xH, 6)
  ], 6);
}
var CH = /* @__PURE__ */ Ce(OH, [["render", SH], ["__file", "sv-panel.vue"]]);
const kH = ["onKeydown"], PH = ["id", "aria-label", "aria-labelledby", "aria-description", "aria-disabled", "tabindex"], EH = F({
  name: "ElColorPicker"
}), AH = /* @__PURE__ */ F({
  ...EH,
  props: hH,
  emits: dH,
  setup(n, { expose: e, emit: t }) {
    const i = n, { t: s } = mn(), r = me("color"), { formItem: o } = _s(), l = Xi(), a = er(), { inputId: c, isLabeledByFormItem: u } = Hl(i, {
      formItemContext: o
    }), h = D(), d = D(), f = D(), p = D(), g = D(), m = D(), {
      isFocused: v,
      handleFocus: O,
      handleBlur: b
    } = n0(g, {
      beforeBlur(fe) {
        var Ae;
        return (Ae = p.value) == null ? void 0 : Ae.isFocusInsideContent(fe);
      },
      afterBlur() {
        A(!1), H();
      }
    }), w = (fe) => {
      if (a.value)
        return be();
      O(fe);
    };
    let x = !0;
    const S = Gt(new Yh({
      enableAlpha: i.showAlpha,
      format: i.colorFormat || "",
      value: i.modelValue
    })), C = D(!1), k = D(!1), E = D(""), M = $(() => !i.modelValue && !k.value ? "transparent" : P(S, i.showAlpha)), _ = $(() => !i.modelValue && !k.value ? "" : S.value), T = $(() => u.value ? void 0 : i.label || s("el.colorpicker.defaultLabel")), B = $(() => u.value ? o == null ? void 0 : o.labelId : void 0), I = $(() => [
      r.b("picker"),
      r.is("disabled", a.value),
      r.bm("picker", l.value),
      r.is("focused", v.value)
    ]);
    function P(fe, Ae) {
      if (!(fe instanceof Yh))
        throw new TypeError("color should be instance of _color Class");
      const { r: ut, g: zt, b: Kn } = fe.toRgb();
      return Ae ? `rgba(${ut}, ${zt}, ${Kn}, ${fe.get("alpha") / 100})` : `rgb(${ut}, ${zt}, ${Kn})`;
    }
    function A(fe) {
      C.value = fe;
    }
    const N = Do(A, 100, { leading: !0 });
    function q() {
      a.value || A(!0);
    }
    function j() {
      N(!1), H();
    }
    function H() {
      $e(() => {
        i.modelValue ? S.fromString(i.modelValue) : (S.value = "", $e(() => {
          k.value = !1;
        }));
      });
    }
    function oe() {
      a.value || N(!C.value);
    }
    function te() {
      S.fromString(E.value);
    }
    function W() {
      const fe = S.value;
      t(ot, fe), t("change", fe), i.validateEvent && (o == null || o.validate("change").catch((Ae) => pt(Ae))), N(!1), $e(() => {
        const Ae = new Yh({
          enableAlpha: i.showAlpha,
          format: i.colorFormat || "",
          value: i.modelValue
        });
        S.compare(Ae) || H();
      });
    }
    function U() {
      N(!1), t(ot, null), t("change", null), i.modelValue !== null && i.validateEvent && (o == null || o.validate("change").catch((fe) => pt(fe))), H();
    }
    function le(fe) {
      if (C.value && (j(), v.value)) {
        const Ae = new FocusEvent("focus", fe);
        b(Ae);
      }
    }
    function he(fe) {
      fe.preventDefault(), fe.stopPropagation(), A(!1), H();
    }
    function ee(fe) {
      switch (fe.code) {
        case dt.enter:
        case dt.space:
          fe.preventDefault(), fe.stopPropagation(), q(), m.value.focus();
          break;
        case dt.esc:
          he(fe);
          break;
      }
    }
    function pe() {
      g.value.focus();
    }
    function be() {
      g.value.blur();
    }
    return qe(() => {
      i.modelValue && (E.value = _.value);
    }), ne(() => i.modelValue, (fe) => {
      fe ? fe && fe !== S.value && (x = !1, S.fromString(fe)) : k.value = !1;
    }), ne(() => _.value, (fe) => {
      E.value = fe, x && t("activeChange", fe), x = !0;
    }), ne(() => S.value, () => {
      !i.modelValue && !k.value && (k.value = !0);
    }), ne(() => C.value, () => {
      $e(() => {
        var fe, Ae, ut;
        (fe = h.value) == null || fe.update(), (Ae = d.value) == null || Ae.update(), (ut = f.value) == null || ut.update();
      });
    }), ft(MT, {
      currentColor: _
    }), e({
      color: S,
      show: q,
      hide: j,
      focus: pe,
      blur: be
    }), (fe, Ae) => (R(), ie(y(Bo), {
      ref_key: "popper",
      ref: p,
      visible: C.value,
      "show-arrow": !1,
      "fallback-placements": ["bottom", "top", "right", "left"],
      offset: 0,
      "gpu-acceleration": !1,
      "popper-class": [y(r).be("picker", "panel"), y(r).b("dropdown"), fe.popperClass],
      "stop-popper-mouse-event": !1,
      effect: "light",
      trigger: "click",
      transition: `${y(r).namespace.value}-zoom-in-top`,
      persistent: "",
      onHide: Ae[2] || (Ae[2] = (ut) => A(!1))
    }, {
      content: Y(() => [
        it((R(), V("div", {
          onKeydown: Ut(he, ["esc"])
        }, [
          Z("div", {
            class: L(y(r).be("dropdown", "main-wrapper"))
          }, [
            K(uH, {
              ref_key: "hue",
              ref: h,
              class: "hue-slider",
              color: y(S),
              vertical: ""
            }, null, 8, ["color"]),
            K(CH, {
              ref_key: "sv",
              ref: d,
              color: y(S)
            }, null, 8, ["color"])
          ], 2),
          fe.showAlpha ? (R(), ie(lH, {
            key: 0,
            ref_key: "alpha",
            ref: f,
            color: y(S)
          }, null, 8, ["color"])) : G("v-if", !0),
          fe.predefine ? (R(), ie(yH, {
            key: 1,
            ref: "predefine",
            color: y(S),
            colors: fe.predefine
          }, null, 8, ["color", "colors"])) : G("v-if", !0),
          Z("div", {
            class: L(y(r).be("dropdown", "btns"))
          }, [
            Z("span", {
              class: L(y(r).be("dropdown", "value"))
            }, [
              K(y(ic), {
                ref_key: "inputRef",
                ref: m,
                modelValue: E.value,
                "onUpdate:modelValue": Ae[0] || (Ae[0] = (ut) => E.value = ut),
                "validate-event": !1,
                size: "small",
                onKeyup: Ut(te, ["enter"]),
                onBlur: te
              }, null, 8, ["modelValue", "onKeyup"])
            ], 2),
            K(y(Qa), {
              class: L(y(r).be("dropdown", "link-btn")),
              text: "",
              size: "small",
              onClick: U
            }, {
              default: Y(() => [
                Xn(xe(y(s)("el.colorpicker.clear")), 1)
              ]),
              _: 1
            }, 8, ["class"]),
            K(y(Qa), {
              plain: "",
              size: "small",
              class: L(y(r).be("dropdown", "btn")),
              onClick: W
            }, {
              default: Y(() => [
                Xn(xe(y(s)("el.colorpicker.confirm")), 1)
              ]),
              _: 1
            }, 8, ["class"])
          ], 2)
        ], 40, kH)), [
          [y(Sf), le]
        ])
      ]),
      default: Y(() => [
        Z("div", {
          id: y(c),
          ref_key: "triggerRef",
          ref: g,
          class: L(y(I)),
          role: "button",
          "aria-label": y(T),
          "aria-labelledby": y(B),
          "aria-description": y(s)("el.colorpicker.description", { color: fe.modelValue || "" }),
          "aria-disabled": y(a),
          tabindex: y(a) ? -1 : fe.tabindex,
          onKeydown: ee,
          onFocus: w,
          onBlur: Ae[1] || (Ae[1] = (...ut) => y(b) && y(b)(...ut))
        }, [
          y(a) ? (R(), V("div", {
            key: 0,
            class: L(y(r).be("picker", "mask"))
          }, null, 2)) : G("v-if", !0),
          Z("div", {
            class: L(y(r).be("picker", "trigger")),
            onClick: oe
          }, [
            Z("span", {
              class: L([y(r).be("picker", "color"), y(r).is("alpha", fe.showAlpha)])
            }, [
              Z("span", {
                class: L(y(r).be("picker", "color-inner")),
                style: Qe({
                  backgroundColor: y(M)
                })
              }, [
                it(K(y(Fe), {
                  class: L([y(r).be("picker", "icon"), y(r).is("icon-arrow-down")])
                }, {
                  default: Y(() => [
                    K(y(Gu))
                  ]),
                  _: 1
                }, 8, ["class"]), [
                  [Qt, fe.modelValue || k.value]
                ]),
                it(K(y(Fe), {
                  class: L([y(r).be("picker", "empty"), y(r).is("icon-close")])
                }, {
                  default: Y(() => [
                    K(y(Lo))
                  ]),
                  _: 1
                }, 8, ["class"]), [
                  [Qt, !fe.modelValue && !k.value]
                ])
              ], 6)
            ], 2)
          ], 2)
        ], 42, PH)
      ]),
      _: 1
    }, 8, ["visible", "popper-class", "transition"]));
  }
});
var $H = /* @__PURE__ */ Ce(AH, [["__file", "color-picker.vue"]]);
const OUe = Ft($H), TH = Ee({
  mask: {
    type: Boolean,
    default: !0
  },
  customMaskEvent: {
    type: Boolean,
    default: !1
  },
  overlayClass: {
    type: ce([
      String,
      Array,
      Object
    ])
  },
  zIndex: {
    type: ce([String, Number])
  }
}), _H = {
  click: (n) => n instanceof MouseEvent
}, MH = "overlay";
var RH = F({
  name: "ElOverlay",
  props: TH,
  emits: _H,
  setup(n, { slots: e, emit: t }) {
    const i = me(MH), s = (a) => {
      t("click", a);
    }, { onClick: r, onMousedown: o, onMouseup: l } = L1(n.customMaskEvent ? void 0 : s);
    return () => n.mask ? K("div", {
      class: [i.b(), n.overlayClass],
      style: {
        zIndex: n.zIndex
      },
      onClick: r,
      onMousedown: o,
      onMouseup: l
    }, [de(e, "default")], qp.STYLE | qp.CLASS | qp.PROPS, ["onClick", "onMouseup", "onMousedown"]) : Re("div", {
      class: n.overlayClass,
      style: {
        zIndex: n.zIndex,
        position: "fixed",
        top: "0px",
        right: "0px",
        bottom: "0px",
        left: "0px"
      }
    }, [de(e, "default")]);
  }
});
const W1 = RH, RT = Symbol("dialogInjectionKey"), NT = Ee({
  center: Boolean,
  alignCenter: Boolean,
  closeIcon: {
    type: kn
  },
  draggable: Boolean,
  overflow: Boolean,
  fullscreen: Boolean,
  showClose: {
    type: Boolean,
    default: !0
  },
  title: {
    type: String,
    default: ""
  },
  ariaLevel: {
    type: String,
    default: "2"
  }
}), NH = {
  close: () => !0
}, DH = ["aria-level"], LH = ["aria-label"], IH = ["id"], BH = F({ name: "ElDialogContent" }), QH = /* @__PURE__ */ F({
  ...BH,
  props: NT,
  emits: NH,
  setup(n) {
    const e = n, { t } = mn(), { Close: i } = b$, { dialogRef: s, headerRef: r, bodyId: o, ns: l, style: a } = ke(RT), { focusTrapRef: c } = ke(sT), u = $(() => [
      l.b(),
      l.is("fullscreen", e.fullscreen),
      l.is("draggable", e.draggable),
      l.is("align-center", e.alignCenter),
      { [l.m("center")]: e.center }
    ]), h = hF(c, s), d = $(() => e.draggable), f = $(() => e.overflow);
    return S$(s, r, d, f), (p, g) => (R(), V("div", {
      ref: y(h),
      class: L(y(u)),
      style: Qe(y(a)),
      tabindex: "-1"
    }, [
      Z("header", {
        ref_key: "headerRef",
        ref: r,
        class: L([y(l).e("header"), { "show-close": p.showClose }])
      }, [
        de(p.$slots, "header", {}, () => [
          Z("span", {
            role: "heading",
            "aria-level": p.ariaLevel,
            class: L(y(l).e("title"))
          }, xe(p.title), 11, DH)
        ]),
        p.showClose ? (R(), V("button", {
          key: 0,
          "aria-label": y(t)("el.dialog.close"),
          class: L(y(l).e("headerbtn")),
          type: "button",
          onClick: g[0] || (g[0] = (m) => p.$emit("close"))
        }, [
          K(y(Fe), {
            class: L(y(l).e("close"))
          }, {
            default: Y(() => [
              (R(), ie(yt(p.closeIcon || y(i))))
            ]),
            _: 1
          }, 8, ["class"])
        ], 10, LH)) : G("v-if", !0)
      ], 2),
      Z("div", {
        id: y(o),
        class: L(y(l).e("body"))
      }, [
        de(p.$slots, "default")
      ], 10, IH),
      p.$slots.footer ? (R(), V("footer", {
        key: 0,
        class: L(y(l).e("footer"))
      }, [
        de(p.$slots, "footer")
      ], 2)) : G("v-if", !0)
    ], 6));
  }
});
var zH = /* @__PURE__ */ Ce(QH, [["__file", "dialog-content.vue"]]);
const DT = Ee({
  ...NT,
  appendToBody: Boolean,
  appendTo: {
    type: ce(String),
    default: "body"
  },
  beforeClose: {
    type: ce(Function)
  },
  destroyOnClose: Boolean,
  closeOnClickModal: {
    type: Boolean,
    default: !0
  },
  closeOnPressEscape: {
    type: Boolean,
    default: !0
  },
  lockScroll: {
    type: Boolean,
    default: !0
  },
  modal: {
    type: Boolean,
    default: !0
  },
  openDelay: {
    type: Number,
    default: 0
  },
  closeDelay: {
    type: Number,
    default: 0
  },
  top: {
    type: String
  },
  modelValue: Boolean,
  modalClass: String,
  width: {
    type: [String, Number]
  },
  zIndex: {
    type: Number
  },
  trapFocus: {
    type: Boolean,
    default: !1
  },
  headerAriaLevel: {
    type: String,
    default: "2"
  }
}), LT = {
  open: () => !0,
  opened: () => !0,
  close: () => !0,
  closed: () => !0,
  [ot]: (n) => Pi(n),
  openAutoFocus: () => !0,
  closeAutoFocus: () => !0
}, IT = (n, e) => {
  var t;
  const s = Xe().emit, { nextZIndex: r } = B1();
  let o = "";
  const l = Or(), a = Or(), c = D(!1), u = D(!1), h = D(!1), d = D((t = n.zIndex) != null ? t : r());
  let f, p;
  const g = i0("namespace", Wh), m = $(() => {
    const P = {}, A = `--${g.value}-dialog`;
    return n.fullscreen || (n.top && (P[`${A}-margin-top`] = n.top), n.width && (P[`${A}-width`] = cs(n.width))), P;
  }), v = $(() => n.alignCenter ? { display: "flex" } : {});
  function O() {
    s("opened");
  }
  function b() {
    s("closed"), s(ot, !1), n.destroyOnClose && (h.value = !1);
  }
  function w() {
    s("close");
  }
  function x() {
    p == null || p(), f == null || f(), n.openDelay && n.openDelay > 0 ? { stop: f } = Bg(() => E(), n.openDelay) : E();
  }
  function S() {
    f == null || f(), p == null || p(), n.closeDelay && n.closeDelay > 0 ? { stop: p } = Bg(() => M(), n.closeDelay) : M();
  }
  function C() {
    function P(A) {
      A || (u.value = !0, c.value = !1);
    }
    n.beforeClose ? n.beforeClose(P) : S();
  }
  function k() {
    n.closeOnClickModal && C();
  }
  function E() {
    vt && (c.value = !0);
  }
  function M() {
    c.value = !1;
  }
  function _() {
    s("openAutoFocus");
  }
  function T() {
    s("closeAutoFocus");
  }
  function B(P) {
    var A;
    ((A = P.detail) == null ? void 0 : A.focusReason) === "pointer" && P.preventDefault();
  }
  n.lockScroll && T$(c);
  function I() {
    n.closeOnPressEscape && C();
  }
  return ne(() => n.modelValue, (P) => {
    P ? (u.value = !1, x(), h.value = !0, d.value = WA(n.zIndex) ? r() : d.value++, $e(() => {
      s("open"), e.value && (e.value.scrollTop = 0);
    })) : c.value && S();
  }), ne(() => n.fullscreen, (P) => {
    e.value && (P ? (o = e.value.style.transform, e.value.style.transform = "") : e.value.style.transform = o);
  }), qe(() => {
    n.modelValue && (c.value = !0, h.value = !0, x());
  }), {
    afterEnter: O,
    afterLeave: b,
    beforeLeave: w,
    handleClose: C,
    onModalClick: k,
    close: S,
    doClose: M,
    onOpenAutoFocus: _,
    onCloseAutoFocus: T,
    onCloseRequested: I,
    onFocusoutPrevented: B,
    titleId: l,
    bodyId: a,
    closed: u,
    style: m,
    overlayDialogStyle: v,
    rendered: h,
    visible: c,
    zIndex: d
  };
}, jH = ["aria-label", "aria-labelledby", "aria-describedby"], VH = F({
  name: "ElDialog",
  inheritAttrs: !1
}), FH = /* @__PURE__ */ F({
  ...VH,
  props: DT,
  emits: LT,
  setup(n, { expose: e }) {
    const t = n, i = go();
    Ba({
      scope: "el-dialog",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/dialog.html#slots"
    }, $(() => !!i.title));
    const s = me("dialog"), r = D(), o = D(), l = D(), {
      visible: a,
      titleId: c,
      bodyId: u,
      style: h,
      overlayDialogStyle: d,
      rendered: f,
      zIndex: p,
      afterEnter: g,
      afterLeave: m,
      beforeLeave: v,
      handleClose: O,
      onModalClick: b,
      onOpenAutoFocus: w,
      onCloseAutoFocus: x,
      onCloseRequested: S,
      onFocusoutPrevented: C
    } = IT(t, r);
    ft(RT, {
      dialogRef: r,
      headerRef: o,
      bodyId: u,
      ns: s,
      rendered: f,
      style: h
    });
    const k = L1(b), E = $(() => t.draggable && !t.fullscreen);
    return e({
      visible: a,
      dialogContentRef: l
    }), (M, _) => (R(), ie(jm, {
      to: M.appendTo,
      disabled: M.appendTo !== "body" ? !1 : !M.appendToBody
    }, [
      K(mo, {
        name: "dialog-fade",
        onAfterEnter: y(g),
        onAfterLeave: y(m),
        onBeforeLeave: y(v),
        persisted: ""
      }, {
        default: Y(() => [
          it(K(y(W1), {
            "custom-mask-event": "",
            mask: M.modal,
            "overlay-class": M.modalClass,
            "z-index": y(p)
          }, {
            default: Y(() => [
              Z("div", {
                role: "dialog",
                "aria-modal": "true",
                "aria-label": M.title || void 0,
                "aria-labelledby": M.title ? void 0 : y(c),
                "aria-describedby": y(u),
                class: L(`${y(s).namespace.value}-overlay-dialog`),
                style: Qe(y(d)),
                onClick: _[0] || (_[0] = (...T) => y(k).onClick && y(k).onClick(...T)),
                onMousedown: _[1] || (_[1] = (...T) => y(k).onMousedown && y(k).onMousedown(...T)),
                onMouseup: _[2] || (_[2] = (...T) => y(k).onMouseup && y(k).onMouseup(...T))
              }, [
                K(y(r0), {
                  loop: "",
                  trapped: y(a),
                  "focus-start-el": "container",
                  onFocusAfterTrapped: y(w),
                  onFocusAfterReleased: y(x),
                  onFocusoutPrevented: y(C),
                  onReleaseRequested: y(S)
                }, {
                  default: Y(() => [
                    y(f) ? (R(), ie(zH, ki({
                      key: 0,
                      ref_key: "dialogContentRef",
                      ref: l
                    }, M.$attrs, {
                      center: M.center,
                      "align-center": M.alignCenter,
                      "close-icon": M.closeIcon,
                      draggable: y(E),
                      overflow: M.overflow,
                      fullscreen: M.fullscreen,
                      "show-close": M.showClose,
                      title: M.title,
                      "aria-level": M.headerAriaLevel,
                      onClose: y(O)
                    }), _g({
                      header: Y(() => [
                        M.$slots.title ? de(M.$slots, "title", { key: 1 }) : de(M.$slots, "header", {
                          key: 0,
                          close: y(O),
                          titleId: y(c),
                          titleClass: y(s).e("title")
                        })
                      ]),
                      default: Y(() => [
                        de(M.$slots, "default")
                      ]),
                      _: 2
                    }, [
                      M.$slots.footer ? {
                        name: "footer",
                        fn: Y(() => [
                          de(M.$slots, "footer")
                        ])
                      } : void 0
                    ]), 1040, ["center", "align-center", "close-icon", "draggable", "overflow", "fullscreen", "show-close", "title", "aria-level", "onClose"])) : G("v-if", !0)
                  ]),
                  _: 3
                }, 8, ["trapped", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])
              ], 46, jH)
            ]),
            _: 3
          }, 8, ["mask", "overlay-class", "z-index"]), [
            [Qt, y(a)]
          ])
        ]),
        _: 3
      }, 8, ["onAfterEnter", "onAfterLeave", "onBeforeLeave"])
    ], 8, ["to", "disabled"]));
  }
});
var ZH = /* @__PURE__ */ Ce(FH, [["__file", "dialog.vue"]]);
const wUe = Ft(ZH), qH = Ee({
  direction: {
    type: String,
    values: ["horizontal", "vertical"],
    default: "horizontal"
  },
  contentPosition: {
    type: String,
    values: ["left", "center", "right"],
    default: "center"
  },
  borderStyle: {
    type: ce(String),
    default: "solid"
  }
}), WH = F({
  name: "ElDivider"
}), HH = /* @__PURE__ */ F({
  ...WH,
  props: qH,
  setup(n) {
    const e = n, t = me("divider"), i = $(() => t.cssVar({
      "border-style": e.borderStyle
    }));
    return (s, r) => (R(), V("div", {
      class: L([y(t).b(), y(t).m(s.direction)]),
      style: Qe(y(i)),
      role: "separator"
    }, [
      s.$slots.default && s.direction !== "vertical" ? (R(), V("div", {
        key: 0,
        class: L([y(t).e("text"), y(t).is(s.contentPosition)])
      }, [
        de(s.$slots, "default")
      ], 2)) : G("v-if", !0)
    ], 6));
  }
});
var XH = /* @__PURE__ */ Ce(HH, [["__file", "divider.vue"]]);
const xUe = Ft(XH), YH = Ee({
  ...DT,
  direction: {
    type: String,
    default: "rtl",
    values: ["ltr", "rtl", "ttb", "btt"]
  },
  size: {
    type: [String, Number],
    default: "30%"
  },
  withHeader: {
    type: Boolean,
    default: !0
  },
  modalFade: {
    type: Boolean,
    default: !0
  },
  headerAriaLevel: {
    type: String,
    default: "2"
  }
}), UH = LT, GH = ["aria-label", "aria-labelledby", "aria-describedby"], KH = ["id", "aria-level"], JH = ["aria-label"], eX = ["id"], tX = F({
  name: "ElDrawer",
  inheritAttrs: !1
}), nX = /* @__PURE__ */ F({
  ...tX,
  props: YH,
  emits: UH,
  setup(n, { expose: e }) {
    const t = n, i = go();
    Ba({
      scope: "el-drawer",
      from: "the title slot",
      replacement: "the header slot",
      version: "3.0.0",
      ref: "https://element-plus.org/en-US/component/drawer.html#slots"
    }, $(() => !!i.title));
    const s = D(), r = D(), o = me("drawer"), { t: l } = mn(), {
      afterEnter: a,
      afterLeave: c,
      beforeLeave: u,
      visible: h,
      rendered: d,
      titleId: f,
      bodyId: p,
      onModalClick: g,
      onOpenAutoFocus: m,
      onCloseAutoFocus: v,
      onFocusoutPrevented: O,
      onCloseRequested: b,
      handleClose: w
    } = IT(t, s), x = $(() => t.direction === "rtl" || t.direction === "ltr"), S = $(() => cs(t.size));
    return e({
      handleClose: w,
      afterEnter: a,
      afterLeave: c
    }), (C, k) => (R(), ie(jm, {
      to: "body",
      disabled: !C.appendToBody
    }, [
      K(mo, {
        name: y(o).b("fade"),
        onAfterEnter: y(a),
        onAfterLeave: y(c),
        onBeforeLeave: y(u),
        persisted: ""
      }, {
        default: Y(() => [
          it(K(y(W1), {
            mask: C.modal,
            "overlay-class": C.modalClass,
            "z-index": C.zIndex,
            onClick: y(g)
          }, {
            default: Y(() => [
              K(y(r0), {
                loop: "",
                trapped: y(h),
                "focus-trap-el": s.value,
                "focus-start-el": r.value,
                onFocusAfterTrapped: y(m),
                onFocusAfterReleased: y(v),
                onFocusoutPrevented: y(O),
                onReleaseRequested: y(b)
              }, {
                default: Y(() => [
                  Z("div", ki({
                    ref_key: "drawerRef",
                    ref: s,
                    "aria-modal": "true",
                    "aria-label": C.title || void 0,
                    "aria-labelledby": C.title ? void 0 : y(f),
                    "aria-describedby": y(p)
                  }, C.$attrs, {
                    class: [y(o).b(), C.direction, y(h) && "open"],
                    style: y(x) ? "width: " + y(S) : "height: " + y(S),
                    role: "dialog",
                    onClick: k[1] || (k[1] = Le(() => {
                    }, ["stop"]))
                  }), [
                    Z("span", {
                      ref_key: "focusStartRef",
                      ref: r,
                      class: L(y(o).e("sr-focus")),
                      tabindex: "-1"
                    }, null, 2),
                    C.withHeader ? (R(), V("header", {
                      key: 0,
                      class: L(y(o).e("header"))
                    }, [
                      C.$slots.title ? de(C.$slots, "title", { key: 1 }, () => [
                        G(" DEPRECATED SLOT ")
                      ]) : de(C.$slots, "header", {
                        key: 0,
                        close: y(w),
                        titleId: y(f),
                        titleClass: y(o).e("title")
                      }, () => [
                        C.$slots.title ? G("v-if", !0) : (R(), V("span", {
                          key: 0,
                          id: y(f),
                          role: "heading",
                          "aria-level": C.headerAriaLevel,
                          class: L(y(o).e("title"))
                        }, xe(C.title), 11, KH))
                      ]),
                      C.showClose ? (R(), V("button", {
                        key: 2,
                        "aria-label": y(l)("el.drawer.close"),
                        class: L(y(o).e("close-btn")),
                        type: "button",
                        onClick: k[0] || (k[0] = (...E) => y(w) && y(w)(...E))
                      }, [
                        K(y(Fe), {
                          class: L(y(o).e("close"))
                        }, {
                          default: Y(() => [
                            K(y(Lo))
                          ]),
                          _: 1
                        }, 8, ["class"])
                      ], 10, JH)) : G("v-if", !0)
                    ], 2)) : G("v-if", !0),
                    y(d) ? (R(), V("div", {
                      key: 1,
                      id: y(p),
                      class: L(y(o).e("body"))
                    }, [
                      de(C.$slots, "default")
                    ], 10, eX)) : G("v-if", !0),
                    C.$slots.footer ? (R(), V("div", {
                      key: 2,
                      class: L(y(o).e("footer"))
                    }, [
                      de(C.$slots, "footer")
                    ], 2)) : G("v-if", !0)
                  ], 16, GH)
                ]),
                _: 3
              }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onFocusAfterTrapped", "onFocusAfterReleased", "onFocusoutPrevented", "onReleaseRequested"])
            ]),
            _: 3
          }, 8, ["mask", "overlay-class", "z-index", "onClick"]), [
            [Qt, y(h)]
          ])
        ]),
        _: 3
      }, 8, ["name", "onAfterEnter", "onAfterLeave", "onBeforeLeave"])
    ], 8, ["disabled"]));
  }
});
var iX = /* @__PURE__ */ Ce(nX, [["__file", "drawer.vue"]]);
const SUe = Ft(iX), sX = /* @__PURE__ */ F({
  inheritAttrs: !1
});
function rX(n, e, t, i, s, r) {
  return de(n.$slots, "default");
}
var oX = /* @__PURE__ */ Ce(sX, [["render", rX], ["__file", "collection.vue"]]);
const lX = /* @__PURE__ */ F({
  name: "ElCollectionItem",
  inheritAttrs: !1
});
function aX(n, e, t, i, s, r) {
  return de(n.$slots, "default");
}
var cX = /* @__PURE__ */ Ce(lX, [["render", aX], ["__file", "collection-item.vue"]]);
const uX = "data-el-collection-item", hX = (n) => {
  const e = `El${n}Collection`, t = `${e}Item`, i = Symbol(e), s = Symbol(t), r = {
    ...oX,
    name: e,
    setup() {
      const l = D(null), a = /* @__PURE__ */ new Map();
      ft(i, {
        itemMap: a,
        getItems: () => {
          const u = y(l);
          if (!u)
            return [];
          const h = Array.from(u.querySelectorAll(`[${uX}]`));
          return [...a.values()].sort((f, p) => h.indexOf(f.ref) - h.indexOf(p.ref));
        },
        collectionRef: l
      });
    }
  }, o = {
    ...cX,
    name: t,
    setup(l, { attrs: a }) {
      const c = D(null), u = ke(i, void 0);
      ft(s, {
        collectionItemRef: c
      }), qe(() => {
        const h = y(c);
        h && u.itemMap.set(h, {
          ref: h,
          ...a
        });
      }), Gn(() => {
        const h = y(c);
        u.itemMap.delete(h);
      });
    }
  };
  return {
    COLLECTION_INJECTION_KEY: i,
    COLLECTION_ITEM_INJECTION_KEY: s,
    ElCollection: r,
    ElCollectionItem: o
  };
}, vv = Ee({
  trigger: Pd.trigger,
  effect: {
    ...gi.effect,
    default: "light"
  },
  type: {
    type: ce(String)
  },
  placement: {
    type: ce(String),
    default: "bottom"
  },
  popperOptions: {
    type: ce(Object),
    default: () => ({})
  },
  id: String,
  size: {
    type: String,
    default: ""
  },
  splitButton: Boolean,
  hideOnClick: {
    type: Boolean,
    default: !0
  },
  loop: {
    type: Boolean,
    default: !0
  },
  showTimeout: {
    type: Number,
    default: 150
  },
  hideTimeout: {
    type: Number,
    default: 150
  },
  tabindex: {
    type: ce([Number, String]),
    default: 0
  },
  maxHeight: {
    type: ce([Number, String]),
    default: ""
  },
  popperClass: {
    type: String,
    default: ""
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  role: {
    type: String,
    default: "menu"
  },
  buttonProps: {
    type: ce(Object)
  },
  teleported: gi.teleported
});
Ee({
  command: {
    type: [Object, String, Number],
    default: () => ({})
  },
  disabled: Boolean,
  divided: Boolean,
  textValue: String,
  icon: {
    type: kn
  }
});
Ee({
  onKeydown: { type: ce(Function) }
});
hX("Dropdown");
const dX = Ee({
  id: {
    type: String,
    default: void 0
  },
  step: {
    type: Number,
    default: 1
  },
  stepStrictly: Boolean,
  max: {
    type: Number,
    default: Number.POSITIVE_INFINITY
  },
  min: {
    type: Number,
    default: Number.NEGATIVE_INFINITY
  },
  modelValue: Number,
  readonly: Boolean,
  disabled: Boolean,
  size: Ts,
  controls: {
    type: Boolean,
    default: !0
  },
  controlsPosition: {
    type: String,
    default: "",
    values: ["", "right"]
  },
  valueOnClear: {
    type: [String, Number, null],
    validator: (n) => n === null || tt(n) || ["min", "max"].includes(n),
    default: null
  },
  name: String,
  label: String,
  placeholder: String,
  precision: {
    type: Number,
    validator: (n) => n >= 0 && n === Number.parseInt(`${n}`, 10)
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), fX = {
  [Un]: (n, e) => e !== n,
  blur: (n) => n instanceof FocusEvent,
  focus: (n) => n instanceof FocusEvent,
  [$a]: (n) => tt(n) || Ri(n),
  [ot]: (n) => tt(n) || Ri(n)
}, pX = ["aria-label", "onKeydown"], gX = ["aria-label", "onKeydown"], mX = F({
  name: "ElInputNumber"
}), vX = /* @__PURE__ */ F({
  ...mX,
  props: dX,
  emits: fX,
  setup(n, { expose: e, emit: t }) {
    const i = n, { t: s } = mn(), r = me("input-number"), o = D(), l = Gt({
      currentValue: i.modelValue,
      userInput: null
    }), { formItem: a } = _s(), c = $(() => tt(i.modelValue) && i.modelValue <= i.min), u = $(() => tt(i.modelValue) && i.modelValue >= i.max), h = $(() => {
      const P = v(i.step);
      return Si(i.precision) ? Math.max(v(i.modelValue), P) : (P > i.precision && pt("InputNumber", "precision should not be less than the decimal places of step"), i.precision);
    }), d = $(() => i.controls && i.controlsPosition === "right"), f = Xi(), p = er(), g = $(() => {
      if (l.userInput !== null)
        return l.userInput;
      let P = l.currentValue;
      if (Ri(P))
        return "";
      if (tt(P)) {
        if (Number.isNaN(P))
          return "";
        Si(i.precision) || (P = P.toFixed(i.precision));
      }
      return P;
    }), m = (P, A) => {
      if (Si(A) && (A = h.value), A === 0)
        return Math.round(P);
      let N = String(P);
      const q = N.indexOf(".");
      if (q === -1 || !N.replace(".", "").split("")[q + A])
        return P;
      const oe = N.length;
      return N.charAt(oe - 1) === "5" && (N = `${N.slice(0, Math.max(0, oe - 1))}6`), Number.parseFloat(Number(N).toFixed(A));
    }, v = (P) => {
      if (Ri(P))
        return 0;
      const A = P.toString(), N = A.indexOf(".");
      let q = 0;
      return N !== -1 && (q = A.length - N - 1), q;
    }, O = (P, A = 1) => tt(P) ? m(P + i.step * A) : l.currentValue, b = () => {
      if (i.readonly || p.value || u.value)
        return;
      const P = Number(g.value) || 0, A = O(P);
      S(A), t($a, l.currentValue), B();
    }, w = () => {
      if (i.readonly || p.value || c.value)
        return;
      const P = Number(g.value) || 0, A = O(P, -1);
      S(A), t($a, l.currentValue), B();
    }, x = (P, A) => {
      const { max: N, min: q, step: j, precision: H, stepStrictly: oe, valueOnClear: te } = i;
      N < q && hs("InputNumber", "min should not be greater than max.");
      let W = Number(P);
      if (Ri(P) || Number.isNaN(W))
        return null;
      if (P === "") {
        if (te === null)
          return null;
        W = bt(te) ? { min: q, max: N }[te] : te;
      }
      return oe && (W = m(Math.round(W / j) * j, H)), Si(H) || (W = m(W, H)), (W > N || W < q) && (W = W > N ? N : q, A && t(ot, W)), W;
    }, S = (P, A = !0) => {
      var N;
      const q = l.currentValue, j = x(P);
      if (!A) {
        t(ot, j);
        return;
      }
      q !== j && (l.userInput = null, t(ot, j), t(Un, j, q), i.validateEvent && ((N = a == null ? void 0 : a.validate) == null || N.call(a, "change").catch((H) => pt(H))), l.currentValue = j);
    }, C = (P) => {
      l.userInput = P;
      const A = P === "" ? null : Number(P);
      t($a, A), S(A, !1);
    }, k = (P) => {
      const A = P !== "" ? Number(P) : "";
      (tt(A) && !Number.isNaN(A) || P === "") && S(A), B(), l.userInput = null;
    }, E = () => {
      var P, A;
      (A = (P = o.value) == null ? void 0 : P.focus) == null || A.call(P);
    }, M = () => {
      var P, A;
      (A = (P = o.value) == null ? void 0 : P.blur) == null || A.call(P);
    }, _ = (P) => {
      t("focus", P);
    }, T = (P) => {
      var A;
      l.userInput = null, t("blur", P), i.validateEvent && ((A = a == null ? void 0 : a.validate) == null || A.call(a, "blur").catch((N) => pt(N)));
    }, B = () => {
      l.currentValue !== i.modelValue && (l.currentValue = i.modelValue);
    }, I = (P) => {
      document.activeElement === P.target && P.preventDefault();
    };
    return ne(() => i.modelValue, (P, A) => {
      const N = x(P, !0);
      l.userInput === null && N !== A && (l.currentValue = N);
    }, { immediate: !0 }), qe(() => {
      var P;
      const { min: A, max: N, modelValue: q } = i, j = (P = o.value) == null ? void 0 : P.input;
      if (j.setAttribute("role", "spinbutton"), Number.isFinite(N) ? j.setAttribute("aria-valuemax", String(N)) : j.removeAttribute("aria-valuemax"), Number.isFinite(A) ? j.setAttribute("aria-valuemin", String(A)) : j.removeAttribute("aria-valuemin"), j.setAttribute("aria-valuenow", l.currentValue || l.currentValue === 0 ? String(l.currentValue) : ""), j.setAttribute("aria-disabled", String(p.value)), !tt(q) && q != null) {
        let H = Number(q);
        Number.isNaN(H) && (H = null), t(ot, H);
      }
    }), Zl(() => {
      var P, A;
      const N = (P = o.value) == null ? void 0 : P.input;
      N == null || N.setAttribute("aria-valuenow", `${(A = l.currentValue) != null ? A : ""}`);
    }), e({
      focus: E,
      blur: M
    }), (P, A) => (R(), V("div", {
      class: L([
        y(r).b(),
        y(r).m(y(f)),
        y(r).is("disabled", y(p)),
        y(r).is("without-controls", !P.controls),
        y(r).is("controls-right", y(d))
      ]),
      onDragstart: A[0] || (A[0] = Le(() => {
      }, ["prevent"]))
    }, [
      P.controls ? it((R(), V("span", {
        key: 0,
        role: "button",
        "aria-label": y(s)("el.inputNumber.decrease"),
        class: L([y(r).e("decrease"), y(r).is("disabled", y(c))]),
        onKeydown: Ut(w, ["enter"])
      }, [
        K(y(Fe), null, {
          default: Y(() => [
            y(d) ? (R(), ie(y(Gu), { key: 0 })) : (R(), ie(y(oj), { key: 1 }))
          ]),
          _: 1
        })
      ], 42, pX)), [
        [y(uC), w]
      ]) : G("v-if", !0),
      P.controls ? it((R(), V("span", {
        key: 1,
        role: "button",
        "aria-label": y(s)("el.inputNumber.increase"),
        class: L([y(r).e("increase"), y(r).is("disabled", y(u))]),
        onKeydown: Ut(b, ["enter"])
      }, [
        K(y(Fe), null, {
          default: Y(() => [
            y(d) ? (R(), ie(y(JA), { key: 0 })) : (R(), ie(y(n$), { key: 1 }))
          ]),
          _: 1
        })
      ], 42, gX)), [
        [y(uC), b]
      ]) : G("v-if", !0),
      K(y(ic), {
        id: P.id,
        ref_key: "input",
        ref: o,
        type: "number",
        step: P.step,
        "model-value": y(g),
        placeholder: P.placeholder,
        readonly: P.readonly,
        disabled: y(p),
        size: y(f),
        max: P.max,
        min: P.min,
        name: P.name,
        label: P.label,
        "validate-event": !1,
        onWheel: I,
        onKeydown: [
          Ut(Le(b, ["prevent"]), ["up"]),
          Ut(Le(w, ["prevent"]), ["down"])
        ],
        onBlur: T,
        onFocus: _,
        onInput: C,
        onChange: k
      }, null, 8, ["id", "step", "model-value", "placeholder", "readonly", "disabled", "size", "max", "min", "name", "label", "onKeydown"])
    ], 34));
  }
});
var bX = /* @__PURE__ */ Ce(vX, [["__file", "input-number.vue"]]);
const CUe = Ft(bX), BT = Symbol("elPaginationKey"), yX = Ee({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  prevText: {
    type: String
  },
  prevIcon: {
    type: kn
  }
}), OX = {
  click: (n) => n instanceof MouseEvent
}, wX = ["disabled", "aria-label", "aria-disabled"], xX = { key: 0 }, SX = F({
  name: "ElPaginationPrev"
}), CX = /* @__PURE__ */ F({
  ...SX,
  props: yX,
  emits: OX,
  setup(n) {
    const e = n, { t } = mn(), i = $(() => e.disabled || e.currentPage <= 1);
    return (s, r) => (R(), V("button", {
      type: "button",
      class: "btn-prev",
      disabled: y(i),
      "aria-label": s.prevText || y(t)("el.pagination.prev"),
      "aria-disabled": y(i),
      onClick: r[0] || (r[0] = (o) => s.$emit("click", o))
    }, [
      s.prevText ? (R(), V("span", xX, xe(s.prevText), 1)) : (R(), ie(y(Fe), { key: 1 }, {
        default: Y(() => [
          (R(), ie(yt(s.prevIcon)))
        ]),
        _: 1
      }))
    ], 8, wX));
  }
});
var kX = /* @__PURE__ */ Ce(CX, [["__file", "prev.vue"]]);
const PX = Ee({
  disabled: Boolean,
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    default: 50
  },
  nextText: {
    type: String
  },
  nextIcon: {
    type: kn
  }
}), EX = ["disabled", "aria-label", "aria-disabled"], AX = { key: 0 }, $X = F({
  name: "ElPaginationNext"
}), TX = /* @__PURE__ */ F({
  ...$X,
  props: PX,
  emits: ["click"],
  setup(n) {
    const e = n, { t } = mn(), i = $(() => e.disabled || e.currentPage === e.pageCount || e.pageCount === 0);
    return (s, r) => (R(), V("button", {
      type: "button",
      class: "btn-next",
      disabled: y(i),
      "aria-label": s.nextText || y(t)("el.pagination.next"),
      "aria-disabled": y(i),
      onClick: r[0] || (r[0] = (o) => s.$emit("click", o))
    }, [
      s.nextText ? (R(), V("span", AX, xe(s.nextText), 1)) : (R(), ie(y(Fe), { key: 1 }, {
        default: Y(() => [
          (R(), ie(yt(s.nextIcon)))
        ]),
        _: 1
      }))
    ], 8, EX));
  }
});
var _X = /* @__PURE__ */ Ce(TX, [["__file", "next.vue"]]);
const QT = Symbol("ElSelectGroup"), l0 = Symbol("ElSelect");
function MX(n, e) {
  const t = ke(l0), i = ke(QT, { disabled: !1 }), s = $(() => t.props.multiple ? u(t.props.modelValue, n.value) : u([t.props.modelValue], n.value)), r = $(() => {
    if (t.props.multiple) {
      const f = t.props.modelValue || [];
      return !s.value && f.length >= t.props.multipleLimit && t.props.multipleLimit > 0;
    } else
      return !1;
  }), o = $(() => n.label || (ln(n.value) ? "" : n.value)), l = $(() => n.value || n.label || ""), a = $(() => n.disabled || e.groupDisabled || r.value), c = Xe(), u = (f = [], p) => {
    if (ln(n.value)) {
      const g = t.props.valueKey;
      return f && f.some((m) => vd(on(m, g)) === on(p, g));
    } else
      return f && f.includes(p);
  }, h = () => {
    !n.disabled && !i.disabled && (t.states.hoveringIndex = t.optionsArray.indexOf(c.proxy));
  }, d = (f) => {
    const p = new RegExp(f$(f), "i");
    e.visible = p.test(o.value) || n.created;
  };
  return ne(() => o.value, () => {
    !n.created && !t.props.remote && t.setSelected();
  }), ne(() => n.value, (f, p) => {
    const { remote: g, valueKey: m } = t.props;
    if (cn(f, p) || (t.onOptionDestroy(p, c.proxy), t.onOptionCreate(c.proxy)), !n.created && !g) {
      if (m && ln(f) && ln(p) && f[m] === p[m])
        return;
      t.setSelected();
    }
  }), ne(() => i.disabled, () => {
    e.groupDisabled = i.disabled;
  }, { immediate: !0 }), {
    select: t,
    currentLabel: o,
    currentValue: l,
    itemSelected: s,
    isDisabled: a,
    hoverItem: h,
    updateOption: d
  };
}
const RX = F({
  name: "ElOption",
  componentName: "ElOption",
  props: {
    value: {
      required: !0,
      type: [String, Number, Boolean, Object]
    },
    label: [String, Number],
    created: Boolean,
    disabled: Boolean
  },
  setup(n) {
    const e = me("select"), t = Or(), i = $(() => [
      e.be("dropdown", "item"),
      e.is("disabled", y(l)),
      e.is("selected", y(o)),
      e.is("hovering", y(d))
    ]), s = Gt({
      index: -1,
      groupDisabled: !1,
      visible: !0,
      hover: !1
    }), {
      currentLabel: r,
      itemSelected: o,
      isDisabled: l,
      select: a,
      hoverItem: c,
      updateOption: u
    } = MX(n, s), { visible: h, hover: d } = Ws(s), f = Xe().proxy;
    a.onOptionCreate(f), Gn(() => {
      const g = f.value, { selected: m } = a.states, O = (a.props.multiple ? m : [m]).some((b) => b.value === f.value);
      $e(() => {
        a.states.cachedOptions.get(g) === f && !O && a.states.cachedOptions.delete(g);
      }), a.onOptionDestroy(g, f);
    });
    function p() {
      n.disabled !== !0 && s.groupDisabled !== !0 && a.handleOptionSelect(f);
    }
    return {
      ns: e,
      id: t,
      containerKls: i,
      currentLabel: r,
      itemSelected: o,
      isDisabled: l,
      select: a,
      hoverItem: c,
      updateOption: u,
      visible: h,
      hover: d,
      selectOptionClick: p,
      states: s
    };
  }
}), NX = ["id", "aria-disabled", "aria-selected"];
function DX(n, e, t, i, s, r) {
  return it((R(), V("li", {
    id: n.id,
    class: L(n.containerKls),
    role: "option",
    "aria-disabled": n.isDisabled || void 0,
    "aria-selected": n.itemSelected,
    onMouseenter: e[0] || (e[0] = (...o) => n.hoverItem && n.hoverItem(...o)),
    onClick: e[1] || (e[1] = Le((...o) => n.selectOptionClick && n.selectOptionClick(...o), ["stop"]))
  }, [
    de(n.$slots, "default", {}, () => [
      Z("span", null, xe(n.currentLabel), 1)
    ])
  ], 42, NX)), [
    [Qt, n.visible]
  ]);
}
var H1 = /* @__PURE__ */ Ce(RX, [["render", DX], ["__file", "option.vue"]]);
const LX = F({
  name: "ElSelectDropdown",
  componentName: "ElSelectDropdown",
  setup() {
    const n = ke(l0), e = me("select"), t = $(() => n.props.popperClass), i = $(() => n.props.multiple), s = $(() => n.props.fitInputWidth), r = D("");
    function o() {
      var l;
      r.value = `${(l = n.selectRef) == null ? void 0 : l.offsetWidth}px`;
    }
    return qe(() => {
      o(), pn(n.selectRef, o);
    }), {
      ns: e,
      minWidth: r,
      popperClass: t,
      isMultiple: i,
      isFitInputWidth: s
    };
  }
});
function IX(n, e, t, i, s, r) {
  return R(), V("div", {
    class: L([n.ns.b("dropdown"), n.ns.is("multiple", n.isMultiple), n.popperClass]),
    style: Qe({ [n.isFitInputWidth ? "width" : "minWidth"]: n.minWidth })
  }, [
    n.$slots.header ? (R(), V("div", {
      key: 0,
      class: L(n.ns.be("dropdown", "header"))
    }, [
      de(n.$slots, "header")
    ], 2)) : G("v-if", !0),
    de(n.$slots, "default"),
    n.$slots.footer ? (R(), V("div", {
      key: 1,
      class: L(n.ns.be("dropdown", "footer"))
    }, [
      de(n.$slots, "footer")
    ], 2)) : G("v-if", !0)
  ], 6);
}
var BX = /* @__PURE__ */ Ce(LX, [["render", IX], ["__file", "select-dropdown.vue"]]);
function zT(n) {
  const e = D(!1);
  return {
    handleCompositionStart: () => {
      e.value = !0;
    },
    handleCompositionUpdate: (r) => {
      const o = r.target.value, l = o[o.length - 1] || "";
      e.value = !k1(l);
    },
    handleCompositionEnd: (r) => {
      e.value && (e.value = !1, wt(n) && n(r));
    }
  };
}
const QX = 11, zX = (n, e) => {
  const { t } = mn(), i = Or(), s = me("select"), r = me("input"), o = Gt({
    inputValue: "",
    options: /* @__PURE__ */ new Map(),
    cachedOptions: /* @__PURE__ */ new Map(),
    disabledOptions: /* @__PURE__ */ new Map(),
    optionValues: [],
    selected: n.multiple ? [] : {},
    selectionWidth: 0,
    calculatorWidth: 0,
    collapseItemWidth: 0,
    selectedLabel: "",
    hoveringIndex: -1,
    previousQuery: null,
    inputHovering: !1,
    menuVisibleOnFocus: !1,
    isBeforeHide: !1
  });
  Ba({
    from: "suffixTransition",
    replacement: "override style scheme",
    version: "2.3.0",
    scope: "props",
    ref: "https://element-plus.org/en-US/component/select.html#select-attributes"
  }, $(() => n.suffixTransition === !1));
  const l = D(null), a = D(null), c = D(null), u = D(null), h = D(null), d = D(null), f = D(null), p = D(null), g = D(null), m = D(null), v = D(null), O = D(null), { wrapperRef: b, isFocused: w, handleFocus: x, handleBlur: S } = n0(h, {
    afterFocus() {
      n.automaticDropdown && !C.value && (C.value = !0, o.menuVisibleOnFocus = !0);
    },
    beforeBlur(se) {
      var we, _t;
      return ((we = c.value) == null ? void 0 : we.isFocusInsideContent(se)) || ((_t = u.value) == null ? void 0 : _t.isFocusInsideContent(se));
    },
    afterBlur() {
      C.value = !1, o.menuVisibleOnFocus = !1;
    }
  }), C = D(!1), k = D(), { form: E, formItem: M } = _s(), { inputId: _ } = Hl(n, {
    formItemContext: M
  }), T = $(() => n.disabled || (E == null ? void 0 : E.disabled)), B = $(() => n.multiple ? xt(n.modelValue) && n.modelValue.length > 0 : n.modelValue !== void 0 && n.modelValue !== null && n.modelValue !== ""), I = $(() => n.clearable && !T.value && o.inputHovering && B.value), P = $(() => n.remote && n.filterable && !n.remoteShowSuffix ? "" : n.suffixIcon), A = $(() => s.is("reverse", P.value && C.value && n.suffixTransition)), N = $(() => (M == null ? void 0 : M.validateState) || ""), q = $(() => C1[N.value]), j = $(() => n.remote ? 300 : 0), H = $(() => n.loading ? n.loadingText || t("el.select.loading") : n.remote && !o.inputValue && o.options.size === 0 ? !1 : n.filterable && o.inputValue && o.options.size > 0 && oe.value === 0 ? n.noMatchText || t("el.select.noMatch") : o.options.size === 0 ? n.noDataText || t("el.select.noData") : null), oe = $(() => te.value.filter((se) => se.visible).length), te = $(() => {
    const se = Array.from(o.options.values()), we = [];
    return o.optionValues.forEach((_t) => {
      const hn = se.findIndex((nr) => nr.value === _t);
      hn > -1 && we.push(se[hn]);
    }), we.length >= se.length ? we : se;
  }), W = $(() => Array.from(o.cachedOptions.values())), U = $(() => {
    const se = te.value.filter((we) => !we.created).some((we) => we.currentLabel === o.inputValue);
    return n.filterable && n.allowCreate && o.inputValue !== "" && !se;
  }), le = () => {
    n.filterable && wt(n.filterMethod) || n.filterable && n.remote && wt(n.remoteMethod) || te.value.forEach((se) => {
      se.updateOption(o.inputValue);
    });
  }, he = Xi(), ee = $(() => ["small"].includes(he.value) ? "small" : "default"), pe = $({
    get() {
      return C.value && H.value !== !1;
    },
    set(se) {
      C.value = se;
    }
  }), be = $(() => xt(n.modelValue) ? n.modelValue.length === 0 && !o.inputValue : n.filterable ? !o.inputValue : !0), fe = $(() => {
    var se;
    const we = (se = n.placeholder) != null ? se : t("el.select.placeholder");
    return n.multiple || !B.value ? we : o.selectedLabel;
  });
  ne(() => n.modelValue, (se, we) => {
    n.multiple && n.filterable && !n.reserveKeyword && (o.inputValue = "", Ae("")), zt(), !cn(se, we) && n.validateEvent && (M == null || M.validate("change").catch((_t) => pt(_t)));
  }, {
    flush: "post",
    deep: !0
  }), ne(() => C.value, (se) => {
    se ? Ae(o.inputValue) : (o.inputValue = "", o.previousQuery = null, o.isBeforeHide = !0), e("visible-change", se);
  }), ne(() => o.options.entries(), () => {
    var se;
    if (!vt)
      return;
    const we = ((se = l.value) == null ? void 0 : se.querySelectorAll("input")) || [];
    (!n.filterable && !n.defaultFirstOption && !Si(n.modelValue) || !Array.from(we).includes(document.activeElement)) && zt(), n.defaultFirstOption && (n.filterable || n.remote) && oe.value && ut();
  }, {
    flush: "post"
  }), ne(() => o.hoveringIndex, (se) => {
    tt(se) && se > -1 ? k.value = te.value[se] || {} : k.value = {}, te.value.forEach((we) => {
      we.hover = k.value === we;
    });
  }), Vs(() => {
    o.isBeforeHide || le();
  });
  const Ae = (se) => {
    o.previousQuery !== se && (o.previousQuery = se, n.filterable && wt(n.filterMethod) ? n.filterMethod(se) : n.filterable && n.remote && wt(n.remoteMethod) && n.remoteMethod(se), n.defaultFirstOption && (n.filterable || n.remote) && oe.value ? $e(ut) : $e(Jn));
  }, ut = () => {
    const se = te.value.filter((hn) => hn.visible && !hn.disabled && !hn.states.groupDisabled), we = se.find((hn) => hn.created), _t = se[0];
    o.hoveringIndex = Te(te.value, we || _t);
  }, zt = () => {
    if (n.multiple)
      o.selectedLabel = "";
    else {
      const we = Kn(n.modelValue);
      o.selectedLabel = we.currentLabel, o.selected = we;
      return;
    }
    const se = [];
    xt(n.modelValue) && n.modelValue.forEach((we) => {
      se.push(Kn(we));
    }), o.selected = se;
  }, Kn = (se) => {
    let we;
    const _t = lv(se).toLowerCase() === "object", hn = lv(se).toLowerCase() === "null", nr = lv(se).toLowerCase() === "undefined";
    for (let ir = o.cachedOptions.size - 1; ir >= 0; ir--) {
      const Rs = W.value[ir];
      if (_t ? on(Rs.value, n.valueKey) === on(se, n.valueKey) : Rs.value === se) {
        we = {
          value: se,
          currentLabel: Rs.currentLabel,
          isDisabled: Rs.isDisabled
        };
        break;
      }
    }
    if (we)
      return we;
    const tl = _t ? se.label : !hn && !nr ? se : "";
    return {
      value: se,
      currentLabel: tl
    };
  }, Jn = () => {
    n.multiple ? o.selected.length > 0 ? o.hoveringIndex = Math.min(...o.selected.map((se) => te.value.findIndex((we) => el(we) === el(se)))) : o.hoveringIndex = -1 : o.hoveringIndex = te.value.findIndex((se) => el(se) === el(o.selected));
  }, Di = () => {
    o.selectionWidth = a.value.getBoundingClientRect().width;
  }, hi = () => {
    o.calculatorWidth = d.value.getBoundingClientRect().width;
  }, Li = () => {
    o.collapseItemWidth = v.value.getBoundingClientRect().width;
  }, ds = () => {
    var se, we;
    (we = (se = c.value) == null ? void 0 : se.updatePopper) == null || we.call(se);
  }, un = () => {
    var se, we;
    (we = (se = u.value) == null ? void 0 : se.updatePopper) == null || we.call(se);
  }, Ii = () => {
    o.inputValue.length > 0 && !C.value && (C.value = !0), Ae(o.inputValue);
  }, Yi = (se) => {
    if (o.inputValue = se.target.value, n.remote)
      Bi();
    else
      return Ii();
  }, Bi = Do(() => {
    Ii();
  }, j.value), ei = (se) => {
    cn(n.modelValue, se) || e(Un, se);
  }, ge = (se) => FA(se, (we) => !o.disabledOptions.has(we)), Ke = (se) => {
    if (n.multiple && se.code !== dt.delete && se.target.value.length <= 0) {
      const we = n.modelValue.slice(), _t = ge(we);
      if (_t < 0)
        return;
      we.splice(_t, 1), e(ot, we), ei(we);
    }
  }, Dt = (se, we) => {
    const _t = o.selected.indexOf(we);
    if (_t > -1 && !T.value) {
      const hn = n.modelValue.slice();
      hn.splice(_t, 1), e(ot, hn), ei(hn), e("remove-tag", we.value);
    }
    se.stopPropagation(), Rr();
  }, ti = (se) => {
    se.stopPropagation();
    const we = n.multiple ? [] : "";
    if (!bt(we))
      for (const _t of o.selected)
        _t.isDisabled && we.push(_t.value);
    e(ot, we), ei(we), o.hoveringIndex = -1, C.value = !1, e("clear"), Rr();
  }, Mr = (se) => {
    if (n.multiple) {
      const we = (n.modelValue || []).slice(), _t = Te(we, se.value);
      _t > -1 ? we.splice(_t, 1) : (n.multipleLimit <= 0 || we.length < n.multipleLimit) && we.push(se.value), e(ot, we), ei(we), se.created && Ae(""), n.filterable && !n.reserveKeyword && (o.inputValue = "");
    } else
      e(ot, se.value), ei(se.value), C.value = !1;
    Rr(), !C.value && $e(() => {
      je(se);
    });
  }, Te = (se = [], we) => {
    if (!ln(we))
      return se.indexOf(we);
    const _t = n.valueKey;
    let hn = -1;
    return se.some((nr, tl) => vd(on(nr, _t)) === on(we, _t) ? (hn = tl, !0) : !1), hn;
  }, je = (se) => {
    var we, _t, hn, nr, tl;
    const cc = xt(se) ? se[0] : se;
    let ir = null;
    if (cc != null && cc.value) {
      const Rs = te.value.filter((uc) => uc.value === cc.value);
      Rs.length > 0 && (ir = Rs[0].$el);
    }
    if (c.value && ir) {
      const Rs = (nr = (hn = (_t = (we = c.value) == null ? void 0 : we.popperRef) == null ? void 0 : _t.contentRef) == null ? void 0 : hn.querySelector) == null ? void 0 : nr.call(hn, `.${s.be("dropdown", "wrap")}`);
      Rs && m$(Rs, ir);
    }
    (tl = O.value) == null || tl.handleScroll();
  }, J = (se) => {
    o.options.set(se.value, se), o.cachedOptions.set(se.value, se), se.disabled && o.disabledOptions.set(se.value, se);
  }, ae = (se, we) => {
    o.options.get(se) === we && o.options.delete(se);
  }, {
    handleCompositionStart: ve,
    handleCompositionUpdate: Ue,
    handleCompositionEnd: Zt
  } = zT((se) => Yi(se)), Sn = $(() => {
    var se, we;
    return (we = (se = c.value) == null ? void 0 : se.popperRef) == null ? void 0 : we.contentRef;
  }), jt = () => {
    $e(() => je(o.selected));
  }, Rr = () => {
    var se;
    (se = h.value) == null || se.focus();
  }, Ms = () => {
    xo();
  }, oc = (se) => {
    ti(se);
  }, xo = (se) => {
    if (C.value = !1, w.value) {
      const we = new FocusEvent("focus", se);
      $e(() => S(we));
    }
  }, lc = () => {
    o.inputValue.length > 0 ? o.inputValue = "" : C.value = !1;
  }, zf = () => {
    T.value || (o.menuVisibleOnFocus ? o.menuVisibleOnFocus = !1 : C.value = !C.value);
  }, mh = () => {
    C.value ? te.value[o.hoveringIndex] && Mr(te.value[o.hoveringIndex]) : zf();
  }, el = (se) => ln(se.value) ? on(se.value, n.valueKey) : se.value, jf = $(() => te.value.filter((se) => se.visible).every((se) => se.disabled)), U0 = $(() => n.multiple ? n.collapseTags ? o.selected.slice(0, n.maxCollapseTags) : o.selected : []), ac = $(() => n.multiple ? n.collapseTags ? o.selected.slice(n.maxCollapseTags) : [] : []), Vf = (se) => {
    if (!C.value) {
      C.value = !0;
      return;
    }
    if (!(o.options.size === 0 || oe.value === 0) && !jf.value) {
      se === "next" ? (o.hoveringIndex++, o.hoveringIndex === o.options.size && (o.hoveringIndex = 0)) : se === "prev" && (o.hoveringIndex--, o.hoveringIndex < 0 && (o.hoveringIndex = o.options.size - 1));
      const we = te.value[o.hoveringIndex];
      (we.disabled === !0 || we.states.groupDisabled === !0 || !we.visible) && Vf(se), $e(() => je(k.value));
    }
  }, G0 = () => {
    if (!a.value)
      return 0;
    const se = window.getComputedStyle(a.value);
    return Number.parseFloat(se.gap || "6px");
  }, K0 = $(() => {
    const se = G0();
    return { maxWidth: `${v.value && n.maxCollapseTags === 1 ? o.selectionWidth - o.collapseItemWidth - se : o.selectionWidth}px` };
  }), J0 = $(() => ({ maxWidth: `${o.selectionWidth}px` })), ev = $(() => ({
    width: `${Math.max(o.calculatorWidth, QX)}px`
  }));
  return n.multiple && !xt(n.modelValue) && e(ot, []), !n.multiple && xt(n.modelValue) && e(ot, ""), pn(a, Di), pn(d, hi), pn(g, ds), pn(b, ds), pn(m, un), pn(v, Li), qe(() => {
    zt();
  }), {
    inputId: _,
    contentId: i,
    nsSelect: s,
    nsInput: r,
    states: o,
    isFocused: w,
    expanded: C,
    optionsArray: te,
    hoverOption: k,
    selectSize: he,
    filteredOptionsCount: oe,
    resetCalculatorWidth: hi,
    updateTooltip: ds,
    updateTagTooltip: un,
    debouncedOnInputChange: Bi,
    onInput: Yi,
    deletePrevTag: Ke,
    deleteTag: Dt,
    deleteSelected: ti,
    handleOptionSelect: Mr,
    scrollToOption: je,
    hasModelValue: B,
    shouldShowPlaceholder: be,
    currentPlaceholder: fe,
    showClose: I,
    iconComponent: P,
    iconReverse: A,
    validateState: N,
    validateIcon: q,
    showNewOption: U,
    updateOptions: le,
    collapseTagSize: ee,
    setSelected: zt,
    selectDisabled: T,
    emptyText: H,
    handleCompositionStart: ve,
    handleCompositionUpdate: Ue,
    handleCompositionEnd: Zt,
    onOptionCreate: J,
    onOptionDestroy: ae,
    handleMenuEnter: jt,
    handleFocus: x,
    focus: Rr,
    blur: Ms,
    handleBlur: S,
    handleClearClick: oc,
    handleClickOutside: xo,
    handleEsc: lc,
    toggleMenu: zf,
    selectOption: mh,
    getValueKey: el,
    navigateOptions: Vf,
    dropdownMenuVisible: pe,
    showTagList: U0,
    collapseTagList: ac,
    tagStyle: K0,
    collapseTagStyle: J0,
    inputStyle: ev,
    popperRef: Sn,
    inputRef: h,
    tooltipRef: c,
    tagTooltipRef: u,
    calculatorRef: d,
    prefixRef: f,
    suffixRef: p,
    selectRef: l,
    wrapperRef: b,
    selectionRef: a,
    scrollbarRef: O,
    menuRef: g,
    tagMenuRef: m,
    collapseItemRef: v
  };
};
var jX = F({
  name: "ElOptions",
  setup(n, { slots: e }) {
    const t = ke(l0);
    let i = [];
    return () => {
      var s, r;
      const o = (s = e.default) == null ? void 0 : s.call(e), l = [];
      function a(c) {
        xt(c) && c.forEach((u) => {
          var h, d, f, p;
          const g = (h = (u == null ? void 0 : u.type) || {}) == null ? void 0 : h.name;
          g === "ElOptionGroup" ? a(!bt(u.children) && !xt(u.children) && wt((d = u.children) == null ? void 0 : d.default) ? (f = u.children) == null ? void 0 : f.default() : u.children) : g === "ElOption" ? l.push((p = u.props) == null ? void 0 : p.value) : xt(u.children) && a(u.children);
        });
      }
      return o.length && a((r = o[0]) == null ? void 0 : r.children), cn(l, i) || (i = l, t && (t.states.optionValues = l)), o;
    };
  }
});
const VX = Ee({
  name: String,
  id: String,
  modelValue: {
    type: [Array, String, Number, Boolean, Object],
    default: void 0
  },
  autocomplete: {
    type: String,
    default: "off"
  },
  automaticDropdown: Boolean,
  size: Ts,
  effect: {
    type: ce(String),
    default: "light"
  },
  disabled: Boolean,
  clearable: Boolean,
  filterable: Boolean,
  allowCreate: Boolean,
  loading: Boolean,
  popperClass: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: ce(Object),
    default: () => ({})
  },
  remote: Boolean,
  loadingText: String,
  noMatchText: String,
  noDataText: String,
  remoteMethod: Function,
  filterMethod: Function,
  multiple: Boolean,
  multipleLimit: {
    type: Number,
    default: 0
  },
  placeholder: {
    type: String
  },
  defaultFirstOption: Boolean,
  reserveKeyword: {
    type: Boolean,
    default: !0
  },
  valueKey: {
    type: String,
    default: "value"
  },
  collapseTags: Boolean,
  collapseTagsTooltip: Boolean,
  maxCollapseTags: {
    type: Number,
    default: 1
  },
  teleported: gi.teleported,
  persistent: {
    type: Boolean,
    default: !0
  },
  clearIcon: {
    type: kn,
    default: Ku
  },
  fitInputWidth: Boolean,
  suffixIcon: {
    type: kn,
    default: Gu
  },
  tagType: { ...o0.type, default: "info" },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  remoteShowSuffix: Boolean,
  suffixTransition: {
    type: Boolean,
    default: !0
  },
  placement: {
    type: ce(String),
    values: yf,
    default: "bottom-start"
  },
  fallbackPlacements: {
    type: ce(Array),
    default: ["bottom-start", "top-start", "right", "left"]
  },
  ariaLabel: {
    type: String,
    default: void 0
  }
}), SC = "ElSelect", FX = F({
  name: SC,
  componentName: SC,
  components: {
    ElInput: ic,
    ElSelectMenu: BX,
    ElOption: H1,
    ElOptions: jX,
    ElTag: jg,
    ElScrollbar: wf,
    ElTooltip: Bo,
    ElIcon: Fe
  },
  directives: { ClickOutside: Sf },
  props: VX,
  emits: [
    ot,
    Un,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(n, { emit: e }) {
    const t = zX(n, e);
    return ft(l0, Gt({
      props: n,
      states: t.states,
      optionsArray: t.optionsArray,
      handleOptionSelect: t.handleOptionSelect,
      onOptionCreate: t.onOptionCreate,
      onOptionDestroy: t.onOptionDestroy,
      selectRef: t.selectRef,
      setSelected: t.setSelected
    })), {
      ...t
    };
  }
}), ZX = ["id", "disabled", "autocomplete", "readonly", "aria-activedescendant", "aria-controls", "aria-expanded", "aria-label"], qX = ["textContent"];
function WX(n, e, t, i, s, r) {
  const o = nt("el-tag"), l = nt("el-tooltip"), a = nt("el-icon"), c = nt("el-option"), u = nt("el-options"), h = nt("el-scrollbar"), d = nt("el-select-menu"), f = Vm("click-outside");
  return it((R(), V("div", {
    ref: "selectRef",
    class: L([n.nsSelect.b(), n.nsSelect.m(n.selectSize)]),
    onMouseenter: e[14] || (e[14] = (p) => n.states.inputHovering = !0),
    onMouseleave: e[15] || (e[15] = (p) => n.states.inputHovering = !1),
    onClick: e[16] || (e[16] = Le((...p) => n.toggleMenu && n.toggleMenu(...p), ["stop"]))
  }, [
    K(l, {
      ref: "tooltipRef",
      visible: n.dropdownMenuVisible,
      placement: n.placement,
      teleported: n.teleported,
      "popper-class": [n.nsSelect.e("popper"), n.popperClass],
      "popper-options": n.popperOptions,
      "fallback-placements": n.fallbackPlacements,
      effect: n.effect,
      pure: "",
      trigger: "click",
      transition: `${n.nsSelect.namespace.value}-zoom-in-top`,
      "stop-popper-mouse-event": !1,
      "gpu-acceleration": !1,
      persistent: n.persistent,
      onBeforeShow: n.handleMenuEnter,
      onHide: e[13] || (e[13] = (p) => n.states.isBeforeHide = !1)
    }, {
      default: Y(() => {
        var p;
        return [
          Z("div", {
            ref: "wrapperRef",
            class: L([
              n.nsSelect.e("wrapper"),
              n.nsSelect.is("focused", n.isFocused),
              n.nsSelect.is("hovering", n.states.inputHovering),
              n.nsSelect.is("filterable", n.filterable),
              n.nsSelect.is("disabled", n.selectDisabled)
            ])
          }, [
            n.$slots.prefix ? (R(), V("div", {
              key: 0,
              ref: "prefixRef",
              class: L(n.nsSelect.e("prefix"))
            }, [
              de(n.$slots, "prefix")
            ], 2)) : G("v-if", !0),
            Z("div", {
              ref: "selectionRef",
              class: L([
                n.nsSelect.e("selection"),
                n.nsSelect.is("near", n.multiple && !n.$slots.prefix && !!n.states.selected.length)
              ])
            }, [
              n.multiple ? de(n.$slots, "tag", { key: 0 }, () => [
                (R(!0), V(Tt, null, oi(n.showTagList, (g) => (R(), V("div", {
                  key: n.getValueKey(g),
                  class: L(n.nsSelect.e("selected-item"))
                }, [
                  K(o, {
                    closable: !n.selectDisabled && !g.isDisabled,
                    size: n.collapseTagSize,
                    type: n.tagType,
                    "disable-transitions": "",
                    style: Qe(n.tagStyle),
                    onClose: (m) => n.deleteTag(m, g)
                  }, {
                    default: Y(() => [
                      Z("span", {
                        class: L(n.nsSelect.e("tags-text"))
                      }, xe(g.currentLabel), 3)
                    ]),
                    _: 2
                  }, 1032, ["closable", "size", "type", "style", "onClose"])
                ], 2))), 128)),
                n.collapseTags && n.states.selected.length > n.maxCollapseTags ? (R(), ie(l, {
                  key: 0,
                  ref: "tagTooltipRef",
                  disabled: n.dropdownMenuVisible || !n.collapseTagsTooltip,
                  "fallback-placements": ["bottom", "top", "right", "left"],
                  effect: n.effect,
                  placement: "bottom",
                  teleported: n.teleported
                }, {
                  default: Y(() => [
                    Z("div", {
                      ref: "collapseItemRef",
                      class: L(n.nsSelect.e("selected-item"))
                    }, [
                      K(o, {
                        closable: !1,
                        size: n.collapseTagSize,
                        type: n.tagType,
                        "disable-transitions": "",
                        style: Qe(n.collapseTagStyle)
                      }, {
                        default: Y(() => [
                          Z("span", {
                            class: L(n.nsSelect.e("tags-text"))
                          }, " + " + xe(n.states.selected.length - n.maxCollapseTags), 3)
                        ]),
                        _: 1
                      }, 8, ["size", "type", "style"])
                    ], 2)
                  ]),
                  content: Y(() => [
                    Z("div", {
                      ref: "tagMenuRef",
                      class: L(n.nsSelect.e("selection"))
                    }, [
                      (R(!0), V(Tt, null, oi(n.collapseTagList, (g) => (R(), V("div", {
                        key: n.getValueKey(g),
                        class: L(n.nsSelect.e("selected-item"))
                      }, [
                        K(o, {
                          class: "in-tooltip",
                          closable: !n.selectDisabled && !g.isDisabled,
                          size: n.collapseTagSize,
                          type: n.tagType,
                          "disable-transitions": "",
                          onClose: (m) => n.deleteTag(m, g)
                        }, {
                          default: Y(() => [
                            Z("span", {
                              class: L(n.nsSelect.e("tags-text"))
                            }, xe(g.currentLabel), 3)
                          ]),
                          _: 2
                        }, 1032, ["closable", "size", "type", "onClose"])
                      ], 2))), 128))
                    ], 2)
                  ]),
                  _: 1
                }, 8, ["disabled", "effect", "teleported"])) : G("v-if", !0)
              ]) : G("v-if", !0),
              n.selectDisabled ? G("v-if", !0) : (R(), V("div", {
                key: 1,
                class: L([
                  n.nsSelect.e("selected-item"),
                  n.nsSelect.e("input-wrapper"),
                  n.nsSelect.is("hidden", !n.filterable)
                ])
              }, [
                it(Z("input", {
                  id: n.inputId,
                  ref: "inputRef",
                  "onUpdate:modelValue": e[0] || (e[0] = (g) => n.states.inputValue = g),
                  type: "text",
                  class: L([n.nsSelect.e("input"), n.nsSelect.is(n.selectSize)]),
                  disabled: n.selectDisabled,
                  autocomplete: n.autocomplete,
                  style: Qe(n.inputStyle),
                  role: "combobox",
                  readonly: !n.filterable,
                  spellcheck: "false",
                  "aria-activedescendant": ((p = n.hoverOption) == null ? void 0 : p.id) || "",
                  "aria-controls": n.contentId,
                  "aria-expanded": n.dropdownMenuVisible,
                  "aria-label": n.ariaLabel,
                  "aria-autocomplete": "none",
                  "aria-haspopup": "listbox",
                  onFocus: e[1] || (e[1] = (...g) => n.handleFocus && n.handleFocus(...g)),
                  onBlur: e[2] || (e[2] = (...g) => n.handleBlur && n.handleBlur(...g)),
                  onKeydown: [
                    e[3] || (e[3] = Ut(Le((g) => n.navigateOptions("next"), ["stop", "prevent"]), ["down"])),
                    e[4] || (e[4] = Ut(Le((g) => n.navigateOptions("prev"), ["stop", "prevent"]), ["up"])),
                    e[5] || (e[5] = Ut(Le((...g) => n.handleEsc && n.handleEsc(...g), ["stop", "prevent"]), ["esc"])),
                    e[6] || (e[6] = Ut(Le((...g) => n.selectOption && n.selectOption(...g), ["stop", "prevent"]), ["enter"])),
                    e[7] || (e[7] = Ut(Le((...g) => n.deletePrevTag && n.deletePrevTag(...g), ["stop"]), ["delete"]))
                  ],
                  onCompositionstart: e[8] || (e[8] = (...g) => n.handleCompositionStart && n.handleCompositionStart(...g)),
                  onCompositionupdate: e[9] || (e[9] = (...g) => n.handleCompositionUpdate && n.handleCompositionUpdate(...g)),
                  onCompositionend: e[10] || (e[10] = (...g) => n.handleCompositionEnd && n.handleCompositionEnd(...g)),
                  onInput: e[11] || (e[11] = (...g) => n.onInput && n.onInput(...g)),
                  onClick: e[12] || (e[12] = Le((...g) => n.toggleMenu && n.toggleMenu(...g), ["stop"]))
                }, null, 46, ZX), [
                  [r1, n.states.inputValue]
                ]),
                n.filterable ? (R(), V("span", {
                  key: 0,
                  ref: "calculatorRef",
                  "aria-hidden": "true",
                  class: L(n.nsSelect.e("input-calculator")),
                  textContent: xe(n.states.inputValue)
                }, null, 10, qX)) : G("v-if", !0)
              ], 2)),
              n.shouldShowPlaceholder ? (R(), V("div", {
                key: 2,
                class: L([
                  n.nsSelect.e("selected-item"),
                  n.nsSelect.e("placeholder"),
                  n.nsSelect.is("transparent", !n.hasModelValue || n.expanded && !n.states.inputValue)
                ])
              }, [
                Z("span", null, xe(n.currentPlaceholder), 1)
              ], 2)) : G("v-if", !0)
            ], 2),
            Z("div", {
              ref: "suffixRef",
              class: L(n.nsSelect.e("suffix"))
            }, [
              n.iconComponent && !n.showClose ? (R(), ie(a, {
                key: 0,
                class: L([n.nsSelect.e("caret"), n.nsSelect.e("icon"), n.iconReverse])
              }, {
                default: Y(() => [
                  (R(), ie(yt(n.iconComponent)))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0),
              n.showClose && n.clearIcon ? (R(), ie(a, {
                key: 1,
                class: L([n.nsSelect.e("caret"), n.nsSelect.e("icon")]),
                onClick: n.handleClearClick
              }, {
                default: Y(() => [
                  (R(), ie(yt(n.clearIcon)))
                ]),
                _: 1
              }, 8, ["class", "onClick"])) : G("v-if", !0),
              n.validateState && n.validateIcon ? (R(), ie(a, {
                key: 2,
                class: L([n.nsInput.e("icon"), n.nsInput.e("validateIcon")])
              }, {
                default: Y(() => [
                  (R(), ie(yt(n.validateIcon)))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0)
            ], 2)
          ], 2)
        ];
      }),
      content: Y(() => [
        K(d, { ref: "menuRef" }, {
          default: Y(() => [
            n.$slots.header ? (R(), V("div", {
              key: 0,
              class: L(n.nsSelect.be("dropdown", "header"))
            }, [
              de(n.$slots, "header")
            ], 2)) : G("v-if", !0),
            it(K(h, {
              id: n.contentId,
              ref: "scrollbarRef",
              tag: "ul",
              "wrap-class": n.nsSelect.be("dropdown", "wrap"),
              "view-class": n.nsSelect.be("dropdown", "list"),
              class: L([n.nsSelect.is("empty", n.filteredOptionsCount === 0)]),
              role: "listbox",
              "aria-label": n.ariaLabel,
              "aria-orientation": "vertical"
            }, {
              default: Y(() => [
                n.showNewOption ? (R(), ie(c, {
                  key: 0,
                  value: n.states.inputValue,
                  created: !0
                }, null, 8, ["value"])) : G("v-if", !0),
                K(u, null, {
                  default: Y(() => [
                    de(n.$slots, "default")
                  ]),
                  _: 3
                })
              ]),
              _: 3
            }, 8, ["id", "wrap-class", "view-class", "class", "aria-label"]), [
              [Qt, n.states.options.size > 0 && !n.loading]
            ]),
            n.$slots.loading && n.loading ? (R(), V("div", {
              key: 1,
              class: L(n.nsSelect.be("dropdown", "loading"))
            }, [
              de(n.$slots, "loading")
            ], 2)) : n.loading || n.filteredOptionsCount === 0 ? (R(), V("div", {
              key: 2,
              class: L(n.nsSelect.be("dropdown", "empty"))
            }, [
              de(n.$slots, "empty", {}, () => [
                Z("span", null, xe(n.emptyText), 1)
              ])
            ], 2)) : G("v-if", !0),
            n.$slots.footer ? (R(), V("div", {
              key: 3,
              class: L(n.nsSelect.be("dropdown", "footer"))
            }, [
              de(n.$slots, "footer")
            ], 2)) : G("v-if", !0)
          ]),
          _: 3
        }, 512)
      ]),
      _: 3
    }, 8, ["visible", "placement", "teleported", "popper-class", "popper-options", "fallback-placements", "effect", "transition", "persistent", "onBeforeShow"])
  ], 34)), [
    [f, n.handleClickOutside, n.popperRef]
  ]);
}
var HX = /* @__PURE__ */ Ce(FX, [["render", WX], ["__file", "select.vue"]]);
const XX = F({
  name: "ElOptionGroup",
  componentName: "ElOptionGroup",
  props: {
    label: String,
    disabled: Boolean
  },
  setup(n) {
    const e = me("select"), t = D(null), i = Xe(), s = D([]);
    ft(QT, Gt({
      ...Ws(n)
    }));
    const r = $(() => s.value.some((a) => a.visible === !0)), o = (a) => {
      const c = [];
      return xt(a.children) && a.children.forEach((u) => {
        var h, d;
        u.type && u.type.name === "ElOption" && u.component && u.component.proxy ? c.push(u.component.proxy) : (h = u.children) != null && h.length ? c.push(...o(u)) : (d = u.component) != null && d.subTree && c.push(...o(u.component.subTree));
      }), c;
    }, l = () => {
      s.value = o(i.subTree);
    };
    return qe(() => {
      l();
    }), FV(t, l, {
      attributes: !0,
      subtree: !0,
      childList: !0
    }), {
      groupRef: t,
      visible: r,
      ns: e
    };
  }
});
function YX(n, e, t, i, s, r) {
  return it((R(), V("ul", {
    ref: "groupRef",
    class: L(n.ns.be("group", "wrap"))
  }, [
    Z("li", {
      class: L(n.ns.be("group", "title"))
    }, xe(n.label), 3),
    Z("li", null, [
      Z("ul", {
        class: L(n.ns.b("group"))
      }, [
        de(n.$slots, "default")
      ], 2)
    ])
  ], 2)), [
    [Qt, n.visible]
  ]);
}
var jT = /* @__PURE__ */ Ce(XX, [["render", YX], ["__file", "option-group.vue"]]);
const UX = Ft(HX, {
  Option: H1,
  OptionGroup: jT
}), GX = Er(H1);
Er(jT);
const X1 = () => ke(BT, {}), KX = Ee({
  pageSize: {
    type: Number,
    required: !0
  },
  pageSizes: {
    type: ce(Array),
    default: () => Ys([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String
  },
  disabled: Boolean,
  teleported: Boolean,
  size: {
    type: String,
    values: nc
  }
}), JX = F({
  name: "ElPaginationSizes"
}), eY = /* @__PURE__ */ F({
  ...JX,
  props: KX,
  emits: ["page-size-change"],
  setup(n, { emit: e }) {
    const t = n, { t: i } = mn(), s = me("pagination"), r = X1(), o = D(t.pageSize);
    ne(() => t.pageSizes, (c, u) => {
      if (!cn(c, u) && Array.isArray(c)) {
        const h = c.includes(t.pageSize) ? t.pageSize : t.pageSizes[0];
        e("page-size-change", h);
      }
    }), ne(() => t.pageSize, (c) => {
      o.value = c;
    });
    const l = $(() => t.pageSizes);
    function a(c) {
      var u;
      c !== o.value && (o.value = c, (u = r.handleSizeChange) == null || u.call(r, Number(c)));
    }
    return (c, u) => (R(), V("span", {
      class: L(y(s).e("sizes"))
    }, [
      K(y(UX), {
        "model-value": o.value,
        disabled: c.disabled,
        "popper-class": c.popperClass,
        size: c.size,
        teleported: c.teleported,
        "validate-event": !1,
        onChange: a
      }, {
        default: Y(() => [
          (R(!0), V(Tt, null, oi(y(l), (h) => (R(), ie(y(GX), {
            key: h,
            value: h,
            label: h + y(i)("el.pagination.pagesize")
          }, null, 8, ["value", "label"]))), 128))
        ]),
        _: 1
      }, 8, ["model-value", "disabled", "popper-class", "size", "teleported"])
    ], 2));
  }
});
var tY = /* @__PURE__ */ Ce(eY, [["__file", "sizes.vue"]]);
const nY = Ee({
  size: {
    type: String,
    values: nc
  }
}), iY = ["disabled"], sY = F({
  name: "ElPaginationJumper"
}), rY = /* @__PURE__ */ F({
  ...sY,
  props: nY,
  setup(n) {
    const { t: e } = mn(), t = me("pagination"), { pageCount: i, disabled: s, currentPage: r, changeEvent: o } = X1(), l = D(), a = $(() => {
      var h;
      return (h = l.value) != null ? h : r == null ? void 0 : r.value;
    });
    function c(h) {
      l.value = h ? +h : "";
    }
    function u(h) {
      h = Math.trunc(+h), o == null || o(h), l.value = void 0;
    }
    return (h, d) => (R(), V("span", {
      class: L(y(t).e("jump")),
      disabled: y(s)
    }, [
      Z("span", {
        class: L([y(t).e("goto")])
      }, xe(y(e)("el.pagination.goto")), 3),
      K(y(ic), {
        size: h.size,
        class: L([y(t).e("editor"), y(t).is("in-pagination")]),
        min: 1,
        max: y(i),
        disabled: y(s),
        "model-value": y(a),
        "validate-event": !1,
        label: y(e)("el.pagination.page"),
        type: "number",
        "onUpdate:modelValue": c,
        onChange: u
      }, null, 8, ["size", "class", "max", "disabled", "model-value", "label"]),
      Z("span", {
        class: L([y(t).e("classifier")])
      }, xe(y(e)("el.pagination.pageClassifier")), 3)
    ], 10, iY));
  }
});
var oY = /* @__PURE__ */ Ce(rY, [["__file", "jumper.vue"]]);
const lY = Ee({
  total: {
    type: Number,
    default: 1e3
  }
}), aY = ["disabled"], cY = F({
  name: "ElPaginationTotal"
}), uY = /* @__PURE__ */ F({
  ...cY,
  props: lY,
  setup(n) {
    const { t: e } = mn(), t = me("pagination"), { disabled: i } = X1();
    return (s, r) => (R(), V("span", {
      class: L(y(t).e("total")),
      disabled: y(i)
    }, xe(y(e)("el.pagination.total", {
      total: s.total
    })), 11, aY));
  }
});
var hY = /* @__PURE__ */ Ce(uY, [["__file", "total.vue"]]);
const dY = Ee({
  currentPage: {
    type: Number,
    default: 1
  },
  pageCount: {
    type: Number,
    required: !0
  },
  pagerCount: {
    type: Number,
    default: 7
  },
  disabled: Boolean
}), fY = ["onKeyup"], pY = ["aria-current", "aria-label", "tabindex"], gY = ["tabindex", "aria-label"], mY = ["aria-current", "aria-label", "tabindex"], vY = ["tabindex", "aria-label"], bY = ["aria-current", "aria-label", "tabindex"], yY = F({
  name: "ElPaginationPager"
}), OY = /* @__PURE__ */ F({
  ...yY,
  props: dY,
  emits: ["change"],
  setup(n, { emit: e }) {
    const t = n, i = me("pager"), s = me("icon"), { t: r } = mn(), o = D(!1), l = D(!1), a = D(!1), c = D(!1), u = D(!1), h = D(!1), d = $(() => {
      const w = t.pagerCount, x = (w - 1) / 2, S = Number(t.currentPage), C = Number(t.pageCount);
      let k = !1, E = !1;
      C > w && (S > w - x && (k = !0), S < C - x && (E = !0));
      const M = [];
      if (k && !E) {
        const _ = C - (w - 2);
        for (let T = _; T < C; T++)
          M.push(T);
      } else if (!k && E)
        for (let _ = 2; _ < w; _++)
          M.push(_);
      else if (k && E) {
        const _ = Math.floor(w / 2) - 1;
        for (let T = S - _; T <= S + _; T++)
          M.push(T);
      } else
        for (let _ = 2; _ < C; _++)
          M.push(_);
      return M;
    }), f = $(() => [
      "more",
      "btn-quickprev",
      s.b(),
      i.is("disabled", t.disabled)
    ]), p = $(() => [
      "more",
      "btn-quicknext",
      s.b(),
      i.is("disabled", t.disabled)
    ]), g = $(() => t.disabled ? -1 : 0);
    Vs(() => {
      const w = (t.pagerCount - 1) / 2;
      o.value = !1, l.value = !1, t.pageCount > t.pagerCount && (t.currentPage > t.pagerCount - w && (o.value = !0), t.currentPage < t.pageCount - w && (l.value = !0));
    });
    function m(w = !1) {
      t.disabled || (w ? a.value = !0 : c.value = !0);
    }
    function v(w = !1) {
      w ? u.value = !0 : h.value = !0;
    }
    function O(w) {
      const x = w.target;
      if (x.tagName.toLowerCase() === "li" && Array.from(x.classList).includes("number")) {
        const S = Number(x.textContent);
        S !== t.currentPage && e("change", S);
      } else
        x.tagName.toLowerCase() === "li" && Array.from(x.classList).includes("more") && b(w);
    }
    function b(w) {
      const x = w.target;
      if (x.tagName.toLowerCase() === "ul" || t.disabled)
        return;
      let S = Number(x.textContent);
      const C = t.pageCount, k = t.currentPage, E = t.pagerCount - 2;
      x.className.includes("more") && (x.className.includes("quickprev") ? S = k - E : x.className.includes("quicknext") && (S = k + E)), Number.isNaN(+S) || (S < 1 && (S = 1), S > C && (S = C)), S !== k && e("change", S);
    }
    return (w, x) => (R(), V("ul", {
      class: L(y(i).b()),
      onClick: b,
      onKeyup: Ut(O, ["enter"])
    }, [
      w.pageCount > 0 ? (R(), V("li", {
        key: 0,
        class: L([[
          y(i).is("active", w.currentPage === 1),
          y(i).is("disabled", w.disabled)
        ], "number"]),
        "aria-current": w.currentPage === 1,
        "aria-label": y(r)("el.pagination.currentPage", { pager: 1 }),
        tabindex: y(g)
      }, " 1 ", 10, pY)) : G("v-if", !0),
      o.value ? (R(), V("li", {
        key: 1,
        class: L(y(f)),
        tabindex: y(g),
        "aria-label": y(r)("el.pagination.prevPages", { pager: w.pagerCount - 2 }),
        onMouseenter: x[0] || (x[0] = (S) => m(!0)),
        onMouseleave: x[1] || (x[1] = (S) => a.value = !1),
        onFocus: x[2] || (x[2] = (S) => v(!0)),
        onBlur: x[3] || (x[3] = (S) => u.value = !1)
      }, [
        (a.value || u.value) && !w.disabled ? (R(), ie(y(Lz), { key: 0 })) : (R(), ie(y(cS), { key: 1 }))
      ], 42, gY)) : G("v-if", !0),
      (R(!0), V(Tt, null, oi(y(d), (S) => (R(), V("li", {
        key: S,
        class: L([[
          y(i).is("active", w.currentPage === S),
          y(i).is("disabled", w.disabled)
        ], "number"]),
        "aria-current": w.currentPage === S,
        "aria-label": y(r)("el.pagination.currentPage", { pager: S }),
        tabindex: y(g)
      }, xe(S), 11, mY))), 128)),
      l.value ? (R(), V("li", {
        key: 2,
        class: L(y(p)),
        tabindex: y(g),
        "aria-label": y(r)("el.pagination.nextPages", { pager: w.pagerCount - 2 }),
        onMouseenter: x[4] || (x[4] = (S) => m()),
        onMouseleave: x[5] || (x[5] = (S) => c.value = !1),
        onFocus: x[6] || (x[6] = (S) => v()),
        onBlur: x[7] || (x[7] = (S) => h.value = !1)
      }, [
        (c.value || h.value) && !w.disabled ? (R(), ie(y(Bz), { key: 0 })) : (R(), ie(y(cS), { key: 1 }))
      ], 42, vY)) : G("v-if", !0),
      w.pageCount > 1 ? (R(), V("li", {
        key: 3,
        class: L([[
          y(i).is("active", w.currentPage === w.pageCount),
          y(i).is("disabled", w.disabled)
        ], "number"]),
        "aria-current": w.currentPage === w.pageCount,
        "aria-label": y(r)("el.pagination.currentPage", { pager: w.pageCount }),
        tabindex: y(g)
      }, xe(w.pageCount), 11, bY)) : G("v-if", !0)
    ], 42, fY));
  }
});
var wY = /* @__PURE__ */ Ce(OY, [["__file", "pager.vue"]]);
const Qi = (n) => typeof n != "number", xY = Ee({
  pageSize: Number,
  defaultPageSize: Number,
  total: Number,
  pageCount: Number,
  pagerCount: {
    type: Number,
    validator: (n) => tt(n) && Math.trunc(n) === n && n > 4 && n < 22 && n % 2 === 1,
    default: 7
  },
  currentPage: Number,
  defaultCurrentPage: Number,
  layout: {
    type: String,
    default: ["prev", "pager", "next", "jumper", "->", "total"].join(", ")
  },
  pageSizes: {
    type: ce(Array),
    default: () => Ys([10, 20, 30, 40, 50, 100])
  },
  popperClass: {
    type: String,
    default: ""
  },
  prevText: {
    type: String,
    default: ""
  },
  prevIcon: {
    type: kn,
    default: () => O1
  },
  nextText: {
    type: String,
    default: ""
  },
  nextIcon: {
    type: kn,
    default: () => ec
  },
  teleported: {
    type: Boolean,
    default: !0
  },
  small: Boolean,
  background: Boolean,
  disabled: Boolean,
  hideOnSinglePage: Boolean
}), SY = {
  "update:current-page": (n) => tt(n),
  "update:page-size": (n) => tt(n),
  "size-change": (n) => tt(n),
  change: (n, e) => tt(n) && tt(e),
  "current-change": (n) => tt(n),
  "prev-click": (n) => tt(n),
  "next-click": (n) => tt(n)
}, CC = "ElPagination";
var CY = F({
  name: CC,
  props: xY,
  emits: SY,
  setup(n, { emit: e, slots: t }) {
    const { t: i } = mn(), s = me("pagination"), r = Xe().vnode.props || {}, o = "onUpdate:currentPage" in r || "onUpdate:current-page" in r || "onCurrentChange" in r, l = "onUpdate:pageSize" in r || "onUpdate:page-size" in r || "onSizeChange" in r, a = $(() => {
      if (Qi(n.total) && Qi(n.pageCount) || !Qi(n.currentPage) && !o)
        return !1;
      if (n.layout.includes("sizes")) {
        if (Qi(n.pageCount)) {
          if (!Qi(n.total) && !Qi(n.pageSize) && !l)
            return !1;
        } else if (!l)
          return !1;
      }
      return !0;
    }), c = D(Qi(n.defaultPageSize) ? 10 : n.defaultPageSize), u = D(Qi(n.defaultCurrentPage) ? 1 : n.defaultCurrentPage), h = $({
      get() {
        return Qi(n.pageSize) ? c.value : n.pageSize;
      },
      set(b) {
        Qi(n.pageSize) && (c.value = b), l && (e("update:page-size", b), e("size-change", b));
      }
    }), d = $(() => {
      let b = 0;
      return Qi(n.pageCount) ? Qi(n.total) || (b = Math.max(1, Math.ceil(n.total / h.value))) : b = n.pageCount, b;
    }), f = $({
      get() {
        return Qi(n.currentPage) ? u.value : n.currentPage;
      },
      set(b) {
        let w = b;
        b < 1 ? w = 1 : b > d.value && (w = d.value), Qi(n.currentPage) && (u.value = w), o && (e("update:current-page", w), e("current-change", w));
      }
    });
    ne(d, (b) => {
      f.value > b && (f.value = b);
    }), ne([f, h], (b) => {
      e("change", ...b);
    }, { flush: "post" });
    function p(b) {
      f.value = b;
    }
    function g(b) {
      h.value = b;
      const w = d.value;
      f.value > w && (f.value = w);
    }
    function m() {
      n.disabled || (f.value -= 1, e("prev-click", f.value));
    }
    function v() {
      n.disabled || (f.value += 1, e("next-click", f.value));
    }
    function O(b, w) {
      b && (b.props || (b.props = {}), b.props.class = [b.props.class, w].join(" "));
    }
    return ft(BT, {
      pageCount: d,
      disabled: $(() => n.disabled),
      currentPage: f,
      changeEvent: p,
      handleSizeChange: g
    }), () => {
      var b, w;
      if (!a.value)
        return pt(CC, i("el.pagination.deprecationWarning")), null;
      if (!n.layout || n.hideOnSinglePage && d.value <= 1)
        return null;
      const x = [], S = [], C = Re("div", { class: s.e("rightwrapper") }, S), k = {
        prev: Re(kX, {
          disabled: n.disabled,
          currentPage: f.value,
          prevText: n.prevText,
          prevIcon: n.prevIcon,
          onClick: m
        }),
        jumper: Re(oY, {
          size: n.small ? "small" : "default"
        }),
        pager: Re(wY, {
          currentPage: f.value,
          pageCount: d.value,
          pagerCount: n.pagerCount,
          onChange: p,
          disabled: n.disabled
        }),
        next: Re(_X, {
          disabled: n.disabled,
          currentPage: f.value,
          pageCount: d.value,
          nextText: n.nextText,
          nextIcon: n.nextIcon,
          onClick: v
        }),
        sizes: Re(tY, {
          pageSize: h.value,
          pageSizes: n.pageSizes,
          popperClass: n.popperClass,
          disabled: n.disabled,
          teleported: n.teleported,
          size: n.small ? "small" : "default"
        }),
        slot: (w = (b = t == null ? void 0 : t.default) == null ? void 0 : b.call(t)) != null ? w : null,
        total: Re(hY, { total: Qi(n.total) ? 0 : n.total })
      }, E = n.layout.split(",").map((_) => _.trim());
      let M = !1;
      return E.forEach((_) => {
        if (_ === "->") {
          M = !0;
          return;
        }
        M ? S.push(k[_]) : x.push(k[_]);
      }), O(x[0], s.is("first")), O(x[x.length - 1], s.is("last")), M && S.length > 0 && (O(S[0], s.is("first")), O(S[S.length - 1], s.is("last")), x.push(C)), Re("div", {
        class: [
          s.b(),
          s.is("background", n.background),
          {
            [s.m("small")]: n.small
          }
        ]
      }, x);
    };
  }
});
const kUe = Ft(CY), kY = Ee({
  title: String,
  confirmButtonText: String,
  cancelButtonText: String,
  confirmButtonType: {
    type: String,
    values: Yb,
    default: "primary"
  },
  cancelButtonType: {
    type: String,
    values: Yb,
    default: "text"
  },
  icon: {
    type: kn,
    default: () => dj
  },
  iconColor: {
    type: String,
    default: "#f90"
  },
  hideIcon: {
    type: Boolean,
    default: !1
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  teleported: gi.teleported,
  persistent: gi.persistent,
  width: {
    type: [String, Number],
    default: 150
  }
}), PY = {
  confirm: (n) => n instanceof MouseEvent,
  cancel: (n) => n instanceof MouseEvent
}, EY = F({
  name: "ElPopconfirm"
}), AY = /* @__PURE__ */ F({
  ...EY,
  props: kY,
  emits: PY,
  setup(n, { emit: e }) {
    const t = n, { t: i } = mn(), s = me("popconfirm"), r = D(), o = () => {
      var d, f;
      (f = (d = r.value) == null ? void 0 : d.onClose) == null || f.call(d);
    }, l = $(() => ({
      width: cs(t.width)
    })), a = (d) => {
      e("confirm", d), o();
    }, c = (d) => {
      e("cancel", d), o();
    }, u = $(() => t.confirmButtonText || i("el.popconfirm.confirmButtonText")), h = $(() => t.cancelButtonText || i("el.popconfirm.cancelButtonText"));
    return (d, f) => (R(), ie(y(Bo), ki({
      ref_key: "tooltipRef",
      ref: r,
      trigger: "click",
      effect: "light"
    }, d.$attrs, {
      "popper-class": `${y(s).namespace.value}-popover`,
      "popper-style": y(l),
      teleported: d.teleported,
      "fallback-placements": ["bottom", "top", "right", "left"],
      "hide-after": d.hideAfter,
      persistent: d.persistent
    }), {
      content: Y(() => [
        Z("div", {
          class: L(y(s).b())
        }, [
          Z("div", {
            class: L(y(s).e("main"))
          }, [
            !d.hideIcon && d.icon ? (R(), ie(y(Fe), {
              key: 0,
              class: L(y(s).e("icon")),
              style: Qe({ color: d.iconColor })
            }, {
              default: Y(() => [
                (R(), ie(yt(d.icon)))
              ]),
              _: 1
            }, 8, ["class", "style"])) : G("v-if", !0),
            Xn(" " + xe(d.title), 1)
          ], 2),
          Z("div", {
            class: L(y(s).e("action"))
          }, [
            K(y(Qa), {
              size: "small",
              type: d.cancelButtonType === "text" ? "" : d.cancelButtonType,
              text: d.cancelButtonType === "text",
              onClick: c
            }, {
              default: Y(() => [
                Xn(xe(y(h)), 1)
              ]),
              _: 1
            }, 8, ["type", "text"]),
            K(y(Qa), {
              size: "small",
              type: d.confirmButtonType === "text" ? "" : d.confirmButtonType,
              text: d.confirmButtonType === "text",
              onClick: a
            }, {
              default: Y(() => [
                Xn(xe(y(u)), 1)
              ]),
              _: 1
            }, 8, ["type", "text"])
          ], 2)
        ], 2)
      ]),
      default: Y(() => [
        d.$slots.reference ? de(d.$slots, "reference", { key: 0 }) : G("v-if", !0)
      ]),
      _: 3
    }, 16, ["popper-class", "popper-style", "teleported", "hide-after", "persistent"]));
  }
});
var $Y = /* @__PURE__ */ Ce(AY, [["__file", "popconfirm.vue"]]);
const PUe = Ft($Y), TY = Ee({
  trigger: Pd.trigger,
  placement: vv.placement,
  disabled: Pd.disabled,
  visible: gi.visible,
  transition: gi.transition,
  popperOptions: vv.popperOptions,
  tabindex: vv.tabindex,
  content: gi.content,
  popperStyle: gi.popperStyle,
  popperClass: gi.popperClass,
  enterable: {
    ...gi.enterable,
    default: !0
  },
  effect: {
    ...gi.effect,
    default: "light"
  },
  teleported: gi.teleported,
  title: String,
  width: {
    type: [String, Number],
    default: 150
  },
  offset: {
    type: Number,
    default: void 0
  },
  showAfter: {
    type: Number,
    default: 0
  },
  hideAfter: {
    type: Number,
    default: 200
  },
  autoClose: {
    type: Number,
    default: 0
  },
  showArrow: {
    type: Boolean,
    default: !0
  },
  persistent: {
    type: Boolean,
    default: !0
  },
  "onUpdate:visible": {
    type: Function
  }
}), _Y = {
  "update:visible": (n) => Pi(n),
  "before-enter": () => !0,
  "before-leave": () => !0,
  "after-enter": () => !0,
  "after-leave": () => !0
}, MY = "onUpdate:visible", RY = F({
  name: "ElPopover"
}), NY = /* @__PURE__ */ F({
  ...RY,
  props: TY,
  emits: _Y,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = $(() => i[MY]), r = me("popover"), o = D(), l = $(() => {
      var m;
      return (m = y(o)) == null ? void 0 : m.popperRef;
    }), a = $(() => [
      {
        width: cs(i.width)
      },
      i.popperStyle
    ]), c = $(() => [r.b(), i.popperClass, { [r.m("plain")]: !!i.content }]), u = $(() => i.transition === `${r.namespace.value}-fade-in-linear`), h = () => {
      var m;
      (m = o.value) == null || m.hide();
    }, d = () => {
      t("before-enter");
    }, f = () => {
      t("before-leave");
    }, p = () => {
      t("after-enter");
    }, g = () => {
      t("update:visible", !1), t("after-leave");
    };
    return e({
      popperRef: l,
      hide: h
    }), (m, v) => (R(), ie(y(Bo), ki({
      ref_key: "tooltipRef",
      ref: o
    }, m.$attrs, {
      trigger: m.trigger,
      placement: m.placement,
      disabled: m.disabled,
      visible: m.visible,
      transition: m.transition,
      "popper-options": m.popperOptions,
      tabindex: m.tabindex,
      content: m.content,
      offset: m.offset,
      "show-after": m.showAfter,
      "hide-after": m.hideAfter,
      "auto-close": m.autoClose,
      "show-arrow": m.showArrow,
      "aria-label": m.title,
      effect: m.effect,
      enterable: m.enterable,
      "popper-class": y(c),
      "popper-style": y(a),
      teleported: m.teleported,
      persistent: m.persistent,
      "gpu-acceleration": y(u),
      "onUpdate:visible": y(s),
      onBeforeShow: d,
      onBeforeHide: f,
      onShow: p,
      onHide: g
    }), {
      content: Y(() => [
        m.title ? (R(), V("div", {
          key: 0,
          class: L(y(r).e("title")),
          role: "title"
        }, xe(m.title), 3)) : G("v-if", !0),
        de(m.$slots, "default", {}, () => [
          Xn(xe(m.content), 1)
        ])
      ]),
      default: Y(() => [
        m.$slots.reference ? de(m.$slots, "reference", { key: 0 }) : G("v-if", !0)
      ]),
      _: 3
    }, 16, ["trigger", "placement", "disabled", "visible", "transition", "popper-options", "tabindex", "content", "offset", "show-after", "hide-after", "auto-close", "show-arrow", "aria-label", "effect", "enterable", "popper-class", "popper-style", "teleported", "persistent", "gpu-acceleration", "onUpdate:visible"]));
  }
});
var DY = /* @__PURE__ */ Ce(NY, [["__file", "popover.vue"]]);
const kC = (n, e) => {
  const t = e.arg || e.value, i = t == null ? void 0 : t.popperRef;
  i && (i.triggerRef = n);
};
var LY = {
  mounted(n, e) {
    kC(n, e);
  },
  updated(n, e) {
    kC(n, e);
  }
};
const IY = "popover", BY = uF(LY, IY), EUe = Ft(DY, {
  directive: BY
}), QY = Ee({
  type: {
    type: String,
    default: "line",
    values: ["line", "circle", "dashboard"]
  },
  percentage: {
    type: Number,
    default: 0,
    validator: (n) => n >= 0 && n <= 100
  },
  status: {
    type: String,
    default: "",
    values: ["", "success", "exception", "warning"]
  },
  indeterminate: {
    type: Boolean,
    default: !1
  },
  duration: {
    type: Number,
    default: 3
  },
  strokeWidth: {
    type: Number,
    default: 6
  },
  strokeLinecap: {
    type: ce(String),
    default: "round"
  },
  textInside: {
    type: Boolean,
    default: !1
  },
  width: {
    type: Number,
    default: 126
  },
  showText: {
    type: Boolean,
    default: !0
  },
  color: {
    type: ce([
      String,
      Array,
      Function
    ]),
    default: ""
  },
  striped: Boolean,
  stripedFlow: Boolean,
  format: {
    type: ce(Function),
    default: (n) => `${n}%`
  }
}), zY = ["aria-valuenow"], jY = { viewBox: "0 0 100 100" }, VY = ["d", "stroke", "stroke-linecap", "stroke-width"], FY = ["d", "stroke", "opacity", "stroke-linecap", "stroke-width"], ZY = { key: 0 }, qY = F({
  name: "ElProgress"
}), WY = /* @__PURE__ */ F({
  ...qY,
  props: QY,
  setup(n) {
    const e = n, t = {
      success: "#13ce66",
      exception: "#ff4949",
      warning: "#e6a23c",
      default: "#20a0ff"
    }, i = me("progress"), s = $(() => ({
      width: `${e.percentage}%`,
      animationDuration: `${e.duration}s`,
      backgroundColor: O(e.percentage)
    })), r = $(() => (e.strokeWidth / e.width * 100).toFixed(1)), o = $(() => ["circle", "dashboard"].includes(e.type) ? Number.parseInt(`${50 - Number.parseFloat(r.value) / 2}`, 10) : 0), l = $(() => {
      const b = o.value, w = e.type === "dashboard";
      return `
          M 50 50
          m 0 ${w ? "" : "-"}${b}
          a ${b} ${b} 0 1 1 0 ${w ? "-" : ""}${b * 2}
          a ${b} ${b} 0 1 1 0 ${w ? "" : "-"}${b * 2}
          `;
    }), a = $(() => 2 * Math.PI * o.value), c = $(() => e.type === "dashboard" ? 0.75 : 1), u = $(() => `${-1 * a.value * (1 - c.value) / 2}px`), h = $(() => ({
      strokeDasharray: `${a.value * c.value}px, ${a.value}px`,
      strokeDashoffset: u.value
    })), d = $(() => ({
      strokeDasharray: `${a.value * c.value * (e.percentage / 100)}px, ${a.value}px`,
      strokeDashoffset: u.value,
      transition: "stroke-dasharray 0.6s ease 0s, stroke 0.6s ease, opacity ease 0.6s"
    })), f = $(() => {
      let b;
      return e.color ? b = O(e.percentage) : b = t[e.status] || t.default, b;
    }), p = $(() => e.status === "warning" ? x1 : e.type === "line" ? e.status === "success" ? w1 : Ku : e.status === "success" ? Jm : Lo), g = $(() => e.type === "line" ? 12 + e.strokeWidth * 0.4 : e.width * 0.111111 + 2), m = $(() => e.format(e.percentage));
    function v(b) {
      const w = 100 / b.length;
      return b.map((S, C) => bt(S) ? {
        color: S,
        percentage: (C + 1) * w
      } : S).sort((S, C) => S.percentage - C.percentage);
    }
    const O = (b) => {
      var w;
      const { color: x } = e;
      if (wt(x))
        return x(b);
      if (bt(x))
        return x;
      {
        const S = v(x);
        for (const C of S)
          if (C.percentage > b)
            return C.color;
        return (w = S[S.length - 1]) == null ? void 0 : w.color;
      }
    };
    return (b, w) => (R(), V("div", {
      class: L([
        y(i).b(),
        y(i).m(b.type),
        y(i).is(b.status),
        {
          [y(i).m("without-text")]: !b.showText,
          [y(i).m("text-inside")]: b.textInside
        }
      ]),
      role: "progressbar",
      "aria-valuenow": b.percentage,
      "aria-valuemin": "0",
      "aria-valuemax": "100"
    }, [
      b.type === "line" ? (R(), V("div", {
        key: 0,
        class: L(y(i).b("bar"))
      }, [
        Z("div", {
          class: L(y(i).be("bar", "outer")),
          style: Qe({ height: `${b.strokeWidth}px` })
        }, [
          Z("div", {
            class: L([
              y(i).be("bar", "inner"),
              { [y(i).bem("bar", "inner", "indeterminate")]: b.indeterminate },
              { [y(i).bem("bar", "inner", "striped")]: b.striped },
              { [y(i).bem("bar", "inner", "striped-flow")]: b.stripedFlow }
            ]),
            style: Qe(y(s))
          }, [
            (b.showText || b.$slots.default) && b.textInside ? (R(), V("div", {
              key: 0,
              class: L(y(i).be("bar", "innerText"))
            }, [
              de(b.$slots, "default", { percentage: b.percentage }, () => [
                Z("span", null, xe(y(m)), 1)
              ])
            ], 2)) : G("v-if", !0)
          ], 6)
        ], 6)
      ], 2)) : (R(), V("div", {
        key: 1,
        class: L(y(i).b("circle")),
        style: Qe({ height: `${b.width}px`, width: `${b.width}px` })
      }, [
        (R(), V("svg", jY, [
          Z("path", {
            class: L(y(i).be("circle", "track")),
            d: y(l),
            stroke: `var(${y(i).cssVarName("fill-color-light")}, #e5e9f2)`,
            "stroke-linecap": b.strokeLinecap,
            "stroke-width": y(r),
            fill: "none",
            style: Qe(y(h))
          }, null, 14, VY),
          Z("path", {
            class: L(y(i).be("circle", "path")),
            d: y(l),
            stroke: y(f),
            fill: "none",
            opacity: b.percentage ? 1 : 0,
            "stroke-linecap": b.strokeLinecap,
            "stroke-width": y(r),
            style: Qe(y(d))
          }, null, 14, FY)
        ]))
      ], 6)),
      (b.showText || b.$slots.default) && !b.textInside ? (R(), V("div", {
        key: 2,
        class: L(y(i).e("text")),
        style: Qe({ fontSize: `${y(g)}px` })
      }, [
        de(b.$slots, "default", { percentage: b.percentage }, () => [
          b.status ? (R(), ie(y(Fe), { key: 1 }, {
            default: Y(() => [
              (R(), ie(yt(y(p))))
            ]),
            _: 1
          })) : (R(), V("span", ZY, xe(y(m)), 1))
        ])
      ], 6)) : G("v-if", !0)
    ], 10, zY));
  }
});
var HY = /* @__PURE__ */ Ce(WY, [["__file", "progress.vue"]]);
const XY = Ft(HY);
var PC = Number.isNaN || function(e) {
  return typeof e == "number" && e !== e;
};
function YY(n, e) {
  return !!(n === e || PC(n) && PC(e));
}
function UY(n, e) {
  if (n.length !== e.length)
    return !1;
  for (var t = 0; t < n.length; t++)
    if (!YY(n[t], e[t]))
      return !1;
  return !0;
}
function GY(n, e) {
  e === void 0 && (e = UY);
  var t = null;
  function i() {
    for (var s = [], r = 0; r < arguments.length; r++)
      s[r] = arguments[r];
    if (t && t.lastThis === this && e(s, t.lastArgs))
      return t.lastResult;
    var o = n.apply(this, s);
    return t = {
      lastResult: o,
      lastArgs: s,
      lastThis: this
    }, o;
  }
  return i.clear = function() {
    t = null;
  }, i;
}
const KY = () => {
  const e = Xe().proxy.$props;
  return $(() => {
    const t = (i, s, r) => ({});
    return e.perfMode ? Ym(t) : GY(t);
  });
}, JY = 50, EC = "itemRendered", AC = "scroll", VT = "forward", FT = "backward", Ad = "auto", ZT = "smart", qT = "start", Vg = "center", WT = "end", du = "horizontal", Y1 = "vertical", eU = "ltr", ng = "rtl", uy = "negative", HT = "positive-ascending", XT = "positive-descending", tU = {
  [du]: "left",
  [Y1]: "top"
}, nU = 20, iU = {
  [du]: "deltaX",
  [Y1]: "deltaY"
}, sU = ({ atEndEdge: n, atStartEdge: e, layout: t }, i) => {
  let s, r = 0;
  const o = (a) => a < 0 && e.value || a > 0 && n.value;
  return {
    hasReachedEdge: o,
    onWheel: (a) => {
      x$(s);
      const c = a[iU[t.value]];
      o(r) && o(r + c) || (r += c, c$() || a.preventDefault(), s = P1(() => {
        i(r), r = 0;
      }));
    }
  };
}, hy = Pr({
  type: ce([Number, Function]),
  required: !0
}), dy = Pr({
  type: Number
}), fy = Pr({
  type: Number,
  default: 2
}), rU = Pr({
  type: String,
  values: ["ltr", "rtl"],
  default: "ltr"
}), py = Pr({
  type: Number,
  default: 0
}), Fg = Pr({
  type: Number,
  required: !0
}), YT = Pr({
  type: String,
  values: ["horizontal", "vertical"],
  default: Y1
}), UT = Ee({
  className: {
    type: String,
    default: ""
  },
  containerElement: {
    type: ce([String, Object]),
    default: "div"
  },
  data: {
    type: ce(Array),
    default: () => Ys([])
  },
  direction: rU,
  height: {
    type: [String, Number],
    required: !0
  },
  innerElement: {
    type: [String, Object],
    default: "div"
  },
  style: {
    type: ce([Object, String, Array])
  },
  useIsScrolling: {
    type: Boolean,
    default: !1
  },
  width: {
    type: [Number, String],
    required: !1
  },
  perfMode: {
    type: Boolean,
    default: !0
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: !1
  }
}), oU = Ee({
  cache: fy,
  estimatedItemSize: dy,
  layout: YT,
  initScrollOffset: py,
  total: Fg,
  itemSize: hy,
  ...UT
}), gy = {
  type: Number,
  default: 6
}, GT = { type: Number, default: 0 }, KT = { type: Number, default: 2 };
Ee({
  columnCache: fy,
  columnWidth: hy,
  estimatedColumnWidth: dy,
  estimatedRowHeight: dy,
  initScrollLeft: py,
  initScrollTop: py,
  itemKey: {
    type: ce(Function),
    default: ({
      columnIndex: n,
      rowIndex: e
    }) => `${e}:${n}`
  },
  rowCache: fy,
  rowHeight: hy,
  totalColumn: Fg,
  totalRow: Fg,
  hScrollbarSize: gy,
  vScrollbarSize: gy,
  scrollbarStartGap: GT,
  scrollbarEndGap: KT,
  role: String,
  ...UT
});
const lU = Ee({
  alwaysOn: Boolean,
  class: String,
  layout: YT,
  total: Fg,
  ratio: {
    type: Number,
    required: !0
  },
  clientSize: {
    type: Number,
    required: !0
  },
  scrollFrom: {
    type: Number,
    required: !0
  },
  scrollbarSize: gy,
  startGap: GT,
  endGap: KT,
  visible: Boolean
}), bv = (n, e) => n < e ? VT : FT, $d = (n) => n === eU || n === ng || n === du;
let pc = null;
function $C(n = !1) {
  if (pc === null || n) {
    const e = document.createElement("div"), t = e.style;
    t.width = "50px", t.height = "50px", t.overflow = "scroll", t.direction = "rtl";
    const i = document.createElement("div"), s = i.style;
    return s.width = "100px", s.height = "100px", e.appendChild(i), document.body.appendChild(e), e.scrollLeft > 0 ? pc = XT : (e.scrollLeft = 1, e.scrollLeft === 0 ? pc = uy : pc = HT), document.body.removeChild(e), pc;
  }
  return pc;
}
function aU({ move: n, size: e, bar: t }, i) {
  const s = {}, r = `translate${t.axis}(${n}px)`;
  return s[t.size] = e, s.transform = r, s.msTransform = r, s.webkitTransform = r, i === "horizontal" ? s.height = "100%" : s.width = "100%", s;
}
const cU = F({
  name: "ElVirtualScrollBar",
  props: lU,
  emits: ["scroll", "start-move", "stop-move"],
  setup(n, { emit: e }) {
    const t = $(() => n.startGap + n.endGap), i = me("virtual-scrollbar"), s = me("scrollbar"), r = D(), o = D();
    let l = null, a = null;
    const c = Gt({
      isDragging: !1,
      traveled: 0
    }), u = $(() => K$[n.layout]), h = $(() => n.clientSize - y(t)), d = $(() => ({
      position: "absolute",
      width: `${du === n.layout ? h.value : n.scrollbarSize}px`,
      height: `${du === n.layout ? n.scrollbarSize : h.value}px`,
      [tU[n.layout]]: "2px",
      right: "2px",
      bottom: "2px",
      borderRadius: "4px"
    })), f = $(() => {
      const S = n.ratio, C = n.clientSize;
      if (S >= 100)
        return Number.POSITIVE_INFINITY;
      if (S >= 50)
        return S * C / 100;
      const k = C / 3;
      return Math.floor(Math.min(Math.max(S * C, nU), k));
    }), p = $(() => {
      if (!Number.isFinite(f.value))
        return {
          display: "none"
        };
      const S = `${f.value}px`;
      return aU({
        bar: u.value,
        size: S,
        move: c.traveled
      }, n.layout);
    }), g = $(() => Math.floor(n.clientSize - f.value - y(t))), m = () => {
      window.addEventListener("mousemove", w), window.addEventListener("mouseup", b);
      const S = y(o);
      S && (a = document.onselectstart, document.onselectstart = () => !1, S.addEventListener("touchmove", w), S.addEventListener("touchend", b));
    }, v = () => {
      window.removeEventListener("mousemove", w), window.removeEventListener("mouseup", b), document.onselectstart = a, a = null;
      const S = y(o);
      S && (S.removeEventListener("touchmove", w), S.removeEventListener("touchend", b));
    }, O = (S) => {
      S.stopImmediatePropagation(), !(S.ctrlKey || [1, 2].includes(S.button)) && (c.isDragging = !0, c[u.value.axis] = S.currentTarget[u.value.offset] - (S[u.value.client] - S.currentTarget.getBoundingClientRect()[u.value.direction]), e("start-move"), m());
    }, b = () => {
      c.isDragging = !1, c[u.value.axis] = 0, e("stop-move"), v();
    }, w = (S) => {
      const { isDragging: C } = c;
      if (!C || !o.value || !r.value)
        return;
      const k = c[u.value.axis];
      if (!k)
        return;
      x$(l);
      const E = (r.value.getBoundingClientRect()[u.value.direction] - S[u.value.client]) * -1, M = o.value[u.value.offset] - k, _ = E - M;
      l = P1(() => {
        c.traveled = Math.max(n.startGap, Math.min(_, g.value)), e("scroll", _, g.value);
      });
    }, x = (S) => {
      const C = Math.abs(S.target.getBoundingClientRect()[u.value.direction] - S[u.value.client]), k = o.value[u.value.offset] / 2, E = C - k;
      c.traveled = Math.max(0, Math.min(E, g.value)), e("scroll", E, g.value);
    };
    return ne(() => n.scrollFrom, (S) => {
      c.isDragging || (c.traveled = Math.ceil(S * g.value));
    }), Gn(() => {
      v();
    }), () => Re("div", {
      role: "presentation",
      ref: r,
      class: [
        i.b(),
        n.class,
        (n.alwaysOn || c.isDragging) && "always-on"
      ],
      style: d.value,
      onMousedown: Le(x, ["stop", "prevent"]),
      onTouchstartPrevent: O
    }, Re("div", {
      ref: o,
      class: s.e("thumb"),
      style: p.value,
      onMousedown: O
    }, []));
  }
}), JT = ({
  name: n,
  getOffset: e,
  getItemSize: t,
  getItemOffset: i,
  getEstimatedTotalSize: s,
  getStartIndexForOffset: r,
  getStopIndexForStartIndex: o,
  initCache: l,
  clearCache: a,
  validateProps: c
}) => F({
  name: n ?? "ElVirtualList",
  props: oU,
  emits: [EC, AC],
  setup(u, { emit: h, expose: d }) {
    c(u);
    const f = Xe(), p = me("vl"), g = D(l(u, f)), m = KY(), v = D(), O = D(), b = D(), w = D({
      isScrolling: !1,
      scrollDir: "forward",
      scrollOffset: tt(u.initScrollOffset) ? u.initScrollOffset : 0,
      updateRequested: !1,
      isScrollbarDragging: !1,
      scrollbarAlwaysOn: u.scrollbarAlwaysOn
    }), x = $(() => {
      const { total: W, cache: U } = u, { isScrolling: le, scrollDir: he, scrollOffset: ee } = y(w);
      if (W === 0)
        return [0, 0, 0, 0];
      const pe = r(u, ee, y(g)), be = o(u, pe, ee, y(g)), fe = !le || he === FT ? Math.max(1, U) : 1, Ae = !le || he === VT ? Math.max(1, U) : 1;
      return [
        Math.max(0, pe - fe),
        Math.max(0, Math.min(W - 1, be + Ae)),
        pe,
        be
      ];
    }), S = $(() => s(u, y(g))), C = $(() => $d(u.layout)), k = $(() => [
      {
        position: "relative",
        [`overflow-${C.value ? "x" : "y"}`]: "scroll",
        WebkitOverflowScrolling: "touch",
        willChange: "transform"
      },
      {
        direction: u.direction,
        height: tt(u.height) ? `${u.height}px` : u.height,
        width: tt(u.width) ? `${u.width}px` : u.width
      },
      u.style
    ]), E = $(() => {
      const W = y(S), U = y(C);
      return {
        height: U ? "100%" : `${W}px`,
        pointerEvents: y(w).isScrolling ? "none" : void 0,
        width: U ? `${W}px` : "100%"
      };
    }), M = $(() => C.value ? u.width : u.height), { onWheel: _ } = sU({
      atStartEdge: $(() => w.value.scrollOffset <= 0),
      atEndEdge: $(() => w.value.scrollOffset >= S.value),
      layout: $(() => u.layout)
    }, (W) => {
      var U, le;
      (le = (U = b.value).onMouseUp) == null || le.call(U), N(Math.min(w.value.scrollOffset + W, S.value - M.value));
    }), T = () => {
      const { total: W } = u;
      if (W > 0) {
        const [ee, pe, be, fe] = y(x);
        h(EC, ee, pe, be, fe);
      }
      const { scrollDir: U, scrollOffset: le, updateRequested: he } = y(w);
      h(AC, U, le, he);
    }, B = (W) => {
      const { clientHeight: U, scrollHeight: le, scrollTop: he } = W.currentTarget, ee = y(w);
      if (ee.scrollOffset === he)
        return;
      const pe = Math.max(0, Math.min(he, le - U));
      w.value = {
        ...ee,
        isScrolling: !0,
        scrollDir: bv(ee.scrollOffset, pe),
        scrollOffset: pe,
        updateRequested: !1
      }, $e(H);
    }, I = (W) => {
      const { clientWidth: U, scrollLeft: le, scrollWidth: he } = W.currentTarget, ee = y(w);
      if (ee.scrollOffset === le)
        return;
      const { direction: pe } = u;
      let be = le;
      if (pe === ng)
        switch ($C()) {
          case uy: {
            be = -le;
            break;
          }
          case XT: {
            be = he - U - le;
            break;
          }
        }
      be = Math.max(0, Math.min(be, he - U)), w.value = {
        ...ee,
        isScrolling: !0,
        scrollDir: bv(ee.scrollOffset, be),
        scrollOffset: be,
        updateRequested: !1
      }, $e(H);
    }, P = (W) => {
      y(C) ? I(W) : B(W), T();
    }, A = (W, U) => {
      const le = (S.value - M.value) / U * W;
      N(Math.min(S.value - M.value, le));
    }, N = (W) => {
      W = Math.max(W, 0), W !== y(w).scrollOffset && (w.value = {
        ...y(w),
        scrollOffset: W,
        scrollDir: bv(y(w).scrollOffset, W),
        updateRequested: !0
      }, $e(H));
    }, q = (W, U = Ad) => {
      const { scrollOffset: le } = y(w);
      W = Math.max(0, Math.min(W, u.total - 1)), N(e(u, W, U, le, y(g)));
    }, j = (W) => {
      const { direction: U, itemSize: le, layout: he } = u, ee = m.value(a && le, a && he, a && U);
      let pe;
      if (Hi(ee, String(W)))
        pe = ee[W];
      else {
        const be = i(u, W, y(g)), fe = t(u, W, y(g)), Ae = y(C), ut = U === ng, zt = Ae ? be : 0;
        ee[W] = pe = {
          position: "absolute",
          left: ut ? void 0 : `${zt}px`,
          right: ut ? `${zt}px` : void 0,
          top: Ae ? 0 : `${be}px`,
          height: Ae ? "100%" : `${fe}px`,
          width: Ae ? `${fe}px` : "100%"
        };
      }
      return pe;
    }, H = () => {
      w.value.isScrolling = !1, $e(() => {
        m.value(-1, null, null);
      });
    }, oe = () => {
      const W = v.value;
      W && (W.scrollTop = 0);
    };
    qe(() => {
      if (!vt)
        return;
      const { initScrollOffset: W } = u, U = y(v);
      tt(W) && U && (y(C) ? U.scrollLeft = W : U.scrollTop = W), T();
    }), Zl(() => {
      const { direction: W, layout: U } = u, { scrollOffset: le, updateRequested: he } = y(w), ee = y(v);
      if (he && ee)
        if (U === du)
          if (W === ng)
            switch ($C()) {
              case uy: {
                ee.scrollLeft = -le;
                break;
              }
              case HT: {
                ee.scrollLeft = le;
                break;
              }
              default: {
                const { clientWidth: pe, scrollWidth: be } = ee;
                ee.scrollLeft = be - pe - le;
                break;
              }
            }
          else
            ee.scrollLeft = le;
        else
          ee.scrollTop = le;
    });
    const te = {
      ns: p,
      clientSize: M,
      estimatedTotalSize: S,
      windowStyle: k,
      windowRef: v,
      innerRef: O,
      innerStyle: E,
      itemsToRender: x,
      scrollbarRef: b,
      states: w,
      getItemStyle: j,
      onScroll: P,
      onScrollbarScroll: A,
      onWheel: _,
      scrollTo: N,
      scrollToItem: q,
      resetScrollTop: oe
    };
    return d({
      windowRef: v,
      innerRef: O,
      getItemStyleCache: m,
      scrollTo: N,
      scrollToItem: q,
      resetScrollTop: oe,
      states: w
    }), te;
  },
  render(u) {
    var h;
    const {
      $slots: d,
      className: f,
      clientSize: p,
      containerElement: g,
      data: m,
      getItemStyle: v,
      innerElement: O,
      itemsToRender: b,
      innerStyle: w,
      layout: x,
      total: S,
      onScroll: C,
      onScrollbarScroll: k,
      onWheel: E,
      states: M,
      useIsScrolling: _,
      windowStyle: T,
      ns: B
    } = u, [I, P] = b, A = yt(g), N = yt(O), q = [];
    if (S > 0)
      for (let te = I; te <= P; te++)
        q.push((h = d.default) == null ? void 0 : h.call(d, {
          data: m,
          key: te,
          index: te,
          isScrolling: _ ? M.isScrolling : void 0,
          style: v(te)
        }));
    const j = [
      Re(N, {
        style: w,
        ref: "innerRef"
      }, bt(N) ? q : {
        default: () => q
      })
    ], H = Re(cU, {
      ref: "scrollbarRef",
      clientSize: p,
      layout: x,
      onScroll: k,
      ratio: p * 100 / this.estimatedTotalSize,
      scrollFrom: M.scrollOffset / (this.estimatedTotalSize - p),
      total: S
    }), oe = Re(A, {
      class: [B.e("window"), f],
      style: T,
      onScroll: C,
      onWheel: E,
      ref: "windowRef",
      key: 0
    }, bt(A) ? [j] : { default: () => [j] });
    return Re("div", {
      key: 0,
      class: [B.e("wrapper"), M.scrollbarAlwaysOn ? "always-on" : ""]
    }, [oe, H]);
  }
}), uU = JT({
  name: "ElFixedSizeList",
  getItemOffset: ({ itemSize: n }, e) => e * n,
  getItemSize: ({ itemSize: n }) => n,
  getEstimatedTotalSize: ({ total: n, itemSize: e }) => e * n,
  getOffset: ({ height: n, total: e, itemSize: t, layout: i, width: s }, r, o, l) => {
    const a = $d(i) ? s : n;
    process.env.NODE_ENV !== "production" && bt(a) && hs("[ElVirtualList]", `
        You should set
          width/height
        to number when your layout is
          horizontal/vertical
      `);
    const c = Math.max(0, e * t - a), u = Math.min(c, r * t), h = Math.max(0, (r + 1) * t - a);
    switch (o === ZT && (l >= h - a && l <= u + a ? o = Ad : o = Vg), o) {
      case qT:
        return u;
      case WT:
        return h;
      case Vg: {
        const d = Math.round(h + (u - h) / 2);
        return d < Math.ceil(a / 2) ? 0 : d > c + Math.floor(a / 2) ? c : d;
      }
      case Ad:
      default:
        return l >= h && l <= u ? l : l < h ? h : u;
    }
  },
  getStartIndexForOffset: ({ total: n, itemSize: e }, t) => Math.max(0, Math.min(n - 1, Math.floor(t / e))),
  getStopIndexForStartIndex: ({ height: n, total: e, itemSize: t, layout: i, width: s }, r, o) => {
    const l = r * t, a = $d(i) ? s : n, c = Math.ceil((a + o - l) / t);
    return Math.max(0, Math.min(e - 1, r + c - 1));
  },
  initCache() {
  },
  clearCache: !0,
  validateProps() {
  }
}), hU = "ElDynamicSizeList", Ec = (n, e, t) => {
  const { itemSize: i } = n, { items: s, lastVisitedIndex: r } = t;
  if (e > r) {
    let o = 0;
    if (r >= 0) {
      const l = s[r];
      o = l.offset + l.size;
    }
    for (let l = r + 1; l <= e; l++) {
      const a = i(l);
      s[l] = {
        offset: o,
        size: a
      }, o += a;
    }
    t.lastVisitedIndex = e;
  }
  return s[e];
}, dU = (n, e, t) => {
  const { items: i, lastVisitedIndex: s } = e;
  return (s > 0 ? i[s].offset : 0) >= t ? e_(n, e, 0, s, t) : fU(n, e, Math.max(0, s), t);
}, e_ = (n, e, t, i, s) => {
  for (; t <= i; ) {
    const r = t + Math.floor((i - t) / 2), o = Ec(n, r, e).offset;
    if (o === s)
      return r;
    o < s ? t = r + 1 : o > s && (i = r - 1);
  }
  return Math.max(0, t - 1);
}, fU = (n, e, t, i) => {
  const { total: s } = n;
  let r = 1;
  for (; t < s && Ec(n, t, e).offset < i; )
    t += r, r *= 2;
  return e_(n, e, Math.floor(t / 2), Math.min(t, s - 1), i);
}, TC = ({ total: n }, { items: e, estimatedItemSize: t, lastVisitedIndex: i }) => {
  let s = 0;
  if (i >= n && (i = n - 1), i >= 0) {
    const l = e[i];
    s = l.offset + l.size;
  }
  const o = (n - i - 1) * t;
  return s + o;
}, pU = JT({
  name: "ElDynamicSizeList",
  getItemOffset: (n, e, t) => Ec(n, e, t).offset,
  getItemSize: (n, e, { items: t }) => t[e].size,
  getEstimatedTotalSize: TC,
  getOffset: (n, e, t, i, s) => {
    const { height: r, layout: o, width: l } = n, a = $d(o) ? l : r, c = Ec(n, e, s), u = TC(n, s), h = Math.max(0, Math.min(u - a, c.offset)), d = Math.max(0, c.offset - a + c.size);
    switch (t === ZT && (i >= d - a && i <= h + a ? t = Ad : t = Vg), t) {
      case qT:
        return h;
      case WT:
        return d;
      case Vg:
        return Math.round(d + (h - d) / 2);
      case Ad:
      default:
        return i >= d && i <= h ? i : i < d ? d : h;
    }
  },
  getStartIndexForOffset: (n, e, t) => dU(n, t, e),
  getStopIndexForStartIndex: (n, e, t, i) => {
    const { height: s, total: r, layout: o, width: l } = n, a = $d(o) ? l : s, c = Ec(n, e, i), u = t + a;
    let h = c.offset + c.size, d = e;
    for (; d < r - 1 && h < u; )
      d++, h += Ec(n, d, i).size;
    return d;
  },
  initCache({ estimatedItemSize: n = JY }, e) {
    const t = {
      items: {},
      estimatedItemSize: n,
      lastVisitedIndex: -1
    };
    return t.clearCacheAfterIndex = (i, s = !0) => {
      var r, o;
      t.lastVisitedIndex = Math.min(t.lastVisitedIndex, i - 1), (r = e.exposed) == null || r.getItemStyleCache(-1), s && ((o = e.proxy) == null || o.$forceUpdate());
    }, t;
  },
  clearCache: !1,
  validateProps: ({ itemSize: n }) => {
    process.env.NODE_ENV !== "production" && typeof n != "function" && hs(hU, `
          itemSize is required as function, but the given value was ${typeof n}
        `);
  }
}), gU = F({
  props: {
    item: {
      type: Object,
      required: !0
    },
    style: Object,
    height: Number
  },
  setup() {
    return {
      ns: me("select")
    };
  }
});
function mU(n, e, t, i, s, r) {
  return n.item.isTitle ? (R(), V("div", {
    key: 0,
    class: L(n.ns.be("group", "title")),
    style: Qe([n.style, { lineHeight: `${n.height}px` }])
  }, xe(n.item.label), 7)) : (R(), V("div", {
    key: 1,
    class: L(n.ns.be("group", "split")),
    style: Qe(n.style)
  }, [
    Z("span", {
      class: L(n.ns.be("group", "split-dash")),
      style: Qe({ top: `${n.height / 2}px` })
    }, null, 6)
  ], 6));
}
var vU = /* @__PURE__ */ Ce(gU, [["render", mU], ["__file", "group-item.vue"]]);
function bU(n, { emit: e }) {
  return {
    hoverItem: () => {
      n.disabled || e("hover", n.index);
    },
    selectOptionClick: () => {
      n.disabled || e("select", n.item, n.index);
    }
  };
}
const t_ = {
  label: "label",
  value: "value",
  disabled: "disabled",
  options: "options"
};
function a0(n) {
  const e = $(() => ({ ...t_, ...n.props }));
  return {
    aliasProps: e,
    getLabel: (o) => on(o, e.value.label),
    getValue: (o) => on(o, e.value.value),
    getDisabled: (o) => on(o, e.value.disabled),
    getOptions: (o) => on(o, e.value.options)
  };
}
const yU = Ee({
  allowCreate: Boolean,
  autocomplete: {
    type: ce(String),
    default: "none"
  },
  automaticDropdown: Boolean,
  clearable: Boolean,
  clearIcon: {
    type: kn,
    default: Ku
  },
  effect: {
    type: ce(String),
    default: "light"
  },
  collapseTags: Boolean,
  collapseTagsTooltip: Boolean,
  maxCollapseTags: {
    type: Number,
    default: 1
  },
  defaultFirstOption: Boolean,
  disabled: Boolean,
  estimatedOptionHeight: {
    type: Number,
    default: void 0
  },
  filterable: Boolean,
  filterMethod: Function,
  height: {
    type: Number,
    default: 274
  },
  itemHeight: {
    type: Number,
    default: 34
  },
  id: String,
  loading: Boolean,
  loadingText: String,
  modelValue: {
    type: ce([Array, String, Number, Boolean, Object])
  },
  multiple: Boolean,
  multipleLimit: {
    type: Number,
    default: 0
  },
  name: String,
  noDataText: String,
  noMatchText: String,
  remoteMethod: Function,
  reserveKeyword: {
    type: Boolean,
    default: !0
  },
  options: {
    type: ce(Array),
    required: !0
  },
  placeholder: {
    type: String
  },
  teleported: gi.teleported,
  persistent: {
    type: Boolean,
    default: !0
  },
  popperClass: {
    type: String,
    default: ""
  },
  popperOptions: {
    type: ce(Object),
    default: () => ({})
  },
  remote: Boolean,
  size: Ts,
  props: {
    type: ce(Object),
    default: () => t_
  },
  valueKey: {
    type: String,
    default: "value"
  },
  scrollbarAlwaysOn: Boolean,
  validateEvent: {
    type: Boolean,
    default: !0
  },
  placement: {
    type: ce(String),
    values: yf,
    default: "bottom-start"
  },
  fallbackPlacements: {
    type: ce(Array),
    default: ["bottom-start", "top-start", "right", "left"]
  },
  tagType: { ...o0.type, default: "info" },
  ariaLabel: {
    type: String,
    default: void 0
  }
}), OU = Ee({
  data: Array,
  disabled: Boolean,
  hovering: Boolean,
  item: {
    type: ce(Object),
    required: !0
  },
  index: Number,
  style: Object,
  selected: Boolean,
  created: Boolean
}), U1 = Symbol("ElSelectV2Injection"), wU = F({
  props: OU,
  emits: ["select", "hover"],
  setup(n, { emit: e }) {
    const t = ke(U1), i = me("select"), { hoverItem: s, selectOptionClick: r } = bU(n, { emit: e }), { getLabel: o } = a0(t.props);
    return {
      ns: i,
      hoverItem: s,
      selectOptionClick: r,
      getLabel: o
    };
  }
}), xU = ["aria-selected"];
function SU(n, e, t, i, s, r) {
  return R(), V("li", {
    "aria-selected": n.selected,
    style: Qe(n.style),
    class: L([
      n.ns.be("dropdown", "item"),
      n.ns.is("selected", n.selected),
      n.ns.is("disabled", n.disabled),
      n.ns.is("created", n.created),
      n.ns.is("hovering", n.hovering)
    ]),
    onMouseenter: e[0] || (e[0] = (...o) => n.hoverItem && n.hoverItem(...o)),
    onClick: e[1] || (e[1] = Le((...o) => n.selectOptionClick && n.selectOptionClick(...o), ["stop"]))
  }, [
    de(n.$slots, "default", {
      item: n.item,
      index: n.index,
      disabled: n.disabled
    }, () => [
      Z("span", null, xe(n.getLabel(n.item)), 1)
    ])
  ], 46, xU);
}
var CU = /* @__PURE__ */ Ce(wU, [["render", SU], ["__file", "option-item.vue"]]), kU = F({
  name: "ElSelectDropdown",
  props: {
    loading: Boolean,
    data: {
      type: Array,
      required: !0
    },
    hoveringIndex: Number,
    width: Number
  },
  setup(n, {
    slots: e,
    expose: t
  }) {
    const i = ke(U1), s = me("select"), {
      getLabel: r,
      getValue: o,
      getDisabled: l
    } = a0(i.props), a = D([]), c = D(), u = $(() => n.data.length);
    ne(() => u.value, () => {
      var _, T;
      (T = (_ = i.tooltipRef.value).updatePopper) == null || T.call(_);
    });
    const h = $(() => Si(i.props.estimatedOptionHeight)), d = $(() => h.value ? {
      itemSize: i.props.itemHeight
    } : {
      estimatedSize: i.props.estimatedOptionHeight,
      itemSize: (_) => a.value[_]
    }), f = (_ = [], T) => {
      const {
        props: {
          valueKey: B
        }
      } = i;
      return ln(T) ? _ && _.some((I) => vd(on(I, B)) === on(T, B)) : _.includes(T);
    }, p = (_, T) => {
      if (ln(T)) {
        const {
          valueKey: B
        } = i.props;
        return on(_, B) === on(T, B);
      } else
        return _ === T;
    }, g = (_, T) => i.props.multiple ? f(_, o(T)) : p(_, o(T)), m = (_, T) => {
      const {
        disabled: B,
        multiple: I,
        multipleLimit: P
      } = i.props;
      return B || !T && (I ? P > 0 && _.length >= P : !1);
    }, v = (_) => n.hoveringIndex === _;
    t({
      listRef: c,
      isSized: h,
      isItemDisabled: m,
      isItemHovering: v,
      isItemSelected: g,
      scrollToItem: (_) => {
        const T = c.value;
        T && T.scrollToItem(_);
      },
      resetScrollTop: () => {
        const _ = c.value;
        _ && _.resetScrollTop();
      }
    });
    const w = (_) => {
      const {
        index: T,
        data: B,
        style: I
      } = _, P = y(h), {
        itemSize: A,
        estimatedSize: N
      } = y(d), {
        modelValue: q
      } = i.props, {
        onSelect: j,
        onHover: H
      } = i, oe = B[T];
      if (oe.type === "Group")
        return K(vU, {
          item: oe,
          style: I,
          height: P ? A : N
        }, null);
      const te = g(q, oe), W = m(q, te), U = v(T);
      return K(CU, ki(_, {
        selected: te,
        disabled: l(oe) || W,
        created: !!oe.created,
        hovering: U,
        item: oe,
        onSelect: j,
        onHover: H
      }), {
        default: (le) => {
          var he;
          return ((he = e.default) == null ? void 0 : he.call(e, le)) || K("span", null, [r(oe)]);
        }
      });
    }, {
      onKeyboardNavigate: x,
      onKeyboardSelect: S
    } = i, C = () => {
      x("forward");
    }, k = () => {
      x("backward");
    }, E = () => {
      i.expanded = !1;
    }, M = (_) => {
      const {
        code: T
      } = _, {
        tab: B,
        esc: I,
        down: P,
        up: A,
        enter: N
      } = dt;
      switch (T !== B && (_.preventDefault(), _.stopPropagation()), T) {
        case B:
        case I: {
          E();
          break;
        }
        case P: {
          C();
          break;
        }
        case A: {
          k();
          break;
        }
        case N: {
          S();
          break;
        }
      }
    };
    return () => {
      var _, T, B, I;
      const {
        data: P,
        width: A
      } = n, {
        height: N,
        multiple: q,
        scrollbarAlwaysOn: j
      } = i.props;
      if (e.loading || e.empty)
        return K("div", {
          class: s.b("dropdown"),
          style: {
            width: `${A}px`
          }
        }, [((_ = e.loading) == null ? void 0 : _.call(e)) || ((T = e.empty) == null ? void 0 : T.call(e))]);
      const H = y(h) ? uU : pU;
      return K("div", {
        class: [s.b("dropdown"), s.is("multiple", q)]
      }, [(B = e.header) == null ? void 0 : B.call(e), K(H, ki({
        ref: c
      }, y(d), {
        className: s.be("dropdown", "list"),
        scrollbarAlwaysOn: j,
        data: P,
        height: N,
        width: A,
        total: P.length,
        onKeydown: M
      }), {
        default: (oe) => K(w, oe, null)
      }), (I = e.footer) == null ? void 0 : I.call(e)]);
    };
  }
});
function PU(n, e) {
  const { aliasProps: t, getLabel: i, getValue: s } = a0(n), r = D(0), o = D(null), l = $(() => n.allowCreate && n.filterable);
  function a(f) {
    const p = (g) => s(g) === f;
    return n.options && n.options.some(p) || e.createdOptions.some(p);
  }
  function c(f) {
    l.value && (n.multiple && f.created ? r.value++ : o.value = f);
  }
  function u(f) {
    if (l.value)
      if (f && f.length > 0) {
        if (a(f))
          return;
        const p = {
          [t.value.value]: f,
          [t.value.label]: f,
          created: !0,
          [t.value.disabled]: !1
        };
        e.createdOptions.length >= r.value ? e.createdOptions[r.value] = p : e.createdOptions.push(p);
      } else if (n.multiple)
        e.createdOptions.length = r.value;
      else {
        const p = o.value;
        e.createdOptions.length = 0, p && p.created && e.createdOptions.push(p);
      }
  }
  function h(f) {
    if (!l.value || !f || !f.created || f.created && n.reserveKeyword && e.inputValue === i(f))
      return;
    const p = e.createdOptions.findIndex((g) => s(g) === s(f));
    ~p && (e.createdOptions.splice(p, 1), r.value--);
  }
  function d() {
    l.value && (e.createdOptions.length = 0, r.value = 0);
  }
  return {
    createNewOption: u,
    removeNewOption: h,
    selectNewOption: c,
    clearAllNewOption: d
  };
}
const EU = 11, AU = (n, e) => {
  const { t } = mn(), i = me("select"), s = me("input"), { form: r, formItem: o } = _s(), { inputId: l } = Hl(n, {
    formItemContext: o
  }), { getLabel: a, getValue: c, getDisabled: u, getOptions: h } = a0(n), d = Gt({
    inputValue: "",
    cachedOptions: [],
    createdOptions: [],
    hoveringIndex: -1,
    inputHovering: !1,
    selectionWidth: 0,
    calculatorWidth: 0,
    collapseItemWidth: 0,
    previousQuery: null,
    previousValue: void 0,
    selectedLabel: "",
    menuVisibleOnFocus: !1,
    isBeforeHide: !1
  }), f = D(-1), p = D(-1), g = D(null), m = D(null), v = D(null), O = D(null), b = D(null), w = D(null), x = D(null), S = D(null), C = D(null), k = D(null), E = D(null), { wrapperRef: M, isFocused: _, handleFocus: T, handleBlur: B } = n0(b, {
    afterFocus() {
      n.automaticDropdown && !A.value && (A.value = !0, d.menuVisibleOnFocus = !0);
    },
    beforeBlur(re) {
      var De, We;
      return ((De = v.value) == null ? void 0 : De.isFocusInsideContent(re)) || ((We = O.value) == null ? void 0 : We.isFocusInsideContent(re));
    },
    afterBlur() {
      A.value = !1, d.menuVisibleOnFocus = !1;
    }
  }), I = D([]), P = D([]), A = D(!1), N = $(() => n.disabled || (r == null ? void 0 : r.disabled)), q = $(() => {
    const re = P.value.length * n.itemHeight;
    return re > n.height ? n.height : re;
  }), j = $(() => n.multiple ? xt(n.modelValue) && n.modelValue.length > 0 : n.modelValue !== void 0 && n.modelValue !== null && n.modelValue !== ""), H = $(() => n.clearable && !N.value && d.inputHovering && j.value), oe = $(() => n.remote && n.filterable ? "" : Gu), te = $(() => oe.value && i.is("reverse", A.value)), W = $(() => (o == null ? void 0 : o.validateState) || ""), U = $(() => C1[W.value]), le = $(() => n.remote ? 300 : 0), he = $(() => n.loading ? n.loadingText || t("el.select.loading") : n.remote && !d.inputValue && I.value.length === 0 ? !1 : n.filterable && d.inputValue && I.value.length > 0 && P.value.length === 0 ? n.noMatchText || t("el.select.noMatch") : I.value.length === 0 ? n.noDataText || t("el.select.noData") : null), ee = (re) => {
    const De = (We) => {
      if (n.filterable && wt(n.filterMethod) || n.filterable && n.remote && wt(n.remoteMethod))
        return !0;
      const lt = new RegExp(f$(re), "i");
      return re ? lt.test(a(We) || "") : !0;
    };
    return n.loading ? [] : [...d.createdOptions, ...n.options].reduce((We, lt) => {
      const Nr = h(lt);
      if (xt(Nr)) {
        const So = Nr.filter(De);
        So.length > 0 && We.push({
          label: a(lt),
          isTitle: !0,
          type: "Group"
        }, ...So, { type: "Group" });
      } else
        (n.remote || De(lt)) && We.push(lt);
      return We;
    }, []);
  }, pe = () => {
    I.value = ee(""), P.value = ee(d.inputValue);
  }, be = $(() => {
    const re = /* @__PURE__ */ new Map();
    return P.value.forEach((De, We) => {
      re.set(Ms(c(De)), { option: De, index: We });
    }), re;
  }), fe = $(() => P.value.every((re) => u(re))), Ae = Xi(), ut = $(() => Ae.value === "small" ? "small" : "default"), zt = () => {
    var re;
    p.value = ((re = g.value) == null ? void 0 : re.offsetWidth) || 200;
  }, Kn = () => {
    if (!m.value)
      return 0;
    const re = window.getComputedStyle(m.value);
    return Number.parseFloat(re.gap || "6px");
  }, Jn = $(() => {
    const re = Kn();
    return { maxWidth: `${E.value && n.maxCollapseTags === 1 ? d.selectionWidth - d.collapseItemWidth - re : d.selectionWidth}px` };
  }), Di = $(() => ({ maxWidth: `${d.selectionWidth}px` })), hi = $(() => ({
    width: `${Math.max(d.calculatorWidth, EU)}px`
  })), Li = $(() => xt(n.modelValue) ? n.modelValue.length === 0 && !d.inputValue : n.filterable ? !d.inputValue : !0), ds = $(() => {
    var re;
    const De = (re = n.placeholder) != null ? re : t("el.select.placeholder");
    return n.multiple || !j.value ? De : d.selectedLabel;
  }), un = $(() => {
    var re, De;
    return (De = (re = v.value) == null ? void 0 : re.popperRef) == null ? void 0 : De.contentRef;
  }), Ii = $(() => {
    if (n.multiple) {
      const re = n.modelValue.length;
      if (n.modelValue.length > 0 && be.value.has(n.modelValue[re - 1])) {
        const { index: De } = be.value.get(n.modelValue[re - 1]);
        return De;
      }
    } else if (n.modelValue && be.value.has(n.modelValue)) {
      const { index: re } = be.value.get(n.modelValue);
      return re;
    }
    return -1;
  }), Yi = $({
    get() {
      return A.value && he.value !== !1;
    },
    set(re) {
      A.value = re;
    }
  }), Bi = $(() => n.multiple ? n.collapseTags ? d.cachedOptions.slice(0, n.maxCollapseTags) : d.cachedOptions : []), ei = $(() => n.multiple ? n.collapseTags ? d.cachedOptions.slice(n.maxCollapseTags) : [] : []), {
    createNewOption: ge,
    removeNewOption: Ke,
    selectNewOption: Dt,
    clearAllNewOption: ti
  } = PU(n, d), {
    handleCompositionStart: Mr,
    handleCompositionUpdate: Te,
    handleCompositionEnd: je
  } = zT((re) => nr(re)), J = () => {
    N.value || (d.menuVisibleOnFocus ? d.menuVisibleOnFocus = !1 : A.value = !A.value);
  }, ae = () => {
    d.inputValue.length > 0 && !A.value && (A.value = !0), ge(d.inputValue), Ue(d.inputValue);
  }, ve = Do(ae, le.value), Ue = (re) => {
    d.previousQuery !== re && (d.previousQuery = re, n.filterable && wt(n.filterMethod) ? n.filterMethod(re) : n.filterable && n.remote && wt(n.remoteMethod) && n.remoteMethod(re), n.defaultFirstOption && (n.filterable || n.remote) && P.value.length ? $e(Zt) : $e(hn));
  }, Zt = () => {
    const re = P.value.filter((lt) => !lt.disabled && lt.type !== "Group"), De = re.find((lt) => lt.created), We = re[0];
    d.hoveringIndex = Rr(P.value, De || We);
  }, Sn = (re) => {
    cn(n.modelValue, re) || e(Un, re);
  }, jt = (re) => {
    e(ot, re), Sn(re), d.previousValue = String(re);
  }, Rr = (re = [], De) => {
    if (!ln(De))
      return re.indexOf(De);
    const We = n.valueKey;
    let lt = -1;
    return re.some((Nr, So) => on(Nr, We) === on(De, We) ? (lt = So, !0) : !1), lt;
  }, Ms = (re) => ln(re) ? on(re, n.valueKey) : re, oc = () => {
    zt();
  }, xo = () => {
    d.selectionWidth = m.value.getBoundingClientRect().width;
  }, lc = () => {
    d.calculatorWidth = w.value.getBoundingClientRect().width;
  }, zf = () => {
    d.collapseItemWidth = E.value.getBoundingClientRect().width;
  }, mh = () => {
    var re, De;
    (De = (re = v.value) == null ? void 0 : re.updatePopper) == null || De.call(re);
  }, el = () => {
    var re, De;
    (De = (re = O.value) == null ? void 0 : re.updatePopper) == null || De.call(re);
  }, jf = (re, De) => {
    if (n.multiple) {
      let We = n.modelValue.slice();
      const lt = Rr(We, c(re));
      lt > -1 ? (We = [
        ...We.slice(0, lt),
        ...We.slice(lt + 1)
      ], d.cachedOptions.splice(lt, 1), Ke(re)) : (n.multipleLimit <= 0 || We.length < n.multipleLimit) && (We = [...We, c(re)], d.cachedOptions.push(re), Dt(re)), jt(We), re.created && Ue(""), n.filterable && !n.reserveKeyword && (d.inputValue = "");
    } else
      f.value = De, d.selectedLabel = a(re), jt(c(re)), A.value = !1, Dt(re), re.created || ti();
    ac();
  }, U0 = (re, De) => {
    let We = n.modelValue.slice();
    const lt = Rr(We, c(De));
    lt > -1 && !N.value && (We = [
      ...n.modelValue.slice(0, lt),
      ...n.modelValue.slice(lt + 1)
    ], d.cachedOptions.splice(lt, 1), jt(We), e("remove-tag", c(De)), Ke(De)), re.stopPropagation(), ac();
  }, ac = () => {
    var re;
    (re = b.value) == null || re.focus();
  }, Vf = () => {
    var re;
    (re = b.value) == null || re.blur();
  }, G0 = () => {
    d.inputValue.length > 0 ? d.inputValue = "" : A.value = !1;
  }, K0 = (re) => FA(re, (De) => !d.cachedOptions.some((We) => c(We) === De && u(We))), J0 = (re) => {
    if (n.multiple && re.code !== dt.delete && d.inputValue.length === 0) {
      re.preventDefault();
      const De = n.modelValue.slice(), We = K0(De);
      if (We < 0)
        return;
      De.splice(We, 1);
      const lt = d.cachedOptions[We];
      d.cachedOptions.splice(We, 1), Ke(lt), jt(De);
    }
  }, ev = () => {
    let re;
    xt(n.modelValue) ? re = [] : re = void 0, n.multiple ? d.cachedOptions = [] : d.selectedLabel = "", A.value = !1, jt(re), e("clear"), ti(), ac();
  }, se = (re, De = void 0) => {
    const We = P.value;
    if (!["forward", "backward"].includes(re) || N.value || We.length <= 0 || fe.value)
      return;
    if (!A.value)
      return J();
    De === void 0 && (De = d.hoveringIndex);
    let lt = -1;
    re === "forward" ? (lt = De + 1, lt >= We.length && (lt = 0)) : re === "backward" && (lt = De - 1, (lt < 0 || lt >= We.length) && (lt = We.length - 1));
    const Nr = We[lt];
    if (u(Nr) || Nr.type === "Group")
      return se(re, lt);
    d.hoveringIndex = lt, ir(lt);
  }, we = () => {
    if (A.value)
      ~d.hoveringIndex && P.value[d.hoveringIndex] && jf(P.value[d.hoveringIndex], d.hoveringIndex);
    else
      return J();
  }, _t = (re) => {
    d.hoveringIndex = re;
  }, hn = () => {
    n.multiple ? n.modelValue.length > 0 ? d.hoveringIndex = Math.min(...n.modelValue.map((re) => P.value.findIndex((De) => c(De) === re))) : d.hoveringIndex = -1 : d.hoveringIndex = P.value.findIndex((re) => Ms(re) === Ms(n.modelValue));
  }, nr = (re) => {
    if (d.inputValue = re.target.value, n.remote)
      ve();
    else
      return ae();
  }, tl = (re) => {
    if (A.value = !1, _.value) {
      const De = new FocusEvent("focus", re);
      B(De);
    }
  }, cc = () => $e(() => {
    ~Ii.value && ir(d.hoveringIndex);
  }), ir = (re) => {
    C.value.scrollToItem(re);
  }, Rs = (re) => {
    const De = Ms(re);
    if (be.value.has(De)) {
      const { option: We } = be.value.get(De);
      return We;
    }
    return {
      value: re,
      label: re
    };
  }, uc = () => {
    if (n.multiple)
      if (n.modelValue.length > 0) {
        d.cachedOptions.length = 0, d.previousValue = n.modelValue.toString();
        for (const re of n.modelValue) {
          const De = Rs(re);
          d.cachedOptions.push(De);
        }
      } else
        d.cachedOptions = [], d.previousValue = void 0;
    else if (j.value) {
      d.previousValue = n.modelValue;
      const re = P.value, De = re.findIndex((We) => Ms(c(We)) === Ms(n.modelValue));
      ~De ? d.selectedLabel = a(re[De]) : d.selectedLabel = Ms(n.modelValue);
    } else
      d.selectedLabel = "", d.previousValue = void 0;
    ti(), zt();
  };
  return ne(A, (re) => {
    re ? Ue("") : (d.inputValue = "", d.previousQuery = null, d.isBeforeHide = !0, ge("")), e("visible-change", re);
  }), ne(() => n.modelValue, (re, De) => {
    var We;
    (!re || re.toString() !== d.previousValue) && uc(), !cn(re, De) && n.validateEvent && ((We = o == null ? void 0 : o.validate) == null || We.call(o, "change").catch((lt) => pt(lt)));
  }, {
    deep: !0
  }), ne(() => n.options, () => {
    const re = b.value;
    (!re || re && document.activeElement !== re) && uc();
  }, {
    deep: !0,
    flush: "post"
  }), ne(() => P.value, () => C.value && $e(C.value.resetScrollTop)), Vs(() => {
    d.isBeforeHide || pe();
  }), Vs(() => {
    const { valueKey: re, options: De } = n, We = /* @__PURE__ */ new Map();
    for (const lt of De) {
      const Nr = c(lt);
      let So = Nr;
      if (ln(So) && (So = on(Nr, re)), We.get(So)) {
        pt("ElSelectV2", "The option values you provided seem to be duplicated, which may cause some problems, please check.");
        break;
      } else
        We.set(So, !0);
    }
  }), qe(() => {
    uc();
  }), pn(g, oc), pn(m, xo), pn(w, lc), pn(C, mh), pn(M, mh), pn(k, el), pn(E, zf), {
    inputId: l,
    collapseTagSize: ut,
    currentPlaceholder: ds,
    expanded: A,
    emptyText: he,
    popupHeight: q,
    debounce: le,
    allOptions: I,
    filteredOptions: P,
    iconComponent: oe,
    iconReverse: te,
    tagStyle: Jn,
    collapseTagStyle: Di,
    inputStyle: hi,
    popperSize: p,
    dropdownMenuVisible: Yi,
    hasModelValue: j,
    shouldShowPlaceholder: Li,
    selectDisabled: N,
    selectSize: Ae,
    showClearBtn: H,
    states: d,
    isFocused: _,
    nsSelect: i,
    nsInput: s,
    calculatorRef: w,
    inputRef: b,
    menuRef: C,
    tagMenuRef: k,
    tooltipRef: v,
    tagTooltipRef: O,
    selectRef: g,
    wrapperRef: M,
    selectionRef: m,
    prefixRef: x,
    suffixRef: S,
    collapseItemRef: E,
    popperRef: un,
    validateState: W,
    validateIcon: U,
    showTagList: Bi,
    collapseTagList: ei,
    debouncedOnInputChange: ve,
    deleteTag: U0,
    getLabel: a,
    getValue: c,
    getDisabled: u,
    getValueKey: Ms,
    handleBlur: B,
    handleClear: ev,
    handleClickOutside: tl,
    handleDel: J0,
    handleEsc: G0,
    handleFocus: T,
    focus: ac,
    blur: Vf,
    handleMenuEnter: cc,
    handleResize: oc,
    resetSelectionWidth: xo,
    resetCalculatorWidth: lc,
    updateTooltip: mh,
    updateTagTooltip: el,
    updateOptions: pe,
    toggleMenu: J,
    scrollTo: ir,
    onInput: nr,
    onKeyboardNavigate: se,
    onKeyboardSelect: we,
    onSelect: jf,
    onHover: _t,
    handleCompositionStart: Mr,
    handleCompositionEnd: je,
    handleCompositionUpdate: Te
  };
}, $U = F({
  name: "ElSelectV2",
  components: {
    ElSelectMenu: kU,
    ElTag: jg,
    ElTooltip: Bo,
    ElIcon: Fe
  },
  directives: { ClickOutside: Sf },
  props: yU,
  emits: [
    ot,
    Un,
    "remove-tag",
    "clear",
    "visible-change",
    "focus",
    "blur"
  ],
  setup(n, { emit: e }) {
    const t = $(() => {
      const { modelValue: s, multiple: r } = n, o = r ? [] : void 0;
      return xt(s) ? r ? s : o : r ? o : s;
    }), i = AU(Gt({
      ...Ws(n),
      modelValue: t
    }), e);
    return ft(U1, {
      props: Gt({
        ...Ws(n),
        height: i.popupHeight,
        modelValue: t
      }),
      tooltipRef: i.tooltipRef,
      onSelect: i.onSelect,
      onHover: i.onHover,
      onKeyboardNavigate: i.onKeyboardNavigate,
      onKeyboardSelect: i.onKeyboardSelect
    }), {
      ...i,
      modelValue: t
    };
  }
}), TU = ["id", "autocomplete", "aria-expanded", "aria-label", "disabled", "readonly", "name"], _U = ["textContent"];
function MU(n, e, t, i, s, r) {
  const o = nt("el-tag"), l = nt("el-tooltip"), a = nt("el-icon"), c = nt("el-select-menu"), u = Vm("click-outside");
  return it((R(), V("div", {
    ref: "selectRef",
    class: L([n.nsSelect.b(), n.nsSelect.m(n.selectSize)]),
    onMouseenter: e[14] || (e[14] = (h) => n.states.inputHovering = !0),
    onMouseleave: e[15] || (e[15] = (h) => n.states.inputHovering = !1),
    onClick: e[16] || (e[16] = Le((...h) => n.toggleMenu && n.toggleMenu(...h), ["stop"]))
  }, [
    K(l, {
      ref: "tooltipRef",
      visible: n.dropdownMenuVisible,
      teleported: n.teleported,
      "popper-class": [n.nsSelect.e("popper"), n.popperClass],
      "gpu-acceleration": !1,
      "stop-popper-mouse-event": !1,
      "popper-options": n.popperOptions,
      "fallback-placements": n.fallbackPlacements,
      effect: n.effect,
      placement: n.placement,
      pure: "",
      transition: `${n.nsSelect.namespace.value}-zoom-in-top`,
      trigger: "click",
      persistent: n.persistent,
      onBeforeShow: n.handleMenuEnter,
      onHide: e[13] || (e[13] = (h) => n.states.isBeforeHide = !1)
    }, {
      default: Y(() => [
        Z("div", {
          ref: "wrapperRef",
          class: L([
            n.nsSelect.e("wrapper"),
            n.nsSelect.is("focused", n.isFocused),
            n.nsSelect.is("hovering", n.states.inputHovering),
            n.nsSelect.is("filterable", n.filterable),
            n.nsSelect.is("disabled", n.selectDisabled)
          ])
        }, [
          n.$slots.prefix ? (R(), V("div", {
            key: 0,
            ref: "prefixRef",
            class: L(n.nsSelect.e("prefix"))
          }, [
            de(n.$slots, "prefix")
          ], 2)) : G("v-if", !0),
          Z("div", {
            ref: "selectionRef",
            class: L([
              n.nsSelect.e("selection"),
              n.nsSelect.is("near", n.multiple && !n.$slots.prefix && !!n.modelValue.length)
            ])
          }, [
            n.multiple ? de(n.$slots, "tag", { key: 0 }, () => [
              (R(!0), V(Tt, null, oi(n.showTagList, (h) => (R(), V("div", {
                key: n.getValueKey(n.getValue(h)),
                class: L(n.nsSelect.e("selected-item"))
              }, [
                K(o, {
                  closable: !n.selectDisabled && !n.getDisabled(h),
                  size: n.collapseTagSize,
                  type: n.tagType,
                  "disable-transitions": "",
                  style: Qe(n.tagStyle),
                  onClose: (d) => n.deleteTag(d, h)
                }, {
                  default: Y(() => [
                    Z("span", {
                      class: L(n.nsSelect.e("tags-text"))
                    }, xe(n.getLabel(h)), 3)
                  ]),
                  _: 2
                }, 1032, ["closable", "size", "type", "style", "onClose"])
              ], 2))), 128)),
              n.collapseTags && n.modelValue.length > n.maxCollapseTags ? (R(), ie(l, {
                key: 0,
                ref: "tagTooltipRef",
                disabled: n.dropdownMenuVisible || !n.collapseTagsTooltip,
                "fallback-placements": ["bottom", "top", "right", "left"],
                effect: n.effect,
                placement: "bottom",
                teleported: n.teleported
              }, {
                default: Y(() => [
                  Z("div", {
                    ref: "collapseItemRef",
                    class: L(n.nsSelect.e("selected-item"))
                  }, [
                    K(o, {
                      closable: !1,
                      size: n.collapseTagSize,
                      type: n.tagType,
                      style: Qe(n.collapseTagStyle),
                      "disable-transitions": ""
                    }, {
                      default: Y(() => [
                        Z("span", {
                          class: L(n.nsSelect.e("tags-text"))
                        }, " + " + xe(n.modelValue.length - n.maxCollapseTags), 3)
                      ]),
                      _: 1
                    }, 8, ["size", "type", "style"])
                  ], 2)
                ]),
                content: Y(() => [
                  Z("div", {
                    ref: "tagMenuRef",
                    class: L(n.nsSelect.e("selection"))
                  }, [
                    (R(!0), V(Tt, null, oi(n.collapseTagList, (h) => (R(), V("div", {
                      key: n.getValueKey(n.getValue(h)),
                      class: L(n.nsSelect.e("selected-item"))
                    }, [
                      K(o, {
                        class: "in-tooltip",
                        closable: !n.selectDisabled && !n.getDisabled(h),
                        size: n.collapseTagSize,
                        type: n.tagType,
                        "disable-transitions": "",
                        onClose: (d) => n.deleteTag(d, h)
                      }, {
                        default: Y(() => [
                          Z("span", {
                            class: L(n.nsSelect.e("tags-text"))
                          }, xe(n.getLabel(h)), 3)
                        ]),
                        _: 2
                      }, 1032, ["closable", "size", "type", "onClose"])
                    ], 2))), 128))
                  ], 2)
                ]),
                _: 1
              }, 8, ["disabled", "effect", "teleported"])) : G("v-if", !0)
            ]) : G("v-if", !0),
            n.selectDisabled ? G("v-if", !0) : (R(), V("div", {
              key: 1,
              class: L([
                n.nsSelect.e("selected-item"),
                n.nsSelect.e("input-wrapper"),
                n.nsSelect.is("hidden", !n.filterable)
              ])
            }, [
              it(Z("input", {
                id: n.inputId,
                ref: "inputRef",
                "onUpdate:modelValue": e[0] || (e[0] = (h) => n.states.inputValue = h),
                style: Qe(n.inputStyle),
                autocomplete: n.autocomplete,
                "aria-autocomplete": "list",
                "aria-haspopup": "listbox",
                autocapitalize: "off",
                "aria-expanded": n.expanded,
                "aria-label": n.ariaLabel,
                class: L([n.nsSelect.e("input"), n.nsSelect.is(n.selectSize)]),
                disabled: n.selectDisabled,
                role: "combobox",
                readonly: !n.filterable,
                spellcheck: "false",
                type: "text",
                name: n.name,
                onFocus: e[1] || (e[1] = (...h) => n.handleFocus && n.handleFocus(...h)),
                onBlur: e[2] || (e[2] = (...h) => n.handleBlur && n.handleBlur(...h)),
                onInput: e[3] || (e[3] = (...h) => n.onInput && n.onInput(...h)),
                onCompositionstart: e[4] || (e[4] = (...h) => n.handleCompositionStart && n.handleCompositionStart(...h)),
                onCompositionupdate: e[5] || (e[5] = (...h) => n.handleCompositionUpdate && n.handleCompositionUpdate(...h)),
                onCompositionend: e[6] || (e[6] = (...h) => n.handleCompositionEnd && n.handleCompositionEnd(...h)),
                onKeydown: [
                  e[7] || (e[7] = Ut(Le((h) => n.onKeyboardNavigate("backward"), ["stop", "prevent"]), ["up"])),
                  e[8] || (e[8] = Ut(Le((h) => n.onKeyboardNavigate("forward"), ["stop", "prevent"]), ["down"])),
                  e[9] || (e[9] = Ut(Le((...h) => n.onKeyboardSelect && n.onKeyboardSelect(...h), ["stop", "prevent"]), ["enter"])),
                  e[10] || (e[10] = Ut(Le((...h) => n.handleEsc && n.handleEsc(...h), ["stop", "prevent"]), ["esc"])),
                  e[11] || (e[11] = Ut(Le((...h) => n.handleDel && n.handleDel(...h), ["stop"]), ["delete"]))
                ],
                onClick: e[12] || (e[12] = Le((...h) => n.toggleMenu && n.toggleMenu(...h), ["stop"]))
              }, null, 46, TU), [
                [r1, n.states.inputValue]
              ]),
              n.filterable ? (R(), V("span", {
                key: 0,
                ref: "calculatorRef",
                "aria-hidden": "true",
                class: L(n.nsSelect.e("input-calculator")),
                textContent: xe(n.states.inputValue)
              }, null, 10, _U)) : G("v-if", !0)
            ], 2)),
            n.shouldShowPlaceholder ? (R(), V("div", {
              key: 2,
              class: L([
                n.nsSelect.e("selected-item"),
                n.nsSelect.e("placeholder"),
                n.nsSelect.is("transparent", !n.hasModelValue || n.expanded && !n.states.inputValue)
              ])
            }, [
              Z("span", null, xe(n.currentPlaceholder), 1)
            ], 2)) : G("v-if", !0)
          ], 2),
          Z("div", {
            ref: "suffixRef",
            class: L(n.nsSelect.e("suffix"))
          }, [
            n.iconComponent ? it((R(), ie(a, {
              key: 0,
              class: L([n.nsSelect.e("caret"), n.nsInput.e("icon"), n.iconReverse])
            }, {
              default: Y(() => [
                (R(), ie(yt(n.iconComponent)))
              ]),
              _: 1
            }, 8, ["class"])), [
              [Qt, !n.showClearBtn]
            ]) : G("v-if", !0),
            n.showClearBtn && n.clearIcon ? (R(), ie(a, {
              key: 1,
              class: L([n.nsSelect.e("caret"), n.nsInput.e("icon")]),
              onClick: Le(n.handleClear, ["prevent", "stop"])
            }, {
              default: Y(() => [
                (R(), ie(yt(n.clearIcon)))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : G("v-if", !0),
            n.validateState && n.validateIcon ? (R(), ie(a, {
              key: 2,
              class: L([n.nsInput.e("icon"), n.nsInput.e("validateIcon")])
            }, {
              default: Y(() => [
                (R(), ie(yt(n.validateIcon)))
              ]),
              _: 1
            }, 8, ["class"])) : G("v-if", !0)
          ], 2)
        ], 2)
      ]),
      content: Y(() => [
        K(c, {
          ref: "menuRef",
          data: n.filteredOptions,
          width: n.popperSize,
          "hovering-index": n.states.hoveringIndex,
          "scrollbar-always-on": n.scrollbarAlwaysOn
        }, _g({
          default: Y((h) => [
            de(n.$slots, "default", F4(Z4(h)))
          ]),
          _: 2
        }, [
          n.$slots.header ? {
            name: "header",
            fn: Y(() => [
              Z("div", {
                class: L(n.nsSelect.be("dropdown", "header"))
              }, [
                de(n.$slots, "header")
              ], 2)
            ])
          } : void 0,
          n.$slots.loading && n.loading ? {
            name: "loading",
            fn: Y(() => [
              Z("div", {
                class: L(n.nsSelect.be("dropdown", "loading"))
              }, [
                de(n.$slots, "loading")
              ], 2)
            ])
          } : n.loading || n.filteredOptions.length === 0 ? {
            name: "empty",
            fn: Y(() => [
              Z("div", {
                class: L(n.nsSelect.be("dropdown", "empty"))
              }, [
                de(n.$slots, "empty", {}, () => [
                  Z("span", null, xe(n.emptyText), 1)
                ])
              ], 2)
            ])
          } : void 0,
          n.$slots.footer ? {
            name: "footer",
            fn: Y(() => [
              Z("div", {
                class: L(n.nsSelect.be("dropdown", "footer"))
              }, [
                de(n.$slots, "footer")
              ], 2)
            ])
          } : void 0
        ]), 1032, ["data", "width", "hovering-index", "scrollbar-always-on"])
      ]),
      _: 3
    }, 8, ["visible", "teleported", "popper-class", "popper-options", "fallback-placements", "effect", "placement", "transition", "persistent", "onBeforeShow"])
  ], 34)), [
    [u, n.handleClickOutside, n.popperRef]
  ]);
}
var ig = /* @__PURE__ */ Ce($U, [["render", MU], ["__file", "select.vue"]]);
ig.install = (n) => {
  n.component(ig.name, ig);
};
const RU = ig, AUe = RU, NU = Ee({
  modelValue: {
    type: [Boolean, String, Number],
    default: !1
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  loading: {
    type: Boolean,
    default: !1
  },
  size: {
    type: String,
    validator: w$
  },
  width: {
    type: [String, Number],
    default: ""
  },
  inlinePrompt: {
    type: Boolean,
    default: !1
  },
  inactiveActionIcon: {
    type: kn
  },
  activeActionIcon: {
    type: kn
  },
  activeIcon: {
    type: kn
  },
  inactiveIcon: {
    type: kn
  },
  activeText: {
    type: String,
    default: ""
  },
  inactiveText: {
    type: String,
    default: ""
  },
  activeValue: {
    type: [Boolean, String, Number],
    default: !0
  },
  inactiveValue: {
    type: [Boolean, String, Number],
    default: !1
  },
  activeColor: {
    type: String,
    default: ""
  },
  inactiveColor: {
    type: String,
    default: ""
  },
  borderColor: {
    type: String,
    default: ""
  },
  name: {
    type: String,
    default: ""
  },
  validateEvent: {
    type: Boolean,
    default: !0
  },
  beforeChange: {
    type: ce(Function)
  },
  id: String,
  tabindex: {
    type: [String, Number]
  },
  value: {
    type: [Boolean, String, Number],
    default: !1
  },
  label: {
    type: String,
    default: void 0
  }
}), DU = {
  [ot]: (n) => Pi(n) || bt(n) || tt(n),
  [Un]: (n) => Pi(n) || bt(n) || tt(n),
  [$a]: (n) => Pi(n) || bt(n) || tt(n)
}, LU = ["onClick"], IU = ["id", "aria-checked", "aria-disabled", "aria-label", "name", "true-value", "false-value", "disabled", "tabindex", "onKeydown"], BU = ["aria-hidden"], QU = ["aria-hidden"], zU = ["aria-hidden"], sg = "ElSwitch", jU = F({
  name: sg
}), VU = /* @__PURE__ */ F({
  ...jU,
  props: NU,
  emits: DU,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = Xe(), { formItem: r } = _s(), o = Xi(), l = me("switch");
    ((k) => {
      k.forEach((E) => {
        Ba({
          from: E[0],
          replacement: E[1],
          scope: sg,
          version: "2.3.0",
          ref: "https://element-plus.org/en-US/component/switch.html#attributes",
          type: "Attribute"
        }, $(() => {
          var M;
          return !!((M = s.vnode.props) != null && M[E[2]]);
        }));
      });
    })([
      ['"value"', '"model-value" or "v-model"', "value"],
      ['"active-color"', "CSS var `--el-switch-on-color`", "activeColor"],
      ['"inactive-color"', "CSS var `--el-switch-off-color`", "inactiveColor"],
      ['"border-color"', "CSS var `--el-switch-border-color`", "borderColor"]
    ]);
    const { inputId: c } = Hl(i, {
      formItemContext: r
    }), u = er($(() => i.loading)), h = D(i.modelValue !== !1), d = D(), f = D(), p = $(() => [
      l.b(),
      l.m(o.value),
      l.is("disabled", u.value),
      l.is("checked", b.value)
    ]), g = $(() => [
      l.e("label"),
      l.em("label", "left"),
      l.is("active", !b.value)
    ]), m = $(() => [
      l.e("label"),
      l.em("label", "right"),
      l.is("active", b.value)
    ]), v = $(() => ({
      width: cs(i.width)
    }));
    ne(() => i.modelValue, () => {
      h.value = !0;
    }), ne(() => i.value, () => {
      h.value = !1;
    });
    const O = $(() => h.value ? i.modelValue : i.value), b = $(() => O.value === i.activeValue);
    [i.activeValue, i.inactiveValue].includes(O.value) || (t(ot, i.inactiveValue), t(Un, i.inactiveValue), t($a, i.inactiveValue)), ne(b, (k) => {
      var E;
      d.value.checked = k, i.validateEvent && ((E = r == null ? void 0 : r.validate) == null || E.call(r, "change").catch((M) => pt(M)));
    });
    const w = () => {
      const k = b.value ? i.inactiveValue : i.activeValue;
      t(ot, k), t(Un, k), t($a, k), $e(() => {
        d.value.checked = b.value;
      });
    }, x = () => {
      if (u.value)
        return;
      const { beforeChange: k } = i;
      if (!k) {
        w();
        return;
      }
      const E = k();
      [
        Vb(E),
        Pi(E)
      ].includes(!0) || hs(sg, "beforeChange must return type `Promise<boolean>` or `boolean`"), Vb(E) ? E.then((_) => {
        _ && w();
      }).catch((_) => {
        pt(sg, `some error occurred: ${_}`);
      }) : E && w();
    }, S = $(() => l.cssVarBlock({
      ...i.activeColor ? { "on-color": i.activeColor } : null,
      ...i.inactiveColor ? { "off-color": i.inactiveColor } : null,
      ...i.borderColor ? { "border-color": i.borderColor } : null
    })), C = () => {
      var k, E;
      (E = (k = d.value) == null ? void 0 : k.focus) == null || E.call(k);
    };
    return qe(() => {
      d.value.checked = b.value;
    }), e({
      focus: C,
      checked: b
    }), (k, E) => (R(), V("div", {
      class: L(y(p)),
      style: Qe(y(S)),
      onClick: Le(x, ["prevent"])
    }, [
      Z("input", {
        id: y(c),
        ref_key: "input",
        ref: d,
        class: L(y(l).e("input")),
        type: "checkbox",
        role: "switch",
        "aria-checked": y(b),
        "aria-disabled": y(u),
        "aria-label": k.label,
        name: k.name,
        "true-value": k.activeValue,
        "false-value": k.inactiveValue,
        disabled: y(u),
        tabindex: k.tabindex,
        onChange: w,
        onKeydown: Ut(x, ["enter"])
      }, null, 42, IU),
      !k.inlinePrompt && (k.inactiveIcon || k.inactiveText) ? (R(), V("span", {
        key: 0,
        class: L(y(g))
      }, [
        k.inactiveIcon ? (R(), ie(y(Fe), { key: 0 }, {
          default: Y(() => [
            (R(), ie(yt(k.inactiveIcon)))
          ]),
          _: 1
        })) : G("v-if", !0),
        !k.inactiveIcon && k.inactiveText ? (R(), V("span", {
          key: 1,
          "aria-hidden": y(b)
        }, xe(k.inactiveText), 9, BU)) : G("v-if", !0)
      ], 2)) : G("v-if", !0),
      Z("span", {
        ref_key: "core",
        ref: f,
        class: L(y(l).e("core")),
        style: Qe(y(v))
      }, [
        k.inlinePrompt ? (R(), V("div", {
          key: 0,
          class: L(y(l).e("inner"))
        }, [
          k.activeIcon || k.inactiveIcon ? (R(), ie(y(Fe), {
            key: 0,
            class: L(y(l).is("icon"))
          }, {
            default: Y(() => [
              (R(), ie(yt(y(b) ? k.activeIcon : k.inactiveIcon)))
            ]),
            _: 1
          }, 8, ["class"])) : k.activeText || k.inactiveText ? (R(), V("span", {
            key: 1,
            class: L(y(l).is("text")),
            "aria-hidden": !y(b)
          }, xe(y(b) ? k.activeText : k.inactiveText), 11, QU)) : G("v-if", !0)
        ], 2)) : G("v-if", !0),
        Z("div", {
          class: L(y(l).e("action"))
        }, [
          k.loading ? (R(), ie(y(Fe), {
            key: 0,
            class: L(y(l).is("loading"))
          }, {
            default: Y(() => [
              K(y(tc))
            ]),
            _: 1
          }, 8, ["class"])) : y(b) ? de(k.$slots, "active-action", { key: 1 }, () => [
            k.activeActionIcon ? (R(), ie(y(Fe), { key: 0 }, {
              default: Y(() => [
                (R(), ie(yt(k.activeActionIcon)))
              ]),
              _: 1
            })) : G("v-if", !0)
          ]) : y(b) ? G("v-if", !0) : de(k.$slots, "inactive-action", { key: 2 }, () => [
            k.inactiveActionIcon ? (R(), ie(y(Fe), { key: 0 }, {
              default: Y(() => [
                (R(), ie(yt(k.inactiveActionIcon)))
              ]),
              _: 1
            })) : G("v-if", !0)
          ])
        ], 2)
      ], 6),
      !k.inlinePrompt && (k.activeIcon || k.activeText) ? (R(), V("span", {
        key: 1,
        class: L(y(m))
      }, [
        k.activeIcon ? (R(), ie(y(Fe), { key: 0 }, {
          default: Y(() => [
            (R(), ie(yt(k.activeIcon)))
          ]),
          _: 1
        })) : G("v-if", !0),
        !k.activeIcon && k.activeText ? (R(), V("span", {
          key: 1,
          "aria-hidden": !y(b)
        }, xe(k.activeText), 9, zU)) : G("v-if", !0)
      ], 2)) : G("v-if", !0)
    ], 14, LU));
  }
});
var FU = /* @__PURE__ */ Ce(VU, [["__file", "switch.vue"]]);
const $Ue = Ft(FU), yv = function(n) {
  var e;
  return (e = n.target) == null ? void 0 : e.closest("td");
}, ZU = function(n, e, t, i, s) {
  if (!e && !i && (!s || Array.isArray(s) && !s.length))
    return n;
  typeof t == "string" ? t = t === "descending" ? -1 : 1 : t = t && t < 0 ? -1 : 1;
  const r = i ? null : function(l, a) {
    return s ? (Array.isArray(s) || (s = [s]), s.map((c) => typeof c == "string" ? on(l, c) : c(l, a, n))) : (e !== "$key" && ln(l) && "$value" in l && (l = l.$value), [ln(l) ? on(l, e) : l]);
  }, o = function(l, a) {
    if (i)
      return i(l.value, a.value);
    for (let c = 0, u = l.key.length; c < u; c++) {
      if (l.key[c] < a.key[c])
        return -1;
      if (l.key[c] > a.key[c])
        return 1;
    }
    return 0;
  };
  return n.map((l, a) => ({
    value: l,
    index: a,
    key: r ? r(l, a) : null
  })).sort((l, a) => {
    let c = o(l, a);
    return c || (c = l.index - a.index), c * +t;
  }).map((l) => l.value);
}, n_ = function(n, e) {
  let t = null;
  return n.columns.forEach((i) => {
    i.id === e && (t = i);
  }), t;
}, qU = function(n, e) {
  let t = null;
  for (let i = 0; i < n.columns.length; i++) {
    const s = n.columns[i];
    if (s.columnKey === e) {
      t = s;
      break;
    }
  }
  return t || hs("ElTable", `No column matching with column-key: ${e}`), t;
}, _C = function(n, e, t) {
  const i = (e.className || "").match(new RegExp(`${t}-table_[^\\s]+`, "gm"));
  return i ? n_(n, i[0]) : null;
}, Oi = (n, e) => {
  if (!n)
    throw new Error("Row is required when get row identity");
  if (typeof e == "string") {
    if (!e.includes("."))
      return `${n[e]}`;
    const t = e.split(".");
    let i = n;
    for (const s of t)
      i = i[s];
    return `${i}`;
  } else if (typeof e == "function")
    return e.call(null, n);
}, ya = function(n, e) {
  const t = {};
  return (n || []).forEach((i, s) => {
    t[Oi(i, e)] = { row: i, index: s };
  }), t;
};
function WU(n, e) {
  const t = {};
  let i;
  for (i in n)
    t[i] = n[i];
  for (i in e)
    if (Hi(e, i)) {
      const s = e[i];
      typeof s < "u" && (t[i] = s);
    }
  return t;
}
function G1(n) {
  return n === "" || n !== void 0 && (n = Number.parseInt(n, 10), Number.isNaN(n) && (n = "")), n;
}
function i_(n) {
  return n === "" || n !== void 0 && (n = G1(n), Number.isNaN(n) && (n = 80)), n;
}
function HU(n) {
  return typeof n == "number" ? n : typeof n == "string" ? /^\d+(?:px)?$/.test(n) ? Number.parseInt(n, 10) : n : null;
}
function XU(...n) {
  return n.length === 0 ? (e) => e : n.length === 1 ? n[0] : n.reduce((e, t) => (...i) => e(t(...i)));
}
function Uh(n, e, t) {
  let i = !1;
  const s = n.indexOf(e), r = s !== -1, o = (l) => {
    l === "add" ? n.push(e) : n.splice(s, 1), i = !0, xt(e.children) && e.children.forEach((a) => {
      Uh(n, a, t ?? !r);
    });
  };
  return Pi(t) ? t && !r ? o("add") : !t && r && o("remove") : o(r ? "remove" : "add"), i;
}
function YU(n, e, t = "children", i = "hasChildren") {
  const s = (o) => !(Array.isArray(o) && o.length);
  function r(o, l, a) {
    e(o, l, a), l.forEach((c) => {
      if (c[i]) {
        e(c, null, a + 1);
        return;
      }
      const u = c[t];
      s(u) || r(c, u, a + 1);
    });
  }
  n.forEach((o) => {
    if (o[i]) {
      e(o, null, 0);
      return;
    }
    const l = o[t];
    s(l) || r(o, l, 0);
  });
}
let Ns = null;
function UU(n, e, t, i) {
  if ((Ns == null ? void 0 : Ns.trigger) === t)
    return;
  Ns == null || Ns();
  const s = i == null ? void 0 : i.refs.tableWrapper, r = s == null ? void 0 : s.dataset.prefix, o = {
    strategy: "fixed",
    ...n.popperOptions
  }, l = K(Bo, {
    content: e,
    virtualTriggering: !0,
    virtualRef: t,
    appendTo: s,
    placement: "top",
    transition: "none",
    offset: 0,
    hideAfter: 0,
    ...n,
    popperOptions: o,
    onHide: () => {
      Ns == null || Ns();
    }
  });
  l.appContext = { ...i.appContext, ...i };
  const a = document.createElement("div");
  $l(l, a), l.component.exposed.onOpen();
  const c = s == null ? void 0 : s.querySelector(`.${r}-scrollbar__wrap`);
  Ns = () => {
    $l(null, a), c == null || c.removeEventListener("scroll", Ns), Ns = null;
  }, Ns.trigger = t, c == null || c.addEventListener("scroll", Ns);
}
function s_(n) {
  return n.children ? TQ(n.children, s_) : [n];
}
function MC(n, e) {
  return n + e.colSpan;
}
const r_ = (n, e, t, i) => {
  let s = 0, r = n;
  const o = t.states.columns.value;
  if (i) {
    const a = s_(i[n]);
    s = o.slice(0, o.indexOf(a[0])).reduce(MC, 0), r = s + a.reduce(MC, 0) - 1;
  } else
    s = n;
  let l;
  switch (e) {
    case "left":
      r < t.states.fixedLeafColumnsLength.value && (l = "left");
      break;
    case "right":
      s >= o.length - t.states.rightFixedLeafColumnsLength.value && (l = "right");
      break;
    default:
      r < t.states.fixedLeafColumnsLength.value ? l = "left" : s >= o.length - t.states.rightFixedLeafColumnsLength.value && (l = "right");
  }
  return l ? {
    direction: l,
    start: s,
    after: r
  } : {};
}, K1 = (n, e, t, i, s, r = 0) => {
  const o = [], { direction: l, start: a, after: c } = r_(e, t, i, s);
  if (l) {
    const u = l === "left";
    o.push(`${n}-fixed-column--${l}`), u && c + r === i.states.fixedLeafColumnsLength.value - 1 ? o.push("is-last-column") : !u && a - r === i.states.columns.value.length - i.states.rightFixedLeafColumnsLength.value && o.push("is-first-column");
  }
  return o;
};
function RC(n, e) {
  return n + (e.realWidth === null || Number.isNaN(e.realWidth) ? Number(e.width) : e.realWidth);
}
const J1 = (n, e, t, i) => {
  const {
    direction: s,
    start: r = 0,
    after: o = 0
  } = r_(n, e, t, i);
  if (!s)
    return;
  const l = {}, a = s === "left", c = t.states.columns.value;
  return a ? l.left = c.slice(0, r).reduce(RC, 0) : l.right = c.slice(o + 1).reverse().reduce(RC, 0), l;
}, fu = (n, e) => {
  n && (Number.isNaN(n[e]) || (n[e] = `${n[e]}px`));
};
function GU(n) {
  const e = Xe(), t = D(!1), i = D([]);
  return {
    updateExpandRows: () => {
      const a = n.data.value || [], c = n.rowKey.value;
      if (t.value)
        i.value = a.slice();
      else if (c) {
        const u = ya(i.value, c);
        i.value = a.reduce((h, d) => {
          const f = Oi(d, c);
          return u[f] && h.push(d), h;
        }, []);
      } else
        i.value = [];
    },
    toggleRowExpansion: (a, c) => {
      Uh(i.value, a, c) && e.emit("expand-change", a, i.value.slice());
    },
    setExpandRowKeys: (a) => {
      e.store.assertRowKey();
      const c = n.data.value || [], u = n.rowKey.value, h = ya(c, u);
      i.value = a.reduce((d, f) => {
        const p = h[f];
        return p && d.push(p.row), d;
      }, []);
    },
    isRowExpanded: (a) => {
      const c = n.rowKey.value;
      return c ? !!ya(i.value, c)[Oi(a, c)] : i.value.includes(a);
    },
    states: {
      expandRows: i,
      defaultExpandAll: t
    }
  };
}
function KU(n) {
  const e = Xe(), t = D(null), i = D(null), s = (c) => {
    e.store.assertRowKey(), t.value = c, o(c);
  }, r = () => {
    t.value = null;
  }, o = (c) => {
    const { data: u, rowKey: h } = n;
    let d = null;
    h.value && (d = (y(u) || []).find((f) => Oi(f, h.value) === c)), i.value = d, e.emit("current-change", i.value, null);
  };
  return {
    setCurrentRowKey: s,
    restoreCurrentRowKey: r,
    setCurrentRowByKey: o,
    updateCurrentRow: (c) => {
      const u = i.value;
      if (c && c !== u) {
        i.value = c, e.emit("current-change", i.value, u);
        return;
      }
      !c && u && (i.value = null, e.emit("current-change", null, u));
    },
    updateCurrentRowData: () => {
      const c = n.rowKey.value, u = n.data.value || [], h = i.value;
      if (!u.includes(h) && h) {
        if (c) {
          const d = Oi(h, c);
          o(d);
        } else
          i.value = null;
        i.value === null && e.emit("current-change", null, h);
      } else
        t.value && (o(t.value), r());
    },
    states: {
      _currentRowKey: t,
      currentRow: i
    }
  };
}
function JU(n) {
  const e = D([]), t = D({}), i = D(16), s = D(!1), r = D({}), o = D("hasChildren"), l = D("children"), a = Xe(), c = $(() => {
    if (!n.rowKey.value)
      return {};
    const v = n.data.value || [];
    return h(v);
  }), u = $(() => {
    const v = n.rowKey.value, O = Object.keys(r.value), b = {};
    return O.length && O.forEach((w) => {
      if (r.value[w].length) {
        const x = { children: [] };
        r.value[w].forEach((S) => {
          const C = Oi(S, v);
          x.children.push(C), S[o.value] && !b[C] && (b[C] = { children: [] });
        }), b[w] = x;
      }
    }), b;
  }), h = (v) => {
    const O = n.rowKey.value, b = {};
    return YU(v, (w, x, S) => {
      const C = Oi(w, O);
      Array.isArray(x) ? b[C] = {
        children: x.map((k) => Oi(k, O)),
        level: S
      } : s.value && (b[C] = {
        children: [],
        lazy: !0,
        level: S
      });
    }, l.value, o.value), b;
  }, d = (v = !1, O = ((b) => (b = a.store) == null ? void 0 : b.states.defaultExpandAll.value)()) => {
    var b;
    const w = c.value, x = u.value, S = Object.keys(w), C = {};
    if (S.length) {
      const k = y(t), E = [], M = (T, B) => {
        if (v)
          return e.value ? O || e.value.includes(B) : !!(O || T != null && T.expanded);
        {
          const I = O || e.value && e.value.includes(B);
          return !!(T != null && T.expanded || I);
        }
      };
      S.forEach((T) => {
        const B = k[T], I = { ...w[T] };
        if (I.expanded = M(B, T), I.lazy) {
          const { loaded: P = !1, loading: A = !1 } = B || {};
          I.loaded = !!P, I.loading = !!A, E.push(T);
        }
        C[T] = I;
      });
      const _ = Object.keys(x);
      s.value && _.length && E.length && _.forEach((T) => {
        const B = k[T], I = x[T].children;
        if (E.includes(T)) {
          if (C[T].children.length !== 0)
            throw new Error("[ElTable]children must be an empty array.");
          C[T].children = I;
        } else {
          const { loaded: P = !1, loading: A = !1 } = B || {};
          C[T] = {
            lazy: !0,
            loaded: !!P,
            loading: !!A,
            expanded: M(B, T),
            children: I,
            level: ""
          };
        }
      });
    }
    t.value = C, (b = a.store) == null || b.updateTableScrollY();
  };
  ne(() => e.value, () => {
    d(!0);
  }), ne(() => c.value, () => {
    d();
  }), ne(() => u.value, () => {
    d();
  });
  const f = (v) => {
    e.value = v, d();
  }, p = (v, O) => {
    a.store.assertRowKey();
    const b = n.rowKey.value, w = Oi(v, b), x = w && t.value[w];
    if (w && x && "expanded" in x) {
      const S = x.expanded;
      O = typeof O > "u" ? !x.expanded : O, t.value[w].expanded = O, S !== O && a.emit("expand-change", v, O), a.store.updateTableScrollY();
    }
  }, g = (v) => {
    a.store.assertRowKey();
    const O = n.rowKey.value, b = Oi(v, O), w = t.value[b];
    s.value && w && "loaded" in w && !w.loaded ? m(v, b, w) : p(v, void 0);
  }, m = (v, O, b) => {
    const { load: w } = a.props;
    w && !t.value[O].loaded && (t.value[O].loading = !0, w(v, b, (x) => {
      if (!Array.isArray(x))
        throw new TypeError("[ElTable] data must be an array");
      t.value[O].loading = !1, t.value[O].loaded = !0, t.value[O].expanded = !0, x.length && (r.value[O] = x), a.emit("expand-change", v, !0);
    }));
  };
  return {
    loadData: m,
    loadOrToggle: g,
    toggleTreeExpansion: p,
    updateTreeExpandKeys: f,
    updateTreeData: d,
    normalize: h,
    states: {
      expandRowKeys: e,
      treeData: t,
      indent: i,
      lazy: s,
      lazyTreeNodeMap: r,
      lazyColumnIdentifier: o,
      childrenColumnName: l
    }
  };
}
const eG = (n, e) => {
  const t = e.sortingColumn;
  return !t || typeof t.sortable == "string" ? n : ZU(n, e.sortProp, e.sortOrder, t.sortMethod, t.sortBy);
}, rg = (n) => {
  const e = [];
  return n.forEach((t) => {
    t.children && t.children.length > 0 ? e.push.apply(e, rg(t.children)) : e.push(t);
  }), e;
};
function tG() {
  var n;
  const e = Xe(), { size: t } = Ws((n = e.proxy) == null ? void 0 : n.$props), i = D(null), s = D([]), r = D([]), o = D(!1), l = D([]), a = D([]), c = D([]), u = D([]), h = D([]), d = D([]), f = D([]), p = D([]), g = [], m = D(0), v = D(0), O = D(0), b = D(!1), w = D([]), x = D(!1), S = D(!1), C = D(null), k = D({}), E = D(null), M = D(null), _ = D(null), T = D(null), B = D(null);
  ne(s, () => e.state && N(!1), {
    deep: !0
  });
  const I = () => {
    if (!i.value)
      throw new Error("[ElTable] prop row-key is required");
  }, P = (Te) => {
    var je;
    (je = Te.children) == null || je.forEach((J) => {
      J.fixed = Te.fixed, P(J);
    });
  }, A = () => {
    l.value.forEach((ve) => {
      P(ve);
    }), u.value = l.value.filter((ve) => ve.fixed === !0 || ve.fixed === "left"), h.value = l.value.filter((ve) => ve.fixed === "right"), u.value.length > 0 && l.value[0] && l.value[0].type === "selection" && !l.value[0].fixed && (l.value[0].fixed = !0, u.value.unshift(l.value[0]));
    const Te = l.value.filter((ve) => !ve.fixed);
    a.value = [].concat(u.value).concat(Te).concat(h.value);
    const je = rg(Te), J = rg(u.value), ae = rg(h.value);
    m.value = je.length, v.value = J.length, O.value = ae.length, c.value = [].concat(J).concat(je).concat(ae), o.value = u.value.length > 0 || h.value.length > 0;
  }, N = (Te, je = !1) => {
    Te && A(), je ? e.state.doLayout() : e.state.debouncedUpdateLayout();
  }, q = (Te) => w.value.includes(Te), j = () => {
    b.value = !1, w.value.length && (w.value = [], e.emit("selection-change", []));
  }, H = () => {
    let Te;
    if (i.value) {
      Te = [];
      const je = ya(w.value, i.value), J = ya(s.value, i.value);
      for (const ae in je)
        Hi(je, ae) && !J[ae] && Te.push(je[ae].row);
    } else
      Te = w.value.filter((je) => !s.value.includes(je));
    if (Te.length) {
      const je = w.value.filter((J) => !Te.includes(J));
      w.value = je, e.emit("selection-change", je.slice());
    }
  }, oe = () => (w.value || []).slice(), te = (Te, je = void 0, J = !0) => {
    if (Uh(w.value, Te, je)) {
      const ve = (w.value || []).slice();
      J && e.emit("select", ve, Te), e.emit("selection-change", ve);
    }
  }, W = () => {
    var Te, je;
    const J = S.value ? !b.value : !(b.value || w.value.length);
    b.value = J;
    let ae = !1, ve = 0;
    const Ue = (je = (Te = e == null ? void 0 : e.store) == null ? void 0 : Te.states) == null ? void 0 : je.rowKey.value;
    s.value.forEach((Zt, Sn) => {
      const jt = Sn + ve;
      C.value ? C.value.call(null, Zt, jt) && Uh(w.value, Zt, J) && (ae = !0) : Uh(w.value, Zt, J) && (ae = !0), ve += he(Oi(Zt, Ue));
    }), ae && e.emit("selection-change", w.value ? w.value.slice() : []), e.emit("select-all", w.value);
  }, U = () => {
    const Te = ya(w.value, i.value);
    s.value.forEach((je) => {
      const J = Oi(je, i.value), ae = Te[J];
      ae && (w.value[ae.index] = je);
    });
  }, le = () => {
    var Te, je, J;
    if (((Te = s.value) == null ? void 0 : Te.length) === 0) {
      b.value = !1;
      return;
    }
    let ae;
    i.value && (ae = ya(w.value, i.value));
    const ve = function(jt) {
      return ae ? !!ae[Oi(jt, i.value)] : w.value.includes(jt);
    };
    let Ue = !0, Zt = 0, Sn = 0;
    for (let jt = 0, Rr = (s.value || []).length; jt < Rr; jt++) {
      const Ms = (J = (je = e == null ? void 0 : e.store) == null ? void 0 : je.states) == null ? void 0 : J.rowKey.value, oc = jt + Sn, xo = s.value[jt], lc = C.value && C.value.call(null, xo, oc);
      if (ve(xo))
        Zt++;
      else if (!C.value || lc) {
        Ue = !1;
        break;
      }
      Sn += he(Oi(xo, Ms));
    }
    Zt === 0 && (Ue = !1), b.value = Ue;
  }, he = (Te) => {
    var je;
    if (!e || !e.store)
      return 0;
    const { treeData: J } = e.store.states;
    let ae = 0;
    const ve = (je = J.value[Te]) == null ? void 0 : je.children;
    return ve && (ae += ve.length, ve.forEach((Ue) => {
      ae += he(Ue);
    })), ae;
  }, ee = (Te, je) => {
    Array.isArray(Te) || (Te = [Te]);
    const J = {};
    return Te.forEach((ae) => {
      k.value[ae.id] = je, J[ae.columnKey || ae.id] = je;
    }), J;
  }, pe = (Te, je, J) => {
    M.value && M.value !== Te && (M.value.order = null), M.value = Te, _.value = je, T.value = J;
  }, be = () => {
    let Te = y(r);
    Object.keys(k.value).forEach((je) => {
      const J = k.value[je];
      if (!J || J.length === 0)
        return;
      const ae = n_({
        columns: c.value
      }, je);
      ae && ae.filterMethod && (Te = Te.filter((ve) => J.some((Ue) => ae.filterMethod.call(null, Ue, ve, ae))));
    }), E.value = Te;
  }, fe = () => {
    s.value = eG(E.value, {
      sortingColumn: M.value,
      sortProp: _.value,
      sortOrder: T.value
    });
  }, Ae = (Te = void 0) => {
    Te && Te.filter || be(), fe();
  }, ut = (Te) => {
    const { tableHeaderRef: je } = e.refs;
    if (!je)
      return;
    const J = Object.assign({}, je.filterPanels), ae = Object.keys(J);
    if (ae.length)
      if (typeof Te == "string" && (Te = [Te]), Array.isArray(Te)) {
        const ve = Te.map((Ue) => qU({
          columns: c.value
        }, Ue));
        ae.forEach((Ue) => {
          const Zt = ve.find((Sn) => Sn.id === Ue);
          Zt && (Zt.filteredValue = []);
        }), e.store.commit("filterChange", {
          column: ve,
          values: [],
          silent: !0,
          multi: !0
        });
      } else
        ae.forEach((ve) => {
          const Ue = c.value.find((Zt) => Zt.id === ve);
          Ue && (Ue.filteredValue = []);
        }), k.value = {}, e.store.commit("filterChange", {
          column: {},
          values: [],
          silent: !0
        });
  }, zt = () => {
    M.value && (pe(null, null, null), e.store.commit("changeSortCondition", {
      silent: !0
    }));
  }, {
    setExpandRowKeys: Kn,
    toggleRowExpansion: Jn,
    updateExpandRows: Di,
    states: hi,
    isRowExpanded: Li
  } = GU({
    data: s,
    rowKey: i
  }), {
    updateTreeExpandKeys: ds,
    toggleTreeExpansion: un,
    updateTreeData: Ii,
    loadOrToggle: Yi,
    states: Bi
  } = JU({
    data: s,
    rowKey: i
  }), {
    updateCurrentRowData: ei,
    updateCurrentRow: ge,
    setCurrentRowKey: Ke,
    states: Dt
  } = KU({
    data: s,
    rowKey: i
  });
  return {
    assertRowKey: I,
    updateColumns: A,
    scheduleLayout: N,
    isSelected: q,
    clearSelection: j,
    cleanSelection: H,
    getSelectionRows: oe,
    toggleRowSelection: te,
    _toggleAllSelection: W,
    toggleAllSelection: null,
    updateSelectionByRowKey: U,
    updateAllSelected: le,
    updateFilters: ee,
    updateCurrentRow: ge,
    updateSort: pe,
    execFilter: be,
    execSort: fe,
    execQuery: Ae,
    clearFilter: ut,
    clearSort: zt,
    toggleRowExpansion: Jn,
    setExpandRowKeysAdapter: (Te) => {
      Kn(Te), ds(Te);
    },
    setCurrentRowKey: Ke,
    toggleRowExpansionAdapter: (Te, je) => {
      c.value.some(({ type: ae }) => ae === "expand") ? Jn(Te, je) : un(Te, je);
    },
    isRowExpanded: Li,
    updateExpandRows: Di,
    updateCurrentRowData: ei,
    loadOrToggle: Yi,
    updateTreeData: Ii,
    states: {
      tableSize: t,
      rowKey: i,
      data: s,
      _data: r,
      isComplex: o,
      _columns: l,
      originColumns: a,
      columns: c,
      fixedColumns: u,
      rightFixedColumns: h,
      leafColumns: d,
      fixedLeafColumns: f,
      rightFixedLeafColumns: p,
      updateOrderFns: g,
      leafColumnsLength: m,
      fixedLeafColumnsLength: v,
      rightFixedLeafColumnsLength: O,
      isAllSelected: b,
      selection: w,
      reserveSelection: x,
      selectOnIndeterminate: S,
      selectable: C,
      filters: k,
      filteredData: E,
      sortingColumn: M,
      sortProp: _,
      sortOrder: T,
      hoverRow: B,
      ...hi,
      ...Bi,
      ...Dt
    }
  };
}
function my(n, e) {
  return n.map((t) => {
    var i;
    return t.id === e.id ? e : ((i = t.children) != null && i.length && (t.children = my(t.children, e)), t);
  });
}
function vy(n) {
  n.forEach((e) => {
    var t, i;
    e.no = (t = e.getColumnIndex) == null ? void 0 : t.call(e), (i = e.children) != null && i.length && vy(e.children);
  }), n.sort((e, t) => e.no - t.no);
}
function nG() {
  const n = Xe(), e = tG();
  return {
    ns: me("table"),
    ...e,
    mutations: {
      setData(o, l) {
        const a = y(o._data) !== l;
        o.data.value = l, o._data.value = l, n.store.execQuery(), n.store.updateCurrentRowData(), n.store.updateExpandRows(), n.store.updateTreeData(n.store.states.defaultExpandAll.value), y(o.reserveSelection) ? (n.store.assertRowKey(), n.store.updateSelectionByRowKey()) : a ? n.store.clearSelection() : n.store.cleanSelection(), n.store.updateAllSelected(), n.$ready && n.store.scheduleLayout();
      },
      insertColumn(o, l, a, c) {
        const u = y(o._columns);
        let h = [];
        a ? (a && !a.children && (a.children = []), a.children.push(l), h = my(u, a)) : (u.push(l), h = u), vy(h), o._columns.value = h, o.updateOrderFns.push(c), l.type === "selection" && (o.selectable.value = l.selectable, o.reserveSelection.value = l.reserveSelection), n.$ready && (n.store.updateColumns(), n.store.scheduleLayout());
      },
      updateColumnOrder(o, l) {
        var a;
        ((a = l.getColumnIndex) == null ? void 0 : a.call(l)) !== l.no && (vy(o._columns.value), n.$ready && n.store.updateColumns());
      },
      removeColumn(o, l, a, c) {
        const u = y(o._columns) || [];
        if (a)
          a.children.splice(a.children.findIndex((d) => d.id === l.id), 1), $e(() => {
            var d;
            ((d = a.children) == null ? void 0 : d.length) === 0 && delete a.children;
          }), o._columns.value = my(u, a);
        else {
          const d = u.indexOf(l);
          d > -1 && (u.splice(d, 1), o._columns.value = u);
        }
        const h = o.updateOrderFns.indexOf(c);
        h > -1 && o.updateOrderFns.splice(h, 1), n.$ready && (n.store.updateColumns(), n.store.scheduleLayout());
      },
      sort(o, l) {
        const { prop: a, order: c, init: u } = l;
        if (a) {
          const h = y(o.columns).find((d) => d.property === a);
          h && (h.order = c, n.store.updateSort(h, a, c), n.store.commit("changeSortCondition", { init: u }));
        }
      },
      changeSortCondition(o, l) {
        const { sortingColumn: a, sortProp: c, sortOrder: u } = o, h = y(a), d = y(c), f = y(u);
        f === null && (o.sortingColumn.value = null, o.sortProp.value = null);
        const p = { filter: !0 };
        n.store.execQuery(p), (!l || !(l.silent || l.init)) && n.emit("sort-change", {
          column: h,
          prop: d,
          order: f
        }), n.store.updateTableScrollY();
      },
      filterChange(o, l) {
        const { column: a, values: c, silent: u } = l, h = n.store.updateFilters(a, c);
        n.store.execQuery(), u || n.emit("filter-change", h), n.store.updateTableScrollY();
      },
      toggleAllSelection() {
        n.store.toggleAllSelection();
      },
      rowSelectedChanged(o, l) {
        n.store.toggleRowSelection(l), n.store.updateAllSelected();
      },
      setHoverRow(o, l) {
        o.hoverRow.value = l;
      },
      setCurrentRow(o, l) {
        n.store.updateCurrentRow(l);
      }
    },
    commit: function(o, ...l) {
      const a = n.store.mutations;
      if (a[o])
        a[o].apply(n, [n.store.states].concat(l));
      else
        throw new Error(`Action not found: ${o}`);
    },
    updateTableScrollY: function() {
      $e(() => n.layout.updateScrollY.apply(n.layout));
    }
  };
}
const Gh = {
  rowKey: "rowKey",
  defaultExpandAll: "defaultExpandAll",
  selectOnIndeterminate: "selectOnIndeterminate",
  indent: "indent",
  lazy: "lazy",
  data: "data",
  "treeProps.hasChildren": {
    key: "lazyColumnIdentifier",
    default: "hasChildren"
  },
  "treeProps.children": {
    key: "childrenColumnName",
    default: "children"
  }
};
function iG(n, e) {
  if (!n)
    throw new Error("Table is required.");
  const t = nG();
  return t.toggleAllSelection = Do(t._toggleAllSelection, 10), Object.keys(Gh).forEach((i) => {
    o_(l_(e, i), i, t);
  }), sG(t, e), t;
}
function sG(n, e) {
  Object.keys(Gh).forEach((t) => {
    ne(() => l_(e, t), (i) => {
      o_(i, t, n);
    });
  });
}
function o_(n, e, t) {
  let i = n, s = Gh[e];
  typeof Gh[e] == "object" && (s = s.key, i = i || Gh[e].default), t.states[s].value = i;
}
function l_(n, e) {
  if (e.includes(".")) {
    const t = e.split(".");
    let i = n;
    return t.forEach((s) => {
      i = i[s];
    }), i;
  } else
    return n[e];
}
class rG {
  constructor(e) {
    this.observers = [], this.table = null, this.store = null, this.columns = [], this.fit = !0, this.showHeader = !0, this.height = D(null), this.scrollX = D(!1), this.scrollY = D(!1), this.bodyWidth = D(null), this.fixedWidth = D(null), this.rightFixedWidth = D(null), this.gutterWidth = 0;
    for (const t in e)
      Hi(e, t) && (Fi(this[t]) ? this[t].value = e[t] : this[t] = e[t]);
    if (!this.table)
      throw new Error("Table is required for Table Layout");
    if (!this.store)
      throw new Error("Store is required for Table Layout");
  }
  updateScrollY() {
    if (this.height.value === null)
      return !1;
    const t = this.table.refs.scrollBarRef;
    if (this.table.vnode.el && (t != null && t.wrapRef)) {
      let i = !0;
      const s = this.scrollY.value;
      return i = t.wrapRef.scrollHeight > t.wrapRef.clientHeight, this.scrollY.value = i, s !== i;
    }
    return !1;
  }
  setHeight(e, t = "height") {
    if (!vt)
      return;
    const i = this.table.vnode.el;
    if (e = HU(e), this.height.value = Number(e), !i && (e || e === 0))
      return $e(() => this.setHeight(e, t));
    typeof e == "number" ? (i.style[t] = `${e}px`, this.updateElsHeight()) : typeof e == "string" && (i.style[t] = e, this.updateElsHeight());
  }
  setMaxHeight(e) {
    this.setHeight(e, "max-height");
  }
  getFlattenColumns() {
    const e = [];
    return this.table.store.states.columns.value.forEach((i) => {
      i.isColumnGroup ? e.push.apply(e, i.columns) : e.push(i);
    }), e;
  }
  updateElsHeight() {
    this.updateScrollY(), this.notifyObservers("scrollable");
  }
  headerDisplayNone(e) {
    if (!e)
      return !0;
    let t = e;
    for (; t.tagName !== "DIV"; ) {
      if (getComputedStyle(t).display === "none")
        return !0;
      t = t.parentElement;
    }
    return !1;
  }
  updateColumnsWidth() {
    if (!vt)
      return;
    const e = this.fit, t = this.table.vnode.el.clientWidth;
    let i = 0;
    const s = this.getFlattenColumns(), r = s.filter((a) => typeof a.width != "number");
    if (s.forEach((a) => {
      typeof a.width == "number" && a.realWidth && (a.realWidth = null);
    }), r.length > 0 && e) {
      if (s.forEach((a) => {
        i += Number(a.width || a.minWidth || 80);
      }), i <= t) {
        this.scrollX.value = !1;
        const a = t - i;
        if (r.length === 1)
          r[0].realWidth = Number(r[0].minWidth || 80) + a;
        else {
          const c = r.reduce((d, f) => d + Number(f.minWidth || 80), 0), u = a / c;
          let h = 0;
          r.forEach((d, f) => {
            if (f === 0)
              return;
            const p = Math.floor(Number(d.minWidth || 80) * u);
            h += p, d.realWidth = Number(d.minWidth || 80) + p;
          }), r[0].realWidth = Number(r[0].minWidth || 80) + a - h;
        }
      } else
        this.scrollX.value = !0, r.forEach((a) => {
          a.realWidth = Number(a.minWidth);
        });
      this.bodyWidth.value = Math.max(i, t), this.table.state.resizeState.value.width = this.bodyWidth.value;
    } else
      s.forEach((a) => {
        !a.width && !a.minWidth ? a.realWidth = 80 : a.realWidth = Number(a.width || a.minWidth), i += a.realWidth;
      }), this.scrollX.value = i > t, this.bodyWidth.value = i;
    const o = this.store.states.fixedColumns.value;
    if (o.length > 0) {
      let a = 0;
      o.forEach((c) => {
        a += Number(c.realWidth || c.width);
      }), this.fixedWidth.value = a;
    }
    const l = this.store.states.rightFixedColumns.value;
    if (l.length > 0) {
      let a = 0;
      l.forEach((c) => {
        a += Number(c.realWidth || c.width);
      }), this.rightFixedWidth.value = a;
    }
    this.notifyObservers("columns");
  }
  addObserver(e) {
    this.observers.push(e);
  }
  removeObserver(e) {
    const t = this.observers.indexOf(e);
    t !== -1 && this.observers.splice(t, 1);
  }
  notifyObservers(e) {
    this.observers.forEach((i) => {
      var s, r;
      switch (e) {
        case "columns":
          (s = i.state) == null || s.onColumnsChange(this);
          break;
        case "scrollable":
          (r = i.state) == null || r.onScrollableChange(this);
          break;
        default:
          throw new Error(`Table Layout don't have event ${e}.`);
      }
    });
  }
}
const { CheckboxGroup: oG } = uo, lG = F({
  name: "ElTableFilterPanel",
  components: {
    ElCheckbox: uo,
    ElCheckboxGroup: oG,
    ElScrollbar: wf,
    ElTooltip: Bo,
    ElIcon: Fe,
    ArrowDown: Gu,
    ArrowUp: JA
  },
  directives: { ClickOutside: Sf },
  props: {
    placement: {
      type: String,
      default: "bottom-start"
    },
    store: {
      type: Object
    },
    column: {
      type: Object
    },
    upDataColumn: {
      type: Function
    }
  },
  setup(n) {
    const e = Xe(), { t } = mn(), i = me("table-filter"), s = e == null ? void 0 : e.parent;
    s.filterPanels.value[n.column.id] || (s.filterPanels.value[n.column.id] = e);
    const r = D(!1), o = D(null), l = $(() => n.column && n.column.filters), a = $(() => n.column.filterClassName ? `${i.b()} ${n.column.filterClassName}` : i.b()), c = $({
      get: () => {
        var x;
        return (((x = n.column) == null ? void 0 : x.filteredValue) || [])[0];
      },
      set: (x) => {
        u.value && (typeof x < "u" && x !== null ? u.value.splice(0, 1, x) : u.value.splice(0, 1));
      }
    }), u = $({
      get() {
        return n.column ? n.column.filteredValue || [] : [];
      },
      set(x) {
        n.column && n.upDataColumn("filteredValue", x);
      }
    }), h = $(() => n.column ? n.column.filterMultiple : !0), d = (x) => x.value === c.value, f = () => {
      r.value = !1;
    }, p = (x) => {
      x.stopPropagation(), r.value = !r.value;
    }, g = () => {
      r.value = !1;
    }, m = () => {
      b(u.value), f();
    }, v = () => {
      u.value = [], b(u.value), f();
    }, O = (x) => {
      c.value = x, b(typeof x < "u" && x !== null ? u.value : []), f();
    }, b = (x) => {
      n.store.commit("filterChange", {
        column: n.column,
        values: x
      }), n.store.updateAllSelected();
    };
    ne(r, (x) => {
      n.column && n.upDataColumn("filterOpened", x);
    }, {
      immediate: !0
    });
    const w = $(() => {
      var x, S;
      return (S = (x = o.value) == null ? void 0 : x.popperRef) == null ? void 0 : S.contentRef;
    });
    return {
      tooltipVisible: r,
      multiple: h,
      filterClassName: a,
      filteredValue: u,
      filterValue: c,
      filters: l,
      handleConfirm: m,
      handleReset: v,
      handleSelect: O,
      isActive: d,
      t,
      ns: i,
      showFilterPanel: p,
      hideFilterPanel: g,
      popperPaneRef: w,
      tooltip: o
    };
  }
}), aG = { key: 0 }, cG = ["disabled"], uG = ["label", "onClick"];
function hG(n, e, t, i, s, r) {
  const o = nt("el-checkbox"), l = nt("el-checkbox-group"), a = nt("el-scrollbar"), c = nt("arrow-up"), u = nt("arrow-down"), h = nt("el-icon"), d = nt("el-tooltip"), f = Vm("click-outside");
  return R(), ie(d, {
    ref: "tooltip",
    visible: n.tooltipVisible,
    offset: 0,
    placement: n.placement,
    "show-arrow": !1,
    "stop-popper-mouse-event": !1,
    teleported: "",
    effect: "light",
    pure: "",
    "popper-class": n.filterClassName,
    persistent: ""
  }, {
    content: Y(() => [
      n.multiple ? (R(), V("div", aG, [
        Z("div", {
          class: L(n.ns.e("content"))
        }, [
          K(a, {
            "wrap-class": n.ns.e("wrap")
          }, {
            default: Y(() => [
              K(l, {
                modelValue: n.filteredValue,
                "onUpdate:modelValue": e[0] || (e[0] = (p) => n.filteredValue = p),
                class: L(n.ns.e("checkbox-group"))
              }, {
                default: Y(() => [
                  (R(!0), V(Tt, null, oi(n.filters, (p) => (R(), ie(o, {
                    key: p.value,
                    label: p.value
                  }, {
                    default: Y(() => [
                      Xn(xe(p.text), 1)
                    ]),
                    _: 2
                  }, 1032, ["label"]))), 128))
                ]),
                _: 1
              }, 8, ["modelValue", "class"])
            ]),
            _: 1
          }, 8, ["wrap-class"])
        ], 2),
        Z("div", {
          class: L(n.ns.e("bottom"))
        }, [
          Z("button", {
            class: L({ [n.ns.is("disabled")]: n.filteredValue.length === 0 }),
            disabled: n.filteredValue.length === 0,
            type: "button",
            onClick: e[1] || (e[1] = (...p) => n.handleConfirm && n.handleConfirm(...p))
          }, xe(n.t("el.table.confirmFilter")), 11, cG),
          Z("button", {
            type: "button",
            onClick: e[2] || (e[2] = (...p) => n.handleReset && n.handleReset(...p))
          }, xe(n.t("el.table.resetFilter")), 1)
        ], 2)
      ])) : (R(), V("ul", {
        key: 1,
        class: L(n.ns.e("list"))
      }, [
        Z("li", {
          class: L([
            n.ns.e("list-item"),
            {
              [n.ns.is("active")]: n.filterValue === void 0 || n.filterValue === null
            }
          ]),
          onClick: e[3] || (e[3] = (p) => n.handleSelect(null))
        }, xe(n.t("el.table.clearFilter")), 3),
        (R(!0), V(Tt, null, oi(n.filters, (p) => (R(), V("li", {
          key: p.value,
          class: L([n.ns.e("list-item"), n.ns.is("active", n.isActive(p))]),
          label: p.value,
          onClick: (g) => n.handleSelect(p.value)
        }, xe(p.text), 11, uG))), 128))
      ], 2))
    ]),
    default: Y(() => [
      it((R(), V("span", {
        class: L([
          `${n.ns.namespace.value}-table__column-filter-trigger`,
          `${n.ns.namespace.value}-none-outline`
        ]),
        onClick: e[4] || (e[4] = (...p) => n.showFilterPanel && n.showFilterPanel(...p))
      }, [
        K(h, null, {
          default: Y(() => [
            n.column.filterOpened ? (R(), ie(c, { key: 0 })) : (R(), ie(u, { key: 1 }))
          ]),
          _: 1
        })
      ], 2)), [
        [f, n.hideFilterPanel, n.popperPaneRef]
      ])
    ]),
    _: 1
  }, 8, ["visible", "placement", "popper-class"]);
}
var dG = /* @__PURE__ */ Ce(lG, [["render", hG], ["__file", "filter-panel.vue"]]);
function a_(n) {
  const e = Xe();
  s1(() => {
    t.value.addObserver(e);
  }), qe(() => {
    i(t.value), s(t.value);
  }), Zl(() => {
    i(t.value), s(t.value);
  }), Vu(() => {
    t.value.removeObserver(e);
  });
  const t = $(() => {
    const r = n.layout;
    if (!r)
      throw new Error("Can not find table layout.");
    return r;
  }), i = (r) => {
    var o;
    const l = ((o = n.vnode.el) == null ? void 0 : o.querySelectorAll("colgroup > col")) || [];
    if (!l.length)
      return;
    const a = r.getFlattenColumns(), c = {};
    a.forEach((u) => {
      c[u.id] = u;
    });
    for (let u = 0, h = l.length; u < h; u++) {
      const d = l[u], f = d.getAttribute("name"), p = c[f];
      p && d.setAttribute("width", p.realWidth || p.width);
    }
  }, s = (r) => {
    var o, l;
    const a = ((o = n.vnode.el) == null ? void 0 : o.querySelectorAll("colgroup > col[name=gutter]")) || [];
    for (let u = 0, h = a.length; u < h; u++)
      a[u].setAttribute("width", r.scrollY.value ? r.gutterWidth : "0");
    const c = ((l = n.vnode.el) == null ? void 0 : l.querySelectorAll("th.gutter")) || [];
    for (let u = 0, h = c.length; u < h; u++) {
      const d = c[u];
      d.style.width = r.scrollY.value ? `${r.gutterWidth}px` : "0", d.style.display = r.scrollY.value ? "" : "none";
    }
  };
  return {
    tableLayout: t.value,
    onColumnsChange: i,
    onScrollableChange: s
  };
}
const vo = Symbol("ElTable");
function fG(n, e) {
  const t = Xe(), i = ke(vo), s = (g) => {
    g.stopPropagation();
  }, r = (g, m) => {
    !m.filters && m.sortable ? p(g, m, !1) : m.filterable && !m.sortable && s(g), i == null || i.emit("header-click", m, g);
  }, o = (g, m) => {
    i == null || i.emit("header-contextmenu", m, g);
  }, l = D(null), a = D(!1), c = D({}), u = (g, m) => {
    if (vt && !(m.children && m.children.length > 0) && l.value && n.border) {
      a.value = !0;
      const v = i;
      e("set-drag-visible", !0);
      const b = (v == null ? void 0 : v.vnode.el).getBoundingClientRect().left, w = t.vnode.el.querySelector(`th.${m.id}`), x = w.getBoundingClientRect(), S = x.left - b + 30;
      ru(w, "noclick"), c.value = {
        startMouseLeft: g.clientX,
        startLeft: x.right - b,
        startColumnLeft: x.left - b,
        tableLeft: b
      };
      const C = v == null ? void 0 : v.refs.resizeProxy;
      C.style.left = `${c.value.startLeft}px`, document.onselectstart = function() {
        return !1;
      }, document.ondragstart = function() {
        return !1;
      };
      const k = (M) => {
        const _ = M.clientX - c.value.startMouseLeft, T = c.value.startLeft + _;
        C.style.left = `${Math.max(S, T)}px`;
      }, E = () => {
        if (a.value) {
          const { startColumnLeft: M, startLeft: _ } = c.value, B = Number.parseInt(C.style.left, 10) - M;
          m.width = m.realWidth = B, v == null || v.emit("header-dragend", m.width, _ - M, m, g), requestAnimationFrame(() => {
            n.store.scheduleLayout(!1, !0);
          }), document.body.style.cursor = "", a.value = !1, l.value = null, c.value = {}, e("set-drag-visible", !1);
        }
        document.removeEventListener("mousemove", k), document.removeEventListener("mouseup", E), document.onselectstart = null, document.ondragstart = null, setTimeout(() => {
          Mo(w, "noclick");
        }, 0);
      };
      document.addEventListener("mousemove", k), document.addEventListener("mouseup", E);
    }
  }, h = (g, m) => {
    if (m.children && m.children.length > 0)
      return;
    const v = g.target;
    if (!yr(v))
      return;
    const O = v == null ? void 0 : v.closest("th");
    if (!(!m || !m.resizable) && !a.value && n.border) {
      const b = O.getBoundingClientRect(), w = document.body.style;
      b.width > 12 && b.right - g.pageX < 8 ? (w.cursor = "col-resize", Lc(O, "is-sortable") && (O.style.cursor = "col-resize"), l.value = m) : a.value || (w.cursor = "", Lc(O, "is-sortable") && (O.style.cursor = "pointer"), l.value = null);
    }
  }, d = () => {
    vt && (document.body.style.cursor = "");
  }, f = ({ order: g, sortOrders: m }) => {
    if (g === "")
      return m[0];
    const v = m.indexOf(g || null);
    return m[v > m.length - 2 ? 0 : v + 1];
  }, p = (g, m, v) => {
    var O;
    g.stopPropagation();
    const b = m.order === v ? null : v || f(m), w = (O = g.target) == null ? void 0 : O.closest("th");
    if (w && Lc(w, "noclick")) {
      Mo(w, "noclick");
      return;
    }
    if (!m.sortable)
      return;
    const x = n.store.states;
    let S = x.sortProp.value, C;
    const k = x.sortingColumn.value;
    (k !== m || k === m && k.order === null) && (k && (k.order = null), x.sortingColumn.value = m, S = m.property), b ? C = m.order = b : C = m.order = null, x.sortProp.value = S, x.sortOrder.value = C, i == null || i.store.commit("changeSortCondition");
  };
  return {
    handleHeaderClick: r,
    handleHeaderContextMenu: o,
    handleMouseDown: u,
    handleMouseMove: h,
    handleMouseOut: d,
    handleSortClick: p,
    handleFilterClick: s
  };
}
function pG(n) {
  const e = ke(vo), t = me("table");
  return {
    getHeaderRowStyle: (l) => {
      const a = e == null ? void 0 : e.props.headerRowStyle;
      return typeof a == "function" ? a.call(null, { rowIndex: l }) : a;
    },
    getHeaderRowClass: (l) => {
      const a = [], c = e == null ? void 0 : e.props.headerRowClassName;
      return typeof c == "string" ? a.push(c) : typeof c == "function" && a.push(c.call(null, { rowIndex: l })), a.join(" ");
    },
    getHeaderCellStyle: (l, a, c, u) => {
      var h;
      let d = (h = e == null ? void 0 : e.props.headerCellStyle) != null ? h : {};
      typeof d == "function" && (d = d.call(null, {
        rowIndex: l,
        columnIndex: a,
        row: c,
        column: u
      }));
      const f = J1(a, u.fixed, n.store, c);
      return fu(f, "left"), fu(f, "right"), Object.assign({}, d, f);
    },
    getHeaderCellClass: (l, a, c, u) => {
      const h = K1(t.b(), a, u.fixed, n.store, c), d = [
        u.id,
        u.order,
        u.headerAlign,
        u.className,
        u.labelClassName,
        ...h
      ];
      u.children || d.push("is-leaf"), u.sortable && d.push("is-sortable");
      const f = e == null ? void 0 : e.props.headerCellClassName;
      return typeof f == "string" ? d.push(f) : typeof f == "function" && d.push(f.call(null, {
        rowIndex: l,
        columnIndex: a,
        row: c,
        column: u
      })), d.push(t.e("cell")), d.filter((p) => !!p).join(" ");
    }
  };
}
const c_ = (n) => {
  const e = [];
  return n.forEach((t) => {
    t.children ? (e.push(t), e.push.apply(e, c_(t.children))) : e.push(t);
  }), e;
}, gG = (n) => {
  let e = 1;
  const t = (r, o) => {
    if (o && (r.level = o.level + 1, e < r.level && (e = r.level)), r.children) {
      let l = 0;
      r.children.forEach((a) => {
        t(a, r), l += a.colSpan;
      }), r.colSpan = l;
    } else
      r.colSpan = 1;
  };
  n.forEach((r) => {
    r.level = 1, t(r, void 0);
  });
  const i = [];
  for (let r = 0; r < e; r++)
    i.push([]);
  return c_(n).forEach((r) => {
    r.children ? (r.rowSpan = 1, r.children.forEach((o) => o.isSubColumn = !0)) : r.rowSpan = e - r.level + 1, i[r.level - 1].push(r);
  }), i;
};
function mG(n) {
  const e = ke(vo), t = $(() => gG(n.store.states.originColumns.value));
  return {
    isGroup: $(() => {
      const r = t.value.length > 1;
      return r && e && (e.state.isGroup.value = !0), r;
    }),
    toggleAllSelection: (r) => {
      r.stopPropagation(), e == null || e.store.commit("toggleAllSelection");
    },
    columnRows: t
  };
}
var vG = F({
  name: "ElTableHeader",
  components: {
    ElCheckbox: uo
  },
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: !0,
      type: Object
    },
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => ({
        prop: "",
        order: ""
      })
    }
  },
  setup(n, { emit: e }) {
    const t = Xe(), i = ke(vo), s = me("table"), r = D({}), { onColumnsChange: o, onScrollableChange: l } = a_(i);
    qe(async () => {
      await $e(), await $e();
      const { prop: S, order: C } = n.defaultSort;
      i == null || i.store.commit("sort", { prop: S, order: C, init: !0 });
    });
    const {
      handleHeaderClick: a,
      handleHeaderContextMenu: c,
      handleMouseDown: u,
      handleMouseMove: h,
      handleMouseOut: d,
      handleSortClick: f,
      handleFilterClick: p
    } = fG(n, e), {
      getHeaderRowStyle: g,
      getHeaderRowClass: m,
      getHeaderCellStyle: v,
      getHeaderCellClass: O
    } = pG(n), { isGroup: b, toggleAllSelection: w, columnRows: x } = mG(n);
    return t.state = {
      onColumnsChange: o,
      onScrollableChange: l
    }, t.filterPanels = r, {
      ns: s,
      filterPanels: r,
      onColumnsChange: o,
      onScrollableChange: l,
      columnRows: x,
      getHeaderRowClass: m,
      getHeaderRowStyle: g,
      getHeaderCellClass: O,
      getHeaderCellStyle: v,
      handleHeaderClick: a,
      handleHeaderContextMenu: c,
      handleMouseDown: u,
      handleMouseMove: h,
      handleMouseOut: d,
      handleSortClick: f,
      handleFilterClick: p,
      isGroup: b,
      toggleAllSelection: w
    };
  },
  render() {
    const {
      ns: n,
      isGroup: e,
      columnRows: t,
      getHeaderCellStyle: i,
      getHeaderCellClass: s,
      getHeaderRowClass: r,
      getHeaderRowStyle: o,
      handleHeaderClick: l,
      handleHeaderContextMenu: a,
      handleMouseDown: c,
      handleMouseMove: u,
      handleSortClick: h,
      handleMouseOut: d,
      store: f,
      $parent: p
    } = this;
    let g = 1;
    return Re("thead", {
      class: { [n.is("group")]: e }
    }, t.map((m, v) => Re("tr", {
      class: r(v),
      key: v,
      style: o(v)
    }, m.map((O, b) => (O.rowSpan > g && (g = O.rowSpan), Re("th", {
      class: s(v, b, m, O),
      colspan: O.colSpan,
      key: `${O.id}-thead`,
      rowspan: O.rowSpan,
      style: i(v, b, m, O),
      onClick: (w) => l(w, O),
      onContextmenu: (w) => a(w, O),
      onMousedown: (w) => c(w, O),
      onMousemove: (w) => u(w, O),
      onMouseout: d
    }, [
      Re("div", {
        class: [
          "cell",
          O.filteredValue && O.filteredValue.length > 0 ? "highlight" : ""
        ]
      }, [
        O.renderHeader ? O.renderHeader({
          column: O,
          $index: b,
          store: f,
          _self: p
        }) : O.label,
        O.sortable && Re("span", {
          onClick: (w) => h(w, O),
          class: "caret-wrapper"
        }, [
          Re("i", {
            onClick: (w) => h(w, O, "ascending"),
            class: "sort-caret ascending"
          }),
          Re("i", {
            onClick: (w) => h(w, O, "descending"),
            class: "sort-caret descending"
          })
        ]),
        O.filterable && Re(dG, {
          store: f,
          placement: O.filterPlacement || "bottom-start",
          column: O,
          upDataColumn: (w, x) => {
            O[w] = x;
          }
        })
      ])
    ]))))));
  }
});
function bG(n) {
  const e = ke(vo), t = D(""), i = D(Re("div")), s = (p, g, m) => {
    var v;
    const O = e, b = yv(p);
    let w;
    const x = (v = O == null ? void 0 : O.vnode.el) == null ? void 0 : v.dataset.prefix;
    b && (w = _C({
      columns: n.store.states.columns.value
    }, b, x), w && (O == null || O.emit(`cell-${m}`, g, w, b, p))), O == null || O.emit(`row-${m}`, g, w, p);
  }, r = (p, g) => {
    s(p, g, "dblclick");
  }, o = (p, g) => {
    n.store.commit("setCurrentRow", g), s(p, g, "click");
  }, l = (p, g) => {
    s(p, g, "contextmenu");
  }, a = Do((p) => {
    n.store.commit("setHoverRow", p);
  }, 30), c = Do(() => {
    n.store.commit("setHoverRow", null);
  }, 30), u = (p) => {
    const g = window.getComputedStyle(p, null), m = Number.parseInt(g.paddingLeft, 10) || 0, v = Number.parseInt(g.paddingRight, 10) || 0, O = Number.parseInt(g.paddingTop, 10) || 0, b = Number.parseInt(g.paddingBottom, 10) || 0;
    return {
      left: m,
      right: v,
      top: O,
      bottom: b
    };
  }, h = (p, g, m) => {
    let v = g.target.parentNode;
    for (; p > 1 && (v = v == null ? void 0 : v.nextSibling, !(!v || v.nodeName !== "TR")); )
      m(v, "hover-row hover-fixed-row"), p--;
  };
  return {
    handleDoubleClick: r,
    handleClick: o,
    handleContextMenu: l,
    handleMouseEnter: a,
    handleMouseLeave: c,
    handleCellMouseEnter: (p, g, m) => {
      var v;
      const O = e, b = yv(p), w = (v = O == null ? void 0 : O.vnode.el) == null ? void 0 : v.dataset.prefix;
      if (b) {
        const N = _C({
          columns: n.store.states.columns.value
        }, b, w);
        b.rowSpan > 1 && h(b.rowSpan, p, ru);
        const q = O.hoverState = { cell: b, column: N, row: g };
        O == null || O.emit("cell-mouse-enter", q.row, q.column, q.cell, p);
      }
      if (!m)
        return;
      const x = p.target.querySelector(".cell");
      if (!(Lc(x, `${w}-tooltip`) && x.childNodes.length))
        return;
      const S = document.createRange();
      S.setStart(x, 0), S.setEnd(x, x.childNodes.length);
      let C = S.getBoundingClientRect().width, k = S.getBoundingClientRect().height;
      C - Math.floor(C) < 1e-3 && (C = Math.floor(C)), k - Math.floor(k) < 1e-3 && (k = Math.floor(k));
      const { top: _, left: T, right: B, bottom: I } = u(x), P = T + B, A = _ + I;
      (C + P > x.offsetWidth || k + A > x.offsetHeight || x.scrollWidth > x.offsetWidth) && UU(m, b.innerText || b.textContent, b, O);
    },
    handleCellMouseLeave: (p) => {
      const g = yv(p);
      if (!g)
        return;
      g.rowSpan > 1 && h(g.rowSpan, p, Mo);
      const m = e == null ? void 0 : e.hoverState;
      e == null || e.emit("cell-mouse-leave", m == null ? void 0 : m.row, m == null ? void 0 : m.column, m == null ? void 0 : m.cell, p);
    },
    tooltipContent: t,
    tooltipTrigger: i
  };
}
function yG(n) {
  const e = ke(vo), t = me("table");
  return {
    getRowStyle: (c, u) => {
      const h = e == null ? void 0 : e.props.rowStyle;
      return typeof h == "function" ? h.call(null, {
        row: c,
        rowIndex: u
      }) : h || null;
    },
    getRowClass: (c, u) => {
      const h = [t.e("row")];
      e != null && e.props.highlightCurrentRow && c === n.store.states.currentRow.value && h.push("current-row"), n.stripe && u % 2 === 1 && h.push(t.em("row", "striped"));
      const d = e == null ? void 0 : e.props.rowClassName;
      return typeof d == "string" ? h.push(d) : typeof d == "function" && h.push(d.call(null, {
        row: c,
        rowIndex: u
      })), h;
    },
    getCellStyle: (c, u, h, d) => {
      const f = e == null ? void 0 : e.props.cellStyle;
      let p = f ?? {};
      typeof f == "function" && (p = f.call(null, {
        rowIndex: c,
        columnIndex: u,
        row: h,
        column: d
      }));
      const g = J1(u, n == null ? void 0 : n.fixed, n.store);
      return fu(g, "left"), fu(g, "right"), Object.assign({}, p, g);
    },
    getCellClass: (c, u, h, d, f) => {
      const p = K1(t.b(), u, n == null ? void 0 : n.fixed, n.store, void 0, f), g = [d.id, d.align, d.className, ...p], m = e == null ? void 0 : e.props.cellClassName;
      return typeof m == "string" ? g.push(m) : typeof m == "function" && g.push(m.call(null, {
        rowIndex: c,
        columnIndex: u,
        row: h,
        column: d
      })), g.push(t.e("cell")), g.filter((v) => !!v).join(" ");
    },
    getSpan: (c, u, h, d) => {
      let f = 1, p = 1;
      const g = e == null ? void 0 : e.props.spanMethod;
      if (typeof g == "function") {
        const m = g({
          row: c,
          column: u,
          rowIndex: h,
          columnIndex: d
        });
        Array.isArray(m) ? (f = m[0], p = m[1]) : typeof m == "object" && (f = m.rowspan, p = m.colspan);
      }
      return { rowspan: f, colspan: p };
    },
    getColspanRealWidth: (c, u, h) => {
      if (u < 1)
        return c[h].realWidth;
      const d = c.map(({ realWidth: f, width: p }) => f || p).slice(h, h + u);
      return Number(d.reduce((f, p) => Number(f) + Number(p), -1));
    }
  };
}
function OG(n) {
  const e = ke(vo), t = me("table"), {
    handleDoubleClick: i,
    handleClick: s,
    handleContextMenu: r,
    handleMouseEnter: o,
    handleMouseLeave: l,
    handleCellMouseEnter: a,
    handleCellMouseLeave: c,
    tooltipContent: u,
    tooltipTrigger: h
  } = bG(n), {
    getRowStyle: d,
    getRowClass: f,
    getCellStyle: p,
    getCellClass: g,
    getSpan: m,
    getColspanRealWidth: v
  } = yG(n), O = $(() => n.store.states.columns.value.findIndex(({ type: C }) => C === "default")), b = (C, k) => {
    const E = e.props.rowKey;
    return E ? Oi(C, E) : k;
  }, w = (C, k, E, M = !1) => {
    const { tooltipEffect: _, tooltipOptions: T, store: B } = n, { indent: I, columns: P } = B.states, A = f(C, k);
    let N = !0;
    return E && (A.push(t.em("row", `level-${E.level}`)), N = E.display), Re("tr", {
      style: [N ? null : {
        display: "none"
      }, d(C, k)],
      class: A,
      key: b(C, k),
      onDblclick: (j) => i(j, C),
      onClick: (j) => s(j, C),
      onContextmenu: (j) => r(j, C),
      onMouseenter: () => o(k),
      onMouseleave: l
    }, P.value.map((j, H) => {
      const { rowspan: oe, colspan: te } = m(C, j, k, H);
      if (!oe || !te)
        return null;
      const W = Object.assign({}, j);
      W.realWidth = v(P.value, te, H);
      const U = {
        store: n.store,
        _self: n.context || e,
        column: W,
        row: C,
        $index: k,
        cellIndex: H,
        expanded: M
      };
      H === O.value && E && (U.treeNode = {
        indent: E.level * I.value,
        level: E.level
      }, typeof E.expanded == "boolean" && (U.treeNode.expanded = E.expanded, "loading" in E && (U.treeNode.loading = E.loading), "noLazyChildren" in E && (U.treeNode.noLazyChildren = E.noLazyChildren)));
      const le = `${k},${H}`, he = W.columnKey || W.rawColumnKey || "", ee = x(H, j, U), pe = j.showOverflowTooltip && On({
        effect: _
      }, T, j.showOverflowTooltip);
      return Re("td", {
        style: p(k, H, C, j),
        class: g(k, H, C, j, te - 1),
        key: `${he}${le}`,
        rowspan: oe,
        colspan: te,
        onMouseenter: (be) => a(be, C, pe),
        onMouseleave: c
      }, [ee]);
    }));
  }, x = (C, k, E) => k.renderCell(E);
  return {
    wrappedRowRender: (C, k) => {
      const E = n.store, { isRowExpanded: M, assertRowKey: _ } = E, { treeData: T, lazyTreeNodeMap: B, childrenColumnName: I, rowKey: P } = E.states, A = E.states.columns.value;
      if (A.some(({ type: q }) => q === "expand")) {
        const q = M(C), j = w(C, k, void 0, q), H = e.renderExpanded;
        return q ? H ? [
          [
            j,
            Re("tr", {
              key: `expanded-row__${j.key}`
            }, [
              Re("td", {
                colspan: A.length,
                class: `${t.e("cell")} ${t.e("expanded-cell")}`
              }, [H({ row: C, $index: k, store: E, expanded: q })])
            ])
          ]
        ] : (console.error("[Element Error]renderExpanded is required."), j) : [[j]];
      } else if (Object.keys(T.value).length) {
        _();
        const q = Oi(C, P.value);
        let j = T.value[q], H = null;
        j && (H = {
          expanded: j.expanded,
          level: j.level,
          display: !0
        }, typeof j.lazy == "boolean" && (typeof j.loaded == "boolean" && j.loaded && (H.noLazyChildren = !(j.children && j.children.length)), H.loading = j.loading));
        const oe = [w(C, k, H)];
        if (j) {
          let te = 0;
          const W = (le, he) => {
            le && le.length && he && le.forEach((ee) => {
              const pe = {
                display: he.display && he.expanded,
                level: he.level + 1,
                expanded: !1,
                noLazyChildren: !1,
                loading: !1
              }, be = Oi(ee, P.value);
              if (be == null)
                throw new Error("For nested data item, row-key is required.");
              if (j = { ...T.value[be] }, j && (pe.expanded = j.expanded, j.level = j.level || pe.level, j.display = !!(j.expanded && pe.display), typeof j.lazy == "boolean" && (typeof j.loaded == "boolean" && j.loaded && (pe.noLazyChildren = !(j.children && j.children.length)), pe.loading = j.loading)), te++, oe.push(w(ee, k + te, pe)), j) {
                const fe = B.value[be] || ee[I.value];
                W(fe, j);
              }
            });
          };
          j.display = !0;
          const U = B.value[q] || C[I.value];
          W(U, j);
        }
        return oe;
      } else
        return w(C, k, void 0);
    },
    tooltipContent: u,
    tooltipTrigger: h
  };
}
const wG = {
  store: {
    required: !0,
    type: Object
  },
  stripe: Boolean,
  tooltipEffect: String,
  tooltipOptions: {
    type: Object
  },
  context: {
    default: () => ({}),
    type: Object
  },
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  fixed: {
    type: String,
    default: ""
  },
  highlight: Boolean
};
var xG = F({
  name: "ElTableBody",
  props: wG,
  setup(n) {
    const e = Xe(), t = ke(vo), i = me("table"), { wrappedRowRender: s, tooltipContent: r, tooltipTrigger: o } = OG(n), { onColumnsChange: l, onScrollableChange: a } = a_(t), c = [];
    return ne(n.store.states.hoverRow, (u, h) => {
      var d;
      const f = e == null ? void 0 : e.vnode.el, p = Array.from((f == null ? void 0 : f.children) || []).filter((v) => v == null ? void 0 : v.classList.contains(`${i.e("row")}`));
      let g = u;
      const m = (d = p[g]) == null ? void 0 : d.childNodes;
      m != null && m.length ? Array.from(m).reduce((O, b, w) => {
        var x, S;
        const C = ((x = m[w - 1]) == null ? void 0 : x.colSpan) > 1, k = ((S = m[w + 1]) == null ? void 0 : S.colSpan) > 1;
        return b.nodeName !== "TD" && !C && !k && O.push(w), O;
      }, []).forEach((O) => {
        for (var b; g > 0; ) {
          const w = (b = p[g - 1]) == null ? void 0 : b.childNodes;
          if (w[O] && w[O].nodeName === "TD") {
            ru(w[O], "hover-cell"), c.push(w[O]);
            break;
          }
          g--;
        }
      }) : (c.forEach((v) => Mo(v, "hover-cell")), c.length = 0), !(!n.store.states.isComplex.value || !vt) && P1(() => {
        const v = p[h], O = p[u];
        v && !v.classList.contains("hover-fixed-row") && Mo(v, "hover-row"), O && ru(O, "hover-row");
      });
    }), Vu(() => {
      var u;
      (u = Ns) == null || u();
    }), {
      ns: i,
      onColumnsChange: l,
      onScrollableChange: a,
      wrappedRowRender: s,
      tooltipContent: r,
      tooltipTrigger: o
    };
  },
  render() {
    const { wrappedRowRender: n, store: e } = this, t = e.states.data.value || [];
    return Re("tbody", { tabIndex: -1 }, [
      t.reduce((i, s) => i.concat(n(s, i.length)), [])
    ]);
  }
});
function SG() {
  const n = ke(vo), e = n == null ? void 0 : n.store, t = $(() => e.states.fixedLeafColumnsLength.value), i = $(() => e.states.rightFixedColumns.value.length), s = $(() => e.states.columns.value.length), r = $(() => e.states.fixedColumns.value.length), o = $(() => e.states.rightFixedColumns.value.length);
  return {
    leftFixedLeafCount: t,
    rightFixedLeafCount: i,
    columnsCount: s,
    leftFixedCount: r,
    rightFixedCount: o,
    columns: e.states.columns
  };
}
function CG(n) {
  const { columns: e } = SG(), t = me("table");
  return {
    getCellClasses: (r, o) => {
      const l = r[o], a = [
        t.e("cell"),
        l.id,
        l.align,
        l.labelClassName,
        ...K1(t.b(), o, l.fixed, n.store)
      ];
      return l.className && a.push(l.className), l.children || a.push(t.is("leaf")), a;
    },
    getCellStyles: (r, o) => {
      const l = J1(o, r.fixed, n.store);
      return fu(l, "left"), fu(l, "right"), l;
    },
    columns: e
  };
}
var kG = F({
  name: "ElTableFooter",
  props: {
    fixed: {
      type: String,
      default: ""
    },
    store: {
      required: !0,
      type: Object
    },
    summaryMethod: Function,
    sumText: String,
    border: Boolean,
    defaultSort: {
      type: Object,
      default: () => ({
        prop: "",
        order: ""
      })
    }
  },
  setup(n) {
    const { getCellClasses: e, getCellStyles: t, columns: i } = CG(n);
    return {
      ns: me("table"),
      getCellClasses: e,
      getCellStyles: t,
      columns: i
    };
  },
  render() {
    const { columns: n, getCellStyles: e, getCellClasses: t, summaryMethod: i, sumText: s } = this, r = this.store.states.data.value;
    let o = [];
    return i ? o = i({
      columns: n,
      data: r
    }) : n.forEach((l, a) => {
      if (a === 0) {
        o[a] = s;
        return;
      }
      const c = r.map((f) => Number(f[l.property])), u = [];
      let h = !0;
      c.forEach((f) => {
        if (!Number.isNaN(+f)) {
          h = !1;
          const p = `${f}`.split(".")[1];
          u.push(p ? p.length : 0);
        }
      });
      const d = Math.max.apply(null, u);
      h ? o[a] = "" : o[a] = c.reduce((f, p) => {
        const g = Number(p);
        return Number.isNaN(+g) ? f : Number.parseFloat((f + p).toFixed(Math.min(d, 20)));
      }, 0);
    }), Re(Re("tfoot", [
      Re("tr", {}, [
        ...n.map((l, a) => Re("td", {
          key: a,
          colspan: l.colSpan,
          rowspan: l.rowSpan,
          class: t(n, a),
          style: e(l, a)
        }, [
          Re("div", {
            class: ["cell", l.labelClassName]
          }, [o[a]])
        ]))
      ])
    ]));
  }
});
function PG(n) {
  return {
    setCurrentRow: (u) => {
      n.commit("setCurrentRow", u);
    },
    getSelectionRows: () => n.getSelectionRows(),
    toggleRowSelection: (u, h) => {
      n.toggleRowSelection(u, h, !1), n.updateAllSelected();
    },
    clearSelection: () => {
      n.clearSelection();
    },
    clearFilter: (u) => {
      n.clearFilter(u);
    },
    toggleAllSelection: () => {
      n.commit("toggleAllSelection");
    },
    toggleRowExpansion: (u, h) => {
      n.toggleRowExpansionAdapter(u, h);
    },
    clearSort: () => {
      n.clearSort();
    },
    sort: (u, h) => {
      n.commit("sort", { prop: u, order: h });
    }
  };
}
function EG(n, e, t, i) {
  const s = D(!1), r = D(null), o = D(!1), l = (j) => {
    o.value = j;
  }, a = D({
    width: null,
    height: null,
    headerHeight: null
  }), c = D(!1), u = {
    display: "inline-block",
    verticalAlign: "middle"
  }, h = D(), d = D(0), f = D(0), p = D(0), g = D(0), m = D(0);
  Vs(() => {
    e.setHeight(n.height);
  }), Vs(() => {
    e.setMaxHeight(n.maxHeight);
  }), ne(() => [n.currentRowKey, t.states.rowKey], ([j, H]) => {
    !y(H) || !y(j) || t.setCurrentRowKey(`${j}`);
  }, {
    immediate: !0
  }), ne(() => n.data, (j) => {
    i.store.commit("setData", j);
  }, {
    immediate: !0,
    deep: !0
  }), Vs(() => {
    n.expandRowKeys && t.setExpandRowKeysAdapter(n.expandRowKeys);
  });
  const v = () => {
    i.store.commit("setHoverRow", null), i.hoverState && (i.hoverState = null);
  }, O = (j, H) => {
    const { pixelX: oe, pixelY: te } = H;
    Math.abs(oe) >= Math.abs(te) && (i.refs.bodyWrapper.scrollLeft += H.pixelX / 5);
  }, b = $(() => n.height || n.maxHeight || t.states.fixedColumns.value.length > 0 || t.states.rightFixedColumns.value.length > 0), w = $(() => ({
    width: e.bodyWidth.value ? `${e.bodyWidth.value}px` : ""
  })), x = () => {
    b.value && e.updateElsHeight(), e.updateColumnsWidth(), requestAnimationFrame(E);
  };
  qe(async () => {
    await $e(), t.updateColumns(), M(), requestAnimationFrame(x);
    const j = i.vnode.el, H = i.refs.headerWrapper;
    n.flexible && j && j.parentElement && (j.parentElement.style.minWidth = "0"), a.value = {
      width: h.value = j.offsetWidth,
      height: j.offsetHeight,
      headerHeight: n.showHeader && H ? H.offsetHeight : null
    }, t.states.columns.value.forEach((oe) => {
      oe.filteredValue && oe.filteredValue.length && i.store.commit("filterChange", {
        column: oe,
        values: oe.filteredValue,
        silent: !0
      });
    }), i.$ready = !0;
  });
  const S = (j, H) => {
    if (!j)
      return;
    const oe = Array.from(j.classList).filter((te) => !te.startsWith("is-scrolling-"));
    oe.push(e.scrollX.value ? H : "is-scrolling-none"), j.className = oe.join(" ");
  }, C = (j) => {
    const { tableWrapper: H } = i.refs;
    S(H, j);
  }, k = (j) => {
    const { tableWrapper: H } = i.refs;
    return !!(H && H.classList.contains(j));
  }, E = function() {
    if (!i.refs.scrollBarRef)
      return;
    if (!e.scrollX.value) {
      const he = "is-scrolling-none";
      k(he) || C(he);
      return;
    }
    const j = i.refs.scrollBarRef.wrapRef;
    if (!j)
      return;
    const { scrollLeft: H, offsetWidth: oe, scrollWidth: te } = j, { headerWrapper: W, footerWrapper: U } = i.refs;
    W && (W.scrollLeft = H), U && (U.scrollLeft = H);
    const le = te - oe - 1;
    H >= le ? C("is-scrolling-right") : C(H === 0 ? "is-scrolling-left" : "is-scrolling-middle");
  }, M = () => {
    i.refs.scrollBarRef && (i.refs.scrollBarRef.wrapRef && Zi(i.refs.scrollBarRef.wrapRef, "scroll", E, {
      passive: !0
    }), n.fit ? pn(i.vnode.el, _) : Zi(window, "resize", _), pn(i.refs.bodyWrapper, () => {
      var j, H;
      _(), (H = (j = i.refs) == null ? void 0 : j.scrollBarRef) == null || H.update();
    }));
  }, _ = () => {
    var j, H, oe, te;
    const W = i.vnode.el;
    if (!i.$ready || !W)
      return;
    let U = !1;
    const {
      width: le,
      height: he,
      headerHeight: ee
    } = a.value, pe = h.value = W.offsetWidth;
    le !== pe && (U = !0);
    const be = W.offsetHeight;
    (n.height || b.value) && he !== be && (U = !0);
    const fe = n.tableLayout === "fixed" ? i.refs.headerWrapper : (j = i.refs.tableHeaderRef) == null ? void 0 : j.$el;
    n.showHeader && (fe == null ? void 0 : fe.offsetHeight) !== ee && (U = !0), d.value = ((H = i.refs.tableWrapper) == null ? void 0 : H.scrollHeight) || 0, p.value = (fe == null ? void 0 : fe.scrollHeight) || 0, g.value = ((oe = i.refs.footerWrapper) == null ? void 0 : oe.offsetHeight) || 0, m.value = ((te = i.refs.appendWrapper) == null ? void 0 : te.offsetHeight) || 0, f.value = d.value - p.value - g.value - m.value, U && (a.value = {
      width: pe,
      height: be,
      headerHeight: n.showHeader && (fe == null ? void 0 : fe.offsetHeight) || 0
    }, x());
  }, T = Xi(), B = $(() => {
    const { bodyWidth: j, scrollY: H, gutterWidth: oe } = e;
    return j.value ? `${j.value - (H.value ? oe : 0)}px` : "";
  }), I = $(() => n.maxHeight ? "fixed" : n.tableLayout), P = $(() => {
    if (n.data && n.data.length)
      return null;
    let j = "100%";
    n.height && f.value && (j = `${f.value}px`);
    const H = h.value;
    return {
      width: H ? `${H}px` : "",
      height: j
    };
  }), A = $(() => n.height ? {
    height: Number.isNaN(Number(n.height)) ? n.height : `${n.height}px`
  } : n.maxHeight ? {
    maxHeight: Number.isNaN(Number(n.maxHeight)) ? n.maxHeight : `${n.maxHeight}px`
  } : {}), N = $(() => n.height ? {
    height: "100%"
  } : n.maxHeight ? Number.isNaN(Number(n.maxHeight)) ? {
    maxHeight: `calc(${n.maxHeight} - ${p.value + g.value}px)`
  } : {
    maxHeight: `${n.maxHeight - p.value - g.value}px`
  } : {});
  return {
    isHidden: s,
    renderExpanded: r,
    setDragVisible: l,
    isGroup: c,
    handleMouseLeave: v,
    handleHeaderFooterMousewheel: O,
    tableSize: T,
    emptyBlockStyle: P,
    handleFixedMousewheel: (j, H) => {
      const oe = i.refs.bodyWrapper;
      if (Math.abs(H.spinY) > 0) {
        const te = oe.scrollTop;
        H.pixelY < 0 && te !== 0 && j.preventDefault(), H.pixelY > 0 && oe.scrollHeight - oe.clientHeight > te && j.preventDefault(), oe.scrollTop += Math.ceil(H.pixelY / 5);
      } else
        oe.scrollLeft += Math.ceil(H.pixelX / 5);
    },
    resizeProxyVisible: o,
    bodyWidth: B,
    resizeState: a,
    doLayout: x,
    tableBodyStyles: w,
    tableLayout: I,
    scrollbarViewStyle: u,
    tableInnerStyle: A,
    scrollbarStyle: N
  };
}
function AG(n) {
  const e = D(), t = () => {
    const s = n.vnode.el.querySelector(".hidden-columns"), r = { childList: !0, subtree: !0 }, o = n.store.states.updateOrderFns;
    e.value = new MutationObserver(() => {
      o.forEach((l) => l());
    }), e.value.observe(s, r);
  };
  qe(() => {
    t();
  }), Vu(() => {
    var i;
    (i = e.value) == null || i.disconnect();
  });
}
var $G = {
  data: {
    type: Array,
    default: () => []
  },
  size: Ts,
  width: [String, Number],
  height: [String, Number],
  maxHeight: [String, Number],
  fit: {
    type: Boolean,
    default: !0
  },
  stripe: Boolean,
  border: Boolean,
  rowKey: [String, Function],
  showHeader: {
    type: Boolean,
    default: !0
  },
  showSummary: Boolean,
  sumText: String,
  summaryMethod: Function,
  rowClassName: [String, Function],
  rowStyle: [Object, Function],
  cellClassName: [String, Function],
  cellStyle: [Object, Function],
  headerRowClassName: [String, Function],
  headerRowStyle: [Object, Function],
  headerCellClassName: [String, Function],
  headerCellStyle: [Object, Function],
  highlightCurrentRow: Boolean,
  currentRowKey: [String, Number],
  emptyText: String,
  expandRowKeys: Array,
  defaultExpandAll: Boolean,
  defaultSort: Object,
  tooltipEffect: String,
  tooltipOptions: Object,
  spanMethod: Function,
  selectOnIndeterminate: {
    type: Boolean,
    default: !0
  },
  indent: {
    type: Number,
    default: 16
  },
  treeProps: {
    type: Object,
    default: () => ({
      hasChildren: "hasChildren",
      children: "children"
    })
  },
  lazy: Boolean,
  load: Function,
  style: {
    type: Object,
    default: () => ({})
  },
  className: {
    type: String,
    default: ""
  },
  tableLayout: {
    type: String,
    default: "fixed"
  },
  scrollbarAlwaysOn: {
    type: Boolean,
    default: !1
  },
  flexible: Boolean,
  showOverflowTooltip: [Boolean, Object]
};
function u_(n) {
  const e = n.tableLayout === "auto";
  let t = n.columns || [];
  e && t.every((s) => s.width === void 0) && (t = []);
  const i = (s) => {
    const r = {
      key: `${n.tableLayout}_${s.id}`,
      style: {},
      name: void 0
    };
    return e ? r.style = {
      width: `${s.width}px`
    } : r.name = s.id, r;
  };
  return Re("colgroup", {}, t.map((s) => Re("col", i(s))));
}
u_.props = ["columns", "tableLayout"];
const TG = () => {
  const n = D(), e = (r, o) => {
    const l = n.value;
    l && l.scrollTo(r, o);
  }, t = (r, o) => {
    const l = n.value;
    l && tt(o) && ["Top", "Left"].includes(r) && l[`setScroll${r}`](o);
  };
  return {
    scrollBarRef: n,
    scrollTo: e,
    setScrollTop: (r) => t("Top", r),
    setScrollLeft: (r) => t("Left", r)
  };
};
let _G = 1;
const MG = F({
  name: "ElTable",
  directives: {
    Mousewheel: E9
  },
  components: {
    TableHeader: vG,
    TableBody: xG,
    TableFooter: kG,
    ElScrollbar: wf,
    hColgroup: u_
  },
  props: $G,
  emits: [
    "select",
    "select-all",
    "selection-change",
    "cell-mouse-enter",
    "cell-mouse-leave",
    "cell-contextmenu",
    "cell-click",
    "cell-dblclick",
    "row-click",
    "row-contextmenu",
    "row-dblclick",
    "header-click",
    "header-contextmenu",
    "sort-change",
    "filter-change",
    "current-change",
    "header-dragend",
    "expand-change"
  ],
  setup(n) {
    const { t: e } = mn(), t = me("table"), i = Xe();
    ft(vo, i);
    const s = iG(i, n);
    i.store = s;
    const r = new rG({
      store: i.store,
      table: i,
      fit: n.fit,
      showHeader: n.showHeader
    });
    i.layout = r;
    const o = $(() => (s.states.data.value || []).length === 0), {
      setCurrentRow: l,
      getSelectionRows: a,
      toggleRowSelection: c,
      clearSelection: u,
      clearFilter: h,
      toggleAllSelection: d,
      toggleRowExpansion: f,
      clearSort: p,
      sort: g
    } = PG(s), {
      isHidden: m,
      renderExpanded: v,
      setDragVisible: O,
      isGroup: b,
      handleMouseLeave: w,
      handleHeaderFooterMousewheel: x,
      tableSize: S,
      emptyBlockStyle: C,
      handleFixedMousewheel: k,
      resizeProxyVisible: E,
      bodyWidth: M,
      resizeState: _,
      doLayout: T,
      tableBodyStyles: B,
      tableLayout: I,
      scrollbarViewStyle: P,
      tableInnerStyle: A,
      scrollbarStyle: N
    } = EG(n, r, s, i), { scrollBarRef: q, scrollTo: j, setScrollLeft: H, setScrollTop: oe } = TG(), te = Do(T, 50), W = `${t.namespace.value}-table_${_G++}`;
    i.tableId = W, i.state = {
      isGroup: b,
      resizeState: _,
      doLayout: T,
      debouncedUpdateLayout: te
    };
    const U = $(() => n.sumText || e("el.table.sumText")), le = $(() => n.emptyText || e("el.table.emptyText"));
    return AG(i), {
      ns: t,
      layout: r,
      store: s,
      handleHeaderFooterMousewheel: x,
      handleMouseLeave: w,
      tableId: W,
      tableSize: S,
      isHidden: m,
      isEmpty: o,
      renderExpanded: v,
      resizeProxyVisible: E,
      resizeState: _,
      isGroup: b,
      bodyWidth: M,
      tableBodyStyles: B,
      emptyBlockStyle: C,
      debouncedUpdateLayout: te,
      handleFixedMousewheel: k,
      setCurrentRow: l,
      getSelectionRows: a,
      toggleRowSelection: c,
      clearSelection: u,
      clearFilter: h,
      toggleAllSelection: d,
      toggleRowExpansion: f,
      clearSort: p,
      doLayout: T,
      sort: g,
      t: e,
      setDragVisible: O,
      context: i,
      computedSumText: U,
      computedEmptyText: le,
      tableLayout: I,
      scrollbarViewStyle: P,
      tableInnerStyle: A,
      scrollbarStyle: N,
      scrollBarRef: q,
      scrollTo: j,
      setScrollLeft: H,
      setScrollTop: oe
    };
  }
}), RG = ["data-prefix"], NG = {
  ref: "hiddenColumns",
  class: "hidden-columns"
};
function DG(n, e, t, i, s, r) {
  const o = nt("hColgroup"), l = nt("table-header"), a = nt("table-body"), c = nt("table-footer"), u = nt("el-scrollbar"), h = Vm("mousewheel");
  return R(), V("div", {
    ref: "tableWrapper",
    class: L([
      {
        [n.ns.m("fit")]: n.fit,
        [n.ns.m("striped")]: n.stripe,
        [n.ns.m("border")]: n.border || n.isGroup,
        [n.ns.m("hidden")]: n.isHidden,
        [n.ns.m("group")]: n.isGroup,
        [n.ns.m("fluid-height")]: n.maxHeight,
        [n.ns.m("scrollable-x")]: n.layout.scrollX.value,
        [n.ns.m("scrollable-y")]: n.layout.scrollY.value,
        [n.ns.m("enable-row-hover")]: !n.store.states.isComplex.value,
        [n.ns.m("enable-row-transition")]: (n.store.states.data.value || []).length !== 0 && (n.store.states.data.value || []).length < 100,
        "has-footer": n.showSummary
      },
      n.ns.m(n.tableSize),
      n.className,
      n.ns.b(),
      n.ns.m(`layout-${n.tableLayout}`)
    ]),
    style: Qe(n.style),
    "data-prefix": n.ns.namespace.value,
    onMouseleave: e[0] || (e[0] = (...d) => n.handleMouseLeave && n.handleMouseLeave(...d))
  }, [
    Z("div", {
      class: L(n.ns.e("inner-wrapper")),
      style: Qe(n.tableInnerStyle)
    }, [
      Z("div", NG, [
        de(n.$slots, "default")
      ], 512),
      n.showHeader && n.tableLayout === "fixed" ? it((R(), V("div", {
        key: 0,
        ref: "headerWrapper",
        class: L(n.ns.e("header-wrapper"))
      }, [
        Z("table", {
          ref: "tableHeader",
          class: L(n.ns.e("header")),
          style: Qe(n.tableBodyStyles),
          border: "0",
          cellpadding: "0",
          cellspacing: "0"
        }, [
          K(o, {
            columns: n.store.states.columns.value,
            "table-layout": n.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          K(l, {
            ref: "tableHeaderRef",
            border: n.border,
            "default-sort": n.defaultSort,
            store: n.store,
            onSetDragVisible: n.setDragVisible
          }, null, 8, ["border", "default-sort", "store", "onSetDragVisible"])
        ], 6)
      ], 2)), [
        [h, n.handleHeaderFooterMousewheel]
      ]) : G("v-if", !0),
      Z("div", {
        ref: "bodyWrapper",
        class: L(n.ns.e("body-wrapper"))
      }, [
        K(u, {
          ref: "scrollBarRef",
          "view-style": n.scrollbarViewStyle,
          "wrap-style": n.scrollbarStyle,
          always: n.scrollbarAlwaysOn
        }, {
          default: Y(() => [
            Z("table", {
              ref: "tableBody",
              class: L(n.ns.e("body")),
              cellspacing: "0",
              cellpadding: "0",
              border: "0",
              style: Qe({
                width: n.bodyWidth,
                tableLayout: n.tableLayout
              })
            }, [
              K(o, {
                columns: n.store.states.columns.value,
                "table-layout": n.tableLayout
              }, null, 8, ["columns", "table-layout"]),
              n.showHeader && n.tableLayout === "auto" ? (R(), ie(l, {
                key: 0,
                ref: "tableHeaderRef",
                class: L(n.ns.e("body-header")),
                border: n.border,
                "default-sort": n.defaultSort,
                store: n.store,
                onSetDragVisible: n.setDragVisible
              }, null, 8, ["class", "border", "default-sort", "store", "onSetDragVisible"])) : G("v-if", !0),
              K(a, {
                context: n.context,
                highlight: n.highlightCurrentRow,
                "row-class-name": n.rowClassName,
                "tooltip-effect": n.tooltipEffect,
                "tooltip-options": n.tooltipOptions,
                "row-style": n.rowStyle,
                store: n.store,
                stripe: n.stripe
              }, null, 8, ["context", "highlight", "row-class-name", "tooltip-effect", "tooltip-options", "row-style", "store", "stripe"]),
              n.showSummary && n.tableLayout === "auto" ? (R(), ie(c, {
                key: 1,
                class: L(n.ns.e("body-footer")),
                border: n.border,
                "default-sort": n.defaultSort,
                store: n.store,
                "sum-text": n.computedSumText,
                "summary-method": n.summaryMethod
              }, null, 8, ["class", "border", "default-sort", "store", "sum-text", "summary-method"])) : G("v-if", !0)
            ], 6),
            n.isEmpty ? (R(), V("div", {
              key: 0,
              ref: "emptyBlock",
              style: Qe(n.emptyBlockStyle),
              class: L(n.ns.e("empty-block"))
            }, [
              Z("span", {
                class: L(n.ns.e("empty-text"))
              }, [
                de(n.$slots, "empty", {}, () => [
                  Xn(xe(n.computedEmptyText), 1)
                ])
              ], 2)
            ], 6)) : G("v-if", !0),
            n.$slots.append ? (R(), V("div", {
              key: 1,
              ref: "appendWrapper",
              class: L(n.ns.e("append-wrapper"))
            }, [
              de(n.$slots, "append")
            ], 2)) : G("v-if", !0)
          ]),
          _: 3
        }, 8, ["view-style", "wrap-style", "always"])
      ], 2),
      n.showSummary && n.tableLayout === "fixed" ? it((R(), V("div", {
        key: 1,
        ref: "footerWrapper",
        class: L(n.ns.e("footer-wrapper"))
      }, [
        Z("table", {
          class: L(n.ns.e("footer")),
          cellspacing: "0",
          cellpadding: "0",
          border: "0",
          style: Qe(n.tableBodyStyles)
        }, [
          K(o, {
            columns: n.store.states.columns.value,
            "table-layout": n.tableLayout
          }, null, 8, ["columns", "table-layout"]),
          K(c, {
            border: n.border,
            "default-sort": n.defaultSort,
            store: n.store,
            "sum-text": n.computedSumText,
            "summary-method": n.summaryMethod
          }, null, 8, ["border", "default-sort", "store", "sum-text", "summary-method"])
        ], 6)
      ], 2)), [
        [Qt, !n.isEmpty],
        [h, n.handleHeaderFooterMousewheel]
      ]) : G("v-if", !0),
      n.border || n.isGroup ? (R(), V("div", {
        key: 2,
        class: L(n.ns.e("border-left-patch"))
      }, null, 2)) : G("v-if", !0)
    ], 6),
    it(Z("div", {
      ref: "resizeProxy",
      class: L(n.ns.e("column-resize-proxy"))
    }, null, 2), [
      [Qt, n.resizeProxyVisible]
    ])
  ], 46, RG);
}
var LG = /* @__PURE__ */ Ce(MG, [["render", DG], ["__file", "table.vue"]]);
const IG = {
  selection: "table-column--selection",
  expand: "table__expand-column"
}, BG = {
  default: {
    order: ""
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ""
  }
}, QG = (n) => IG[n] || "", zG = {
  selection: {
    renderHeader({ store: n, column: e }) {
      function t() {
        return n.states.data.value && n.states.data.value.length === 0;
      }
      return Re(uo, {
        disabled: t(),
        size: n.states.tableSize.value,
        indeterminate: n.states.selection.value.length > 0 && !n.states.isAllSelected.value,
        "onUpdate:modelValue": n.toggleAllSelection,
        modelValue: n.states.isAllSelected.value,
        ariaLabel: e.label
      });
    },
    renderCell({
      row: n,
      column: e,
      store: t,
      $index: i
    }) {
      return Re(uo, {
        disabled: e.selectable ? !e.selectable.call(null, n, i) : !1,
        size: t.states.tableSize.value,
        onChange: () => {
          t.commit("rowSelectedChanged", n);
        },
        onClick: (s) => s.stopPropagation(),
        modelValue: t.isSelected(n),
        ariaLabel: e.label
      });
    },
    sortable: !1,
    resizable: !1
  },
  index: {
    renderHeader({ column: n }) {
      return n.label || "#";
    },
    renderCell({
      column: n,
      $index: e
    }) {
      let t = e + 1;
      const i = n.index;
      return typeof i == "number" ? t = e + i : typeof i == "function" && (t = i(e)), Re("div", {}, [t]);
    },
    sortable: !1
  },
  expand: {
    renderHeader({ column: n }) {
      return n.label || "";
    },
    renderCell({
      row: n,
      store: e,
      expanded: t
    }) {
      const { ns: i } = e, s = [i.e("expand-icon")];
      return t && s.push(i.em("expand-icon", "expanded")), Re("div", {
        class: s,
        onClick: function(o) {
          o.stopPropagation(), e.toggleRowExpansion(n);
        }
      }, {
        default: () => [
          Re(Fe, null, {
            default: () => [Re(ec)]
          })
        ]
      });
    },
    sortable: !1,
    resizable: !1
  }
};
function jG({
  row: n,
  column: e,
  $index: t
}) {
  var i;
  const s = e.property, r = s && Zp(n, s).value;
  return e && e.formatter ? e.formatter(n, e, r, t) : ((i = r == null ? void 0 : r.toString) == null ? void 0 : i.call(r)) || "";
}
function VG({
  row: n,
  treeNode: e,
  store: t
}, i = !1) {
  const { ns: s } = t;
  if (!e)
    return i ? [
      Re("span", {
        class: s.e("placeholder")
      })
    ] : null;
  const r = [], o = function(l) {
    l.stopPropagation(), !e.loading && t.loadOrToggle(n);
  };
  if (e.indent && r.push(Re("span", {
    class: s.e("indent"),
    style: { "padding-left": `${e.indent}px` }
  })), typeof e.expanded == "boolean" && !e.noLazyChildren) {
    const l = [
      s.e("expand-icon"),
      e.expanded ? s.em("expand-icon", "expanded") : ""
    ];
    let a = ec;
    e.loading && (a = tc), r.push(Re("div", {
      class: l,
      onClick: o
    }, {
      default: () => [
        Re(Fe, { class: { [s.is("loading")]: e.loading } }, {
          default: () => [Re(a)]
        })
      ]
    }));
  } else
    r.push(Re("span", {
      class: s.e("placeholder")
    }));
  return r;
}
function NC(n, e) {
  return n.reduce((t, i) => (t[i] = i, t), e);
}
function FG(n, e) {
  const t = Xe();
  return {
    registerComplexWatchers: () => {
      const r = ["fixed"], o = {
        realWidth: "width",
        realMinWidth: "minWidth"
      }, l = NC(r, o);
      Object.keys(l).forEach((a) => {
        const c = o[a];
        Hi(e, c) && ne(() => e[c], (u) => {
          let h = u;
          c === "width" && a === "realWidth" && (h = G1(u)), c === "minWidth" && a === "realMinWidth" && (h = i_(u)), t.columnConfig.value[c] = h, t.columnConfig.value[a] = h;
          const d = c === "fixed";
          n.value.store.scheduleLayout(d);
        });
      });
    },
    registerNormalWatchers: () => {
      const r = [
        "label",
        "filters",
        "filterMultiple",
        "filteredValue",
        "sortable",
        "index",
        "formatter",
        "className",
        "labelClassName",
        "filterClassName",
        "showOverflowTooltip"
      ], o = {
        property: "prop",
        align: "realAlign",
        headerAlign: "realHeaderAlign"
      }, l = NC(r, o);
      Object.keys(l).forEach((a) => {
        const c = o[a];
        Hi(e, c) && ne(() => e[c], (u) => {
          t.columnConfig.value[a] = u;
        });
      });
    }
  };
}
function ZG(n, e, t) {
  const i = Xe(), s = D(""), r = D(!1), o = D(), l = D(), a = me("table");
  Vs(() => {
    o.value = n.align ? `is-${n.align}` : null, o.value;
  }), Vs(() => {
    l.value = n.headerAlign ? `is-${n.headerAlign}` : o.value, l.value;
  });
  const c = $(() => {
    let w = i.vnode.vParent || i.parent;
    for (; w && !w.tableId && !w.columnId; )
      w = w.vnode.vParent || w.parent;
    return w;
  }), u = $(() => {
    const { store: w } = i.parent;
    if (!w)
      return !1;
    const { treeData: x } = w.states, S = x.value;
    return S && Object.keys(S).length > 0;
  }), h = D(G1(n.width)), d = D(i_(n.minWidth)), f = (w) => (h.value && (w.width = h.value), d.value && (w.minWidth = d.value), !h.value && d.value && (w.width = void 0), w.minWidth || (w.minWidth = 80), w.realWidth = Number(w.width === void 0 ? w.minWidth : w.width), w), p = (w) => {
    const x = w.type, S = zG[x] || {};
    Object.keys(S).forEach((k) => {
      const E = S[k];
      k !== "className" && E !== void 0 && (w[k] = E);
    });
    const C = QG(x);
    if (C) {
      const k = `${y(a.namespace)}-${C}`;
      w.className = w.className ? `${w.className} ${k}` : k;
    }
    return w;
  }, g = (w) => {
    Array.isArray(w) ? w.forEach((S) => x(S)) : x(w);
    function x(S) {
      var C;
      ((C = S == null ? void 0 : S.type) == null ? void 0 : C.name) === "ElTableColumn" && (S.vParent = i);
    }
  };
  return {
    columnId: s,
    realAlign: o,
    isSubColumn: r,
    realHeaderAlign: l,
    columnOrTableParent: c,
    setColumnWidth: f,
    setColumnForcedProps: p,
    setColumnRenders: (w) => {
      n.renderHeader ? pt("TableColumn", "Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.") : w.type !== "selection" && (w.renderHeader = (S) => (i.columnConfig.value.label, de(e, "header", S, () => [w.label])));
      let x = w.renderCell;
      return w.type === "expand" ? (w.renderCell = (S) => Re("div", {
        class: "cell"
      }, [x(S)]), t.value.renderExpanded = (S) => e.default ? e.default(S) : e.default) : (x = x || jG, w.renderCell = (S) => {
        let C = null;
        if (e.default) {
          const B = e.default(S);
          C = B.some((I) => I.type !== LE) ? B : x(S);
        } else
          C = x(S);
        const { columns: k } = t.value.store.states, E = k.value.findIndex((B) => B.type === "default"), M = u.value && S.cellIndex === E, _ = VG(S, M), T = {
          class: "cell",
          style: {}
        };
        return w.showOverflowTooltip && (T.class = `${T.class} ${y(a.namespace)}-tooltip`, T.style = {
          width: `${(S.column.realWidth || Number(S.column.width)) - 1}px`
        }), g(C), Re("div", T, [_, C]);
      }), w;
    },
    getPropsData: (...w) => w.reduce((x, S) => (Array.isArray(S) && S.forEach((C) => {
      x[C] = n[C];
    }), x), {}),
    getColumnElIndex: (w, x) => Array.prototype.indexOf.call(w, x),
    updateColumnOrder: () => {
      t.value.store.commit("updateColumnOrder", i.columnConfig.value);
    }
  };
}
var qG = {
  type: {
    type: String,
    default: "default"
  },
  label: String,
  className: String,
  labelClassName: String,
  property: String,
  prop: String,
  width: {
    type: [String, Number],
    default: ""
  },
  minWidth: {
    type: [String, Number],
    default: ""
  },
  renderHeader: Function,
  sortable: {
    type: [Boolean, String],
    default: !1
  },
  sortMethod: Function,
  sortBy: [String, Function, Array],
  resizable: {
    type: Boolean,
    default: !0
  },
  columnKey: String,
  align: String,
  headerAlign: String,
  showOverflowTooltip: {
    type: [Boolean, Object],
    default: void 0
  },
  fixed: [Boolean, String],
  formatter: Function,
  selectable: Function,
  reserveSelection: Boolean,
  filterMethod: Function,
  filteredValue: Array,
  filters: Array,
  filterPlacement: String,
  filterMultiple: {
    type: Boolean,
    default: !0
  },
  filterClassName: String,
  index: [Number, Function],
  sortOrders: {
    type: Array,
    default: () => ["ascending", "descending", null],
    validator: (n) => n.every((e) => ["ascending", "descending", null].includes(e))
  }
};
let WG = 1;
var h_ = F({
  name: "ElTableColumn",
  components: {
    ElCheckbox: uo
  },
  props: qG,
  setup(n, { slots: e }) {
    const t = Xe(), i = D({}), s = $(() => {
      let b = t.parent;
      for (; b && !b.tableId; )
        b = b.parent;
      return b;
    }), { registerNormalWatchers: r, registerComplexWatchers: o } = FG(s, n), {
      columnId: l,
      isSubColumn: a,
      realHeaderAlign: c,
      columnOrTableParent: u,
      setColumnWidth: h,
      setColumnForcedProps: d,
      setColumnRenders: f,
      getPropsData: p,
      getColumnElIndex: g,
      realAlign: m,
      updateColumnOrder: v
    } = ZG(n, e, s), O = u.value;
    l.value = `${O.tableId || O.columnId}_column_${WG++}`, s1(() => {
      a.value = s.value !== O;
      const b = n.type || "default", w = n.sortable === "" ? !0 : n.sortable, x = Si(n.showOverflowTooltip) ? O.props.showOverflowTooltip : n.showOverflowTooltip, S = {
        ...BG[b],
        id: l.value,
        type: b,
        property: n.prop || n.property,
        align: m,
        headerAlign: c,
        showOverflowTooltip: x,
        filterable: n.filters || n.filterMethod,
        filteredValue: [],
        filterPlacement: "",
        filterClassName: "",
        isColumnGroup: !1,
        isSubColumn: !1,
        filterOpened: !1,
        sortable: w,
        index: n.index,
        rawColumnKey: t.vnode.key
      };
      let _ = p([
        "columnKey",
        "label",
        "className",
        "labelClassName",
        "type",
        "renderHeader",
        "formatter",
        "fixed",
        "resizable"
      ], ["sortMethod", "sortBy", "sortOrders"], ["selectable", "reserveSelection"], [
        "filterMethod",
        "filters",
        "filterMultiple",
        "filterOpened",
        "filteredValue",
        "filterPlacement",
        "filterClassName"
      ]);
      _ = WU(S, _), _ = XU(f, h, d)(_), i.value = _, r(), o();
    }), qe(() => {
      var b;
      const w = u.value, x = a.value ? w.vnode.el.children : (b = w.refs.hiddenColumns) == null ? void 0 : b.children, S = () => g(x || [], t.vnode.el);
      i.value.getColumnIndex = S, S() > -1 && s.value.store.commit("insertColumn", i.value, a.value ? w.columnConfig.value : null, v);
    }), Gn(() => {
      s.value.store.commit("removeColumn", i.value, a.value ? O.columnConfig.value : null, v);
    }), t.columnId = l.value, t.columnConfig = i;
  },
  render() {
    var n, e, t;
    try {
      const i = (e = (n = this.$slots).default) == null ? void 0 : e.call(n, {
        row: {},
        column: {},
        $index: -1
      }), s = [];
      if (Array.isArray(i))
        for (const o of i)
          ((t = o.type) == null ? void 0 : t.name) === "ElTableColumn" || o.shapeFlag & 2 ? s.push(o) : o.type === Tt && Array.isArray(o.children) && o.children.forEach((l) => {
            (l == null ? void 0 : l.patchFlag) !== 1024 && !bt(l == null ? void 0 : l.children) && s.push(l);
          });
      return Re("div", s);
    } catch {
      return Re("div", []);
    }
  }
});
const TUe = Ft(LG, {
  TableColumn: h_
}), _Ue = Er(h_), c0 = Symbol("tabsRootContextKey"), HG = Ee({
  tabs: {
    type: ce(Array),
    default: () => Ys([])
  }
}), d_ = "ElTabBar", XG = F({
  name: d_
}), YG = /* @__PURE__ */ F({
  ...XG,
  props: HG,
  setup(n, { expose: e }) {
    const t = n, i = Xe(), s = ke(c0);
    s || hs(d_, "<el-tabs><el-tab-bar /></el-tabs>");
    const r = me("tabs"), o = D(), l = D(), a = () => {
      let u = 0, h = 0;
      const d = ["top", "bottom"].includes(s.props.tabPosition) ? "width" : "height", f = d === "width" ? "x" : "y", p = f === "x" ? "left" : "top";
      return t.tabs.every((g) => {
        var m, v;
        const O = (v = (m = i.parent) == null ? void 0 : m.refs) == null ? void 0 : v[`tab-${g.uid}`];
        if (!O)
          return !1;
        if (!g.active)
          return !0;
        u = O[`offset${Wr(p)}`], h = O[`client${Wr(d)}`];
        const b = window.getComputedStyle(O);
        return d === "width" && (t.tabs.length > 1 && (h -= Number.parseFloat(b.paddingLeft) + Number.parseFloat(b.paddingRight)), u += Number.parseFloat(b.paddingLeft)), !1;
      }), {
        [d]: `${h}px`,
        transform: `translate${Wr(f)}(${u}px)`
      };
    }, c = () => l.value = a();
    return ne(() => t.tabs, async () => {
      await $e(), c();
    }, { immediate: !0 }), pn(o, () => c()), e({
      ref: o,
      update: c
    }), (u, h) => (R(), V("div", {
      ref_key: "barRef",
      ref: o,
      class: L([y(r).e("active-bar"), y(r).is(y(s).props.tabPosition)]),
      style: Qe(l.value)
    }, null, 6));
  }
});
var UG = /* @__PURE__ */ Ce(YG, [["__file", "tab-bar.vue"]]);
const GG = Ee({
  panes: {
    type: ce(Array),
    default: () => Ys([])
  },
  currentName: {
    type: [String, Number],
    default: ""
  },
  editable: Boolean,
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  stretch: Boolean
}), KG = {
  tabClick: (n, e, t) => t instanceof Event,
  tabRemove: (n, e) => e instanceof Event
}, DC = "ElTabNav", JG = F({
  name: DC,
  props: GG,
  emits: KG,
  setup(n, {
    expose: e,
    emit: t
  }) {
    const i = Xe(), s = ke(c0);
    s || hs(DC, "<el-tabs><tab-nav /></el-tabs>");
    const r = me("tabs"), o = LV(), l = UV(), a = D(), c = D(), u = D(), h = D(), d = D(!1), f = D(0), p = D(!1), g = D(!0), m = $(() => ["top", "bottom"].includes(s.props.tabPosition) ? "width" : "height"), v = $(() => ({
      transform: `translate${m.value === "width" ? "X" : "Y"}(-${f.value}px)`
    })), O = () => {
      if (!a.value)
        return;
      const E = a.value[`offset${Wr(m.value)}`], M = f.value;
      if (!M)
        return;
      const _ = M > E ? M - E : 0;
      f.value = _;
    }, b = () => {
      if (!a.value || !c.value)
        return;
      const E = c.value[`offset${Wr(m.value)}`], M = a.value[`offset${Wr(m.value)}`], _ = f.value;
      if (E - _ <= M)
        return;
      const T = E - _ > M * 2 ? _ + M : E - M;
      f.value = T;
    }, w = async () => {
      const E = c.value;
      if (!d.value || !u.value || !a.value || !E)
        return;
      await $e();
      const M = u.value.querySelector(".is-active");
      if (!M)
        return;
      const _ = a.value, T = ["top", "bottom"].includes(s.props.tabPosition), B = M.getBoundingClientRect(), I = _.getBoundingClientRect(), P = T ? E.offsetWidth - I.width : E.offsetHeight - I.height, A = f.value;
      let N = A;
      T ? (B.left < I.left && (N = A - (I.left - B.left)), B.right > I.right && (N = A + B.right - I.right)) : (B.top < I.top && (N = A - (I.top - B.top)), B.bottom > I.bottom && (N = A + (B.bottom - I.bottom))), N = Math.max(N, 0), f.value = Math.min(N, P);
    }, x = () => {
      var E;
      if (!c.value || !a.value)
        return;
      n.stretch && ((E = h.value) == null || E.update());
      const M = c.value[`offset${Wr(m.value)}`], _ = a.value[`offset${Wr(m.value)}`], T = f.value;
      _ < M ? (d.value = d.value || {}, d.value.prev = T, d.value.next = T + _ < M, M - T < _ && (f.value = M - _)) : (d.value = !1, T > 0 && (f.value = 0));
    }, S = (E) => {
      const M = E.code, {
        up: _,
        down: T,
        left: B,
        right: I
      } = dt;
      if (![_, T, B, I].includes(M))
        return;
      const P = Array.from(E.currentTarget.querySelectorAll("[role=tab]:not(.is-disabled)")), A = P.indexOf(E.target);
      let N;
      M === B || M === _ ? A === 0 ? N = P.length - 1 : N = A - 1 : A < P.length - 1 ? N = A + 1 : N = 0, P[N].focus({
        preventScroll: !0
      }), P[N].click(), C();
    }, C = () => {
      g.value && (p.value = !0);
    }, k = () => p.value = !1;
    return ne(o, (E) => {
      E === "hidden" ? g.value = !1 : E === "visible" && setTimeout(() => g.value = !0, 50);
    }), ne(l, (E) => {
      E ? setTimeout(() => g.value = !0, 50) : g.value = !1;
    }), pn(u, x), qe(() => setTimeout(() => w(), 0)), Zl(() => x()), e({
      scrollToActiveTab: w,
      removeFocus: k
    }), ne(() => n.panes, () => i.update(), {
      flush: "post",
      deep: !0
    }), () => {
      const E = d.value ? [K("span", {
        class: [r.e("nav-prev"), r.is("disabled", !d.value.prev)],
        onClick: O
      }, [K(Fe, null, {
        default: () => [K(O1, null, null)]
      })]), K("span", {
        class: [r.e("nav-next"), r.is("disabled", !d.value.next)],
        onClick: b
      }, [K(Fe, null, {
        default: () => [K(ec, null, null)]
      })])] : null, M = n.panes.map((_, T) => {
        var B, I, P, A;
        const N = _.uid, q = _.props.disabled, j = (I = (B = _.props.name) != null ? B : _.index) != null ? I : `${T}`, H = !q && (_.isClosable || n.editable);
        _.index = `${T}`;
        const oe = H ? K(Fe, {
          class: "is-icon-close",
          onClick: (U) => t("tabRemove", _, U)
        }, {
          default: () => [K(Lo, null, null)]
        }) : null, te = ((A = (P = _.slots).label) == null ? void 0 : A.call(P)) || _.props.label, W = !q && _.active ? 0 : -1;
        return K("div", {
          ref: `tab-${N}`,
          class: [r.e("item"), r.is(s.props.tabPosition), r.is("active", _.active), r.is("disabled", q), r.is("closable", H), r.is("focus", p.value)],
          id: `tab-${j}`,
          key: `tab-${N}`,
          "aria-controls": `pane-${j}`,
          role: "tab",
          "aria-selected": _.active,
          tabindex: W,
          onFocus: () => C(),
          onBlur: () => k(),
          onClick: (U) => {
            k(), t("tabClick", _, j, U);
          },
          onKeydown: (U) => {
            H && (U.code === dt.delete || U.code === dt.backspace) && t("tabRemove", _, U);
          }
        }, [te, oe]);
      });
      return K("div", {
        ref: u,
        class: [r.e("nav-wrap"), r.is("scrollable", !!d.value), r.is(s.props.tabPosition)]
      }, [E, K("div", {
        class: r.e("nav-scroll"),
        ref: a
      }, [K("div", {
        class: [r.e("nav"), r.is(s.props.tabPosition), r.is("stretch", n.stretch && ["top", "bottom"].includes(s.props.tabPosition))],
        ref: c,
        style: v.value,
        role: "tablist",
        onKeydown: S
      }, [n.type ? null : K(UG, {
        ref: h,
        tabs: [...n.panes]
      }, null), M])])]);
    };
  }
}), eK = Ee({
  type: {
    type: String,
    values: ["card", "border-card", ""],
    default: ""
  },
  activeName: {
    type: [String, Number]
  },
  closable: Boolean,
  addable: Boolean,
  modelValue: {
    type: [String, Number]
  },
  editable: Boolean,
  tabPosition: {
    type: String,
    values: ["top", "right", "bottom", "left"],
    default: "top"
  },
  beforeLeave: {
    type: ce(Function),
    default: () => !0
  },
  stretch: Boolean
}), Ov = (n) => bt(n) || tt(n), tK = {
  [ot]: (n) => Ov(n),
  tabClick: (n, e) => e instanceof Event,
  tabChange: (n) => Ov(n),
  edit: (n, e) => ["remove", "add"].includes(e),
  tabRemove: (n) => Ov(n),
  tabAdd: () => !0
}, nK = F({
  name: "ElTabs",
  props: eK,
  emits: tK,
  setup(n, {
    emit: e,
    slots: t,
    expose: i
  }) {
    var s, r;
    const o = me("tabs"), {
      children: l,
      addChild: a,
      removeChild: c
    } = UZ(Xe(), "ElTabPane"), u = D(), h = D((r = (s = n.modelValue) != null ? s : n.activeName) != null ? r : "0"), d = async (m, v = !1) => {
      var O, b, w;
      if (!(h.value === m || Si(m)))
        try {
          await ((O = n.beforeLeave) == null ? void 0 : O.call(n, m, h.value)) !== !1 && (h.value = m, v && (e(ot, m), e("tabChange", m)), (w = (b = u.value) == null ? void 0 : b.removeFocus) == null || w.call(b));
        } catch {
        }
    }, f = (m, v, O) => {
      m.props.disabled || (d(v, !0), e("tabClick", m, O));
    }, p = (m, v) => {
      m.props.disabled || Si(m.props.name) || (v.stopPropagation(), e("edit", m.props.name, "remove"), e("tabRemove", m.props.name));
    }, g = () => {
      e("edit", void 0, "add"), e("tabAdd");
    };
    return Ba({
      from: '"activeName"',
      replacement: '"model-value" or "v-model"',
      scope: "ElTabs",
      version: "2.3.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#attributes",
      type: "Attribute"
    }, $(() => !!n.activeName)), Ba({
      from: '"addIcon"',
      replacement: '"add-icon"',
      scope: "ElTabs",
      version: "2.6.0",
      ref: "https://element-plus.org/en-US/component/tabs.html#slots",
      type: "Slot"
    }, $(() => !!t.addIcon)), ne(() => n.activeName, (m) => d(m)), ne(() => n.modelValue, (m) => d(m)), ne(h, async () => {
      var m;
      await $e(), (m = u.value) == null || m.scrollToActiveTab();
    }), ft(c0, {
      props: n,
      currentName: h,
      registerPane: a,
      unregisterPane: c
    }), i({
      currentName: h
    }), () => {
      const m = t["add-icon"] || t.addIcon, v = m && t.addIcon, O = n.editable || n.addable ? K("span", {
        class: o.e("new-tab"),
        tabindex: "0",
        onClick: g,
        onKeydown: (x) => {
          x.code === dt.enter && g();
        }
      }, [m ? de(t, v ? "addIcon" : "add-icon") : K(Fe, {
        class: o.is("icon-plus")
      }, {
        default: () => [K(n$, null, null)]
      })]) : null, b = K("div", {
        class: [o.e("header"), o.is(n.tabPosition)]
      }, [O, K(JG, {
        ref: u,
        currentName: h.value,
        editable: n.editable,
        type: n.type,
        panes: l.value,
        stretch: n.stretch,
        onTabClick: f,
        onTabRemove: p
      }, null)]), w = K("div", {
        class: o.e("content")
      }, [de(t, "default")]);
      return K("div", {
        class: [o.b(), o.m(n.tabPosition), {
          [o.m("card")]: n.type === "card",
          [o.m("border-card")]: n.type === "border-card"
        }]
      }, [...n.tabPosition !== "bottom" ? [b, w] : [w, b]]);
    };
  }
}), iK = Ee({
  label: {
    type: String,
    default: ""
  },
  name: {
    type: [String, Number]
  },
  closable: Boolean,
  disabled: Boolean,
  lazy: Boolean
}), sK = ["id", "aria-hidden", "aria-labelledby"], f_ = "ElTabPane", rK = F({
  name: f_
}), oK = /* @__PURE__ */ F({
  ...rK,
  props: iK,
  setup(n) {
    const e = n, t = Xe(), i = go(), s = ke(c0);
    s || hs(f_, "usage: <el-tabs><el-tab-pane /></el-tabs/>");
    const r = me("tab-pane"), o = D(), l = $(() => e.closable || s.props.closable), a = bS(() => {
      var f;
      return s.currentName.value === ((f = e.name) != null ? f : o.value);
    }), c = D(a.value), u = $(() => {
      var f;
      return (f = e.name) != null ? f : o.value;
    }), h = bS(() => !e.lazy || c.value || a.value);
    ne(a, (f) => {
      f && (c.value = !0);
    });
    const d = Gt({
      uid: t.uid,
      slots: i,
      props: e,
      paneName: u,
      active: a,
      index: o,
      isClosable: l
    });
    return qe(() => {
      s.registerPane(d);
    }), Vu(() => {
      s.unregisterPane(d.uid);
    }), (f, p) => y(h) ? it((R(), V("div", {
      key: 0,
      id: `pane-${y(u)}`,
      class: L(y(r).b()),
      role: "tabpanel",
      "aria-hidden": !y(a),
      "aria-labelledby": `tab-${y(u)}`
    }, [
      de(f.$slots, "default")
    ], 10, sK)), [
      [Qt, y(a)]
    ]) : G("v-if", !0);
  }
});
var p_ = /* @__PURE__ */ Ce(oK, [["__file", "tab-pane.vue"]]);
const MUe = Ft(nK, {
  TabPane: p_
}), RUe = Er(p_), g_ = "left-check-change", m_ = "right-check-change", Sc = Ee({
  data: {
    type: ce(Array),
    default: () => []
  },
  titles: {
    type: ce(Array),
    default: () => []
  },
  buttonTexts: {
    type: ce(Array),
    default: () => []
  },
  filterPlaceholder: String,
  filterMethod: {
    type: ce(Function)
  },
  leftDefaultChecked: {
    type: ce(Array),
    default: () => []
  },
  rightDefaultChecked: {
    type: ce(Array),
    default: () => []
  },
  renderContent: {
    type: ce(Function)
  },
  modelValue: {
    type: ce(Array),
    default: () => []
  },
  format: {
    type: ce(Object),
    default: () => ({})
  },
  filterable: Boolean,
  props: {
    type: ce(Object),
    default: () => Ys({
      label: "label",
      key: "key",
      disabled: "disabled"
    })
  },
  targetOrder: {
    type: String,
    values: ["original", "push", "unshift"],
    default: "original"
  },
  validateEvent: {
    type: Boolean,
    default: !0
  }
}), by = (n, e) => [n, e].every(xt) || xt(n) && Ri(e), lK = {
  [Un]: (n, e, t) => [n, t].every(xt) && ["left", "right"].includes(e),
  [ot]: (n) => xt(n),
  [g_]: by,
  [m_]: by
}, yy = "checked-change", aK = Ee({
  data: Sc.data,
  optionRender: {
    type: ce(Function)
  },
  placeholder: String,
  title: String,
  filterable: Boolean,
  format: Sc.format,
  filterMethod: Sc.filterMethod,
  defaultChecked: Sc.leftDefaultChecked,
  props: Sc.props
}), cK = {
  [yy]: by
}, Cf = (n) => {
  const e = {
    label: "label",
    key: "key",
    disabled: "disabled"
  };
  return $(() => ({
    ...e,
    ...n.props
  }));
}, uK = (n, e, t) => {
  const i = Cf(n), s = $(() => n.data.filter((u) => wt(n.filterMethod) ? n.filterMethod(e.query, u) : String(u[i.value.label] || u[i.value.key]).toLowerCase().includes(e.query.toLowerCase()))), r = $(() => s.value.filter((u) => !u[i.value.disabled])), o = $(() => {
    const u = e.checked.length, h = n.data.length, { noChecked: d, hasChecked: f } = n.format;
    return d && f ? u > 0 ? f.replace(/\${checked}/g, u.toString()).replace(/\${total}/g, h.toString()) : d.replace(/\${total}/g, h.toString()) : `${u}/${h}`;
  }), l = $(() => {
    const u = e.checked.length;
    return u > 0 && u < r.value.length;
  }), a = () => {
    const u = r.value.map((h) => h[i.value.key]);
    e.allChecked = u.length > 0 && u.every((h) => e.checked.includes(h));
  }, c = (u) => {
    e.checked = u ? r.value.map((h) => h[i.value.key]) : [];
  };
  return ne(() => e.checked, (u, h) => {
    if (a(), e.checkChangeByUser) {
      const d = u.concat(h).filter((f) => !u.includes(f) || !h.includes(f));
      t(yy, u, d);
    } else
      t(yy, u), e.checkChangeByUser = !0;
  }), ne(r, () => {
    a();
  }), ne(() => n.data, () => {
    const u = [], h = s.value.map((d) => d[i.value.key]);
    e.checked.forEach((d) => {
      h.includes(d) && u.push(d);
    }), e.checkChangeByUser = !1, e.checked = u;
  }), ne(() => n.defaultChecked, (u, h) => {
    if (h && u.length === h.length && u.every((p) => h.includes(p)))
      return;
    const d = [], f = r.value.map((p) => p[i.value.key]);
    u.forEach((p) => {
      f.includes(p) && d.push(p);
    }), e.checkChangeByUser = !1, e.checked = d;
  }, {
    immediate: !0
  }), {
    filteredData: s,
    checkableData: r,
    checkedSummary: o,
    isIndeterminate: l,
    updateAllChecked: a,
    handleAllCheckedChange: c
  };
}, hK = (n, e) => ({
  onSourceCheckedChange: (s, r) => {
    n.leftChecked = s, r && e(g_, s, r);
  },
  onTargetCheckedChange: (s, r) => {
    n.rightChecked = s, r && e(m_, s, r);
  }
}), dK = (n) => {
  const e = Cf(n), t = $(() => n.data.reduce((r, o) => (r[o[e.value.key]] = o) && r, {})), i = $(() => n.data.filter((r) => !n.modelValue.includes(r[e.value.key]))), s = $(() => n.targetOrder === "original" ? n.data.filter((r) => n.modelValue.includes(r[e.value.key])) : n.modelValue.reduce((r, o) => {
    const l = t.value[o];
    return l && r.push(l), r;
  }, []));
  return {
    sourceData: i,
    targetData: s
  };
}, fK = (n, e, t) => {
  const i = Cf(n), s = (l, a, c) => {
    t(ot, l), t(Un, l, a, c);
  };
  return {
    addToLeft: () => {
      const l = n.modelValue.slice();
      e.rightChecked.forEach((a) => {
        const c = l.indexOf(a);
        c > -1 && l.splice(c, 1);
      }), s(l, "left", e.rightChecked);
    },
    addToRight: () => {
      let l = n.modelValue.slice();
      const a = n.data.filter((c) => {
        const u = c[i.value.key];
        return e.leftChecked.includes(u) && !n.modelValue.includes(u);
      }).map((c) => c[i.value.key]);
      l = n.targetOrder === "unshift" ? a.concat(l) : l.concat(a), n.targetOrder === "original" && (l = n.data.filter((c) => l.includes(c[i.value.key])).map((c) => c[i.value.key])), s(l, "right", e.leftChecked);
    }
  };
}, pK = F({
  name: "ElTransferPanel"
}), gK = /* @__PURE__ */ F({
  ...pK,
  props: aK,
  emits: cK,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = go(), r = ({ option: b }) => b, { t: o } = mn(), l = me("transfer"), a = Gt({
      checked: [],
      allChecked: !1,
      query: "",
      checkChangeByUser: !0
    }), c = Cf(i), {
      filteredData: u,
      checkedSummary: h,
      isIndeterminate: d,
      handleAllCheckedChange: f
    } = uK(i, a, t), p = $(() => !qr(a.query) && qr(u.value)), g = $(() => !qr(s.default()[0].children)), { checked: m, allChecked: v, query: O } = Ws(a);
    return e({
      query: O
    }), (b, w) => (R(), V("div", {
      class: L(y(l).b("panel"))
    }, [
      Z("p", {
        class: L(y(l).be("panel", "header"))
      }, [
        K(y(uo), {
          modelValue: y(v),
          "onUpdate:modelValue": w[0] || (w[0] = (x) => Fi(v) ? v.value = x : null),
          indeterminate: y(d),
          "validate-event": !1,
          onChange: y(f)
        }, {
          default: Y(() => [
            Xn(xe(b.title) + " ", 1),
            Z("span", null, xe(y(h)), 1)
          ]),
          _: 1
        }, 8, ["modelValue", "indeterminate", "onChange"])
      ], 2),
      Z("div", {
        class: L([y(l).be("panel", "body"), y(l).is("with-footer", y(g))])
      }, [
        b.filterable ? (R(), ie(y(ic), {
          key: 0,
          modelValue: y(O),
          "onUpdate:modelValue": w[1] || (w[1] = (x) => Fi(O) ? O.value = x : null),
          class: L(y(l).be("panel", "filter")),
          size: "default",
          placeholder: b.placeholder,
          "prefix-icon": y(bj),
          clearable: "",
          "validate-event": !1
        }, null, 8, ["modelValue", "class", "placeholder", "prefix-icon"])) : G("v-if", !0),
        it(K(y(W9), {
          modelValue: y(m),
          "onUpdate:modelValue": w[2] || (w[2] = (x) => Fi(m) ? m.value = x : null),
          "validate-event": !1,
          class: L([y(l).is("filterable", b.filterable), y(l).be("panel", "list")])
        }, {
          default: Y(() => [
            (R(!0), V(Tt, null, oi(y(u), (x) => (R(), ie(y(uo), {
              key: x[y(c).key],
              class: L(y(l).be("panel", "item")),
              label: x[y(c).key],
              disabled: x[y(c).disabled],
              "validate-event": !1
            }, {
              default: Y(() => {
                var S;
                return [
                  K(r, {
                    option: (S = b.optionRender) == null ? void 0 : S.call(b, x)
                  }, null, 8, ["option"])
                ];
              }),
              _: 2
            }, 1032, ["class", "label", "disabled"]))), 128))
          ]),
          _: 1
        }, 8, ["modelValue", "class"]), [
          [Qt, !y(p) && !y(qr)(b.data)]
        ]),
        it(Z("p", {
          class: L(y(l).be("panel", "empty"))
        }, xe(y(p) ? y(o)("el.transfer.noMatch") : y(o)("el.transfer.noData")), 3), [
          [Qt, y(p) || y(qr)(b.data)]
        ])
      ], 2),
      y(g) ? (R(), V("p", {
        key: 0,
        class: L(y(l).be("panel", "footer"))
      }, [
        de(b.$slots, "default")
      ], 2)) : G("v-if", !0)
    ], 2));
  }
});
var LC = /* @__PURE__ */ Ce(gK, [["__file", "transfer-panel.vue"]]);
const mK = { key: 0 }, vK = { key: 0 }, bK = F({
  name: "ElTransfer"
}), yK = /* @__PURE__ */ F({
  ...bK,
  props: Sc,
  emits: lK,
  setup(n, { expose: e, emit: t }) {
    const i = n, s = go(), { t: r } = mn(), o = me("transfer"), { formItem: l } = _s(), a = Gt({
      leftChecked: [],
      rightChecked: []
    }), c = Cf(i), { sourceData: u, targetData: h } = dK(i), { onSourceCheckedChange: d, onTargetCheckedChange: f } = hK(a, t), { addToLeft: p, addToRight: g } = fK(i, a, t), m = D(), v = D(), O = (k) => {
      switch (k) {
        case "left":
          m.value.query = "";
          break;
        case "right":
          v.value.query = "";
          break;
      }
    }, b = $(() => i.buttonTexts.length === 2), w = $(() => i.titles[0] || r("el.transfer.titles.0")), x = $(() => i.titles[1] || r("el.transfer.titles.1")), S = $(() => i.filterPlaceholder || r("el.transfer.filterPlaceholder"));
    ne(() => i.modelValue, () => {
      var k;
      i.validateEvent && ((k = l == null ? void 0 : l.validate) == null || k.call(l, "change").catch((E) => pt(E)));
    });
    const C = $(() => (k) => i.renderContent ? i.renderContent(Re, k) : s.default ? s.default({ option: k }) : Re("span", k[c.value.label] || k[c.value.key]));
    return e({
      clearQuery: O,
      leftPanel: m,
      rightPanel: v
    }), (k, E) => (R(), V("div", {
      class: L(y(o).b())
    }, [
      K(LC, {
        ref_key: "leftPanel",
        ref: m,
        data: y(u),
        "option-render": y(C),
        placeholder: y(S),
        title: y(w),
        filterable: k.filterable,
        format: k.format,
        "filter-method": k.filterMethod,
        "default-checked": k.leftDefaultChecked,
        props: i.props,
        onCheckedChange: y(d)
      }, {
        default: Y(() => [
          de(k.$slots, "left-footer")
        ]),
        _: 3
      }, 8, ["data", "option-render", "placeholder", "title", "filterable", "format", "filter-method", "default-checked", "props", "onCheckedChange"]),
      Z("div", {
        class: L(y(o).e("buttons"))
      }, [
        K(y(Qa), {
          type: "primary",
          class: L([y(o).e("button"), y(o).is("with-texts", y(b))]),
          disabled: y(qr)(a.rightChecked),
          onClick: y(p)
        }, {
          default: Y(() => [
            K(y(Fe), null, {
              default: Y(() => [
                K(y(O1))
              ]),
              _: 1
            }),
            y(Si)(k.buttonTexts[0]) ? G("v-if", !0) : (R(), V("span", mK, xe(k.buttonTexts[0]), 1))
          ]),
          _: 1
        }, 8, ["class", "disabled", "onClick"]),
        K(y(Qa), {
          type: "primary",
          class: L([y(o).e("button"), y(o).is("with-texts", y(b))]),
          disabled: y(qr)(a.leftChecked),
          onClick: y(g)
        }, {
          default: Y(() => [
            y(Si)(k.buttonTexts[1]) ? G("v-if", !0) : (R(), V("span", vK, xe(k.buttonTexts[1]), 1)),
            K(y(Fe), null, {
              default: Y(() => [
                K(y(ec))
              ]),
              _: 1
            })
          ]),
          _: 1
        }, 8, ["class", "disabled", "onClick"])
      ], 2),
      K(LC, {
        ref_key: "rightPanel",
        ref: v,
        data: y(h),
        "option-render": y(C),
        placeholder: y(S),
        filterable: k.filterable,
        format: k.format,
        "filter-method": k.filterMethod,
        title: y(x),
        "default-checked": k.rightDefaultChecked,
        props: i.props,
        onCheckedChange: y(f)
      }, {
        default: Y(() => [
          de(k.$slots, "right-footer")
        ]),
        _: 3
      }, 8, ["data", "option-render", "placeholder", "filterable", "format", "filter-method", "title", "default-checked", "props", "onCheckedChange"])
    ], 2));
  }
});
var OK = /* @__PURE__ */ Ce(yK, [["__file", "transfer.vue"]]);
const NUe = Ft(OK), Bc = "$treeNodeId", IC = function(n, e) {
  !e || e[Bc] || Object.defineProperty(e, Bc, {
    value: n.id,
    enumerable: !1,
    configurable: !1,
    writable: !1
  });
}, ew = function(n, e) {
  return n ? e[n] : e[Bc];
}, Oy = (n, e, t) => {
  const i = n.value.currentNode;
  t();
  const s = n.value.currentNode;
  i !== s && e("current-change", s ? s.data : null, s);
}, wy = (n) => {
  let e = !0, t = !0, i = !0;
  for (let s = 0, r = n.length; s < r; s++) {
    const o = n[s];
    (o.checked !== !0 || o.indeterminate) && (e = !1, o.disabled || (i = !1)), (o.checked !== !1 || o.indeterminate) && (t = !1);
  }
  return { all: e, none: t, allWithoutDisable: i, half: !e && !t };
}, og = function(n) {
  if (n.childNodes.length === 0 || n.loading)
    return;
  const { all: e, none: t, half: i } = wy(n.childNodes);
  e ? (n.checked = !0, n.indeterminate = !1) : i ? (n.checked = !1, n.indeterminate = !0) : t && (n.checked = !1, n.indeterminate = !1);
  const s = n.parent;
  !s || s.level === 0 || n.store.checkStrictly || og(s);
}, np = function(n, e) {
  const t = n.store.props, i = n.data || {}, s = t[e];
  if (typeof s == "function")
    return s(i, n);
  if (typeof s == "string")
    return i[s];
  if (typeof s > "u") {
    const r = i[e];
    return r === void 0 ? "" : r;
  }
};
let wK = 0, xy = class lg {
  constructor(e) {
    this.id = wK++, this.text = null, this.checked = !1, this.indeterminate = !1, this.data = null, this.expanded = !1, this.parent = null, this.visible = !0, this.isCurrent = !1, this.canFocus = !1;
    for (const t in e)
      Hi(e, t) && (this[t] = e[t]);
    this.level = 0, this.loaded = !1, this.childNodes = [], this.loading = !1, this.parent && (this.level = this.parent.level + 1);
  }
  initialize() {
    const e = this.store;
    if (!e)
      throw new Error("[Node]store is required!");
    e.registerNode(this);
    const t = e.props;
    if (t && typeof t.isLeaf < "u") {
      const r = np(this, "isLeaf");
      typeof r == "boolean" && (this.isLeafByUser = r);
    }
    if (e.lazy !== !0 && this.data ? (this.setData(this.data), e.defaultExpandAll && (this.expanded = !0, this.canFocus = !0)) : this.level > 0 && e.lazy && e.defaultExpandAll && this.expand(), Array.isArray(this.data) || IC(this, this.data), !this.data)
      return;
    const i = e.defaultExpandedKeys, s = e.key;
    s && i && i.includes(this.key) && this.expand(null, e.autoExpandParent), s && e.currentNodeKey !== void 0 && this.key === e.currentNodeKey && (e.currentNode = this, e.currentNode.isCurrent = !0), e.lazy && e._initDefaultCheckedNode(this), this.updateLeafState(), this.parent && (this.level === 1 || this.parent.expanded === !0) && (this.canFocus = !0);
  }
  setData(e) {
    Array.isArray(e) || IC(this, e), this.data = e, this.childNodes = [];
    let t;
    this.level === 0 && Array.isArray(this.data) ? t = this.data : t = np(this, "children") || [];
    for (let i = 0, s = t.length; i < s; i++)
      this.insertChild({ data: t[i] });
  }
  get label() {
    return np(this, "label");
  }
  get key() {
    const e = this.store.key;
    return this.data ? this.data[e] : null;
  }
  get disabled() {
    return np(this, "disabled");
  }
  get nextSibling() {
    const e = this.parent;
    if (e) {
      const t = e.childNodes.indexOf(this);
      if (t > -1)
        return e.childNodes[t + 1];
    }
    return null;
  }
  get previousSibling() {
    const e = this.parent;
    if (e) {
      const t = e.childNodes.indexOf(this);
      if (t > -1)
        return t > 0 ? e.childNodes[t - 1] : null;
    }
    return null;
  }
  contains(e, t = !0) {
    return (this.childNodes || []).some((i) => i === e || t && i.contains(e));
  }
  remove() {
    const e = this.parent;
    e && e.removeChild(this);
  }
  insertChild(e, t, i) {
    if (!e)
      throw new Error("InsertChild error: child is required.");
    if (!(e instanceof lg)) {
      if (!i) {
        const s = this.getChildren(!0);
        s.includes(e.data) || (typeof t > "u" || t < 0 ? s.push(e.data) : s.splice(t, 0, e.data));
      }
      Object.assign(e, {
        parent: this,
        store: this.store
      }), e = Gt(new lg(e)), e instanceof lg && e.initialize();
    }
    e.level = this.level + 1, typeof t > "u" || t < 0 ? this.childNodes.push(e) : this.childNodes.splice(t, 0, e), this.updateLeafState();
  }
  insertBefore(e, t) {
    let i;
    t && (i = this.childNodes.indexOf(t)), this.insertChild(e, i);
  }
  insertAfter(e, t) {
    let i;
    t && (i = this.childNodes.indexOf(t), i !== -1 && (i += 1)), this.insertChild(e, i);
  }
  removeChild(e) {
    const t = this.getChildren() || [], i = t.indexOf(e.data);
    i > -1 && t.splice(i, 1);
    const s = this.childNodes.indexOf(e);
    s > -1 && (this.store && this.store.deregisterNode(e), e.parent = null, this.childNodes.splice(s, 1)), this.updateLeafState();
  }
  removeChildByData(e) {
    let t = null;
    for (let i = 0; i < this.childNodes.length; i++)
      if (this.childNodes[i].data === e) {
        t = this.childNodes[i];
        break;
      }
    t && this.removeChild(t);
  }
  expand(e, t) {
    const i = () => {
      if (t) {
        let s = this.parent;
        for (; s.level > 0; )
          s.expanded = !0, s = s.parent;
      }
      this.expanded = !0, e && e(), this.childNodes.forEach((s) => {
        s.canFocus = !0;
      });
    };
    this.shouldLoadData() ? this.loadData((s) => {
      Array.isArray(s) && (this.checked ? this.setChecked(!0, !0) : this.store.checkStrictly || og(this), i());
    }) : i();
  }
  doCreateChildren(e, t = {}) {
    e.forEach((i) => {
      this.insertChild(Object.assign({ data: i }, t), void 0, !0);
    });
  }
  collapse() {
    this.expanded = !1, this.childNodes.forEach((e) => {
      e.canFocus = !1;
    });
  }
  shouldLoadData() {
    return this.store.lazy === !0 && this.store.load && !this.loaded;
  }
  updateLeafState() {
    if (this.store.lazy === !0 && this.loaded !== !0 && typeof this.isLeafByUser < "u") {
      this.isLeaf = this.isLeafByUser;
      return;
    }
    const e = this.childNodes;
    if (!this.store.lazy || this.store.lazy === !0 && this.loaded === !0) {
      this.isLeaf = !e || e.length === 0;
      return;
    }
    this.isLeaf = !1;
  }
  setChecked(e, t, i, s) {
    if (this.indeterminate = e === "half", this.checked = e === !0, this.store.checkStrictly)
      return;
    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {
      const { all: o, allWithoutDisable: l } = wy(this.childNodes);
      !this.isLeaf && !o && l && (this.checked = !1, e = !1);
      const a = () => {
        if (t) {
          const c = this.childNodes;
          for (let d = 0, f = c.length; d < f; d++) {
            const p = c[d];
            s = s || e !== !1;
            const g = p.disabled ? p.checked : s;
            p.setChecked(g, t, !0, s);
          }
          const { half: u, all: h } = wy(c);
          h || (this.checked = h, this.indeterminate = u);
        }
      };
      if (this.shouldLoadData()) {
        this.loadData(() => {
          a(), og(this);
        }, {
          checked: e !== !1
        });
        return;
      } else
        a();
    }
    const r = this.parent;
    !r || r.level === 0 || i || og(r);
  }
  getChildren(e = !1) {
    if (this.level === 0)
      return this.data;
    const t = this.data;
    if (!t)
      return null;
    const i = this.store.props;
    let s = "children";
    return i && (s = i.children || "children"), t[s] === void 0 && (t[s] = null), e && !t[s] && (t[s] = []), t[s];
  }
  updateChildren() {
    const e = this.getChildren() || [], t = this.childNodes.map((r) => r.data), i = {}, s = [];
    e.forEach((r, o) => {
      const l = r[Bc];
      !!l && t.findIndex((c) => c[Bc] === l) >= 0 ? i[l] = { index: o, data: r } : s.push({ index: o, data: r });
    }), this.store.lazy || t.forEach((r) => {
      i[r[Bc]] || this.removeChildByData(r);
    }), s.forEach(({ index: r, data: o }) => {
      this.insertChild({ data: o }, r);
    }), this.updateLeafState();
  }
  loadData(e, t = {}) {
    if (this.store.lazy === !0 && this.store.load && !this.loaded && (!this.loading || Object.keys(t).length)) {
      this.loading = !0;
      const i = (s) => {
        this.childNodes = [], this.doCreateChildren(s, t), this.loaded = !0, this.loading = !1, this.updateLeafState(), e && e.call(this, s);
      };
      this.store.load(this, i);
    } else
      e && e.call(this);
  }
};
class xK {
  constructor(e) {
    this.currentNode = null, this.currentNodeKey = null;
    for (const t in e)
      Hi(e, t) && (this[t] = e[t]);
    this.nodesMap = {};
  }
  initialize() {
    if (this.root = new xy({
      data: this.data,
      store: this
    }), this.root.initialize(), this.lazy && this.load) {
      const e = this.load;
      e(this.root, (t) => {
        this.root.doCreateChildren(t), this._initDefaultCheckedNodes();
      });
    } else
      this._initDefaultCheckedNodes();
  }
  filter(e) {
    const t = this.filterNodeMethod, i = this.lazy, s = function(r) {
      const o = r.root ? r.root.childNodes : r.childNodes;
      if (o.forEach((l) => {
        l.visible = t.call(l, e, l.data, l), s(l);
      }), !r.visible && o.length) {
        let l = !0;
        l = !o.some((a) => a.visible), r.root ? r.root.visible = l === !1 : r.visible = l === !1;
      }
      e && r.visible && !r.isLeaf && (!i || r.loaded) && r.expand();
    };
    s(this);
  }
  setData(e) {
    e !== this.root.data ? (this.root.setData(e), this._initDefaultCheckedNodes()) : this.root.updateChildren();
  }
  getNode(e) {
    if (e instanceof xy)
      return e;
    const t = ln(e) ? ew(this.key, e) : e;
    return this.nodesMap[t] || null;
  }
  insertBefore(e, t) {
    const i = this.getNode(t);
    i.parent.insertBefore({ data: e }, i);
  }
  insertAfter(e, t) {
    const i = this.getNode(t);
    i.parent.insertAfter({ data: e }, i);
  }
  remove(e) {
    const t = this.getNode(e);
    t && t.parent && (t === this.currentNode && (this.currentNode = null), t.parent.removeChild(t));
  }
  append(e, t) {
    const i = t ? this.getNode(t) : this.root;
    i && i.insertChild({ data: e });
  }
  _initDefaultCheckedNodes() {
    const e = this.defaultCheckedKeys || [], t = this.nodesMap;
    e.forEach((i) => {
      const s = t[i];
      s && s.setChecked(!0, !this.checkStrictly);
    });
  }
  _initDefaultCheckedNode(e) {
    (this.defaultCheckedKeys || []).includes(e.key) && e.setChecked(!0, !this.checkStrictly);
  }
  setDefaultCheckedKey(e) {
    e !== this.defaultCheckedKeys && (this.defaultCheckedKeys = e, this._initDefaultCheckedNodes());
  }
  registerNode(e) {
    const t = this.key;
    !e || !e.data || (t ? e.key !== void 0 && (this.nodesMap[e.key] = e) : this.nodesMap[e.id] = e);
  }
  deregisterNode(e) {
    !this.key || !e || !e.data || (e.childNodes.forEach((i) => {
      this.deregisterNode(i);
    }), delete this.nodesMap[e.key]);
  }
  getCheckedNodes(e = !1, t = !1) {
    const i = [], s = function(r) {
      (r.root ? r.root.childNodes : r.childNodes).forEach((l) => {
        (l.checked || t && l.indeterminate) && (!e || e && l.isLeaf) && i.push(l.data), s(l);
      });
    };
    return s(this), i;
  }
  getCheckedKeys(e = !1) {
    return this.getCheckedNodes(e).map((t) => (t || {})[this.key]);
  }
  getHalfCheckedNodes() {
    const e = [], t = function(i) {
      (i.root ? i.root.childNodes : i.childNodes).forEach((r) => {
        r.indeterminate && e.push(r.data), t(r);
      });
    };
    return t(this), e;
  }
  getHalfCheckedKeys() {
    return this.getHalfCheckedNodes().map((e) => (e || {})[this.key]);
  }
  _getAllNodes() {
    const e = [], t = this.nodesMap;
    for (const i in t)
      Hi(t, i) && e.push(t[i]);
    return e;
  }
  updateChildren(e, t) {
    const i = this.nodesMap[e];
    if (!i)
      return;
    const s = i.childNodes;
    for (let r = s.length - 1; r >= 0; r--) {
      const o = s[r];
      this.remove(o.data);
    }
    for (let r = 0, o = t.length; r < o; r++) {
      const l = t[r];
      this.append(l, i.data);
    }
  }
  _setCheckedKeys(e, t = !1, i) {
    const s = this._getAllNodes().sort((a, c) => a.level - c.level), r = /* @__PURE__ */ Object.create(null), o = Object.keys(i);
    s.forEach((a) => a.setChecked(!1, !1));
    const l = (a) => {
      a.childNodes.forEach((c) => {
        var u;
        r[c.data[e]] = !0, (u = c.childNodes) != null && u.length && l(c);
      });
    };
    for (let a = 0, c = s.length; a < c; a++) {
      const u = s[a], h = u.data[e].toString();
      if (!o.includes(h)) {
        u.checked && !r[h] && u.setChecked(!1, !1);
        continue;
      }
      if (u.childNodes.length && l(u), u.isLeaf || this.checkStrictly) {
        u.setChecked(!0, !1);
        continue;
      }
      if (u.setChecked(!0, !0), t) {
        u.setChecked(!1, !1);
        const f = function(p) {
          p.childNodes.forEach((m) => {
            m.isLeaf || m.setChecked(!1, !1), f(m);
          });
        };
        f(u);
      }
    }
  }
  setCheckedNodes(e, t = !1) {
    const i = this.key, s = {};
    e.forEach((r) => {
      s[(r || {})[i]] = !0;
    }), this._setCheckedKeys(i, t, s);
  }
  setCheckedKeys(e, t = !1) {
    this.defaultCheckedKeys = e;
    const i = this.key, s = {};
    e.forEach((r) => {
      s[r] = !0;
    }), this._setCheckedKeys(i, t, s);
  }
  setDefaultExpandedKeys(e) {
    e = e || [], this.defaultExpandedKeys = e, e.forEach((t) => {
      const i = this.getNode(t);
      i && i.expand(null, this.autoExpandParent);
    });
  }
  setChecked(e, t, i) {
    const s = this.getNode(e);
    s && s.setChecked(!!t, i);
  }
  getCurrentNode() {
    return this.currentNode;
  }
  setCurrentNode(e) {
    const t = this.currentNode;
    t && (t.isCurrent = !1), this.currentNode = e, this.currentNode.isCurrent = !0;
  }
  setUserCurrentNode(e, t = !0) {
    const i = e[this.key], s = this.nodesMap[i];
    this.setCurrentNode(s), t && this.currentNode.level > 1 && this.currentNode.parent.expand(null, !0);
  }
  setCurrentNodeKey(e, t = !0) {
    if (e == null) {
      this.currentNode && (this.currentNode.isCurrent = !1), this.currentNode = null;
      return;
    }
    const i = this.getNode(e);
    i && (this.setCurrentNode(i), t && this.currentNode.level > 1 && this.currentNode.parent.expand(null, !0));
  }
}
const SK = F({
  name: "ElTreeNodeContent",
  props: {
    node: {
      type: Object,
      required: !0
    },
    renderContent: Function
  },
  setup(n) {
    const e = me("tree"), t = ke("NodeInstance"), i = ke("RootTree");
    return () => {
      const s = n.node, { data: r, store: o } = s;
      return n.renderContent ? n.renderContent(Re, { _self: t, node: s, data: r, store: o }) : de(i.ctx.slots, "default", { node: s, data: r }, () => [
        Re("span", { class: e.be("node", "label") }, [s.label])
      ]);
    };
  }
});
var CK = /* @__PURE__ */ Ce(SK, [["__file", "tree-node-content.vue"]]);
function v_(n) {
  const e = ke("TreeNodeMap", null), t = {
    treeNodeExpand: (i) => {
      n.node !== i && n.node.collapse();
    },
    children: []
  };
  return e && e.children.push(t), ft("TreeNodeMap", t), {
    broadcastExpanded: (i) => {
      if (n.accordion)
        for (const s of t.children)
          s.treeNodeExpand(i);
    }
  };
}
const b_ = Symbol("dragEvents");
function kK({ props: n, ctx: e, el$: t, dropIndicator$: i, store: s }) {
  const r = me("tree"), o = D({
    showDropIndicator: !1,
    draggingNode: null,
    dropNode: null,
    allowDrop: !0,
    dropType: null
  });
  return ft(b_, {
    treeNodeDragStart: ({ event: u, treeNode: h }) => {
      if (typeof n.allowDrag == "function" && !n.allowDrag(h.node))
        return u.preventDefault(), !1;
      u.dataTransfer.effectAllowed = "move";
      try {
        u.dataTransfer.setData("text/plain", "");
      } catch {
      }
      o.value.draggingNode = h, e.emit("node-drag-start", h.node, u);
    },
    treeNodeDragOver: ({ event: u, treeNode: h }) => {
      const d = h, f = o.value.dropNode;
      f && f.node.id !== d.node.id && Mo(f.$el, r.is("drop-inner"));
      const p = o.value.draggingNode;
      if (!p || !d)
        return;
      let g = !0, m = !0, v = !0, O = !0;
      typeof n.allowDrop == "function" && (g = n.allowDrop(p.node, d.node, "prev"), O = m = n.allowDrop(p.node, d.node, "inner"), v = n.allowDrop(p.node, d.node, "next")), u.dataTransfer.dropEffect = m || g || v ? "move" : "none", (g || m || v) && (f == null ? void 0 : f.node.id) !== d.node.id && (f && e.emit("node-drag-leave", p.node, f.node, u), e.emit("node-drag-enter", p.node, d.node, u)), g || m || v ? o.value.dropNode = d : o.value.dropNode = null, d.node.nextSibling === p.node && (v = !1), d.node.previousSibling === p.node && (g = !1), d.node.contains(p.node, !1) && (m = !1), (p.node === d.node || p.node.contains(d.node)) && (g = !1, m = !1, v = !1);
      const b = d.$el.querySelector(`.${r.be("node", "content")}`).getBoundingClientRect(), w = t.value.getBoundingClientRect();
      let x;
      const S = g ? m ? 0.25 : v ? 0.45 : 1 : -1, C = v ? m ? 0.75 : g ? 0.55 : 0 : 1;
      let k = -9999;
      const E = u.clientY - b.top;
      E < b.height * S ? x = "before" : E > b.height * C ? x = "after" : m ? x = "inner" : x = "none";
      const M = d.$el.querySelector(`.${r.be("node", "expand-icon")}`).getBoundingClientRect(), _ = i.value;
      x === "before" ? k = M.top - w.top : x === "after" && (k = M.bottom - w.top), _.style.top = `${k}px`, _.style.left = `${M.right - w.left}px`, x === "inner" ? ru(d.$el, r.is("drop-inner")) : Mo(d.$el, r.is("drop-inner")), o.value.showDropIndicator = x === "before" || x === "after", o.value.allowDrop = o.value.showDropIndicator || O, o.value.dropType = x, e.emit("node-drag-over", p.node, d.node, u);
    },
    treeNodeDragEnd: (u) => {
      const { draggingNode: h, dropType: d, dropNode: f } = o.value;
      if (u.preventDefault(), u.dataTransfer.dropEffect = "move", h && f) {
        const p = { data: h.node.data };
        d !== "none" && h.node.remove(), d === "before" ? f.node.parent.insertBefore(p, f.node) : d === "after" ? f.node.parent.insertAfter(p, f.node) : d === "inner" && f.node.insertChild(p), d !== "none" && s.value.registerNode(p), Mo(f.$el, r.is("drop-inner")), e.emit("node-drag-end", h.node, f.node, d, u), d !== "none" && e.emit("node-drop", h.node, f.node, d, u);
      }
      h && !f && e.emit("node-drag-end", h.node, null, d, u), o.value.showDropIndicator = !1, o.value.draggingNode = null, o.value.dropNode = null, o.value.allowDrop = !0;
    }
  }), {
    dragState: o
  };
}
const PK = F({
  name: "ElTreeNode",
  components: {
    ElCollapseTransition: TT,
    ElCheckbox: uo,
    NodeContent: CK,
    ElIcon: Fe,
    Loading: tc
  },
  props: {
    node: {
      type: xy,
      default: () => ({})
    },
    props: {
      type: Object,
      default: () => ({})
    },
    accordion: Boolean,
    renderContent: Function,
    renderAfterExpand: Boolean,
    showCheckbox: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["node-expand"],
  setup(n, e) {
    const t = me("tree"), { broadcastExpanded: i } = v_(n), s = ke("RootTree"), r = D(!1), o = D(!1), l = D(null), a = D(null), c = D(null), u = ke(b_), h = Xe();
    ft("NodeInstance", h), s || pt("Tree", "Can not find node's tree."), n.node.expanded && (r.value = !0, o.value = !0);
    const d = s.props.props.children || "children";
    ne(() => {
      const E = n.node.data[d];
      return E && [...E];
    }, () => {
      n.node.updateChildren();
    }), ne(() => n.node.indeterminate, (E) => {
      g(n.node.checked, E);
    }), ne(() => n.node.checked, (E) => {
      g(E, n.node.indeterminate);
    }), ne(() => n.node.expanded, (E) => {
      $e(() => r.value = E), E && (o.value = !0);
    });
    const f = (E) => ew(s.props.nodeKey, E.data), p = (E) => {
      const M = n.props.class;
      if (!M)
        return {};
      let _;
      if (wt(M)) {
        const { data: T } = E;
        _ = M(T, E);
      } else
        _ = M;
      return bt(_) ? { [_]: !0 } : _;
    }, g = (E, M) => {
      (l.value !== E || a.value !== M) && s.ctx.emit("check-change", n.node.data, E, M), l.value = E, a.value = M;
    }, m = (E) => {
      Oy(s.store, s.ctx.emit, () => s.store.value.setCurrentNode(n.node)), s.currentNode.value = n.node, s.props.expandOnClickNode && O(), s.props.checkOnClickNode && !n.node.disabled && b(null, {
        target: { checked: !n.node.checked }
      }), s.ctx.emit("node-click", n.node.data, n.node, h, E);
    }, v = (E) => {
      s.instance.vnode.props.onNodeContextmenu && (E.stopPropagation(), E.preventDefault()), s.ctx.emit("node-contextmenu", E, n.node.data, n.node, h);
    }, O = () => {
      n.node.isLeaf || (r.value ? (s.ctx.emit("node-collapse", n.node.data, n.node, h), n.node.collapse()) : (n.node.expand(), e.emit("node-expand", n.node.data, n.node, h)));
    }, b = (E, M) => {
      n.node.setChecked(M.target.checked, !s.props.checkStrictly), $e(() => {
        const _ = s.store.value;
        s.ctx.emit("check", n.node.data, {
          checkedNodes: _.getCheckedNodes(),
          checkedKeys: _.getCheckedKeys(),
          halfCheckedNodes: _.getHalfCheckedNodes(),
          halfCheckedKeys: _.getHalfCheckedKeys()
        });
      });
    };
    return {
      ns: t,
      node$: c,
      tree: s,
      expanded: r,
      childNodeRendered: o,
      oldChecked: l,
      oldIndeterminate: a,
      getNodeKey: f,
      getNodeClass: p,
      handleSelectChange: g,
      handleClick: m,
      handleContextMenu: v,
      handleExpandIconClick: O,
      handleCheckChange: b,
      handleChildNodeExpand: (E, M, _) => {
        i(M), s.ctx.emit("node-expand", E, M, _);
      },
      handleDragStart: (E) => {
        s.props.draggable && u.treeNodeDragStart({ event: E, treeNode: n });
      },
      handleDragOver: (E) => {
        E.preventDefault(), s.props.draggable && u.treeNodeDragOver({
          event: E,
          treeNode: { $el: c.value, node: n.node }
        });
      },
      handleDrop: (E) => {
        E.preventDefault();
      },
      handleDragEnd: (E) => {
        s.props.draggable && u.treeNodeDragEnd(E);
      },
      CaretRight: Az
    };
  }
}), EK = ["aria-expanded", "aria-disabled", "aria-checked", "draggable", "data-key"], AK = ["aria-expanded"];
function $K(n, e, t, i, s, r) {
  const o = nt("el-icon"), l = nt("el-checkbox"), a = nt("loading"), c = nt("node-content"), u = nt("el-tree-node"), h = nt("el-collapse-transition");
  return it((R(), V("div", {
    ref: "node$",
    class: L([
      n.ns.b("node"),
      n.ns.is("expanded", n.expanded),
      n.ns.is("current", n.node.isCurrent),
      n.ns.is("hidden", !n.node.visible),
      n.ns.is("focusable", !n.node.disabled),
      n.ns.is("checked", !n.node.disabled && n.node.checked),
      n.getNodeClass(n.node)
    ]),
    role: "treeitem",
    tabindex: "-1",
    "aria-expanded": n.expanded,
    "aria-disabled": n.node.disabled,
    "aria-checked": n.node.checked,
    draggable: n.tree.props.draggable,
    "data-key": n.getNodeKey(n.node),
    onClick: e[1] || (e[1] = Le((...d) => n.handleClick && n.handleClick(...d), ["stop"])),
    onContextmenu: e[2] || (e[2] = (...d) => n.handleContextMenu && n.handleContextMenu(...d)),
    onDragstart: e[3] || (e[3] = Le((...d) => n.handleDragStart && n.handleDragStart(...d), ["stop"])),
    onDragover: e[4] || (e[4] = Le((...d) => n.handleDragOver && n.handleDragOver(...d), ["stop"])),
    onDragend: e[5] || (e[5] = Le((...d) => n.handleDragEnd && n.handleDragEnd(...d), ["stop"])),
    onDrop: e[6] || (e[6] = Le((...d) => n.handleDrop && n.handleDrop(...d), ["stop"]))
  }, [
    Z("div", {
      class: L(n.ns.be("node", "content")),
      style: Qe({ paddingLeft: (n.node.level - 1) * n.tree.props.indent + "px" })
    }, [
      n.tree.props.icon || n.CaretRight ? (R(), ie(o, {
        key: 0,
        class: L([
          n.ns.be("node", "expand-icon"),
          n.ns.is("leaf", n.node.isLeaf),
          {
            expanded: !n.node.isLeaf && n.expanded
          }
        ]),
        onClick: Le(n.handleExpandIconClick, ["stop"])
      }, {
        default: Y(() => [
          (R(), ie(yt(n.tree.props.icon || n.CaretRight)))
        ]),
        _: 1
      }, 8, ["class", "onClick"])) : G("v-if", !0),
      n.showCheckbox ? (R(), ie(l, {
        key: 1,
        "model-value": n.node.checked,
        indeterminate: n.node.indeterminate,
        disabled: !!n.node.disabled,
        onClick: e[0] || (e[0] = Le(() => {
        }, ["stop"])),
        onChange: n.handleCheckChange
      }, null, 8, ["model-value", "indeterminate", "disabled", "onChange"])) : G("v-if", !0),
      n.node.loading ? (R(), ie(o, {
        key: 2,
        class: L([n.ns.be("node", "loading-icon"), n.ns.is("loading")])
      }, {
        default: Y(() => [
          K(a)
        ]),
        _: 1
      }, 8, ["class"])) : G("v-if", !0),
      K(c, {
        node: n.node,
        "render-content": n.renderContent
      }, null, 8, ["node", "render-content"])
    ], 6),
    K(h, null, {
      default: Y(() => [
        !n.renderAfterExpand || n.childNodeRendered ? it((R(), V("div", {
          key: 0,
          class: L(n.ns.be("node", "children")),
          role: "group",
          "aria-expanded": n.expanded
        }, [
          (R(!0), V(Tt, null, oi(n.node.childNodes, (d) => (R(), ie(u, {
            key: n.getNodeKey(d),
            "render-content": n.renderContent,
            "render-after-expand": n.renderAfterExpand,
            "show-checkbox": n.showCheckbox,
            node: d,
            accordion: n.accordion,
            props: n.props,
            onNodeExpand: n.handleChildNodeExpand
          }, null, 8, ["render-content", "render-after-expand", "show-checkbox", "node", "accordion", "props", "onNodeExpand"]))), 128))
        ], 10, AK)), [
          [Qt, n.expanded]
        ]) : G("v-if", !0)
      ]),
      _: 1
    })
  ], 42, EK)), [
    [Qt, n.node.visible]
  ]);
}
var TK = /* @__PURE__ */ Ce(PK, [["render", $K], ["__file", "tree-node.vue"]]);
function _K({ el$: n }, e) {
  const t = me("tree"), i = Ln([]), s = Ln([]);
  qe(() => {
    o();
  }), Zl(() => {
    i.value = Array.from(n.value.querySelectorAll("[role=treeitem]")), s.value = Array.from(n.value.querySelectorAll("input[type=checkbox]"));
  }), ne(s, (l) => {
    l.forEach((a) => {
      a.setAttribute("tabindex", "-1");
    });
  }), Zi(n, "keydown", (l) => {
    const a = l.target;
    if (!a.className.includes(t.b("node")))
      return;
    const c = l.code;
    i.value = Array.from(n.value.querySelectorAll(`.${t.is("focusable")}[role=treeitem]`));
    const u = i.value.indexOf(a);
    let h;
    if ([dt.up, dt.down].includes(c)) {
      if (l.preventDefault(), c === dt.up) {
        h = u === -1 ? 0 : u !== 0 ? u - 1 : i.value.length - 1;
        const f = h;
        for (; !e.value.getNode(i.value[h].dataset.key).canFocus; ) {
          if (h--, h === f) {
            h = -1;
            break;
          }
          h < 0 && (h = i.value.length - 1);
        }
      } else {
        h = u === -1 ? 0 : u < i.value.length - 1 ? u + 1 : 0;
        const f = h;
        for (; !e.value.getNode(i.value[h].dataset.key).canFocus; ) {
          if (h++, h === f) {
            h = -1;
            break;
          }
          h >= i.value.length && (h = 0);
        }
      }
      h !== -1 && i.value[h].focus();
    }
    [dt.left, dt.right].includes(c) && (l.preventDefault(), a.click());
    const d = a.querySelector('[type="checkbox"]');
    [dt.enter, dt.space].includes(c) && d && (l.preventDefault(), d.click());
  });
  const o = () => {
    var l;
    i.value = Array.from(n.value.querySelectorAll(`.${t.is("focusable")}[role=treeitem]`)), s.value = Array.from(n.value.querySelectorAll("input[type=checkbox]"));
    const a = n.value.querySelectorAll(`.${t.is("checked")}[role=treeitem]`);
    if (a.length) {
      a[0].setAttribute("tabindex", "0");
      return;
    }
    (l = i.value[0]) == null || l.setAttribute("tabindex", "0");
  };
}
const MK = F({
  name: "ElTree",
  components: { ElTreeNode: TK },
  props: {
    data: {
      type: Array,
      default: () => []
    },
    emptyText: {
      type: String
    },
    renderAfterExpand: {
      type: Boolean,
      default: !0
    },
    nodeKey: String,
    checkStrictly: Boolean,
    defaultExpandAll: Boolean,
    expandOnClickNode: {
      type: Boolean,
      default: !0
    },
    checkOnClickNode: Boolean,
    checkDescendants: {
      type: Boolean,
      default: !1
    },
    autoExpandParent: {
      type: Boolean,
      default: !0
    },
    defaultCheckedKeys: Array,
    defaultExpandedKeys: Array,
    currentNodeKey: [String, Number],
    renderContent: Function,
    showCheckbox: {
      type: Boolean,
      default: !1
    },
    draggable: {
      type: Boolean,
      default: !1
    },
    allowDrag: Function,
    allowDrop: Function,
    props: {
      type: Object,
      default: () => ({
        children: "children",
        label: "label",
        disabled: "disabled"
      })
    },
    lazy: {
      type: Boolean,
      default: !1
    },
    highlightCurrent: Boolean,
    load: Function,
    filterNodeMethod: Function,
    accordion: Boolean,
    indent: {
      type: Number,
      default: 18
    },
    icon: {
      type: kn
    }
  },
  emits: [
    "check-change",
    "current-change",
    "node-click",
    "node-contextmenu",
    "node-collapse",
    "node-expand",
    "check",
    "node-drag-start",
    "node-drag-end",
    "node-drop",
    "node-drag-leave",
    "node-drag-enter",
    "node-drag-over"
  ],
  setup(n, e) {
    const { t } = mn(), i = me("tree"), s = D(new xK({
      key: n.nodeKey,
      data: n.data,
      lazy: n.lazy,
      props: n.props,
      load: n.load,
      currentNodeKey: n.currentNodeKey,
      checkStrictly: n.checkStrictly,
      checkDescendants: n.checkDescendants,
      defaultCheckedKeys: n.defaultCheckedKeys,
      defaultExpandedKeys: n.defaultExpandedKeys,
      autoExpandParent: n.autoExpandParent,
      defaultExpandAll: n.defaultExpandAll,
      filterNodeMethod: n.filterNodeMethod
    }));
    s.value.initialize();
    const r = D(s.value.root), o = D(null), l = D(null), a = D(null), { broadcastExpanded: c } = v_(n), { dragState: u } = kK({
      props: n,
      ctx: e,
      el$: l,
      dropIndicator$: a,
      store: s
    });
    _K({ el$: l }, s);
    const h = $(() => {
      const { childNodes: N } = r.value;
      return !N || N.length === 0 || N.every(({ visible: q }) => !q);
    });
    ne(() => n.currentNodeKey, (N) => {
      s.value.setCurrentNodeKey(N);
    }), ne(() => n.defaultCheckedKeys, (N) => {
      s.value.setDefaultCheckedKey(N);
    }), ne(() => n.defaultExpandedKeys, (N) => {
      s.value.setDefaultExpandedKeys(N);
    }), ne(() => n.data, (N) => {
      s.value.setData(N);
    }, { deep: !0 }), ne(() => n.checkStrictly, (N) => {
      s.value.checkStrictly = N;
    });
    const d = (N) => {
      if (!n.filterNodeMethod)
        throw new Error("[Tree] filterNodeMethod is required when filter");
      s.value.filter(N);
    }, f = (N) => ew(n.nodeKey, N.data), p = (N) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in getNodePath");
      const q = s.value.getNode(N);
      if (!q)
        return [];
      const j = [q.data];
      let H = q.parent;
      for (; H && H !== r.value; )
        j.push(H.data), H = H.parent;
      return j.reverse();
    }, g = (N, q) => s.value.getCheckedNodes(N, q), m = (N) => s.value.getCheckedKeys(N), v = () => {
      const N = s.value.getCurrentNode();
      return N ? N.data : null;
    }, O = () => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in getCurrentKey");
      const N = v();
      return N ? N[n.nodeKey] : null;
    }, b = (N, q) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedNodes");
      s.value.setCheckedNodes(N, q);
    }, w = (N, q) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCheckedKeys");
      s.value.setCheckedKeys(N, q);
    }, x = (N, q, j) => {
      s.value.setChecked(N, q, j);
    }, S = () => s.value.getHalfCheckedNodes(), C = () => s.value.getHalfCheckedKeys(), k = (N, q = !0) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentNode");
      Oy(s, e.emit, () => s.value.setUserCurrentNode(N, q));
    }, E = (N, q = !0) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in setCurrentKey");
      Oy(s, e.emit, () => s.value.setCurrentNodeKey(N, q));
    }, M = (N) => s.value.getNode(N), _ = (N) => {
      s.value.remove(N);
    }, T = (N, q) => {
      s.value.append(N, q);
    }, B = (N, q) => {
      s.value.insertBefore(N, q);
    }, I = (N, q) => {
      s.value.insertAfter(N, q);
    }, P = (N, q, j) => {
      c(q), e.emit("node-expand", N, q, j);
    }, A = (N, q) => {
      if (!n.nodeKey)
        throw new Error("[Tree] nodeKey is required in updateKeyChild");
      s.value.updateChildren(N, q);
    };
    return ft("RootTree", {
      ctx: e,
      props: n,
      store: s,
      root: r,
      currentNode: o,
      instance: Xe()
    }), ft(Tl, void 0), {
      ns: i,
      store: s,
      root: r,
      currentNode: o,
      dragState: u,
      el$: l,
      dropIndicator$: a,
      isEmpty: h,
      filter: d,
      getNodeKey: f,
      getNodePath: p,
      getCheckedNodes: g,
      getCheckedKeys: m,
      getCurrentNode: v,
      getCurrentKey: O,
      setCheckedNodes: b,
      setCheckedKeys: w,
      setChecked: x,
      getHalfCheckedNodes: S,
      getHalfCheckedKeys: C,
      setCurrentNode: k,
      setCurrentKey: E,
      t,
      getNode: M,
      remove: _,
      append: T,
      insertBefore: B,
      insertAfter: I,
      handleNodeExpand: P,
      updateKeyChildren: A
    };
  }
});
function RK(n, e, t, i, s, r) {
  const o = nt("el-tree-node");
  return R(), V("div", {
    ref: "el$",
    class: L([
      n.ns.b(),
      n.ns.is("dragging", !!n.dragState.draggingNode),
      n.ns.is("drop-not-allow", !n.dragState.allowDrop),
      n.ns.is("drop-inner", n.dragState.dropType === "inner"),
      { [n.ns.m("highlight-current")]: n.highlightCurrent }
    ]),
    role: "tree"
  }, [
    (R(!0), V(Tt, null, oi(n.root.childNodes, (l) => (R(), ie(o, {
      key: n.getNodeKey(l),
      node: l,
      props: n.props,
      accordion: n.accordion,
      "render-after-expand": n.renderAfterExpand,
      "show-checkbox": n.showCheckbox,
      "render-content": n.renderContent,
      onNodeExpand: n.handleNodeExpand
    }, null, 8, ["node", "props", "accordion", "render-after-expand", "show-checkbox", "render-content", "onNodeExpand"]))), 128)),
    n.isEmpty ? (R(), V("div", {
      key: 0,
      class: L(n.ns.e("empty-block"))
    }, [
      de(n.$slots, "empty", {}, () => {
        var l;
        return [
          Z("span", {
            class: L(n.ns.e("empty-text"))
          }, xe((l = n.emptyText) != null ? l : n.t("el.tree.emptyText")), 3)
        ];
      })
    ], 2)) : G("v-if", !0),
    it(Z("div", {
      ref: "dropIndicator$",
      class: L(n.ns.e("drop-indicator"))
    }, null, 2), [
      [Qt, n.dragState.showDropIndicator]
    ])
  ], 2);
}
var ag = /* @__PURE__ */ Ce(MK, [["render", RK], ["__file", "tree.vue"]]);
ag.install = (n) => {
  n.component(ag.name, ag);
};
const NK = ag, DUe = NK, y_ = Symbol("uploadContextKey"), DK = "ElUpload";
class LK extends Error {
  constructor(e, t, i, s) {
    super(e), this.name = "UploadAjaxError", this.status = t, this.method = i, this.url = s;
  }
}
function BC(n, e, t) {
  let i;
  return t.response ? i = `${t.response.error || t.response}` : t.responseText ? i = `${t.responseText}` : i = `fail to ${e.method} ${n} ${t.status}`, new LK(i, t.status, e.method, n);
}
function IK(n) {
  const e = n.responseText || n.response;
  if (!e)
    return e;
  try {
    return JSON.parse(e);
  } catch {
    return e;
  }
}
const BK = (n) => {
  typeof XMLHttpRequest > "u" && hs(DK, "XMLHttpRequest is undefined");
  const e = new XMLHttpRequest(), t = n.action;
  e.upload && e.upload.addEventListener("progress", (r) => {
    const o = r;
    o.percent = r.total > 0 ? r.loaded / r.total * 100 : 0, n.onProgress(o);
  });
  const i = new FormData();
  if (n.data)
    for (const [r, o] of Object.entries(n.data))
      xt(o) && o.length ? i.append(r, ...o) : i.append(r, o);
  i.append(n.filename, n.file, n.file.name), e.addEventListener("error", () => {
    n.onError(BC(t, n, e));
  }), e.addEventListener("load", () => {
    if (e.status < 200 || e.status >= 300)
      return n.onError(BC(t, n, e));
    n.onSuccess(IK(e));
  }), e.open(n.method, t, !0), n.withCredentials && "withCredentials" in e && (e.withCredentials = !0);
  const s = n.headers || {};
  if (s instanceof Headers)
    s.forEach((r, o) => e.setRequestHeader(o, r));
  else
    for (const [r, o] of Object.entries(s))
      Ri(o) || e.setRequestHeader(r, String(o));
  return e.send(i), e;
}, O_ = ["text", "picture", "picture-card"];
let QK = 1;
const Sy = () => Date.now() + QK++, w_ = Ee({
  action: {
    type: String,
    default: "#"
  },
  headers: {
    type: ce(Object)
  },
  method: {
    type: String,
    default: "post"
  },
  data: {
    type: ce([Object, Function, Promise]),
    default: () => Ys({})
  },
  multiple: {
    type: Boolean,
    default: !1
  },
  name: {
    type: String,
    default: "file"
  },
  drag: {
    type: Boolean,
    default: !1
  },
  withCredentials: Boolean,
  showFileList: {
    type: Boolean,
    default: !0
  },
  accept: {
    type: String,
    default: ""
  },
  fileList: {
    type: ce(Array),
    default: () => Ys([])
  },
  autoUpload: {
    type: Boolean,
    default: !0
  },
  listType: {
    type: String,
    values: O_,
    default: "text"
  },
  httpRequest: {
    type: ce(Function),
    default: BK
  },
  disabled: Boolean,
  limit: Number
}), zK = Ee({
  ...w_,
  beforeUpload: {
    type: ce(Function),
    default: Xt
  },
  beforeRemove: {
    type: ce(Function)
  },
  onRemove: {
    type: ce(Function),
    default: Xt
  },
  onChange: {
    type: ce(Function),
    default: Xt
  },
  onPreview: {
    type: ce(Function),
    default: Xt
  },
  onSuccess: {
    type: ce(Function),
    default: Xt
  },
  onProgress: {
    type: ce(Function),
    default: Xt
  },
  onError: {
    type: ce(Function),
    default: Xt
  },
  onExceed: {
    type: ce(Function),
    default: Xt
  },
  crossorigin: {
    type: ce(String)
  }
}), jK = Ee({
  files: {
    type: ce(Array),
    default: () => Ys([])
  },
  disabled: {
    type: Boolean,
    default: !1
  },
  handlePreview: {
    type: ce(Function),
    default: Xt
  },
  listType: {
    type: String,
    values: O_,
    default: "text"
  },
  crossorigin: {
    type: ce(String)
  }
}), VK = {
  remove: (n) => !!n
}, FK = ["onKeydown"], ZK = ["src", "crossorigin"], qK = ["onClick"], WK = ["title"], HK = ["onClick"], XK = ["onClick"], YK = F({
  name: "ElUploadList"
}), UK = /* @__PURE__ */ F({
  ...YK,
  props: jK,
  emits: VK,
  setup(n, { emit: e }) {
    const t = n, { t: i } = mn(), s = me("upload"), r = me("icon"), o = me("list"), l = er(), a = D(!1), c = $(() => [
      s.b("list"),
      s.bm("list", t.listType),
      s.is("disabled", t.disabled)
    ]), u = (h) => {
      e("remove", h);
    };
    return (h, d) => (R(), ie(RE, {
      tag: "ul",
      class: L(y(c)),
      name: y(o).b()
    }, {
      default: Y(() => [
        (R(!0), V(Tt, null, oi(h.files, (f) => (R(), V("li", {
          key: f.uid || f.name,
          class: L([
            y(s).be("list", "item"),
            y(s).is(f.status),
            { focusing: a.value }
          ]),
          tabindex: "0",
          onKeydown: Ut((p) => !y(l) && u(f), ["delete"]),
          onFocus: d[0] || (d[0] = (p) => a.value = !0),
          onBlur: d[1] || (d[1] = (p) => a.value = !1),
          onClick: d[2] || (d[2] = (p) => a.value = !1)
        }, [
          de(h.$slots, "default", { file: f }, () => [
            h.listType === "picture" || f.status !== "uploading" && h.listType === "picture-card" ? (R(), V("img", {
              key: 0,
              class: L(y(s).be("list", "item-thumbnail")),
              src: f.url,
              crossorigin: h.crossorigin,
              alt: ""
            }, null, 10, ZK)) : G("v-if", !0),
            f.status === "uploading" || h.listType !== "picture-card" ? (R(), V("div", {
              key: 1,
              class: L(y(s).be("list", "item-info"))
            }, [
              Z("a", {
                class: L(y(s).be("list", "item-name")),
                onClick: Le((p) => h.handlePreview(f), ["prevent"])
              }, [
                K(y(Fe), {
                  class: L(y(r).m("document"))
                }, {
                  default: Y(() => [
                    K(y(Vz))
                  ]),
                  _: 1
                }, 8, ["class"]),
                Z("span", {
                  class: L(y(s).be("list", "item-file-name")),
                  title: f.name
                }, xe(f.name), 11, WK)
              ], 10, qK),
              f.status === "uploading" ? (R(), ie(y(XY), {
                key: 0,
                type: h.listType === "picture-card" ? "circle" : "line",
                "stroke-width": h.listType === "picture-card" ? 6 : 2,
                percentage: Number(f.percentage),
                style: Qe(h.listType === "picture-card" ? "" : "margin-top: 0.5rem")
              }, null, 8, ["type", "stroke-width", "percentage", "style"])) : G("v-if", !0)
            ], 2)) : G("v-if", !0),
            Z("label", {
              class: L(y(s).be("list", "item-status-label"))
            }, [
              h.listType === "text" ? (R(), ie(y(Fe), {
                key: 0,
                class: L([y(r).m("upload-success"), y(r).m("circle-check")])
              }, {
                default: Y(() => [
                  K(y(w1))
                ]),
                _: 1
              }, 8, ["class"])) : ["picture-card", "picture"].includes(h.listType) ? (R(), ie(y(Fe), {
                key: 1,
                class: L([y(r).m("upload-success"), y(r).m("check")])
              }, {
                default: Y(() => [
                  K(y(Jm))
                ]),
                _: 1
              }, 8, ["class"])) : G("v-if", !0)
            ], 2),
            y(l) ? G("v-if", !0) : (R(), ie(y(Fe), {
              key: 2,
              class: L(y(r).m("close")),
              onClick: (p) => u(f)
            }, {
              default: Y(() => [
                K(y(Lo))
              ]),
              _: 2
            }, 1032, ["class", "onClick"])),
            G(" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn"),
            G(" This is a bug which needs to be fixed "),
            G(" TODO: Fix the incorrect navigation interaction "),
            y(l) ? G("v-if", !0) : (R(), V("i", {
              key: 3,
              class: L(y(r).m("close-tip"))
            }, xe(y(i)("el.upload.deleteTip")), 3)),
            h.listType === "picture-card" ? (R(), V("span", {
              key: 4,
              class: L(y(s).be("list", "item-actions"))
            }, [
              Z("span", {
                class: L(y(s).be("list", "item-preview")),
                onClick: (p) => h.handlePreview(f)
              }, [
                K(y(Fe), {
                  class: L(y(r).m("zoom-in"))
                }, {
                  default: Y(() => [
                    K(y(Rj))
                  ]),
                  _: 1
                }, 8, ["class"])
              ], 10, HK),
              y(l) ? G("v-if", !0) : (R(), V("span", {
                key: 0,
                class: L(y(s).be("list", "item-delete")),
                onClick: (p) => u(f)
              }, [
                K(y(Fe), {
                  class: L(y(r).m("delete"))
                }, {
                  default: Y(() => [
                    K(y(zz))
                  ]),
                  _: 1
                }, 8, ["class"])
              ], 10, XK))
            ], 2)) : G("v-if", !0)
          ])
        ], 42, FK))), 128)),
        de(h.$slots, "append")
      ]),
      _: 3
    }, 8, ["class", "name"]));
  }
});
var QC = /* @__PURE__ */ Ce(UK, [["__file", "upload-list.vue"]]);
const GK = Ee({
  disabled: {
    type: Boolean,
    default: !1
  }
}), KK = {
  file: (n) => xt(n)
}, JK = ["onDrop", "onDragover"], x_ = "ElUploadDrag", eJ = F({
  name: x_
}), tJ = /* @__PURE__ */ F({
  ...eJ,
  props: GK,
  emits: KK,
  setup(n, { emit: e }) {
    const t = ke(y_);
    t || hs(x_, "usage: <el-upload><el-upload-dragger /></el-upload>");
    const i = me("upload"), s = D(!1), r = er(), o = (a) => {
      if (r.value)
        return;
      s.value = !1, a.stopPropagation();
      const c = Array.from(a.dataTransfer.files), u = t.accept.value;
      if (!u) {
        e("file", c);
        return;
      }
      const h = c.filter((d) => {
        const { type: f, name: p } = d, g = p.includes(".") ? `.${p.split(".").pop()}` : "", m = f.replace(/\/.*$/, "");
        return u.split(",").map((v) => v.trim()).filter((v) => v).some((v) => v.startsWith(".") ? g === v : /\/\*$/.test(v) ? m === v.replace(/\/\*$/, "") : /^[^/]+\/[^/]+$/.test(v) ? f === v : !1);
      });
      e("file", h);
    }, l = () => {
      r.value || (s.value = !0);
    };
    return (a, c) => (R(), V("div", {
      class: L([y(i).b("dragger"), y(i).is("dragover", s.value)]),
      onDrop: Le(o, ["prevent"]),
      onDragover: Le(l, ["prevent"]),
      onDragleave: c[0] || (c[0] = Le((u) => s.value = !1, ["prevent"]))
    }, [
      de(a.$slots, "default")
    ], 42, JK));
  }
});
var nJ = /* @__PURE__ */ Ce(tJ, [["__file", "upload-dragger.vue"]]);
const iJ = Ee({
  ...w_,
  beforeUpload: {
    type: ce(Function),
    default: Xt
  },
  onRemove: {
    type: ce(Function),
    default: Xt
  },
  onStart: {
    type: ce(Function),
    default: Xt
  },
  onSuccess: {
    type: ce(Function),
    default: Xt
  },
  onProgress: {
    type: ce(Function),
    default: Xt
  },
  onError: {
    type: ce(Function),
    default: Xt
  },
  onExceed: {
    type: ce(Function),
    default: Xt
  }
}), sJ = ["onKeydown"], rJ = ["name", "multiple", "accept"], oJ = F({
  name: "ElUploadContent",
  inheritAttrs: !1
}), lJ = /* @__PURE__ */ F({
  ...oJ,
  props: iJ,
  setup(n, { expose: e }) {
    const t = n, i = me("upload"), s = er(), r = Ln({}), o = Ln(), l = (g) => {
      if (g.length === 0)
        return;
      const { autoUpload: m, limit: v, fileList: O, multiple: b, onStart: w, onExceed: x } = t;
      if (v && O.length + g.length > v) {
        x(g, O);
        return;
      }
      b || (g = g.slice(0, 1));
      for (const S of g) {
        const C = S;
        C.uid = Sy(), w(C), m && a(C);
      }
    }, a = async (g) => {
      if (o.value.value = "", !t.beforeUpload)
        return u(g);
      let m, v = {};
      try {
        const b = t.data, w = t.beforeUpload(g);
        v = AS(t.data) ? Bt(t.data) : t.data, m = await w, AS(t.data) && cn(b, v) && (v = Bt(t.data));
      } catch {
        m = !1;
      }
      if (m === !1) {
        t.onRemove(g);
        return;
      }
      let O = g;
      m instanceof Blob && (m instanceof File ? O = m : O = new File([m], g.name, {
        type: g.type
      })), u(Object.assign(O, {
        uid: g.uid
      }), v);
    }, c = async (g, m) => wt(g) ? g(m) : g, u = async (g, m) => {
      const {
        headers: v,
        data: O,
        method: b,
        withCredentials: w,
        name: x,
        action: S,
        onProgress: C,
        onSuccess: k,
        onError: E,
        httpRequest: M
      } = t;
      try {
        m = await c(m ?? O, g);
      } catch {
        t.onRemove(g);
        return;
      }
      const { uid: _ } = g, T = {
        headers: v || {},
        withCredentials: w,
        file: g,
        data: m,
        method: b,
        filename: x,
        action: S,
        onProgress: (I) => {
          C(I, g);
        },
        onSuccess: (I) => {
          k(I, g), delete r.value[_];
        },
        onError: (I) => {
          E(I, g), delete r.value[_];
        }
      }, B = M(T);
      r.value[_] = B, B instanceof Promise && B.then(T.onSuccess, T.onError);
    }, h = (g) => {
      const m = g.target.files;
      m && l(Array.from(m));
    }, d = () => {
      s.value || (o.value.value = "", o.value.click());
    }, f = () => {
      d();
    };
    return e({
      abort: (g) => {
        rF(r.value).filter(g ? ([v]) => String(g.uid) === v : () => !0).forEach(([v, O]) => {
          O instanceof XMLHttpRequest && O.abort(), delete r.value[v];
        });
      },
      upload: a
    }), (g, m) => (R(), V("div", {
      class: L([y(i).b(), y(i).m(g.listType), y(i).is("drag", g.drag)]),
      tabindex: "0",
      onClick: d,
      onKeydown: Ut(Le(f, ["self"]), ["enter", "space"])
    }, [
      g.drag ? (R(), ie(nJ, {
        key: 0,
        disabled: y(s),
        onFile: l
      }, {
        default: Y(() => [
          de(g.$slots, "default")
        ]),
        _: 3
      }, 8, ["disabled"])) : de(g.$slots, "default", { key: 1 }),
      Z("input", {
        ref_key: "inputRef",
        ref: o,
        class: L(y(i).e("input")),
        name: g.name,
        multiple: g.multiple,
        accept: g.accept,
        type: "file",
        onChange: h,
        onClick: m[0] || (m[0] = Le(() => {
        }, ["stop"]))
      }, null, 42, rJ)
    ], 42, sJ));
  }
});
var zC = /* @__PURE__ */ Ce(lJ, [["__file", "upload-content.vue"]]);
const jC = "ElUpload", VC = (n) => {
  var e;
  (e = n.url) != null && e.startsWith("blob:") && URL.revokeObjectURL(n.url);
}, aJ = (n, e) => {
  const t = YV(n, "fileList", void 0, { passive: !0 }), i = (d) => t.value.find((f) => f.uid === d.uid);
  function s(d) {
    var f;
    (f = e.value) == null || f.abort(d);
  }
  function r(d = ["ready", "uploading", "success", "fail"]) {
    t.value = t.value.filter((f) => !d.includes(f.status));
  }
  const o = (d, f) => {
    const p = i(f);
    p && (console.error(d), p.status = "fail", t.value.splice(t.value.indexOf(p), 1), n.onError(d, p, t.value), n.onChange(p, t.value));
  }, l = (d, f) => {
    const p = i(f);
    p && (n.onProgress(d, p, t.value), p.status = "uploading", p.percentage = Math.round(d.percent));
  }, a = (d, f) => {
    const p = i(f);
    p && (p.status = "success", p.response = d, n.onSuccess(d, p, t.value), n.onChange(p, t.value));
  }, c = (d) => {
    Ri(d.uid) && (d.uid = Sy());
    const f = {
      name: d.name,
      percentage: 0,
      status: "ready",
      size: d.size,
      raw: d,
      uid: d.uid
    };
    if (n.listType === "picture-card" || n.listType === "picture")
      try {
        f.url = URL.createObjectURL(d);
      } catch (p) {
        pt(jC, p.message), n.onError(p, f, t.value);
      }
    t.value = [...t.value, f], n.onChange(f, t.value);
  }, u = async (d) => {
    const f = d instanceof File ? i(d) : d;
    f || hs(jC, "file to be removed not found");
    const p = (g) => {
      s(g);
      const m = t.value;
      m.splice(m.indexOf(g), 1), n.onRemove(g, m), VC(g);
    };
    n.beforeRemove ? await n.beforeRemove(f, t.value) !== !1 && p(f) : p(f);
  };
  function h() {
    t.value.filter(({ status: d }) => d === "ready").forEach(({ raw: d }) => {
      var f;
      return d && ((f = e.value) == null ? void 0 : f.upload(d));
    });
  }
  return ne(() => n.listType, (d) => {
    d !== "picture-card" && d !== "picture" || (t.value = t.value.map((f) => {
      const { raw: p, url: g } = f;
      if (!g && p)
        try {
          f.url = URL.createObjectURL(p);
        } catch (m) {
          n.onError(m, f, t.value);
        }
      return f;
    }));
  }), ne(t, (d) => {
    for (const f of d)
      f.uid || (f.uid = Sy()), f.status || (f.status = "success");
  }, { immediate: !0, deep: !0 }), {
    uploadFiles: t,
    abort: s,
    clearFiles: r,
    handleError: o,
    handleProgress: l,
    handleStart: c,
    handleSuccess: a,
    handleRemove: u,
    submit: h,
    revokeFileObjectURL: VC
  };
}, cJ = F({
  name: "ElUpload"
}), uJ = /* @__PURE__ */ F({
  ...cJ,
  props: zK,
  setup(n, { expose: e }) {
    const t = n, i = er(), s = Ln(), {
      abort: r,
      submit: o,
      clearFiles: l,
      uploadFiles: a,
      handleStart: c,
      handleError: u,
      handleRemove: h,
      handleSuccess: d,
      handleProgress: f,
      revokeFileObjectURL: p
    } = aJ(t, s), g = $(() => t.listType === "picture-card"), m = $(() => ({
      ...t,
      fileList: a.value,
      onStart: c,
      onProgress: f,
      onSuccess: d,
      onError: u,
      onRemove: h
    }));
    return Gn(() => {
      a.value.forEach(p);
    }), ft(y_, {
      accept: ks(t, "accept")
    }), e({
      abort: r,
      submit: o,
      clearFiles: l,
      handleStart: c,
      handleRemove: h
    }), (v, O) => (R(), V("div", null, [
      y(g) && v.showFileList ? (R(), ie(QC, {
        key: 0,
        disabled: y(i),
        "list-type": v.listType,
        files: y(a),
        crossorigin: v.crossorigin,
        "handle-preview": v.onPreview,
        onRemove: y(h)
      }, _g({
        append: Y(() => [
          K(zC, ki({
            ref_key: "uploadRef",
            ref: s
          }, y(m)), {
            default: Y(() => [
              v.$slots.trigger ? de(v.$slots, "trigger", { key: 0 }) : G("v-if", !0),
              !v.$slots.trigger && v.$slots.default ? de(v.$slots, "default", { key: 1 }) : G("v-if", !0)
            ]),
            _: 3
          }, 16)
        ]),
        _: 2
      }, [
        v.$slots.file ? {
          name: "default",
          fn: Y(({ file: b }) => [
            de(v.$slots, "file", { file: b })
          ])
        } : void 0
      ]), 1032, ["disabled", "list-type", "files", "crossorigin", "handle-preview", "onRemove"])) : G("v-if", !0),
      !y(g) || y(g) && !v.showFileList ? (R(), ie(zC, ki({
        key: 1,
        ref_key: "uploadRef",
        ref: s
      }, y(m)), {
        default: Y(() => [
          v.$slots.trigger ? de(v.$slots, "trigger", { key: 0 }) : G("v-if", !0),
          !v.$slots.trigger && v.$slots.default ? de(v.$slots, "default", { key: 1 }) : G("v-if", !0)
        ]),
        _: 3
      }, 16)) : G("v-if", !0),
      v.$slots.trigger ? de(v.$slots, "default", { key: 2 }) : G("v-if", !0),
      de(v.$slots, "tip"),
      !y(g) && v.showFileList ? (R(), ie(QC, {
        key: 3,
        disabled: y(i),
        "list-type": v.listType,
        files: y(a),
        crossorigin: v.crossorigin,
        "handle-preview": v.onPreview,
        onRemove: y(h)
      }, _g({ _: 2 }, [
        v.$slots.file ? {
          name: "default",
          fn: Y(({ file: b }) => [
            de(v.$slots, "file", { file: b })
          ])
        } : void 0
      ]), 1032, ["disabled", "list-type", "files", "crossorigin", "handle-preview", "onRemove"])) : G("v-if", !0)
    ]));
  }
});
var hJ = /* @__PURE__ */ Ce(uJ, [["__file", "upload.vue"]]);
const LUe = Ft(hJ), S_ = ["success", "info", "warning", "error"], Ki = Ys({
  customClass: "",
  center: !1,
  dangerouslyUseHTMLString: !1,
  duration: 3e3,
  icon: void 0,
  id: "",
  message: "",
  onClose: void 0,
  showClose: !1,
  type: "info",
  offset: 16,
  zIndex: 0,
  grouping: !1,
  repeatNum: 1,
  appendTo: vt ? document.body : void 0
}), dJ = Ee({
  customClass: {
    type: String,
    default: Ki.customClass
  },
  center: {
    type: Boolean,
    default: Ki.center
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: Ki.dangerouslyUseHTMLString
  },
  duration: {
    type: Number,
    default: Ki.duration
  },
  icon: {
    type: kn,
    default: Ki.icon
  },
  id: {
    type: String,
    default: Ki.id
  },
  message: {
    type: ce([
      String,
      Object,
      Function
    ]),
    default: Ki.message
  },
  onClose: {
    type: ce(Function),
    required: !1
  },
  showClose: {
    type: Boolean,
    default: Ki.showClose
  },
  type: {
    type: String,
    values: S_,
    default: Ki.type
  },
  offset: {
    type: Number,
    default: Ki.offset
  },
  zIndex: {
    type: Number,
    default: Ki.zIndex
  },
  grouping: {
    type: Boolean,
    default: Ki.grouping
  },
  repeatNum: {
    type: Number,
    default: Ki.repeatNum
  }
}), fJ = {
  destroy: () => !0
}, pr = q4([]), pJ = (n) => {
  const e = pr.findIndex((s) => s.id === n), t = pr[e];
  let i;
  return e > 0 && (i = pr[e - 1]), { current: t, prev: i };
}, gJ = (n) => {
  const { prev: e } = pJ(n);
  return e ? e.vm.exposed.bottom.value : 0;
}, mJ = (n, e) => pr.findIndex((i) => i.id === n) > 0 ? 20 : e, vJ = ["id"], bJ = ["innerHTML"], yJ = F({
  name: "ElMessage"
}), OJ = /* @__PURE__ */ F({
  ...yJ,
  props: dJ,
  emits: fJ,
  setup(n, { expose: e }) {
    const t = n, { Close: i } = y$, { ns: s, zIndex: r } = Q1("message"), { currentZIndex: o, nextZIndex: l } = r, a = D(), c = D(!1), u = D(0);
    let h;
    const d = $(() => t.type ? t.type === "error" ? "danger" : t.type : "info"), f = $(() => {
      const C = t.type;
      return { [s.bm("icon", C)]: C && ou[C] };
    }), p = $(() => t.icon || ou[t.type] || ""), g = $(() => gJ(t.id)), m = $(() => mJ(t.id, t.offset) + g.value), v = $(() => u.value + m.value), O = $(() => ({
      top: `${m.value}px`,
      zIndex: o.value
    }));
    function b() {
      t.duration !== 0 && ({ stop: h } = Bg(() => {
        x();
      }, t.duration));
    }
    function w() {
      h == null || h();
    }
    function x() {
      c.value = !1;
    }
    function S({ code: C }) {
      C === dt.esc && x();
    }
    return qe(() => {
      b(), l(), c.value = !0;
    }), ne(() => t.repeatNum, () => {
      w(), b();
    }), Zi(document, "keydown", S), pn(a, () => {
      u.value = a.value.getBoundingClientRect().height;
    }), e({
      visible: c,
      bottom: v,
      close: x
    }), (C, k) => (R(), ie(mo, {
      name: y(s).b("fade"),
      onBeforeLeave: C.onClose,
      onAfterLeave: k[0] || (k[0] = (E) => C.$emit("destroy")),
      persisted: ""
    }, {
      default: Y(() => [
        it(Z("div", {
          id: C.id,
          ref_key: "messageRef",
          ref: a,
          class: L([
            y(s).b(),
            { [y(s).m(C.type)]: C.type },
            y(s).is("center", C.center),
            y(s).is("closable", C.showClose),
            C.customClass
          ]),
          style: Qe(y(O)),
          role: "alert",
          onMouseenter: w,
          onMouseleave: b
        }, [
          C.repeatNum > 1 ? (R(), ie(y(W7), {
            key: 0,
            value: C.repeatNum,
            type: y(d),
            class: L(y(s).e("badge"))
          }, null, 8, ["value", "type", "class"])) : G("v-if", !0),
          y(p) ? (R(), ie(y(Fe), {
            key: 1,
            class: L([y(s).e("icon"), y(f)])
          }, {
            default: Y(() => [
              (R(), ie(yt(y(p))))
            ]),
            _: 1
          }, 8, ["class"])) : G("v-if", !0),
          de(C.$slots, "default", {}, () => [
            C.dangerouslyUseHTMLString ? (R(), V(Tt, { key: 1 }, [
              G(" Caution here, message could've been compromised, never use user's input as message "),
              Z("p", {
                class: L(y(s).e("content")),
                innerHTML: C.message
              }, null, 10, bJ)
            ], 2112)) : (R(), V("p", {
              key: 0,
              class: L(y(s).e("content"))
            }, xe(C.message), 3))
          ]),
          C.showClose ? (R(), ie(y(Fe), {
            key: 2,
            class: L(y(s).e("closeBtn")),
            onClick: Le(x, ["stop"])
          }, {
            default: Y(() => [
              K(y(i))
            ]),
            _: 1
          }, 8, ["class", "onClick"])) : G("v-if", !0)
        ], 46, vJ), [
          [Qt, c.value]
        ])
      ]),
      _: 3
    }, 8, ["name", "onBeforeLeave"]));
  }
});
var wJ = /* @__PURE__ */ Ce(OJ, [["__file", "message.vue"]]);
let xJ = 1;
const C_ = (n) => {
  const e = !n || bt(n) || lo(n) || wt(n) ? { message: n } : n, t = {
    ...Ki,
    ...e
  };
  if (!t.appendTo)
    t.appendTo = document.body;
  else if (bt(t.appendTo)) {
    let i = document.querySelector(t.appendTo);
    yr(i) || (pt("ElMessage", "the appendTo option is not an HTMLElement. Falling back to document.body."), i = document.body), t.appendTo = i;
  }
  return t;
}, SJ = (n) => {
  const e = pr.indexOf(n);
  if (e === -1)
    return;
  pr.splice(e, 1);
  const { handler: t } = n;
  t.close();
}, CJ = ({ appendTo: n, ...e }, t) => {
  const i = `message_${xJ++}`, s = e.onClose, r = document.createElement("div"), o = {
    ...e,
    id: i,
    onClose: () => {
      s == null || s(), SJ(u);
    },
    onDestroy: () => {
      $l(null, r);
    }
  }, l = K(wJ, o, wt(o.message) || lo(o.message) ? {
    default: wt(o.message) ? o.message : () => o.message
  } : null);
  l.appContext = t || pu._context, $l(l, r), n.appendChild(r.firstElementChild);
  const a = l.component, u = {
    id: i,
    vnode: l,
    vm: a,
    handler: {
      close: () => {
        a.exposed.visible.value = !1;
      }
    },
    props: l.component.props
  };
  return u;
}, pu = (n = {}, e) => {
  if (!vt)
    return { close: () => {
    } };
  if (tt(Hb.max) && pr.length >= Hb.max)
    return { close: () => {
    } };
  const t = C_(n);
  if (t.grouping && pr.length) {
    const s = pr.find(({ vnode: r }) => {
      var o;
      return ((o = r.props) == null ? void 0 : o.message) === t.message;
    });
    if (s)
      return s.props.repeatNum += 1, s.props.type = t.type, s.handler;
  }
  const i = CJ(t, e);
  return pr.push(i), i.handler;
};
S_.forEach((n) => {
  pu[n] = (e = {}, t) => {
    const i = C_(e);
    return pu({ ...i, type: n }, t);
  };
});
function kJ(n) {
  for (const e of pr)
    (!n || n === e.props.type) && e.handler.close();
}
pu.closeAll = kJ;
pu._context = null;
const IUe = O$(pu, "$message"), PJ = F({
  name: "ElMessageBox",
  directives: {
    TrapFocus: O9
  },
  components: {
    ElButton: Qa,
    ElFocusTrap: r0,
    ElInput: ic,
    ElOverlay: W1,
    ElIcon: Fe,
    ...y$
  },
  inheritAttrs: !1,
  props: {
    buttonSize: {
      type: String,
      validator: w$
    },
    modal: {
      type: Boolean,
      default: !0
    },
    lockScroll: {
      type: Boolean,
      default: !0
    },
    showClose: {
      type: Boolean,
      default: !0
    },
    closeOnClickModal: {
      type: Boolean,
      default: !0
    },
    closeOnPressEscape: {
      type: Boolean,
      default: !0
    },
    closeOnHashChange: {
      type: Boolean,
      default: !0
    },
    center: Boolean,
    draggable: Boolean,
    overflow: Boolean,
    roundButton: {
      default: !1,
      type: Boolean
    },
    container: {
      type: String,
      default: "body"
    },
    boxType: {
      type: String,
      default: ""
    }
  },
  emits: ["vanish", "action"],
  setup(n, { emit: e }) {
    const {
      locale: t,
      zIndex: i,
      ns: s,
      size: r
    } = Q1("message-box", $(() => n.buttonSize)), { t: o } = t, { nextZIndex: l } = i, a = D(!1), c = Gt({
      autofocus: !0,
      beforeClose: null,
      callback: null,
      cancelButtonText: "",
      cancelButtonClass: "",
      confirmButtonText: "",
      confirmButtonClass: "",
      customClass: "",
      customStyle: {},
      dangerouslyUseHTMLString: !1,
      distinguishCancelAndClose: !1,
      icon: "",
      inputPattern: null,
      inputPlaceholder: "",
      inputType: "text",
      inputValue: null,
      inputValidator: null,
      inputErrorMessage: "",
      message: null,
      modalFade: !0,
      modalClass: "",
      showCancelButton: !1,
      showConfirmButton: !0,
      type: "",
      title: void 0,
      showInput: !1,
      action: "",
      confirmButtonLoading: !1,
      cancelButtonLoading: !1,
      confirmButtonDisabled: !1,
      editorErrorMessage: "",
      validateError: !1,
      zIndex: l()
    }), u = $(() => {
      const A = c.type;
      return { [s.bm("icon", A)]: A && ou[A] };
    }), h = Or(), d = Or(), f = $(() => c.icon || ou[c.type] || ""), p = $(() => !!c.message), g = D(), m = D(), v = D(), O = D(), b = D(), w = $(() => c.confirmButtonClass);
    ne(() => c.inputValue, async (A) => {
      await $e(), n.boxType === "prompt" && A !== null && T();
    }, { immediate: !0 }), ne(() => a.value, (A) => {
      var N, q;
      A && (n.boxType !== "prompt" && (c.autofocus ? v.value = (q = (N = b.value) == null ? void 0 : N.$el) != null ? q : g.value : v.value = g.value), c.zIndex = l()), n.boxType === "prompt" && (A ? $e().then(() => {
        var j;
        O.value && O.value.$el && (c.autofocus ? v.value = (j = B()) != null ? j : g.value : v.value = g.value);
      }) : (c.editorErrorMessage = "", c.validateError = !1));
    });
    const x = $(() => n.draggable), S = $(() => n.overflow);
    S$(g, m, x, S), qe(async () => {
      await $e(), n.closeOnHashChange && window.addEventListener("hashchange", C);
    }), Gn(() => {
      n.closeOnHashChange && window.removeEventListener("hashchange", C);
    });
    function C() {
      a.value && (a.value = !1, $e(() => {
        c.action && e("action", c.action);
      }));
    }
    const k = () => {
      n.closeOnClickModal && _(c.distinguishCancelAndClose ? "close" : "cancel");
    }, E = L1(k), M = (A) => {
      if (c.inputType !== "textarea")
        return A.preventDefault(), _("confirm");
    }, _ = (A) => {
      var N;
      n.boxType === "prompt" && A === "confirm" && !T() || (c.action = A, c.beforeClose ? (N = c.beforeClose) == null || N.call(c, A, c, C) : C());
    }, T = () => {
      if (n.boxType === "prompt") {
        const A = c.inputPattern;
        if (A && !A.test(c.inputValue || ""))
          return c.editorErrorMessage = c.inputErrorMessage || o("el.messagebox.error"), c.validateError = !0, !1;
        const N = c.inputValidator;
        if (typeof N == "function") {
          const q = N(c.inputValue);
          if (q === !1)
            return c.editorErrorMessage = c.inputErrorMessage || o("el.messagebox.error"), c.validateError = !0, !1;
          if (typeof q == "string")
            return c.editorErrorMessage = q, c.validateError = !0, !1;
        }
      }
      return c.editorErrorMessage = "", c.validateError = !1, !0;
    }, B = () => {
      const A = O.value.$refs;
      return A.input || A.textarea;
    }, I = () => {
      _("close");
    }, P = () => {
      n.closeOnPressEscape && I();
    };
    return n.lockScroll && T$(a), {
      ...Ws(c),
      ns: s,
      overlayEvent: E,
      visible: a,
      hasMessage: p,
      typeClass: u,
      contentId: h,
      inputId: d,
      btnSize: r,
      iconComponent: f,
      confirmButtonClasses: w,
      rootRef: g,
      focusStartRef: v,
      headerRef: m,
      inputRef: O,
      confirmRef: b,
      doClose: C,
      handleClose: I,
      onCloseRequested: P,
      handleWrapperClick: k,
      handleInputEnter: M,
      handleAction: _,
      t: o
    };
  }
}), EJ = ["aria-label", "aria-describedby"], AJ = ["aria-label"], $J = ["id"];
function TJ(n, e, t, i, s, r) {
  const o = nt("el-icon"), l = nt("close"), a = nt("el-input"), c = nt("el-button"), u = nt("el-focus-trap"), h = nt("el-overlay");
  return R(), ie(mo, {
    name: "fade-in-linear",
    onAfterLeave: e[11] || (e[11] = (d) => n.$emit("vanish")),
    persisted: ""
  }, {
    default: Y(() => [
      it(K(h, {
        "z-index": n.zIndex,
        "overlay-class": [n.ns.is("message-box"), n.modalClass],
        mask: n.modal
      }, {
        default: Y(() => [
          Z("div", {
            role: "dialog",
            "aria-label": n.title,
            "aria-modal": "true",
            "aria-describedby": n.showInput ? void 0 : n.contentId,
            class: L(`${n.ns.namespace.value}-overlay-message-box`),
            onClick: e[8] || (e[8] = (...d) => n.overlayEvent.onClick && n.overlayEvent.onClick(...d)),
            onMousedown: e[9] || (e[9] = (...d) => n.overlayEvent.onMousedown && n.overlayEvent.onMousedown(...d)),
            onMouseup: e[10] || (e[10] = (...d) => n.overlayEvent.onMouseup && n.overlayEvent.onMouseup(...d))
          }, [
            K(u, {
              loop: "",
              trapped: n.visible,
              "focus-trap-el": n.rootRef,
              "focus-start-el": n.focusStartRef,
              onReleaseRequested: n.onCloseRequested
            }, {
              default: Y(() => [
                Z("div", {
                  ref: "rootRef",
                  class: L([
                    n.ns.b(),
                    n.customClass,
                    n.ns.is("draggable", n.draggable),
                    { [n.ns.m("center")]: n.center }
                  ]),
                  style: Qe(n.customStyle),
                  tabindex: "-1",
                  onClick: e[7] || (e[7] = Le(() => {
                  }, ["stop"]))
                }, [
                  n.title !== null && n.title !== void 0 ? (R(), V("div", {
                    key: 0,
                    ref: "headerRef",
                    class: L([n.ns.e("header"), { "show-close": n.showClose }])
                  }, [
                    Z("div", {
                      class: L(n.ns.e("title"))
                    }, [
                      n.iconComponent && n.center ? (R(), ie(o, {
                        key: 0,
                        class: L([n.ns.e("status"), n.typeClass])
                      }, {
                        default: Y(() => [
                          (R(), ie(yt(n.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : G("v-if", !0),
                      Z("span", null, xe(n.title), 1)
                    ], 2),
                    n.showClose ? (R(), V("button", {
                      key: 0,
                      type: "button",
                      class: L(n.ns.e("headerbtn")),
                      "aria-label": n.t("el.messagebox.close"),
                      onClick: e[0] || (e[0] = (d) => n.handleAction(n.distinguishCancelAndClose ? "close" : "cancel")),
                      onKeydown: e[1] || (e[1] = Ut(Le((d) => n.handleAction(n.distinguishCancelAndClose ? "close" : "cancel"), ["prevent"]), ["enter"]))
                    }, [
                      K(o, {
                        class: L(n.ns.e("close"))
                      }, {
                        default: Y(() => [
                          K(l)
                        ]),
                        _: 1
                      }, 8, ["class"])
                    ], 42, AJ)) : G("v-if", !0)
                  ], 2)) : G("v-if", !0),
                  Z("div", {
                    id: n.contentId,
                    class: L(n.ns.e("content"))
                  }, [
                    Z("div", {
                      class: L(n.ns.e("container"))
                    }, [
                      n.iconComponent && !n.center && n.hasMessage ? (R(), ie(o, {
                        key: 0,
                        class: L([n.ns.e("status"), n.typeClass])
                      }, {
                        default: Y(() => [
                          (R(), ie(yt(n.iconComponent)))
                        ]),
                        _: 1
                      }, 8, ["class"])) : G("v-if", !0),
                      n.hasMessage ? (R(), V("div", {
                        key: 1,
                        class: L(n.ns.e("message"))
                      }, [
                        de(n.$slots, "default", {}, () => [
                          n.dangerouslyUseHTMLString ? (R(), ie(yt(n.showInput ? "label" : "p"), {
                            key: 1,
                            for: n.showInput ? n.inputId : void 0,
                            innerHTML: n.message
                          }, null, 8, ["for", "innerHTML"])) : (R(), ie(yt(n.showInput ? "label" : "p"), {
                            key: 0,
                            for: n.showInput ? n.inputId : void 0
                          }, {
                            default: Y(() => [
                              Xn(xe(n.dangerouslyUseHTMLString ? "" : n.message), 1)
                            ]),
                            _: 1
                          }, 8, ["for"]))
                        ])
                      ], 2)) : G("v-if", !0)
                    ], 2),
                    it(Z("div", {
                      class: L(n.ns.e("input"))
                    }, [
                      K(a, {
                        id: n.inputId,
                        ref: "inputRef",
                        modelValue: n.inputValue,
                        "onUpdate:modelValue": e[2] || (e[2] = (d) => n.inputValue = d),
                        type: n.inputType,
                        placeholder: n.inputPlaceholder,
                        "aria-invalid": n.validateError,
                        class: L({ invalid: n.validateError }),
                        onKeydown: Ut(n.handleInputEnter, ["enter"])
                      }, null, 8, ["id", "modelValue", "type", "placeholder", "aria-invalid", "class", "onKeydown"]),
                      Z("div", {
                        class: L(n.ns.e("errormsg")),
                        style: Qe({
                          visibility: n.editorErrorMessage ? "visible" : "hidden"
                        })
                      }, xe(n.editorErrorMessage), 7)
                    ], 2), [
                      [Qt, n.showInput]
                    ])
                  ], 10, $J),
                  Z("div", {
                    class: L(n.ns.e("btns"))
                  }, [
                    n.showCancelButton ? (R(), ie(c, {
                      key: 0,
                      loading: n.cancelButtonLoading,
                      class: L([n.cancelButtonClass]),
                      round: n.roundButton,
                      size: n.btnSize,
                      onClick: e[3] || (e[3] = (d) => n.handleAction("cancel")),
                      onKeydown: e[4] || (e[4] = Ut(Le((d) => n.handleAction("cancel"), ["prevent"]), ["enter"]))
                    }, {
                      default: Y(() => [
                        Xn(xe(n.cancelButtonText || n.t("el.messagebox.cancel")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "size"])) : G("v-if", !0),
                    it(K(c, {
                      ref: "confirmRef",
                      type: "primary",
                      loading: n.confirmButtonLoading,
                      class: L([n.confirmButtonClasses]),
                      round: n.roundButton,
                      disabled: n.confirmButtonDisabled,
                      size: n.btnSize,
                      onClick: e[5] || (e[5] = (d) => n.handleAction("confirm")),
                      onKeydown: e[6] || (e[6] = Ut(Le((d) => n.handleAction("confirm"), ["prevent"]), ["enter"]))
                    }, {
                      default: Y(() => [
                        Xn(xe(n.confirmButtonText || n.t("el.messagebox.confirm")), 1)
                      ]),
                      _: 1
                    }, 8, ["loading", "class", "round", "disabled", "size"]), [
                      [Qt, n.showConfirmButton]
                    ])
                  ], 2)
                ], 6)
              ]),
              _: 3
            }, 8, ["trapped", "focus-trap-el", "focus-start-el", "onReleaseRequested"])
          ], 42, EJ)
        ]),
        _: 3
      }, 8, ["z-index", "overlay-class", "mask"]), [
        [Qt, n.visible]
      ])
    ]),
    _: 3
  });
}
var _J = /* @__PURE__ */ Ce(PJ, [["render", TJ], ["__file", "index.vue"]]);
const Td = /* @__PURE__ */ new Map(), MJ = (n) => {
  let e = document.body;
  return n.appendTo && (bt(n.appendTo) && (e = document.querySelector(n.appendTo)), yr(n.appendTo) && (e = n.appendTo), yr(e) || (pt("ElMessageBox", "the appendTo option is not an HTMLElement. Falling back to document.body."), e = document.body)), e;
}, RJ = (n, e, t = null) => {
  const i = K(_J, n, wt(n.message) || lo(n.message) ? {
    default: wt(n.message) ? n.message : () => n.message
  } : null);
  return i.appContext = t, $l(i, e), MJ(n).appendChild(e.firstElementChild), i.component;
}, NJ = () => document.createElement("div"), DJ = (n, e) => {
  const t = NJ();
  n.onVanish = () => {
    $l(null, t), Td.delete(s);
  }, n.onAction = (r) => {
    const o = Td.get(s);
    let l;
    n.showInput ? l = { value: s.inputValue, action: r } : l = r, n.callback ? n.callback(l, i.proxy) : r === "cancel" || r === "close" ? n.distinguishCancelAndClose && r !== "cancel" ? o.reject("close") : o.reject("cancel") : o.resolve(l);
  };
  const i = RJ(n, t, e), s = i.proxy;
  for (const r in n)
    Hi(n, r) && !Hi(s.$props, r) && (s[r] = n[r]);
  return s.visible = !0, s;
};
function nh(n, e = null) {
  if (!vt)
    return Promise.reject();
  let t;
  return bt(n) || lo(n) ? n = {
    message: n
  } : t = n.callback, new Promise((i, s) => {
    const r = DJ(n, e ?? nh._context);
    Td.set(r, {
      options: n,
      callback: t,
      resolve: i,
      reject: s
    });
  });
}
const LJ = ["alert", "confirm", "prompt"], IJ = {
  alert: { closeOnPressEscape: !1, closeOnClickModal: !1 },
  confirm: { showCancelButton: !0 },
  prompt: { showCancelButton: !0, showInput: !0 }
};
LJ.forEach((n) => {
  nh[n] = BJ(n);
});
function BJ(n) {
  return (e, t, i, s) => {
    let r = "";
    return ln(t) ? (i = t, r = "") : Si(t) ? r = "" : r = t, nh(Object.assign({
      title: r,
      message: e,
      type: "",
      ...IJ[n]
    }, i, {
      boxType: n
    }), s);
  };
}
nh.close = () => {
  Td.forEach((n, e) => {
    e.doClose();
  }), Td.clear();
};
nh._context = null;
const rl = nh;
rl.install = (n) => {
  rl._context = n._context, n.config.globalProperties.$msgbox = rl, n.config.globalProperties.$messageBox = rl, n.config.globalProperties.$alert = rl.alert, n.config.globalProperties.$confirm = rl.confirm, n.config.globalProperties.$prompt = rl.prompt;
};
const BUe = rl, k_ = [
  "success",
  "info",
  "warning",
  "error"
], QJ = Ee({
  customClass: {
    type: String,
    default: ""
  },
  dangerouslyUseHTMLString: {
    type: Boolean,
    default: !1
  },
  duration: {
    type: Number,
    default: 4500
  },
  icon: {
    type: kn
  },
  id: {
    type: String,
    default: ""
  },
  message: {
    type: ce([String, Object]),
    default: ""
  },
  offset: {
    type: Number,
    default: 0
  },
  onClick: {
    type: ce(Function),
    default: () => {
    }
  },
  onClose: {
    type: ce(Function),
    required: !0
  },
  position: {
    type: String,
    values: ["top-right", "top-left", "bottom-right", "bottom-left"],
    default: "top-right"
  },
  showClose: {
    type: Boolean,
    default: !0
  },
  title: {
    type: String,
    default: ""
  },
  type: {
    type: String,
    values: [...k_, ""],
    default: ""
  },
  zIndex: Number
}), zJ = {
  destroy: () => !0
}, jJ = ["id"], VJ = ["textContent"], FJ = { key: 0 }, ZJ = ["innerHTML"], qJ = F({
  name: "ElNotification"
}), WJ = /* @__PURE__ */ F({
  ...qJ,
  props: QJ,
  emits: zJ,
  setup(n, { expose: e }) {
    const t = n, { ns: i, zIndex: s } = Q1("notification"), { nextZIndex: r, currentZIndex: o } = s, { Close: l } = b$, a = D(!1);
    let c;
    const u = $(() => {
      const b = t.type;
      return b && ou[t.type] ? i.m(b) : "";
    }), h = $(() => t.type && ou[t.type] || t.icon), d = $(() => t.position.endsWith("right") ? "right" : "left"), f = $(() => t.position.startsWith("top") ? "top" : "bottom"), p = $(() => {
      var b;
      return {
        [f.value]: `${t.offset}px`,
        zIndex: (b = t.zIndex) != null ? b : o.value
      };
    });
    function g() {
      t.duration > 0 && ({ stop: c } = Bg(() => {
        a.value && v();
      }, t.duration));
    }
    function m() {
      c == null || c();
    }
    function v() {
      a.value = !1;
    }
    function O({ code: b }) {
      b === dt.delete || b === dt.backspace ? m() : b === dt.esc ? a.value && v() : g();
    }
    return qe(() => {
      g(), r(), a.value = !0;
    }), Zi(document, "keydown", O), e({
      visible: a,
      close: v
    }), (b, w) => (R(), ie(mo, {
      name: y(i).b("fade"),
      onBeforeLeave: b.onClose,
      onAfterLeave: w[1] || (w[1] = (x) => b.$emit("destroy")),
      persisted: ""
    }, {
      default: Y(() => [
        it(Z("div", {
          id: b.id,
          class: L([y(i).b(), b.customClass, y(d)]),
          style: Qe(y(p)),
          role: "alert",
          onMouseenter: m,
          onMouseleave: g,
          onClick: w[0] || (w[0] = (...x) => b.onClick && b.onClick(...x))
        }, [
          y(h) ? (R(), ie(y(Fe), {
            key: 0,
            class: L([y(i).e("icon"), y(u)])
          }, {
            default: Y(() => [
              (R(), ie(yt(y(h))))
            ]),
            _: 1
          }, 8, ["class"])) : G("v-if", !0),
          Z("div", {
            class: L(y(i).e("group"))
          }, [
            Z("h2", {
              class: L(y(i).e("title")),
              textContent: xe(b.title)
            }, null, 10, VJ),
            it(Z("div", {
              class: L(y(i).e("content")),
              style: Qe(b.title ? void 0 : { margin: 0 })
            }, [
              de(b.$slots, "default", {}, () => [
                b.dangerouslyUseHTMLString ? (R(), V(Tt, { key: 1 }, [
                  G(" Caution here, message could've been compromised, never use user's input as message "),
                  Z("p", { innerHTML: b.message }, null, 8, ZJ)
                ], 2112)) : (R(), V("p", FJ, xe(b.message), 1))
              ])
            ], 6), [
              [Qt, b.message]
            ]),
            b.showClose ? (R(), ie(y(Fe), {
              key: 0,
              class: L(y(i).e("closeBtn")),
              onClick: Le(v, ["stop"])
            }, {
              default: Y(() => [
                K(y(l))
              ]),
              _: 1
            }, 8, ["class", "onClick"])) : G("v-if", !0)
          ], 2)
        ], 46, jJ), [
          [Qt, a.value]
        ])
      ]),
      _: 3
    }, 8, ["name", "onBeforeLeave"]));
  }
});
var HJ = /* @__PURE__ */ Ce(WJ, [["__file", "notification.vue"]]);
const Zg = {
  "top-left": [],
  "top-right": [],
  "bottom-left": [],
  "bottom-right": []
}, Cy = 16;
let XJ = 1;
const gu = function(n = {}, e = null) {
  if (!vt)
    return { close: () => {
    } };
  (typeof n == "string" || lo(n)) && (n = { message: n });
  const t = n.position || "top-right";
  let i = n.offset || 0;
  Zg[t].forEach(({ vm: u }) => {
    var h;
    i += (((h = u.el) == null ? void 0 : h.offsetHeight) || 0) + Cy;
  }), i += Cy;
  const s = `notification_${XJ++}`, r = n.onClose, o = {
    ...n,
    offset: i,
    id: s,
    onClose: () => {
      YJ(s, t, r);
    }
  };
  let l = document.body;
  yr(n.appendTo) ? l = n.appendTo : bt(n.appendTo) && (l = document.querySelector(n.appendTo)), yr(l) || (pt("ElNotification", "the appendTo option is not an HTMLElement. Falling back to document.body."), l = document.body);
  const a = document.createElement("div"), c = K(HJ, o, lo(o.message) ? {
    default: () => o.message
  } : null);
  return c.appContext = e ?? gu._context, c.props.onDestroy = () => {
    $l(null, a);
  }, $l(c, a), Zg[t].push({ vm: c }), l.appendChild(a.firstElementChild), {
    close: () => {
      c.component.exposed.visible.value = !1;
    }
  };
};
k_.forEach((n) => {
  gu[n] = (e = {}) => ((typeof e == "string" || lo(e)) && (e = {
    message: e
  }), gu({
    ...e,
    type: n
  }));
});
function YJ(n, e, t) {
  const i = Zg[e], s = i.findIndex(({ vm: c }) => {
    var u;
    return ((u = c.component) == null ? void 0 : u.props.id) === n;
  });
  if (s === -1)
    return;
  const { vm: r } = i[s];
  if (!r)
    return;
  t == null || t(r);
  const o = r.el.offsetHeight, l = e.split("-")[0];
  i.splice(s, 1);
  const a = i.length;
  if (!(a < 1))
    for (let c = s; c < a; c++) {
      const { el: u, component: h } = i[c].vm, d = Number.parseInt(u.style[l], 10) - o - Cy;
      h.props.offset = d;
    }
}
function UJ() {
  for (const n of Object.values(Zg))
    n.forEach(({ vm: e }) => {
      e.component.exposed.visible.value = !1;
    });
}
gu.closeAll = UJ;
gu._context = null;
const QUe = O$(gu, "$notify");
function GJ(n, e) {
  let t, i, s;
  const r = D(!0), o = () => {
    r.value = !0, s();
  };
  ne(n, o, { flush: "sync" });
  const l = typeof e == "function" ? e : e.get, a = typeof e == "function" ? void 0 : e.set, c = W4((u, h) => (i = u, s = h, {
    get() {
      return r.value && (t = l(), r.value = !1), i(), t;
    },
    set(d) {
      a == null || a(d);
    }
  }));
  return Object.isExtensible(c) && (c.trigger = o), c;
}
function P_(n) {
  return ME() ? (i1(n), !0) : !1;
}
function KJ(n, e) {
  if (typeof Symbol < "u") {
    const t = { ...n };
    return Object.defineProperty(t, Symbol.iterator, {
      enumerable: !1,
      value() {
        let i = 0;
        return {
          next: () => ({
            value: e[i++],
            done: i > e.length
          })
        };
      }
    }), t;
  } else
    return Object.assign([...e], n);
}
function Bs(n) {
  return typeof n == "function" ? n() : y(n);
}
const JJ = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const eee = Object.prototype.toString, tee = (n) => eee.call(n) === "[object Object]", za = () => {
};
function tw(n, e) {
  function t(...i) {
    return new Promise((s, r) => {
      Promise.resolve(n(() => e.apply(this, i), { fn: e, thisArg: this, args: i })).then(s).catch(r);
    });
  }
  return t;
}
const nee = (n) => n();
function E_(n, e = {}) {
  let t, i, s = za;
  const r = (l) => {
    clearTimeout(l), s(), s = za;
  };
  return (l) => {
    const a = Bs(n), c = Bs(e.maxWait);
    return t && r(t), a <= 0 || c !== void 0 && c <= 0 ? (i && (r(i), i = null), Promise.resolve(l())) : new Promise((u, h) => {
      s = e.rejectOnCancel ? h : u, c && !i && (i = setTimeout(() => {
        t && r(t), i = null, u(l());
      }, c)), t = setTimeout(() => {
        i && r(i), i = null, u(l());
      }, a);
    });
  };
}
function iee(...n) {
  let e = 0, t, i = !0, s = za, r, o, l, a, c;
  !Fi(n[0]) && typeof n[0] == "object" ? { delay: o, trailing: l = !0, leading: a = !0, rejectOnCancel: c = !1 } = n[0] : [o, l = !0, a = !0, c = !1] = n;
  const u = () => {
    t && (clearTimeout(t), t = void 0, s(), s = za);
  };
  return (d) => {
    const f = Bs(o), p = Date.now() - e, g = () => r = d();
    return u(), f <= 0 ? (e = Date.now(), g()) : (p > f && (a || !i) ? (e = Date.now(), g()) : l && (r = new Promise((m, v) => {
      s = c ? v : m, t = setTimeout(() => {
        e = Date.now(), i = !0, m(g()), u();
      }, Math.max(0, f - p));
    })), !a && !t && (t = setTimeout(() => i = !0, f)), i = !1, r);
  };
}
function see(n) {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}
const ree = /-(\w)/g, oee = see((n) => n.replace(ree, (e, t) => t ? t.toUpperCase() : ""));
function lee(n) {
  return n || Xe();
}
function A_(n, e = 200, t = {}) {
  return tw(
    E_(e, t),
    n
  );
}
function zUe(n, e = 200, t = {}) {
  const i = D(n.value), s = A_(() => {
    i.value = n.value;
  }, e, t);
  return ne(n, () => s()), i;
}
function aee(n, e = 200, t = !1, i = !0, s = !1) {
  return tw(
    iee(e, t, i, s),
    n
  );
}
function cee(n, e, t = {}) {
  const {
    eventFilter: i = nee,
    ...s
  } = t;
  return ne(
    n,
    tw(
      i,
      e
    ),
    s
  );
}
function nw(n, e = !0, t) {
  lee() ? qe(n, t) : e ? n() : $e(n);
}
function jUe(n, e, t = {}) {
  const {
    debounce: i = 0,
    maxWait: s = void 0,
    ...r
  } = t;
  return cee(
    n,
    e,
    {
      ...r,
      eventFilter: E_(i, { maxWait: s })
    }
  );
}
function VUe(n = {}) {
  const {
    inheritAttrs: e = !0
  } = n, t = Ln(), i = /* @__PURE__ */ F({
    setup(r, { slots: o }) {
      return () => {
        t.value = o.default;
      };
    }
  }), s = /* @__PURE__ */ F({
    inheritAttrs: e,
    setup(r, { attrs: o, slots: l }) {
      return () => {
        var a;
        if (!t.value && process.env.NODE_ENV !== "production")
          throw new Error("[VueUse] Failed to find the definition of reusable template");
        const c = (a = t.value) == null ? void 0 : a.call(t, { ...uee(o), $slots: l });
        return e && (c == null ? void 0 : c.length) === 1 ? c[0] : c;
      };
    }
  });
  return KJ(
    { define: i, reuse: s },
    [i, s]
  );
}
function uee(n) {
  const e = {};
  for (const t in n)
    e[oee(t)] = n[t];
  return e;
}
function gr(n) {
  var e;
  const t = Bs(n);
  return (e = t == null ? void 0 : t.$el) != null ? e : t;
}
const ih = JJ ? window : void 0;
function Vi(...n) {
  let e, t, i, s;
  if (typeof n[0] == "string" || Array.isArray(n[0]) ? ([t, i, s] = n, e = ih) : [e, t, i, s] = n, !e)
    return za;
  Array.isArray(t) || (t = [t]), Array.isArray(i) || (i = [i]);
  const r = [], o = () => {
    r.forEach((u) => u()), r.length = 0;
  }, l = (u, h, d, f) => (u.addEventListener(h, d, f), () => u.removeEventListener(h, d, f)), a = ne(
    () => [gr(e), Bs(s)],
    ([u, h]) => {
      if (o(), !u)
        return;
      const d = tee(h) ? { ...h } : h;
      r.push(
        ...t.flatMap((f) => i.map((p) => l(u, f, p, d)))
      );
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    a(), o();
  };
  return P_(c), c;
}
function hee() {
  const n = D(!1), e = Xe();
  return e && qe(() => {
    n.value = !0;
  }, e), n;
}
function dee(n) {
  const e = hee();
  return $(() => (e.value, !!n()));
}
function fee(n) {
  const e = Xe(), t = GJ(
    () => null,
    () => n ? gr(n) : e.proxy.$el
  );
  return Zl(t.trigger), qe(t.trigger), t;
}
function pee(n, e, t = {}) {
  const { window: i = ih, ...s } = t;
  let r;
  const o = dee(() => i && "ResizeObserver" in i), l = () => {
    r && (r.disconnect(), r = void 0);
  }, a = $(() => Array.isArray(n) ? n.map((h) => gr(h)) : [gr(n)]), c = ne(
    a,
    (h) => {
      if (l(), o.value && i) {
        r = new ResizeObserver(e);
        for (const d of h)
          d && r.observe(d, s);
      }
    },
    { immediate: !0, flush: "post" }
  ), u = () => {
    l(), c();
  };
  return P_(u), {
    isSupported: o,
    stop: u
  };
}
function FUe(n, e = { width: 0, height: 0 }, t = {}) {
  const { window: i = ih, box: s = "content-box" } = t, r = $(() => {
    var h, d;
    return (d = (h = gr(n)) == null ? void 0 : h.namespaceURI) == null ? void 0 : d.includes("svg");
  }), o = D(e.width), l = D(e.height), { stop: a } = pee(
    n,
    ([h]) => {
      const d = s === "border-box" ? h.borderBoxSize : s === "content-box" ? h.contentBoxSize : h.devicePixelContentBoxSize;
      if (i && r.value) {
        const f = gr(n);
        if (f) {
          const p = i.getComputedStyle(f);
          o.value = Number.parseFloat(p.width), l.value = Number.parseFloat(p.height);
        }
      } else if (d) {
        const f = Array.isArray(d) ? d : [d];
        o.value = f.reduce((p, { inlineSize: g }) => p + g, 0), l.value = f.reduce((p, { blockSize: g }) => p + g, 0);
      } else
        o.value = h.contentRect.width, l.value = h.contentRect.height;
    },
    t
  );
  nw(() => {
    const h = gr(n);
    h && (o.value = "offsetWidth" in h ? h.offsetWidth : e.width, l.value = "offsetHeight" in h ? h.offsetHeight : e.height);
  });
  const c = ne(
    () => gr(n),
    (h) => {
      o.value = h ? e.width : 0, l.value = h ? e.height : 0;
    }
  );
  function u() {
    a(), c();
  }
  return {
    width: o,
    height: l,
    stop: u
  };
}
const FC = 1;
function ZUe(n, e = {}) {
  const {
    throttle: t = 0,
    idle: i = 200,
    onStop: s = za,
    onScroll: r = za,
    offset: o = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
    eventListenerOptions: l = {
      capture: !1,
      passive: !0
    },
    behavior: a = "auto",
    window: c = ih,
    onError: u = (C) => {
      console.error(C);
    }
  } = e, h = D(0), d = D(0), f = $({
    get() {
      return h.value;
    },
    set(C) {
      g(C, void 0);
    }
  }), p = $({
    get() {
      return d.value;
    },
    set(C) {
      g(void 0, C);
    }
  });
  function g(C, k) {
    var E, M, _;
    if (!c)
      return;
    const T = Bs(n);
    T && ((_ = T instanceof Document ? c.document.body : T) == null || _.scrollTo({
      top: (E = Bs(k)) != null ? E : p.value,
      left: (M = Bs(C)) != null ? M : f.value,
      behavior: Bs(a)
    }));
  }
  const m = D(!1), v = Gt({
    left: !0,
    right: !1,
    top: !0,
    bottom: !1
  }), O = Gt({
    left: !1,
    right: !1,
    top: !1,
    bottom: !1
  }), b = (C) => {
    m.value && (m.value = !1, O.left = !1, O.right = !1, O.top = !1, O.bottom = !1, s(C));
  }, w = A_(b, t + i), x = (C) => {
    var k;
    if (!c)
      return;
    const E = ((k = C == null ? void 0 : C.document) == null ? void 0 : k.documentElement) || (C == null ? void 0 : C.documentElement) || gr(C), { display: M, flexDirection: _ } = getComputedStyle(E), T = E.scrollLeft;
    O.left = T < h.value, O.right = T > h.value;
    const B = Math.abs(T) <= (o.left || 0), I = Math.abs(T) + E.clientWidth >= E.scrollWidth - (o.right || 0) - FC;
    M === "flex" && _ === "row-reverse" ? (v.left = I, v.right = B) : (v.left = B, v.right = I), h.value = T;
    let P = E.scrollTop;
    C === c.document && !P && (P = c.document.body.scrollTop), O.top = P < d.value, O.bottom = P > d.value;
    const A = Math.abs(P) <= (o.top || 0), N = Math.abs(P) + E.clientHeight >= E.scrollHeight - (o.bottom || 0) - FC;
    M === "flex" && _ === "column-reverse" ? (v.top = N, v.bottom = A) : (v.top = A, v.bottom = N), d.value = P;
  }, S = (C) => {
    var k;
    if (!c)
      return;
    const E = (k = C.target.documentElement) != null ? k : C.target;
    x(E), m.value = !0, w(C), r(C);
  };
  return Vi(
    n,
    "scroll",
    t ? aee(S, t, !0, !1) : S,
    l
  ), nw(() => {
    try {
      const C = Bs(n);
      if (!C)
        return;
      x(C);
    } catch (C) {
      u(C);
    }
  }), Vi(
    n,
    "scrollend",
    b,
    l
  ), {
    x: f,
    y: p,
    isScrolling: m,
    arrivedState: v,
    directions: O,
    measure() {
      const C = Bs(n);
      c && C && x(C);
    }
  };
}
const gee = {
  page: (n) => [n.pageX, n.pageY],
  client: (n) => [n.clientX, n.clientY],
  screen: (n) => [n.screenX, n.screenY],
  movement: (n) => n instanceof Touch ? null : [n.movementX, n.movementY]
};
function qUe(n = {}) {
  const {
    type: e = "page",
    touch: t = !0,
    resetOnTouchEnds: i = !1,
    initialValue: s = { x: 0, y: 0 },
    window: r = ih,
    target: o = r,
    scroll: l = !0,
    eventFilter: a
  } = n;
  let c = null;
  const u = D(s.x), h = D(s.y), d = D(null), f = typeof e == "function" ? e : gee[e], p = (x) => {
    const S = f(x);
    c = x, S && ([u.value, h.value] = S, d.value = "mouse");
  }, g = (x) => {
    if (x.touches.length > 0) {
      const S = f(x.touches[0]);
      S && ([u.value, h.value] = S, d.value = "touch");
    }
  }, m = () => {
    if (!c || !r)
      return;
    const x = f(c);
    c instanceof MouseEvent && x && (u.value = x[0] + r.scrollX, h.value = x[1] + r.scrollY);
  }, v = () => {
    u.value = s.x, h.value = s.y;
  }, O = a ? (x) => a(() => p(x), {}) : (x) => p(x), b = a ? (x) => a(() => g(x), {}) : (x) => g(x), w = a ? () => a(() => m(), {}) : () => m();
  if (o) {
    const x = { passive: !0 };
    Vi(o, ["mousemove", "dragover"], O, x), t && e !== "movement" && (Vi(o, ["touchstart", "touchmove"], b, x), i && Vi(o, "touchend", v, x)), l && e === "page" && Vi(r, "scroll", w, { passive: !0 });
  }
  return {
    x: u,
    y: h,
    sourceType: d
  };
}
function WUe(n = {}) {
  const {
    touch: e = !0,
    drag: t = !0,
    capture: i = !1,
    initialValue: s = !1,
    window: r = ih
  } = n, o = D(s), l = D(null);
  if (!r)
    return {
      pressed: o,
      sourceType: l
    };
  const a = (h) => () => {
    o.value = !0, l.value = h;
  }, c = () => {
    o.value = !1, l.value = null;
  }, u = $(() => gr(n.target) || r);
  return Vi(u, "mousedown", a("mouse"), { passive: !0, capture: i }), Vi(r, "mouseleave", c, { passive: !0, capture: i }), Vi(r, "mouseup", c, { passive: !0, capture: i }), t && (Vi(u, "dragstart", a("mouse"), { passive: !0, capture: i }), Vi(r, "drop", c, { passive: !0, capture: i }), Vi(r, "dragend", c, { passive: !0, capture: i })), e && (Vi(u, "touchstart", a("touch"), { passive: !0, capture: i }), Vi(r, "touchend", c, { passive: !0, capture: i }), Vi(r, "touchcancel", c, { passive: !0, capture: i })), {
    pressed: o,
    sourceType: l
  };
}
function HUe(n = fee()) {
  const e = Ln(), t = () => {
    const i = gr(n);
    i && (e.value = i.parentElement);
  };
  return nw(t), ne(() => Bs(n), t), e;
}
var $_ = { exports: {} };
/*!
 * clipboard.js v2.0.11
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
(function(n, e) {
  (function(i, s) {
    n.exports = s();
  })(m9, function() {
    return (
      /******/
      function() {
        var t = {
          /***/
          686: (
            /***/
            function(r, o, l) {
              l.d(o, {
                default: function() {
                  return (
                    /* binding */
                    oe
                  );
                }
              });
              var a = l(279), c = /* @__PURE__ */ l.n(a), u = l(370), h = /* @__PURE__ */ l.n(u), d = l(817), f = /* @__PURE__ */ l.n(d);
              function p(te) {
                try {
                  return document.execCommand(te);
                } catch {
                  return !1;
                }
              }
              var g = function(W) {
                var U = f()(W);
                return p("cut"), U;
              }, m = g;
              function v(te) {
                var W = document.documentElement.getAttribute("dir") === "rtl", U = document.createElement("textarea");
                U.style.fontSize = "12pt", U.style.border = "0", U.style.padding = "0", U.style.margin = "0", U.style.position = "absolute", U.style[W ? "right" : "left"] = "-9999px";
                var le = window.pageYOffset || document.documentElement.scrollTop;
                return U.style.top = "".concat(le, "px"), U.setAttribute("readonly", ""), U.value = te, U;
              }
              var O = function(W, U) {
                var le = v(W);
                U.container.appendChild(le);
                var he = f()(le);
                return p("copy"), le.remove(), he;
              }, b = function(W) {
                var U = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                  container: document.body
                }, le = "";
                return typeof W == "string" ? le = O(W, U) : W instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(W == null ? void 0 : W.type) ? le = O(W.value, U) : (le = f()(W), p("copy")), le;
              }, w = b;
              function x(te) {
                "@babel/helpers - typeof";
                return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? x = function(U) {
                  return typeof U;
                } : x = function(U) {
                  return U && typeof Symbol == "function" && U.constructor === Symbol && U !== Symbol.prototype ? "symbol" : typeof U;
                }, x(te);
              }
              var S = function() {
                var W = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, U = W.action, le = U === void 0 ? "copy" : U, he = W.container, ee = W.target, pe = W.text;
                if (le !== "copy" && le !== "cut")
                  throw new Error('Invalid "action" value, use either "copy" or "cut"');
                if (ee !== void 0)
                  if (ee && x(ee) === "object" && ee.nodeType === 1) {
                    if (le === "copy" && ee.hasAttribute("disabled"))
                      throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                    if (le === "cut" && (ee.hasAttribute("readonly") || ee.hasAttribute("disabled")))
                      throw new Error(`Invalid "target" attribute. You can't cut text from elements with "readonly" or "disabled" attributes`);
                  } else
                    throw new Error('Invalid "target" value, use a valid Element');
                if (pe)
                  return w(pe, {
                    container: he
                  });
                if (ee)
                  return le === "cut" ? m(ee) : w(ee, {
                    container: he
                  });
              }, C = S;
              function k(te) {
                "@babel/helpers - typeof";
                return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? k = function(U) {
                  return typeof U;
                } : k = function(U) {
                  return U && typeof Symbol == "function" && U.constructor === Symbol && U !== Symbol.prototype ? "symbol" : typeof U;
                }, k(te);
              }
              function E(te, W) {
                if (!(te instanceof W))
                  throw new TypeError("Cannot call a class as a function");
              }
              function M(te, W) {
                for (var U = 0; U < W.length; U++) {
                  var le = W[U];
                  le.enumerable = le.enumerable || !1, le.configurable = !0, "value" in le && (le.writable = !0), Object.defineProperty(te, le.key, le);
                }
              }
              function _(te, W, U) {
                return W && M(te.prototype, W), U && M(te, U), te;
              }
              function T(te, W) {
                if (typeof W != "function" && W !== null)
                  throw new TypeError("Super expression must either be null or a function");
                te.prototype = Object.create(W && W.prototype, { constructor: { value: te, writable: !0, configurable: !0 } }), W && B(te, W);
              }
              function B(te, W) {
                return B = Object.setPrototypeOf || function(le, he) {
                  return le.__proto__ = he, le;
                }, B(te, W);
              }
              function I(te) {
                var W = N();
                return function() {
                  var le = q(te), he;
                  if (W) {
                    var ee = q(this).constructor;
                    he = Reflect.construct(le, arguments, ee);
                  } else
                    he = le.apply(this, arguments);
                  return P(this, he);
                };
              }
              function P(te, W) {
                return W && (k(W) === "object" || typeof W == "function") ? W : A(te);
              }
              function A(te) {
                if (te === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return te;
              }
              function N() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function q(te) {
                return q = Object.setPrototypeOf ? Object.getPrototypeOf : function(U) {
                  return U.__proto__ || Object.getPrototypeOf(U);
                }, q(te);
              }
              function j(te, W) {
                var U = "data-clipboard-".concat(te);
                if (W.hasAttribute(U))
                  return W.getAttribute(U);
              }
              var H = /* @__PURE__ */ function(te) {
                T(U, te);
                var W = I(U);
                function U(le, he) {
                  var ee;
                  return E(this, U), ee = W.call(this), ee.resolveOptions(he), ee.listenClick(le), ee;
                }
                return _(U, [{
                  key: "resolveOptions",
                  value: function() {
                    var he = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                    this.action = typeof he.action == "function" ? he.action : this.defaultAction, this.target = typeof he.target == "function" ? he.target : this.defaultTarget, this.text = typeof he.text == "function" ? he.text : this.defaultText, this.container = k(he.container) === "object" ? he.container : document.body;
                  }
                  /**
                   * Adds a click event listener to the passed trigger.
                   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
                   */
                }, {
                  key: "listenClick",
                  value: function(he) {
                    var ee = this;
                    this.listener = h()(he, "click", function(pe) {
                      return ee.onClick(pe);
                    });
                  }
                  /**
                   * Defines a new `ClipboardAction` on each click event.
                   * @param {Event} e
                   */
                }, {
                  key: "onClick",
                  value: function(he) {
                    var ee = he.delegateTarget || he.currentTarget, pe = this.action(ee) || "copy", be = C({
                      action: pe,
                      container: this.container,
                      target: this.target(ee),
                      text: this.text(ee)
                    });
                    this.emit(be ? "success" : "error", {
                      action: pe,
                      text: be,
                      trigger: ee,
                      clearSelection: function() {
                        ee && ee.focus(), window.getSelection().removeAllRanges();
                      }
                    });
                  }
                  /**
                   * Default `action` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultAction",
                  value: function(he) {
                    return j("action", he);
                  }
                  /**
                   * Default `target` lookup function.
                   * @param {Element} trigger
                   */
                }, {
                  key: "defaultTarget",
                  value: function(he) {
                    var ee = j("target", he);
                    if (ee)
                      return document.querySelector(ee);
                  }
                  /**
                   * Allow fire programmatically a copy action
                   * @param {String|HTMLElement} target
                   * @param {Object} options
                   * @returns Text copied.
                   */
                }, {
                  key: "defaultText",
                  /**
                   * Default `text` lookup function.
                   * @param {Element} trigger
                   */
                  value: function(he) {
                    return j("text", he);
                  }
                  /**
                   * Destroy lifecycle.
                   */
                }, {
                  key: "destroy",
                  value: function() {
                    this.listener.destroy();
                  }
                }], [{
                  key: "copy",
                  value: function(he) {
                    var ee = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      container: document.body
                    };
                    return w(he, ee);
                  }
                  /**
                   * Allow fire programmatically a cut action
                   * @param {String|HTMLElement} target
                   * @returns Text cutted.
                   */
                }, {
                  key: "cut",
                  value: function(he) {
                    return m(he);
                  }
                  /**
                   * Returns the support of the given action, or all actions if no action is
                   * given.
                   * @param {String} [action]
                   */
                }, {
                  key: "isSupported",
                  value: function() {
                    var he = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ["copy", "cut"], ee = typeof he == "string" ? [he] : he, pe = !!document.queryCommandSupported;
                    return ee.forEach(function(be) {
                      pe = pe && !!document.queryCommandSupported(be);
                    }), pe;
                  }
                }]), U;
              }(c()), oe = H;
            }
          ),
          /***/
          828: (
            /***/
            function(r) {
              var o = 9;
              if (typeof Element < "u" && !Element.prototype.matches) {
                var l = Element.prototype;
                l.matches = l.matchesSelector || l.mozMatchesSelector || l.msMatchesSelector || l.oMatchesSelector || l.webkitMatchesSelector;
              }
              function a(c, u) {
                for (; c && c.nodeType !== o; ) {
                  if (typeof c.matches == "function" && c.matches(u))
                    return c;
                  c = c.parentNode;
                }
              }
              r.exports = a;
            }
          ),
          /***/
          438: (
            /***/
            function(r, o, l) {
              var a = l(828);
              function c(d, f, p, g, m) {
                var v = h.apply(this, arguments);
                return d.addEventListener(p, v, m), {
                  destroy: function() {
                    d.removeEventListener(p, v, m);
                  }
                };
              }
              function u(d, f, p, g, m) {
                return typeof d.addEventListener == "function" ? c.apply(null, arguments) : typeof p == "function" ? c.bind(null, document).apply(null, arguments) : (typeof d == "string" && (d = document.querySelectorAll(d)), Array.prototype.map.call(d, function(v) {
                  return c(v, f, p, g, m);
                }));
              }
              function h(d, f, p, g) {
                return function(m) {
                  m.delegateTarget = a(m.target, f), m.delegateTarget && g.call(d, m);
                };
              }
              r.exports = u;
            }
          ),
          /***/
          879: (
            /***/
            function(r, o) {
              o.node = function(l) {
                return l !== void 0 && l instanceof HTMLElement && l.nodeType === 1;
              }, o.nodeList = function(l) {
                var a = Object.prototype.toString.call(l);
                return l !== void 0 && (a === "[object NodeList]" || a === "[object HTMLCollection]") && "length" in l && (l.length === 0 || o.node(l[0]));
              }, o.string = function(l) {
                return typeof l == "string" || l instanceof String;
              }, o.fn = function(l) {
                var a = Object.prototype.toString.call(l);
                return a === "[object Function]";
              };
            }
          ),
          /***/
          370: (
            /***/
            function(r, o, l) {
              var a = l(879), c = l(438);
              function u(p, g, m) {
                if (!p && !g && !m)
                  throw new Error("Missing required arguments");
                if (!a.string(g))
                  throw new TypeError("Second argument must be a String");
                if (!a.fn(m))
                  throw new TypeError("Third argument must be a Function");
                if (a.node(p))
                  return h(p, g, m);
                if (a.nodeList(p))
                  return d(p, g, m);
                if (a.string(p))
                  return f(p, g, m);
                throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
              }
              function h(p, g, m) {
                return p.addEventListener(g, m), {
                  destroy: function() {
                    p.removeEventListener(g, m);
                  }
                };
              }
              function d(p, g, m) {
                return Array.prototype.forEach.call(p, function(v) {
                  v.addEventListener(g, m);
                }), {
                  destroy: function() {
                    Array.prototype.forEach.call(p, function(v) {
                      v.removeEventListener(g, m);
                    });
                  }
                };
              }
              function f(p, g, m) {
                return c(document.body, p, g, m);
              }
              r.exports = u;
            }
          ),
          /***/
          817: (
            /***/
            function(r) {
              function o(l) {
                var a;
                if (l.nodeName === "SELECT")
                  l.focus(), a = l.value;
                else if (l.nodeName === "INPUT" || l.nodeName === "TEXTAREA") {
                  var c = l.hasAttribute("readonly");
                  c || l.setAttribute("readonly", ""), l.select(), l.setSelectionRange(0, l.value.length), c || l.removeAttribute("readonly"), a = l.value;
                } else {
                  l.hasAttribute("contenteditable") && l.focus();
                  var u = window.getSelection(), h = document.createRange();
                  h.selectNodeContents(l), u.removeAllRanges(), u.addRange(h), a = u.toString();
                }
                return a;
              }
              r.exports = o;
            }
          ),
          /***/
          279: (
            /***/
            function(r) {
              function o() {
              }
              o.prototype = {
                on: function(l, a, c) {
                  var u = this.e || (this.e = {});
                  return (u[l] || (u[l] = [])).push({
                    fn: a,
                    ctx: c
                  }), this;
                },
                once: function(l, a, c) {
                  var u = this;
                  function h() {
                    u.off(l, h), a.apply(c, arguments);
                  }
                  return h._ = a, this.on(l, h, c);
                },
                emit: function(l) {
                  var a = [].slice.call(arguments, 1), c = ((this.e || (this.e = {}))[l] || []).slice(), u = 0, h = c.length;
                  for (u; u < h; u++)
                    c[u].fn.apply(c[u].ctx, a);
                  return this;
                },
                off: function(l, a) {
                  var c = this.e || (this.e = {}), u = c[l], h = [];
                  if (u && a)
                    for (var d = 0, f = u.length; d < f; d++)
                      u[d].fn !== a && u[d].fn._ !== a && h.push(u[d]);
                  return h.length ? c[l] = h : delete c[l], this;
                }
              }, r.exports = o, r.exports.TinyEmitter = o;
            }
          )
          /******/
        }, i = {};
        function s(r) {
          if (i[r])
            return i[r].exports;
          var o = i[r] = {
            /******/
            // no module.id needed
            /******/
            // no module.loaded needed
            /******/
            exports: {}
            /******/
          };
          return t[r](o, o.exports, s), o.exports;
        }
        return function() {
          s.n = function(r) {
            var o = r && r.__esModule ? (
              /******/
              function() {
                return r.default;
              }
            ) : (
              /******/
              function() {
                return r;
              }
            );
            return s.d(o, { a: o }), o;
          };
        }(), function() {
          s.d = function(r, o) {
            for (var l in o)
              s.o(o, l) && !s.o(r, l) && Object.defineProperty(r, l, { enumerable: !0, get: o[l] });
          };
        }(), function() {
          s.o = function(r, o) {
            return Object.prototype.hasOwnProperty.call(r, o);
          };
        }(), s(686);
      }().default
    );
  });
})($_);
var mee = $_.exports;
const XUe = /* @__PURE__ */ xf(mee);
typeof window == "object" && window.NodeList && !NodeList.prototype.forEach && (NodeList.prototype.forEach = Array.prototype.forEach);
typeof window < "u" && function(n) {
  n.forEach((e) => {
    Object.prototype.hasOwnProperty.call(e, "append") || Object.defineProperty(e, "append", {
      configurable: !0,
      enumerable: !0,
      writable: !0,
      value(...t) {
        const i = document.createDocumentFragment();
        t.forEach((s) => {
          const r = s instanceof Node;
          i.appendChild(r ? s : document.createTextNode(String(s)));
        }), this.appendChild(i);
      }
    });
  });
}([Element.prototype, Document.prototype, DocumentFragment.prototype]);
class Qo {
  get disposed() {
    return this._disposed === !0;
  }
  dispose() {
    this._disposed = !0;
  }
}
(function(n) {
  function e() {
    return (t, i, s) => {
      const r = s.value, o = t.__proto__;
      s.value = function(...l) {
        this.disposed || (r.call(this, ...l), o.dispose.call(this));
      };
    };
  }
  n.dispose = e;
})(Qo || (Qo = {}));
class ZC {
  constructor() {
    this.isDisposed = !1, this.items = /* @__PURE__ */ new Set();
  }
  /**
   * Test whether the set has been disposed.
   */
  get disposed() {
    return this.isDisposed;
  }
  /**
   * Dispose of the set and the items it contains.
   *
   * #### Notes
   * Items are disposed in the order they are added to the set.
   */
  dispose() {
    this.isDisposed || (this.isDisposed = !0, this.items.forEach((e) => {
      e.dispose();
    }), this.items.clear());
  }
  /**
   * Test whether the set contains a specific item.
   *
   * @param item - The item of interest.
   *
   * @returns `true` if the set contains the item, `false` otherwise.
   */
  contains(e) {
    return this.items.has(e);
  }
  /**
   * Add a disposable item to the set.
   *
   * @param item - The item to add to the set.
   *
   * #### Notes
   * If the item is already contained in the set, this is a no-op.
   */
  add(e) {
    this.items.add(e);
  }
  /**
   * Remove a disposable item from the set.
   *
   * @param item - The item to remove from the set.
   *
   * #### Notes
   * If the item is not contained in the set, this is a no-op.
   */
  remove(e) {
    this.items.delete(e);
  }
  /**
   * Remove all items from the set.
   */
  clear() {
    this.items.clear();
  }
}
(function(n) {
  function e(t) {
    const i = new n();
    return t.forEach((s) => {
      i.add(s);
    }), i;
  }
  n.from = e;
})(ZC || (ZC = {}));
function T_(n, e, t) {
  if (t)
    switch (t.length) {
      case 0:
        return n.call(e);
      case 1:
        return n.call(e, t[0]);
      case 2:
        return n.call(e, t[0], t[1]);
      case 3:
        return n.call(e, t[0], t[1], t[2]);
      case 4:
        return n.call(e, t[0], t[1], t[2], t[3]);
      case 5:
        return n.call(e, t[0], t[1], t[2], t[3], t[4]);
      case 6:
        return n.call(e, t[0], t[1], t[2], t[3], t[4], t[5]);
      default:
        return n.apply(e, t);
    }
  return n.call(e);
}
function Ze(n, e, ...t) {
  return T_(n, e, t);
}
function vee(n) {
  return typeof n == "object" && n.then && typeof n.then == "function";
}
function ky(n) {
  return n != null && (n instanceof Promise || vee(n));
}
function iw(...n) {
  const e = [];
  if (n.forEach((i) => {
    Array.isArray(i) ? e.push(...i) : e.push(i);
  }), e.some((i) => ky(i))) {
    const i = e.map((s) => ky(s) ? s : Promise.resolve(s !== !1));
    return Promise.all(i).then((s) => s.reduce((r, o) => o !== !1 && r, !0));
  }
  return e.every((i) => i !== !1);
}
function bee(...n) {
  const e = iw(n);
  return typeof e == "boolean" ? Promise.resolve(e) : e;
}
function wv(n, e) {
  const t = [];
  for (let i = 0; i < n.length; i += 2) {
    const s = n[i], r = n[i + 1], o = Array.isArray(e) ? e : [e], l = T_(s, r, o);
    t.push(l);
  }
  return iw(t);
}
class yee {
  constructor() {
    this.listeners = {};
  }
  on(e, t, i) {
    return t == null ? this : (this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t, i), this);
  }
  once(e, t, i) {
    const s = (...r) => (this.off(e, s), wv([t, i], r));
    return this.on(e, s, this);
  }
  off(e, t, i) {
    if (!(e || t || i))
      return this.listeners = {}, this;
    const s = this.listeners;
    return (e ? [e] : Object.keys(s)).forEach((o) => {
      const l = s[o];
      if (l) {
        if (!(t || i)) {
          delete s[o];
          return;
        }
        for (let a = l.length - 2; a >= 0; a -= 2)
          t && l[a] !== t || i && l[a + 1] !== i || l.splice(a, 2);
      }
    }), this;
  }
  trigger(e, ...t) {
    let i = !0;
    if (e !== "*") {
      const r = this.listeners[e];
      r != null && (i = wv([...r], t));
    }
    const s = this.listeners["*"];
    return s != null ? iw([
      i,
      wv([...s], [e, ...t])
    ]) : i;
  }
  emit(e, ...t) {
    return this.trigger(e, ...t);
  }
}
function Oee(n, ...e) {
  e.forEach((t) => {
    Object.getOwnPropertyNames(t.prototype).forEach((i) => {
      i !== "constructor" && Object.defineProperty(n.prototype, i, Object.getOwnPropertyDescriptor(t.prototype, i));
    });
  });
}
const wee = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, e) {
  n.__proto__ = e;
} || function(n, e) {
  for (const t in e)
    Object.prototype.hasOwnProperty.call(e, t) && (n[t] = e[t]);
};
function xee(n, e) {
  wee(n, e);
  function t() {
    this.constructor = n;
  }
  n.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
}
let See = class {
};
const Cee = /^\s*class\s+/.test(`${See}`) || /^\s*class\s*\{/.test(`${class {
}}`);
function sw(n, e) {
  let t;
  return Cee ? t = class extends e {
  } : (t = function() {
    return e.apply(this, arguments);
  }, xee(t, e)), Object.defineProperty(t, "name", { value: n }), t;
}
function qC(n) {
  return n === "__proto__";
}
function rw(n, e, t = "/") {
  let i;
  const s = Array.isArray(e) ? e : e.split(t);
  if (s.length)
    for (i = n; s.length; ) {
      const r = s.shift();
      if (Object(i) === i && r && r in i)
        i = i[r];
      else
        return;
    }
  return i;
}
function sh(n, e, t, i = "/") {
  const s = Array.isArray(e) ? e : e.split(i), r = s.pop();
  if (r && !qC(r)) {
    let o = n;
    s.forEach((l) => {
      qC(l) || (o[l] == null && (o[l] = {}), o = o[l]);
    }), o[r] = t;
  }
  return n;
}
function WC(n, e, t = "/") {
  const i = Array.isArray(e) ? e.slice() : e.split(t), s = i.pop();
  if (s)
    if (i.length > 0) {
      const r = rw(n, i);
      r && delete r[s];
    } else
      delete n[s];
  return n;
}
var kee = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class gn extends yee {
  dispose() {
    this.off();
  }
}
kee([
  Qo.dispose()
], gn.prototype, "dispose", null);
(function(n) {
  n.dispose = Qo.dispose;
})(gn || (gn = {}));
Oee(gn, Qo);
const __ = (n) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (t) => e[t] || (e[t] = n(t));
}, M_ = __((n) => n.replace(/\B([A-Z])/g, "-$1").toLowerCase()), ow = __((n) => mz(Um(n)).replace(/ /g, ""));
function xv(n) {
  let e = 2166136261, t = !1, i = n;
  for (let s = 0, r = i.length; s < r; s += 1) {
    let o = i.charCodeAt(s);
    o > 127 && !t && (i = unescape(encodeURIComponent(i)), o = i.charCodeAt(s), t = !0), e ^= o, e += (e << 1) + (e << 4) + (e << 7) + (e << 8) + (e << 24);
  }
  return e >>> 0;
}
function qg() {
  let n = "";
  const e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
  for (let t = 0, i = e.length; t < i; t += 1) {
    const s = e[t], r = Math.random() * 16 | 0, o = s === "x" ? r : s === "y" ? r & 3 | 8 : s;
    n += o.toString(16);
  }
  return n;
}
function Pee(n, e, t) {
  const i = Math.min(2, Math.floor(n.length * 0.34));
  let s = Math.floor(n.length * 0.4) + 1, r, o = !1;
  const l = n.toLowerCase();
  for (const a of e) {
    const c = t(a);
    if (c !== void 0 && Math.abs(c.length - l.length) <= i) {
      const u = c.toLowerCase();
      if (u === l) {
        if (c === n)
          continue;
        return a;
      }
      if (o || c.length < 3)
        continue;
      const h = Eee(l, u, s - 1);
      if (h === void 0)
        continue;
      h < 3 ? (o = !0, r = a) : (s = h, r = a);
    }
  }
  return r;
}
function Eee(n, e, t) {
  let i = new Array(e.length + 1), s = new Array(e.length + 1);
  const r = t + 1;
  for (let l = 0; l <= e.length; l += 1)
    i[l] = l;
  for (let l = 1; l <= n.length; l += 1) {
    const a = n.charCodeAt(l - 1), c = l > t ? l - t : 1, u = e.length > t + l ? t + l : e.length;
    s[0] = l;
    let h = l;
    for (let f = 1; f < c; f += 1)
      s[f] = r;
    for (let f = c; f <= u; f += 1) {
      const p = a === e.charCodeAt(f - 1) ? i[f - 1] : Math.min(
        /* delete */
        i[f] + 1,
        /* insert */
        s[f - 1] + 1,
        /* substitute */
        i[f - 1] + 2
      );
      s[f] = p, h = Math.min(h, p);
    }
    for (let f = u + 1; f <= e.length; f += 1)
      s[f] = r;
    if (h > t)
      return;
    const d = i;
    i = s, s = d;
  }
  const o = i[e.length];
  return o > t ? void 0 : o;
}
function zo(n) {
  return typeof n == "string" && n.slice(-1) === "%";
}
function br(n, e) {
  if (n == null)
    return 0;
  let t;
  if (typeof n == "string") {
    if (t = parseFloat(n), zo(n) && (t /= 100, Number.isFinite(t)))
      return t * e;
  } else
    t = n;
  return Number.isFinite(t) ? t > 0 && t < 1 ? t * e : t : 0;
}
function ja(n) {
  if (typeof n == "object") {
    let t = 0, i = 0, s = 0, r = 0;
    return n.vertical != null && Number.isFinite(n.vertical) && (i = r = n.vertical), n.horizontal != null && Number.isFinite(n.horizontal) && (s = t = n.horizontal), n.left != null && Number.isFinite(n.left) && (t = n.left), n.top != null && Number.isFinite(n.top) && (i = n.top), n.right != null && Number.isFinite(n.right) && (s = n.right), n.bottom != null && Number.isFinite(n.bottom) && (r = n.bottom), { top: i, right: s, bottom: r, left: t };
  }
  let e = 0;
  return n != null && Number.isFinite(n) && (e = n), { top: e, right: e, bottom: e, left: e };
}
let lw = !1, R_ = !1, N_ = !1, D_ = !1, L_ = !1, I_ = !1, B_ = !1, Q_ = !1, z_ = !1, j_ = !1, V_ = !1, F_ = !1, Z_ = !1, q_ = !1, W_ = !1, H_ = !1;
if (typeof navigator == "object") {
  const n = navigator.userAgent;
  lw = n.indexOf("Macintosh") >= 0, R_ = !!n.match(/(iPad|iPhone|iPod)/g), N_ = n.indexOf("Windows") >= 0, D_ = n.indexOf("MSIE") >= 0, L_ = !!n.match(/Trident\/7\./), I_ = !!n.match(/Edge\//), B_ = n.indexOf("Mozilla/") >= 0 && n.indexOf("MSIE") < 0 && n.indexOf("Edge/") < 0, z_ = n.indexOf("Chrome/") >= 0 && n.indexOf("Edge/") < 0, j_ = n.indexOf("Opera/") >= 0 || n.indexOf("OPR/") >= 0, V_ = n.indexOf("Firefox/") >= 0, F_ = n.indexOf("AppleWebKit/") >= 0 && n.indexOf("Chrome/") < 0 && n.indexOf("Edge/") < 0, typeof document == "object" && (H_ = !document.createElementNS || `${document.createElementNS("http://www.w3.org/2000/svg", "foreignObject")}` != "[object SVGForeignObjectElement]" || n.indexOf("Opera/") >= 0);
}
typeof window == "object" && (Q_ = window.chrome != null && window.chrome.app != null && window.chrome.app.runtime != null, q_ = window.PointerEvent != null && !lw);
if (typeof document == "object") {
  Z_ = "ontouchstart" in document.documentElement;
  try {
    const n = Object.defineProperty({}, "passive", {
      get() {
        W_ = !0;
      }
    }), e = document.createElement("div");
    e.addEventListener && e.addEventListener("click", () => {
    }, n);
  } catch {
  }
}
var _l;
(function(n) {
  n.IS_MAC = lw, n.IS_IOS = R_, n.IS_WINDOWS = N_, n.IS_IE = D_, n.IS_IE11 = L_, n.IS_EDGE = I_, n.IS_NETSCAPE = B_, n.IS_CHROME_APP = Q_, n.IS_CHROME = z_, n.IS_OPERA = j_, n.IS_FIREFOX = V_, n.IS_SAFARI = F_, n.SUPPORT_TOUCH = Z_, n.SUPPORT_POINTER = q_, n.SUPPORT_PASSIVE = W_, n.NO_FOREIGNOBJECT = H_, n.SUPPORT_FOREIGNOBJECT = !n.NO_FOREIGNOBJECT;
})(_l || (_l = {}));
(function(n) {
  function e() {
    const r = window.module;
    return r != null && r.hot != null && r.hot.status != null ? r.hot.status() : "unkonwn";
  }
  n.getHMRStatus = e;
  function t() {
    return e() === "apply";
  }
  n.isApplyingHMR = t;
  const i = {
    select: "input",
    change: "input",
    submit: "form",
    reset: "form",
    error: "img",
    load: "img",
    abort: "img"
  };
  function s(r) {
    const o = document.createElement(i[r] || "div"), l = `on${r}`;
    let a = l in o;
    return a || (o.setAttribute(l, "return;"), a = typeof o[l] == "function"), a;
  }
  n.isEventSupported = s;
})(_l || (_l = {}));
const aw = /[\t\r\n\f]/g, cw = /\S+/g, mu = (n) => ` ${n} `;
function vu(n) {
  return n && n.getAttribute && n.getAttribute("class") || "";
}
function rh(n, e) {
  if (n == null || e == null)
    return !1;
  const t = mu(vu(n)), i = mu(e);
  return n.nodeType === 1 ? t.replace(aw, " ").includes(i) : !1;
}
function Ye(n, e) {
  if (!(n == null || e == null)) {
    if (typeof e == "function")
      return Ye(n, e(vu(n)));
    if (typeof e == "string" && n.nodeType === 1) {
      const t = e.match(cw) || [], i = mu(vu(n)).replace(aw, " ");
      let s = t.reduce((r, o) => r.indexOf(mu(o)) < 0 ? `${r}${o} ` : r, i);
      s = s.trim(), i !== s && n.setAttribute("class", s);
    }
  }
}
function Rn(n, e) {
  if (n != null) {
    if (typeof e == "function")
      return Rn(n, e(vu(n)));
    if ((!e || typeof e == "string") && n.nodeType === 1) {
      const t = (e || "").match(cw) || [], i = mu(vu(n)).replace(aw, " ");
      let s = t.reduce((r, o) => {
        const l = mu(o);
        return r.indexOf(l) > -1 ? r.replace(l, " ") : r;
      }, i);
      s = e ? s.trim() : "", i !== s && n.setAttribute("class", s);
    }
  }
}
function Kh(n, e, t) {
  if (!(n == null || e == null)) {
    if (t != null && typeof e == "string") {
      t ? Ye(n, e) : Rn(n, e);
      return;
    }
    if (typeof e == "function")
      return Kh(n, e(vu(n), t), t);
    typeof e == "string" && (e.match(cw) || []).forEach((s) => {
      rh(n, s) ? Rn(n, s) : Ye(n, s);
    });
  }
}
let HC = 0;
function Aee() {
  return HC += 1, `v${HC}`;
}
function uw(n) {
  return (n.id == null || n.id === "") && (n.id = Aee()), n.id;
}
function Ml(n) {
  return n == null ? !1 : typeof n.getScreenCTM == "function" && n instanceof SVGElement;
}
const si = {
  svg: "http://www.w3.org/2000/svg",
  xmlns: "http://www.w3.org/2000/xmlns/",
  xml: "http://www.w3.org/XML/1998/namespace",
  xlink: "http://www.w3.org/1999/xlink",
  xhtml: "http://www.w3.org/1999/xhtml"
}, XC = "1.1";
function YC(n, e = document) {
  return e.createElement(n);
}
function hw(n, e = si.xhtml, t = document) {
  return t.createElementNS(e, n);
}
function $r(n, e = document) {
  return hw(n, si.svg, e);
}
function Wg(n) {
  if (n) {
    const t = `<svg xmlns="${si.svg}" xmlns:xlink="${si.xlink}" version="${XC}">${n}</svg>`, { documentElement: i } = $ee(t, { async: !1 });
    return i;
  }
  const e = document.createElementNS(si.svg, "svg");
  return e.setAttributeNS(si.xmlns, "xmlns:xlink", si.xlink), e.setAttribute("version", XC), e;
}
function $ee(n, e = {}) {
  let t;
  try {
    const i = new DOMParser();
    if (e.async != null) {
      const s = i;
      s.async = e.async;
    }
    t = i.parseFromString(n, e.mimeType || "text/xml");
  } catch {
    t = void 0;
  }
  if (!t || t.getElementsByTagName("parsererror").length)
    throw new Error(`Invalid XML: ${n}`);
  return t;
}
function Tee(n, e = !0) {
  const t = n.nodeName;
  return e ? t.toLowerCase() : t.toUpperCase();
}
function dw(n) {
  let e = 0, t = n.previousSibling;
  for (; t; )
    t.nodeType === 1 && (e += 1), t = t.previousSibling;
  return e;
}
function _ee(n, e) {
  return n.querySelectorAll(e);
}
function Mee(n, e) {
  return n.querySelector(e);
}
function X_(n, e, t) {
  const i = n.ownerSVGElement;
  let s = n.parentNode;
  for (; s && s !== t && s !== i; ) {
    if (rh(s, e))
      return s;
    s = s.parentNode;
  }
  return null;
}
function Y_(n, e) {
  const t = e && e.parentNode;
  return n === t || !!(t && t.nodeType === 1 && n.compareDocumentPosition(t) & 16);
}
function no(n) {
  n && (Array.isArray(n) ? n : [n]).forEach((t) => {
    t.parentNode && t.parentNode.removeChild(t);
  });
}
function kf(n) {
  for (; n.firstChild; )
    n.removeChild(n.firstChild);
}
function Xl(n, e) {
  (Array.isArray(e) ? e : [e]).forEach((i) => {
    i != null && n.appendChild(i);
  });
}
function U_(n, e) {
  const t = n.firstChild;
  return t ? fw(t, e) : Xl(n, e);
}
function fw(n, e) {
  const t = n.parentNode;
  t && (Array.isArray(e) ? e : [e]).forEach((s) => {
    s != null && t.insertBefore(s, n);
  });
}
function Jh(n, e) {
  e != null && e.appendChild(n);
}
function UC(n) {
  try {
    return n instanceof HTMLElement;
  } catch {
    return typeof n == "object" && n.nodeType === 1 && typeof n.style == "object" && typeof n.ownerDocument == "object";
  }
}
function Ree(n, e) {
  const t = [];
  let i = n.firstChild;
  for (; i; i = i.nextSibling)
    i.nodeType === 1 && (!e || rh(i, e)) && t.push(i);
  return t;
}
const G_ = [
  "viewBox",
  "attributeName",
  "attributeType",
  "repeatCount",
  "textLength",
  "lengthAdjust",
  "gradientUnits"
];
function Nee(n, e) {
  return n.getAttribute(e);
}
function pw(n, e) {
  const t = J_(e);
  t.ns ? n.hasAttributeNS(t.ns, t.local) && n.removeAttributeNS(t.ns, t.local) : n.hasAttribute(e) && n.removeAttribute(e);
}
function gw(n, e, t) {
  if (t == null)
    return pw(n, e);
  const i = J_(e);
  i.ns && typeof t == "string" ? n.setAttributeNS(i.ns, e, t) : e === "id" ? n.id = `${t}` : n.setAttribute(e, `${t}`);
}
function K_(n, e) {
  Object.keys(e).forEach((t) => {
    gw(n, t, e[t]);
  });
}
function St(n, e, t) {
  if (e == null) {
    const i = n.attributes, s = {};
    for (let r = 0; r < i.length; r += 1)
      s[i[r].name] = i[r].value;
    return s;
  }
  if (typeof e == "string" && t === void 0)
    return n.getAttribute(e);
  typeof e == "object" ? K_(n, e) : gw(n, e, t);
}
function J_(n) {
  if (n.indexOf(":") !== -1) {
    const e = n.split(":");
    return {
      ns: si[e[0]],
      local: e[1]
    };
  }
  return {
    ns: null,
    local: n
  };
}
function _d(n) {
  const e = {};
  return Object.keys(n).forEach((t) => {
    const i = G_.includes(t) ? t : M_(t);
    e[i] = n[t];
  }), e;
}
function ip(n) {
  const e = {};
  return n.split(";").forEach((i) => {
    const s = i.trim();
    if (s) {
      const r = s.split("=");
      r.length && (e[r[0].trim()] = r[1] ? r[1].trim() : "");
    }
  }), e;
}
function Py(n, e) {
  return Object.keys(e).forEach((t) => {
    if (t === "class")
      n[t] = n[t] ? `${n[t]} ${e[t]}` : e[t];
    else if (t === "style") {
      const i = typeof n[t] == "object", s = typeof e[t] == "object";
      let r, o;
      i && s ? (r = n[t], o = e[t]) : i ? (r = n[t], o = ip(e[t])) : s ? (r = ip(n[t]), o = e[t]) : (r = ip(n[t]), o = ip(e[t])), n[t] = Py(r, o);
    } else
      n[t] = e[t];
  }), n;
}
function Dee(n, e, t = {}) {
  const i = t.offset || 0, s = [], r = [];
  let o, l, a = null;
  for (let c = 0; c < n.length; c += 1) {
    o = r[c] = n[c];
    for (let u = 0, h = e.length; u < h; u += 1) {
      const d = e[u], f = d.start + i, p = d.end + i;
      c >= f && c < p && (typeof o == "string" ? o = r[c] = {
        t: n[c],
        attrs: d.attrs
      } : o.attrs = Py(Py({}, o.attrs), d.attrs), t.includeAnnotationIndices && (o.annotations == null && (o.annotations = []), o.annotations.push(u)));
    }
    l = r[c - 1], l ? wn(o) && wn(l) ? (a = a, JSON.stringify(o.attrs) === JSON.stringify(l.attrs) ? a.t += o.t : (s.push(a), a = o)) : wn(o) || wn(l) ? (a = a, s.push(a), a = o) : a = (a || "") + o : a = o;
  }
  return a != null && s.push(a), s;
}
function Lee(n) {
  return n.replace(/ /g, " ");
}
var GC;
(function(n) {
  function e(c) {
    const u = "data:";
    return c.substr(0, u.length) === u;
  }
  n.isDataUrl = e;
  function t(c, u) {
    if (!c || e(c)) {
      setTimeout(() => u(null, c));
      return;
    }
    const h = () => {
      u(new Error(`Failed to load image: ${c}`));
    }, d = window.FileReader ? (
      // chrome, IE10+
      (p) => {
        if (p.status === 200) {
          const g = new FileReader();
          g.onload = (m) => {
            const v = m.target.result;
            u(null, v);
          }, g.onerror = h, g.readAsDataURL(p.response);
        } else
          h();
      }
    ) : (p) => {
      const g = (m) => {
        const O = [];
        for (let b = 0; b < m.length; b += 32768)
          O.push(String.fromCharCode.apply(null, m.subarray(b, b + 32768)));
        return O.join("");
      };
      if (p.status === 200) {
        let m = c.split(".").pop() || "png";
        m === "svg" && (m = "svg+xml");
        const v = `data:image/${m};base64,`, O = new Uint8Array(p.response), b = v + btoa(g(O));
        u(null, b);
      } else
        h();
    }, f = new XMLHttpRequest();
    f.responseType = window.FileReader ? "blob" : "arraybuffer", f.open("GET", c, !0), f.addEventListener("error", h), f.addEventListener("load", () => d(f)), f.send();
  }
  n.imageToDataUri = t;
  function i(c) {
    let u = c.replace(/\s/g, "");
    u = decodeURIComponent(u);
    const h = u.indexOf(","), d = u.slice(0, h), f = d.split(":")[1].split(";")[0], p = u.slice(h + 1);
    let g;
    d.indexOf("base64") >= 0 ? g = atob(p) : g = unescape(encodeURIComponent(p));
    const m = new Uint8Array(g.length);
    for (let v = 0; v < g.length; v += 1)
      m[v] = g.charCodeAt(v);
    return new Blob([m], { type: f });
  }
  n.dataUriToBlob = i;
  function s(c, u) {
    const h = window.navigator.msSaveBlob;
    if (h)
      h(c, u);
    else {
      const d = window.URL.createObjectURL(c), f = document.createElement("a");
      f.href = d, f.download = u, document.body.appendChild(f), f.click(), document.body.removeChild(f), window.URL.revokeObjectURL(d);
    }
  }
  n.downloadBlob = s;
  function r(c, u) {
    const h = i(c);
    s(h, u);
  }
  n.downloadDataUri = r;
  function o(c) {
    const u = c.match(/<svg[^>]*viewBox\s*=\s*(["']?)(.+?)\1[^>]*>/i);
    return u && u[2] ? u[2].replace(/\s+/, " ").split(" ") : null;
  }
  function l(c) {
    const u = parseFloat(c);
    return Number.isNaN(u) ? null : u;
  }
  function a(c, u = {}) {
    let h = null;
    const d = (b) => (h == null && (h = o(c)), h != null ? l(h[b]) : null), f = (b) => {
      const w = c.match(b);
      return w && w[2] ? l(w[2]) : null;
    };
    let p = u.width;
    if (p == null && (p = f(/<svg[^>]*width\s*=\s*(["']?)(.+?)\1[^>]*>/i)), p == null && (p = d(2)), p == null)
      throw new Error("Can not parse width from svg string");
    let g = u.height;
    if (g == null && (g = f(/<svg[^>]*height\s*=\s*(["']?)(.+?)\1[^>]*>/i)), g == null && (g = d(3)), g == null)
      throw new Error("Can not parse height from svg string");
    return `data:image/svg+xml,${encodeURIComponent(c).replace(/'/g, "%27").replace(/"/g, "%22")}`;
  }
  n.svgToDataUrl = a;
})(GC || (GC = {}));
let ha;
const Iee = {
  px(n) {
    return n;
  },
  mm(n) {
    return ha * n;
  },
  cm(n) {
    return ha * n * 10;
  },
  in(n) {
    return ha * n * 25.4;
  },
  pt(n) {
    return ha * (25.4 * n / 72);
  },
  pc(n) {
    return ha * (25.4 * n / 6);
  }
};
var KC;
(function(n) {
  function e(i, s, r) {
    const o = document.createElement("div"), l = o.style;
    l.display = "inline-block", l.position = "absolute", l.left = "-15000px", l.top = "-15000px", l.width = i + (r || "px"), l.height = s + (r || "px"), document.body.appendChild(o);
    const a = o.getBoundingClientRect(), c = {
      width: a.width || 0,
      height: a.height || 0
    };
    return document.body.removeChild(o), c;
  }
  n.measure = e;
  function t(i, s) {
    ha == null && (ha = e("1", "1", "mm").width);
    const r = s ? Iee[s] : null;
    return r ? r(i) : i;
  }
  n.toPx = t;
})(KC || (KC = {}));
const Bee = /-(.)/g;
function Qee(n) {
  return n.replace(Bee, (e, t) => t.toUpperCase());
}
const Sv = {}, JC = ["webkit", "ms", "moz", "o"], eM = typeof document < "u" ? document.createElement("div").style : {};
function zee(n) {
  for (let e = 0; e < JC.length; e += 1) {
    const t = JC[e] + n;
    if (t in eM)
      return t;
  }
  return null;
}
function jee(n) {
  const e = Qee(n);
  if (Sv[e] == null) {
    const t = e.charAt(0).toUpperCase() + e.slice(1);
    Sv[e] = e in eM ? e : zee(t);
  }
  return Sv[e];
}
function ek(n, e) {
  const t = n.ownerDocument && n.ownerDocument.defaultView && n.ownerDocument.defaultView.opener ? n.ownerDocument.defaultView.getComputedStyle(n, null) : window.getComputedStyle(n, null);
  return t && e ? t.getPropertyValue(e) || t[e] : t;
}
const Vee = {
  animationIterationCount: !0,
  columnCount: !0,
  flexGrow: !0,
  flexShrink: !0,
  fontWeight: !0,
  gridArea: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnStart: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowStart: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  widows: !0,
  zIndex: !0
};
function Fee(n) {
  return /^--/.test(n);
}
function Zee(n, e, t) {
  const i = window.getComputedStyle(n, null);
  return t ? i.getPropertyValue(e) || void 0 : i[e] || n.style[e];
}
function qee(n, e) {
  return !Vee[n] && typeof e == "number" ? `${e}px` : e;
}
function Zn(n, e, t) {
  if (typeof e == "string") {
    const i = Fee(e);
    if (i || (e = jee(e)), t === void 0)
      return Zee(n, e, i);
    i || (t = qee(e, t));
    const s = n.style;
    i ? s.setProperty(e, t) : s[e] = t;
    return;
  }
  for (const i in e)
    Zn(n, i, e[i]);
}
const Hg = /* @__PURE__ */ new WeakMap();
function tk(n, e) {
  const t = Um(e), i = Hg.get(n);
  if (i)
    return i[t];
}
function Wee(n, e, t) {
  const i = Um(e), s = Hg.get(n);
  s ? s[i] = t : Hg.set(n, {
    [i]: t
  });
}
function Va(n, e, t) {
  if (!e) {
    const i = {};
    return Object.keys(Hg).forEach((s) => {
      i[s] = tk(n, s);
    }), i;
  }
  if (typeof e == "string") {
    if (t === void 0)
      return tk(n, e);
    Wee(n, e, t);
    return;
  }
  for (const i in e)
    Va(n, i, e[i]);
}
class Je {
  get [Symbol.toStringTag]() {
    return Je.toStringTag;
  }
  get type() {
    return this.node.nodeName;
  }
  get id() {
    return this.node.id;
  }
  set id(e) {
    this.node.id = e;
  }
  constructor(e, t, i) {
    if (!e)
      throw new TypeError("Invalid element to create vector");
    let s;
    if (Je.isVector(e))
      s = e.node;
    else if (typeof e == "string")
      if (e.toLowerCase() === "svg")
        s = Wg();
      else if (e[0] === "<") {
        const r = Wg(e);
        s = document.importNode(r.firstChild, !0);
      } else
        s = document.createElementNS(si.svg, e);
    else
      s = e;
    this.node = s, t && this.setAttributes(t), i && this.append(i);
  }
  transform(e, t) {
    return e == null ? bu(this.node) : (bu(this.node, e, t), this);
  }
  translate(e, t = 0, i = {}) {
    return e == null ? ik(this.node) : (ik(this.node, e, t, i), this);
  }
  rotate(e, t, i, s = {}) {
    return e == null ? $y(this.node) : ($y(this.node, e, t, i, s), this);
  }
  scale(e, t) {
    return e == null ? Ty(this.node) : (Ty(this.node, e, t), this);
  }
  /**
   * Returns an SVGMatrix that specifies the transformation necessary
   * to convert this coordinate system into `target` coordinate system.
   */
  getTransformToElement(e) {
    const t = Je.toNode(e);
    return td(this.node, t);
  }
  removeAttribute(e) {
    return pw(this.node, e), this;
  }
  getAttribute(e) {
    return Nee(this.node, e);
  }
  setAttribute(e, t) {
    return gw(this.node, e, t), this;
  }
  setAttributes(e) {
    return K_(this.node, e), this;
  }
  attr(e, t) {
    return e == null ? St(this.node) : typeof e == "string" && t === void 0 ? St(this.node, e) : (typeof e == "object" ? St(this.node, e) : St(this.node, e, t), this);
  }
  svg() {
    return this.node instanceof SVGSVGElement ? this : Je.create(this.node.ownerSVGElement);
  }
  defs() {
    const e = this.svg() || this, t = e.node.getElementsByTagName("defs")[0];
    return t ? Je.create(t) : Je.create("defs").appendTo(e);
  }
  text(e, t = {}) {
    return nM(this.node, e, t), this;
  }
  tagName() {
    return Tee(this.node);
  }
  clone() {
    return Je.create(this.node.cloneNode(!0));
  }
  remove() {
    return no(this.node), this;
  }
  empty() {
    return kf(this.node), this;
  }
  append(e) {
    return Xl(this.node, Je.toNodes(e)), this;
  }
  appendTo(e) {
    return Jh(this.node, Je.isVector(e) ? e.node : e), this;
  }
  prepend(e) {
    return U_(this.node, Je.toNodes(e)), this;
  }
  before(e) {
    return fw(this.node, Je.toNodes(e)), this;
  }
  replace(e) {
    return this.node.parentNode && this.node.parentNode.replaceChild(Je.toNode(e), this.node), Je.create(e);
  }
  first() {
    return this.node.firstChild ? Je.create(this.node.firstChild) : null;
  }
  last() {
    return this.node.lastChild ? Je.create(this.node.lastChild) : null;
  }
  get(e) {
    const t = this.node.childNodes[e];
    return t ? Je.create(t) : null;
  }
  indexOf(e) {
    return Array.prototype.slice.call(this.node.childNodes).indexOf(Je.toNode(e));
  }
  find(e) {
    const t = [], i = _ee(this.node, e);
    if (i)
      for (let s = 0, r = i.length; s < r; s += 1)
        t.push(Je.create(i[s]));
    return t;
  }
  findOne(e) {
    const t = Mee(this.node, e);
    return t ? Je.create(t) : null;
  }
  findParentByClass(e, t) {
    const i = X_(this.node, e, t);
    return i ? Je.create(i) : null;
  }
  matches(e) {
    const t = this.node;
    this.node.matches;
    const i = t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector || null;
    return i && i.call(t, e);
  }
  contains(e) {
    return Y_(this.node, Je.isVector(e) ? e.node : e);
  }
  wrap(e) {
    const t = Je.create(e), i = this.node.parentNode;
    return i != null && i.insertBefore(t.node, this.node), t.append(this);
  }
  parent(e) {
    let t = this;
    if (t.node.parentNode == null)
      return null;
    if (t = Je.create(t.node.parentNode), e == null)
      return t;
    do
      if (typeof e == "string" ? t.matches(e) : t instanceof e)
        return t;
    while (t = Je.create(t.node.parentNode));
    return t;
  }
  children() {
    const e = this.node.childNodes, t = [];
    for (let i = 0; i < e.length; i += 1)
      e[i].nodeType === 1 && t.push(Je.create(e[i]));
    return t;
  }
  eachChild(e, t) {
    const i = this.children();
    for (let s = 0, r = i.length; s < r; s += 1)
      e.call(i[s], i[s], s, i), t && i[s].eachChild(e, t);
    return this;
  }
  index() {
    return dw(this.node);
  }
  hasClass(e) {
    return rh(this.node, e);
  }
  addClass(e) {
    return Ye(this.node, e), this;
  }
  removeClass(e) {
    return Rn(this.node, e), this;
  }
  toggleClass(e, t) {
    return Kh(this.node, e, t), this;
  }
  toLocalPoint(e, t) {
    return dte(this.node, e, t);
  }
  /**
   * Samples the underlying SVG element (it currently works only on
   * paths - where it is most useful anyway). Returns an array of objects
   * of the form `{ x: Number, y: Number, distance: Number }`. Each of these
   * objects represent a point on the path. This basically creates a discrete
   * representation of the path (which is possible a curve). The sampling
   * interval defines the accuracy of the sampling. In other words, we travel
   * from the beginning of the path to the end by interval distance (on the
   * path, not between the resulting points) and collect the discrete points
   * on the path. This is very useful in many situations. For example, SVG
   * does not provide a built-in mechanism to find intersections between two
   * paths. Using sampling, we can just generate bunch of points for each of
   * the path and find the closest ones from each set.
   */
  sample(e = 1) {
    return this.node instanceof SVGPathElement ? Uee(this.node, e) : [];
  }
  toPath() {
    return Je.create(ite(this.node));
  }
  toPathData() {
    return oM(this.node);
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(o) {
    if (o == null)
      return !1;
    if (o instanceof n)
      return !0;
    const l = o[Symbol.toStringTag], a = o;
    return (l == null || l === n.toStringTag) && a.node instanceof SVGElement && typeof a.sample == "function" && typeof a.toPath == "function";
  }
  n.isVector = e;
  function t(o, l, a) {
    return new n(o, l, a);
  }
  n.create = t;
  function i(o) {
    if (o[0] === "<") {
      const l = Wg(o), a = [];
      for (let c = 0, u = l.childNodes.length; c < u; c += 1) {
        const h = l.childNodes[c];
        a.push(t(document.importNode(h, !0)));
      }
      return a;
    }
    return [t(o)];
  }
  n.createVectors = i;
  function s(o) {
    return e(o) ? o.node : o;
  }
  n.toNode = s;
  function r(o) {
    return Array.isArray(o) ? o.map((l) => s(l)) : [s(o)];
  }
  n.toNodes = r;
})(Je || (Je = {}));
function Hee(n, e) {
  const t = Je.create(e), i = Je.create("textPath"), s = n.d;
  if (s && n["xlink:href"] === void 0) {
    const r = Je.create("path").attr("d", s).appendTo(t.defs());
    i.attr("xlink:href", `#${r.id}`);
  }
  return typeof n == "object" && i.attr(n), i.node;
}
function Xee(n, e, t) {
  const i = t.eol, s = t.baseSize, r = t.lineHeight;
  let o = 0, l;
  const a = {}, c = e.length - 1;
  for (let u = 0; u <= c; u += 1) {
    let h = e[u], d = null;
    if (typeof h == "object") {
      const f = h.attrs, p = Je.create("tspan", f);
      l = p.node;
      let g = h.t;
      i && u === c && (g += i), l.textContent = g;
      const m = f.class;
      m && p.addClass(m), t.includeAnnotationIndices && p.attr("annotations", h.annotations.join(",")), d = parseFloat(f["font-size"]), d === void 0 && (d = s), d && d > o && (o = d);
    } else
      i && u === c && (h += i), l = document.createTextNode(h || " "), s && s > o && (o = s);
    n.appendChild(l);
  }
  return o && (a.maxFontSize = o), r ? a.lineHeight = r : o && (a.lineHeight = o * 1.2), a;
}
const tM = /em$/;
function sp(n, e) {
  const t = parseFloat(n);
  return tM.test(n) ? t * e : t;
}
function Yee(n, e, t, i) {
  if (!Array.isArray(e))
    return 0;
  const s = e.length;
  if (!s)
    return 0;
  let r = e[0];
  const o = sp(r.maxFontSize, t) || t;
  let l = 0;
  const a = sp(i, t);
  for (let h = 1; h < s; h += 1) {
    r = e[h];
    const d = sp(r.lineHeight, t) || a;
    l += d;
  }
  const c = sp(r.maxFontSize, t) || t;
  let u;
  switch (n) {
    case "middle":
      u = o / 2 - 0.15 * c - l / 2;
      break;
    case "bottom":
      u = -(0.25 * c) - l;
      break;
    case "top":
    default:
      u = 0.8 * o;
      break;
  }
  return u;
}
function nM(n, e, t = {}) {
  e = Lee(e);
  const i = t.eol;
  let s = t.textPath;
  const r = t.textVerticalAnchor, o = r === "middle" || r === "bottom" || r === "top";
  let l = t.x;
  l === void 0 && (l = n.getAttribute("x") || 0);
  const a = t.includeAnnotationIndices;
  let c = t.annotations;
  c && !Array.isArray(c) && (c = [c]);
  const u = t.lineHeight, h = u === "auto", d = h ? "1.5em" : u || "1em";
  let f = !0;
  const p = n.childNodes;
  if (p.length === 1) {
    const E = p[0];
    E && E.tagName.toUpperCase() === "TITLE" && (f = !1);
  }
  f && kf(n), St(n, {
    // Preserve spaces, do not consecutive spaces to get collapsed to one.
    "xml:space": "preserve",
    // An empty text gets rendered into the DOM in webkit-based browsers.
    // In order to unify this behaviour across all browsers
    // we rather hide the text element when it's empty.
    display: e || t.displayEmpty ? null : "none"
  });
  const g = St(n, "font-size");
  let m = parseFloat(g);
  m || (m = 16, (o || c) && !g && St(n, "font-size", `${m}`));
  let v;
  s ? (typeof s == "string" && (s = { d: s }), v = Hee(s, n)) : v = document.createDocumentFragment();
  let O, b = 0, w;
  const x = e.split(`
`), S = [], C = x.length - 1;
  for (let E = 0; E <= C; E += 1) {
    O = d;
    let M = "v-line";
    const _ = $r("tspan");
    let T, B = x[E];
    if (B)
      if (c) {
        const I = Dee(B, c, {
          offset: -b,
          includeAnnotationIndices: a
        });
        T = Xee(_, I, {
          eol: E !== C && i,
          baseSize: m,
          lineHeight: h ? null : d,
          includeAnnotationIndices: a
        });
        const P = T.lineHeight;
        P && h && E !== 0 && (O = P), E === 0 && (w = T.maxFontSize * 0.8);
      } else
        i && E !== C && (B += i), _.textContent = B;
    else {
      _.textContent = "-", M += " v-empty-line";
      const I = _.style;
      I.fillOpacity = 0, I.strokeOpacity = 0, c && (T = {});
    }
    T && S.push(T), E > 0 && _.setAttribute("dy", O), (E > 0 || s) && _.setAttribute("x", l), _.className.baseVal = M, v.appendChild(_), b += B.length + 1;
  }
  if (o)
    if (c)
      O = Yee(r, S, m, d);
    else if (r === "top")
      O = "0.8em";
    else {
      let E;
      switch (C > 0 ? (E = parseFloat(d) || 1, E *= C, tM.test(d) || (E /= m)) : E = 0, r) {
        case "middle":
          O = `${0.3 - E / 2}em`;
          break;
        case "bottom":
          O = `${-E - 0.3}em`;
          break;
      }
    }
  else
    r === 0 ? O = "0em" : r ? O = r : (O = 0, n.getAttribute("y") == null && n.setAttribute("y", `${w || "0.8em"}`));
  v.firstChild.setAttribute("dy", O), n.appendChild(v);
}
function ed(n, e = {}) {
  const t = document.createElement("canvas").getContext("2d");
  if (!n)
    return { width: 0 };
  const i = [], s = e["font-size"] ? `${parseFloat(e["font-size"])}px` : "14px";
  return i.push(e["font-style"] || "normal"), i.push(e["font-variant"] || "normal"), i.push(e["font-weight"] || 400), i.push(s), i.push(e["font-family"] || "sans-serif"), t.font = i.join(" "), t.measureText(n);
}
function nk(n, e, t, i = {}) {
  if (e >= t)
    return [n, ""];
  const s = n.length, r = {};
  let o = Math.round(e / t * s - 1);
  for (o < 0 && (o = 0); o >= 0 && o < s; ) {
    const l = n.slice(0, o), a = r[l] || ed(l, i).width, c = n.slice(0, o + 1), u = r[c] || ed(c, i).width;
    if (r[l] = a, r[c] = u, a > e)
      o -= 1;
    else if (u <= e)
      o += 1;
    else
      break;
  }
  return [n.slice(0, o), n.slice(o)];
}
function iM(n, e, t = {}, i = {}) {
  const s = e.width, r = e.height, o = i.eol || `
`, l = t.fontSize || 14, a = t.lineHeight ? parseFloat(t.lineHeight) : Math.ceil(l * 1.4), c = Math.floor(r / a);
  if (n.indexOf(o) > -1) {
    const m = qg(), v = [];
    return n.split(o).map((O) => {
      const b = iM(O, Object.assign(Object.assign({}, e), { height: Number.MAX_SAFE_INTEGER }), t, Object.assign(Object.assign({}, i), { eol: m }));
      b && v.push(...b.split(m));
    }), v.slice(0, c).join(o);
  }
  const { width: u } = ed(n, t);
  if (u < s)
    return n;
  const h = [];
  let d = n, f = u, p = i.ellipsis, g = 0;
  p && (typeof p != "string" && (p = "…"), g = ed(p, t).width);
  for (let m = 0; m < c; m += 1)
    if (f > s)
      if (m === c - 1) {
        const [O] = nk(d, s - g, f, t);
        h.push(p ? `${O}${p}` : O);
      } else {
        const [O, b] = nk(d, s, f, t);
        h.push(O), d = b, f = ed(d, t).width;
      }
    else {
      h.push(d);
      break;
    }
  return h.join(o);
}
const Ey = 0.551784;
function vi(n, e, t = NaN) {
  const i = n.getAttribute(e);
  if (i == null)
    return t;
  const s = parseFloat(i);
  return Number.isNaN(s) ? t : s;
}
function Uee(n, e = 1) {
  const t = n.getTotalLength(), i = [];
  let s = 0, r;
  for (; s < t; )
    r = n.getPointAtLength(s), i.push({ distance: s, x: r.x, y: r.y }), s += e;
  return i;
}
function Gee(n) {
  return [
    "M",
    vi(n, "x1"),
    vi(n, "y1"),
    "L",
    vi(n, "x2"),
    vi(n, "y2")
  ].join(" ");
}
function Kee(n) {
  const e = Xg(n);
  return e.length === 0 ? null : `${sM(e)} Z`;
}
function Jee(n) {
  const e = Xg(n);
  return e.length === 0 ? null : sM(e);
}
function sM(n) {
  return `M ${n.map((t) => `${t.x} ${t.y}`).join(" L")}`;
}
function Xg(n) {
  const e = [], t = n.points;
  if (t)
    for (let i = 0, s = t.numberOfItems; i < s; i += 1)
      e.push(t.getItem(i));
  return e;
}
function ete(n) {
  const e = vi(n, "cx", 0), t = vi(n, "cy", 0), i = vi(n, "r"), s = i * Ey;
  return [
    "M",
    e,
    t - i,
    "C",
    e + s,
    t - i,
    e + i,
    t - s,
    e + i,
    t,
    "C",
    e + i,
    t + s,
    e + s,
    t + i,
    e,
    t + i,
    "C",
    e - s,
    t + i,
    e - i,
    t + s,
    e - i,
    t,
    "C",
    e - i,
    t - s,
    e - s,
    t - i,
    e,
    t - i,
    "Z"
  ].join(" ");
}
function tte(n) {
  const e = vi(n, "cx", 0), t = vi(n, "cy", 0), i = vi(n, "rx"), s = vi(n, "ry") || i, r = i * Ey, o = s * Ey;
  return [
    "M",
    e,
    t - s,
    "C",
    e + r,
    t - s,
    e + i,
    t - o,
    e + i,
    t,
    "C",
    e + i,
    t + o,
    e + r,
    t + s,
    e,
    t + s,
    "C",
    e - r,
    t + s,
    e - i,
    t + o,
    e - i,
    t,
    "C",
    e - i,
    t - o,
    e - r,
    t - s,
    e,
    t - s,
    "Z"
  ].join(" ");
}
function nte(n) {
  return rM({
    x: vi(n, "x", 0),
    y: vi(n, "y", 0),
    width: vi(n, "width", 0),
    height: vi(n, "height", 0),
    rx: vi(n, "rx", 0),
    ry: vi(n, "ry", 0)
  });
}
function rM(n) {
  let e;
  const t = n.x, i = n.y, s = n.width, r = n.height, o = Math.min(n.rx || n["top-rx"] || 0, s / 2), l = Math.min(n.rx || n["bottom-rx"] || 0, s / 2), a = Math.min(n.ry || n["top-ry"] || 0, r / 2), c = Math.min(n.ry || n["bottom-ry"] || 0, r / 2);
  return o || l || a || c ? e = [
    "M",
    t,
    i + a,
    "v",
    r - a - c,
    "a",
    l,
    c,
    0,
    0,
    0,
    l,
    c,
    "h",
    s - 2 * l,
    "a",
    l,
    c,
    0,
    0,
    0,
    l,
    -c,
    "v",
    -(r - c - a),
    "a",
    o,
    a,
    0,
    0,
    0,
    -o,
    -a,
    "h",
    -(s - 2 * o),
    "a",
    o,
    a,
    0,
    0,
    0,
    -o,
    a,
    "Z"
  ] : e = ["M", t, i, "H", t + s, "V", i + r, "H", t, "V", i, "Z"], e.join(" ");
}
function ite(n) {
  const e = $r("path");
  St(e, St(n));
  const t = oM(n);
  return t && e.setAttribute("d", t), e;
}
function oM(n) {
  const e = n.tagName.toLowerCase();
  switch (e) {
    case "path":
      return n.getAttribute("d");
    case "line":
      return Gee(n);
    case "polygon":
      return Kee(n);
    case "polyline":
      return Jee(n);
    case "ellipse":
      return tte(n);
    case "circle":
      return ete(n);
    case "rect":
      return nte(n);
  }
  throw new Error(`"${e}" cannot be converted to svg path element.`);
}
const ste = /(\w+)\(([^,)]+),?([^)]+)?\)/gi, lM = /[ ,]+/, rte = /^(\w+)\((.*)\)/;
function ote(n, e) {
  const i = $r("svg").createSVGPoint();
  return i.x = n, i.y = e, i;
}
function ai(n) {
  const t = $r("svg").createSVGMatrix();
  if (n != null) {
    const i = n, s = t;
    for (const r in i)
      s[r] = i[r];
  }
  return t;
}
function _h(n) {
  const e = $r("svg");
  return n != null ? (n instanceof DOMMatrix || (n = ai(n)), e.createSVGTransformFromMatrix(n)) : e.createSVGTransform();
}
function Md(n) {
  let e = ai();
  const t = n != null && n.match(ste);
  if (!t)
    return e;
  for (let i = 0, s = t.length; i < s; i += 1) {
    const o = t[i].match(rte);
    if (o) {
      let l, a, c, u, h, d = ai();
      const f = o[2].split(lM);
      switch (o[1].toLowerCase()) {
        case "scale":
          l = parseFloat(f[0]), a = f[1] === void 0 ? l : parseFloat(f[1]), d = d.scaleNonUniform(l, a);
          break;
        case "translate":
          c = parseFloat(f[0]), u = parseFloat(f[1]), d = d.translate(c, u);
          break;
        case "rotate":
          h = parseFloat(f[0]), c = parseFloat(f[1]) || 0, u = parseFloat(f[2]) || 0, c !== 0 || u !== 0 ? d = d.translate(c, u).rotate(h).translate(-c, -u) : d = d.rotate(h);
          break;
        case "skewx":
          h = parseFloat(f[0]), d = d.skewX(h);
          break;
        case "skewy":
          h = parseFloat(f[0]), d = d.skewY(h);
          break;
        case "matrix":
          d.a = parseFloat(f[0]), d.b = parseFloat(f[1]), d.c = parseFloat(f[2]), d.d = parseFloat(f[3]), d.e = parseFloat(f[4]), d.f = parseFloat(f[5]);
          break;
        default:
          continue;
      }
      e = e.multiply(d);
    }
  }
  return e;
}
function oh(n) {
  const e = n || {}, t = e.a != null ? e.a : 1, i = e.b != null ? e.b : 0, s = e.c != null ? e.c : 0, r = e.d != null ? e.d : 1, o = e.e != null ? e.e : 0, l = e.f != null ? e.f : 0;
  return `matrix(${t},${i},${s},${r},${o},${l})`;
}
function u0(n) {
  let e, t, i;
  if (n) {
    const r = lM;
    if (n.trim().indexOf("matrix") >= 0) {
      const o = Md(n), l = lte(o);
      e = [l.translateX, l.translateY], t = [l.rotation], i = [l.scaleX, l.scaleY];
      const a = [];
      (e[0] !== 0 || e[1] !== 0) && a.push(`translate(${e.join(",")})`), (i[0] !== 1 || i[1] !== 1) && a.push(`scale(${i.join(",")})`), t[0] !== 0 && a.push(`rotate(${t[0]})`), n = a.join(" ");
    } else {
      const o = n.match(/translate\((.*?)\)/);
      o && (e = o[1].split(r));
      const l = n.match(/rotate\((.*?)\)/);
      l && (t = l[1].split(r));
      const a = n.match(/scale\((.*?)\)/);
      a && (i = a[1].split(r));
    }
  }
  const s = i && i[0] ? parseFloat(i[0]) : 1;
  return {
    raw: n || "",
    translation: {
      tx: e && e[0] ? parseInt(e[0], 10) : 0,
      ty: e && e[1] ? parseInt(e[1], 10) : 0
    },
    rotation: {
      angle: t && t[0] ? parseInt(t[0], 10) : 0,
      cx: t && t[1] ? parseInt(t[1], 10) : void 0,
      cy: t && t[2] ? parseInt(t[2], 10) : void 0
    },
    scale: {
      sx: s,
      sy: i && i[1] ? parseFloat(i[1]) : s
    }
  };
}
function Ay(n, e) {
  const t = e.x * n.a + e.y * n.c + 0, i = e.x * n.b + e.y * n.d + 0;
  return { x: t, y: i };
}
function lte(n) {
  const e = Ay(n, { x: 0, y: 1 }), t = Ay(n, { x: 1, y: 0 }), i = 180 / Math.PI * Math.atan2(e.y, e.x) - 90, s = 180 / Math.PI * Math.atan2(t.y, t.x);
  return {
    skewX: i,
    skewY: s,
    translateX: n.e,
    translateY: n.f,
    scaleX: Math.sqrt(n.a * n.a + n.b * n.b),
    scaleY: Math.sqrt(n.c * n.c + n.d * n.d),
    rotation: i
  };
}
function ate(n) {
  let e, t, i, s;
  return n ? (e = n.a == null ? 1 : n.a, s = n.d == null ? 1 : n.d, t = n.b, i = n.c) : e = s = 1, {
    sx: t ? Math.sqrt(e * e + t * t) : e,
    sy: i ? Math.sqrt(i * i + s * s) : s
  };
}
function cte(n) {
  let e = { x: 0, y: 1 };
  n && (e = Ay(n, e));
  const t = 180 * Math.atan2(e.y, e.x) / Math.PI % 360 - 90;
  return {
    angle: t % 360 + (t < 0 ? 360 : 0)
  };
}
function ute(n) {
  return {
    tx: n && n.e || 0,
    ty: n && n.f || 0
  };
}
function bu(n, e, t = {}) {
  if (e == null)
    return Md(St(n, "transform"));
  if (t.absolute) {
    n.setAttribute("transform", oh(e));
    return;
  }
  const i = n.transform, s = _h(e);
  i.baseVal.appendItem(s);
}
function ik(n, e, t = 0, i = {}) {
  let s = St(n, "transform");
  const r = u0(s);
  if (e == null)
    return r.translation;
  s = r.raw, s = s.replace(/translate\([^)]*\)/g, "").trim();
  const o = i.absolute ? e : r.translation.tx + e, l = i.absolute ? t : r.translation.ty + t, a = `translate(${o},${l})`;
  n.setAttribute("transform", `${a} ${s}`.trim());
}
function $y(n, e, t, i, s = {}) {
  let r = St(n, "transform");
  const o = u0(r);
  if (e == null)
    return o.rotation;
  r = o.raw, r = r.replace(/rotate\([^)]*\)/g, "").trim(), e %= 360;
  const l = s.absolute ? e : o.rotation.angle + e, a = t != null && i != null ? `,${t},${i}` : "", c = `rotate(${l}${a})`;
  n.setAttribute("transform", `${r} ${c}`.trim());
}
function Ty(n, e, t) {
  let i = St(n, "transform");
  const s = u0(i);
  if (e == null)
    return s.scale;
  t = t ?? e, i = s.raw, i = i.replace(/scale\([^)]*\)/g, "").trim();
  const r = `scale(${e},${t})`;
  n.setAttribute("transform", `${i} ${r}`.trim());
}
function td(n, e) {
  if (Ml(e) && Ml(n)) {
    const t = e.getScreenCTM(), i = n.getScreenCTM();
    if (t && i)
      return t.inverse().multiply(i);
  }
  return ai();
}
function hte(n, e) {
  let t = ai();
  if (Ml(e) && Ml(n)) {
    let i = n;
    const s = [];
    for (; i && i !== e; ) {
      const r = i.getAttribute("transform") || null, o = Md(r);
      s.push(o), i = i.parentNode;
    }
    s.reverse().forEach((r) => {
      t = t.multiply(r);
    });
  }
  return t;
}
function dte(n, e, t) {
  const i = n instanceof SVGSVGElement ? n : n.ownerSVGElement, s = i.createSVGPoint();
  s.x = e, s.y = t;
  try {
    const r = i.getScreenCTM(), o = s.matrixTransform(r.inverse()), l = td(n, i).inverse();
    return o.matrixTransform(l);
  } catch {
    return s;
  }
}
var Qs;
(function(n) {
  const e = {};
  function t(r) {
    return e[r] || {};
  }
  n.get = t;
  function i(r, o) {
    e[r] = o;
  }
  n.register = i;
  function s(r) {
    delete e[r];
  }
  n.unregister = s;
})(Qs || (Qs = {}));
var Oa;
(function(n) {
  const e = /* @__PURE__ */ new WeakMap();
  function t(r) {
    return e.has(r) || e.set(r, { events: /* @__PURE__ */ Object.create(null) }), e.get(r);
  }
  n.ensure = t;
  function i(r) {
    return e.get(r);
  }
  n.get = i;
  function s(r) {
    return e.delete(r);
  }
  n.remove = s;
})(Oa || (Oa = {}));
var st;
(function(n) {
  n.returnTrue = () => !0, n.returnFalse = () => !1;
  function e(s) {
    s.stopPropagation();
  }
  n.stopPropagationCallback = e;
  function t(s, r, o) {
    s.addEventListener != null && s.addEventListener(r, o);
  }
  n.addEventListener = t;
  function i(s, r, o) {
    s.removeEventListener != null && s.removeEventListener(r, o);
  }
  n.removeEventListener = i;
})(st || (st = {}));
(function(n) {
  const e = /[^\x20\t\r\n\f]+/g, t = /^([^.]*)(?:\.(.+)|)/;
  function i(l) {
    return (l || "").match(e) || [""];
  }
  n.splitType = i;
  function s(l) {
    const a = t.exec(l) || [];
    return {
      originType: a[1] ? a[1].trim() : a[1],
      namespaces: a[2] ? a[2].split(".").map((c) => c.trim()).sort() : []
    };
  }
  n.normalizeType = s;
  function r(l) {
    return l.nodeType === 1 || l.nodeType === 9 || !+l.nodeType;
  }
  n.isValidTarget = r;
  function o(l, a) {
    if (a) {
      const c = l;
      return c.querySelector != null && c.querySelector(a) != null;
    }
    return !0;
  }
  n.isValidSelector = o;
})(st || (st = {}));
(function(n) {
  let e = 0;
  const t = /* @__PURE__ */ new WeakMap();
  function i(l) {
    return t.has(l) || (t.set(l, e), e += 1), t.get(l);
  }
  n.ensureHandlerId = i;
  function s(l) {
    return t.get(l);
  }
  n.getHandlerId = s;
  function r(l) {
    return t.delete(l);
  }
  n.removeHandlerId = r;
  function o(l, a) {
    return t.set(l, a);
  }
  n.setHandlerId = o;
})(st || (st = {}));
(function(n) {
  function e(t, i) {
    const s = [], r = Oa.get(t), o = r && r.events && r.events[i.type], l = o && o.handlers || [], a = o ? o.delegateCount : 0;
    if (a > 0 && // Support: Firefox <=42 - 66+
    // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
    // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
    // Support: IE 11+
    // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
    !(i.type === "click" && typeof i.button == "number" && i.button >= 1)) {
      for (let c = i.target; c !== t; c = c.parentNode || t)
        if (c.nodeType === 1 && !(i.type === "click" && c.disabled === !0)) {
          const u = [], h = {};
          for (let d = 0; d < a; d += 1) {
            const f = l[d], p = f.selector;
            if (p != null && h[p] == null) {
              const g = t, m = [];
              g.querySelectorAll(p).forEach((v) => {
                m.push(v);
              }), h[p] = m.includes(c);
            }
            h[p] && u.push(f);
          }
          u.length && s.push({ elem: c, handlers: u });
        }
    }
    return a < l.length && s.push({ elem: t, handlers: l.slice(a) }), s;
  }
  n.getHandlerQueue = e;
})(st || (st = {}));
(function(n) {
  function e(t) {
    return t != null && t === t.window;
  }
  n.isWindow = e;
})(st || (st = {}));
(function(n) {
  function e(t, i) {
    const s = t.nodeType === 9 ? t.documentElement : t, r = i && i.parentNode;
    return t === r || !!(r && r.nodeType === 1 && // Support: IE 9 - 11+
    // IE doesn't have `contains` on SVG.
    (s.contains ? s.contains(r) : t.compareDocumentPosition && t.compareDocumentPosition(r) & 16));
  }
  n.contains = e;
})(st || (st = {}));
class io {
  constructor(e, t) {
    this.isDefaultPrevented = st.returnFalse, this.isPropagationStopped = st.returnFalse, this.isImmediatePropagationStopped = st.returnFalse, this.isSimulated = !1, this.preventDefault = () => {
      const i = this.originalEvent;
      this.isDefaultPrevented = st.returnTrue, i && !this.isSimulated && i.preventDefault();
    }, this.stopPropagation = () => {
      const i = this.originalEvent;
      this.isPropagationStopped = st.returnTrue, i && !this.isSimulated && i.stopPropagation();
    }, this.stopImmediatePropagation = () => {
      const i = this.originalEvent;
      this.isImmediatePropagationStopped = st.returnTrue, i && !this.isSimulated && i.stopImmediatePropagation(), this.stopPropagation();
    }, typeof e == "string" ? this.type = e : e.type && (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented ? st.returnTrue : st.returnFalse, this.target = e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget, this.timeStamp = e.timeStamp), t && Object.assign(this, t), this.timeStamp || (this.timeStamp = Date.now());
  }
}
(function(n) {
  function e(t) {
    return t instanceof n ? t : new n(t);
  }
  n.create = e;
})(io || (io = {}));
(function(n) {
  function e(t, i) {
    Object.defineProperty(n.prototype, t, {
      enumerable: !0,
      configurable: !0,
      get: typeof i == "function" ? (
        // eslint-disable-next-line
        function() {
          if (this.originalEvent)
            return i(this.originalEvent);
        }
      ) : (
        // eslint-disable-next-line
        function() {
          if (this.originalEvent)
            return this.originalEvent[t];
        }
      ),
      set(s) {
        Object.defineProperty(this, t, {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: s
        });
      }
    });
  }
  n.addProperty = e;
})(io || (io = {}));
(function(n) {
  const e = {
    bubbles: !0,
    cancelable: !0,
    eventPhase: !0,
    detail: !0,
    view: !0,
    button: !0,
    buttons: !0,
    clientX: !0,
    clientY: !0,
    offsetX: !0,
    offsetY: !0,
    pageX: !0,
    pageY: !0,
    screenX: !0,
    screenY: !0,
    toElement: !0,
    pointerId: !0,
    pointerType: !0,
    char: !0,
    code: !0,
    charCode: !0,
    key: !0,
    keyCode: !0,
    touches: !0,
    changedTouches: !0,
    targetTouches: !0,
    which: !0,
    altKey: !0,
    ctrlKey: !0,
    metaKey: !0,
    shiftKey: !0
  };
  Object.keys(e).forEach((t) => n.addProperty(t, e[t]));
})(io || (io = {}));
(function(n) {
  Qs.register("load", {
    noBubble: !0
  });
})();
(function(n) {
  Qs.register("beforeunload", {
    postDispatch(e, t) {
      t.result !== void 0 && t.originalEvent && (t.originalEvent.returnValue = t.result);
    }
  });
})();
(function(n) {
  Qs.register("mouseenter", {
    delegateType: "mouseover",
    bindType: "mouseover",
    handle(e, t) {
      let i;
      const s = t.relatedTarget, r = t.handleObj;
      return (!s || s !== e && !st.contains(e, s)) && (t.type = r.originType, i = r.handler.call(e, t), t.type = "mouseover"), i;
    }
  }), Qs.register("mouseleave", {
    delegateType: "mouseout",
    bindType: "mouseout",
    handle(e, t) {
      let i;
      const s = t.relatedTarget, r = t.handleObj;
      return (!s || s !== e && !st.contains(e, s)) && (t.type = r.originType, i = r.handler.call(e, t), t.type = "mouseout"), i;
    }
  });
})();
var fte = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
}, Rd;
(function(n) {
  let e;
  function t(o, l, a, c, u) {
    if (!st.isValidTarget(o))
      return;
    let h;
    if (typeof a != "function") {
      const { handler: g, selector: m } = a, v = fte(a, ["handler", "selector"]);
      a = g, u = m, h = v;
    }
    const d = Oa.ensure(o);
    let f = d.handler;
    f == null && (f = d.handler = function(g, ...m) {
      return e !== g.type ? s(o, g, ...m) : void 0;
    });
    const p = st.ensureHandlerId(a);
    st.splitType(l).forEach((g) => {
      const { originType: m, namespaces: v } = st.normalizeType(g);
      if (!m)
        return;
      let O = m, b = Qs.get(O);
      O = (u ? b.delegateType : b.bindType) || O, b = Qs.get(O);
      const w = Object.assign({
        type: O,
        originType: m,
        data: c,
        selector: u,
        guid: p,
        handler: a,
        namespace: v.join(".")
      }, h), x = d.events;
      let S = x[O];
      S || (S = x[O] = { handlers: [], delegateCount: 0 }, (!b.setup || b.setup(o, c, v, f) === !1) && st.addEventListener(o, O, f)), b.add && (st.removeHandlerId(w.handler), b.add(o, w), st.setHandlerId(w.handler, p)), u ? (S.handlers.splice(S.delegateCount, 0, w), S.delegateCount += 1) : S.handlers.push(w);
    });
  }
  n.on = t;
  function i(o, l, a, c, u) {
    const h = Oa.get(o);
    if (!h)
      return;
    const d = h.events;
    d && (st.splitType(l).forEach((f) => {
      const { originType: p, namespaces: g } = st.normalizeType(f);
      if (!p) {
        Object.keys(d).forEach((x) => {
          i(o, x + f, a, c, !0);
        });
        return;
      }
      let m = p;
      const v = Qs.get(m);
      m = (c ? v.delegateType : v.bindType) || m;
      const O = d[m];
      if (!O)
        return;
      const b = g.length > 0 ? new RegExp(`(^|\\.)${g.join("\\.(?:.*\\.|)")}(\\.|$)`) : null, w = O.handlers.length;
      for (let x = O.handlers.length - 1; x >= 0; x -= 1) {
        const S = O.handlers[x];
        (u || p === S.originType) && (!a || st.getHandlerId(a) === S.guid) && (b == null || S.namespace && b.test(S.namespace)) && (c == null || c === S.selector || c === "**" && S.selector) && (O.handlers.splice(x, 1), S.selector && (O.delegateCount -= 1), v.remove && v.remove(o, S));
      }
      w && O.handlers.length === 0 && ((!v.teardown || v.teardown(o, g, h.handler) === !1) && st.removeEventListener(o, m, h.handler), delete d[m]);
    }), Object.keys(d).length === 0 && Oa.remove(o));
  }
  n.off = i;
  function s(o, l, ...a) {
    const c = io.create(l);
    c.delegateTarget = o;
    const u = Qs.get(c.type);
    if (u.preDispatch && u.preDispatch(o, c) === !1)
      return;
    const h = st.getHandlerQueue(o, c);
    for (let d = 0, f = h.length; d < f && !c.isPropagationStopped(); d += 1) {
      const p = h[d];
      c.currentTarget = p.elem;
      for (let g = 0, m = p.handlers.length; g < m && !c.isImmediatePropagationStopped(); g += 1) {
        const v = p.handlers[g];
        if (c.rnamespace == null || v.namespace && c.rnamespace.test(v.namespace)) {
          c.handleObj = v, c.data = v.data;
          const O = Qs.get(v.originType).handle, b = O ? O(p.elem, c, ...a) : v.handler.call(p.elem, c, ...a);
          b !== void 0 && (c.result = b, b === !1 && (c.preventDefault(), c.stopPropagation()));
        }
      }
    }
    return u.postDispatch && u.postDispatch(o, c), c.result;
  }
  n.dispatch = s;
  function r(o, l, a, c) {
    let u = o, h = typeof o == "string" ? o : o.type, d = typeof o == "string" || u.namespace == null ? [] : u.namespace.split(".");
    const f = a;
    if (f.nodeType === 3 || f.nodeType === 8)
      return;
    h.indexOf(".") > -1 && (d = h.split("."), h = d.shift(), d.sort());
    const p = h.indexOf(":") < 0 && `on${h}`;
    u = o instanceof io ? o : new io(h, typeof o == "object" ? o : null), u.namespace = d.join("."), u.rnamespace = u.namespace ? new RegExp(`(^|\\.)${d.join("\\.(?:.*\\.|)")}(\\.|$)`) : null, u.result = void 0, u.target || (u.target = f);
    const g = [u];
    Array.isArray(l) ? g.push(...l) : g.push(l);
    const m = Qs.get(h);
    if (!c && m.trigger && m.trigger(f, u, l) === !1)
      return;
    let v;
    const O = [f];
    if (!c && !m.noBubble && !st.isWindow(f)) {
      v = m.delegateType || h;
      let w = f, x = f.parentNode;
      for (; x != null; )
        O.push(x), w = x, x = x.parentNode;
      const S = f.ownerDocument || document;
      if (w === S) {
        const C = w.defaultView || w.parentWindow || window;
        O.push(C);
      }
    }
    let b = f;
    for (let w = 0, x = O.length; w < x && !u.isPropagationStopped(); w += 1) {
      const S = O[w];
      b = S, u.type = w > 1 ? v : m.bindType || h;
      const C = Oa.get(S);
      C && C.events[u.type] && C.handler && C.handler.call(S, ...g);
      const k = p && S[p] || null;
      k && st.isValidTarget(S) && (u.result = k.call(S, ...g), u.result === !1 && u.preventDefault());
    }
    if (u.type = h, !c && !u.isDefaultPrevented()) {
      const w = m.preventDefault;
      if ((w == null || w(O.pop(), u, l) === !1) && st.isValidTarget(f) && p && typeof f[h] == "function" && !st.isWindow(f)) {
        const x = f[p];
        x && (f[p] = null), e = h, u.isPropagationStopped() && b.addEventListener(h, st.stopPropagationCallback), f[h](), u.isPropagationStopped() && b.removeEventListener(h, st.stopPropagationCallback), e = void 0, x && (f[p] = x);
      }
    }
    return u.result;
  }
  n.trigger = r;
})(Rd || (Rd = {}));
var mi;
(function(n) {
  function e(r, o, l, a, c) {
    return nd.on(r, o, l, a, c), r;
  }
  n.on = e;
  function t(r, o, l, a, c) {
    return nd.on(r, o, l, a, c, !0), r;
  }
  n.once = t;
  function i(r, o, l, a) {
    return nd.off(r, o, l, a), r;
  }
  n.off = i;
  function s(r, o, l, a) {
    return Rd.trigger(o, l, r, a), r;
  }
  n.trigger = s;
})(mi || (mi = {}));
var nd;
(function(n) {
  function e(i, s, r, o, l, a) {
    if (typeof s == "object") {
      typeof r != "string" && (o = o || r, r = void 0), Object.keys(s).forEach((c) => e(i, c, r, o, s[c], a));
      return;
    }
    if (o == null && l == null ? (l = r, o = r = void 0) : l == null && (typeof r == "string" ? (l = o, o = void 0) : (l = o, o = r, r = void 0)), l === !1)
      l = st.returnFalse;
    else if (!l)
      return;
    if (a) {
      const c = l;
      l = function(u, ...h) {
        return n.off(i, u), c.call(this, u, ...h);
      }, st.setHandlerId(l, st.ensureHandlerId(c));
    }
    Rd.on(i, s, l, o, r);
  }
  n.on = e;
  function t(i, s, r, o) {
    const l = s;
    if (l && l.preventDefault != null && l.handleObj != null) {
      const a = l.handleObj;
      t(l.delegateTarget, a.namespace ? `${a.originType}.${a.namespace}` : a.originType, a.selector, a.handler);
      return;
    }
    if (typeof s == "object") {
      const a = s;
      Object.keys(a).forEach((c) => t(i, c, r, a[c]));
      return;
    }
    (r === !1 || typeof r == "function") && (o = r, r = void 0), o === !1 && (o = st.returnFalse), Rd.off(i, s, o, r);
  }
  n.off = t;
})(nd || (nd = {}));
class aM {
  constructor(e, t, i) {
    this.animationFrameId = 0, this.deltaX = 0, this.deltaY = 0, this.eventName = _l.isEventSupported("wheel") ? "wheel" : "mousewheel", this.target = e, this.onWheelCallback = t, this.onWheelGuard = i, this.onWheel = this.onWheel.bind(this), this.didWheel = this.didWheel.bind(this);
  }
  enable() {
    this.target.addEventListener(this.eventName, this.onWheel, {
      passive: !1
    });
  }
  disable() {
    this.target.removeEventListener(this.eventName, this.onWheel);
  }
  onWheel(e) {
    if (this.onWheelGuard != null && !this.onWheelGuard(e))
      return;
    this.deltaX += e.deltaX, this.deltaY += e.deltaY, e.preventDefault();
    let t;
    (this.deltaX !== 0 || this.deltaY !== 0) && (e.stopPropagation(), t = !0), t === !0 && this.animationFrameId === 0 && (this.animationFrameId = requestAnimationFrame(() => {
      this.didWheel(e);
    }));
  }
  didWheel(e) {
    this.animationFrameId = 0, this.onWheelCallback(e, this.deltaX, this.deltaY), this.deltaX = 0, this.deltaY = 0;
  }
}
function _y(n) {
  const e = n.getBoundingClientRect(), t = n.ownerDocument.defaultView;
  return {
    top: e.top + t.pageYOffset,
    left: e.left + t.pageXOffset
  };
}
function pte(n) {
  return n.getBoundingClientRect().width;
}
function gte(n) {
  return n.getBoundingClientRect().height;
}
function cM(n, e = 60) {
  let t = null;
  return (...i) => {
    t && clearTimeout(t), t = window.setTimeout(() => {
      n.apply(this, i);
    }, e);
  };
}
function mte(n) {
  let e = null, t = [];
  const i = () => {
    if (getComputedStyle(n).position === "static") {
      const c = n.style;
      c.position = "relative";
    }
    const a = document.createElement("object");
    return a.onload = () => {
      a.contentDocument.defaultView.addEventListener("resize", s), s();
    }, a.style.display = "block", a.style.position = "absolute", a.style.top = "0", a.style.left = "0", a.style.height = "100%", a.style.width = "100%", a.style.overflow = "hidden", a.style.pointerEvents = "none", a.style.zIndex = "-1", a.style.opacity = "0", a.setAttribute("tabindex", "-1"), a.type = "text/html", n.appendChild(a), a.data = "about:blank", a;
  }, s = cM(() => {
    t.forEach((a) => a(n));
  }), r = (a) => {
    e || (e = i()), t.indexOf(a) === -1 && t.push(a);
  }, o = () => {
    e && e.parentNode && (e.contentDocument && e.contentDocument.defaultView.removeEventListener("resize", s), e.parentNode.removeChild(e), e = null, t = []);
  };
  return {
    element: n,
    bind: r,
    destroy: o,
    unbind: (a) => {
      const c = t.indexOf(a);
      c !== -1 && t.splice(c, 1), t.length === 0 && e && o();
    }
  };
}
function vte(n) {
  let e = null, t = [];
  const i = cM(() => {
    t.forEach((a) => {
      a(n);
    });
  }), s = () => {
    const a = new ResizeObserver(i);
    return a.observe(n), i(), a;
  }, r = (a) => {
    e || (e = s()), t.indexOf(a) === -1 && t.push(a);
  }, o = () => {
    e && (e.disconnect(), t = [], e = null);
  };
  return {
    element: n,
    bind: r,
    destroy: o,
    unbind: (a) => {
      const c = t.indexOf(a);
      c !== -1 && t.splice(c, 1), t.length === 0 && e && o();
    }
  };
}
const bte = typeof ResizeObserver < "u" ? vte : mte;
var Yg;
(function(n) {
  const e = /* @__PURE__ */ new WeakMap();
  function t(s) {
    let r = e.get(s);
    return r || (r = bte(s), e.set(s, r), r);
  }
  function i(s) {
    s.destroy(), e.delete(s.element);
  }
  n.bind = (s, r) => {
    const o = t(s);
    return o.bind(r), () => o.unbind(r);
  }, n.clear = (s) => {
    const r = t(s);
    i(r);
  };
})(Yg || (Yg = {}));
class Nd {
  constructor(e = {}) {
    this.comparator = e.comparator || Nd.defaultComparator, this.index = {}, this.data = e.data || [], this.heapify();
  }
  /**
   * Returns `true` if the priority queue is empty, `false` otherwise.
   */
  isEmpty() {
    return this.data.length === 0;
  }
  /**
   * Inserts a value with priority to the queue. Optionally pass a unique
   * id of this item. Passing unique IDs for each item you insert allows
   * you to use the `updatePriority()` operation.
   * @param priority
   * @param value
   * @param id
   */
  insert(e, t, i) {
    const s = { priority: e, value: t }, r = this.data.length;
    return i && (s.id = i, this.index[i] = r), this.data.push(s), this.bubbleUp(r), this;
  }
  /**
   * Returns the value of an item with the highest priority.
   */
  peek() {
    return this.data[0] ? this.data[0].value : null;
  }
  /**
   * Returns the highest priority in the queue.
   */
  peekPriority() {
    return this.data[0] ? this.data[0].priority : null;
  }
  updatePriority(e, t) {
    const i = this.index[e];
    if (typeof i > "u")
      throw new Error(`Node with id '${e}' was not found in the heap.`);
    const s = this.data, r = s[i].priority, o = this.comparator(t, r);
    o < 0 ? (s[i].priority = t, this.bubbleUp(i)) : o > 0 && (s[i].priority = t, this.bubbleDown(i));
  }
  /**
   * Removes the item with the highest priority from the queue
   *
   * @returns The value of the removed item.
   */
  remove() {
    const e = this.data, t = e[0], i = e.pop();
    return t.id && delete this.index[t.id], e.length > 0 && (e[0] = i, i.id && (this.index[i.id] = 0), this.bubbleDown(0)), t ? t.value : null;
  }
  heapify() {
    for (let e = 0; e < this.data.length; e += 1)
      this.bubbleUp(e);
  }
  bubbleUp(e) {
    const t = this.data;
    let i, s, r = e;
    for (; r > 0 && (s = r - 1 >>> 1, this.comparator(t[r].priority, t[s].priority) < 0); ) {
      i = t[s], t[s] = t[r];
      let o = t[r].id;
      o != null && (this.index[o] = s), t[r] = i, o = t[r].id, o != null && (this.index[o] = r), r = s;
    }
  }
  bubbleDown(e) {
    const t = this.data, i = t.length - 1;
    let s = e;
    for (; ; ) {
      const r = (s << 1) + 1, o = r + 1;
      let l = s;
      if (r <= i && this.comparator(t[r].priority, t[l].priority) < 0 && (l = r), o <= i && this.comparator(t[o].priority, t[l].priority) < 0 && (l = o), l !== s) {
        const a = t[l];
        t[l] = t[s];
        let c = t[s].id;
        c != null && (this.index[c] = l), t[s] = a, c = t[s].id, c != null && (this.index[c] = s), s = l;
      } else
        break;
    }
  }
}
(function(n) {
  n.defaultComparator = (e, t) => e - t;
})(Nd || (Nd = {}));
var My;
(function(n) {
  function e(t, i, s = (r, o) => 1) {
    const r = {}, o = {}, l = {}, a = new Nd();
    for (r[i] = 0, Object.keys(t).forEach((c) => {
      c !== i && (r[c] = 1 / 0), a.insert(r[c], c, c);
    }); !a.isEmpty(); ) {
      const c = a.remove();
      l[c] = !0;
      const u = t[c] || [];
      for (let h = 0; h < u.length; h += 1) {
        const d = u[h];
        if (!l[d]) {
          const f = r[c] + s(c, d);
          f < r[d] && (r[d] = f, o[d] = c, a.updatePriority(d, f));
        }
      }
    }
    return o;
  }
  n.run = e;
})(My || (My = {}));
class _o {
  constructor(e, t, i, s) {
    if (e == null)
      return this.set(255, 255, 255, 1);
    if (typeof e == "number")
      return this.set(e, t, i, s);
    if (typeof e == "string")
      return _o.fromString(e) || this;
    if (Array.isArray(e))
      return this.set(e);
    this.set(e.r, e.g, e.b, e.a == null ? 1 : e.a);
  }
  blend(e, t, i) {
    this.set(e.r + (t.r - e.r) * i, e.g + (t.g - e.g) * i, e.b + (t.b - e.b) * i, e.a + (t.a - e.a) * i);
  }
  lighten(e) {
    const t = _o.lighten(this.toArray(), e);
    this.r = t[0], this.g = t[1], this.b = t[2], this.a = t[3];
  }
  darken(e) {
    this.lighten(-e);
  }
  set(e, t, i, s) {
    const r = Array.isArray(e) ? e[0] : e, o = Array.isArray(e) ? e[1] : t, l = Array.isArray(e) ? e[2] : i, a = Array.isArray(e) ? e[3] : s;
    return this.r = Math.round(is(r, 0, 255)), this.g = Math.round(is(o, 0, 255)), this.b = Math.round(is(l, 0, 255)), this.a = a == null ? 1 : is(a, 0, 1), this;
  }
  toHex() {
    return `#${["r", "g", "b"].map((t) => {
      const i = this[t].toString(16);
      return i.length < 2 ? `0${i}` : i;
    }).join("")}`;
  }
  toRGBA() {
    return this.toArray();
  }
  toHSLA() {
    return _o.rgba2hsla(this.r, this.g, this.b, this.a);
  }
  toCSS(e) {
    const t = `${this.r},${this.g},${this.b},`;
    return e ? `rgb(${t})` : `rgba(${t},${this.a})`;
  }
  toGrey() {
    return _o.makeGrey(Math.round((this.r + this.g + this.b) / 3), this.a);
  }
  toArray() {
    return [this.r, this.g, this.b, this.a];
  }
  toString() {
    return this.toCSS();
  }
}
(function(n) {
  function e(b) {
    return new n(b);
  }
  n.fromArray = e;
  function t(b) {
    return new n([...p(b), 1]);
  }
  n.fromHex = t;
  function i(b) {
    const w = b.toLowerCase().match(/^rgba?\(([\s.,0-9]+)\)/);
    if (w) {
      const x = w[1].split(/\s*,\s*/).map((S) => parseInt(S, 10));
      return new n(x);
    }
    return null;
  }
  n.fromRGBA = i;
  function s(b, w, x) {
    x < 0 && ++x, x > 1 && --x;
    const S = 6 * x;
    return S < 1 ? b + (w - b) * S : 2 * x < 1 ? w : 3 * x < 2 ? b + (w - b) * (2 / 3 - x) * 6 : b;
  }
  function r(b) {
    const w = b.toLowerCase().match(/^hsla?\(([\s.,0-9]+)\)/);
    if (w) {
      const x = w[2].split(/\s*,\s*/), S = (parseFloat(x[0]) % 360 + 360) % 360 / 360, C = parseFloat(x[1]) / 100, k = parseFloat(x[2]) / 100, E = x[3] == null ? 1 : parseInt(x[3], 10);
      return new n(c(S, C, k, E));
    }
    return null;
  }
  n.fromHSLA = r;
  function o(b) {
    if (b.startsWith("#"))
      return t(b);
    if (b.startsWith("rgb"))
      return i(b);
    const w = n.named[b];
    return w ? t(w) : r(b);
  }
  n.fromString = o;
  function l(b, w) {
    return n.fromArray([b, b, b, w]);
  }
  n.makeGrey = l;
  function a(b, w, x, S) {
    const C = Array.isArray(b) ? b[0] : b, k = Array.isArray(b) ? b[1] : w, E = Array.isArray(b) ? b[2] : x, M = Array.isArray(b) ? b[3] : S, _ = Math.max(C, k, E), T = Math.min(C, k, E), B = (_ + T) / 2;
    let I = 0, P = 0;
    if (T !== _) {
      const A = _ - T;
      switch (P = B > 0.5 ? A / (2 - _ - T) : A / (_ + T), _) {
        case C:
          I = (k - E) / A + (k < E ? 6 : 0);
          break;
        case k:
          I = (E - C) / A + 2;
          break;
        case E:
          I = (C - k) / A + 4;
          break;
      }
      I /= 6;
    }
    return [I, P, B, M ?? 1];
  }
  n.rgba2hsla = a;
  function c(b, w, x, S) {
    const C = Array.isArray(b) ? b[0] : b, k = Array.isArray(b) ? b[1] : w, E = Array.isArray(b) ? b[2] : x, M = Array.isArray(b) ? b[3] : S, _ = E <= 0.5 ? E * (k + 1) : E + k - E * k, T = 2 * E - _;
    return [
      s(T, _, C + 1 / 3) * 256,
      s(T, _, C) * 256,
      s(T, _, C - 1 / 3) * 256,
      M ?? 1
    ];
  }
  n.hsla2rgba = c;
  function u(b) {
    return new n(Math.round(Math.random() * 256), Math.round(Math.random() * 256), Math.round(Math.random() * 256), b ? void 0 : parseFloat(Math.random().toFixed(2)));
  }
  n.random = u;
  function h() {
    const b = "0123456789ABCDEF";
    let w = "#";
    for (let x = 0; x < 6; x += 1)
      w += b[Math.floor(Math.random() * 16)];
    return w;
  }
  n.randomHex = h;
  function d(b) {
    return u(b).toString();
  }
  n.randomRGBA = d;
  function f(b, w) {
    if (typeof b == "string") {
      const E = b[0] === "#", [M, _, T] = p(b);
      return w ? M * 0.299 + _ * 0.587 + T * 0.114 > 186 ? "#000000" : "#ffffff" : `${E ? "#" : ""}${g(255 - M, 255 - _, 255 - T)}`;
    }
    const x = b[0], S = b[1], C = b[2], k = b[3];
    return w ? x * 0.299 + S * 0.587 + C * 0.114 > 186 ? [0, 0, 0, k] : [255, 255, 255, k] : [255 - x, 255 - S, 255 - C, k];
  }
  n.invert = f;
  function p(b) {
    const w = b.indexOf("#") === 0 ? b : `#${b}`;
    let x = +`0x${w.substr(1)}`;
    if (!(w.length === 4 || w.length === 7) || Number.isNaN(x))
      throw new Error("Invalid hex color.");
    const S = w.length === 4 ? 4 : 8, C = (1 << S) - 1, k = ["b", "g", "r"].map(() => {
      const E = x & C;
      return x >>= S, S === 4 ? 17 * E : E;
    });
    return [k[2], k[1], k[0]];
  }
  function g(b, w, x) {
    const S = (C) => C.length < 2 ? `0${C}` : C;
    return `${S(b.toString(16))}${S(w.toString(16))}${S(x.toString(16))}`;
  }
  function m(b, w) {
    return O(b, w);
  }
  n.lighten = m;
  function v(b, w) {
    return O(b, -w);
  }
  n.darken = v;
  function O(b, w) {
    if (typeof b == "string") {
      const C = b[0] === "#", k = parseInt(C ? b.substr(1) : b, 16), E = is((k >> 16) + w, 0, 255), M = is((k >> 8 & 255) + w, 0, 255), _ = is((k & 255) + w, 0, 255);
      return `${C ? "#" : ""}${(_ | M << 8 | E << 16).toString(16)}`;
    }
    const x = g(b[0], b[1], b[2]), S = p(O(x, w));
    return [S[0], S[1], S[2], b[3]];
  }
})(_o || (_o = {}));
(function(n) {
  n.named = {
    aliceblue: "#f0f8ff",
    antiquewhite: "#faebd7",
    aqua: "#00ffff",
    aquamarine: "#7fffd4",
    azure: "#f0ffff",
    beige: "#f5f5dc",
    bisque: "#ffe4c4",
    black: "#000000",
    blanchedalmond: "#ffebcd",
    blue: "#0000ff",
    blueviolet: "#8a2be2",
    brown: "#a52a2a",
    burlywood: "#deb887",
    burntsienna: "#ea7e5d",
    cadetblue: "#5f9ea0",
    chartreuse: "#7fff00",
    chocolate: "#d2691e",
    coral: "#ff7f50",
    cornflowerblue: "#6495ed",
    cornsilk: "#fff8dc",
    crimson: "#dc143c",
    cyan: "#00ffff",
    darkblue: "#00008b",
    darkcyan: "#008b8b",
    darkgoldenrod: "#b8860b",
    darkgray: "#a9a9a9",
    darkgreen: "#006400",
    darkgrey: "#a9a9a9",
    darkkhaki: "#bdb76b",
    darkmagenta: "#8b008b",
    darkolivegreen: "#556b2f",
    darkorange: "#ff8c00",
    darkorchid: "#9932cc",
    darkred: "#8b0000",
    darksalmon: "#e9967a",
    darkseagreen: "#8fbc8f",
    darkslateblue: "#483d8b",
    darkslategray: "#2f4f4f",
    darkslategrey: "#2f4f4f",
    darkturquoise: "#00ced1",
    darkviolet: "#9400d3",
    deeppink: "#ff1493",
    deepskyblue: "#00bfff",
    dimgray: "#696969",
    dimgrey: "#696969",
    dodgerblue: "#1e90ff",
    firebrick: "#b22222",
    floralwhite: "#fffaf0",
    forestgreen: "#228b22",
    fuchsia: "#ff00ff",
    gainsboro: "#dcdcdc",
    ghostwhite: "#f8f8ff",
    gold: "#ffd700",
    goldenrod: "#daa520",
    gray: "#808080",
    green: "#008000",
    greenyellow: "#adff2f",
    grey: "#808080",
    honeydew: "#f0fff0",
    hotpink: "#ff69b4",
    indianred: "#cd5c5c",
    indigo: "#4b0082",
    ivory: "#fffff0",
    khaki: "#f0e68c",
    lavender: "#e6e6fa",
    lavenderblush: "#fff0f5",
    lawngreen: "#7cfc00",
    lemonchiffon: "#fffacd",
    lightblue: "#add8e6",
    lightcoral: "#f08080",
    lightcyan: "#e0ffff",
    lightgoldenrodyellow: "#fafad2",
    lightgray: "#d3d3d3",
    lightgreen: "#90ee90",
    lightgrey: "#d3d3d3",
    lightpink: "#ffb6c1",
    lightsalmon: "#ffa07a",
    lightseagreen: "#20b2aa",
    lightskyblue: "#87cefa",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    lightsteelblue: "#b0c4de",
    lightyellow: "#ffffe0",
    lime: "#00ff00",
    limegreen: "#32cd32",
    linen: "#faf0e6",
    magenta: "#ff00ff",
    maroon: "#800000",
    mediumaquamarine: "#66cdaa",
    mediumblue: "#0000cd",
    mediumorchid: "#ba55d3",
    mediumpurple: "#9370db",
    mediumseagreen: "#3cb371",
    mediumslateblue: "#7b68ee",
    mediumspringgreen: "#00fa9a",
    mediumturquoise: "#48d1cc",
    mediumvioletred: "#c71585",
    midnightblue: "#191970",
    mintcream: "#f5fffa",
    mistyrose: "#ffe4e1",
    moccasin: "#ffe4b5",
    navajowhite: "#ffdead",
    navy: "#000080",
    oldlace: "#fdf5e6",
    olive: "#808000",
    olivedrab: "#6b8e23",
    orange: "#ffa500",
    orangered: "#ff4500",
    orchid: "#da70d6",
    palegoldenrod: "#eee8aa",
    palegreen: "#98fb98",
    paleturquoise: "#afeeee",
    palevioletred: "#db7093",
    papayawhip: "#ffefd5",
    peachpuff: "#ffdab9",
    peru: "#cd853f",
    pink: "#ffc0cb",
    plum: "#dda0dd",
    powderblue: "#b0e0e6",
    purple: "#800080",
    rebeccapurple: "#663399",
    red: "#ff0000",
    rosybrown: "#bc8f8f",
    royalblue: "#4169e1",
    saddlebrown: "#8b4513",
    salmon: "#fa8072",
    sandybrown: "#f4a460",
    seagreen: "#2e8b57",
    seashell: "#fff5ee",
    sienna: "#a0522d",
    silver: "#c0c0c0",
    skyblue: "#87ceeb",
    slateblue: "#6a5acd",
    slategray: "#708090",
    slategrey: "#708090",
    snow: "#fffafa",
    springgreen: "#00ff7f",
    steelblue: "#4682b4",
    tan: "#d2b48c",
    teal: "#008080",
    thistle: "#d8bfd8",
    tomato: "#ff6347",
    turquoise: "#40e0d0",
    violet: "#ee82ee",
    wheat: "#f5deb3",
    white: "#ffffff",
    whitesmoke: "#f5f5f5",
    yellow: "#ffff00",
    yellowgreen: "#9acd32"
  };
})(_o || (_o = {}));
class Ry {
  constructor() {
    this.clear();
  }
  clear() {
    this.map = /* @__PURE__ */ new WeakMap(), this.arr = [];
  }
  has(e) {
    return this.map.has(e);
  }
  get(e) {
    return this.map.get(e);
  }
  set(e, t) {
    this.map.set(e, t), this.arr.push(e);
  }
  delete(e) {
    const t = this.arr.indexOf(e);
    t >= 0 && this.arr.splice(t, 1);
    const i = this.map.get(e);
    return this.map.delete(e), i;
  }
  each(e) {
    this.arr.forEach((t) => {
      const i = this.map.get(t);
      e(i, t);
    });
  }
  dispose() {
    this.clear();
  }
}
var Rl;
(function(n) {
  function e(s) {
    const r = [], o = [];
    return Array.isArray(s) ? r.push(...s) : s.split("|").forEach((l) => {
      l.indexOf("&") === -1 ? r.push(l) : o.push(...l.split("&"));
    }), { or: r, and: o };
  }
  n.parse = e;
  function t(s, r) {
    if (s != null && r != null) {
      const o = e(s), l = e(r), a = o.or.sort(), c = l.or.sort(), u = o.and.sort(), h = l.and.sort(), d = (f, p) => f.length === p.length && (f.length === 0 || f.every((g, m) => g === p[m]));
      return d(a, c) && d(u, h);
    }
    return s == null && r == null;
  }
  n.equals = t;
  function i(s, r, o) {
    if (r == null || Array.isArray(r) && r.length === 0)
      return o ? s.altKey !== !0 && s.ctrlKey !== !0 && s.metaKey !== !0 && s.shiftKey !== !0 : !0;
    const { or: l, and: a } = e(r), c = (u) => {
      const h = `${u.toLowerCase()}Key`;
      return s[h] === !0;
    };
    return l.some((u) => c(u)) && a.every((u) => c(u));
  }
  n.isMatch = i;
})(Rl || (Rl = {}));
var Fa;
(function(n) {
  n.linear = (e) => e, n.quad = (e) => e * e, n.cubic = (e) => e * e * e, n.inout = (e) => {
    if (e <= 0)
      return 0;
    if (e >= 1)
      return 1;
    const t = e * e, i = t * e;
    return 4 * (e < 0.5 ? i : 3 * (e - t) + i - 0.75);
  }, n.exponential = (e) => Math.pow(2, 10 * (e - 1)), n.bounce = (e) => {
    for (let t = 0, i = 1; ; t += i, i /= 2)
      if (e >= (7 - 4 * t) / 11) {
        const s = (11 - 6 * t - 11 * e) / 4;
        return -s * s + i * i;
      }
  };
})(Fa || (Fa = {}));
(function(n) {
  n.decorators = {
    reverse(e) {
      return (t) => 1 - e(1 - t);
    },
    reflect(e) {
      return (t) => 0.5 * (t < 0.5 ? e(2 * t) : 2 - e(2 - 2 * t));
    },
    clamp(e, t = 0, i = 1) {
      return (s) => {
        const r = e(s);
        return r < t ? t : r > i ? i : r;
      };
    },
    back(e = 1.70158) {
      return (t) => t * t * ((e + 1) * t - e);
    },
    elastic(e = 1.5) {
      return (t) => Math.pow(2, 10 * (t - 1)) * Math.cos(20 * Math.PI * e / 3 * t);
    }
  };
})(Fa || (Fa = {}));
(function(n) {
  function e(P) {
    return -1 * Math.cos(P * (Math.PI / 2)) + 1;
  }
  n.easeInSine = e;
  function t(P) {
    return Math.sin(P * (Math.PI / 2));
  }
  n.easeOutSine = t;
  function i(P) {
    return -0.5 * (Math.cos(Math.PI * P) - 1);
  }
  n.easeInOutSine = i;
  function s(P) {
    return P * P;
  }
  n.easeInQuad = s;
  function r(P) {
    return P * (2 - P);
  }
  n.easeOutQuad = r;
  function o(P) {
    return P < 0.5 ? 2 * P * P : -1 + (4 - 2 * P) * P;
  }
  n.easeInOutQuad = o;
  function l(P) {
    return P * P * P;
  }
  n.easeInCubic = l;
  function a(P) {
    const A = P - 1;
    return A * A * A + 1;
  }
  n.easeOutCubic = a;
  function c(P) {
    return P < 0.5 ? 4 * P * P * P : (P - 1) * (2 * P - 2) * (2 * P - 2) + 1;
  }
  n.easeInOutCubic = c;
  function u(P) {
    return P * P * P * P;
  }
  n.easeInQuart = u;
  function h(P) {
    const A = P - 1;
    return 1 - A * A * A * A;
  }
  n.easeOutQuart = h;
  function d(P) {
    const A = P - 1;
    return P < 0.5 ? 8 * P * P * P * P : 1 - 8 * A * A * A * A;
  }
  n.easeInOutQuart = d;
  function f(P) {
    return P * P * P * P * P;
  }
  n.easeInQuint = f;
  function p(P) {
    const A = P - 1;
    return 1 + A * A * A * A * A;
  }
  n.easeOutQuint = p;
  function g(P) {
    const A = P - 1;
    return P < 0.5 ? 16 * P * P * P * P * P : 1 + 16 * A * A * A * A * A;
  }
  n.easeInOutQuint = g;
  function m(P) {
    return P === 0 ? 0 : Math.pow(2, 10 * (P - 1));
  }
  n.easeInExpo = m;
  function v(P) {
    return P === 1 ? 1 : -Math.pow(2, -10 * P) + 1;
  }
  n.easeOutExpo = v;
  function O(P) {
    if (P === 0 || P === 1)
      return P;
    const A = P * 2, N = A - 1;
    return A < 1 ? 0.5 * Math.pow(2, 10 * N) : 0.5 * (-Math.pow(2, -10 * N) + 2);
  }
  n.easeInOutExpo = O;
  function b(P) {
    const A = P / 1;
    return -1 * (Math.sqrt(1 - A * P) - 1);
  }
  n.easeInCirc = b;
  function w(P) {
    const A = P - 1;
    return Math.sqrt(1 - A * A);
  }
  n.easeOutCirc = w;
  function x(P) {
    const A = P * 2, N = A - 2;
    return A < 1 ? -0.5 * (Math.sqrt(1 - A * A) - 1) : 0.5 * (Math.sqrt(1 - N * N) + 1);
  }
  n.easeInOutCirc = x;
  function S(P, A = 1.70158) {
    return P * P * ((A + 1) * P - A);
  }
  n.easeInBack = S;
  function C(P, A = 1.70158) {
    const N = P / 1 - 1;
    return N * N * ((A + 1) * N + A) + 1;
  }
  n.easeOutBack = C;
  function k(P, A = 1.70158) {
    const N = P * 2, q = N - 2, j = A * 1.525;
    return N < 1 ? 0.5 * N * N * ((j + 1) * N - j) : 0.5 * (q * q * ((j + 1) * q + j) + 2);
  }
  n.easeInOutBack = k;
  function E(P, A = 0.7) {
    if (P === 0 || P === 1)
      return P;
    const q = P / 1 - 1, j = 1 - A, H = j / (2 * Math.PI) * Math.asin(1);
    return -(Math.pow(2, 10 * q) * // eslint-disable-line
    Math.sin((q - H) * (2 * Math.PI) / j));
  }
  n.easeInElastic = E;
  function M(P, A = 0.7) {
    const N = 1 - A, q = P * 2;
    if (P === 0 || P === 1)
      return P;
    const j = N / (2 * Math.PI) * Math.asin(1);
    return Math.pow(2, -10 * q) * // eslint-disable-line
    Math.sin((q - j) * (2 * Math.PI) / N) + 1;
  }
  n.easeOutElastic = M;
  function _(P, A = 0.65) {
    const N = 1 - A;
    if (P === 0 || P === 1)
      return P;
    const q = P * 2, j = q - 1, H = N / (2 * Math.PI) * Math.asin(1);
    return q < 1 ? -0.5 * (Math.pow(2, 10 * j) * // eslint-disable-line
    Math.sin((j - H) * (2 * Math.PI) / N)) : Math.pow(2, -10 * j) * // eslint-disable-line
    Math.sin((j - H) * (2 * Math.PI) / N) * 0.5 + 1;
  }
  n.easeInOutElastic = _;
  function T(P) {
    const A = P / 1;
    if (A < 1 / 2.75)
      return 7.5625 * A * A;
    if (A < 2 / 2.75) {
      const N = A - 0.5454545454545454;
      return 7.5625 * N * N + 0.75;
    }
    if (A < 2.5 / 2.75) {
      const N = A - 0.8181818181818182;
      return 7.5625 * N * N + 0.9375;
    }
    {
      const N = A - 0.9545454545454546;
      return 7.5625 * N * N + 0.984375;
    }
  }
  n.easeOutBounce = T;
  function B(P) {
    return 1 - T(1 - P);
  }
  n.easeInBounce = B;
  function I(P) {
    return P < 0.5 ? B(P * 2) * 0.5 : T(P * 2 - 1) * 0.5 + 0.5;
  }
  n.easeInOutBounce = I;
})(Fa || (Fa = {}));
var wa;
(function(n) {
  n.number = (e, t) => {
    const i = t - e;
    return (s) => e + i * s;
  }, n.object = (e, t) => {
    const i = Object.keys(e);
    return (s) => {
      const r = {};
      for (let o = i.length - 1; o !== -1; o -= 1) {
        const l = i[o];
        r[l] = e[l] + (t[l] - e[l]) * s;
      }
      return r;
    };
  }, n.unit = (e, t) => {
    const i = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/, s = i.exec(e), r = i.exec(t), o = r ? r[1] : "", l = s ? +s[1] : 0, a = r ? +r[1] : 0, c = o.indexOf("."), u = c > 0 ? o[1].length - c - 1 : 0, h = a - l, d = s ? s[2] : "";
    return (f) => (l + h * f).toFixed(u) + d;
  }, n.color = (e, t) => {
    const i = parseInt(e.slice(1), 16), s = parseInt(t.slice(1), 16), r = i & 255, o = (s & 255) - r, l = i & 65280, a = (s & 65280) - l, c = i & 16711680, u = (s & 16711680) - c;
    return (h) => {
      const d = r + o * h & 255, f = l + a * h & 65280, p = c + u * h & 16711680;
      return `#${(1 << 24 | d | f | p).toString(16).slice(1)}`;
    };
  };
})(wa || (wa = {}));
const id = [];
function h0(n, e) {
  const t = id.find((i) => i.name === n);
  if (!(t && (t.loadTimes += 1, t.loadTimes > 1)) && !_l.isApplyingHMR()) {
    const i = document.createElement("style");
    i.setAttribute("type", "text/css"), i.textContent = e;
    const s = document.querySelector("head");
    s && s.insertBefore(i, s.firstChild), id.push({
      name: n,
      loadTimes: 1,
      styleElement: i
    });
  }
}
function d0(n) {
  const e = id.findIndex((t) => t.name === n);
  if (e > -1) {
    const t = id[e];
    if (t.loadTimes -= 1, t.loadTimes > 0)
      return;
    let i = t.styleElement;
    i && i.parentNode && i.parentNode.removeChild(i), i = null, id.splice(e, 1);
  }
}
var Pt;
(function(n) {
  function e(i) {
    return 180 * i / Math.PI % 360;
  }
  n.toDeg = e, n.toRad = function(i, s = !1) {
    return (s ? i : i % 360) * Math.PI / 180;
  };
  function t(i) {
    return i % 360 + (i < 0 ? 360 : 0);
  }
  n.normalize = t;
})(Pt || (Pt = {}));
var At;
(function(n) {
  function e(l, a = 0) {
    return Number.isInteger(l) ? l : +l.toFixed(a);
  }
  n.round = e;
  function t(l, a) {
    let c, u;
    if (a == null ? (u = l ?? 1, c = 0) : (u = a, c = l ?? 0), u < c) {
      const h = c;
      c = u, u = h;
    }
    return Math.floor(Math.random() * (u - c + 1) + c);
  }
  n.random = t;
  function i(l, a, c) {
    return Number.isNaN(l) ? NaN : Number.isNaN(a) || Number.isNaN(c) ? 0 : a < c ? l < a ? a : l > c ? c : l : l < c ? c : l > a ? a : l;
  }
  n.clamp = i;
  function s(l, a) {
    return a * Math.round(l / a);
  }
  n.snapToGrid = s;
  function r(l, a) {
    return a != null && l != null && a.x >= l.x && a.x <= l.x + l.width && a.y >= l.y && a.y <= l.y + l.height;
  }
  n.containsPoint = r;
  function o(l, a) {
    const c = l.x - a.x, u = l.y - a.y;
    return c * c + u * u;
  }
  n.squaredLength = o;
})(At || (At = {}));
class Yl {
  valueOf() {
    return this.toJSON();
  }
  toString() {
    return JSON.stringify(this.toJSON());
  }
}
class z extends Yl {
  constructor(e, t) {
    super(), this.x = e ?? 0, this.y = t ?? 0;
  }
  /**
   * Rounds the point to the given precision.
   */
  round(e = 0) {
    return this.x = At.round(this.x, e), this.y = At.round(this.y, e), this;
  }
  add(e, t) {
    const i = z.create(e, t);
    return this.x += i.x, this.y += i.y, this;
  }
  update(e, t) {
    const i = z.create(e, t);
    return this.x = i.x, this.y = i.y, this;
  }
  translate(e, t) {
    const i = z.create(e, t);
    return this.x += i.x, this.y += i.y, this;
  }
  /**
   * Rotate the point by `degree` around `center`.
   */
  rotate(e, t) {
    const i = z.rotate(this, e, t);
    return this.x = i.x, this.y = i.y, this;
  }
  /**
   * Scale point by `sx` and `sy` around the given `origin`. If origin is
   * not specified, the point is scaled around `0, 0`.
   */
  scale(e, t, i = new z()) {
    const s = z.create(i);
    return this.x = s.x + e * (this.x - s.x), this.y = s.y + t * (this.y - s.y), this;
  }
  /**
   * Chooses the point closest to this point from among `points`. If `points`
   * is an empty array, `null` is returned.
   */
  closest(e) {
    if (e.length === 1)
      return z.create(e[0]);
    let t = null, i = 1 / 0;
    return e.forEach((s) => {
      const r = this.squaredDistance(s);
      r < i && (t = s, i = r);
    }), t ? z.create(t) : null;
  }
  /**
   * Returns the distance between the point and another point `p`.
   */
  distance(e) {
    return Math.sqrt(this.squaredDistance(e));
  }
  /**
   * Returns the squared distance between the point and another point `p`.
   *
   * Useful for distance comparisons in which real distance is not necessary
   * (saves one `Math.sqrt()` operation).
   */
  squaredDistance(e) {
    const t = z.create(e), i = this.x - t.x, s = this.y - t.y;
    return i * i + s * s;
  }
  manhattanDistance(e) {
    const t = z.create(e);
    return Math.abs(t.x - this.x) + Math.abs(t.y - this.y);
  }
  /**
   * Returns the magnitude of the point vector.
   *
   * @see http://en.wikipedia.org/wiki/Magnitude_(mathematics)
   */
  magnitude() {
    return Math.sqrt(this.x * this.x + this.y * this.y) || 0.01;
  }
  /**
   * Returns the angle(in degrees) between vector from this point to `p` and
   * the x-axis.
   */
  theta(e = new z()) {
    const t = z.create(e), i = -(t.y - this.y), s = t.x - this.x;
    let r = Math.atan2(i, s);
    return r < 0 && (r = 2 * Math.PI + r), 180 * r / Math.PI;
  }
  /**
   * Returns the angle(in degrees) between vector from this point to `p1` and
   * the vector from this point to `p2`.
   *
   * The ordering of points `p1` and `p2` is important.
   *
   * The function returns a value between `0` and `180` when the angle (in the
   * direction from `p1` to `p2`) is clockwise, and a value between `180` and
   * `360` when the angle is counterclockwise.
   *
   * Returns `NaN` if either of the points `p1` and `p2` is equal with this point.
   */
  angleBetween(e, t) {
    if (this.equals(e) || this.equals(t))
      return NaN;
    let i = this.theta(t) - this.theta(e);
    return i < 0 && (i += 360), i;
  }
  /**
   * Returns the angle(in degrees) between the line from `(0,0)` and this point
   * and the line from `(0,0)` to `p`.
   *
   * The function returns a value between `0` and `180` when the angle (in the
   * direction from this point to `p`) is clockwise, and a value between `180`
   * and `360` when the angle is counterclockwise. Returns `NaN` if called from
   * point `(0,0)` or if `p` is `(0,0)`.
   */
  vectorAngle(e) {
    return new z(0, 0).angleBetween(this, e);
  }
  /**
   * Converts rectangular to polar coordinates.
   */
  toPolar(e) {
    return this.update(z.toPolar(this, e)), this;
  }
  /**
   * Returns the change in angle(in degrees) that is the result of moving the
   * point from its previous position to its current position.
   *
   * More specifically, this function computes the angle between the line from
   * the ref point to the previous position of this point(i.e. current position
   * `-dx`, `-dy`) and the line from the `ref` point to the current position of
   * this point.
   *
   * The function returns a positive value between `0` and `180` when the angle
   * (in the direction from previous position of this point to its current
   * position) is clockwise, and a negative value between `0` and `-180` when
   * the angle is counterclockwise.
   *
   * The function returns `0` if the previous and current positions of this
   * point are the same (i.e. both `dx` and `dy` are `0`).
   */
  changeInAngle(e, t, i = new z()) {
    return this.clone().translate(-e, -t).theta(i) - this.theta(i);
  }
  /**
   * If the point lies outside the rectangle `rect`, adjust the point so that
   * it becomes the nearest point on the boundary of `rect`.
   */
  adhereToRect(e) {
    return At.containsPoint(e, this) || (this.x = Math.min(Math.max(this.x, e.x), e.x + e.width), this.y = Math.min(Math.max(this.y, e.y), e.y + e.height)), this;
  }
  /**
   * Returns the bearing(cardinal direction) between me and the given point.
   *
   * @see https://en.wikipedia.org/wiki/Cardinal_direction
   */
  bearing(e) {
    const t = z.create(e), i = Pt.toRad(this.y), s = Pt.toRad(t.y), r = this.x, o = t.x, l = Pt.toRad(o - r), a = Math.sin(l) * Math.cos(s), c = Math.cos(i) * Math.sin(s) - Math.sin(i) * Math.cos(s) * Math.cos(l), u = Pt.toDeg(Math.atan2(a, c)), h = ["NE", "E", "SE", "S", "SW", "W", "NW", "N"];
    let d = u - 22.5;
    return d < 0 && (d += 360), d = parseInt(d / 45, 10), h[d];
  }
  /**
   * Returns the cross product of the vector from me to `p1` and the vector
   * from me to `p2`.
   *
   * The left-hand rule is used because the coordinate system is left-handed.
   */
  cross(e, t) {
    if (e != null && t != null) {
      const i = z.create(e), s = z.create(t);
      return (s.x - this.x) * (i.y - this.y) - (s.y - this.y) * (i.x - this.x);
    }
    return NaN;
  }
  /**
   * Returns the dot product of this point with given other point.
   */
  dot(e) {
    const t = z.create(e);
    return this.x * t.x + this.y * t.y;
  }
  diff(e, t) {
    if (typeof e == "number")
      return new z(this.x - e, this.y - t);
    const i = z.create(e);
    return new z(this.x - i.x, this.y - i.y);
  }
  /**
   * Returns an interpolation between me and point `p` for a parametert in
   * the closed interval `[0, 1]`.
   */
  lerp(e, t) {
    const i = z.create(e);
    return new z((1 - t) * this.x + t * i.x, (1 - t) * this.y + t * i.y);
  }
  /**
   * Normalize the point vector, scale the line segment between `(0, 0)`
   * and the point in order for it to have the given length. If length is
   * not specified, it is considered to be `1`; in that case, a unit vector
   * is computed.
   */
  normalize(e = 1) {
    const t = e / this.magnitude();
    return this.scale(t, t);
  }
  /**
   * Moves this point along the line starting from `ref` to this point by a
   * certain `distance`.
   */
  move(e, t) {
    const i = z.create(e), s = Pt.toRad(i.theta(this));
    return this.translate(Math.cos(s) * t, -Math.sin(s) * t);
  }
  /**
   * Returns a point that is the reflection of me with the center of inversion
   * in `ref` point.
   */
  reflection(e) {
    return z.create(e).move(this, this.distance(e));
  }
  snapToGrid(e, t) {
    return this.x = At.snapToGrid(this.x, e), this.y = At.snapToGrid(this.y, t ?? e), this;
  }
  equals(e) {
    const t = z.create(e);
    return t != null && t.x === this.x && t.y === this.y;
  }
  clone() {
    return z.clone(this);
  }
  /**
   * Returns the point as a simple JSON object. For example: `{ x: 0, y: 0 }`.
   */
  toJSON() {
    return z.toJSON(this);
  }
  serialize() {
    return `${this.x} ${this.y}`;
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPoint = e;
})(z || (z = {}));
(function(n) {
  function e(i) {
    return i != null && typeof i == "object" && typeof i.x == "number" && typeof i.y == "number";
  }
  n.isPointLike = e;
  function t(i) {
    return i != null && Array.isArray(i) && i.length === 2 && typeof i[0] == "number" && typeof i[1] == "number";
  }
  n.isPointData = t;
})(z || (z = {}));
(function(n) {
  function e(h, d) {
    return h == null || typeof h == "number" ? new n(h, d) : t(h);
  }
  n.create = e;
  function t(h) {
    return n.isPoint(h) ? new n(h.x, h.y) : Array.isArray(h) ? new n(h[0], h[1]) : new n(h.x, h.y);
  }
  n.clone = t;
  function i(h) {
    return n.isPoint(h) ? { x: h.x, y: h.y } : Array.isArray(h) ? { x: h[0], y: h[1] } : { x: h.x, y: h.y };
  }
  n.toJSON = i;
  function s(h, d, f = new n()) {
    let p = Math.abs(h * Math.cos(d)), g = Math.abs(h * Math.sin(d));
    const m = t(f), v = Pt.normalize(Pt.toDeg(d));
    return v < 90 ? g = -g : v < 180 ? (p = -p, g = -g) : v < 270 && (p = -p), new n(m.x + p, m.y + g);
  }
  n.fromPolar = s;
  function r(h, d = new n()) {
    const f = t(h), p = t(d), g = f.x - p.x, m = f.y - p.y;
    return new n(
      Math.sqrt(g * g + m * m),
      // r
      Pt.toRad(p.theta(f))
    );
  }
  n.toPolar = r;
  function o(h, d) {
    return h === d ? !0 : h != null && d != null ? h.x === d.x && h.y === d.y : !1;
  }
  n.equals = o;
  function l(h, d) {
    if (h == null && d != null || h != null && d == null || h != null && d != null && h.length !== d.length)
      return !1;
    if (h != null && d != null) {
      for (let f = 0, p = h.length; f < p; f += 1)
        if (!o(h[f], d[f]))
          return !1;
    }
    return !0;
  }
  n.equalPoints = l;
  function a(h, d, f, p) {
    return new n(At.random(h, d), At.random(f, p));
  }
  n.random = a;
  function c(h, d, f) {
    const p = Pt.toRad(Pt.normalize(-d)), g = Math.sin(p), m = Math.cos(p);
    return u(h, m, g, f);
  }
  n.rotate = c;
  function u(h, d, f, p = new n()) {
    const g = t(h), m = t(p), v = g.x - m.x, O = g.y - m.y, b = v * d - O * f, w = O * d + v * f;
    return new n(b + m.x, w + m.y);
  }
  n.rotateEx = u;
})(z || (z = {}));
class ye extends Yl {
  get left() {
    return this.x;
  }
  get top() {
    return this.y;
  }
  get right() {
    return this.x + this.width;
  }
  get bottom() {
    return this.y + this.height;
  }
  get origin() {
    return new z(this.x, this.y);
  }
  get topLeft() {
    return new z(this.x, this.y);
  }
  get topCenter() {
    return new z(this.x + this.width / 2, this.y);
  }
  get topRight() {
    return new z(this.x + this.width, this.y);
  }
  get center() {
    return new z(this.x + this.width / 2, this.y + this.height / 2);
  }
  get bottomLeft() {
    return new z(this.x, this.y + this.height);
  }
  get bottomCenter() {
    return new z(this.x + this.width / 2, this.y + this.height);
  }
  get bottomRight() {
    return new z(this.x + this.width, this.y + this.height);
  }
  get corner() {
    return new z(this.x + this.width, this.y + this.height);
  }
  get rightMiddle() {
    return new z(this.x + this.width, this.y + this.height / 2);
  }
  get leftMiddle() {
    return new z(this.x, this.y + this.height / 2);
  }
  get topLine() {
    return new Ie(this.topLeft, this.topRight);
  }
  get rightLine() {
    return new Ie(this.topRight, this.bottomRight);
  }
  get bottomLine() {
    return new Ie(this.bottomLeft, this.bottomRight);
  }
  get leftLine() {
    return new Ie(this.topLeft, this.bottomLeft);
  }
  constructor(e, t, i, s) {
    super(), this.x = e ?? 0, this.y = t ?? 0, this.width = i ?? 0, this.height = s ?? 0;
  }
  getOrigin() {
    return this.origin;
  }
  getTopLeft() {
    return this.topLeft;
  }
  getTopCenter() {
    return this.topCenter;
  }
  getTopRight() {
    return this.topRight;
  }
  getCenter() {
    return this.center;
  }
  getCenterX() {
    return this.x + this.width / 2;
  }
  getCenterY() {
    return this.y + this.height / 2;
  }
  getBottomLeft() {
    return this.bottomLeft;
  }
  getBottomCenter() {
    return this.bottomCenter;
  }
  getBottomRight() {
    return this.bottomRight;
  }
  getCorner() {
    return this.corner;
  }
  getRightMiddle() {
    return this.rightMiddle;
  }
  getLeftMiddle() {
    return this.leftMiddle;
  }
  getTopLine() {
    return this.topLine;
  }
  getRightLine() {
    return this.rightLine;
  }
  getBottomLine() {
    return this.bottomLine;
  }
  getLeftLine() {
    return this.leftLine;
  }
  /**
   * Returns a rectangle that is the bounding box of the rectangle.
   *
   * If `angle` is specified, the bounding box calculation will take into
   * account the rotation of the rectangle by angle degrees around its center.
   */
  bbox(e) {
    if (!e)
      return this.clone();
    const t = Pt.toRad(e), i = Math.abs(Math.sin(t)), s = Math.abs(Math.cos(t)), r = this.width * s + this.height * i, o = this.width * i + this.height * s;
    return new ye(this.x + (this.width - r) / 2, this.y + (this.height - o) / 2, r, o);
  }
  round(e = 0) {
    return this.x = At.round(this.x, e), this.y = At.round(this.y, e), this.width = At.round(this.width, e), this.height = At.round(this.height, e), this;
  }
  add(e, t, i, s) {
    const r = ye.create(e, t, i, s), o = Math.min(this.x, r.x), l = Math.min(this.y, r.y), a = Math.max(this.x + this.width, r.x + r.width), c = Math.max(this.y + this.height, r.y + r.height);
    return this.x = o, this.y = l, this.width = a - o, this.height = c - l, this;
  }
  update(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return this.x = r.x, this.y = r.y, this.width = r.width, this.height = r.height, this;
  }
  inflate(e, t) {
    const i = e, s = t ?? e;
    return this.x -= i, this.y -= s, this.width += 2 * i, this.height += 2 * s, this;
  }
  snapToGrid(e, t) {
    const i = this.origin.snapToGrid(e, t), s = this.corner.snapToGrid(e, t);
    return this.x = i.x, this.y = i.y, this.width = s.x - i.x, this.height = s.y - i.y, this;
  }
  translate(e, t) {
    const i = z.create(e, t);
    return this.x += i.x, this.y += i.y, this;
  }
  scale(e, t, i = new z()) {
    const s = this.origin.scale(e, t, i);
    return this.x = s.x, this.y = s.y, this.width *= e, this.height *= t, this;
  }
  rotate(e, t = this.getCenter()) {
    if (e !== 0) {
      const i = Pt.toRad(e), s = Math.cos(i), r = Math.sin(i);
      let o = this.getOrigin(), l = this.getTopRight(), a = this.getBottomRight(), c = this.getBottomLeft();
      o = z.rotateEx(o, s, r, t), l = z.rotateEx(l, s, r, t), a = z.rotateEx(a, s, r, t), c = z.rotateEx(c, s, r, t);
      const u = new ye(o.x, o.y, 0, 0);
      u.add(l.x, l.y, 0, 0), u.add(a.x, a.y, 0, 0), u.add(c.x, c.y, 0, 0), this.update(u);
    }
    return this;
  }
  rotate90() {
    const e = (this.width - this.height) / 2;
    this.x += e, this.y -= e;
    const t = this.width;
    return this.width = this.height, this.height = t, this;
  }
  /**
   * Translates the rectangle by `rect.x` and `rect.y` and expand it by
   * `rect.width` and `rect.height`.
   */
  moveAndExpand(e) {
    const t = ye.clone(e);
    return this.x += t.x || 0, this.y += t.y || 0, this.width += t.width || 0, this.height += t.height || 0, this;
  }
  /**
   * Returns an object where `sx` and `sy` give the maximum scaling that can be
   * applied to the rectangle so that it would still fit into `limit`. If
   * `origin` is specified, the rectangle is scaled around it; otherwise, it is
   * scaled around its center.
   */
  getMaxScaleToFit(e, t = this.center) {
    const i = ye.clone(e), s = t.x, r = t.y;
    let o = 1 / 0, l = 1 / 0, a = 1 / 0, c = 1 / 0, u = 1 / 0, h = 1 / 0, d = 1 / 0, f = 1 / 0;
    const p = i.topLeft;
    p.x < s && (o = (this.x - s) / (p.x - s)), p.y < r && (u = (this.y - r) / (p.y - r));
    const g = i.bottomRight;
    g.x > s && (l = (this.x + this.width - s) / (g.x - s)), g.y > r && (h = (this.y + this.height - r) / (g.y - r));
    const m = i.topRight;
    m.x > s && (a = (this.x + this.width - s) / (m.x - s)), m.y < r && (d = (this.y - r) / (m.y - r));
    const v = i.bottomLeft;
    return v.x < s && (c = (this.x - s) / (v.x - s)), v.y > r && (f = (this.y + this.height - r) / (v.y - r)), {
      sx: Math.min(o, l, a, c),
      sy: Math.min(u, h, d, f)
    };
  }
  /**
   * Returns a number that specifies the maximum scaling that can be applied to
   * the rectangle along both axes so that it would still fit into `limit`. If
   * `origin` is specified, the rectangle is scaled around it; otherwise, it is
   * scaled around its center.
   */
  getMaxUniformScaleToFit(e, t = this.center) {
    const i = this.getMaxScaleToFit(e, t);
    return Math.min(i.sx, i.sy);
  }
  containsPoint(e, t) {
    return At.containsPoint(this, z.create(e, t));
  }
  containsRect(e, t, i, s) {
    const r = ye.create(e, t, i, s), o = this.x, l = this.y, a = this.width, c = this.height, u = r.x, h = r.y, d = r.width, f = r.height;
    return a === 0 || c === 0 || d === 0 || f === 0 ? !1 : u >= o && h >= l && u + d <= o + a && h + f <= l + c;
  }
  /**
   * Returns an array of the intersection points of the rectangle and the line.
   * Return `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = [
      this.topLine,
      this.rightLine,
      this.bottomLine,
      this.leftLine
    ], i = [], s = [];
    return t.forEach((r) => {
      const o = e.intersectsWithLine(r);
      o !== null && s.indexOf(o.toString()) < 0 && (i.push(o), s.push(o.toString()));
    }), i.length > 0 ? i : null;
  }
  /**
   * Returns the point on the boundary of the rectangle that is the intersection
   * of the rectangle with a line starting in the center the rectangle ending in
   * the point `p`.
   *
   * If `angle` is specified, the intersection will take into account the
   * rotation of the rectangle by `angle` degrees around its center.
   */
  intersectsWithLineFromCenterToPoint(e, t) {
    const i = z.clone(e), s = this.center;
    let r = null;
    t != null && t !== 0 && i.rotate(t, s);
    const o = [this.topLine, this.rightLine, this.bottomLine, this.leftLine], l = new Ie(s, i);
    for (let a = o.length - 1; a >= 0; a -= 1) {
      const c = o[a].intersectsWithLine(l);
      if (c !== null) {
        r = c;
        break;
      }
    }
    return r && t != null && t !== 0 && r.rotate(-t, s), r;
  }
  intersectsWithRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    if (!this.isIntersectWithRect(r))
      return null;
    const o = this.origin, l = this.corner, a = r.origin, c = r.corner, u = Math.max(o.x, a.x), h = Math.max(o.y, a.y);
    return new ye(u, h, Math.min(l.x, c.x) - u, Math.min(l.y, c.y) - h);
  }
  isIntersectWithRect(e, t, i, s) {
    const r = ye.create(e, t, i, s), o = this.origin, l = this.corner, a = r.origin, c = r.corner;
    return !(c.x <= o.x || c.y <= o.y || a.x >= l.x || a.y >= l.y);
  }
  /**
   * Normalize the rectangle, i.e. make it so that it has non-negative
   * width and height. If width is less than `0`, the function swaps left and
   * right corners and if height is less than `0`, the top and bottom corners
   * are swapped.
   */
  normalize() {
    let e = this.x, t = this.y, i = this.width, s = this.height;
    return this.width < 0 && (e = this.x + this.width, i = -this.width), this.height < 0 && (t = this.y + this.height, s = -this.height), this.x = e, this.y = t, this.width = i, this.height = s, this;
  }
  /**
   * Returns a rectangle that is a union of this rectangle and rectangle `rect`.
   */
  union(e) {
    const t = ye.clone(e), i = this.origin, s = this.corner, r = t.origin, o = t.corner, l = Math.min(i.x, r.x), a = Math.min(i.y, r.y), c = Math.max(s.x, o.x), u = Math.max(s.y, o.y);
    return new ye(l, a, c - l, u - a);
  }
  /**
   * Returns a string ("top", "left", "right" or "bottom") denoting the side of
   * the rectangle which is nearest to the point `p`.
   */
  getNearestSideToPoint(e) {
    const t = z.clone(e), i = t.x - this.x, s = this.x + this.width - t.x, r = t.y - this.y, o = this.y + this.height - t.y;
    let l = i, a = "left";
    return s < l && (l = s, a = "right"), r < l && (l = r, a = "top"), o < l && (a = "bottom"), a;
  }
  /**
   * Returns a point on the boundary of the rectangle nearest to the point `p`.
   */
  getNearestPointToPoint(e) {
    const t = z.clone(e);
    if (this.containsPoint(t)) {
      const i = this.getNearestSideToPoint(t);
      if (i === "left")
        return new z(this.x, t.y);
      if (i === "top")
        return new z(t.x, this.y);
      if (i === "right")
        return new z(this.x + this.width, t.y);
      if (i === "bottom")
        return new z(t.x, this.y + this.height);
    }
    return t.adhereToRect(this);
  }
  equals(e) {
    return e != null && e.x === this.x && e.y === this.y && e.width === this.width && e.height === this.height;
  }
  clone() {
    return new ye(this.x, this.y, this.width, this.height);
  }
  toJSON() {
    return { x: this.x, y: this.y, width: this.width, height: this.height };
  }
  serialize() {
    return `${this.x} ${this.y} ${this.width} ${this.height}`;
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isRectangle = e;
})(ye || (ye = {}));
(function(n) {
  function e(t) {
    return t != null && typeof t == "object" && typeof t.x == "number" && typeof t.y == "number" && typeof t.width == "number" && typeof t.height == "number";
  }
  n.isRectangleLike = e;
})(ye || (ye = {}));
(function(n) {
  function e(o, l, a, c) {
    return o == null || typeof o == "number" ? new n(o, l, a, c) : t(o);
  }
  n.create = e;
  function t(o) {
    return n.isRectangle(o) ? o.clone() : Array.isArray(o) ? new n(o[0], o[1], o[2], o[3]) : new n(o.x, o.y, o.width, o.height);
  }
  n.clone = t;
  function i(o) {
    return new n(o.x - o.a, o.y - o.b, 2 * o.a, 2 * o.b);
  }
  n.fromEllipse = i;
  function s(o) {
    return new n(0, 0, o.width, o.height);
  }
  n.fromSize = s;
  function r(o, l) {
    return new n(o.x, o.y, l.width, l.height);
  }
  n.fromPositionAndSize = r;
})(ye || (ye = {}));
let Ie = class lr extends Yl {
  get center() {
    return new z((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);
  }
  constructor(e, t, i, s) {
    super(), typeof e == "number" && typeof t == "number" ? (this.start = new z(e, t), this.end = new z(i, s)) : (this.start = z.create(e), this.end = z.create(t));
  }
  getCenter() {
    return this.center;
  }
  /**
   * Rounds the line to the given `precision`.
   */
  round(e = 0) {
    return this.start.round(e), this.end.round(e), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.start.translate(e, t), this.end.translate(e, t)) : (this.start.translate(e), this.end.translate(e)), this;
  }
  /**
   * Rotate the line by `angle` around `origin`.
   */
  rotate(e, t) {
    return this.start.rotate(e, t), this.end.rotate(e, t), this;
  }
  /**
   * Scale the line by `sx` and `sy` about the given `origin`. If origin is not
   * specified, the line is scaled around `0,0`.
   */
  scale(e, t, i) {
    return this.start.scale(e, t, i), this.end.scale(e, t, i), this;
  }
  /**
   * Returns the length of the line.
   */
  length() {
    return Math.sqrt(this.squaredLength());
  }
  /**
   * Useful for distance comparisons in which real length is not necessary
   * (saves one `Math.sqrt()` operation).
   */
  squaredLength() {
    const e = this.start.x - this.end.x, t = this.start.y - this.end.y;
    return e * e + t * t;
  }
  /**
   * Scale the line so that it has the requested length. The start point of
   * the line is preserved.
   */
  setLength(e) {
    const t = this.length();
    if (!t)
      return this;
    const i = e / t;
    return this.scale(i, i, this.start);
  }
  parallel(e) {
    const t = this.clone();
    if (!t.isDifferentiable())
      return t;
    const { start: i, end: s } = t, r = i.clone().rotate(270, s), o = s.clone().rotate(90, i);
    return i.move(o, e), s.move(r, e), t;
  }
  /**
   * Returns the vector of the line with length equal to length of the line.
   */
  vector() {
    return new z(this.end.x - this.start.x, this.end.y - this.start.y);
  }
  /**
   * Returns the angle of incline of the line.
   *
   * The function returns `NaN` if the start and end endpoints of the line
   * both lie at the same coordinates(it is impossible to determine the angle
   * of incline of a line that appears to be a point). The
   * `line.isDifferentiable()` function may be used in advance to determine
   * whether the angle of incline can be computed for a given line.
   */
  angle() {
    const e = new z(this.start.x + 1, this.start.y);
    return this.start.angleBetween(this.end, e);
  }
  /**
   * Returns a rectangle that is the bounding box of the line.
   */
  bbox() {
    const e = Math.min(this.start.x, this.end.x), t = Math.min(this.start.y, this.end.y), i = Math.max(this.start.x, this.end.x), s = Math.max(this.start.y, this.end.y);
    return new ye(e, t, i - e, s - t);
  }
  /**
   * Returns the bearing (cardinal direction) of the line.
   *
   * The return value is one of the following strings:
   * 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW' and 'N'.
   *
   * The function returns 'N' if the two endpoints of the line are coincident.
   */
  bearing() {
    return this.start.bearing(this.end);
  }
  /**
   * Returns the point on the line that lies closest to point `p`.
   */
  closestPoint(e) {
    return this.pointAt(this.closestPointNormalizedLength(e));
  }
  /**
   * Returns the length of the line up to the point that lies closest to point `p`.
   */
  closestPointLength(e) {
    return this.closestPointNormalizedLength(e) * this.length();
  }
  /**
   * Returns a line that is tangent to the line at the point that lies closest
   * to point `p`.
   */
  closestPointTangent(e) {
    return this.tangentAt(this.closestPointNormalizedLength(e));
  }
  /**
   * Returns the normalized length (distance from the start of the line / total
   * line length) of the line up to the point that lies closest to point.
   */
  closestPointNormalizedLength(e) {
    const t = this.vector().dot(new lr(this.start, e).vector()), i = Math.min(1, Math.max(0, t / this.squaredLength()));
    return Number.isNaN(i) ? 0 : i;
  }
  /**
   * Returns a point on the line that lies `rate` (normalized length) away from
   * the beginning of the line.
   */
  pointAt(e) {
    const t = this.start, i = this.end;
    return e <= 0 ? t.clone() : e >= 1 ? i.clone() : t.lerp(i, e);
  }
  /**
   * Returns a point on the line that lies length away from the beginning of
   * the line.
   */
  pointAtLength(e) {
    const t = this.start, i = this.end;
    let s = !0;
    e < 0 && (s = !1, e = -e);
    const r = this.length();
    if (e >= r)
      return s ? i.clone() : t.clone();
    const o = (s ? e : r - e) / r;
    return this.pointAt(o);
  }
  /**
   * Divides the line into two lines at the point that lies `rate` (normalized
   * length) away from the beginning of the line.
   */
  divideAt(e) {
    const t = this.pointAt(e);
    return [
      new lr(this.start, t),
      new lr(t, this.end)
    ];
  }
  /**
   * Divides the line into two lines at the point that lies length away from
   * the beginning of the line.
   */
  divideAtLength(e) {
    const t = this.pointAtLength(e);
    return [
      new lr(this.start, t),
      new lr(t, this.end)
    ];
  }
  /**
   * Returns `true` if the point `p` lies on the line. Return `false` otherwise.
   */
  containsPoint(e) {
    const t = this.start, i = this.end;
    if (t.cross(e, i) !== 0)
      return !1;
    const s = this.length();
    return !(new lr(t, e).length() > s || new lr(e, i).length() > s);
  }
  intersect(e, t) {
    const i = e.intersectsWithLine(this, t);
    return i ? Array.isArray(i) ? i : [i] : null;
  }
  /**
   * Returns the intersection point of the line with another line. Returns
   * `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = new z(this.end.x - this.start.x, this.end.y - this.start.y), i = new z(e.end.x - e.start.x, e.end.y - e.start.y), s = t.x * i.y - t.y * i.x, r = new z(e.start.x - this.start.x, e.start.y - this.start.y), o = r.x * i.y - r.y * i.x, l = r.x * t.y - r.y * t.x;
    if (s === 0 || o * s < 0 || l * s < 0)
      return null;
    if (s > 0) {
      if (o > s || l > s)
        return null;
    } else if (o < s || l < s)
      return null;
    return new z(this.start.x + o * t.x / s, this.start.y + o * t.y / s);
  }
  /**
   * Returns `true` if a tangent line can be found for the line.
   *
   * Tangents cannot be found if both of the line endpoints are coincident
   * (the line appears to be a point).
   */
  isDifferentiable() {
    return !this.start.equals(this.end);
  }
  /**
   * Returns the perpendicular distance between the line and point. The
   * distance is positive if the point lies to the right of the line, negative
   * if the point lies to the left of the line, and `0` if the point lies on
   * the line.
   */
  pointOffset(e) {
    const t = z.clone(e), i = this.start, s = this.end;
    return ((s.x - i.x) * (t.y - i.y) - (s.y - i.y) * (t.x - i.x)) / this.length();
  }
  pointSquaredDistance(e, t) {
    const i = z.create(e, t);
    return this.closestPoint(i).squaredDistance(i);
  }
  pointDistance(e, t) {
    const i = z.create(e, t);
    return this.closestPoint(i).distance(i);
  }
  /**
   * Returns a line tangent to the line at point that lies `rate` (normalized
   * length) away from the beginning of the line.
   */
  tangentAt(e) {
    if (!this.isDifferentiable())
      return null;
    const t = this.start, i = this.end, s = this.pointAt(e), r = new lr(t, i);
    return r.translate(s.x - t.x, s.y - t.y), r;
  }
  /**
   * Returns a line tangent to the line at point that lies `length` away from
   * the beginning of the line.
   */
  tangentAtLength(e) {
    if (!this.isDifferentiable())
      return null;
    const t = this.start, i = this.end, s = this.pointAtLength(e), r = new lr(t, i);
    return r.translate(s.x - t.x, s.y - t.y), r;
  }
  relativeCcw(e, t) {
    const i = z.create(e, t);
    let s = i.x - this.start.x, r = i.y - this.start.y;
    const o = this.end.x - this.start.x, l = this.end.y - this.start.y;
    let a = s * l - r * o;
    return a === 0 && (a = s * o + r * l, a > 0 && (s -= o, r -= l, a = s * o + r * l, a < 0 && (a = 0))), a < 0 ? -1 : a > 0 ? 1 : 0;
  }
  /**
   * Return `true` if the line equals the other line.
   */
  equals(e) {
    return e != null && this.start.x === e.start.x && this.start.y === e.start.y && this.end.x === e.end.x && this.end.y === e.end.y;
  }
  /**
   * Returns another line which is a clone of the line.
   */
  clone() {
    return new lr(this.start, this.end);
  }
  toJSON() {
    return { start: this.start.toJSON(), end: this.end.toJSON() };
  }
  serialize() {
    return [this.start.serialize(), this.end.serialize()].join(" ");
  }
};
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isLine = e;
})(Ie || (Ie = {}));
class wr extends Yl {
  get center() {
    return new z(this.x, this.y);
  }
  constructor(e, t, i, s) {
    super(), this.x = e ?? 0, this.y = t ?? 0, this.a = i ?? 0, this.b = s ?? 0;
  }
  /**
   * Returns a rectangle that is the bounding box of the ellipse.
   */
  bbox() {
    return ye.fromEllipse(this);
  }
  /**
   * Returns a point that is the center of the ellipse.
   */
  getCenter() {
    return this.center;
  }
  inflate(e, t) {
    const i = e, s = t ?? e;
    return this.a += 2 * i, this.b += 2 * s, this;
  }
  normalizedDistance(e, t) {
    const i = z.create(e, t), s = i.x - this.x, r = i.y - this.y, o = this.a, l = this.b;
    return s * s / (o * o) + r * r / (l * l);
  }
  containsPoint(e, t) {
    return this.normalizedDistance(e, t) <= 1;
  }
  /**
   * Returns an array of the intersection points of the ellipse and the line.
   * Returns `null` if no intersection exists.
   */
  intersectsWithLine(e) {
    const t = [], i = this.a, s = this.b, r = e.start, o = e.end, l = e.vector(), a = r.diff(new z(this.x, this.y)), c = new z(l.x / (i * i), l.y / (s * s)), u = new z(a.x / (i * i), a.y / (s * s)), h = l.dot(c), d = l.dot(u), f = a.dot(u) - 1, p = d * d - h * f;
    if (p < 0)
      return null;
    if (p > 0) {
      const g = Math.sqrt(p), m = (-d - g) / h, v = (-d + g) / h;
      if ((m < 0 || m > 1) && (v < 0 || v > 1))
        return null;
      m >= 0 && m <= 1 && t.push(r.lerp(o, m)), v >= 0 && v <= 1 && t.push(r.lerp(o, v));
    } else {
      const g = -d / h;
      if (g >= 0 && g <= 1)
        t.push(r.lerp(o, g));
      else
        return null;
    }
    return t;
  }
  /**
   * Returns the point on the boundary of the ellipse that is the
   * intersection of the ellipse with a line starting in the center
   * of the ellipse ending in the point `p`.
   *
   * If angle is specified, the intersection will take into account
   * the rotation of the ellipse by angle degrees around its center.
   */
  intersectsWithLineFromCenterToPoint(e, t = 0) {
    const i = z.clone(e);
    t && i.rotate(t, this.getCenter());
    const s = i.x - this.x, r = i.y - this.y;
    let o;
    if (s === 0)
      return o = this.bbox().getNearestPointToPoint(i), t ? o.rotate(-t, this.getCenter()) : o;
    const l = r / s, a = l * l, c = this.a * this.a, u = this.b * this.b;
    let h = Math.sqrt(1 / (1 / c + a / u));
    h = s < 0 ? -h : h;
    const d = l * h;
    return o = new z(this.x + h, this.y + d), t ? o.rotate(-t, this.getCenter()) : o;
  }
  /**
   * Returns the angle between the x-axis and the tangent from a point. It is
   * valid for points lying on the ellipse boundary only.
   */
  tangentTheta(e) {
    const t = z.clone(e), i = t.x, s = t.y, r = this.a, o = this.b, l = this.bbox().center, a = l.x, c = l.y, u = 30, h = i > l.x + r / 2, d = i < l.x - r / 2;
    let f, p;
    return h || d ? (p = i > l.x ? s - u : s + u, f = r * r / (i - a) - r * r * (s - c) * (p - c) / (o * o * (i - a)) + a) : (f = s > l.y ? i + u : i - u, p = o * o / (s - c) - o * o * (i - a) * (f - a) / (r * r * (s - c)) + c), new z(f, p).theta(t);
  }
  scale(e, t) {
    return this.a *= e, this.b *= t, this;
  }
  rotate(e, t) {
    const i = ye.fromEllipse(this);
    i.rotate(e, t);
    const s = wr.fromRect(i);
    return this.a = s.a, this.b = s.b, this.x = s.x, this.y = s.y, this;
  }
  translate(e, t) {
    const i = z.create(e, t);
    return this.x += i.x, this.y += i.y, this;
  }
  equals(e) {
    return e != null && e.x === this.x && e.y === this.y && e.a === this.a && e.b === this.b;
  }
  clone() {
    return new wr(this.x, this.y, this.a, this.b);
  }
  toJSON() {
    return { x: this.x, y: this.y, a: this.a, b: this.b };
  }
  serialize() {
    return `${this.x} ${this.y} ${this.a} ${this.b}`;
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isEllipse = e;
})(wr || (wr = {}));
(function(n) {
  function e(s, r, o, l) {
    return s == null || typeof s == "number" ? new n(s, r, o, l) : t(s);
  }
  n.create = e;
  function t(s) {
    return n.isEllipse(s) ? s.clone() : Array.isArray(s) ? new n(s[0], s[1], s[2], s[3]) : new n(s.x, s.y, s.a, s.b);
  }
  n.parse = t;
  function i(s) {
    const r = s.center;
    return new n(r.x, r.y, s.width / 2, s.height / 2);
  }
  n.fromRect = i;
})(wr || (wr = {}));
const yte = new RegExp("^[\\s\\dLMCZz,.]*$");
function Ote(n) {
  return typeof n != "string" ? !1 : yte.test(n);
}
function Cv(n, e) {
  return (n % e + e) % e;
}
function wte(n, e, t, i, s) {
  const r = [], o = n[n.length - 1], l = e != null && e > 0, a = e || 0;
  if (i && l) {
    n = n.slice();
    const h = n[0], d = new z(o.x + (h.x - o.x) / 2, o.y + (h.y - o.y) / 2);
    n.splice(0, 0, d);
  }
  let c = n[0], u = 1;
  for (t ? r.push("M", c.x, c.y) : r.push("L", c.x, c.y); u < (i ? n.length : n.length - 1); ) {
    let h = n[Cv(u, n.length)], d = c.x - h.x, f = c.y - h.y;
    if (l && (d !== 0 || f !== 0) && (s == null || s.indexOf(u - 1) < 0)) {
      let p = Math.sqrt(d * d + f * f);
      const g = d * Math.min(a, p / 2) / p, m = f * Math.min(a, p / 2) / p, v = h.x + g, O = h.y + m;
      r.push("L", v, O);
      let b = n[Cv(u + 1, n.length)];
      for (; u < n.length - 2 && Math.round(b.x - h.x) === 0 && Math.round(b.y - h.y) === 0; )
        b = n[Cv(u + 2, n.length)], u += 1;
      d = b.x - h.x, f = b.y - h.y, p = Math.max(1, Math.sqrt(d * d + f * f));
      const w = d * Math.min(a, p / 2) / p, x = f * Math.min(a, p / 2) / p, S = h.x + w, C = h.y + x;
      r.push("Q", h.x, h.y, S, C), h = new z(S, C);
    } else
      r.push("L", h.x, h.y);
    c = h, u += 1;
  }
  return i ? r.push("Z") : r.push("L", o.x, o.y), r.map((h) => typeof h == "string" ? h : +h.toFixed(3)).join(" ");
}
function uM(n, e = {}) {
  const t = [];
  return n && n.length && n.forEach((i) => {
    Array.isArray(i) ? t.push({ x: i[0], y: i[1] }) : t.push({ x: i.x, y: i.y });
  }), wte(t, e.round, e.initialMove == null || e.initialMove, e.close, e.exclude);
}
function Ug(n, e, t, i, s = 0, r = 0, o = 0, l, a) {
  if (t === 0 || i === 0)
    return [];
  l -= n, a -= e, t = Math.abs(t), i = Math.abs(i);
  const c = -l / 2, u = -a / 2, h = Math.cos(s * Math.PI / 180), d = Math.sin(s * Math.PI / 180), f = h * c + d * u, p = -1 * d * c + h * u, g = f * f, m = p * p, v = t * t, O = i * i, b = g / v + m / O;
  let w;
  if (b > 1)
    t = Math.sqrt(b) * t, i = Math.sqrt(b) * i, w = 0;
  else {
    let ee = 1;
    r === o && (ee = -1), w = ee * Math.sqrt((v * O - v * m - O * g) / (v * m + O * g));
  }
  const x = w * t * p / i, S = -1 * w * i * f / t, C = h * x - d * S + l / 2, k = d * x + h * S + a / 2;
  let E = Math.atan2((p - S) / i, (f - x) / t) - Math.atan2(0, 1), M = E >= 0 ? E : 2 * Math.PI + E;
  E = Math.atan2((-p - S) / i, (-f - x) / t) - Math.atan2((p - S) / i, (f - x) / t);
  let _ = E >= 0 ? E : 2 * Math.PI + E;
  o === 0 && _ > 0 ? _ -= 2 * Math.PI : o !== 0 && _ < 0 && (_ += 2 * Math.PI);
  const T = _ * 2 / Math.PI, B = Math.ceil(T < 0 ? -1 * T : T), I = _ / B, P = 8 / 3 * Math.sin(I / 4) * Math.sin(I / 4) / Math.sin(I / 2), A = h * t, N = h * i, q = d * t, j = d * i;
  let H = Math.cos(M), oe = Math.sin(M), te = -P * (A * oe + j * H), W = -P * (q * oe - N * H), U = 0, le = 0;
  const he = [];
  for (let ee = 0; ee < B; ee += 1) {
    M += I, H = Math.cos(M), oe = Math.sin(M), U = A * H - j * oe + C, le = q * H + N * oe + k;
    const pe = -P * (A * oe + j * H), be = -P * (q * oe - N * H), fe = ee * 6;
    he[fe] = Number(te + n), he[fe + 1] = Number(W + e), he[fe + 2] = Number(U - pe + n), he[fe + 3] = Number(le - be + e), he[fe + 4] = Number(U + n), he[fe + 5] = Number(le + e), te = U + pe, W = le + be;
  }
  return he.map((ee) => +ee.toFixed(2));
}
function xte(n, e, t, i, s = 0, r = 0, o = 0, l, a) {
  const c = [], u = Ug(n, e, t, i, s, r, o, l, a);
  if (u != null)
    for (let h = 0, d = u.length; h < d; h += 6)
      c.push("C", u[h], u[h + 1], u[h + 2], u[h + 3], u[h + 4], u[h + 5]);
  return c.join(" ");
}
class Pn extends Yl {
  get start() {
    return this.points[0] || null;
  }
  get end() {
    return this.points[this.points.length - 1] || null;
  }
  constructor(e) {
    if (super(), e != null) {
      if (typeof e == "string")
        return Pn.parse(e);
      this.points = e.map((t) => z.create(t));
    } else
      this.points = [];
  }
  scale(e, t, i = new z()) {
    return this.points.forEach((s) => s.scale(e, t, i)), this;
  }
  rotate(e, t) {
    return this.points.forEach((i) => i.rotate(e, t)), this;
  }
  translate(e, t) {
    const i = z.create(e, t);
    return this.points.forEach((s) => s.translate(i.x, i.y)), this;
  }
  round(e = 0) {
    return this.points.forEach((t) => t.round(e)), this;
  }
  bbox() {
    if (this.points.length === 0)
      return new ye();
    let e = 1 / 0, t = -1 / 0, i = 1 / 0, s = -1 / 0;
    const r = this.points;
    for (let o = 0, l = r.length; o < l; o += 1) {
      const a = r[o], c = a.x, u = a.y;
      c < e && (e = c), c > t && (t = c), u < i && (i = u), u > s && (s = u);
    }
    return new ye(e, i, t - e, s - i);
  }
  closestPoint(e) {
    const t = this.closestPointLength(e);
    return this.pointAtLength(t);
  }
  closestPointLength(e) {
    const t = this.points, i = t.length;
    if (i === 0 || i === 1)
      return 0;
    let s = 0, r = 0, o = 1 / 0;
    for (let l = 0, a = i - 1; l < a; l += 1) {
      const c = new Ie(t[l], t[l + 1]), u = c.length(), h = c.closestPointNormalizedLength(e), f = c.pointAt(h).squaredDistance(e);
      f < o && (o = f, r = s + h * u), s += u;
    }
    return r;
  }
  closestPointNormalizedLength(e) {
    const t = this.length();
    return t === 0 ? 0 : this.closestPointLength(e) / t;
  }
  closestPointTangent(e) {
    const t = this.closestPointLength(e);
    return this.tangentAtLength(t);
  }
  containsPoint(e) {
    if (this.points.length === 0)
      return !1;
    const t = z.clone(e), i = t.x, s = t.y, r = this.points, o = r.length;
    let l = o - 1, a = 0;
    for (let c = 0; c < o; c += 1) {
      const u = r[l], h = r[c];
      if (t.equals(u))
        return !0;
      const d = new Ie(u, h);
      if (d.containsPoint(e))
        return !0;
      if (s <= u.y && s > h.y || s > u.y && s <= h.y) {
        const f = u.x - i > h.x - i ? u.x - i : h.x - i;
        if (f >= 0) {
          const p = new z(i + f, s), g = new Ie(e, p);
          d.intersectsWithLine(g) && (a += 1);
        }
      }
      l = c;
    }
    return a % 2 === 1;
  }
  intersectsWithLine(e) {
    const t = [];
    for (let i = 0, s = this.points.length - 1; i < s; i += 1) {
      const r = this.points[i], o = this.points[i + 1], l = e.intersectsWithLine(new Ie(r, o));
      l && t.push(l);
    }
    return t.length > 0 ? t : null;
  }
  isDifferentiable() {
    for (let e = 0, t = this.points.length - 1; e < t; e += 1) {
      const i = this.points[e], s = this.points[e + 1];
      if (new Ie(i, s).isDifferentiable())
        return !0;
    }
    return !1;
  }
  length() {
    let e = 0;
    for (let t = 0, i = this.points.length - 1; t < i; t += 1) {
      const s = this.points[t], r = this.points[t + 1];
      e += s.distance(r);
    }
    return e;
  }
  pointAt(e) {
    const t = this.points, i = t.length;
    if (i === 0)
      return null;
    if (i === 1 || e <= 0)
      return t[0].clone();
    if (e >= 1)
      return t[i - 1].clone();
    const r = this.length() * e;
    return this.pointAtLength(r);
  }
  pointAtLength(e) {
    const t = this.points, i = t.length;
    if (i === 0)
      return null;
    if (i === 1)
      return t[0].clone();
    let s = !0;
    e < 0 && (s = !1, e = -e);
    let r = 0;
    for (let l = 0, a = i - 1; l < a; l += 1) {
      const c = s ? l : a - 1 - l, u = t[c], h = t[c + 1], d = new Ie(u, h), f = u.distance(h);
      if (e <= r + f)
        return d.pointAtLength((s ? 1 : -1) * (e - r));
      r += f;
    }
    return (s ? t[i - 1] : t[0]).clone();
  }
  tangentAt(e) {
    const i = this.points.length;
    if (i === 0 || i === 1)
      return null;
    e < 0 && (e = 0), e > 1 && (e = 1);
    const r = this.length() * e;
    return this.tangentAtLength(r);
  }
  tangentAtLength(e) {
    const t = this.points, i = t.length;
    if (i === 0 || i === 1)
      return null;
    let s = !0;
    e < 0 && (s = !1, e = -e);
    let r, o = 0;
    for (let l = 0, a = i - 1; l < a; l += 1) {
      const c = s ? l : a - 1 - l, u = t[c], h = t[c + 1], d = new Ie(u, h), f = u.distance(h);
      if (d.isDifferentiable()) {
        if (e <= o + f)
          return d.tangentAtLength((s ? 1 : -1) * (e - o));
        r = d;
      }
      o += f;
    }
    if (r) {
      const l = s ? 1 : 0;
      return r.tangentAt(l);
    }
    return null;
  }
  simplify(e = {}) {
    const t = this.points;
    if (t.length < 3)
      return this;
    const i = e.threshold || 0;
    let s = 0;
    for (; t[s + 2]; ) {
      const r = s, o = s + 1, l = s + 2, a = t[r], c = t[o], u = t[l];
      new Ie(a, u).closestPoint(c).distance(c) <= i ? t.splice(o, 1) : s += 1;
    }
    return this;
  }
  toHull() {
    const e = this.points, t = e.length;
    if (t === 0)
      return new Pn();
    let i = e[0];
    for (let d = 1; d < t; d += 1)
      (e[d].y < i.y || e[d].y === i.y && e[d].x > i.x) && (i = e[d]);
    const s = [];
    for (let d = 0; d < t; d += 1) {
      let f = i.theta(e[d]);
      f === 0 && (f = 360), s.push([e[d], d, f]);
    }
    if (s.sort((d, f) => {
      let p = d[2] - f[2];
      return p === 0 && (p = f[1] - d[1]), p;
    }), s.length > 2) {
      const d = s[s.length - 1];
      s.unshift(d);
    }
    const r = {}, o = [], l = (d) => `${d[0].toString()}@${d[1]}`;
    for (; s.length !== 0; ) {
      const d = s.pop(), f = d[0];
      if (r[l(d)])
        continue;
      let p = !1;
      for (; !p; )
        if (o.length < 2)
          o.push(d), p = !0;
        else {
          const g = o.pop(), m = g[0], v = o.pop(), O = v[0], b = O.cross(m, f);
          if (b < 0)
            o.push(v), o.push(g), o.push(d), p = !0;
          else if (b === 0) {
            const x = m.angleBetween(O, f);
            Math.abs(x - 180) < 1e-10 || m.equals(f) || O.equals(m) ? (r[l(g)] = m, o.push(v)) : Math.abs((x + 1) % 360 - 1) < 1e-10 && (o.push(v), s.push(g));
          } else
            r[l(g)] = m, o.push(v);
        }
    }
    o.length > 2 && o.pop();
    let a, c = -1;
    for (let d = 0, f = o.length; d < f; d += 1) {
      const p = o[d][1];
      (a === void 0 || p < a) && (a = p, c = d);
    }
    let u = [];
    if (c > 0) {
      const d = o.slice(c), f = o.slice(0, c);
      u = d.concat(f);
    } else
      u = o;
    const h = [];
    for (let d = 0, f = u.length; d < f; d += 1)
      h.push(u[d][0]);
    return new Pn(h);
  }
  equals(e) {
    return e == null || e.points.length !== this.points.length ? !1 : e.points.every((t, i) => t.equals(this.points[i]));
  }
  clone() {
    return new Pn(this.points.map((e) => e.clone()));
  }
  toJSON() {
    return this.points.map((e) => e.toJSON());
  }
  serialize() {
    return this.points.map((e) => `${e.serialize()}`).join(" ");
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPolyline = e;
})(Pn || (Pn = {}));
(function(n) {
  function e(t) {
    const i = t.trim();
    if (i === "")
      return new n();
    const s = [], r = i.split(/\s*,\s*|\s+/);
    for (let o = 0, l = r.length; o < l; o += 2)
      s.push({ x: +r[o], y: +r[o + 1] });
    return new n(s);
  }
  n.parse = e;
})(Pn || (Pn = {}));
class yn extends Yl {
  constructor(e, t, i, s) {
    super(), this.PRECISION = 3, this.start = z.create(e), this.controlPoint1 = z.create(t), this.controlPoint2 = z.create(i), this.end = z.create(s);
  }
  bbox() {
    const e = this.start, t = this.controlPoint1, i = this.controlPoint2, s = this.end, r = e.x, o = e.y, l = t.x, a = t.y, c = i.x, u = i.y, h = s.x, d = s.y, f = [], p = [[], []];
    let g, m, v, O, b, w, x, S;
    for (let A = 0; A < 2; A += 1) {
      if (A === 0 ? (m = 6 * r - 12 * l + 6 * c, g = -3 * r + 9 * l - 9 * c + 3 * h, v = 3 * l - 3 * r) : (m = 6 * o - 12 * a + 6 * u, g = -3 * o + 9 * a - 9 * u + 3 * d, v = 3 * a - 3 * o), Math.abs(g) < 1e-12) {
        if (Math.abs(m) < 1e-12)
          continue;
        O = -v / m, O > 0 && O < 1 && f.push(O);
        continue;
      }
      x = m * m - 4 * v * g, S = Math.sqrt(x), !(x < 0) && (b = (-m + S) / (2 * g), b > 0 && b < 1 && f.push(b), w = (-m - S) / (2 * g), w > 0 && w < 1 && f.push(w));
    }
    let C, k, E, M = f.length;
    const _ = M;
    for (; M; )
      M -= 1, O = f[M], E = 1 - O, C = E * E * E * r + 3 * E * E * O * l + 3 * E * O * O * c + O * O * O * h, p[0][M] = C, k = E * E * E * o + 3 * E * E * O * a + 3 * E * O * O * u + O * O * O * d, p[1][M] = k;
    f[_] = 0, f[_ + 1] = 1, p[0][_] = r, p[1][_] = o, p[0][_ + 1] = h, p[1][_ + 1] = d, f.length = _ + 2, p[0].length = _ + 2, p[1].length = _ + 2;
    const T = Math.min.apply(null, p[0]), B = Math.min.apply(null, p[1]), I = Math.max.apply(null, p[0]), P = Math.max.apply(null, p[1]);
    return new ye(T, B, I - T, P - B);
  }
  closestPoint(e, t = {}) {
    return this.pointAtT(this.closestPointT(e, t));
  }
  closestPointLength(e, t = {}) {
    const i = this.getOptions(t);
    return this.lengthAtT(this.closestPointT(e, i), i);
  }
  closestPointNormalizedLength(e, t = {}) {
    const i = this.getOptions(t), s = this.closestPointLength(e, i);
    if (!s)
      return 0;
    const r = this.length(i);
    return r === 0 ? 0 : s / r;
  }
  closestPointT(e, t = {}) {
    const i = this.getPrecision(t), s = this.getDivisions(t), r = Math.pow(10, -i);
    let o = null, l = 0, a = 0, c = 0, u = 0, h = 0, d = null;
    const f = s.length;
    let p = f > 0 ? 1 / f : 0;
    for (s.forEach((g, m) => {
      const v = g.start.distance(e), O = g.end.distance(e), b = v + O;
      (d == null || b < d) && (o = g, l = m * p, a = (m + 1) * p, c = v, u = O, d = b, h = g.endpointDistance());
    }); ; ) {
      const g = c ? Math.abs(c - u) / c : 0, m = u != null ? Math.abs(c - u) / u : 0, v = g < r || m < r, O = c ? c < h * r : !0, b = u ? u < h * r : !0;
      if (v || (O || b))
        return c <= u ? l : a;
      const x = o.divide(0.5);
      p /= 2;
      const S = x[0].start.distance(e), C = x[0].end.distance(e), k = S + C, E = x[1].start.distance(e), M = x[1].end.distance(e), _ = E + M;
      k <= _ ? (o = x[0], a -= p, c = S, u = C) : (o = x[1], l += p, c = E, u = M);
    }
  }
  closestPointTangent(e, t = {}) {
    return this.tangentAtT(this.closestPointT(e, t));
  }
  containsPoint(e, t = {}) {
    return this.toPolyline(t).containsPoint(e);
  }
  divideAt(e, t = {}) {
    if (e <= 0)
      return this.divideAtT(0);
    if (e >= 1)
      return this.divideAtT(1);
    const i = this.tAt(e, t);
    return this.divideAtT(i);
  }
  divideAtLength(e, t = {}) {
    const i = this.tAtLength(e, t);
    return this.divideAtT(i);
  }
  divide(e) {
    return this.divideAtT(e);
  }
  divideAtT(e) {
    const t = this.start, i = this.controlPoint1, s = this.controlPoint2, r = this.end;
    if (e <= 0)
      return [
        new yn(t, t, t, t),
        new yn(t, i, s, r)
      ];
    if (e >= 1)
      return [
        new yn(t, i, s, r),
        new yn(r, r, r, r)
      ];
    const o = this.getSkeletonPoints(e), l = o.startControlPoint1, a = o.startControlPoint2, c = o.divider, u = o.dividerControlPoint1, h = o.dividerControlPoint2;
    return [
      new yn(t, l, a, c),
      new yn(c, u, h, r)
    ];
  }
  endpointDistance() {
    return this.start.distance(this.end);
  }
  getSkeletonPoints(e) {
    const t = this.start, i = this.controlPoint1, s = this.controlPoint2, r = this.end;
    if (e <= 0)
      return {
        startControlPoint1: t.clone(),
        startControlPoint2: t.clone(),
        divider: t.clone(),
        dividerControlPoint1: i.clone(),
        dividerControlPoint2: s.clone()
      };
    if (e >= 1)
      return {
        startControlPoint1: i.clone(),
        startControlPoint2: s.clone(),
        divider: r.clone(),
        dividerControlPoint1: r.clone(),
        dividerControlPoint2: r.clone()
      };
    const o = new Ie(t, i).pointAt(e), l = new Ie(i, s).pointAt(e), a = new Ie(s, r).pointAt(e), c = new Ie(o, l).pointAt(e), u = new Ie(l, a).pointAt(e), h = new Ie(c, u).pointAt(e);
    return {
      startControlPoint1: o,
      startControlPoint2: c,
      divider: h,
      dividerControlPoint1: u,
      dividerControlPoint2: a
    };
  }
  getSubdivisions(e = {}) {
    const t = this.getPrecision(e);
    let i = [
      new yn(this.start, this.controlPoint1, this.controlPoint2, this.end)
    ];
    if (t === 0)
      return i;
    let s = this.endpointDistance();
    const r = Math.pow(10, -t);
    let o = 0;
    for (; ; ) {
      o += 1;
      const l = [];
      i.forEach((u) => {
        const h = u.divide(0.5);
        l.push(h[0], h[1]);
      });
      const a = l.reduce((u, h) => u + h.endpointDistance(), 0), c = a !== 0 ? (a - s) / a : 0;
      if (o > 1 && c < r)
        return l;
      i = l, s = a;
    }
  }
  length(e = {}) {
    return this.getDivisions(e).reduce((i, s) => i + s.endpointDistance(), 0);
  }
  lengthAtT(e, t = {}) {
    if (e <= 0)
      return 0;
    const i = t.precision === void 0 ? this.PRECISION : t.precision;
    return this.divide(e)[0].length({ precision: i });
  }
  pointAt(e, t = {}) {
    if (e <= 0)
      return this.start.clone();
    if (e >= 1)
      return this.end.clone();
    const i = this.tAt(e, t);
    return this.pointAtT(i);
  }
  pointAtLength(e, t = {}) {
    const i = this.tAtLength(e, t);
    return this.pointAtT(i);
  }
  pointAtT(e) {
    return e <= 0 ? this.start.clone() : e >= 1 ? this.end.clone() : this.getSkeletonPoints(e).divider;
  }
  isDifferentiable() {
    const e = this.start, t = this.controlPoint1, i = this.controlPoint2, s = this.end;
    return !(e.equals(t) && t.equals(i) && i.equals(s));
  }
  tangentAt(e, t = {}) {
    if (!this.isDifferentiable())
      return null;
    e < 0 ? e = 0 : e > 1 && (e = 1);
    const i = this.tAt(e, t);
    return this.tangentAtT(i);
  }
  tangentAtLength(e, t = {}) {
    if (!this.isDifferentiable())
      return null;
    const i = this.tAtLength(e, t);
    return this.tangentAtT(i);
  }
  tangentAtT(e) {
    if (!this.isDifferentiable())
      return null;
    e < 0 && (e = 0), e > 1 && (e = 1);
    const t = this.getSkeletonPoints(e), i = t.startControlPoint2, s = t.dividerControlPoint1, r = t.divider, o = new Ie(i, s);
    return o.translate(r.x - i.x, r.y - i.y), o;
  }
  getPrecision(e = {}) {
    return e.precision == null ? this.PRECISION : e.precision;
  }
  getDivisions(e = {}) {
    if (e.subdivisions != null)
      return e.subdivisions;
    const t = this.getPrecision(e);
    return this.getSubdivisions({ precision: t });
  }
  getOptions(e = {}) {
    const t = this.getPrecision(e), i = this.getDivisions(e);
    return { precision: t, subdivisions: i };
  }
  tAt(e, t = {}) {
    if (e <= 0)
      return 0;
    if (e >= 1)
      return 1;
    const i = this.getOptions(t), r = this.length(i) * e;
    return this.tAtLength(r, i);
  }
  tAtLength(e, t = {}) {
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const s = this.getPrecision(t), r = this.getDivisions(t), o = { precision: s, subdivisions: r };
    let l = null, a, c, u = 0, h = 0, d = 0;
    const f = r.length;
    let p = f > 0 ? 1 / f : 0;
    for (let v = 0; v < f; v += 1) {
      const O = i ? v : f - 1 - v, b = r[v], w = b.endpointDistance();
      if (e <= d + w) {
        l = b, a = O * p, c = (O + 1) * p, u = i ? e - d : w + d - e, h = i ? w + d - e : e - d;
        break;
      }
      d += w;
    }
    if (l == null)
      return i ? 1 : 0;
    const g = this.length(o), m = Math.pow(10, -s);
    for (; ; ) {
      let v;
      if (v = g !== 0 ? u / g : 0, v < m)
        return a;
      if (v = g !== 0 ? h / g : 0, v < m)
        return c;
      let O, b;
      const w = l.divide(0.5);
      p /= 2;
      const x = w[0].endpointDistance(), S = w[1].endpointDistance();
      u <= x ? (l = w[0], c -= p, O = u, b = x - O) : (l = w[1], a += p, O = u - x, b = S - O), u = O, h = b;
    }
  }
  toPoints(e = {}) {
    const t = this.getDivisions(e), i = [t[0].start.clone()];
    return t.forEach((s) => i.push(s.end.clone())), i;
  }
  toPolyline(e = {}) {
    return new Pn(this.toPoints(e));
  }
  scale(e, t, i) {
    return this.start.scale(e, t, i), this.controlPoint1.scale(e, t, i), this.controlPoint2.scale(e, t, i), this.end.scale(e, t, i), this;
  }
  rotate(e, t) {
    return this.start.rotate(e, t), this.controlPoint1.rotate(e, t), this.controlPoint2.rotate(e, t), this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.start.translate(e, t), this.controlPoint1.translate(e, t), this.controlPoint2.translate(e, t), this.end.translate(e, t)) : (this.start.translate(e), this.controlPoint1.translate(e), this.controlPoint2.translate(e), this.end.translate(e)), this;
  }
  equals(e) {
    return e != null && this.start.equals(e.start) && this.controlPoint1.equals(e.controlPoint1) && this.controlPoint2.equals(e.controlPoint2) && this.end.equals(e.end);
  }
  clone() {
    return new yn(this.start, this.controlPoint1, this.controlPoint2, this.end);
  }
  toJSON() {
    return {
      start: this.start.toJSON(),
      controlPoint1: this.controlPoint1.toJSON(),
      controlPoint2: this.controlPoint2.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    return [
      this.start.serialize(),
      this.controlPoint1.serialize(),
      this.controlPoint2.serialize(),
      this.end.serialize()
    ].join(" ");
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isCurve = e;
})(yn || (yn = {}));
(function(n) {
  function e(s) {
    const r = s.length, o = [], l = [];
    let a = 2;
    o[0] = s[0] / a;
    for (let c = 1; c < r; c += 1)
      l[c] = 1 / a, a = (c < r - 1 ? 4 : 3.5) - l[c], o[c] = (s[c] - o[c - 1]) / a;
    for (let c = 1; c < r; c += 1)
      o[r - c - 1] -= l[r - c] * o[r - c];
    return o;
  }
  function t(s) {
    const r = s.map((d) => z.clone(d)), o = [], l = [], a = r.length - 1;
    if (a === 1)
      return o[0] = new z((2 * r[0].x + r[1].x) / 3, (2 * r[0].y + r[1].y) / 3), l[0] = new z(2 * o[0].x - r[0].x, 2 * o[0].y - r[0].y), [o, l];
    const c = [];
    for (let d = 1; d < a - 1; d += 1)
      c[d] = 4 * r[d].x + 2 * r[d + 1].x;
    c[0] = r[0].x + 2 * r[1].x, c[a - 1] = (8 * r[a - 1].x + r[a].x) / 2;
    const u = e(c);
    for (let d = 1; d < a - 1; d += 1)
      c[d] = 4 * r[d].y + 2 * r[d + 1].y;
    c[0] = r[0].y + 2 * r[1].y, c[a - 1] = (8 * r[a - 1].y + r[a].y) / 2;
    const h = e(c);
    for (let d = 0; d < a; d += 1)
      o.push(new z(u[d], h[d])), d < a - 1 ? l.push(new z(2 * r[d + 1].x - u[d + 1], 2 * r[d + 1].y - h[d + 1])) : l.push(new z((r[a].x + u[a - 1]) / 2, (r[a].y + h[a - 1]) / 2));
    return [o, l];
  }
  function i(s) {
    if (s == null || Array.isArray(s) && s.length < 2)
      throw new Error("At least 2 points are required");
    const r = t(s), o = [];
    for (let l = 0, a = r[0].length; l < a; l += 1) {
      const c = new z(r[0][l].x, r[0][l].y), u = new z(r[1][l].x, r[1][l].y);
      o.push(new n(s[l], c, u, s[l + 1]));
    }
    return o;
  }
  n.throughPoints = i;
})(yn || (yn = {}));
class f0 extends Yl {
  constructor() {
    super(...arguments), this.isVisible = !0, this.isSegment = !0, this.isSubpathStart = !1;
  }
  get end() {
    return this.endPoint;
  }
  get start() {
    if (this.previousSegment == null)
      throw new Error("Missing previous segment. (This segment cannot be the first segment of a path, or segment has not yet been added to a path.)");
    return this.previousSegment.end;
  }
  closestPointT(e, t) {
    if (this.closestPointNormalizedLength)
      return this.closestPointNormalizedLength(e);
    throw new Error("Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.");
  }
  // eslint-disable-next-line
  lengthAtT(e, t) {
    if (e <= 0)
      return 0;
    const i = this.length();
    return e >= 1 ? i : i * e;
  }
  divideAtT(e) {
    if (this.divideAt)
      return this.divideAt(e);
    throw new Error("Neither `divideAtT` nor `divideAt` method is implemented.");
  }
  pointAtT(e) {
    if (this.pointAt)
      return this.pointAt(e);
    throw new Error("Neither `pointAtT` nor `pointAt` method is implemented.");
  }
  tangentAtT(e) {
    if (this.tangentAt)
      return this.tangentAt(e);
    throw new Error("Neither `tangentAtT` nor `tangentAt` method is implemented.");
  }
}
class _i extends f0 {
  constructor(e, t) {
    super(), Ie.isLine(e) ? this.endPoint = e.end.clone().round(2) : this.endPoint = z.create(e, t).round(2);
  }
  get type() {
    return "L";
  }
  get line() {
    return new Ie(this.start, this.end);
  }
  bbox() {
    return this.line.bbox();
  }
  closestPoint(e) {
    return this.line.closestPoint(e);
  }
  closestPointLength(e) {
    return this.line.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.line.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.line.closestPointTangent(e);
  }
  length() {
    return this.line.length();
  }
  divideAt(e) {
    const t = this.line.divideAt(e);
    return [new _i(t[0]), new _i(t[1])];
  }
  divideAtLength(e) {
    const t = this.line.divideAtLength(e);
    return [new _i(t[0]), new _i(t[1])];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.line.pointAt(e);
  }
  pointAtLength(e) {
    return this.line.pointAtLength(e);
  }
  tangentAt(e) {
    return this.line.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.line.tangentAtLength(e);
  }
  isDifferentiable() {
    return this.previousSegment == null ? !1 : !this.start.equals(this.end);
  }
  clone() {
    return new _i(this.end);
  }
  scale(e, t, i) {
    return this.end.scale(e, t, i), this;
  }
  rotate(e, t) {
    return this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.end.translate(e, t) : this.end.translate(e), this;
  }
  equals(e) {
    return this.type === e.type && this.start.equals(e.start) && this.end.equals(e.end);
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.end;
    return `${this.type} ${e.x} ${e.y}`;
  }
}
(function(n) {
  function e(...t) {
    const i = t.length, s = t[0];
    if (Ie.isLine(s))
      return new n(s);
    if (z.isPointLike(s))
      return i === 1 ? new n(s) : t.map((o) => new n(o));
    if (i === 2)
      return new n(+t[0], +t[1]);
    const r = [];
    for (let o = 0; o < i; o += 2) {
      const l = +t[o], a = +t[o + 1];
      r.push(new n(l, a));
    }
    return r;
  }
  n.create = e;
})(_i || (_i = {}));
class yu extends f0 {
  get end() {
    if (!this.subpathStartSegment)
      throw new Error("Missing subpath start segment. (This segment needs a subpath start segment (e.g. MoveTo), or segment has not yet been added to a path.)");
    return this.subpathStartSegment.end;
  }
  get type() {
    return "Z";
  }
  get line() {
    return new Ie(this.start, this.end);
  }
  bbox() {
    return this.line.bbox();
  }
  closestPoint(e) {
    return this.line.closestPoint(e);
  }
  closestPointLength(e) {
    return this.line.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.line.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.line.closestPointTangent(e);
  }
  length() {
    return this.line.length();
  }
  divideAt(e) {
    const t = this.line.divideAt(e);
    return [
      // do not actually cut into the segment, first divided part can stay as Z
      t[1].isDifferentiable() ? new _i(t[0]) : this.clone(),
      new _i(t[1])
    ];
  }
  divideAtLength(e) {
    const t = this.line.divideAtLength(e);
    return [
      t[1].isDifferentiable() ? new _i(t[0]) : this.clone(),
      new _i(t[1])
    ];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.line.pointAt(e);
  }
  pointAtLength(e) {
    return this.line.pointAtLength(e);
  }
  tangentAt(e) {
    return this.line.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.line.tangentAtLength(e);
  }
  isDifferentiable() {
    return !this.previousSegment || !this.subpathStartSegment ? !1 : !this.start.equals(this.end);
  }
  scale() {
    return this;
  }
  rotate() {
    return this;
  }
  translate() {
    return this;
  }
  equals(e) {
    return this.type === e.type && this.start.equals(e.start) && this.end.equals(e.end);
  }
  clone() {
    return new yu();
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    return this.type;
  }
}
(function(n) {
  function e() {
    return new n();
  }
  n.create = e;
})(yu || (yu = {}));
class Ou extends f0 {
  constructor(e, t) {
    super(), this.isVisible = !1, this.isSubpathStart = !0, Ie.isLine(e) || yn.isCurve(e) ? this.endPoint = e.end.clone().round(2) : this.endPoint = z.create(e, t).round(2);
  }
  get start() {
    throw new Error("Illegal access. Moveto segments should not need a start property.");
  }
  get type() {
    return "M";
  }
  bbox() {
    return null;
  }
  closestPoint() {
    return this.end.clone();
  }
  closestPointLength() {
    return 0;
  }
  closestPointNormalizedLength() {
    return 0;
  }
  closestPointT() {
    return 1;
  }
  closestPointTangent() {
    return null;
  }
  length() {
    return 0;
  }
  lengthAtT() {
    return 0;
  }
  divideAt() {
    return [this.clone(), this.clone()];
  }
  divideAtLength() {
    return [this.clone(), this.clone()];
  }
  getSubdivisions() {
    return [];
  }
  pointAt() {
    return this.end.clone();
  }
  pointAtLength() {
    return this.end.clone();
  }
  pointAtT() {
    return this.end.clone();
  }
  tangentAt() {
    return null;
  }
  tangentAtLength() {
    return null;
  }
  tangentAtT() {
    return null;
  }
  isDifferentiable() {
    return !1;
  }
  scale(e, t, i) {
    return this.end.scale(e, t, i), this;
  }
  rotate(e, t) {
    return this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.end.translate(e, t) : this.end.translate(e), this;
  }
  clone() {
    return new Ou(this.end);
  }
  equals(e) {
    return this.type === e.type && this.end.equals(e.end);
  }
  toJSON() {
    return {
      type: this.type,
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.end;
    return `${this.type} ${e.x} ${e.y}`;
  }
}
(function(n) {
  function e(...t) {
    const i = t.length, s = t[0];
    if (Ie.isLine(s))
      return new n(s);
    if (yn.isCurve(s))
      return new n(s);
    if (z.isPointLike(s)) {
      if (i === 1)
        return new n(s);
      const o = [];
      for (let l = 0; l < i; l += 1)
        l === 0 ? o.push(new n(t[l])) : o.push(new _i(t[l]));
      return o;
    }
    if (i === 2)
      return new n(+t[0], +t[1]);
    const r = [];
    for (let o = 0; o < i; o += 2) {
      const l = +t[o], a = +t[o + 1];
      o === 0 ? r.push(new n(l, a)) : r.push(new _i(l, a));
    }
    return r;
  }
  n.create = e;
})(Ou || (Ou = {}));
class Is extends f0 {
  constructor(e, t, i, s, r, o) {
    super(), yn.isCurve(e) ? (this.controlPoint1 = e.controlPoint1.clone().round(2), this.controlPoint2 = e.controlPoint2.clone().round(2), this.endPoint = e.end.clone().round(2)) : typeof e == "number" ? (this.controlPoint1 = new z(e, t).round(2), this.controlPoint2 = new z(i, s).round(2), this.endPoint = new z(r, o).round(2)) : (this.controlPoint1 = z.create(e).round(2), this.controlPoint2 = z.create(t).round(2), this.endPoint = z.create(i).round(2));
  }
  get type() {
    return "C";
  }
  get curve() {
    return new yn(this.start, this.controlPoint1, this.controlPoint2, this.end);
  }
  bbox() {
    return this.curve.bbox();
  }
  closestPoint(e) {
    return this.curve.closestPoint(e);
  }
  closestPointLength(e) {
    return this.curve.closestPointLength(e);
  }
  closestPointNormalizedLength(e) {
    return this.curve.closestPointNormalizedLength(e);
  }
  closestPointTangent(e) {
    return this.curve.closestPointTangent(e);
  }
  length() {
    return this.curve.length();
  }
  divideAt(e, t = {}) {
    const i = this.curve.divideAt(e, t);
    return [new Is(i[0]), new Is(i[1])];
  }
  divideAtLength(e, t = {}) {
    const i = this.curve.divideAtLength(e, t);
    return [new Is(i[0]), new Is(i[1])];
  }
  divideAtT(e) {
    const t = this.curve.divideAtT(e);
    return [new Is(t[0]), new Is(t[1])];
  }
  getSubdivisions() {
    return [];
  }
  pointAt(e) {
    return this.curve.pointAt(e);
  }
  pointAtLength(e) {
    return this.curve.pointAtLength(e);
  }
  tangentAt(e) {
    return this.curve.tangentAt(e);
  }
  tangentAtLength(e) {
    return this.curve.tangentAtLength(e);
  }
  isDifferentiable() {
    if (!this.previousSegment)
      return !1;
    const e = this.start, t = this.controlPoint1, i = this.controlPoint2, s = this.end;
    return !(e.equals(t) && t.equals(i) && i.equals(s));
  }
  scale(e, t, i) {
    return this.controlPoint1.scale(e, t, i), this.controlPoint2.scale(e, t, i), this.end.scale(e, t, i), this;
  }
  rotate(e, t) {
    return this.controlPoint1.rotate(e, t), this.controlPoint2.rotate(e, t), this.end.rotate(e, t), this;
  }
  translate(e, t) {
    return typeof e == "number" ? (this.controlPoint1.translate(e, t), this.controlPoint2.translate(e, t), this.end.translate(e, t)) : (this.controlPoint1.translate(e), this.controlPoint2.translate(e), this.end.translate(e)), this;
  }
  equals(e) {
    return this.start.equals(e.start) && this.end.equals(e.end) && this.controlPoint1.equals(e.controlPoint1) && this.controlPoint2.equals(e.controlPoint2);
  }
  clone() {
    return new Is(this.controlPoint1, this.controlPoint2, this.end);
  }
  toJSON() {
    return {
      type: this.type,
      start: this.start.toJSON(),
      controlPoint1: this.controlPoint1.toJSON(),
      controlPoint2: this.controlPoint2.toJSON(),
      end: this.end.toJSON()
    };
  }
  serialize() {
    const e = this.controlPoint1, t = this.controlPoint2, i = this.end;
    return [this.type, e.x, e.y, t.x, t.y, i.x, i.y].join(" ");
  }
}
(function(n) {
  function e(...t) {
    const i = t.length, s = t[0];
    if (yn.isCurve(s))
      return new n(s);
    if (z.isPointLike(s)) {
      if (i === 3)
        return new n(t[0], t[1], t[2]);
      const o = [];
      for (let l = 0; l < i; l += 3)
        o.push(new n(t[l], t[l + 1], t[l + 2]));
      return o;
    }
    if (i === 6)
      return new n(t[0], t[1], t[2], t[3], t[4], t[5]);
    const r = [];
    for (let o = 0; o < i; o += 6)
      r.push(new n(t[o], t[o + 1], t[o + 2], t[o + 3], t[o + 4], t[o + 5]));
    return r;
  }
  n.create = e;
})(Is || (Is = {}));
function rp(n, e, t) {
  return {
    x: n * Math.cos(t) - e * Math.sin(t),
    y: n * Math.sin(t) + e * Math.cos(t)
  };
}
function sk(n, e, t, i, s, r) {
  const o = 0.3333333333333333, l = 2 / 3;
  return [
    o * n + l * t,
    o * e + l * i,
    o * s + l * t,
    o * r + l * i,
    s,
    r
  ];
}
function hM(n, e, t, i, s, r, o, l, a, c) {
  const u = Math.PI * 120 / 180, h = Math.PI / 180 * (+s || 0);
  let d = [], f, p, g, m, v;
  if (c)
    p = c[0], g = c[1], m = c[2], v = c[3];
  else {
    f = rp(n, e, -h), n = f.x, e = f.y, f = rp(l, a, -h), l = f.x, a = f.y;
    const I = (n - l) / 2, P = (e - a) / 2;
    let A = I * I / (t * t) + P * P / (i * i);
    A > 1 && (A = Math.sqrt(A), t = A * t, i = A * i);
    const N = t * t, q = i * i, j = (r === o ? -1 : 1) * Math.sqrt(Math.abs((N * q - N * P * P - q * I * I) / (N * P * P + q * I * I)));
    m = j * t * P / i + (n + l) / 2, v = j * -i * I / t + (e + a) / 2, p = Math.asin((e - v) / i), g = Math.asin((a - v) / i), p = n < m ? Math.PI - p : p, g = l < m ? Math.PI - g : g, p < 0 && (p = Math.PI * 2 + p), g < 0 && (g = Math.PI * 2 + g), o && p > g && (p -= Math.PI * 2), !o && g > p && (g -= Math.PI * 2);
  }
  let O = g - p;
  if (Math.abs(O) > u) {
    const I = g, P = l, A = a;
    g = p + u * (o && g > p ? 1 : -1), l = m + t * Math.cos(g), a = v + i * Math.sin(g), d = hM(l, a, t, i, s, 0, o, P, A, [
      g,
      I,
      m,
      v
    ]);
  }
  O = g - p;
  const b = Math.cos(p), w = Math.sin(p), x = Math.cos(g), S = Math.sin(g), C = Math.tan(O / 4), k = 4 / 3 * (t * C), E = 4 / 3 * (i * C), M = [n, e], _ = [n + k * w, e - E * b], T = [l + k * S, a - E * x], B = [l, a];
  if (_[0] = 2 * M[0] - _[0], _[1] = 2 * M[1] - _[1], c)
    return [_, T, B].concat(d);
  {
    d = [_, T, B].concat(d).join().split(",");
    const I = [], P = d.length;
    for (let A = 0; A < P; A += 1)
      I[A] = A % 2 ? rp(+d[A - 1], +d[A], h).y : rp(+d[A], +d[A + 1], h).x;
    return I;
  }
}
function Ste(n) {
  if (!n)
    return null;
  const e = `	
\v\f\r   ᠎             　\u2028\u2029`, t = new RegExp(
    `([a-z])[${e},]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[${e}]*,?[${e}]*)+)`,
    // eslint-disable-line
    "ig"
  ), i = new RegExp(
    // eslint-disable-next-line
    `(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[${e}]*,?[${e}]*`,
    "ig"
  ), s = {
    a: 7,
    c: 6,
    h: 1,
    l: 2,
    m: 2,
    q: 4,
    s: 4,
    t: 2,
    v: 1,
    z: 0
  }, r = [];
  return n.replace(t, (o, l, a) => {
    const c = [];
    let u = l.toLowerCase();
    a.replace(i, (d, f) => (f && c.push(+f), d)), u === "m" && c.length > 2 && (r.push([l, ...c.splice(0, 2)]), u = "l", l = l === "m" ? "l" : "L");
    const h = s[u];
    for (; c.length >= h && (r.push([l, ...c.splice(0, h)]), !!h); )
      ;
    return o;
  }), r;
}
function Cte(n) {
  const e = Ste(n);
  if (!e || !e.length)
    return [["M", 0, 0]];
  let t = 0, i = 0, s = 0, r = 0;
  const o = [];
  for (let l = 0, a = e.length; l < a; l += 1) {
    const c = [];
    o.push(c);
    const u = e[l], h = u[0];
    if (h !== h.toUpperCase())
      switch (c[0] = h.toUpperCase(), c[0]) {
        case "A":
          c[1] = u[1], c[2] = u[2], c[3] = u[3], c[4] = u[4], c[5] = u[5], c[6] = +u[6] + t, c[7] = +u[7] + i;
          break;
        case "V":
          c[1] = +u[1] + i;
          break;
        case "H":
          c[1] = +u[1] + t;
          break;
        case "M":
          s = +u[1] + t, r = +u[2] + i;
          for (let d = 1, f = u.length; d < f; d += 1)
            c[d] = +u[d] + (d % 2 ? t : i);
          break;
        default:
          for (let d = 1, f = u.length; d < f; d += 1)
            c[d] = +u[d] + (d % 2 ? t : i);
          break;
      }
    else
      for (let d = 0, f = u.length; d < f; d += 1)
        c[d] = u[d];
    switch (c[0]) {
      case "Z":
        t = +s, i = +r;
        break;
      case "H":
        t = c[1];
        break;
      case "V":
        i = c[1];
        break;
      case "M":
        s = c[c.length - 2], r = c[c.length - 1], t = c[c.length - 2], i = c[c.length - 1];
        break;
      default:
        t = c[c.length - 2], i = c[c.length - 1];
        break;
    }
  }
  return o;
}
function kte(n) {
  const e = Cte(n), t = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null };
  function i(a, c, u) {
    let h, d;
    if (!a)
      return ["C", c.x, c.y, c.x, c.y, c.x, c.y];
    switch (a[0] in { T: 1, Q: 1 } || (c.qx = null, c.qy = null), a[0]) {
      case "M":
        c.X = a[1], c.Y = a[2];
        break;
      case "A":
        return parseFloat(a[1]) === 0 || parseFloat(a[2]) === 0 ? ["L", a[6], a[7]] : ["C"].concat(hM.apply(0, [c.x, c.y].concat(a.slice(1))));
      case "S":
        return u === "C" || u === "S" ? (h = c.x * 2 - c.bx, d = c.y * 2 - c.by) : (h = c.x, d = c.y), ["C", h, d].concat(a.slice(1));
      case "T":
        return u === "Q" || u === "T" ? (c.qx = c.x * 2 - c.qx, c.qy = c.y * 2 - c.qy) : (c.qx = c.x, c.qy = c.y), ["C"].concat(sk(c.x, c.y, c.qx, c.qy, a[1], a[2]));
      case "Q":
        return c.qx = a[1], c.qy = a[2], ["C"].concat(sk(c.x, c.y, a[1], a[2], a[3], a[4]));
      case "H":
        return ["L"].concat(a[1], c.y);
      case "V":
        return ["L"].concat(c.x, a[1]);
    }
    return a;
  }
  function s(a, c) {
    if (a[c].length > 7) {
      a[c].shift();
      const u = a[c];
      for (; u.length; )
        r[c] = "A", c += 1, a.splice(c, 0, ["C"].concat(u.splice(0, 6)));
      a.splice(c, 1), l = e.length;
    }
  }
  const r = [];
  let o = "", l = e.length;
  for (let a = 0; a < l; a += 1) {
    let c = "";
    e[a] && (c = e[a][0]), c !== "C" && (r[a] = c, a > 0 && (o = r[a - 1])), e[a] = i(e[a], t, o), r[a] !== "A" && c === "C" && (r[a] = "C"), s(e, a);
    const u = e[a], h = u.length;
    t.x = u[h - 2], t.y = u[h - 1], t.bx = parseFloat(u[h - 4]) || t.x, t.by = parseFloat(u[h - 3]) || t.y;
  }
  return (!e[0][0] || e[0][0] !== "M") && e.unshift(["M", 0, 0]), e;
}
function Pte(n) {
  return kte(n).map((e) => e.map((t) => typeof t == "string" ? t : At.round(t, 2))).join(",").split(",").join(" ");
}
class Be extends Yl {
  constructor(e) {
    if (super(), this.PRECISION = 3, this.segments = [], Array.isArray(e))
      if (Ie.isLine(e[0]) || yn.isCurve(e[0])) {
        let t = null;
        e.forEach((s, r) => {
          r === 0 && this.appendSegment(Be.createSegment("M", s.start)), t != null && !t.end.equals(s.start) && this.appendSegment(Be.createSegment("M", s.start)), Ie.isLine(s) ? this.appendSegment(Be.createSegment("L", s.end)) : yn.isCurve(s) && this.appendSegment(Be.createSegment("C", s.controlPoint1, s.controlPoint2, s.end)), t = s;
        });
      } else
        e.forEach((i) => {
          i.isSegment && this.appendSegment(i);
        });
    else
      e != null && (Ie.isLine(e) ? (this.appendSegment(Be.createSegment("M", e.start)), this.appendSegment(Be.createSegment("L", e.end))) : yn.isCurve(e) ? (this.appendSegment(Be.createSegment("M", e.start)), this.appendSegment(Be.createSegment("C", e.controlPoint1, e.controlPoint2, e.end))) : Pn.isPolyline(e) ? e.points && e.points.length && e.points.forEach((t, i) => {
        const s = i === 0 ? Be.createSegment("M", t) : Be.createSegment("L", t);
        this.appendSegment(s);
      }) : e.isSegment && this.appendSegment(e));
  }
  get start() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    for (let i = 0; i < t; i += 1) {
      const s = e[i];
      if (s.isVisible)
        return s.start;
    }
    return e[t - 1].end;
  }
  get end() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    for (let i = t - 1; i >= 0; i -= 1) {
      const s = e[i];
      if (s.isVisible)
        return s.end;
    }
    return e[t - 1].end;
  }
  moveTo(...e) {
    return this.appendSegment(Ou.create.call(null, ...e));
  }
  lineTo(...e) {
    return this.appendSegment(_i.create.call(null, ...e));
  }
  curveTo(...e) {
    return this.appendSegment(Is.create.call(null, ...e));
  }
  arcTo(e, t, i, s, r, o, l) {
    const a = this.end || new z(), c = typeof o == "number" ? Ug(a.x, a.y, e, t, i, s, r, o, l) : Ug(a.x, a.y, e, t, i, s, r, o.x, o.y);
    if (c != null)
      for (let u = 0, h = c.length; u < h; u += 6)
        this.curveTo(c[u], c[u + 1], c[u + 2], c[u + 3], c[u + 4], c[u + 5]);
    return this;
  }
  quadTo(e, t, i, s) {
    const r = this.end || new z(), o = ["M", r.x, r.y];
    if (typeof e == "number")
      o.push("Q", e, t, i, s);
    else {
      const a = t;
      o.push("Q", e.x, e.y, a.x, a.y);
    }
    const l = Be.parse(o.join(" "));
    return this.appendSegment(l.segments.slice(1)), this;
  }
  close() {
    return this.appendSegment(yu.create());
  }
  drawPoints(e, t = {}) {
    const i = uM(e, t), s = Be.parse(i);
    s && s.segments && this.appendSegment(s.segments);
  }
  bbox() {
    const e = this.segments, t = e.length;
    if (t === 0)
      return null;
    let i;
    for (let r = 0; r < t; r += 1) {
      const o = e[r];
      if (o.isVisible) {
        const l = o.bbox();
        l != null && (i = i ? i.union(l) : l);
      }
    }
    if (i != null)
      return i;
    const s = e[t - 1];
    return new ye(s.end.x, s.end.y, 0, 0);
  }
  appendSegment(e) {
    const t = this.segments.length;
    let i = t !== 0 ? this.segments[t - 1] : null, s;
    const r = null;
    if (Array.isArray(e))
      for (let o = 0, l = e.length; o < l; o += 1) {
        const a = e[o];
        s = this.prepareSegment(a, i, r), this.segments.push(s), i = s;
      }
    else
      e != null && e.isSegment && (s = this.prepareSegment(e, i, r), this.segments.push(s));
    return this;
  }
  insertSegment(e, t) {
    const i = this.segments.length;
    if (e < 0 && (e = i + e + 1), e > i || e < 0)
      throw new Error("Index out of range.");
    let s, r = null, o = null;
    if (i !== 0 && (e >= 1 ? (r = this.segments[e - 1], o = r.nextSegment) : (r = null, o = this.segments[0])), !Array.isArray(t))
      s = this.prepareSegment(t, r, o), this.segments.splice(e, 0, s);
    else
      for (let l = 0, a = t.length; l < a; l += 1) {
        const c = t[l];
        s = this.prepareSegment(c, r, o), this.segments.splice(e + l, 0, s), r = s;
      }
    return this;
  }
  removeSegment(e) {
    const t = this.fixIndex(e), i = this.segments.splice(t, 1)[0], s = i.previousSegment, r = i.nextSegment;
    return s && (s.nextSegment = r), r && (r.previousSegment = s), i.isSubpathStart && r && this.updateSubpathStartSegment(r), i;
  }
  replaceSegment(e, t) {
    const i = this.fixIndex(e);
    let s;
    const r = this.segments[i];
    let o = r.previousSegment;
    const l = r.nextSegment;
    let a = r.isSubpathStart;
    if (!Array.isArray(t))
      s = this.prepareSegment(t, o, l), this.segments.splice(i, 1, s), a && s.isSubpathStart && (a = !1);
    else {
      this.segments.splice(e, 1);
      for (let c = 0, u = t.length; c < u; c += 1) {
        const h = t[c];
        s = this.prepareSegment(h, o, l), this.segments.splice(e + c, 0, s), o = s, a && s.isSubpathStart && (a = !1);
      }
    }
    a && l && this.updateSubpathStartSegment(l);
  }
  getSegment(e) {
    const t = this.fixIndex(e);
    return this.segments[t];
  }
  fixIndex(e) {
    const t = this.segments.length;
    if (t === 0)
      throw new Error("Path has no segments.");
    let i = e;
    for (; i < 0; )
      i = t + i;
    if (i >= t || i < 0)
      throw new Error("Index out of range.");
    return i;
  }
  segmentAt(e, t = {}) {
    const i = this.segmentIndexAt(e, t);
    return i ? this.getSegment(i) : null;
  }
  segmentAtLength(e, t = {}) {
    const i = this.segmentIndexAtLength(e, t);
    return i ? this.getSegment(i) : null;
  }
  segmentIndexAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const i = At.clamp(e, 0, 1), s = this.getOptions(t), o = this.length(s) * i;
    return this.segmentIndexAtLength(o, s);
  }
  segmentIndexAtLength(e, t = {}) {
    const i = this.segments.length;
    if (i === 0)
      return null;
    let s = !0;
    e < 0 && (s = !1, e = -e);
    const r = this.getPrecision(t), o = this.getSubdivisions(t);
    let l = 0, a = null;
    for (let c = 0; c < i; c += 1) {
      const u = s ? c : i - 1 - c, h = this.segments[u], d = o[u], f = h.length({ precision: r, subdivisions: d });
      if (h.isVisible) {
        if (e <= l + f)
          return u;
        a = u;
      }
      l += f;
    }
    return a;
  }
  getSegmentSubdivisions(e = {}) {
    const t = this.getPrecision(e), i = [];
    for (let s = 0, r = this.segments.length; s < r; s += 1) {
      const l = this.segments[s].getSubdivisions({ precision: t });
      i.push(l);
    }
    return i;
  }
  updateSubpathStartSegment(e) {
    let t = e.previousSegment, i = e;
    for (; i && !i.isSubpathStart; )
      t != null ? i.subpathStartSegment = t.subpathStartSegment : i.subpathStartSegment = null, t = i, i = i.nextSegment;
  }
  prepareSegment(e, t, i) {
    e.previousSegment = t, e.nextSegment = i, t != null && (t.nextSegment = e), i != null && (i.previousSegment = e);
    let s = e;
    return e.isSubpathStart && (e.subpathStartSegment = e, s = i), s != null && this.updateSubpathStartSegment(s), e;
  }
  closestPoint(e, t = {}) {
    const i = this.closestPointT(e, t);
    return i ? this.pointAtT(i) : null;
  }
  closestPointLength(e, t = {}) {
    const i = this.getOptions(t), s = this.closestPointT(e, i);
    return s ? this.lengthAtT(s, i) : 0;
  }
  closestPointNormalizedLength(e, t = {}) {
    const i = this.getOptions(t), s = this.closestPointLength(e, i);
    if (s === 0)
      return 0;
    const r = this.length(i);
    return r === 0 ? 0 : s / r;
  }
  closestPointT(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const i = this.getPrecision(t), s = this.getSubdivisions(t);
    let r, o = 1 / 0;
    for (let l = 0, a = this.segments.length; l < a; l += 1) {
      const c = this.segments[l], u = s[l];
      if (c.isVisible) {
        const h = c.closestPointT(e, {
          precision: i,
          subdivisions: u
        }), d = c.pointAtT(h), f = At.squaredLength(d, e);
        f < o && (r = { segmentIndex: l, value: h }, o = f);
      }
    }
    return r || { segmentIndex: this.segments.length - 1, value: 1 };
  }
  closestPointTangent(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const i = this.getPrecision(t), s = this.getSubdivisions(t);
    let r, o = 1 / 0;
    for (let l = 0, a = this.segments.length; l < a; l += 1) {
      const c = this.segments[l], u = s[l];
      if (c.isDifferentiable()) {
        const h = c.closestPointT(e, {
          precision: i,
          subdivisions: u
        }), d = c.pointAtT(h), f = At.squaredLength(d, e);
        f < o && (r = c.tangentAtT(h), o = f);
      }
    }
    return r || null;
  }
  containsPoint(e, t = {}) {
    const i = this.toPolylines(t);
    if (!i)
      return !1;
    let s = 0;
    for (let r = 0, o = i.length; r < o; r += 1)
      i[r].containsPoint(e) && (s += 1);
    return s % 2 === 1;
  }
  pointAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    if (e <= 0)
      return this.start.clone();
    if (e >= 1)
      return this.end.clone();
    const i = this.getOptions(t), r = this.length(i) * e;
    return this.pointAtLength(r, i);
  }
  pointAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    if (e === 0)
      return this.start.clone();
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const s = this.getPrecision(t), r = this.getSubdivisions(t);
    let o, l = 0;
    for (let c = 0, u = this.segments.length; c < u; c += 1) {
      const h = i ? c : u - 1 - c, d = this.segments[h], f = r[h], p = d.length({
        precision: s,
        subdivisions: f
      });
      if (d.isVisible) {
        if (e <= l + p)
          return d.pointAtLength((i ? 1 : -1) * (e - l), {
            precision: s,
            subdivisions: f
          });
        o = d;
      }
      l += p;
    }
    return o ? i ? o.end : o.start : this.segments[this.segments.length - 1].end.clone();
  }
  pointAtT(e) {
    const t = this.segments, i = t.length;
    if (i === 0)
      return null;
    const s = e.segmentIndex;
    if (s < 0)
      return t[0].pointAtT(0);
    if (s >= i)
      return t[i - 1].pointAtT(1);
    const r = At.clamp(e.value, 0, 1);
    return t[s].pointAtT(r);
  }
  divideAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const i = At.clamp(e, 0, 1), s = this.getOptions(t), o = this.length(s) * i;
    return this.divideAtLength(o, s);
  }
  divideAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const s = this.getPrecision(t), r = this.getSubdivisions(t);
    let o = 0, l, a, c, u, h;
    for (let x = 0, S = this.segments.length; x < S; x += 1) {
      const C = i ? x : S - 1 - x, k = this.getSegment(C), E = r[C], M = { precision: s, subdivisions: E }, _ = k.length(M);
      if (k.isDifferentiable() && (c = k, u = C, e <= o + _)) {
        a = C, l = k.divideAtLength((i ? 1 : -1) * (e - o), M);
        break;
      }
      o += _;
    }
    if (!c)
      return null;
    l || (a = u, h = i ? 1 : 0, l = c.divideAtT(h));
    const d = this.clone(), f = a;
    d.replaceSegment(f, l);
    const p = f;
    let g = f + 1, m = f + 2;
    l[0].isDifferentiable() || (d.removeSegment(p), g -= 1, m -= 1);
    const v = d.getSegment(g).start;
    d.insertSegment(g, Be.createSegment("M", v)), m += 1, l[1].isDifferentiable() || (d.removeSegment(m - 1), m -= 1);
    const O = m - p - 1;
    for (let x = m, S = d.segments.length; x < S; x += 1) {
      const C = this.getSegment(x - O), k = d.getSegment(x);
      if (k.type === "Z" && !C.subpathStartSegment.end.equals(k.subpathStartSegment.end)) {
        const E = Be.createSegment("L", C.end);
        d.replaceSegment(x, E);
      }
    }
    const b = new Be(d.segments.slice(0, g)), w = new Be(d.segments.slice(g));
    return [b, w];
  }
  intersectsWithLine(e, t = {}) {
    const i = this.toPolylines(t);
    if (i == null)
      return null;
    let s = null;
    for (let r = 0, o = i.length; r < o; r += 1) {
      const l = i[r], a = e.intersect(l);
      a && (s == null && (s = []), Array.isArray(a) ? s.push(...a) : s.push(a));
    }
    return s;
  }
  isDifferentiable() {
    for (let e = 0, t = this.segments.length; e < t; e += 1)
      if (this.segments[e].isDifferentiable())
        return !0;
    return !1;
  }
  isValid() {
    const e = this.segments;
    return e.length === 0 || e[0].type === "M";
  }
  length(e = {}) {
    if (this.segments.length === 0)
      return 0;
    const t = this.getSubdivisions(e);
    let i = 0;
    for (let s = 0, r = this.segments.length; s < r; s += 1) {
      const o = this.segments[s], l = t[s];
      i += o.length({ subdivisions: l });
    }
    return i;
  }
  lengthAtT(e, t = {}) {
    const i = this.segments.length;
    if (i === 0)
      return 0;
    let s = e.segmentIndex;
    if (s < 0)
      return 0;
    let r = At.clamp(e.value, 0, 1);
    s >= i && (s = i - 1, r = 1);
    const o = this.getPrecision(t), l = this.getSubdivisions(t);
    let a = 0;
    for (let h = 0; h < s; h += 1) {
      const d = this.segments[h], f = l[h];
      a += d.length({ precision: o, subdivisions: f });
    }
    const c = this.segments[s], u = l[s];
    return a += c.lengthAtT(r, { precision: o, subdivisions: u }), a;
  }
  tangentAt(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    const i = At.clamp(e, 0, 1), s = this.getOptions(t), o = this.length(s) * i;
    return this.tangentAtLength(o, s);
  }
  tangentAtLength(e, t = {}) {
    if (this.segments.length === 0)
      return null;
    let i = !0;
    e < 0 && (i = !1, e = -e);
    const s = this.getPrecision(t), r = this.getSubdivisions(t);
    let o, l = 0;
    for (let a = 0, c = this.segments.length; a < c; a += 1) {
      const u = i ? a : c - 1 - a, h = this.segments[u], d = r[u], f = h.length({ precision: s, subdivisions: d });
      if (h.isDifferentiable()) {
        if (e <= l + f)
          return h.tangentAtLength((i ? 1 : -1) * (e - l), {
            precision: s,
            subdivisions: d
          });
        o = h;
      }
      l += f;
    }
    if (o) {
      const a = i ? 1 : 0;
      return o.tangentAtT(a);
    }
    return null;
  }
  tangentAtT(e) {
    const t = this.segments.length;
    if (t === 0)
      return null;
    const i = e.segmentIndex;
    if (i < 0)
      return this.segments[0].tangentAtT(0);
    if (i >= t)
      return this.segments[t - 1].tangentAtT(1);
    const s = At.clamp(e.value, 0, 1);
    return this.segments[i].tangentAtT(s);
  }
  getPrecision(e = {}) {
    return e.precision == null ? this.PRECISION : e.precision;
  }
  getSubdivisions(e = {}) {
    if (e.segmentSubdivisions == null) {
      const t = this.getPrecision(e);
      return this.getSegmentSubdivisions({ precision: t });
    }
    return e.segmentSubdivisions;
  }
  getOptions(e = {}) {
    const t = this.getPrecision(e), i = this.getSubdivisions(e);
    return { precision: t, segmentSubdivisions: i };
  }
  toPoints(e = {}) {
    const t = this.segments, i = t.length;
    if (i === 0)
      return null;
    const s = this.getSubdivisions(e), r = [];
    let o = [];
    for (let l = 0; l < i; l += 1) {
      const a = t[l];
      if (a.isVisible) {
        const c = s[l];
        c.length > 0 ? c.forEach((u) => o.push(u.start)) : o.push(a.start);
      } else
        o.length > 0 && (o.push(t[l - 1].end), r.push(o), o = []);
    }
    return o.length > 0 && (o.push(this.end), r.push(o)), r;
  }
  toPolylines(e = {}) {
    const t = this.toPoints(e);
    return t ? t.map((i) => new Pn(i)) : null;
  }
  scale(e, t, i) {
    return this.segments.forEach((s) => s.scale(e, t, i)), this;
  }
  rotate(e, t) {
    return this.segments.forEach((i) => i.rotate(e, t)), this;
  }
  translate(e, t) {
    return typeof e == "number" ? this.segments.forEach((i) => i.translate(e, t)) : this.segments.forEach((i) => i.translate(e)), this;
  }
  clone() {
    const e = new Be();
    return this.segments.forEach((t) => e.appendSegment(t.clone())), e;
  }
  equals(e) {
    if (e == null)
      return !1;
    const t = this.segments, i = e.segments, s = t.length;
    if (i.length !== s)
      return !1;
    for (let r = 0; r < s; r += 1) {
      const o = t[r], l = i[r];
      if (o.type !== l.type || !o.equals(l))
        return !1;
    }
    return !0;
  }
  toJSON() {
    return this.segments.map((e) => e.toJSON());
  }
  serialize() {
    if (!this.isValid())
      throw new Error("Invalid path segments.");
    return this.segments.map((e) => e.serialize()).join(" ");
  }
  toString() {
    return this.serialize();
  }
}
(function(n) {
  function e(t) {
    return t != null && t instanceof n;
  }
  n.isPath = e;
})(Be || (Be = {}));
(function(n) {
  function e(i) {
    if (!i)
      return new n();
    const s = new n(), r = /(?:[a-zA-Z] *)(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)? *,? *)|(?:-?\.\d+ *,? *))+|(?:[a-zA-Z] *)(?! |\d|-|\.)/g, o = n.normalize(i).match(r);
    if (o != null)
      for (let l = 0, a = o.length; l < a; l += 1) {
        const c = o[l], u = /(?:[a-zA-Z])|(?:(?:-?\d+(?:\.\d+)?(?:e[-+]?\d+)?))|(?:(?:-?\.\d+))/g, h = c.match(u);
        if (h != null) {
          const d = h[0], f = h.slice(1).map((g) => +g), p = t.call(null, d, ...f);
          s.appendSegment(p);
        }
      }
    return s;
  }
  n.parse = e;
  function t(i, ...s) {
    if (i === "M")
      return Ou.create.call(null, ...s);
    if (i === "L")
      return _i.create.call(null, ...s);
    if (i === "C")
      return Is.create.call(null, ...s);
    if (i === "z" || i === "Z")
      return yu.create();
    throw new Error(`Invalid path segment type "${i}"`);
  }
  n.createSegment = t;
})(Be || (Be = {}));
(function(n) {
  n.normalize = Pte, n.isValid = Ote, n.drawArc = xte, n.drawPoints = uM, n.arcToCurves = Ug;
})(Be || (Be = {}));
class An {
  constructor(e) {
    this.options = Object.assign({}, e), this.data = this.options.data || {}, this.register = this.register.bind(this), this.unregister = this.unregister.bind(this);
  }
  get names() {
    return Object.keys(this.data);
  }
  register(e, t, i = !1) {
    if (typeof e == "object") {
      Object.entries(e).forEach(([o, l]) => {
        this.register(o, l, t);
      });
      return;
    }
    this.exist(e) && !i && !_l.isApplyingHMR() && this.onDuplicated(e);
    const s = this.options.process, r = s ? Ze(s, this, e, t) : t;
    return this.data[e] = r, r;
  }
  unregister(e) {
    const t = e ? this.data[e] : null;
    return delete this.data[e], t;
  }
  get(e) {
    return e ? this.data[e] : null;
  }
  exist(e) {
    return e ? this.data[e] != null : !1;
  }
  onDuplicated(e) {
    try {
      throw this.options.onConflict && Ze(this.options.onConflict, this, e), new Error(`${Rg(this.options.type)} with name '${e}' already registered.`);
    } catch (t) {
      throw t;
    }
  }
  onNotFound(e, t) {
    throw new Error(this.getSpellingSuggestion(e, t));
  }
  getSpellingSuggestion(e, t) {
    const i = this.getSpellingSuggestionForName(e), s = t ? `${t} ${HQ(this.options.type)}` : this.options.type;
    return (
      // eslint-disable-next-line
      `${Rg(s)} with name '${e}' does not exist.${i ? ` Did you mean '${i}'?` : ""}`
    );
  }
  getSpellingSuggestionForName(e) {
    return Pee(e, Object.keys(this.data), (t) => t);
  }
}
(function(n) {
  function e(t) {
    return new n(t);
  }
  n.create = e;
})(An || (An = {}));
const Ete = {
  color: "#aaaaaa",
  thickness: 1,
  markup: "rect",
  update(n, e) {
    const t = e.thickness * e.sx, i = e.thickness * e.sy;
    St(n, {
      width: t,
      height: i,
      rx: t,
      ry: i,
      fill: e.color
    });
  }
}, Ate = {
  color: "#aaaaaa",
  thickness: 1,
  markup: "rect",
  update(n, e) {
    const t = e.sx <= 1 ? e.thickness * e.sx : e.thickness;
    St(n, {
      width: t,
      height: t,
      rx: t,
      ry: t,
      fill: e.color
    });
  }
}, $te = {
  color: "rgba(224,224,224,1)",
  thickness: 1,
  markup: "path",
  update(n, e) {
    let t;
    const i = e.width, s = e.height, r = e.thickness;
    i - r >= 0 && s - r >= 0 ? t = ["M", i, 0, "H0 M0 0 V0", s].join(" ") : t = "M 0 0 0 0", St(n, {
      d: t,
      stroke: e.color,
      "stroke-width": e.thickness
    });
  }
}, Tte = [
  {
    color: "rgba(224,224,224,1)",
    thickness: 1,
    markup: "path",
    update(n, e) {
      let t;
      const i = e.width, s = e.height, r = e.thickness;
      i - r >= 0 && s - r >= 0 ? t = ["M", i, 0, "H0 M0 0 V0", s].join(" ") : t = "M 0 0 0 0", St(n, {
        d: t,
        stroke: e.color,
        "stroke-width": e.thickness
      });
    }
  },
  {
    color: "rgba(224,224,224,0.2)",
    thickness: 3,
    factor: 4,
    markup: "path",
    update(n, e) {
      let t;
      const i = e.factor || 1, s = e.width * i, r = e.height * i, o = e.thickness;
      s - o >= 0 && r - o >= 0 ? t = ["M", s, 0, "H0 M0 0 V0", r].join(" ") : t = "M 0 0 0 0", e.width = s, e.height = r, St(n, {
        d: t,
        stroke: e.color,
        "stroke-width": e.thickness
      });
    }
  }
], _te = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  dot: Ete,
  doubleMesh: Tte,
  fixedDot: Ate,
  mesh: $te
}, Symbol.toStringTag, { value: "Module" }));
class Ol {
  constructor() {
    this.patterns = {}, this.root = Je.create(Wg(), {
      width: "100%",
      height: "100%"
    }, [$r("defs")]).node;
  }
  add(e, t) {
    const i = this.root.childNodes[0];
    i && i.appendChild(t), this.patterns[e] = t, Je.create("rect", {
      width: "100%",
      height: "100%",
      fill: `url(#${e})`
    }).appendTo(this.root);
  }
  get(e) {
    return this.patterns[e];
  }
  has(e) {
    return this.patterns[e] != null;
  }
}
(function(n) {
  n.presets = _te, n.registry = An.create({
    type: "grid"
  }), n.registry.register(n.presets, !0);
})(Ol || (Ol = {}));
const dM = function(n) {
  const e = document.createElement("canvas"), t = n.width, i = n.height;
  e.width = t * 2, e.height = i;
  const s = e.getContext("2d");
  return s.drawImage(n, 0, 0, t, i), s.translate(2 * t, 0), s.scale(-1, 1), s.drawImage(n, 0, 0, t, i), e;
}, fM = function(n) {
  const e = document.createElement("canvas"), t = n.width, i = n.height;
  e.width = t, e.height = i * 2;
  const s = e.getContext("2d");
  return s.drawImage(n, 0, 0, t, i), s.translate(0, 2 * i), s.scale(1, -1), s.drawImage(n, 0, 0, t, i), e;
}, pM = function(n) {
  const e = document.createElement("canvas"), t = n.width, i = n.height;
  e.width = 2 * t, e.height = 2 * i;
  const s = e.getContext("2d");
  return s.drawImage(n, 0, 0, t, i), s.setTransform(-1, 0, 0, -1, e.width, e.height), s.drawImage(n, 0, 0, t, i), s.setTransform(-1, 0, 0, 1, e.width, 0), s.drawImage(n, 0, 0, t, i), s.setTransform(1, 0, 0, -1, 0, e.height), s.drawImage(n, 0, 0, t, i), e;
}, Mte = function(n, e) {
  const t = n.width, i = n.height, s = document.createElement("canvas");
  s.width = t * 3, s.height = i * 3;
  const r = s.getContext("2d"), o = e.angle != null ? -e.angle : -20, l = Pt.toRad(o), a = s.width / 4, c = s.height / 4;
  for (let u = 0; u < 4; u += 1)
    for (let h = 0; h < 4; h += 1)
      (u + h) % 2 > 0 && (r.setTransform(1, 0, 0, 1, (2 * u - 1) * a, (2 * h - 1) * c), r.rotate(l), r.drawImage(n, -t / 2, -i / 2, t, i));
  return s;
}, Rte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  flipX: dM,
  flipXY: pM,
  flipY: fM,
  watermark: Mte
}, Symbol.toStringTag, { value: "Module" }));
var Dd;
(function(n) {
  n.presets = Object.assign({}, Rte), n.presets["flip-x"] = dM, n.presets["flip-y"] = fM, n.presets["flip-xy"] = pM, n.registry = An.create({
    type: "background pattern"
  }), n.registry.register(n.presets, !0);
})(Dd || (Dd = {}));
function mw(n, e) {
  return n ?? e;
}
function ri(n, e) {
  return n != null && Number.isFinite(n) ? n : e;
}
function Nte(n = {}) {
  const e = mw(n.color, "blue"), t = ri(n.width, 1), i = ri(n.margin, 2), s = ri(n.opacity, 1), r = i, o = i + t;
  return `
    <filter>
      <feFlood flood-color="${e}" flood-opacity="${s}" result="colored"/>
      <feMorphology in="SourceAlpha" result="morphedOuter" operator="dilate" radius="${o}" />
      <feMorphology in="SourceAlpha" result="morphedInner" operator="dilate" radius="${r}" />
      <feComposite result="morphedOuterColored" in="colored" in2="morphedOuter" operator="in"/>
      <feComposite operator="xor" in="morphedOuterColored" in2="morphedInner" result="outline"/>
      <feMerge>
        <feMergeNode in="outline"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  `.trim();
}
function Dte(n = {}) {
  const e = mw(n.color, "red"), t = ri(n.blur, 0), i = ri(n.width, 1), s = ri(n.opacity, 1);
  return `
      <filter>
        <feFlood flood-color="${e}" flood-opacity="${s}" result="colored"/>
        <feMorphology result="morphed" in="SourceGraphic" operator="dilate" radius="${i}"/>
        <feComposite result="composed" in="colored" in2="morphed" operator="in"/>
        <feGaussianBlur result="blured" in="composed" stdDeviation="${t}"/>
        <feBlend in="SourceGraphic" in2="blured" mode="normal"/>
      </filter>
    `.trim();
}
function Lte(n = {}) {
  const e = ri(n.x, 2);
  return `
    <filter>
      <feGaussianBlur stdDeviation="${n.y != null && Number.isFinite(n.y) ? [e, n.y] : e}"/>
    </filter>
  `.trim();
}
function Ite(n = {}) {
  const e = ri(n.dx, 0), t = ri(n.dy, 0), i = mw(n.color, "black"), s = ri(n.blur, 4), r = ri(n.opacity, 1);
  return "SVGFEDropShadowElement" in window ? `<filter>
         <feDropShadow stdDeviation="${s}" dx="${e}" dy="${t}" flood-color="${i}" flood-opacity="${r}" />
       </filter>`.trim() : `<filter>
         <feGaussianBlur in="SourceAlpha" stdDeviation="${s}" />
         <feOffset dx="${e}" dy="${t}" result="offsetblur" />
         <feFlood flood-color="${i}" />
         <feComposite in2="offsetblur" operator="in" />
         <feComponentTransfer>
           <feFuncA type="linear" slope="${r}" />
         </feComponentTransfer>
         <feMerge>
           <feMergeNode/>
           <feMergeNode in="SourceGraphic"/>
         </feMerge>
       </filter>`.trim();
}
function Bte(n = {}) {
  const e = ri(n.amount, 1), t = 0.2126 + 0.7874 * (1 - e), i = 0.7152 - 0.7152 * (1 - e), s = 0.0722 - 0.0722 * (1 - e), r = 0.2126 - 0.2126 * (1 - e), o = 0.7152 + 0.2848 * (1 - e), l = 0.0722 - 0.0722 * (1 - e), a = 0.2126 - 0.2126 * (1 - e), c = 0.0722 + 0.9278 * (1 - e);
  return `
    <filter>
      <feColorMatrix type="matrix" values="${t} ${i} ${s} 0 0 ${r} ${o} ${l} 0 0 ${a} ${i} ${c} 0 0 0 0 0 1 0"/>
    </filter>
  `.trim();
}
function Qte(n = {}) {
  const e = ri(n.amount, 1), t = 0.393 + 0.607 * (1 - e), i = 0.769 - 0.769 * (1 - e), s = 0.189 - 0.189 * (1 - e), r = 0.349 - 0.349 * (1 - e), o = 0.686 + 0.314 * (1 - e), l = 0.168 - 0.168 * (1 - e), a = 0.272 - 0.272 * (1 - e), c = 0.534 - 0.534 * (1 - e), u = 0.131 + 0.869 * (1 - e);
  return `
      <filter>
        <feColorMatrix type="matrix" values="${t} ${i} ${s} 0 0 ${r} ${o} ${l} 0 0 ${a} ${c} ${u} 0 0 0 0 0 1 0"/>
      </filter>
    `.trim();
}
function zte(n = {}) {
  return `
      <filter>
        <feColorMatrix type="saturate" values="${1 - ri(n.amount, 1)}"/>
      </filter>
    `.trim();
}
function jte(n = {}) {
  return `
      <filter>
        <feColorMatrix type="hueRotate" values="${ri(n.angle, 0)}"/>
      </filter>
    `.trim();
}
function Vte(n = {}) {
  const e = ri(n.amount, 1), t = 1 - e;
  return `
      <filter>
        <feComponentTransfer>
          <feFuncR type="table" tableValues="${e} ${t}"/>
          <feFuncG type="table" tableValues="${e} ${t}"/>
          <feFuncB type="table" tableValues="${e} ${t}"/>
        </feComponentTransfer>
      </filter>
    `.trim();
}
function Fte(n = {}) {
  const e = ri(n.amount, 1);
  return `
    <filter>
      <feComponentTransfer>
        <feFuncR type="linear" slope="${e}"/>
        <feFuncG type="linear" slope="${e}"/>
        <feFuncB type="linear" slope="${e}"/>
      </feComponentTransfer>
    </filter>
  `.trim();
}
function Zte(n = {}) {
  const e = ri(n.amount, 1), t = 0.5 - e / 2;
  return `
    <filter>
     <feComponentTransfer>
        <feFuncR type="linear" slope="${e}" intercept="${t}"/>
        <feFuncG type="linear" slope="${e}" intercept="${t}"/>
        <feFuncB type="linear" slope="${e}" intercept="${t}"/>
      </feComponentTransfer>
    </filter>
  `.trim();
}
const qte = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  blur: Lte,
  brightness: Fte,
  contrast: Zte,
  dropShadow: Ite,
  grayScale: Bte,
  highlight: Dte,
  hueRotate: jte,
  invert: Vte,
  outline: Nte,
  saturate: zte,
  sepia: Qte
}, Symbol.toStringTag, { value: "Module" }));
var wu;
(function(n) {
  n.presets = qte, n.registry = An.create({
    type: "filter"
  }), n.registry.register(n.presets, !0);
})(wu || (wu = {}));
const Wte = {
  xlinkHref: "xlink:href",
  xlinkShow: "xlink:show",
  xlinkRole: "xlink:role",
  xlinkType: "xlink:type",
  xlinkArcrole: "xlink:arcrole",
  xlinkTitle: "xlink:title",
  xlinkActuate: "xlink:actuate",
  xmlSpace: "xml:space",
  xmlBase: "xml:base",
  xmlLang: "xml:lang",
  preserveAspectRatio: "preserveAspectRatio",
  requiredExtension: "requiredExtension",
  requiredFeatures: "requiredFeatures",
  systemLanguage: "systemLanguage",
  externalResourcesRequired: "externalResourceRequired"
}, Hte = {
  // We do not set `ref` attribute directly on an element.
  // The attribute itself does not qualify for relative positioning.
}, gM = {
  position: p0("x", "width", "origin")
}, mM = {
  position: p0("y", "height", "origin")
}, Xte = {
  position: p0("x", "width", "corner")
}, Yte = {
  position: p0("y", "height", "corner")
}, vM = {
  set: Nl("width", "width")
}, bM = {
  set: Nl("height", "height")
}, Ute = {
  set: Nl("rx", "width")
}, Gte = {
  set: Nl("ry", "height")
}, yM = {
  set: ((n) => {
    const e = Nl(n, "width"), t = Nl(n, "height");
    return function(i, s) {
      const r = s.refBBox, o = r.height > r.width ? e : t;
      return Ze(o, this, i, s);
    };
  })("r")
}, Kte = {
  set(n, { refBBox: e }) {
    let t = parseFloat(n);
    const i = zo(n);
    i && (t /= 100);
    const s = Math.sqrt(e.height * e.height + e.width * e.width);
    let r;
    return Number.isFinite(t) && (i || t >= 0 && t <= 1 ? r = t * s : r = Math.max(t + s, 0)), { r };
  }
}, Jte = {
  set: Nl("cx", "width")
}, ene = {
  set: Nl("cy", "height")
}, OM = {
  set: SM({ resetOffset: !0 })
}, tne = {
  set: SM({ resetOffset: !1 })
}, wM = {
  set: CM({ resetOffset: !0 })
}, nne = {
  set: CM({ resetOffset: !1 })
}, ine = yM, sne = OM, rne = wM, one = gM, lne = mM, ane = vM, cne = bM;
function p0(n, e, t) {
  return (i, { refBBox: s }) => {
    if (i == null)
      return null;
    let r = parseFloat(i);
    const o = zo(i);
    o && (r /= 100);
    let l;
    if (Number.isFinite(r)) {
      const c = s[t];
      o || r > 0 && r < 1 ? l = c[n] + s[e] * r : l = c[n] + r;
    }
    const a = new z();
    return a[n] = l || 0, a;
  };
}
function Nl(n, e) {
  return function(t, { refBBox: i }) {
    let s = parseFloat(t);
    const r = zo(t);
    r && (s /= 100);
    const o = {};
    if (Number.isFinite(s)) {
      const l = r || s >= 0 && s <= 1 ? s * i[e] : Math.max(s + i[e], 0);
      o[n] = l;
    }
    return o;
  };
}
function xM(n, e) {
  const t = "x6-shape", i = e && e.resetOffset;
  return function(s, { elem: r, refBBox: o }) {
    let l = Va(r, t);
    if (!l || l.value !== s) {
      const g = n(s);
      l = {
        value: s,
        shape: g,
        shapeBBox: g.bbox()
      }, Va(r, t, l);
    }
    const a = l.shape.clone(), c = l.shapeBBox.clone(), u = c.getOrigin(), h = o.getOrigin();
    c.x = h.x, c.y = h.y;
    const d = o.getMaxScaleToFit(c, h), f = c.width === 0 || o.width === 0 ? 1 : d.sx, p = c.height === 0 || o.height === 0 ? 1 : d.sy;
    return a.scale(f, p, u), i && a.translate(-u.x, -u.y), a;
  };
}
function SM(n) {
  function e(i) {
    return Be.parse(i);
  }
  const t = xM(e, n);
  return (i, s) => ({
    d: t(i, s).serialize()
  });
}
function CM(n) {
  const e = xM((t) => new Pn(t), n);
  return (t, i) => ({
    points: e(t, i).serialize()
  });
}
const une = {
  qualify: kr,
  set(n, { view: e }) {
    return `url(#${e.graph.defineGradient(n)})`;
  }
}, hne = {
  qualify: kr,
  set(n, { view: e }) {
    const t = e.cell, i = Object.assign({}, n);
    if (t.isEdge() && i.type === "linearGradient") {
      const s = e, r = s.sourcePoint, o = s.targetPoint;
      i.id = `gradient-${i.type}-${t.id}`, i.attrs = Object.assign(Object.assign({}, i.attrs), { x1: r.x, y1: r.y, x2: o.x, y2: o.y, gradientUnits: "userSpaceOnUse" }), e.graph.defs.remove(i.id);
    }
    return `url(#${e.graph.defineGradient(i)})`;
  }
}, kM = {
  qualify(n, { attrs: e }) {
    return e.textWrap == null || !kr(e.textWrap);
  },
  set(n, { view: e, elem: t, attrs: i }) {
    const s = "x6-text", r = Va(t, s), o = (u) => {
      try {
        return JSON.parse(u);
      } catch {
        return u;
      }
    }, l = {
      x: i.x,
      eol: i.eol,
      annotations: o(i.annotations),
      textPath: o(i["text-path"] || i.textPath),
      textVerticalAnchor: i["text-vertical-anchor"] || i.textVerticalAnchor,
      displayEmpty: (i["display-empty"] || i.displayEmpty) === "true",
      lineHeight: i["line-height"] || i.lineHeight
    }, a = i["font-size"] || i.fontSize, c = JSON.stringify([n, l]);
    if (a && t.setAttribute("font-size", a), r == null || r !== c) {
      const u = l.textPath;
      if (u != null && typeof u == "object") {
        const h = u.selector;
        if (typeof h == "string") {
          const d = e.find(h)[0];
          d instanceof SVGPathElement && (uw(d), l.textPath = Object.assign({ "xlink:href": `#${d.id}` }, u));
        }
      }
      nM(t, `${n}`, l), Va(t, s, c);
    }
  }
}, dne = {
  qualify: kr,
  set(n, { view: e, elem: t, attrs: i, refBBox: s }) {
    const r = n, o = r.width || 0;
    zo(o) ? s.width *= parseFloat(o) / 100 : o <= 0 ? s.width += o : s.width = o;
    const l = r.height || 0;
    zo(l) ? s.height *= parseFloat(l) / 100 : l <= 0 ? s.height += l : s.height = l;
    let a, c = r.text;
    c == null && (c = i.text || (t == null ? void 0 : t.textContent)), c != null ? a = iM(`${c}`, s, {
      "font-weight": i["font-weight"] || i.fontWeight,
      "font-size": i["font-size"] || i.fontSize,
      "font-family": i["font-family"] || i.fontFamily,
      lineHeight: i.lineHeight
    }, {
      // svgDocument: view.graph.view.svg,
      ellipsis: r.ellipsis
      // hyphen: info.hyphen as string,
      // breakWord: info.breakWord as boolean,
    }) : a = "", Ze(kM.set, this, a, {
      view: e,
      elem: t,
      attrs: i,
      refBBox: s,
      cell: e.cell
    });
  }
}, lh = (n, { attrs: e }) => e.text !== void 0, fne = {
  qualify: lh
}, pne = {
  qualify: lh
}, gne = {
  qualify: lh
}, mne = {
  qualify: lh
}, vne = {
  qualify: lh
}, bne = {
  qualify: lh
}, yne = {
  qualify(n, { elem: e }) {
    return e instanceof SVGElement;
  },
  set(n, { elem: e }) {
    const t = "x6-title", i = `${n}`, s = Va(e, t);
    if (s == null || s !== i) {
      Va(e, t, i);
      const r = e.firstChild;
      if (r && r.tagName.toUpperCase() === "TITLE") {
        const o = r;
        o.textContent = i;
      } else {
        const o = document.createElementNS(e.namespaceURI, "title");
        o.textContent = i, e.insertBefore(o, r);
      }
    }
  }
}, One = {
  offset: PM("x", "width", "right")
}, wne = {
  offset: PM("y", "height", "bottom")
}, xne = {
  offset(n, { refBBox: e }) {
    return n ? { x: -e.x, y: -e.y } : { x: 0, y: 0 };
  }
};
function PM(n, e, t) {
  return (i, { refBBox: s }) => {
    const r = new z();
    let o;
    return i === "middle" ? o = s[e] / 2 : i === t ? o = s[e] : typeof i == "number" && Number.isFinite(i) ? o = i > -1 && i < 1 ? -s[e] * i : -i : zo(i) ? o = s[e] * parseFloat(i) / 100 : o = 0, r[n] = -(s[n] + o), r;
  };
}
const Sne = {
  qualify: kr,
  set(n, { elem: e }) {
    Zn(e, n);
  }
}, Cne = {
  set(n, { elem: e }) {
    e.innerHTML = `${n}`;
  }
}, kne = {
  qualify: kr,
  set(n, { view: e }) {
    return `url(#${e.graph.defineFilter(n)})`;
  }
}, Pne = {
  set(n) {
    return n != null && typeof n == "object" && n.id ? n.id : n;
  }
};
function Ul(n, e, t) {
  let i, s;
  typeof e == "object" ? (i = e.x, s = e.y) : (i = e, s = t);
  const r = Be.parse(n), o = r.bbox();
  if (o) {
    let l = -o.height / 2 - o.y, a = -o.width / 2 - o.x;
    typeof i == "number" && (a -= i), typeof s == "number" && (l -= s), r.translate(a, l);
  }
  return r.serialize();
}
var EM = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Ene = (n) => {
  var { size: e, width: t, height: i, offset: s, open: r } = n, o = EM(n, ["size", "width", "height", "offset", "open"]);
  return AM({ size: e, width: t, height: i, offset: s }, r === !0, !0, void 0, o);
}, Ane = (n) => {
  var { size: e, width: t, height: i, offset: s, factor: r } = n, o = EM(n, ["size", "width", "height", "offset", "factor"]);
  return AM({ size: e, width: t, height: i, offset: s }, !1, !1, r, o);
};
function AM(n, e, t, i = 3 / 4, s = {}) {
  const r = n.size || 10, o = n.width || r, l = n.height || r, a = new Be(), c = {};
  if (e)
    a.moveTo(o, 0).lineTo(0, l / 2).lineTo(o, l), c.fill = "none";
  else {
    if (a.moveTo(0, l / 2), a.lineTo(o, 0), !t) {
      const u = is(i, 0, 1);
      a.lineTo(o * u, l / 2);
    }
    a.lineTo(o, l), a.close();
  }
  return Object.assign(Object.assign(Object.assign({}, c), s), { tagName: "path", d: Ul(a.serialize(), {
    x: n.offset != null ? n.offset : -o / 2
  }) });
}
var $ne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Tne = (n) => {
  var { size: e, width: t, height: i, offset: s } = n, r = $ne(n, ["size", "width", "height", "offset"]);
  const o = e || 10, l = t || o, a = i || o, c = new Be();
  return c.moveTo(0, a / 2).lineTo(l / 2, 0).lineTo(l, a / 2).lineTo(l / 2, a).close(), Object.assign(Object.assign({}, r), { tagName: "path", d: Ul(c.serialize(), s ?? -l / 2) });
};
var _ne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Mne = (n) => {
  var { d: e, offsetX: t, offsetY: i } = n, s = _ne(n, ["d", "offsetX", "offsetY"]);
  return Object.assign(Object.assign({}, s), { tagName: "path", d: Ul(e, t, i) });
};
var Rne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Nne = (n) => {
  var { size: e, width: t, height: i, offset: s } = n, r = Rne(n, ["size", "width", "height", "offset"]);
  const o = e || 10, l = t || o, a = i || o, c = new Be();
  return c.moveTo(0, 0).lineTo(l, a).moveTo(0, a).lineTo(l, 0), Object.assign(Object.assign({}, r), { tagName: "path", fill: "none", d: Ul(c.serialize(), s || -l / 2) });
};
var Dne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Lne = (n) => {
  var { width: e, height: t, offset: i, open: s, flip: r } = n, o = Dne(n, ["width", "height", "offset", "open", "flip"]);
  let l = t || 6;
  const a = e || 10, c = s === !0, u = r === !0, h = Object.assign(Object.assign({}, o), { tagName: "path" });
  u && (l = -l);
  const d = new Be();
  return d.moveTo(0, l).lineTo(a, 0), c ? h.fill = "none" : (d.lineTo(a, l), d.close()), h.d = Ul(d.serialize(), {
    x: i || -a / 2,
    y: l / 2
  }), h;
};
var $M = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const TM = (n) => {
  var { r: e } = n, t = $M(n, ["r"]);
  const i = e || 5;
  return Object.assign(Object.assign({ cx: i }, t), { tagName: "circle", r: i });
}, Ine = (n) => {
  var { r: e } = n, t = $M(n, ["r"]);
  const i = e || 5, s = new Be();
  return s.moveTo(i, 0).lineTo(i, i * 2), s.moveTo(0, i).lineTo(i * 2, i), {
    children: [
      Object.assign(Object.assign({}, TM({ r: i })), { fill: "none" }),
      Object.assign(Object.assign({}, t), { tagName: "path", d: Ul(s.serialize(), -i) })
    ]
  };
};
var Bne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const Qne = (n) => {
  var { rx: e, ry: t } = n, i = Bne(n, ["rx", "ry"]);
  const s = e || 5, r = t || 5;
  return Object.assign(Object.assign({ cx: s }, i), { tagName: "ellipse", rx: s, ry: r });
}, zne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  async: Lne,
  block: Ene,
  circle: TM,
  circlePlus: Ine,
  classic: Ane,
  cross: Nne,
  diamond: Tne,
  ellipse: Qne,
  path: Mne
}, Symbol.toStringTag, { value: "Module" }));
var Dl;
(function(n) {
  n.presets = zne, n.registry = An.create({
    type: "marker"
  }), n.registry.register(n.presets, !0);
})(Dl || (Dl = {}));
(function(n) {
  n.normalize = Ul;
})(Dl || (Dl = {}));
var jne = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
function vw(n) {
  return typeof n == "string" || kr(n);
}
const Vne = {
  qualify: vw,
  set(n, { view: e, attrs: t }) {
    return bw("marker-start", n, e, t);
  }
}, Fne = {
  qualify: vw,
  set(n, { view: e, attrs: t }) {
    return bw("marker-end", n, e, t, {
      transform: "rotate(180)"
    });
  }
}, Zne = {
  qualify: vw,
  set(n, { view: e, attrs: t }) {
    return bw("marker-mid", n, e, t);
  }
};
function bw(n, e, t, i, s = {}) {
  const r = typeof e == "string" ? { name: e } : e, { name: o, args: l } = r, a = jne(r, ["name", "args"]);
  let c = a;
  if (o && typeof o == "string") {
    const h = Dl.registry.get(o);
    if (h)
      c = h(Object.assign(Object.assign({}, a), l));
    else
      return Dl.registry.onNotFound(o);
  }
  const u = Object.assign(Object.assign(Object.assign({}, qne(i, n)), s), c);
  return {
    [n]: `url(#${t.graph.defineMarker(u)})`
  };
}
function qne(n, e) {
  const t = {}, i = n.stroke;
  typeof i == "string" && (t.stroke = i, t.fill = i);
  let s = n.strokeOpacity;
  if (s == null && (s = n["stroke-opacity"]), s == null && (s = n.opacity), s != null && (t["stroke-opacity"] = s, t["fill-opacity"] = s), e !== "marker-mid") {
    const r = parseFloat(n.strokeWidth || n["stroke-width"]);
    if (Number.isFinite(r) && r > 1) {
      const o = Math.ceil(r / 2);
      t.refX = e === "marker-start" ? o : -o;
    }
  }
  return t;
}
const Pf = (n, { view: e }) => e.cell.isEdge(), Wne = {
  qualify: Pf,
  set(n, e) {
    var t, i, s, r;
    const o = e.view, l = n.reverse || !1, a = n.stubs || 0;
    let c;
    if (Number.isFinite(a) && a !== 0)
      if (l) {
        let u, h;
        const d = o.getConnectionLength() || 0;
        a < 0 ? (u = (d + a) / 2, h = -a) : (u = a, h = d - a * 2);
        const f = o.getConnection();
        c = (r = (s = (i = (t = f == null ? void 0 : f.divideAtLength(u)) === null || t === void 0 ? void 0 : t[1]) === null || i === void 0 ? void 0 : i.divideAtLength(h)) === null || s === void 0 ? void 0 : s[0]) === null || r === void 0 ? void 0 : r.serialize();
      } else {
        let u;
        a < 0 ? u = ((o.getConnectionLength() || 0) + a) / 2 : u = a;
        const h = o.getConnection();
        if (h) {
          const d = h.divideAtLength(u), f = h.divideAtLength(-u);
          d && f && (c = `${d[0].serialize()} ${f[1].serialize()}`);
        }
      }
    return { d: c || o.getConnectionPathData() };
  }
}, _M = {
  qualify: Pf,
  set: g0("getTangentAtLength", { rotate: !0 })
}, Hne = {
  qualify: Pf,
  set: g0("getTangentAtLength", { rotate: !1 })
}, MM = {
  qualify: Pf,
  set: g0("getTangentAtRatio", { rotate: !0 })
}, Xne = {
  qualify: Pf,
  set: g0("getTangentAtRatio", { rotate: !1 })
}, Yne = _M, Une = MM;
function g0(n, e) {
  const t = { x: 1, y: 0 };
  return (i, s) => {
    let r, o;
    const l = s.view, a = l[n](Number(i));
    return a ? (o = e.rotate ? a.vector().vectorAngle(t) : 0, r = a.start) : (r = l.path.start, o = 0), o === 0 ? { transform: `translate(${r.x},${r.y}')` } : {
      transform: `translate(${r.x},${r.y}') rotate(${o})`
    };
  };
}
const Gne = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  annotations: mne,
  atConnectionLength: Yne,
  atConnectionLengthIgnoreGradient: Hne,
  atConnectionLengthKeepGradient: _M,
  atConnectionRatio: Une,
  atConnectionRatioIgnoreGradient: Xne,
  atConnectionRatioKeepGradient: MM,
  connection: Wne,
  displayEmpty: bne,
  eol: vne,
  fill: une,
  filter: kne,
  html: Cne,
  lineHeight: fne,
  port: Pne,
  ref: Hte,
  refCx: Jte,
  refCy: ene,
  refD: sne,
  refDKeepOffset: tne,
  refDResetOffset: OM,
  refDx: Xte,
  refDy: Yte,
  refHeight: bM,
  refHeight2: cne,
  refPoints: rne,
  refPointsKeepOffset: nne,
  refPointsResetOffset: wM,
  refR: ine,
  refRCircumscribed: Kte,
  refRInscribed: yM,
  refRx: Ute,
  refRy: Gte,
  refWidth: vM,
  refWidth2: ane,
  refX: gM,
  refX2: one,
  refY: mM,
  refY2: lne,
  resetOffset: xne,
  sourceMarker: Vne,
  stroke: hne,
  style: Sne,
  targetMarker: Fne,
  text: kM,
  textPath: gne,
  textVerticalAnchor: pne,
  textWrap: dne,
  title: yne,
  vertexMarker: Zne,
  xAlign: One,
  yAlign: wne
}, Symbol.toStringTag, { value: "Module" }));
var ho;
(function(n) {
  function e(t, i, s) {
    return !!(t != null && (typeof t == "string" || typeof t.qualify != "function" || Ze(t.qualify, this, i, s)));
  }
  n.isValidDefinition = e;
})(ho || (ho = {}));
(function(n) {
  n.presets = Object.assign(Object.assign({}, Wte), Gne), n.registry = An.create({
    type: "attribute definition"
  }), n.registry.register(n.presets, !0);
})(ho || (ho = {}));
const Ks = {
  prefixCls: "x6",
  autoInsertCSS: !0,
  useCSSSelector: !0,
  prefix(n) {
    return `${Ks.prefixCls}-${n}`;
  }
}, rk = Ks.prefix("highlighted"), Kne = {
  highlight(n, e, t) {
    const i = t && t.className || rk;
    Ye(e, i);
  },
  unhighlight(n, e, t) {
    const i = t && t.className || rk;
    Rn(e, i);
  }
}, ok = Ks.prefix("highlight-opacity"), Jne = {
  highlight(n, e) {
    Ye(e, ok);
  },
  unhighlight(n, e) {
    Rn(e, ok);
  }
};
var It;
(function(n) {
  n.normalizeMarker = Ul;
  function e(d, f) {
    const p = ote(d.x, d.y).matrixTransform(f);
    return new z(p.x, p.y);
  }
  n.transformPoint = e;
  function t(d, f) {
    return new Ie(e(d.start, f), e(d.end, f));
  }
  n.transformLine = t;
  function i(d, f) {
    let p = d instanceof Pn ? d.points : d;
    return Array.isArray(p) || (p = []), new Pn(p.map((g) => e(g, f)));
  }
  n.transformPolyline = i;
  function s(d, f) {
    const g = $r("svg").createSVGPoint();
    g.x = d.x, g.y = d.y;
    const m = g.matrixTransform(f);
    g.x = d.x + d.width, g.y = d.y;
    const v = g.matrixTransform(f);
    g.x = d.x + d.width, g.y = d.y + d.height;
    const O = g.matrixTransform(f);
    g.x = d.x, g.y = d.y + d.height;
    const b = g.matrixTransform(f), w = Math.min(m.x, v.x, O.x, b.x), x = Math.max(m.x, v.x, O.x, b.x), S = Math.min(m.y, v.y, O.y, b.y), C = Math.max(m.y, v.y, O.y, b.y);
    return new ye(w, S, x - w, C - S);
  }
  n.transformRectangle = s;
  function r(d, f, p) {
    let g;
    const m = d.ownerSVGElement;
    if (!m)
      return new ye(0, 0, 0, 0);
    try {
      g = d.getBBox();
    } catch {
      g = {
        x: d.clientLeft,
        y: d.clientTop,
        width: d.clientWidth,
        height: d.clientHeight
      };
    }
    if (f)
      return ye.create(g);
    const v = td(d, p || m);
    return s(g, v);
  }
  n.bbox = r;
  function o(d, f = {}) {
    let p;
    if (!d.ownerSVGElement || !Ml(d)) {
      if (UC(d)) {
        const { left: O, top: b, width: w, height: x } = l(d);
        return new ye(O, b, w, x);
      }
      return new ye(0, 0, 0, 0);
    }
    let m = f.target;
    if (!f.recursive) {
      try {
        p = d.getBBox();
      } catch {
        p = {
          x: d.clientLeft,
          y: d.clientTop,
          width: d.clientWidth,
          height: d.clientHeight
        };
      }
      if (!m)
        return ye.create(p);
      const O = td(d, m);
      return s(p, O);
    }
    {
      const O = d.childNodes, b = O.length;
      if (b === 0)
        return o(d, {
          target: m
        });
      m || (m = d);
      for (let w = 0; w < b; w += 1) {
        const x = O[w];
        let S;
        x.childNodes.length === 0 ? S = o(x, {
          target: m
        }) : S = o(x, {
          target: m,
          recursive: !0
        }), p ? p = p.union(S) : p = S;
      }
      return p;
    }
  }
  n.getBBox = o;
  function l(d) {
    let f = 0, p = 0, g = 0, m = 0;
    if (d) {
      let v = d;
      for (; v; )
        f += v.offsetLeft, p += v.offsetTop, v = v.offsetParent, v && (f += parseInt(ek(v, "borderLeft"), 10), p += parseInt(ek(v, "borderTop"), 10));
      g = d.offsetWidth, m = d.offsetHeight;
    }
    return {
      left: f,
      top: p,
      width: g,
      height: m
    };
  }
  n.getBoundingOffsetRect = l;
  function a(d) {
    const f = (p) => {
      const g = d.getAttribute(p), m = g ? parseFloat(g) : 0;
      return Number.isNaN(m) ? 0 : m;
    };
    switch (d instanceof SVGElement && d.nodeName.toLowerCase()) {
      case "rect":
        return new ye(f("x"), f("y"), f("width"), f("height"));
      case "circle":
        return new wr(f("cx"), f("cy"), f("r"), f("r"));
      case "ellipse":
        return new wr(f("cx"), f("cy"), f("rx"), f("ry"));
      case "polyline": {
        const p = Xg(d);
        return new Pn(p);
      }
      case "polygon": {
        const p = Xg(d);
        return p.length > 1 && p.push(p[0]), new Pn(p);
      }
      case "path": {
        let p = d.getAttribute("d");
        return Be.isValid(p) || (p = Be.normalize(p)), Be.parse(p);
      }
      case "line":
        return new Ie(f("x1"), f("y1"), f("x2"), f("y2"));
    }
    return o(d);
  }
  n.toGeometryShape = a;
  function c(d, f, p, g) {
    const m = z.create(f), v = z.create(p);
    g || (g = d instanceof SVGSVGElement ? d : d.ownerSVGElement);
    const O = Ty(d);
    d.setAttribute("transform", "");
    const b = o(d, {
      target: g
    }).scale(O.sx, O.sy), w = _h();
    w.setTranslate(-b.x - b.width / 2, -b.y - b.height / 2);
    const x = _h(), S = m.angleBetween(v, m.clone().translate(1, 0));
    S && x.setRotate(S, 0, 0);
    const C = _h(), k = m.clone().move(v, b.width / 2);
    C.setTranslate(2 * m.x - k.x, 2 * m.y - k.y);
    const E = td(d, g), M = _h();
    M.setMatrix(C.matrix.multiply(x.matrix.multiply(w.matrix.multiply(E.scale(O.sx, O.sy))))), d.setAttribute("transform", oh(M.matrix));
  }
  n.translateAndAutoOrient = c;
  function u(d) {
    if (d == null)
      return null;
    let f = d;
    do {
      let p = f.tagName;
      if (typeof p != "string")
        return null;
      if (p = p.toUpperCase(), rh(f, "x6-port"))
        f = f.nextElementSibling;
      else if (p === "G")
        f = f.firstElementChild;
      else if (p === "TITLE")
        f = f.nextElementSibling;
      else
        break;
    } while (f);
    return f;
  }
  n.findShapeNode = u;
  function h(d) {
    const f = u(d);
    if (!Ml(f)) {
      if (UC(d)) {
        const { left: m, top: v, width: O, height: b } = l(d);
        return new ye(m, v, O, b);
      }
      return new ye(0, 0, 0, 0);
    }
    return a(f).bbox() || ye.create();
  }
  n.getBBoxV2 = h;
})(It || (It = {}));
const eie = {
  padding: 3,
  rx: 0,
  ry: 0,
  attrs: {
    "stroke-width": 3,
    stroke: "#FEB663"
  }
}, tie = {
  highlight(n, e, t) {
    const i = cl.getHighlighterId(e, t);
    if (cl.hasCache(i))
      return;
    t = jA({}, t, eie);
    const s = Je.create(e);
    let r, o;
    try {
      r = s.toPathData();
    } catch {
      o = It.bbox(s.node, !0), r = rM(Object.assign(Object.assign({}, t), o));
    }
    const l = $r("path");
    if (St(l, Object.assign({ d: r, "pointer-events": "none", "vector-effect": "non-scaling-stroke", fill: "none" }, t.attrs ? _d(t.attrs) : null)), n.isEdgeElement(e))
      St(l, "d", n.getConnectionPathData());
    else {
      let u = s.getTransformToElement(n.container);
      const h = t.padding;
      if (h) {
        o == null && (o = It.bbox(s.node, !0));
        const d = o.x + o.width / 2, f = o.y + o.height / 2;
        o = It.transformRectangle(o, u);
        const p = Math.max(o.width, 1), g = Math.max(o.height, 1), m = (p + h) / p, v = (g + h) / g, O = ai({
          a: m,
          b: 0,
          c: 0,
          d: v,
          e: d - m * d,
          f: f - v * f
        });
        u = u.multiply(O);
      }
      bu(l, u);
    }
    Ye(l, Ks.prefix("highlight-stroke"));
    const a = n.cell, c = () => cl.removeHighlighter(i);
    a.on("removed", c), a.model && a.model.on("reseted", c), n.container.appendChild(l), cl.setCache(i, l);
  },
  unhighlight(n, e, t) {
    cl.removeHighlighter(cl.getHighlighterId(e, t));
  }
};
var cl;
(function(n) {
  function e(o, l) {
    return uw(o), o.id + JSON.stringify(l);
  }
  n.getHighlighterId = e;
  const t = {};
  function i(o, l) {
    t[o] = l;
  }
  n.setCache = i;
  function s(o) {
    return t[o] != null;
  }
  n.hasCache = s;
  function r(o) {
    const l = t[o];
    l && (no(l), delete t[o]);
  }
  n.removeHighlighter = r;
})(cl || (cl = {}));
const nie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  className: Kne,
  opacity: Jne,
  stroke: tie
}, Symbol.toStringTag, { value: "Module" }));
var Ro;
(function(n) {
  function e(t, i) {
    if (typeof i.highlight != "function")
      throw new Error(`Highlighter '${t}' is missing required \`highlight()\` method`);
    if (typeof i.unhighlight != "function")
      throw new Error(`Highlighter '${t}' is missing required \`unhighlight()\` method`);
  }
  n.check = e;
})(Ro || (Ro = {}));
(function(n) {
  n.presets = nie, n.registry = An.create({
    type: "highlighter"
  }), n.registry.register(n.presets, !0);
})(Ro || (Ro = {}));
function Ny(n, e = {}) {
  return new z(br(e.x, n.width), br(e.y, n.height));
}
function yw(n, e, t) {
  return Object.assign({ angle: e, position: n.toJSON() }, t);
}
const iie = (n, e) => n.map(({ x: t, y: i, angle: s }) => yw(Ny(e, { x: t, y: i }), s || 0)), sie = (n, e, t) => {
  const i = t.start || 0, s = t.step || 20;
  return RM(n, e, i, (r, o) => (r + 0.5 - o / 2) * s);
}, rie = (n, e, t) => {
  const i = t.start || 0, s = t.step || 360 / n.length;
  return RM(n, e, i, (r) => r * s);
};
function RM(n, e, t, i) {
  const s = e.getCenter(), r = e.getTopCenter(), o = e.width / e.height, l = wr.fromRect(e), a = n.length;
  return n.map((c, u) => {
    const h = t + i(u, a), d = r.clone().rotate(-h, s).scale(o, 1, s), f = c.compensateRotate ? -l.tangentTheta(d) : 0;
    return (c.dx || c.dy) && d.translate(c.dx || 0, c.dy || 0), c.dr && d.move(s, c.dr), yw(d.round(), f, c);
  });
}
var oie = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const lie = (n, e, t) => {
  const i = Ny(e, t.start || e.getOrigin()), s = Ny(e, t.end || e.getCorner());
  return Ef(n, i, s, t);
}, aie = (n, e, t) => Ef(n, e.getTopLeft(), e.getBottomLeft(), t), cie = (n, e, t) => Ef(n, e.getTopRight(), e.getBottomRight(), t), uie = (n, e, t) => Ef(n, e.getTopLeft(), e.getTopRight(), t), hie = (n, e, t) => Ef(n, e.getBottomLeft(), e.getBottomRight(), t);
function Ef(n, e, t, i) {
  const s = new Ie(e, t), r = n.length;
  return n.map((o, l) => {
    var { strict: a } = o, c = oie(o, ["strict"]);
    const u = a || i.strict ? (l + 1) / (r + 1) : (l + 0.5) / r, h = s.pointAt(u);
    return (c.dx || c.dy) && h.translate(c.dx || 0, c.dy || 0), yw(h.round(), 0, c);
  });
}
const die = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  absolute: iie,
  bottom: hie,
  ellipse: sie,
  ellipseSpread: rie,
  left: aie,
  line: lie,
  right: cie,
  top: uie
}, Symbol.toStringTag, { value: "Module" }));
var Ma;
(function(n) {
  n.presets = die, n.registry = An.create({
    type: "port layout"
  }), n.registry.register(n.presets, !0);
})(Ma || (Ma = {}));
const fie = {
  position: { x: 0, y: 0 },
  angle: 0,
  attrs: {
    ".": {
      y: "0",
      "text-anchor": "start"
    }
  }
};
function Gl(n, e) {
  const { x: t, y: i, angle: s, attrs: r } = e || {};
  return jA({}, { angle: s, attrs: r, position: { x: t, y: i } }, n, fie);
}
const pie = (n, e, t) => Gl({ position: e.getTopLeft() }, t), gie = (n, e, t) => Gl({
  position: { x: -15, y: 0 },
  attrs: { ".": { y: ".3em", "text-anchor": "end" } }
}, t), mie = (n, e, t) => Gl({
  position: { x: 15, y: 0 },
  attrs: { ".": { y: ".3em", "text-anchor": "start" } }
}, t), vie = (n, e, t) => Gl({
  position: { x: 0, y: -15 },
  attrs: { ".": { "text-anchor": "middle" } }
}, t), bie = (n, e, t) => Gl({
  position: { x: 0, y: 15 },
  attrs: { ".": { y: ".6em", "text-anchor": "middle" } }
}, t), yie = (n, e, t) => NM(n, e, !1, t), Oie = (n, e, t) => NM(n, e, !0, t), wie = (n, e, t) => DM(n, e, !1, t), xie = (n, e, t) => DM(n, e, !0, t);
function NM(n, e, t, i) {
  const s = i.offset != null ? i.offset : 15, r = e.getCenter().theta(n), o = LM(e);
  let l, a, c, u, h = 0;
  return r < o[1] || r > o[2] ? (l = ".3em", a = s, c = 0, u = "start") : r < o[0] ? (l = "0", a = 0, c = -s, t ? (h = -90, u = "start") : u = "middle") : r < o[3] ? (l = ".3em", a = -s, c = 0, u = "end") : (l = ".6em", a = 0, c = s, t ? (h = 90, u = "start") : u = "middle"), Gl({
    position: {
      x: Math.round(a),
      y: Math.round(c)
    },
    angle: h,
    attrs: {
      ".": {
        y: l,
        "text-anchor": u
      }
    }
  }, i);
}
function DM(n, e, t, i) {
  const s = i.offset != null ? i.offset : 15, r = e.getCenter().theta(n), o = LM(e);
  let l, a, c, u, h = 0;
  return r < o[1] || r > o[2] ? (l = ".3em", a = -s, c = 0, u = "end") : r < o[0] ? (l = ".6em", a = 0, c = s, t ? (h = 90, u = "start") : u = "middle") : r < o[3] ? (l = ".3em", a = s, c = 0, u = "start") : (l = "0em", a = 0, c = -s, t ? (h = -90, u = "start") : u = "middle"), Gl({
    position: {
      x: Math.round(a),
      y: Math.round(c)
    },
    angle: h,
    attrs: {
      ".": {
        y: l,
        "text-anchor": u
      }
    }
  }, i);
}
function LM(n) {
  const e = n.getCenter(), t = e.theta(n.getTopLeft()), i = e.theta(n.getBottomLeft()), s = e.theta(n.getBottomRight()), r = e.theta(n.getTopRight());
  return [t, r, s, i];
}
const Sie = (n, e, t) => IM(n.diff(e.getCenter()), !1, t), Cie = (n, e, t) => IM(n.diff(e.getCenter()), !0, t);
function IM(n, e, t) {
  const i = t.offset != null ? t.offset : 20, s = new z(0, 0), r = -n.theta(s), o = n.clone().move(s, i).diff(n).round();
  let l = ".3em", a, c = r;
  return (r + 90) % 180 === 0 ? (a = e ? "end" : "middle", !e && r === -270 && (l = "0em")) : r > -270 && r < -90 ? (a = "start", c = r - 180) : a = "end", Gl({
    position: o.round().toJSON(),
    angle: e ? c : 0,
    attrs: {
      ".": {
        y: l,
        "text-anchor": a
      }
    }
  }, t);
}
const kie = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bottom: bie,
  inside: wie,
  insideOriented: xie,
  left: gie,
  manual: pie,
  outside: yie,
  outsideOriented: Oie,
  radial: Sie,
  radialOriented: Cie,
  right: mie,
  top: vie
}, Symbol.toStringTag, { value: "Module" }));
var xu;
(function(n) {
  n.presets = kie, n.registry = An.create({
    type: "port label layout"
  }), n.registry.register(n.presets, !0);
})(xu || (xu = {}));
var Pie = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Rt extends gn {
  get priority() {
    return 2;
  }
  /** If need remove `this.container` DOM */
  get disposeContainer() {
    return !0;
  }
  constructor() {
    super(), this.cid = Dy.uniqueId(), Rt.views[this.cid] = this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  confirmUpdate(e, t) {
    return 0;
  }
  empty(e = this.container) {
    return kf(e), this;
  }
  unmount(e = this.container) {
    return no(e), this;
  }
  remove(e = this.container) {
    return e === this.container ? (this.removeEventListeners(document), this.onRemove(), delete Rt.views[this.cid], this.disposeContainer && this.unmount(e)) : this.unmount(e), this;
  }
  onRemove() {
  }
  setClass(e, t = this.container) {
    t.classList.value = Array.isArray(e) ? e.join(" ") : e;
  }
  addClass(e, t = this.container) {
    return Ye(t, Array.isArray(e) ? e.join(" ") : e), this;
  }
  removeClass(e, t = this.container) {
    return Rn(t, Array.isArray(e) ? e.join(" ") : e), this;
  }
  setStyle(e, t = this.container) {
    return Zn(t, e), this;
  }
  setAttrs(e, t = this.container) {
    return e != null && t != null && St(t, e), this;
  }
  /**
   * Returns the value of the specified attribute of `node`.
   *
   * If the node does not set a value for attribute, start recursing up
   * the DOM tree from node to lookup for attribute at the ancestors of
   * node. If the recursion reaches CellView's root node and attribute
   * is not found even there, return `null`.
   */
  findAttr(e, t = this.container) {
    let i = t;
    for (; i && i.nodeType === 1; ) {
      const s = i.getAttribute(e);
      if (s != null)
        return s;
      if (i === this.container)
        return null;
      i = i.parentNode;
    }
    return null;
  }
  find(e, t = this.container, i = this.selectors) {
    return Rt.find(e, t, i).elems;
  }
  findOne(e, t = this.container, i = this.selectors) {
    const s = this.find(e, t, i);
    return s.length > 0 ? s[0] : null;
  }
  findByAttr(e, t = this.container) {
    let i = t;
    for (; i && i.getAttribute; ) {
      const s = i.getAttribute(e);
      if ((s != null || i === this.container) && s !== "false")
        return i;
      i = i.parentNode;
    }
    return null;
  }
  getSelector(e, t) {
    let i;
    if (e === this.container)
      return typeof t == "string" && (i = `> ${t}`), i;
    if (e) {
      const s = dw(e) + 1;
      i = `${e.tagName.toLowerCase()}:nth-child(${s})`, t && (i += ` > ${t}`), i = this.getSelector(e.parentNode, i);
    }
    return i;
  }
  prefixClassName(e) {
    return Ks.prefix(e);
  }
  delegateEvents(e, t) {
    if (e == null)
      return this;
    t || this.undelegateEvents();
    const i = /^(\S+)\s*(.*)$/;
    return Object.keys(e).forEach((s) => {
      const r = s.match(i);
      if (r == null)
        return;
      const o = this.getEventHandler(e[s]);
      typeof o == "function" && this.delegateEvent(r[1], r[2], o);
    }), this;
  }
  undelegateEvents() {
    return mi.off(this.container, this.getEventNamespace()), this;
  }
  delegateDocumentEvents(e, t) {
    return this.addEventListeners(document, e, t), this;
  }
  undelegateDocumentEvents() {
    return this.removeEventListeners(document), this;
  }
  delegateEvent(e, t, i) {
    return mi.on(this.container, e + this.getEventNamespace(), t, i), this;
  }
  undelegateEvent(e, t, i) {
    const s = e + this.getEventNamespace();
    return t == null ? mi.off(this.container, s) : typeof t == "string" ? mi.off(this.container, s, t, i) : mi.off(this.container, s, t), this;
  }
  addEventListeners(e, t, i) {
    if (t == null)
      return this;
    const s = this.getEventNamespace();
    return Object.keys(t).forEach((r) => {
      const o = this.getEventHandler(t[r]);
      typeof o == "function" && mi.on(e, r + s, i, o);
    }), this;
  }
  removeEventListeners(e) {
    return e != null && mi.off(e, this.getEventNamespace()), this;
  }
  getEventNamespace() {
    return `.${Ks.prefixCls}-event-${this.cid}`;
  }
  // eslint-disable-next-line
  getEventHandler(e) {
    let t;
    if (typeof e == "string") {
      const i = this[e];
      typeof i == "function" && (t = (...s) => i.call(this, ...s));
    } else
      t = (...i) => e.call(this, ...i);
    return t;
  }
  getEventTarget(e, t = {}) {
    const { target: i, type: s, clientX: r = 0, clientY: o = 0 } = e;
    return t.fromPoint || s === "touchmove" || s === "touchend" ? document.elementFromPoint(r, o) : i;
  }
  stopPropagation(e) {
    return this.setEventData(e, { propagationStopped: !0 }), this;
  }
  isPropagationStopped(e) {
    return this.getEventData(e).propagationStopped === !0;
  }
  getEventData(e) {
    return this.eventData(e);
  }
  setEventData(e, t) {
    return this.eventData(e, t);
  }
  eventData(e, t) {
    if (e == null)
      throw new TypeError("Event object required");
    let i = e.data;
    const s = `__${this.cid}__`;
    return t == null ? i == null ? {} : i[s] || {} : (i == null && (i = e.data = {}), i[s] == null ? i[s] = Object.assign({}, t) : i[s] = Object.assign(Object.assign({}, i[s]), t), i[s]);
  }
  normalizeEvent(e) {
    return Rt.normalizeEvent(e);
  }
  dispose() {
    this.remove();
  }
}
Pie([
  Rt.dispose()
], Rt.prototype, "dispose", null);
(function(n) {
  function e(s, r) {
    return r ? $r(s || "g") : hw(s || "div");
  }
  n.createElement = e;
  function t(s, r, o) {
    if (!s || s === ".")
      return { elems: [r] };
    if (o) {
      const l = o[s];
      if (l)
        return { elems: Array.isArray(l) ? l : [l] };
    }
    {
      const l = s.includes(">") ? `:scope ${s}` : s;
      return {
        isCSSSelector: !0,
        // $(rootElem).find(selector).toArray() as Element[]
        elems: Array.prototype.slice.call(r.querySelectorAll(l))
      };
    }
  }
  n.find = t;
  function i(s) {
    let r = s;
    const o = s.originalEvent, l = o && o.changedTouches && o.changedTouches[0];
    if (l) {
      for (const a in s)
        l[a] === void 0 && (l[a] = s[a]);
      r = l;
    }
    return r;
  }
  n.normalizeEvent = i;
})(Rt || (Rt = {}));
(function(n) {
  n.views = {};
  function e(t) {
    return n.views[t] || null;
  }
  n.getView = e;
})(Rt || (Rt = {}));
var Dy;
(function(n) {
  let e = 0;
  function t() {
    const i = `v${e}`;
    return e += 1, i;
  }
  n.uniqueId = t;
})(Dy || (Dy = {}));
class Eie {
  constructor(e) {
    this.view = e, this.clean();
  }
  clean() {
    this.elemCache && this.elemCache.dispose(), this.elemCache = new Ry(), this.pathCache = {};
  }
  get(e) {
    return this.elemCache.has(e) || this.elemCache.set(e, {}), this.elemCache.get(e);
  }
  getData(e) {
    const t = this.get(e);
    return t.data || (t.data = {}), t.data;
  }
  getMatrix(e) {
    const t = this.get(e);
    if (t.matrix == null) {
      const i = this.view.container;
      t.matrix = hte(e, i);
    }
    return ai(t.matrix);
  }
  getShape(e) {
    const t = this.get(e);
    return t.shape == null && (t.shape = It.toGeometryShape(e)), t.shape.clone();
  }
  getBoundingRect(e) {
    const t = this.get(e);
    return t.boundingRect == null && (t.boundingRect = It.getBBoxV2(e)), t.boundingRect.clone();
  }
}
var Yt;
(function(n) {
  function e(c) {
    return c != null && !t(c);
  }
  n.isJSONMarkup = e;
  function t(c) {
    return c != null && typeof c == "string";
  }
  n.isStringMarkup = t;
  function i(c) {
    return c == null || t(c) ? c : Bt(c);
  }
  n.clone = i;
  function s(c) {
    return `${c}`.trim().replace(/[\r|\n]/g, " ").replace(/>\s+</g, "><");
  }
  n.sanitize = s;
  function r(c, u = { ns: si.svg }) {
    const h = document.createDocumentFragment(), d = {}, f = {}, p = [
      {
        markup: Array.isArray(c) ? c : [c],
        parent: h,
        ns: u.ns
      }
    ];
    for (; p.length > 0; ) {
      const g = p.pop();
      let m = g.ns || si.svg;
      const v = g.markup, O = g.parent;
      v.forEach((b) => {
        const w = b.tagName;
        if (!w)
          throw new TypeError("Invalid tagName");
        b.ns && (m = b.ns);
        const x = m ? hw(w, m) : YC(w), S = b.attrs;
        S && St(x, _d(S));
        const C = b.style;
        C && Zn(x, C);
        const k = b.className;
        k != null && x.setAttribute("class", Array.isArray(k) ? k.join(" ") : k), b.textContent && (x.textContent = b.textContent);
        const E = b.selector;
        if (E != null) {
          if (f[E])
            throw new TypeError("Selector must be unique");
          f[E] = x;
        }
        if (b.groupSelector) {
          let _ = b.groupSelector;
          Array.isArray(_) || (_ = [_]), _.forEach((T) => {
            d[T] || (d[T] = []), d[T].push(x);
          });
        }
        O.appendChild(x);
        const M = b.children;
        Array.isArray(M) && p.push({ ns: m, markup: M, parent: x });
      });
    }
    return Object.keys(d).forEach((g) => {
      if (f[g])
        throw new Error("Ambiguous group selector");
      f[g] = d[g];
    }), { fragment: h, selectors: f, groups: d };
  }
  n.parseJSONMarkup = r;
  function o(c) {
    return c instanceof SVGElement ? $r("g") : YC("div");
  }
  function l(c) {
    if (t(c)) {
      const f = Je.createVectors(c), p = f.length;
      if (p === 1)
        return {
          elem: f[0].node
        };
      if (p > 1) {
        const g = o(f[0].node);
        return f.forEach((m) => {
          g.appendChild(m.node);
        }), { elem: g };
      }
      return {};
    }
    const u = r(c), h = u.fragment;
    let d = null;
    return h.childNodes.length > 1 ? (d = o(h.firstChild), d.appendChild(h)) : d = h.firstChild, { elem: d, selectors: u.selectors };
  }
  n.renderMarkup = l;
  function a(c) {
    const u = Je.createVectors(c), h = document.createDocumentFragment();
    for (let d = 0, f = u.length; d < f; d += 1) {
      const p = u[d].node;
      h.appendChild(p);
    }
    return { fragment: h, selectors: {} };
  }
  n.parseLabelStringMarkup = a;
})(Yt || (Yt = {}));
(function(n) {
  function e(t, i, s) {
    if (t != null) {
      let r;
      const o = t.tagName.toLowerCase();
      if (t === i)
        return typeof s == "string" ? r = `> ${o} > ${s}` : r = `> ${o}`, r;
      const l = t.parentNode;
      if (l && l.childNodes.length > 1) {
        const a = dw(t) + 1;
        r = `${o}:nth-child(${a})`;
      } else
        r = o;
      return s && (r += ` > ${s}`), e(t.parentNode, i, r);
    }
    return s;
  }
  n.getSelector = e;
})(Yt || (Yt = {}));
(function(n) {
  function e() {
    return "g";
  }
  n.getPortContainerMarkup = e;
  function t() {
    return {
      tagName: "circle",
      selector: "circle",
      attrs: {
        r: 10,
        fill: "#FFFFFF",
        stroke: "#000000"
      }
    };
  }
  n.getPortMarkup = t;
  function i() {
    return {
      tagName: "text",
      selector: "text",
      attrs: {
        fill: "#000000"
      }
    };
  }
  n.getPortLabelMarkup = i;
})(Yt || (Yt = {}));
(function(n) {
  function e() {
    return [
      {
        tagName: "path",
        selector: "wrap",
        groupSelector: "lines",
        attrs: {
          fill: "none",
          cursor: "pointer",
          stroke: "transparent",
          strokeLinecap: "round"
        }
      },
      {
        tagName: "path",
        selector: "line",
        groupSelector: "lines",
        attrs: {
          fill: "none",
          pointerEvents: "none"
        }
      }
    ];
  }
  n.getEdgeMarkup = e;
})(Yt || (Yt = {}));
(function(n) {
  function e(t = !1) {
    return {
      tagName: "foreignObject",
      selector: "fo",
      children: [
        {
          ns: si.xhtml,
          tagName: "body",
          selector: "foBody",
          attrs: {
            xmlns: si.xhtml
          },
          style: {
            width: "100%",
            height: "100%",
            background: "transparent"
          },
          children: t ? [] : [
            {
              tagName: "div",
              selector: "foContent",
              style: {
                width: "100%",
                height: "100%"
              }
            }
          ]
        }
      ]
    };
  }
  n.getForeignObjectMarkup = e;
})(Yt || (Yt = {}));
class BM {
  constructor(e) {
    this.view = e;
  }
  get cell() {
    return this.view.cell;
  }
  getDefinition(e) {
    return this.cell.getAttrDefinition(e);
  }
  processAttrs(e, t) {
    let i, s, r, o;
    const l = [];
    return Object.keys(t).forEach((a) => {
      const c = t[a], u = this.getDefinition(a), h = Ze(ho.isValidDefinition, this.view, u, c, {
        elem: e,
        attrs: t,
        cell: this.cell,
        view: this.view
      });
      if (u && h)
        typeof u == "string" ? (i == null && (i = {}), i[u] = c) : c !== null && l.push({ name: a, definition: u });
      else {
        i == null && (i = {});
        const d = G_.includes(a) ? a : M_(a);
        i[d] = c;
      }
    }), l.forEach(({ name: a, definition: c }) => {
      const u = t[a];
      typeof c.set == "function" && (s == null && (s = {}), s[a] = u), typeof c.offset == "function" && (r == null && (r = {}), r[a] = u), typeof c.position == "function" && (o == null && (o = {}), o[a] = u);
    }), {
      raw: t,
      normal: i,
      set: s,
      offset: r,
      position: o
    };
  }
  mergeProcessedAttrs(e, t) {
    e.set = Object.assign(Object.assign({}, e.set), t.set), e.position = Object.assign(Object.assign({}, e.position), t.position), e.offset = Object.assign(Object.assign({}, e.offset), t.offset);
    const i = e.normal && e.normal.transform;
    i != null && t.normal && (t.normal.transform = i), e.normal = t.normal;
  }
  findAttrs(e, t, i, s) {
    const r = [], o = new Ry();
    return Object.keys(e).forEach((l) => {
      const a = e[l];
      if (!kr(a))
        return;
      const { isCSSSelector: c, elems: u } = Rt.find(l, t, s);
      i[l] = u;
      for (let h = 0, d = u.length; h < d; h += 1) {
        const f = u[h], p = s && s[l] === f, g = o.get(f);
        if (g) {
          g.array || (r.push(f), g.array = !0, g.attrs = [g.attrs], g.priority = [g.priority]);
          const m = g.attrs, v = g.priority;
          if (p)
            m.unshift(a), v.unshift(-1);
          else {
            const O = pz(v, c ? -1 : d);
            m.splice(O, 0, a), v.splice(O, 0, d);
          }
        } else
          o.set(f, {
            elem: f,
            attrs: a,
            priority: p ? -1 : d,
            array: !1
          });
      }
    }), r.forEach((l) => {
      const a = o.get(l), c = a.attrs;
      a.attrs = c.reduceRight((u, h) => On(u, h), {});
    }), o;
  }
  updateRelativeAttrs(e, t, i) {
    const s = t.raw || {};
    let r = t.normal || {};
    const o = t.set, l = t.position, a = t.offset, c = () => ({
      elem: e,
      cell: this.cell,
      view: this.view,
      attrs: s,
      refBBox: i.clone()
    });
    if (o != null && Object.keys(o).forEach((m) => {
      const v = o[m], O = this.getDefinition(m);
      if (O != null) {
        const b = Ze(O.set, this.view, v, c());
        typeof b == "object" ? r = Object.assign(Object.assign({}, r), b) : b != null && (r[m] = b);
      }
    }), e instanceof HTMLElement) {
      this.view.setAttrs(r, e);
      return;
    }
    const u = r.transform, h = u ? `${u}` : null, d = Md(h), f = new z(d.e, d.f);
    u && (delete r.transform, d.e = 0, d.f = 0);
    let p = !1;
    l != null && Object.keys(l).forEach((m) => {
      const v = l[m], O = this.getDefinition(m);
      if (O != null) {
        const b = Ze(O.position, this.view, v, c());
        b != null && (p = !0, f.translate(z.create(b)));
      }
    }), this.view.setAttrs(r, e);
    let g = !1;
    if (a != null) {
      const m = this.view.getBoundingRectOfElement(e);
      if (m.width > 0 && m.height > 0) {
        const v = It.transformRectangle(m, d);
        Object.keys(a).forEach((O) => {
          const b = a[O], w = this.getDefinition(O);
          if (w != null) {
            const x = Ze(w.offset, this.view, b, {
              elem: e,
              cell: this.cell,
              view: this.view,
              attrs: s,
              refBBox: v
            });
            x != null && (g = !0, f.translate(z.create(x)));
          }
        });
      }
    }
    (u != null || p || g) && (f.round(1), d.e = f.x, d.f = f.y, e.setAttribute("transform", oh(d)));
  }
  update(e, t, i) {
    const s = {}, r = this.findAttrs(i.attrs || t, e, s, i.selectors), o = i.attrs ? this.findAttrs(t, e, s, i.selectors) : r, l = [];
    r.each((u) => {
      const h = u.elem, d = u.attrs, f = this.processAttrs(h, d);
      if (f.set == null && f.position == null && f.offset == null)
        this.view.setAttrs(f.normal, h);
      else {
        const p = o.get(h), g = p ? p.attrs : null, m = g && d.ref == null ? g.ref : d.ref;
        let v;
        if (m) {
          if (v = (s[m] || this.view.find(m, e, i.selectors))[0], !v)
            throw new Error(`"${m}" reference does not exist.`);
        } else
          v = null;
        const O = {
          node: h,
          refNode: v,
          attributes: g,
          processedAttributes: f
        }, b = l.findIndex((w) => w.refNode === h);
        b > -1 ? l.splice(b, 0, O) : l.push(O);
      }
    });
    const a = new Ry();
    let c;
    l.forEach((u) => {
      const h = u.node, d = u.refNode;
      let f;
      const p = d != null && i.rotatableNode != null && Y_(i.rotatableNode, d);
      if (d && (f = a.get(d)), !f) {
        const v = p ? i.rotatableNode : e;
        f = d ? It.getBBox(d, { target: v }) : i.rootBBox, d && a.set(d, f);
      }
      let g;
      i.attrs && u.attributes ? (g = this.processAttrs(h, u.attributes), this.mergeProcessedAttrs(g, u.processedAttributes)) : g = u.processedAttributes;
      let m = f;
      p && i.rotatableNode != null && !i.rotatableNode.contains(h) && (c || (c = Md(St(i.rotatableNode, "transform"))), m = It.transformRectangle(f, c)), this.updateRelativeAttrs(h, g, m);
    });
  }
}
class QM {
  get cell() {
    return this.view.cell;
  }
  constructor(e, t, i = []) {
    this.view = e;
    const s = {}, r = {};
    let o = 0;
    Object.keys(t).forEach((a) => {
      let c = t[a];
      Array.isArray(c) || (c = [c]), c.forEach((u) => {
        let h = s[u];
        h || (o += 1, h = s[u] = 1 << o), r[a] |= h;
      });
    });
    let l = i;
    if (Array.isArray(l) || (l = [l]), l.forEach((a) => {
      s[a] || (o += 1, s[a] = 1 << o);
    }), o > 25)
      throw new Error("Maximum number of flags exceeded.");
    this.flags = s, this.attrs = r, this.bootstrap = i;
  }
  getFlag(e) {
    const t = this.flags;
    return t == null ? 0 : Array.isArray(e) ? e.reduce((i, s) => i | t[s], 0) : t[e] | 0;
  }
  hasAction(e, t) {
    return e & this.getFlag(t);
  }
  removeAction(e, t) {
    return e ^ e & this.getFlag(t);
  }
  getBootstrapFlag() {
    return this.getFlag(this.bootstrap);
  }
  getChangedFlag() {
    let e = 0;
    return this.attrs && Object.keys(this.attrs).forEach((t) => {
      this.cell.hasChanged(t) && (e |= this.attrs[t]);
    }), e;
  }
}
var Aie = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
}, $ie = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class En extends Rt {
  static getDefaults() {
    return this.defaults;
  }
  static config(e) {
    this.defaults = this.getOptions(e);
  }
  static getOptions(e) {
    const t = (c, u) => u != null ? KA([
      ...Array.isArray(c) ? c : [c],
      ...Array.isArray(u) ? u : [u]
    ]) : Array.isArray(c) ? [...c] : [c], i = Bt(this.getDefaults()), { bootstrap: s, actions: r, events: o, documentEvents: l } = e, a = $ie(e, ["bootstrap", "actions", "events", "documentEvents"]);
    return s && (i.bootstrap = t(i.bootstrap, s)), r && Object.entries(r).forEach(([c, u]) => {
      const h = i.actions[c];
      u && h ? i.actions[c] = t(h, u) : u && (i.actions[c] = t(u));
    }), o && (i.events = Object.assign(Object.assign({}, i.events), o)), e.documentEvents && (i.documentEvents = Object.assign(Object.assign({}, i.documentEvents), l)), On(i, a);
  }
  get [Symbol.toStringTag]() {
    return En.toStringTag;
  }
  constructor(e, t = {}) {
    super(), this.cell = e, this.options = this.ensureOptions(t), this.graph = this.options.graph, this.attr = new BM(this), this.flag = new QM(this, this.options.actions, this.options.bootstrap), this.cache = new Eie(this), this.setContainer(this.ensureContainer()), this.setup(), this.init();
  }
  init() {
  }
  onRemove() {
    this.removeTools();
  }
  get priority() {
    return this.options.priority;
  }
  get rootSelector() {
    return this.options.rootSelector;
  }
  getConstructor() {
    return this.constructor;
  }
  ensureOptions(e) {
    return this.getConstructor().getOptions(e);
  }
  getContainerTagName() {
    return this.options.isSvgElement ? "g" : "div";
  }
  getContainerStyle() {
  }
  getContainerAttrs() {
    return {
      "data-cell-id": this.cell.id,
      "data-shape": this.cell.shape
    };
  }
  getContainerClassName() {
    return this.prefixClassName("cell");
  }
  ensureContainer() {
    return Rt.createElement(this.getContainerTagName(), this.options.isSvgElement);
  }
  setContainer(e) {
    if (this.container !== e) {
      this.undelegateEvents(), this.container = e, this.options.events != null && this.delegateEvents(this.options.events);
      const t = this.getContainerAttrs();
      t != null && this.setAttrs(t, e);
      const i = this.getContainerStyle();
      i != null && this.setStyle(i, e);
      const s = this.getContainerClassName();
      s != null && this.addClass(s, e);
    }
    return this;
  }
  isNodeView() {
    return !1;
  }
  isEdgeView() {
    return !1;
  }
  render() {
    return this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  confirmUpdate(e, t = {}) {
    return 0;
  }
  getBootstrapFlag() {
    return this.flag.getBootstrapFlag();
  }
  getFlag(e) {
    return this.flag.getFlag(e);
  }
  hasAction(e, t) {
    return this.flag.hasAction(e, t);
  }
  removeAction(e, t) {
    return this.flag.removeAction(e, t);
  }
  handleAction(e, t, i, s) {
    if (this.hasAction(e, t)) {
      i();
      const r = [t];
      return s && (typeof s == "string" ? r.push(s) : r.push(...s)), this.removeAction(e, r);
    }
    return e;
  }
  setup() {
    this.cell.on("changed", this.onCellChanged, this);
  }
  onCellChanged({ options: e }) {
    this.onAttrsChange(e);
  }
  onAttrsChange(e) {
    let t = this.flag.getChangedFlag();
    e.updated || !t || (e.dirty && this.hasAction(t, "update") && (t |= this.getFlag("render")), e.toolId && (e.async = !1), this.graph != null && this.graph.renderer.requestViewUpdate(this, t, e));
  }
  parseJSONMarkup(e, t) {
    const i = Yt.parseJSONMarkup(e), s = i.selectors, r = this.rootSelector;
    if (t && r) {
      if (s[r])
        throw new Error("Invalid root selector");
      s[r] = t;
    }
    return i;
  }
  can(e) {
    let t = this.graph.options.interacting;
    if (typeof t == "function" && (t = Ze(t, this.graph, this)), typeof t == "object") {
      let i = t[e];
      return typeof i == "function" && (i = Ze(i, this.graph, this)), i !== !1;
    }
    return typeof t == "boolean" ? t : !1;
  }
  cleanCache() {
    return this.cache.clean(), this;
  }
  getCache(e) {
    return this.cache.get(e);
  }
  getDataOfElement(e) {
    return this.cache.getData(e);
  }
  getMatrixOfElement(e) {
    return this.cache.getMatrix(e);
  }
  getShapeOfElement(e) {
    return this.cache.getShape(e);
  }
  getBoundingRectOfElement(e) {
    return this.cache.getBoundingRect(e);
  }
  getBBoxOfElement(e) {
    const t = this.getBoundingRectOfElement(e), i = this.getMatrixOfElement(e), s = this.getRootRotatedMatrix(), r = this.getRootTranslatedMatrix();
    return It.transformRectangle(t, r.multiply(s).multiply(i));
  }
  getUnrotatedBBoxOfElement(e) {
    const t = this.getBoundingRectOfElement(e), i = this.getMatrixOfElement(e), s = this.getRootTranslatedMatrix();
    return It.transformRectangle(t, s.multiply(i));
  }
  getBBox(e = {}) {
    let t;
    if (e.useCellGeometry) {
      const i = this.cell, s = i.isNode() ? i.getAngle() : 0;
      t = i.getBBox().bbox(s);
    } else
      t = this.getBBoxOfElement(this.container);
    return this.graph.coord.localToGraphRect(t);
  }
  getRootTranslatedMatrix() {
    const e = this.cell, t = e.isNode() ? e.getPosition() : { x: 0, y: 0 };
    return ai().translate(t.x, t.y);
  }
  getRootRotatedMatrix() {
    let e = ai();
    const t = this.cell, i = t.isNode() ? t.getAngle() : 0;
    if (i) {
      const s = t.getBBox(), r = s.width / 2, o = s.height / 2;
      e = e.translate(r, o).rotate(i).translate(-r, -o);
    }
    return e;
  }
  findMagnet(e = this.container) {
    return this.findByAttr("magnet", e);
  }
  updateAttrs(e, t, i = {}) {
    i.rootBBox == null && (i.rootBBox = new ye()), i.selectors == null && (i.selectors = this.selectors), this.attr.update(e, t, i);
  }
  isEdgeElement(e) {
    return this.cell.isEdge() && (e == null || e === this.container);
  }
  // #region highlight
  prepareHighlight(e, t = {}) {
    const i = e || this.container;
    return t.partial = i === this.container, i;
  }
  highlight(e, t = {}) {
    const i = this.prepareHighlight(e, t);
    return this.notify("cell:highlight", {
      magnet: i,
      options: t,
      view: this,
      cell: this.cell
    }), this.isEdgeView() ? this.notify("edge:highlight", {
      magnet: i,
      options: t,
      view: this,
      edge: this.cell,
      cell: this.cell
    }) : this.isNodeView() && this.notify("node:highlight", {
      magnet: i,
      options: t,
      view: this,
      node: this.cell,
      cell: this.cell
    }), this;
  }
  unhighlight(e, t = {}) {
    const i = this.prepareHighlight(e, t);
    return this.notify("cell:unhighlight", {
      magnet: i,
      options: t,
      view: this,
      cell: this.cell
    }), this.isNodeView() ? this.notify("node:unhighlight", {
      magnet: i,
      options: t,
      view: this,
      node: this.cell,
      cell: this.cell
    }) : this.isEdgeView() && this.notify("edge:unhighlight", {
      magnet: i,
      options: t,
      view: this,
      edge: this.cell,
      cell: this.cell
    }), this;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  notifyUnhighlight(e, t) {
  }
  // #endregion
  getEdgeTerminal(e, t, i, s, r) {
    const o = this.cell, l = this.findAttr("port", e), a = e.getAttribute("data-selector"), c = { cell: o.id };
    return a != null && (c.magnet = a), l != null ? (c.port = l, o.isNode() && !o.hasPort(l) && a == null && (c.selector = this.getSelector(e))) : a == null && this.container !== e && (c.selector = this.getSelector(e)), c;
  }
  getMagnetFromEdgeTerminal(e) {
    const t = this.cell, i = this.container, s = e.port;
    let r = e.magnet, o;
    return s != null && t.isNode() && t.hasPort(s) ? o = this.findPortElem(s, r) || i : (r || (r = e.selector), !r && s != null && (r = `[port="${s}"]`), o = this.findOne(r, i, this.selectors)), o;
  }
  hasTools(e) {
    const t = this.tools;
    return t == null ? !1 : e == null ? !0 : t.name === e;
  }
  addTools(e) {
    if (this.removeTools(), e) {
      if (!this.can("toolsAddable"))
        return this;
      const t = In.isToolsView(e) ? e : new In(e);
      this.tools = t, t.config({ view: this }), t.mount();
    }
    return this;
  }
  updateTools(e = {}) {
    return this.tools && this.tools.update(e), this;
  }
  removeTools() {
    return this.tools && (this.tools.remove(), this.tools = null), this;
  }
  hideTools() {
    return this.tools && this.tools.hide(), this;
  }
  showTools() {
    return this.tools && this.tools.show(), this;
  }
  renderTools() {
    const e = this.cell.getTools();
    return this.addTools(e), this;
  }
  notify(e, t) {
    return this.trigger(e, t), this.graph.trigger(e, t), this;
  }
  getEventArgs(e, t, i) {
    const s = this, r = s.cell;
    return t == null || i == null ? { e, view: s, cell: r } : { e, x: t, y: i, view: s, cell: r };
  }
  onClick(e, t, i) {
    this.notify("cell:click", this.getEventArgs(e, t, i));
  }
  onDblClick(e, t, i) {
    this.notify("cell:dblclick", this.getEventArgs(e, t, i));
  }
  onContextMenu(e, t, i) {
    this.notify("cell:contextmenu", this.getEventArgs(e, t, i));
  }
  onMouseDown(e, t, i) {
    this.cell.model && (this.cachedModelForMouseEvent = this.cell.model, this.cachedModelForMouseEvent.startBatch("mouse")), this.notify("cell:mousedown", this.getEventArgs(e, t, i));
  }
  onMouseUp(e, t, i) {
    this.notify("cell:mouseup", this.getEventArgs(e, t, i)), this.cachedModelForMouseEvent && (this.cachedModelForMouseEvent.stopBatch("mouse", { cell: this.cell }), this.cachedModelForMouseEvent = null);
  }
  onMouseMove(e, t, i) {
    this.notify("cell:mousemove", this.getEventArgs(e, t, i));
  }
  onMouseOver(e) {
    this.notify("cell:mouseover", this.getEventArgs(e));
  }
  onMouseOut(e) {
    this.notify("cell:mouseout", this.getEventArgs(e));
  }
  onMouseEnter(e) {
    this.notify("cell:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    this.notify("cell:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, i, s) {
    this.notify("cell:mousewheel", Object.assign({ delta: s }, this.getEventArgs(e, t, i)));
  }
  onCustomEvent(e, t, i, s) {
    this.notify("cell:customevent", Object.assign({ name: t }, this.getEventArgs(e, i, s))), this.notify(t, Object.assign({}, this.getEventArgs(e, i, s)));
  }
  onMagnetMouseDown(e, t, i, s) {
  }
  onMagnetDblClick(e, t, i, s) {
  }
  onMagnetContextMenu(e, t, i, s) {
  }
  onLabelMouseDown(e, t, i) {
  }
  checkMouseleave(e) {
    const t = this.getEventTarget(e, { fromPoint: !0 }), i = this.graph.findViewByElem(t);
    i !== this && (this.onMouseLeave(e), i && i.onMouseEnter(e));
  }
  dispose() {
    this.cell.off("changed", this.onCellChanged, this);
  }
}
En.defaults = {
  isSvgElement: !0,
  rootSelector: "root",
  priority: 0,
  bootstrap: [],
  actions: {}
};
Aie([
  En.dispose()
], En.prototype, "dispose", null);
(function(n) {
  n.Flag = QM, n.Attr = BM;
})(En || (En = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNodeView == "function" && typeof s.isEdgeView == "function" && typeof s.confirmUpdate == "function";
  }
  n.isCellView = e;
})(En || (En = {}));
(function(n) {
  function e(i) {
    return function(s) {
      s.config({ priority: i });
    };
  }
  n.priority = e;
  function t(i) {
    return function(s) {
      s.config({ bootstrap: i });
    };
  }
  n.bootstrap = t;
})(En || (En = {}));
(function(n) {
  n.registry = An.create({
    type: "view"
  });
})(En || (En = {}));
class In extends Rt {
  get name() {
    return this.options.name;
  }
  get graph() {
    return this.cellView.graph;
  }
  get cell() {
    return this.cellView.cell;
  }
  get [Symbol.toStringTag]() {
    return In.toStringTag;
  }
  constructor(e = {}) {
    super(), this.svgContainer = this.createContainer(!0, e), this.htmlContainer = this.createContainer(!1, e), this.config(e);
  }
  createContainer(e, t) {
    const i = e ? Rt.createElement("g", !0) : Rt.createElement("div", !1);
    return Ye(i, this.prefixClassName("cell-tools")), t.className && Ye(i, t.className), i;
  }
  config(e) {
    if (this.options = Object.assign(Object.assign({}, this.options), e), !En.isCellView(e.view) || e.view === this.cellView)
      return this;
    this.cellView = e.view, this.cell.isEdge() ? (Ye(this.svgContainer, this.prefixClassName("edge-tools")), Ye(this.htmlContainer, this.prefixClassName("edge-tools"))) : this.cell.isNode() && (Ye(this.svgContainer, this.prefixClassName("node-tools")), Ye(this.htmlContainer, this.prefixClassName("node-tools"))), this.svgContainer.setAttribute("data-cell-id", this.cell.id), this.htmlContainer.setAttribute("data-cell-id", this.cell.id), this.name && (this.svgContainer.setAttribute("data-tools-name", this.name), this.htmlContainer.setAttribute("data-tools-name", this.name));
    const t = this.options.items;
    if (!Array.isArray(t))
      return this;
    this.tools = [];
    const i = [];
    t.forEach((s) => {
      In.ToolItem.isToolItem(s) ? s.name === "vertices" ? i.unshift(s) : i.push(s) : (typeof s == "object" ? s.name : s) === "vertices" ? i.unshift(s) : i.push(s);
    });
    for (let s = 0; s < i.length; s += 1) {
      const r = i[s];
      let o;
      if (In.ToolItem.isToolItem(r))
        o = r;
      else {
        const l = typeof r == "object" ? r.name : r, a = typeof r == "object" ? r.args || {} : {};
        if (l) {
          if (this.cell.isNode()) {
            const c = Cu.registry.get(l);
            if (c)
              o = new c(a);
            else
              return Cu.registry.onNotFound(l);
          } else if (this.cell.isEdge()) {
            const c = ku.registry.get(l);
            if (c)
              o = new c(a);
            else
              return ku.registry.onNotFound(l);
          }
        }
      }
      o && (o.config(this.cellView, this), o.render(), (o.options.isSVGElement !== !1 ? this.svgContainer : this.htmlContainer).appendChild(o.container), this.tools.push(o));
    }
    return this;
  }
  update(e = {}) {
    const t = this.tools;
    return t && t.forEach((i) => {
      e.toolId !== i.cid && i.isVisible() && i.update();
    }), this;
  }
  focus(e) {
    const t = this.tools;
    return t && t.forEach((i) => {
      e === i ? i.show() : i.hide();
    }), this;
  }
  blur(e) {
    const t = this.tools;
    return t && t.forEach((i) => {
      i !== e && !i.isVisible() && (i.show(), i.update());
    }), this;
  }
  hide() {
    return this.focus(null);
  }
  show() {
    return this.blur(null);
  }
  remove() {
    const e = this.tools;
    return e && (e.forEach((t) => t.remove()), this.tools = null), no(this.svgContainer), no(this.htmlContainer), super.remove();
  }
  mount() {
    const e = this.tools, t = this.cellView;
    if (t && e) {
      const i = e.some((r) => r.options.isSVGElement !== !1), s = e.some((r) => r.options.isSVGElement === !1);
      i && (this.options.local ? t.container : t.graph.view.decorator).appendChild(this.svgContainer), s && this.graph.container.appendChild(this.htmlContainer);
    }
    return this;
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && s.graph != null && s.cell != null && typeof s.config == "function" && typeof s.update == "function" && typeof s.focus == "function" && typeof s.blur == "function" && typeof s.show == "function" && typeof s.hide == "function";
  }
  n.isToolsView = e;
})(In || (In = {}));
(function(n) {
  class e extends Rt {
    static getDefaults() {
      return this.defaults;
    }
    static config(i) {
      this.defaults = this.getOptions(i);
    }
    static getOptions(i) {
      return On(Bt(this.getDefaults()), i);
    }
    get graph() {
      return this.cellView.graph;
    }
    get cell() {
      return this.cellView.cell;
    }
    get name() {
      return this.options.name;
    }
    get [Symbol.toStringTag]() {
      return e.toStringTag;
    }
    constructor(i = {}) {
      super(), this.visible = !0, this.options = this.getOptions(i), this.container = Rt.createElement(this.options.tagName || "g", this.options.isSVGElement !== !1), Ye(this.container, this.prefixClassName("cell-tool")), typeof this.options.className == "string" && Ye(this.container, this.options.className), this.init();
    }
    init() {
    }
    getOptions(i) {
      return this.constructor.getOptions(i);
    }
    delegateEvents() {
      return this.options.events && super.delegateEvents(this.options.events), this;
    }
    config(i, s) {
      return this.cellView = i, this.parent = s, this.stamp(this.container), this.cell.isEdge() ? Ye(this.container, this.prefixClassName("edge-tool")) : this.cell.isNode() && Ye(this.container, this.prefixClassName("node-tool")), this.name && this.container.setAttribute("data-tool-name", this.name), this.delegateEvents(), this;
    }
    render() {
      this.empty();
      const i = this.options.markup;
      if (i) {
        const s = Yt.parseJSONMarkup(i);
        this.container.appendChild(s.fragment), this.childNodes = s.selectors;
      }
      return this.onRender(), this;
    }
    onRender() {
    }
    update() {
      return this;
    }
    stamp(i) {
      i && i.setAttribute("data-cell-id", this.cellView.cell.id);
    }
    show() {
      return this.container.style.display = "", this.visible = !0, this;
    }
    hide() {
      return this.container.style.display = "none", this.visible = !1, this;
    }
    isVisible() {
      return this.visible;
    }
    focus() {
      const i = this.options.focusOpacity;
      return i != null && Number.isFinite(i) && (this.container.style.opacity = `${i}`), this.parent.focus(this), this;
    }
    blur() {
      return this.container.style.opacity = "", this.parent.blur(this), this;
    }
    guard(i) {
      return this.graph == null || this.cellView == null ? !0 : this.graph.view.guard(i, this.cellView);
    }
  }
  e.defaults = {
    isSVGElement: !0,
    tagName: "g"
  }, n.ToolItem = e, function(t) {
    let i = 0;
    function s(o) {
      return o ? ow(o) : (i += 1, `CustomTool${i}`);
    }
    function r(o) {
      const l = sw(s(o.name), this);
      return l.config(o), l;
    }
    t.define = r;
  }(e = n.ToolItem || (n.ToolItem = {})), function(t) {
    t.toStringTag = `X6.${t.name}`;
    function i(s) {
      if (s == null)
        return !1;
      if (s instanceof t)
        return !0;
      const r = s[Symbol.toStringTag], o = s;
      return (r == null || r === t.toStringTag) && o.graph != null && o.cell != null && typeof o.config == "function" && typeof o.update == "function" && typeof o.focus == "function" && typeof o.blur == "function" && typeof o.show == "function" && typeof o.hide == "function" && typeof o.isVisible == "function";
    }
    t.isToolItem = i;
  }(e = n.ToolItem || (n.ToolItem = {}));
})(In || (In = {}));
const Tie = (n) => n;
function lk(n, e) {
  return e === 0 ? "0%" : `${Math.round(n / e * 100)}%`;
}
function zM(n) {
  return (t, i, s, r) => i.isEdgeElement(s) ? Mie(n, t, i, s, r) : _ie(n, t, i, s, r);
}
function _ie(n, e, t, i, s) {
  const r = t.cell, o = r.getAngle(), l = t.getUnrotatedBBoxOfElement(i), a = r.getBBox().getCenter(), c = z.create(s).rotate(o, a);
  let u = c.x - l.x, h = c.y - l.y;
  return n && (u = lk(u, l.width), h = lk(h, l.height)), e.anchor = {
    name: "topLeft",
    args: {
      dx: u,
      dy: h,
      rotate: !0
    }
  }, e;
}
function Mie(n, e, t, i, s) {
  const r = t.getConnection();
  if (!r)
    return e;
  const o = r.closestPointLength(s);
  if (n) {
    const l = r.length();
    e.anchor = {
      name: "ratio",
      args: {
        ratio: o / l
      }
    };
  } else
    e.anchor = {
      name: "length",
      args: {
        length: o
      }
    };
  return e;
}
const Rie = zM(!0), Nie = zM(!1), Die = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  noop: Tie,
  pinAbsolute: Nie,
  pinRelative: Rie
}, Symbol.toStringTag, { value: "Module" }));
var Ly;
(function(n) {
  n.presets = Die, n.registry = An.create({
    type: "connection strategy"
  }), n.registry.register(n.presets, !0);
})(Ly || (Ly = {}));
function jM(n, e, t, i) {
  return Ze(Ly.presets.pinRelative, this.graph, {}, e, t, n, this.cell, i, {}).anchor;
}
function VM(n, e) {
  return e ? n.cell.getBBox() : n.cell.isEdge() ? n.getConnection().bbox() : n.getUnrotatedBBoxOfElement(n.container);
}
class Ll extends In.ToolItem {
  onRender() {
    Ye(this.container, this.prefixClassName("cell-tool-button")), this.update();
  }
  update() {
    return this.updatePosition(), this;
  }
  updatePosition() {
    const t = this.cellView.cell.isEdge() ? this.getEdgeMatrix() : this.getNodeMatrix();
    bu(this.container, t, { absolute: !0 });
  }
  getNodeMatrix() {
    const e = this.cellView, t = this.options;
    let { x: i = 0, y: s = 0 } = t;
    const { offset: r, useCellGeometry: o, rotate: l } = t;
    let a = VM(e, o);
    const c = e.cell.getAngle();
    l || (a = a.bbox(c));
    let u = 0, h = 0;
    typeof r == "number" ? (u = r, h = r) : typeof r == "object" && (u = r.x, h = r.y), i = br(i, a.width), s = br(s, a.height);
    let d = ai().translate(a.x + a.width / 2, a.y + a.height / 2);
    return l && (d = d.rotate(c)), d = d.translate(i + u - a.width / 2, s + h - a.height / 2), d;
  }
  getEdgeMatrix() {
    const e = this.cellView, t = this.options, { offset: i = 0, distance: s = 0, rotate: r } = t;
    let o, l, a;
    const c = br(s, 1);
    c >= 0 && c <= 1 ? o = e.getTangentAtRatio(c) : o = e.getTangentAtLength(c), o ? (l = o.start, a = o.vector().vectorAngle(new z(1, 0)) || 0) : (l = e.getConnection().start, a = 0);
    let u = ai().translate(l.x, l.y).rotate(a);
    return typeof i == "object" ? u = u.translate(i.x || 0, i.y || 0) : u = u.translate(0, i), r || (u = u.rotate(-a)), u;
  }
  onMouseDown(e) {
    if (this.guard(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const t = this.options.onClick;
    typeof t == "function" && Ze(t, this.cellView, {
      e,
      view: this.cellView,
      cell: this.cellView.cell,
      btn: this
    });
  }
}
(function(n) {
  n.config({
    name: "button",
    useCellGeometry: !0,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    }
  });
})(Ll || (Ll = {}));
(function(n) {
  n.Remove = n.define({
    name: "button-remove",
    markup: [
      {
        tagName: "circle",
        selector: "button",
        attrs: {
          r: 7,
          fill: "#FF1D00",
          cursor: "pointer"
        }
      },
      {
        tagName: "path",
        selector: "icon",
        attrs: {
          d: "M -3 -3 3 3 M -3 3 3 -3",
          fill: "none",
          stroke: "#FFFFFF",
          "stroke-width": 2,
          "pointer-events": "none"
        }
      }
    ],
    distance: 60,
    offset: 0,
    useCellGeometry: !0,
    onClick({ view: e, btn: t }) {
      t.parent.remove(), e.cell.remove({ ui: !0, toolId: t.cid });
    }
  });
})(Ll || (Ll = {}));
var Lie = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class Gg extends In.ToolItem {
  onRender() {
    if (Ye(this.container, this.prefixClassName("cell-tool-boundary")), this.options.attrs) {
      const e = this.options.attrs, { class: t } = e, i = Lie(e, ["class"]);
      St(this.container, _d(i)), t && Ye(this.container, t);
    }
    this.update();
  }
  update() {
    const e = this.cellView, t = this.options, { useCellGeometry: i, rotate: s } = t, r = ja(t.padding);
    let o = VM(e, i).moveAndExpand({
      x: -r.left,
      y: -r.top,
      width: r.left + r.right,
      height: r.top + r.bottom
    });
    const l = e.cell;
    if (l.isNode()) {
      const a = l.getAngle();
      if (a)
        if (s) {
          const c = l.getBBox().getCenter();
          $y(this.container, a, c.x, c.y, {
            absolute: !0
          });
        } else
          o = o.bbox(a);
    }
    return St(this.container, o.toJSON()), this;
  }
}
(function(n) {
  n.config({
    name: "boundary",
    tagName: "rect",
    padding: 10,
    useCellGeometry: !0,
    attrs: {
      fill: "none",
      stroke: "#333",
      "stroke-width": 0.5,
      "stroke-dasharray": "5, 5",
      "pointer-events": "none"
    }
  });
})(Gg || (Gg = {}));
class Ld extends In.ToolItem {
  constructor() {
    super(...arguments), this.handles = [];
  }
  get vertices() {
    return this.cellView.cell.getVertices();
  }
  onRender() {
    return this.addClass(this.prefixClassName("edge-tool-vertices")), this.options.addable && this.updatePath(), this.resetHandles(), this.renderHandles(), this;
  }
  update() {
    return this.vertices.length === this.handles.length ? this.updateHandles() : (this.resetHandles(), this.renderHandles()), this.options.addable && this.updatePath(), this;
  }
  resetHandles() {
    const e = this.handles;
    this.handles = [], e && e.forEach((t) => {
      this.stopHandleListening(t), t.remove();
    });
  }
  renderHandles() {
    const e = this.vertices;
    for (let t = 0, i = e.length; t < i; t += 1) {
      const s = e[t], r = this.options.createHandle, o = this.options.processHandle, l = r({
        index: t,
        graph: this.graph,
        guard: (a) => this.guard(a),
        attrs: this.options.attrs || {}
      });
      o && o(l), l.updatePosition(s.x, s.y), this.stamp(l.container), this.container.appendChild(l.container), this.handles.push(l), this.startHandleListening(l);
    }
  }
  updateHandles() {
    const e = this.vertices;
    for (let t = 0, i = e.length; t < i; t += 1) {
      const s = e[t], r = this.handles[t];
      r && r.updatePosition(s.x, s.y);
    }
  }
  updatePath() {
    const e = this.childNodes.connection;
    e && e.setAttribute("d", this.cellView.getConnectionPathData());
  }
  startHandleListening(e) {
    const t = this.cellView;
    t.can("vertexMovable") && (e.on("change", this.onHandleChange, this), e.on("changing", this.onHandleChanging, this), e.on("changed", this.onHandleChanged, this)), t.can("vertexDeletable") && e.on("remove", this.onHandleRemove, this);
  }
  stopHandleListening(e) {
    const t = this.cellView;
    t.can("vertexMovable") && (e.off("change", this.onHandleChange, this), e.off("changing", this.onHandleChanging, this), e.off("changed", this.onHandleChanged, this)), t.can("vertexDeletable") && e.off("remove", this.onHandleRemove, this);
  }
  getNeighborPoints(e) {
    const t = this.cellView, i = this.vertices, s = e > 0 ? i[e - 1] : t.sourceAnchor, r = e < i.length - 1 ? i[e + 1] : t.targetAnchor;
    return {
      prev: z.create(s),
      next: z.create(r)
    };
  }
  getMouseEventArgs(e) {
    const t = this.normalizeEvent(e), { x: i, y: s } = this.graph.snapToGrid(t.clientX, t.clientY);
    return { e: t, x: i, y: s };
  }
  onHandleChange({ e }) {
    this.focus();
    const t = this.cellView;
    if (t.cell.startBatch("move-vertex", { ui: !0, toolId: this.cid }), !this.options.stopPropagation) {
      const { e: i, x: s, y: r } = this.getMouseEventArgs(e);
      this.eventData(i, { start: { x: s, y: r } }), t.notifyMouseDown(i, s, r);
    }
  }
  onHandleChanging({ handle: e, e: t }) {
    const i = this.cellView, s = e.options.index, { e: r, x: o, y: l } = this.getMouseEventArgs(t), a = { x: o, y: l };
    this.snapVertex(a, s), i.cell.setVertexAt(s, a, { ui: !0, toolId: this.cid }), e.updatePosition(a.x, a.y), this.options.stopPropagation || i.notifyMouseMove(r, o, l);
  }
  stopBatch(e) {
    this.cell.stopBatch("move-vertex", { ui: !0, toolId: this.cid }), e && this.cell.stopBatch("add-vertex", { ui: !0, toolId: this.cid });
  }
  onHandleChanged({ e }) {
    const t = this.options, i = this.cellView;
    if (t.addable && this.updatePath(), !t.removeRedundancies) {
      this.stopBatch(this.eventData(e).vertexAdded);
      return;
    }
    i.removeRedundantLinearVertices({
      ui: !0,
      toolId: this.cid
    }) && this.render(), this.blur(), this.stopBatch(this.eventData(e).vertexAdded);
    const { e: r, x: o, y: l } = this.getMouseEventArgs(e);
    if (!this.options.stopPropagation) {
      i.notifyMouseUp(r, o, l);
      const { start: a } = this.eventData(r);
      if (a) {
        const { x: c, y: u } = a;
        c === o && u === l && i.onClick(r, o, l);
      }
    }
    i.checkMouseleave(r), t.onChanged && t.onChanged({ edge: i.cell, edgeView: i });
  }
  snapVertex(e, t) {
    const i = this.options.snapRadius || 0;
    if (i > 0) {
      const s = this.getNeighborPoints(t), r = s.prev, o = s.next;
      Math.abs(e.x - r.x) < i ? e.x = r.x : Math.abs(e.x - o.x) < i && (e.x = o.x), Math.abs(e.y - r.y) < i ? e.y = s.prev.y : Math.abs(e.y - o.y) < i && (e.y = o.y);
    }
  }
  onHandleRemove({ handle: e, e: t }) {
    if (this.options.removable) {
      const i = e.options.index, s = this.cellView;
      s.cell.removeVertexAt(i, { ui: !0 }), this.options.addable && this.updatePath(), s.checkMouseleave(this.normalizeEvent(t));
    }
  }
  allowAddVertex(e) {
    const t = this.guard(e), i = this.options.addable && this.cellView.can("vertexAddable"), s = this.options.modifiers ? Rl.isMatch(e, this.options.modifiers) : !0;
    return !t && i && s;
  }
  onPathMouseDown(e) {
    const t = this.cellView;
    if (!this.allowAddVertex(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const i = this.normalizeEvent(e), s = this.graph.snapToGrid(i.clientX, i.clientY).toJSON();
    t.cell.startBatch("add-vertex", { ui: !0, toolId: this.cid });
    const r = t.getVertexIndex(s.x, s.y);
    this.snapVertex(s, r), t.cell.insertVertex(s, r, {
      ui: !0,
      toolId: this.cid
    }), this.render();
    const o = this.handles[r];
    this.eventData(i, { vertexAdded: !0 }), o.onMouseDown(i);
  }
  onRemove() {
    this.resetHandles();
  }
}
(function(n) {
  class e extends Rt {
    get graph() {
      return this.options.graph;
    }
    constructor(i) {
      super(), this.options = i, this.render(), this.delegateEvents({
        mousedown: "onMouseDown",
        touchstart: "onMouseDown",
        dblclick: "onDoubleClick"
      });
    }
    render() {
      this.container = Rt.createElement("circle", !0);
      const i = this.options.attrs;
      if (typeof i == "function") {
        const s = n.getDefaults();
        this.setAttrs(Object.assign(Object.assign({}, s.attrs), i(this)));
      } else
        this.setAttrs(i);
      this.addClass(this.prefixClassName("edge-tool-vertex"));
    }
    updatePosition(i, s) {
      this.setAttrs({ cx: i, cy: s });
    }
    onMouseDown(i) {
      this.options.guard(i) || (i.stopPropagation(), i.preventDefault(), this.graph.view.undelegateEvents(), this.delegateDocumentEvents({
        mousemove: "onMouseMove",
        touchmove: "onMouseMove",
        mouseup: "onMouseUp",
        touchend: "onMouseUp",
        touchcancel: "onMouseUp"
      }, i.data), this.emit("change", { e: i, handle: this }));
    }
    onMouseMove(i) {
      this.emit("changing", { e: i, handle: this });
    }
    onMouseUp(i) {
      this.emit("changed", { e: i, handle: this }), this.undelegateDocumentEvents(), this.graph.view.delegateEvents();
    }
    onDoubleClick(i) {
      this.emit("remove", { e: i, handle: this });
    }
  }
  n.Handle = e;
})(Ld || (Ld = {}));
(function(n) {
  const e = Ks.prefix("edge-tool-vertex-path");
  n.config({
    name: "vertices",
    snapRadius: 20,
    addable: !0,
    removable: !0,
    removeRedundancies: !0,
    stopPropagation: !0,
    attrs: {
      r: 6,
      fill: "#333",
      stroke: "#fff",
      cursor: "move",
      "stroke-width": 2
    },
    createHandle: (t) => new n.Handle(t),
    markup: [
      {
        tagName: "path",
        selector: "connection",
        className: e,
        attrs: {
          fill: "none",
          stroke: "transparent",
          "stroke-width": 10,
          cursor: "pointer"
        }
      }
    ],
    events: {
      [`mousedown .${e}`]: "onPathMouseDown",
      [`touchstart .${e}`]: "onPathMouseDown"
    }
  });
})(Ld || (Ld = {}));
class Id extends In.ToolItem {
  constructor() {
    super(...arguments), this.handles = [];
  }
  get vertices() {
    return this.cellView.cell.getVertices();
  }
  update() {
    return this.render(), this;
  }
  onRender() {
    Ye(this.container, this.prefixClassName("edge-tool-segments")), this.resetHandles();
    const e = this.cellView, t = [...this.vertices];
    t.unshift(e.sourcePoint), t.push(e.targetPoint);
    for (let i = 0, s = t.length; i < s - 1; i += 1) {
      const r = t[i], o = t[i + 1], l = this.renderHandle(r, o, i);
      this.stamp(l.container), this.handles.push(l);
    }
    return this;
  }
  renderHandle(e, t, i) {
    const s = this.options.createHandle({
      index: i,
      graph: this.graph,
      guard: (r) => this.guard(r),
      attrs: this.options.attrs || {}
    });
    return this.options.processHandle && this.options.processHandle(s), this.updateHandle(s, e, t), this.container.appendChild(s.container), this.startHandleListening(s), s;
  }
  startHandleListening(e) {
    e.on("change", this.onHandleChange, this), e.on("changing", this.onHandleChanging, this), e.on("changed", this.onHandleChanged, this);
  }
  stopHandleListening(e) {
    e.off("change", this.onHandleChange, this), e.off("changing", this.onHandleChanging, this), e.off("changed", this.onHandleChanged, this);
  }
  resetHandles() {
    const e = this.handles;
    this.handles = [], e && e.forEach((t) => {
      this.stopHandleListening(t), t.remove();
    });
  }
  shiftHandleIndexes(e) {
    const t = this.handles;
    for (let i = 0, s = t.length; i < s; i += 1)
      t[i].options.index += e;
  }
  resetAnchor(e, t) {
    const i = this.cellView.cell, s = {
      ui: !0,
      toolId: this.cid
    };
    t ? i.prop([e, "anchor"], t, s) : i.removeProp([e, "anchor"], s);
  }
  snapHandle(e, t, i) {
    const s = e.options.axis, r = e.options.index, a = this.cellView.cell.getVertices(), c = a[r - 2] || i.sourceAnchor, u = a[r + 1] || i.targetAnchor, h = this.options.snapRadius;
    return Math.abs(t[s] - c[s]) < h ? t[s] = c[s] : Math.abs(t[s] - u[s]) < h && (t[s] = u[s]), t;
  }
  onHandleChanging({ handle: e, e: t }) {
    const i = this.graph, s = this.options, r = this.cellView, o = s.anchor, l = e.options.axis, a = e.options.index - 1, c = this.getEventData(t), u = this.normalizeEvent(t), h = i.snapToGrid(u.clientX, u.clientY), d = this.snapHandle(e, h.clone(), c), f = Bt(this.vertices);
    let p = f[a], g = f[a + 1];
    const m = r.sourceView, v = r.sourceBBox;
    let O = !1, b = !1;
    if (p ? a === 0 ? v.containsPoint(p) ? (f.shift(), this.shiftHandleIndexes(-1), O = !0) : (p[l] = d[l], b = !0) : p[l] = d[l] : (p = r.sourceAnchor.toJSON(), p[l] = d[l], v.containsPoint(p) ? O = !0 : (f.unshift(p), this.shiftHandleIndexes(1), b = !0)), typeof o == "function" && m) {
      if (O) {
        const k = c.sourceAnchor.clone();
        k[l] = d[l];
        const E = Ze(o, r, k, m, r.sourceMagnet || m.container, "source", r, this);
        this.resetAnchor("source", E);
      }
      b && this.resetAnchor("source", c.sourceAnchorDef);
    }
    const w = r.targetView, x = r.targetBBox;
    let S = !1, C = !1;
    if (g ? a === f.length - 2 ? x.containsPoint(g) ? (f.pop(), S = !0) : (g[l] = d[l], C = !0) : g[l] = d[l] : (g = r.targetAnchor.toJSON(), g[l] = d[l], x.containsPoint(g) ? S = !0 : (f.push(g), C = !0)), typeof o == "function" && w) {
      if (S) {
        const k = c.targetAnchor.clone();
        k[l] = d[l];
        const E = Ze(o, r, k, w, r.targetMagnet || w.container, "target", r, this);
        this.resetAnchor("target", E);
      }
      C && this.resetAnchor("target", c.targetAnchorDef);
    }
    z.equalPoints(f, this.vertices) || this.cellView.cell.setVertices(f, { ui: !0, toolId: this.cid }), this.updateHandle(e, p, g, 0), s.stopPropagation || r.notifyMouseMove(u, h.x, h.y);
  }
  onHandleChange({ handle: e, e: t }) {
    const i = this.options, s = this.handles, r = this.cellView, o = e.options.index;
    if (Array.isArray(s)) {
      for (let l = 0, a = s.length; l < a; l += 1)
        l !== o && s[l].hide();
      if (this.focus(), this.setEventData(t, {
        sourceAnchor: r.sourceAnchor.clone(),
        targetAnchor: r.targetAnchor.clone(),
        sourceAnchorDef: Bt(this.cell.prop(["source", "anchor"])),
        targetAnchorDef: Bt(this.cell.prop(["target", "anchor"]))
      }), this.cell.startBatch("move-segment", { ui: !0, toolId: this.cid }), !i.stopPropagation) {
        const l = this.normalizeEvent(t), a = this.graph.snapToGrid(l.clientX, l.clientY);
        r.notifyMouseDown(l, a.x, a.y);
      }
    }
  }
  onHandleChanged({ e }) {
    const t = this.options, i = this.cellView;
    t.removeRedundancies && i.removeRedundantLinearVertices({ ui: !0, toolId: this.cid });
    const s = this.normalizeEvent(e), r = this.graph.snapToGrid(s.clientX, s.clientY);
    this.render(), this.blur(), this.cell.stopBatch("move-segment", { ui: !0, toolId: this.cid }), t.stopPropagation || i.notifyMouseUp(s, r.x, r.y), i.checkMouseleave(s), t.onChanged && t.onChanged({ edge: i.cell, edgeView: i });
  }
  updateHandle(e, t, i, s = 0) {
    const r = this.options.precision || 0, o = Math.abs(t.x - i.x) < r, l = Math.abs(t.y - i.y) < r;
    if (o || l) {
      const a = new Ie(t, i);
      if (a.length() < this.options.threshold)
        e.hide();
      else {
        const u = a.getCenter(), h = o ? "x" : "y";
        u[h] += s || 0;
        const d = a.vector().vectorAngle(new z(1, 0));
        e.updatePosition(u.x, u.y, d, this.cellView), e.show(), e.options.axis = h;
      }
    } else
      e.hide();
  }
  onRemove() {
    this.resetHandles();
  }
}
(function(n) {
  class e extends Rt {
    constructor(i) {
      super(), this.options = i, this.render(), this.delegateEvents({
        mousedown: "onMouseDown",
        touchstart: "onMouseDown"
      });
    }
    render() {
      this.container = Rt.createElement("rect", !0);
      const i = this.options.attrs;
      if (typeof i == "function") {
        const s = n.getDefaults();
        this.setAttrs(Object.assign(Object.assign({}, s.attrs), i(this)));
      } else
        this.setAttrs(i);
      this.addClass(this.prefixClassName("edge-tool-segment"));
    }
    updatePosition(i, s, r, o) {
      const l = o.getClosestPoint(new z(i, s)) || new z(i, s);
      let a = ai().translate(l.x, l.y);
      if (l.equals({ x: i, y: s }))
        a = a.rotate(r);
      else {
        let u = new Ie(i, s, l.x, l.y).vector().vectorAngle(new z(1, 0));
        u !== 0 && (u += 90), a = a.rotate(u);
      }
      this.setAttrs({
        transform: oh(a),
        cursor: r % 180 === 0 ? "row-resize" : "col-resize"
      });
    }
    onMouseDown(i) {
      this.options.guard(i) || (this.trigger("change", { e: i, handle: this }), i.stopPropagation(), i.preventDefault(), this.options.graph.view.undelegateEvents(), this.delegateDocumentEvents({
        mousemove: "onMouseMove",
        touchmove: "onMouseMove",
        mouseup: "onMouseUp",
        touchend: "onMouseUp",
        touchcancel: "onMouseUp"
      }, i.data));
    }
    onMouseMove(i) {
      this.emit("changing", { e: i, handle: this });
    }
    onMouseUp(i) {
      this.emit("changed", { e: i, handle: this }), this.undelegateDocumentEvents(), this.options.graph.view.delegateEvents();
    }
    show() {
      this.container.style.display = "";
    }
    hide() {
      this.container.style.display = "none";
    }
  }
  n.Handle = e;
})(Id || (Id = {}));
(function(n) {
  n.config({
    name: "segments",
    precision: 0.5,
    threshold: 40,
    snapRadius: 10,
    stopPropagation: !0,
    removeRedundancies: !0,
    attrs: {
      width: 20,
      height: 8,
      x: -10,
      y: -4,
      rx: 4,
      ry: 4,
      fill: "#333",
      stroke: "#fff",
      "stroke-width": 2
    },
    createHandle: (e) => new n.Handle(e),
    anchor: jM
  });
})(Id || (Id = {}));
class Kg extends In.ToolItem {
  get type() {
    return this.options.type;
  }
  onRender() {
    Ye(this.container, this.prefixClassName(`edge-tool-${this.type}-anchor`)), this.toggleArea(!1), this.update();
  }
  update() {
    const e = this.type;
    return this.cellView.getTerminalView(e) ? (this.updateAnchor(), this.updateArea(), this.container.style.display = "") : this.container.style.display = "none", this;
  }
  updateAnchor() {
    const e = this.childNodes;
    if (!e)
      return;
    const t = e.anchor;
    if (!t)
      return;
    const i = this.type, s = this.cellView, r = this.options, o = s.getTerminalAnchor(i), l = s.cell.prop([i, "anchor"]);
    t.setAttribute("transform", `translate(${o.x}, ${o.y})`);
    const a = l ? r.customAnchorAttrs : r.defaultAnchorAttrs;
    a && Object.keys(a).forEach((c) => {
      t.setAttribute(c, a[c]);
    });
  }
  updateArea() {
    const e = this.childNodes;
    if (!e)
      return;
    const t = e.area;
    if (!t)
      return;
    const i = this.type, s = this.cellView, r = s.getTerminalView(i);
    if (r) {
      const o = r.cell, l = s.getTerminalMagnet(i);
      let a = this.options.areaPadding || 0;
      Number.isFinite(a) || (a = 0);
      let c, u, h;
      r.isEdgeElement(l) ? (c = r.getBBox(), u = 0, h = c.getCenter()) : (c = r.getUnrotatedBBoxOfElement(l), u = o.getAngle(), h = c.getCenter(), u && h.rotate(-u, o.getBBox().getCenter())), c.inflate(a), St(t, {
        x: -c.width / 2,
        y: -c.height / 2,
        width: c.width,
        height: c.height,
        transform: `translate(${h.x}, ${h.y}) rotate(${u})`
      });
    }
  }
  toggleArea(e) {
    if (this.childNodes) {
      const t = this.childNodes.area;
      t && (t.style.display = e ? "" : "none");
    }
  }
  onMouseDown(e) {
    this.guard(e) || (e.stopPropagation(), e.preventDefault(), this.graph.view.undelegateEvents(), this.options.documentEvents && this.delegateDocumentEvents(this.options.documentEvents), this.focus(), this.toggleArea(this.options.restrictArea), this.cell.startBatch("move-anchor", {
      ui: !0,
      toolId: this.cid
    }));
  }
  resetAnchor(e) {
    const t = this.type, i = this.cell;
    e ? i.prop([t, "anchor"], e, {
      rewrite: !0,
      ui: !0,
      toolId: this.cid
    }) : i.removeProp([t, "anchor"], {
      ui: !0,
      toolId: this.cid
    });
  }
  onMouseMove(e) {
    const t = this.type, i = this.cellView, s = i.getTerminalView(t);
    if (s == null)
      return;
    const r = this.normalizeEvent(e), o = s.cell, l = i.getTerminalMagnet(t);
    let a = this.graph.coord.clientToLocalPoint(r.clientX, r.clientY);
    const c = this.options.snap;
    if (typeof c == "function") {
      const d = Ze(c, i, a, s, l, t, i, this);
      a = z.create(d);
    }
    if (this.options.restrictArea)
      if (s.isEdgeElement(l)) {
        const d = s.getClosestPoint(a);
        d && (a = d);
      } else {
        const d = s.getUnrotatedBBoxOfElement(l), f = o.getAngle(), p = o.getBBox().getCenter(), g = a.clone().rotate(f, p);
        d.containsPoint(g) || (a = d.getNearestPointToPoint(g).rotate(-f, p));
      }
    let u;
    const h = this.options.anchor;
    typeof h == "function" && (u = Ze(h, i, a, s, l, t, i, this)), this.resetAnchor(u), this.update();
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onMouseUp(e) {
    this.graph.view.delegateEvents(), this.undelegateDocumentEvents(), this.blur(), this.toggleArea(!1);
    const t = this.cellView;
    this.options.removeRedundancies && t.removeRedundantLinearVertices({ ui: !0, toolId: this.cid }), this.cell.stopBatch("move-anchor", { ui: !0, toolId: this.cid });
  }
  onDblClick() {
    const e = this.options.resetAnchor;
    e && this.resetAnchor(e === !0 ? void 0 : e), this.update();
  }
}
(function(n) {
  n.config({
    tagName: "g",
    markup: [
      {
        tagName: "circle",
        selector: "anchor",
        attrs: {
          cursor: "pointer"
        }
      },
      {
        tagName: "rect",
        selector: "area",
        attrs: {
          "pointer-events": "none",
          fill: "none",
          stroke: "#33334F",
          "stroke-dasharray": "2,4",
          rx: 5,
          ry: 5
        }
      }
    ],
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown",
      dblclick: "onDblClick"
    },
    documentEvents: {
      mousemove: "onMouseMove",
      touchmove: "onMouseMove",
      mouseup: "onMouseUp",
      touchend: "onMouseUp",
      touchcancel: "onMouseUp"
    },
    customAnchorAttrs: {
      "stroke-width": 4,
      stroke: "#33334F",
      fill: "#FFFFFF",
      r: 5
    },
    defaultAnchorAttrs: {
      "stroke-width": 2,
      stroke: "#FFFFFF",
      fill: "#33334F",
      r: 6
    },
    areaPadding: 6,
    snapRadius: 10,
    resetAnchor: !0,
    restrictArea: !0,
    removeRedundancies: !0,
    anchor: jM,
    snap(e, t, i, s, r, o) {
      const l = o.options.snapRadius || 0, a = s === "source", c = a ? 0 : -1, u = this.cell.getVertexAt(c) || this.getTerminalAnchor(a ? "target" : "source");
      return u && (Math.abs(u.x - e.x) < l && (e.x = u.x), Math.abs(u.y - e.y) < l && (e.y = u.y)), e;
    }
  });
})(Kg || (Kg = {}));
const Iie = Kg.define({
  name: "source-anchor",
  type: "source"
}), Bie = Kg.define({
  name: "target-anchor",
  type: "target"
});
var Qie = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class Jg extends In.ToolItem {
  get type() {
    return this.options.type;
  }
  get ratio() {
    return this.options.ratio;
  }
  init() {
    if (this.options.attrs) {
      const e = this.options.attrs, { class: t } = e, i = Qie(e, ["class"]);
      this.setAttrs(i, this.container), t && Ye(this.container, t);
    }
  }
  onRender() {
    Ye(this.container, this.prefixClassName(`edge-tool-${this.type}-arrowhead`)), this.update();
  }
  update() {
    const e = this.ratio, t = this.cellView, i = t.getTangentAtRatio(e), s = i ? i.start : t.getPointAtRatio(e), r = i && i.vector().vectorAngle(new z(1, 0)) || 0;
    if (!s)
      return this;
    const o = ai().translate(s.x, s.y).rotate(r);
    return bu(this.container, o, { absolute: !0 }), this;
  }
  onMouseDown(e) {
    if (this.guard(e))
      return;
    e.stopPropagation(), e.preventDefault();
    const t = this.cellView;
    if (t.can("arrowheadMovable")) {
      t.cell.startBatch("move-arrowhead", {
        ui: !0,
        toolId: this.cid
      });
      const i = this.graph.snapToGrid(e.clientX, e.clientY), s = t.prepareArrowheadDragging(this.type, {
        x: i.x,
        y: i.y,
        options: Object.assign(Object.assign({}, this.options), { toolId: this.cid })
      });
      this.cellView.setEventData(e, s), this.delegateDocumentEvents(this.options.documentEvents, e.data), t.graph.view.undelegateEvents(), this.container.style.pointerEvents = "none";
    }
    this.focus();
  }
  onMouseMove(e) {
    const t = this.normalizeEvent(e), i = this.graph.snapToGrid(t.clientX, t.clientY);
    this.cellView.onMouseMove(t, i.x, i.y), this.update();
  }
  onMouseUp(e) {
    this.undelegateDocumentEvents();
    const t = this.normalizeEvent(e), i = this.cellView, s = this.graph.snapToGrid(t.clientX, t.clientY);
    i.onMouseUp(t, s.x, s.y), this.graph.view.delegateEvents(), this.blur(), this.container.style.pointerEvents = "", i.cell.stopBatch("move-arrowhead", {
      ui: !0,
      toolId: this.cid
    });
  }
}
(function(n) {
  n.config({
    tagName: "path",
    isSVGElement: !0,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    },
    documentEvents: {
      mousemove: "onMouseMove",
      touchmove: "onMouseMove",
      mouseup: "onMouseUp",
      touchend: "onMouseUp",
      touchcancel: "onMouseUp"
    }
  });
})(Jg || (Jg = {}));
const zie = Jg.define({
  name: "source-arrowhead",
  type: "source",
  ratio: 0,
  attrs: {
    d: "M 10 -8 -10 0 10 8 Z",
    fill: "#333",
    stroke: "#fff",
    "stroke-width": 2,
    cursor: "move"
  }
}), jie = Jg.define({
  name: "target-arrowhead",
  type: "target",
  ratio: 1,
  attrs: {
    d: "M -10 -8 10 0 -10 8 Z",
    fill: "#333",
    stroke: "#fff",
    "stroke-width": 2,
    cursor: "move"
  }
});
class Su extends In.ToolItem {
  constructor() {
    super(...arguments), this.labelIndex = -1, this.distance = 0.5, this.dblClick = this.onCellDblClick.bind(this);
  }
  onRender() {
    const e = this.cellView;
    e && e.on("cell:dblclick", this.dblClick);
  }
  createElement() {
    const e = [
      this.prefixClassName(`${this.cell.isEdge() ? "edge" : "node"}-tool-editor`),
      this.prefixClassName("cell-tool-editor")
    ];
    this.editor = In.createElement("div", !1), this.addClass(e, this.editor), this.editor.contentEditable = "true", this.container.appendChild(this.editor);
  }
  removeElement() {
    this.undelegateDocumentEvents(), this.editor && (this.container.removeChild(this.editor), this.editor = null);
  }
  updateEditor() {
    const { cell: e, editor: t } = this;
    if (!t)
      return;
    const { style: i } = t;
    e.isNode() ? this.updateNodeEditorTransform() : e.isEdge() && this.updateEdgeEditorTransform();
    const { attrs: s } = this.options;
    i.fontSize = `${s.fontSize}px`, i.fontFamily = s.fontFamily, i.color = s.color, i.backgroundColor = s.backgroundColor;
    const r = this.getCellText() || "";
    return t.innerText = r, this.setCellText(""), this;
  }
  updateNodeEditorTransform() {
    const { graph: e, cell: t, editor: i } = this;
    if (!i)
      return;
    let s = z.create(), r = 20, o = "", { x: l, y: a } = this.options;
    const { width: c, height: u } = this.options;
    if (typeof l < "u" && typeof a < "u") {
      const f = t.getBBox();
      l = br(l, f.width), a = br(a, f.height), s = f.topLeft.translate(l, a), r = f.width - l * 2;
    } else {
      const f = t.getBBox();
      s = f.center, r = f.width - 4, o = "translate(-50%, -50%)";
    }
    const h = e.scale(), { style: d } = i;
    s = e.localToGraph(s), d.left = `${s.x}px`, d.top = `${s.y}px`, d.transform = `scale(${h.sx}, ${h.sy}) ${o}`, d.minWidth = `${r}px`, typeof c == "number" && (d.width = `${c}px`), typeof u == "number" && (d.height = `${u}px`);
  }
  updateEdgeEditorTransform() {
    if (!this.event)
      return;
    const { graph: e, editor: t } = this;
    if (!t)
      return;
    let i = z.create(), s = 20;
    const { style: r } = t, o = this.event.target, l = o.parentElement;
    if (l && rh(l, this.prefixClassName("edge-label"))) {
      const u = l.getAttribute("data-index") || "0";
      this.labelIndex = parseInt(u, 10);
      const h = l.getAttribute("transform"), { translation: d } = u0(h);
      i = new z(d.tx, d.ty), s = It.getBBox(o).width;
    } else {
      if (!this.options.labelAddable)
        return this;
      i = e.clientToLocal(z.create(this.event.clientX, this.event.clientY));
      const h = this.cellView.path.closestPointLength(i);
      this.distance = h, this.labelIndex = -1;
    }
    i = e.localToGraph(i);
    const c = e.scale();
    r.left = `${i.x}px`, r.top = `${i.y}px`, r.minWidth = `${s}px`, r.transform = `scale(${c.sx}, ${c.sy}) translate(-50%, -50%)`;
  }
  onDocumentMouseUp(e) {
    if (this.editor && e.target !== this.editor) {
      const t = this.editor.innerText.replace(/\n$/, "") || "";
      this.setCellText(t !== "" ? t : null), this.removeElement();
    }
  }
  onCellDblClick({ e }) {
    this.editor || (e.stopPropagation(), this.removeElement(), this.event = e, this.createElement(), this.updateEditor(), this.autoFocus(), this.delegateDocumentEvents(this.options.documentEvents));
  }
  onMouseDown(e) {
    e.stopPropagation();
  }
  autoFocus() {
    setTimeout(() => {
      this.editor && (this.editor.focus(), this.selectText());
    });
  }
  selectText() {
    if (window.getSelection && this.editor) {
      const e = document.createRange(), t = window.getSelection();
      e.selectNodeContents(this.editor), t.removeAllRanges(), t.addRange(e);
    }
  }
  getCellText() {
    const { getText: e } = this.options;
    if (typeof e == "function")
      return Ze(e, this.cellView, {
        cell: this.cell,
        index: this.labelIndex
      });
    if (typeof e == "string") {
      if (this.cell.isNode())
        return this.cell.attr(e);
      if (this.cell.isEdge() && this.labelIndex !== -1)
        return this.cell.prop(`labels/${this.labelIndex}/attrs/${e}`);
    }
  }
  setCellText(e) {
    const t = this.options.setText;
    if (typeof t == "function") {
      Ze(t, this.cellView, {
        cell: this.cell,
        value: e,
        index: this.labelIndex,
        distance: this.distance
      });
      return;
    }
    if (typeof t == "string") {
      if (this.cell.isNode()) {
        e !== null && this.cell.attr(t, e);
        return;
      }
      if (this.cell.isEdge()) {
        const i = this.cell;
        if (this.labelIndex === -1) {
          if (e) {
            const s = {
              position: {
                distance: this.distance
              },
              attrs: {}
            };
            sh(s, `attrs/${t}`, e), i.appendLabel(s);
          }
        } else
          e !== null ? i.prop(`labels/${this.labelIndex}/attrs/${t}`, e) : typeof this.labelIndex == "number" && i.removeLabelAt(this.labelIndex);
      }
    }
  }
  onRemove() {
    const e = this.cellView;
    e && e.off("cell:dblclick", this.dblClick), this.removeElement();
  }
}
(function(n) {
  n.config({
    tagName: "div",
    isSVGElement: !1,
    events: {
      mousedown: "onMouseDown",
      touchstart: "onMouseDown"
    },
    documentEvents: {
      mouseup: "onDocumentMouseUp",
      touchend: "onDocumentMouseUp",
      touchcancel: "onDocumentMouseUp"
    }
  });
})(Su || (Su = {}));
(function(n) {
  n.NodeEditor = n.define({
    attrs: {
      fontSize: 14,
      fontFamily: "Arial, helvetica, sans-serif",
      color: "#000",
      backgroundColor: "#fff"
    },
    getText: "text/text",
    setText: "text/text"
  }), n.EdgeEditor = n.define({
    attrs: {
      fontSize: 14,
      fontFamily: "Arial, helvetica, sans-serif",
      color: "#000",
      backgroundColor: "#fff"
    },
    labelAddable: !0,
    getText: "label/text",
    setText: "label/text"
  });
})(Su || (Su = {}));
var FM = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
}, Cu;
(function(n) {
  n.presets = {
    boundary: Gg,
    button: Ll,
    "button-remove": Ll.Remove,
    "node-editor": Su.NodeEditor
  }, n.registry = An.create({
    type: "node tool",
    process(e, t) {
      if (typeof t == "function")
        return t;
      let i = In.ToolItem;
      const { inherit: s } = t, r = FM(t, ["inherit"]);
      if (s) {
        const o = this.get(s);
        o == null ? this.onNotFound(s, "inherited") : i = o;
      }
      return r.name == null && (r.name = e), i.define.call(i, r);
    }
  }), n.registry.register(n.presets, !0);
})(Cu || (Cu = {}));
var ku;
(function(n) {
  n.presets = {
    boundary: Gg,
    vertices: Ld,
    segments: Id,
    button: Ll,
    "button-remove": Ll.Remove,
    "source-anchor": Iie,
    "target-anchor": Bie,
    "source-arrowhead": zie,
    "target-arrowhead": jie,
    "edge-editor": Su.EdgeEditor
  }, n.registry = An.create({
    type: "edge tool",
    process(e, t) {
      if (typeof t == "function")
        return t;
      let i = In.ToolItem;
      const { inherit: s } = t, r = FM(t, ["inherit"]);
      if (s) {
        const o = this.get(s);
        o == null ? this.onNotFound(s, "inherited") : i = o;
      }
      return r.name == null && (r.name = e), i.define.call(i, r);
    }
  }), n.registry.register(n.presets, !0);
})(ku || (ku = {}));
const Vie = Uo("center"), Fie = Uo("topCenter"), Zie = Uo("bottomCenter"), qie = Uo("leftMiddle"), Wie = Uo("rightMiddle"), Hie = Uo("topLeft"), Xie = Uo("topRight"), Yie = Uo("bottomLeft"), Uie = Uo("bottomRight");
function Uo(n) {
  return function(e, t, i, s = {}) {
    const r = s.rotate ? e.getUnrotatedBBoxOfElement(t) : e.getBBoxOfElement(t), o = r[n];
    o.x += br(s.dx, r.width), o.y += br(s.dy, r.height);
    const l = e.cell;
    return s.rotate ? o.rotate(-l.getAngle(), l.getBBox().getCenter()) : o;
  };
}
function m0(n) {
  return function(e, t, i, s) {
    if (i instanceof Element) {
      const r = this.graph.findViewByElem(i);
      let o;
      if (r)
        if (r.isEdgeElement(i)) {
          const l = s.fixedAt != null ? s.fixedAt : "50%";
          o = ZM(r, l);
        } else
          o = r.getBBoxOfElement(i).getCenter();
      else
        o = new z();
      return n.call(this, e, t, o, s);
    }
    return n.apply(this, arguments);
  };
}
function ZM(n, e) {
  const t = zo(e), i = typeof e == "string" ? parseFloat(e) : e;
  return t ? n.getPointAtRatio(i / 100) : n.getPointAtLength(i);
}
const Gie = function(n, e, t, i) {
  const s = Pt.normalize(n.cell.getAngle()), r = n.getBBoxOfElement(e), o = r.getCenter(), l = r.getTopLeft(), a = r.getBottomRight();
  let c = i.padding;
  if (Number.isFinite(c) || (c = 0), l.y + c <= t.y && t.y <= a.y - c) {
    const u = t.y - o.y;
    o.x += s === 0 || s === 180 ? 0 : u * 1 / Math.tan(Pt.toRad(s)), o.y += u;
  } else if (l.x + c <= t.x && t.x <= a.x - c) {
    const u = t.x - o.x;
    o.y += s === 90 || s === 270 ? 0 : u * Math.tan(Pt.toRad(s)), o.x += u;
  }
  return o;
}, Kie = m0(Gie), Jie = function(n, e, t, i, s) {
  const r = n.cell.getConnectionPoint(this.cell, s);
  return (i.dx || i.dy) && r.translate(i.dx || 0, i.dy || 0), r;
}, ese = function(n, e, t, i) {
  let s, r = 0, o;
  const l = n.cell;
  i.rotate ? (s = n.getUnrotatedBBoxOfElement(e), o = l.getBBox().getCenter(), r = l.getAngle()) : s = n.getBBoxOfElement(e);
  const a = i.padding;
  a != null && Number.isFinite(a) && s.inflate(a), i.rotate && t.rotate(r, o);
  const c = s.getNearestSideToPoint(t);
  let u;
  switch (c) {
    case "left":
      u = s.getLeftMiddle();
      break;
    case "right":
      u = s.getRightMiddle();
      break;
    case "top":
      u = s.getTopCenter();
      break;
    case "bottom":
      u = s.getBottomCenter();
      break;
  }
  const h = i.direction;
  return h === "H" ? (c === "top" || c === "bottom") && (t.x <= s.x + s.width ? u = s.getLeftMiddle() : u = s.getRightMiddle()) : h === "V" && (t.y <= s.y + s.height ? u = s.getTopCenter() : u = s.getBottomCenter()), i.rotate ? u.rotate(-r, o) : u;
}, tse = m0(ese), nse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bottom: Zie,
  bottomLeft: Yie,
  bottomRight: Uie,
  center: Vie,
  left: qie,
  midSide: tse,
  nodeCenter: Jie,
  orth: Kie,
  right: Wie,
  top: Fie,
  topLeft: Hie,
  topRight: Xie
}, Symbol.toStringTag, { value: "Module" }));
var Pu;
(function(n) {
  n.presets = nse, n.registry = An.create({
    type: "node endpoint"
  }), n.registry.register(n.presets, !0);
})(Pu || (Pu = {}));
const ise = function(n, e, t, i) {
  let s = i.ratio != null ? i.ratio : 0.5;
  return s > 1 && (s /= 100), n.getPointAtRatio(s);
}, sse = function(n, e, t, i) {
  const s = i.length != null ? i.length : 20;
  return n.getPointAtLength(s);
}, qM = function(n, e, t, i) {
  const s = n.getClosestPoint(t);
  return s ?? new z();
}, rse = m0(qM), ose = function(n, e, t, i) {
  const r = n.getConnection(), o = n.getConnectionSubdivisions(), l = new Ie(t.clone().translate(0, 1e6), t.clone().translate(0, -1e6)), a = new Ie(t.clone().translate(1e6, 0), t.clone().translate(-1e6, 0)), c = l.intersect(r, {
    segmentSubdivisions: o
  }), u = a.intersect(r, {
    segmentSubdivisions: o
  }), h = [];
  return c && h.push(...c), u && h.push(...u), h.length > 0 ? t.closest(h) : i.fallbackAt != null ? ZM(n, i.fallbackAt) : Ze(qM, this, n, e, t, i);
}, lse = m0(ose), ase = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  closest: rse,
  length: sse,
  orth: lse,
  ratio: ise
}, Symbol.toStringTag, { value: "Module" }));
var Eu;
(function(n) {
  n.presets = ase, n.registry = An.create({
    type: "edge endpoint"
  }), n.registry.register(n.presets, !0);
})(Eu || (Eu = {}));
function v0(n, e, t) {
  let i;
  if (typeof t == "object") {
    if (Number.isFinite(t.y)) {
      const r = new Ie(e, n), { start: o, end: l } = r.parallel(t.y);
      e = o, n = l;
    }
    i = t.x;
  } else
    i = t;
  if (i == null || !Number.isFinite(i))
    return n;
  const s = n.distance(e);
  return i === 0 && s > 0 ? n : n.move(e, -Math.min(i, s - 1));
}
function em(n) {
  const e = n.getAttribute("stroke-width");
  return e === null ? 0 : parseFloat(e) || 0;
}
function cse(n) {
  if (n == null)
    return null;
  let e = n;
  do {
    let t = e.tagName;
    if (typeof t != "string")
      return null;
    if (t = t.toUpperCase(), t === "G")
      e = e.firstElementChild;
    else if (t === "TITLE")
      e = e.nextElementSibling;
    else
      break;
  } while (e);
  return e;
}
const WM = function(n, e, t, i) {
  const s = e.getBBoxOfElement(t);
  i.stroked && s.inflate(em(t) / 2);
  const r = n.intersect(s), o = r && r.length ? n.start.closest(r) : n.end;
  return v0(o, n.start, i.offset);
}, use = function(n, e, t, i, s) {
  const r = e.cell, o = r.isNode() ? r.getAngle() : 0;
  if (o === 0)
    return Ze(WM, this, n, e, t, i, s);
  const l = e.getUnrotatedBBoxOfElement(t);
  i.stroked && l.inflate(em(t) / 2);
  const a = l.getCenter(), c = n.clone().rotate(o, a), u = c.setLength(1e6).intersect(l), h = u && u.length ? c.start.closest(u).rotate(-o, a) : n.end;
  return v0(h, n.start, i.offset);
}, hse = function(n, e, t, i) {
  let s, r;
  const o = n.end, l = i.selector;
  if (typeof l == "string" ? s = e.findOne(l) : Array.isArray(l) ? s = rw(t, l) : s = cse(t), !Ml(s)) {
    if (s === t || !Ml(t))
      return o;
    s = t;
  }
  const a = e.getShapeOfElement(s), c = e.getMatrixOfElement(s), u = e.getRootTranslatedMatrix(), h = e.getRootRotatedMatrix(), d = u.multiply(h).multiply(c), f = d.inverse(), p = It.transformLine(n, f), g = p.start.clone(), m = e.getDataOfElement(s);
  if (i.insideout === !1) {
    m.shapeBBox == null && (m.shapeBBox = a.bbox());
    const w = m.shapeBBox;
    if (w != null && w.containsPoint(g))
      return o;
  }
  i.extrapolate === !0 && p.setLength(1e6);
  let v;
  if (Be.isPath(a)) {
    const w = i.precision || 2;
    m.segmentSubdivisions == null && (m.segmentSubdivisions = a.getSegmentSubdivisions({
      precision: w
    })), v = {
      precision: w,
      segmentSubdivisions: m.segmentSubdivisions
    }, r = p.intersect(a, v);
  } else
    r = p.intersect(a);
  r ? Array.isArray(r) && (r = g.closest(r)) : i.sticky === !0 && (ye.isRectangle(a) ? r = a.getNearestPointToPoint(g) : wr.isEllipse(a) ? r = a.intersectsWithLineFromCenterToPoint(g) : r = a.closestPoint(g, v));
  const O = r ? It.transformPoint(r, d) : o;
  let b = i.offset || 0;
  return i.stroked !== !1 && (typeof b == "object" ? (b = Object.assign({}, b), b.x == null && (b.x = 0), b.x += em(s) / 2) : b += em(s) / 2), v0(O, n.start, b);
};
function dse(n, e, t = 0) {
  const { start: i, end: s } = n;
  let r, o, l, a;
  switch (e) {
    case "left":
      a = "x", r = s, o = i, l = -1;
      break;
    case "right":
      a = "x", r = i, o = s, l = 1;
      break;
    case "top":
      a = "y", r = s, o = i, l = -1;
      break;
    case "bottom":
      a = "y", r = i, o = s, l = 1;
      break;
    default:
      return;
  }
  i[a] < s[a] ? r[a] = o[a] : o[a] = r[a], Number.isFinite(t) && (r[a] += l * t, o[a] += l * t);
}
const fse = function(n, e, t, i) {
  const { alignOffset: s, align: r } = i;
  return r && dse(n, r, s), v0(n.end, n.start, i.offset);
}, pse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  anchor: fse,
  bbox: WM,
  boundary: hse,
  rect: use
}, Symbol.toStringTag, { value: "Module" }));
var Au;
(function(n) {
  n.presets = pse, n.registry = An.create({
    type: "connection point"
  }), n.registry.register(n.presets, !0);
})(Au || (Au = {}));
const gse = function(n) {
  return [...n];
}, mse = function(n, e, t) {
  const i = e.side || "bottom", s = ja(e.padding || 40), r = t.sourceBBox, o = t.targetBBox, l = r.getCenter(), a = o.getCenter();
  let c, u, h;
  switch (i) {
    case "top":
      h = -1, c = "y", u = "height";
      break;
    case "left":
      h = -1, c = "x", u = "width";
      break;
    case "right":
      h = 1, c = "x", u = "width";
      break;
    case "bottom":
    default:
      h = 1, c = "y", u = "height";
      break;
  }
  return l[c] += h * (r[u] / 2 + s[i]), a[c] += h * (o[u] / 2 + s[i]), h * (l[c] - a[c]) > 0 ? a[c] = l[c] : l[c] = a[c], [l.toJSON(), ...n, a.toJSON()];
};
function op(n) {
  return new ye(n.x, n.y, 0, 0);
}
function tm(n = {}) {
  const e = ja(n.padding || 20);
  return {
    x: -e.left,
    y: -e.top,
    width: e.left + e.right,
    height: e.top + e.bottom
  };
}
function HM(n, e = {}) {
  return n.sourceBBox.clone().moveAndExpand(tm(e));
}
function XM(n, e = {}) {
  return n.targetBBox.clone().moveAndExpand(tm(e));
}
function vse(n, e = {}) {
  return n.sourceAnchor ? n.sourceAnchor : HM(n, e).getCenter();
}
function bse(n, e = {}) {
  return n.targetAnchor ? n.targetAnchor : XM(n, e).getCenter();
}
const YM = function(n, e, t) {
  let i = HM(t, e), s = XM(t, e);
  const r = vse(t, e), o = bse(t, e);
  i = i.union(op(r)), s = s.union(op(o));
  const l = n.map((u) => z.create(u));
  l.unshift(r), l.push(o);
  let a = null;
  const c = [];
  for (let u = 0, h = l.length - 1; u < h; u += 1) {
    let d = null;
    const f = l[u], p = l[u + 1], g = Ds.getBearing(f, p) != null;
    if (u === 0)
      u + 1 === h ? i.intersectsWithRect(s.clone().inflate(1)) ? d = Ds.insideNode(f, p, i, s) : g || (d = Ds.nodeToNode(f, p, i, s)) : i.containsPoint(p) ? d = Ds.insideNode(f, p, i, op(p).moveAndExpand(tm(e))) : g || (d = Ds.nodeToVertex(f, p, i));
    else if (u + 1 === h) {
      const m = g && Ds.getBearing(p, f) === a;
      s.containsPoint(f) || m ? d = Ds.insideNode(f, p, op(f).moveAndExpand(tm(e)), s, a) : g || (d = Ds.vertexToNode(f, p, s, a));
    } else
      g || (d = Ds.vertexToVertex(f, p, a));
    d ? (c.push(...d.points), a = d.direction) : a = Ds.getBearing(f, p), u + 1 < h && c.push(p);
  }
  return c;
};
var Ds;
(function(n) {
  const e = {
    N: "S",
    S: "N",
    E: "W",
    W: "E"
  }, t = {
    N: -Math.PI / 2 * 3,
    S: -Math.PI / 2,
    E: 0,
    W: Math.PI
  };
  function i(h, d, f) {
    let p = new z(h.x, d.y);
    return f.containsPoint(p) && (p = new z(d.x, h.y)), p;
  }
  function s(h, d) {
    return h[d === "W" || d === "E" ? "width" : "height"];
  }
  n.getBBoxSize = s;
  function r(h, d) {
    return h.x === d.x ? h.y > d.y ? "N" : "S" : h.y === d.y ? h.x > d.x ? "W" : "E" : null;
  }
  n.getBearing = r;
  function o(h, d, f) {
    const p = new z(h.x, d.y), g = new z(d.x, h.y), m = r(h, p), v = r(h, g), O = f ? e[f] : null, b = m === f || m !== O && (v === O || v !== f) ? p : g;
    return { points: [b], direction: r(b, d) };
  }
  n.vertexToVertex = o;
  function l(h, d, f) {
    const p = i(h, d, f);
    return { points: [p], direction: r(p, d) };
  }
  n.nodeToVertex = l;
  function a(h, d, f, p) {
    const g = [new z(h.x, d.y), new z(d.x, h.y)], m = g.filter((b) => !f.containsPoint(b)), v = m.filter((b) => r(b, h) !== p);
    let O;
    if (v.length > 0)
      return O = v.filter((b) => r(h, b) === p).pop(), O = O || v[0], {
        points: [O],
        direction: r(O, d)
      };
    {
      O = CQ(g, m)[0];
      const b = z.create(d).move(O, -s(f, p) / 2);
      return {
        points: [i(b, h, f), b],
        direction: r(b, d)
      };
    }
  }
  n.vertexToNode = a;
  function c(h, d, f, p) {
    let g = l(d, h, p);
    const m = g.points[0];
    if (f.containsPoint(m)) {
      g = l(h, d, f);
      const v = g.points[0];
      if (p.containsPoint(v)) {
        const O = z.create(h).move(v, -s(f, r(h, v)) / 2), b = z.create(d).move(m, -s(p, r(d, m)) / 2), w = new Ie(O, b).getCenter(), x = l(h, w, f), S = o(w, d, x.direction);
        g.points = [x.points[0], S.points[0]], g.direction = S.direction;
      }
    }
    return g;
  }
  n.nodeToNode = c;
  function u(h, d, f, p, g) {
    const m = f.union(p).inflate(1), v = m.getCenter(), O = v.distance(d) > v.distance(h), b = O ? d : h, w = O ? h : d;
    let x, S, C;
    g ? (x = z.fromPolar(m.width + m.height, t[g], b), x = m.getNearestPointToPoint(x).move(x, -1)) : x = m.getNearestPointToPoint(b).move(b, 1), S = i(x, w, m);
    let k;
    x.round().equals(S.round()) ? (S = z.fromPolar(m.width + m.height, Pt.toRad(x.theta(b)) + Math.PI / 2, w), S = m.getNearestPointToPoint(S).move(w, 1).round(), C = i(x, S, m), k = O ? [S, C, x] : [x, C, S]) : k = O ? [S, x] : [x, S];
    const E = r(O ? x : S, d);
    return {
      points: k,
      direction: E
    };
  }
  n.insideNode = u;
})(Ds || (Ds = {}));
const yse = {
  step: 10,
  maxLoopCount: 2e3,
  precision: 1,
  maxDirectionChange: 90,
  perpendicular: !0,
  excludeTerminals: [],
  excludeNodes: [],
  excludeShapes: [],
  startDirections: ["top", "right", "bottom", "left"],
  endDirections: ["top", "right", "bottom", "left"],
  directionMap: {
    top: { x: 0, y: -1 },
    right: { x: 1, y: 0 },
    bottom: { x: 0, y: 1 },
    left: { x: -1, y: 0 }
  },
  cost() {
    return gl(this.step, this);
  },
  directions() {
    const n = gl(this.step, this), e = gl(this.cost, this);
    return [
      { cost: e, offsetX: n, offsetY: 0 },
      { cost: e, offsetX: -n, offsetY: 0 },
      { cost: e, offsetX: 0, offsetY: n },
      { cost: e, offsetX: 0, offsetY: -n }
    ];
  },
  penalties() {
    const n = gl(this.step, this);
    return {
      0: 0,
      45: n / 2,
      90: n / 2
    };
  },
  paddingBox() {
    const n = gl(this.step, this);
    return {
      x: -n,
      y: -n,
      width: 2 * n,
      height: 2 * n
    };
  },
  fallbackRouter: YM,
  draggingRouter: null,
  snapToGrid: !0
};
function gl(n, e) {
  return typeof n == "function" ? n.call(e) : n;
}
function Ose(n) {
  const e = Object.keys(n).reduce((t, i) => {
    const s = t;
    return i === "fallbackRouter" || i === "draggingRouter" || i === "fallbackRoute" ? s[i] = n[i] : s[i] = gl(n[i], n), t;
  }, {});
  if (e.padding) {
    const t = ja(e.padding);
    e.paddingBox = {
      x: -t.left,
      y: -t.top,
      width: t.left + t.right,
      height: t.top + t.bottom
    };
  }
  return e.directions.forEach((t) => {
    const i = new z(0, 0), s = new z(t.offsetX, t.offsetY);
    t.angle = Pt.normalize(i.theta(s));
  }), e;
}
const ak = 1, ck = 2;
class wse {
  constructor() {
    this.items = [], this.hash = {}, this.values = {};
  }
  add(e, t) {
    this.hash[e] ? this.items.splice(this.items.indexOf(e), 1) : this.hash[e] = ak, this.values[e] = t;
    const i = gz(this.items, e, (s) => this.values[s]);
    this.items.splice(i, 0, e);
  }
  pop() {
    const e = this.items.shift();
    return e && (this.hash[e] = ck), e;
  }
  isOpen(e) {
    return this.hash[e] === ak;
  }
  isClose(e) {
    return this.hash[e] === ck;
  }
  isEmpty() {
    return this.items.length === 0;
  }
}
class xse {
  constructor(e) {
    this.options = e, this.mapGridSize = 100, this.map = {};
  }
  /**
   * Builds a map of all nodes for quicker obstacle queries i.e. is a point
   * contained in any obstacle?
   *
   * A simplified grid search.
   */
  build(e, t) {
    const i = this.options, s = i.excludeTerminals.reduce((c, u) => {
      const h = t[u];
      if (h) {
        const d = e.getCell(h.cell);
        d && c.push(d);
      }
      return c;
    }, []);
    let r = [];
    const o = e.getCell(t.getSourceCellId());
    o && (r = aS(r, o.getAncestors().map((c) => c.id)));
    const l = e.getCell(t.getTargetCellId());
    l && (r = aS(r, l.getAncestors().map((c) => c.id)));
    const a = this.mapGridSize;
    return e.getNodes().reduce((c, u) => {
      const h = s.some((m) => m.id === u.id), d = u.shape ? i.excludeShapes.includes(u.shape) : !1, f = i.excludeNodes.some((m) => typeof m == "string" ? u.id === m : m === u), p = r.includes(u.id), g = d || h || f || p;
      if (u.isVisible() && !g) {
        const m = u.getBBox().moveAndExpand(i.paddingBox), v = m.getOrigin().snapToGrid(a), O = m.getCorner().snapToGrid(a);
        for (let b = v.x; b <= O.x; b += a)
          for (let w = v.y; w <= O.y; w += a) {
            const x = new z(b, w).toString();
            c[x] == null && (c[x] = []), c[x].push(m);
          }
      }
      return c;
    }, this.map), this;
  }
  isAccessible(e) {
    const t = e.clone().snapToGrid(this.mapGridSize).toString(), i = this.map[t];
    return i ? i.every((s) => !s.containsPoint(e)) : !0;
  }
}
function UM(n, e) {
  const t = n.sourceBBox.clone();
  return e && e.paddingBox ? t.moveAndExpand(e.paddingBox) : t;
}
function GM(n, e) {
  const t = n.targetBBox.clone();
  return e && e.paddingBox ? t.moveAndExpand(e.paddingBox) : t;
}
function KM(n, e) {
  return n.sourceAnchor ? n.sourceAnchor : UM(n, e).getCenter();
}
function Sse(n, e) {
  return n.targetAnchor ? n.targetAnchor : GM(n, e).getCenter();
}
function kv(n, e, t, i, s) {
  const r = 360 / t, o = n.theta(Cse(n, e, i, s)), l = Pt.normalize(o + r / 2);
  return r * Math.floor(l / r);
}
function Cse(n, e, t, i) {
  const s = i.step, r = e.x - n.x, o = e.y - n.y, l = r / t.x, a = o / t.y, c = l * s, u = a * s;
  return new z(n.x + c, n.y + u);
}
function uk(n, e) {
  const t = Math.abs(n - e);
  return t > 180 ? 360 - t : t;
}
function kse(n, e) {
  const t = e.step;
  return e.directions.forEach((i) => {
    i.gridOffsetX = i.offsetX / t * n.x, i.gridOffsetY = i.offsetY / t * n.y;
  }), e.directions;
}
function Pse(n, e, t) {
  return {
    source: e.clone(),
    x: hk(t.x - e.x, n),
    y: hk(t.y - e.y, n)
  };
}
function hk(n, e) {
  if (!n)
    return e;
  const t = Math.abs(n), i = Math.round(t / e);
  if (!i)
    return t;
  const s = i * e, o = (t - s) / i;
  return e + o;
}
function Ese(n, e) {
  const t = e.source, i = At.snapToGrid(n.x - t.x, e.x) + t.x, s = At.snapToGrid(n.y - t.y, e.y) + t.y;
  return new z(i, s);
}
function Mh(n, e) {
  return n.round(e);
}
function cg(n, e, t) {
  return Mh(Ese(n.clone(), e), t);
}
function sd(n) {
  return n.toString();
}
function Pv(n) {
  return new z(n.x === 0 ? 0 : Math.abs(n.x) / n.x, n.y === 0 ? 0 : Math.abs(n.y) / n.y);
}
function dk(n, e) {
  let t = 1 / 0;
  for (let i = 0, s = e.length; i < s; i += 1) {
    const r = n.manhattanDistance(e[i]);
    r < t && (t = r);
  }
  return t;
}
function fk(n, e, t, i, s) {
  const r = s.precision, o = s.directionMap, l = n.diff(e.getCenter()), a = Object.keys(o).reduce((c, u) => {
    if (t.includes(u)) {
      const h = o[u], d = new z(n.x + h.x * (Math.abs(l.x) + e.width), n.y + h.y * (Math.abs(l.y) + e.height)), p = new Ie(n, d).intersect(e) || [];
      let g, m = null;
      for (let v = 0; v < p.length; v += 1) {
        const O = p[v], b = n.squaredDistance(O);
        (g == null || b > g) && (g = b, m = O);
      }
      if (m) {
        let v = cg(m, i, r);
        e.containsPoint(v) && (v = cg(v.translate(h.x * i.x, h.y * i.y), i, r)), c.push(v);
      }
    }
    return c;
  }, []);
  return e.containsPoint(n) || a.push(cg(n, i, r)), a;
}
function Ase(n, e, t, i, s) {
  const r = [];
  let o = Pv(s.diff(t)), l = sd(t), a = n[l], c;
  for (; a; ) {
    c = e[l];
    const d = Pv(c.diff(a));
    d.equals(o) || (r.unshift(c), o = d), l = sd(a), a = n[l];
  }
  const u = e[l];
  return Pv(u.diff(i)).equals(o) || r.unshift(u), r;
}
function $se(n, e, t, i, s) {
  const r = s.precision;
  let o, l;
  ye.isRectangle(e) ? o = Mh(KM(n, s).clone(), r) : o = Mh(e.clone(), r), ye.isRectangle(t) ? l = Mh(Sse(n, s).clone(), r) : l = Mh(t.clone(), r);
  const a = Pse(s.step, o, l), c = o, u = l;
  let h, d;
  if (ye.isRectangle(e) ? h = fk(c, e, s.startDirections, a, s) : h = [c], ye.isRectangle(t) ? d = fk(l, t, s.endDirections, a, s) : d = [u], h = h.filter((f) => i.isAccessible(f)), d = d.filter((f) => i.isAccessible(f)), h.length > 0 && d.length > 0) {
    const f = new wse(), p = {}, g = {}, m = {};
    for (let M = 0, _ = h.length; M < _; M += 1) {
      const T = h[M], B = sd(T);
      f.add(B, dk(T, d)), p[B] = T, m[B] = 0;
    }
    const v = s.previousDirectionAngle, O = v === void 0;
    let b, w;
    const x = kse(a, s), S = x.length, C = d.reduce((M, _) => {
      const T = sd(_);
      return M.push(T), M;
    }, []), k = z.equalPoints(h, d);
    let E = s.maxLoopCount;
    for (; !f.isEmpty() && E > 0; ) {
      const M = f.pop(), _ = p[M], T = g[M], B = m[M], I = _.equals(c), P = T == null;
      let A;
      if (P ? O ? I ? A = null : A = kv(c, _, S, a, s) : A = v : A = kv(T, _, S, a, s), !(P && k) && C.indexOf(M) >= 0)
        return s.previousDirectionAngle = A, Ase(g, p, _, c, u);
      for (let q = 0; q < S; q += 1) {
        b = x[q];
        const j = b.angle;
        if (w = uk(A, j), !(O && I) && w > s.maxDirectionChange)
          continue;
        const H = cg(_.clone().translate(b.gridOffsetX || 0, b.gridOffsetY || 0), a, r), oe = sd(H);
        if (f.isClose(oe) || !i.isAccessible(H))
          continue;
        if (C.indexOf(oe) >= 0 && !H.equals(u)) {
          const he = kv(H, u, S, a, s);
          if (uk(j, he) > s.maxDirectionChange)
            continue;
        }
        const te = b.cost, W = I ? 0 : s.penalties[w], U = B + te + W;
        (!f.isOpen(oe) || U < m[oe]) && (p[oe] = H, g[oe] = _, m[oe] = U, f.add(oe, U + dk(H, d)));
      }
      E -= 1;
    }
  }
  return s.fallbackRoute ? Ze(s.fallbackRoute, this, c, u, s) : null;
}
function Tse(n, e = 10) {
  if (n.length <= 1)
    return n;
  for (let t = 0, i = n.length; t < i - 1; t += 1) {
    const s = n[t], r = n[t + 1];
    if (s.x === r.x) {
      const o = e * Math.round(s.x / e);
      s.x !== o && (s.x = o, r.x = o);
    } else if (s.y === r.y) {
      const o = e * Math.round(s.y / e);
      s.y !== o && (s.y = o, r.y = o);
    }
  }
  return n;
}
const _se = function(n, e, t) {
  const i = Ose(e), s = UM(t, i), r = GM(t, i), o = KM(t, i), l = new xse(i).build(t.graph.model, t.cell), a = n.map((f) => z.create(f)), c = [];
  let u = o, h, d;
  for (let f = 0, p = a.length; f <= p; f += 1) {
    let g = null;
    if (h = d || s, d = a[f], d == null) {
      d = r;
      const v = t.cell;
      if ((v.getSourceCellId() == null || v.getTargetCellId() == null) && typeof i.draggingRouter == "function") {
        const b = h === s ? o : h, w = d.getOrigin();
        g = Ze(i.draggingRouter, t, b, w, i);
      }
    }
    if (g == null && (g = $se(t, h, d, l, i)), g === null)
      return console.warn("Unable to execute manhattan algorithm, use orth instead"), Ze(i.fallbackRouter, this, n, i, t);
    const m = g[0];
    m && m.equals(u) && g.shift(), u = g[g.length - 1] || u, c.push(...g);
  }
  return i.snapToGrid ? Tse(c, t.graph.grid.getGridSize()) : c;
}, JM = function(n, e, t) {
  return Ze(_se, this, n, Object.assign(Object.assign({}, yse), e), t);
}, Mse = {
  maxDirectionChange: 45,
  // an array of directions to find next points on the route
  // different from start/end directions
  directions() {
    const n = gl(this.step, this), e = gl(this.cost, this), t = Math.ceil(Math.sqrt(n * n << 1));
    return [
      { cost: e, offsetX: n, offsetY: 0 },
      { cost: t, offsetX: n, offsetY: n },
      { cost: e, offsetX: 0, offsetY: n },
      { cost: t, offsetX: -n, offsetY: n },
      { cost: e, offsetX: -n, offsetY: 0 },
      { cost: t, offsetX: -n, offsetY: -n },
      { cost: e, offsetX: 0, offsetY: -n },
      { cost: t, offsetX: n, offsetY: -n }
    ];
  },
  // a simple route used in situations when main routing method fails
  // (exceed max number of loop iterations, inaccessible)
  fallbackRoute(n, e, t) {
    const i = n.theta(e), s = [];
    let r = { x: e.x, y: n.y }, o = { x: n.x, y: e.y };
    if (i % 180 > 90) {
      const b = r;
      r = o, o = b;
    }
    const l = i % 90 < 45 ? r : o, a = new Ie(n, l), c = 90 * Math.ceil(i / 90), u = z.fromPolar(a.squaredLength(), Pt.toRad(c + 135), l), h = new Ie(e, u), d = a.intersectsWithLine(h), f = d || e, p = d ? f : n, g = 360 / t.directions.length, m = p.theta(e), v = Pt.normalize(m + g / 2), O = g * Math.floor(v / g);
    return t.previousDirectionAngle = O, f && s.push(f.round()), s.push(e), s;
  }
}, Rse = function(n, e, t) {
  return Ze(JM, this, n, Object.assign(Object.assign({}, Mse), e), t);
}, Nse = function(n, e, t) {
  const i = e.offset || 32, s = e.min == null ? 16 : e.min;
  let r = 0, o = e.direction;
  const l = t.sourceBBox, a = t.targetBBox, c = l.getCenter(), u = a.getCenter();
  if (typeof i == "number" && (r = i), o == null) {
    let v = a.left - l.right, O = a.top - l.bottom;
    v >= 0 && O >= 0 ? o = v >= O ? "L" : "T" : v <= 0 && O >= 0 ? (v = l.left - a.right, v >= 0 ? o = v >= O ? "R" : "T" : o = "T") : v >= 0 && O <= 0 ? (O = l.top - a.bottom, O >= 0 ? o = v >= O ? "L" : "B" : o = "L") : (v = l.left - a.right, O = l.top - a.bottom, v >= 0 && O >= 0 ? o = v >= O ? "R" : "B" : v <= 0 && O >= 0 ? o = "B" : v >= 0 && O <= 0 ? o = "R" : o = Math.abs(v) > Math.abs(O) ? "R" : "B");
  }
  o === "H" ? o = u.x - c.x >= 0 ? "L" : "R" : o === "V" && (o = u.y - c.y >= 0 ? "T" : "B"), i === "center" && (o === "L" ? r = (a.left - l.right) / 2 : o === "R" ? r = (l.left - a.right) / 2 : o === "T" ? r = (a.top - l.bottom) / 2 : o === "B" && (r = (l.top - a.bottom) / 2));
  let h, d, f;
  const p = o === "L" || o === "R";
  if (p) {
    if (u.y === c.y)
      return [...n];
    f = o === "L" ? 1 : -1, h = "x", d = "width";
  } else {
    if (u.x === c.x)
      return [...n];
    f = o === "T" ? 1 : -1, h = "y", d = "height";
  }
  const g = c.clone(), m = u.clone();
  if (g[h] += f * (l[d] / 2 + r), m[h] -= f * (a[d] / 2 + r), p) {
    const v = g.x, O = m.x, b = l.width / 2 + s, w = a.width / 2 + s;
    u.x > c.x ? O <= v && (g.x = Math.max(O, c.x + b), m.x = Math.min(v, u.x - w)) : O >= v && (g.x = Math.min(O, c.x - b), m.x = Math.max(v, u.x + w));
  } else {
    const v = g.y, O = m.y, b = l.height / 2 + s, w = a.height / 2 + s;
    u.y > c.y ? O <= v && (g.y = Math.max(O, c.y + b), m.y = Math.min(v, u.y - w)) : O >= v && (g.y = Math.min(O, c.y - b), m.y = Math.max(v, u.y + w));
  }
  return [g.toJSON(), ...n, m.toJSON()];
};
function gc(n, e) {
  if (e != null && e !== !1) {
    const t = typeof e == "boolean" ? 0 : e;
    if (t > 0) {
      const i = z.create(n[1]).move(n[2], t), s = z.create(n[1]).move(n[0], t);
      return [i.toJSON(), ...n, s.toJSON()];
    }
    {
      const i = n[1];
      return [Object.assign({}, i), ...n, Object.assign({}, i)];
    }
  }
  return n;
}
const Dse = function(n, e, t) {
  const i = e.width || 50, r = (e.height || 80) / 2, o = e.angle || "auto", l = t.sourceAnchor, a = t.targetAnchor, c = t.sourceBBox, u = t.targetBBox;
  if (l.equals(a)) {
    const h = (v) => {
      const O = Pt.toRad(v), b = Math.sin(O), w = Math.cos(O), x = new z(l.x + w * i, l.y + b * i), S = new z(x.x - w * r, x.y - b * r), C = S.clone().rotate(-90, x), k = S.clone().rotate(90, x);
      return [C.toJSON(), x.toJSON(), k.toJSON()];
    }, d = (v) => {
      const O = l.clone().move(v, -1), b = new Ie(O, v);
      return !c.containsPoint(v) && !c.intersectsWithLine(b);
    }, f = [0, 90, 180, 270, 45, 135, 225, 315];
    if (typeof o == "number")
      return gc(h(o), e.merge);
    const p = c.getCenter();
    if (p.equals(l))
      return gc(h(0), e.merge);
    const g = p.angleBetween(l, p.clone().translate(1, 0));
    let m = h(g);
    if (d(m[1]))
      return gc(m, e.merge);
    for (let v = 1, O = f.length; v < O; v += 1)
      if (m = h(g + f[v]), d(m[1]))
        return gc(m, e.merge);
    return gc(m, e.merge);
  }
  {
    const h = new Ie(l, a);
    let d = h.parallel(-i), f = d.getCenter(), p = d.start.clone().move(d.end, r), g = d.end.clone().move(d.start, r);
    const m = h.parallel(-1), v = new Ie(m.start, f), O = new Ie(m.end, f);
    if ((c.containsPoint(f) || u.containsPoint(f) || c.intersectsWithLine(v) || c.intersectsWithLine(O) || u.intersectsWithLine(v) || u.intersectsWithLine(O)) && (d = h.parallel(i), f = d.getCenter(), p = d.start.clone().move(d.end, r), g = d.end.clone().move(d.start, r)), e.merge) {
      const b = new Ie(l, a), w = new Ie(f, b.center).setLength(Number.MAX_SAFE_INTEGER), x = c.intersectsWithLine(w), S = u.intersectsWithLine(w), C = x ? Array.isArray(x) ? x : [x] : [];
      S && (Array.isArray(S) ? C.push(...S) : C.push(S));
      const k = b.center.closest(C);
      k ? (t.sourceAnchor = k.clone(), t.targetAnchor = k.clone()) : (t.sourceAnchor = b.center.clone(), t.targetAnchor = b.center.clone());
    }
    return gc([p.toJSON(), f.toJSON(), g.toJSON()], e.merge);
  }
}, Lse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  er: Nse,
  loop: Dse,
  manhattan: JM,
  metro: Rse,
  normal: gse,
  oneSide: mse,
  orth: YM
}, Symbol.toStringTag, { value: "Module" }));
var wl;
(function(n) {
  n.presets = Lse, n.registry = An.create({
    type: "router"
  }), n.registry.register(n.presets, !0);
})(wl || (wl = {}));
const Ise = function(n, e, t, i = {}) {
  const s = [n, ...t, e], r = new Pn(s), o = new Be(r);
  return i.raw ? o : o.serialize();
}, Bse = function(n, e, t, i = {}) {
  const s = t.length === 3 ? 0 : 1, r = z.create(t[0 + s]), o = z.create(t[2 + s]), l = z.create(t[1 + s]);
  if (!z.equals(n, e)) {
    const c = new z((n.x + e.x) / 2, (n.y + e.y) / 2), u = c.angleBetween(z.create(n).rotate(90, c), l);
    u > 1 && (r.rotate(180 - u, c), o.rotate(180 - u, c), l.rotate(180 - u, c));
  }
  const a = `
     M ${n.x} ${n.y}
     Q ${r.x} ${r.y} ${l.x} ${l.y}
     Q ${o.x} ${o.y} ${e.x} ${e.y}
  `;
  return i.raw ? Be.parse(a) : a;
}, Qse = function(n, e, t, i = {}) {
  const s = new Be();
  s.appendSegment(Be.createSegment("M", n));
  const r = 1 / 3, o = 2 / 3, l = i.radius || 10;
  let a, c;
  for (let u = 0, h = t.length; u < h; u += 1) {
    const d = z.create(t[u]), f = t[u - 1] || n, p = t[u + 1] || e;
    a = c || d.distance(f) / 2, c = d.distance(p) / 2;
    const g = -Math.min(l, a), m = -Math.min(l, c), v = d.clone().move(f, g).round(), O = d.clone().move(p, m).round(), b = new z(r * v.x + o * d.x, o * d.y + r * v.y), w = new z(r * O.x + o * d.x, o * d.y + r * O.y);
    s.appendSegment(Be.createSegment("L", v)), s.appendSegment(Be.createSegment("C", b, w, O));
  }
  return s.appendSegment(Be.createSegment("L", e)), i.raw ? s : s.serialize();
}, zse = function(n, e, t, i = {}) {
  let s, r = i.direction;
  if (t && t.length !== 0) {
    const o = [n, ...t, e], l = yn.throughPoints(o);
    s = new Be(l);
  } else if (s = new Be(), s.appendSegment(Be.createSegment("M", n)), r || (r = Math.abs(n.x - e.x) >= Math.abs(n.y - e.y) ? "H" : "V"), r === "H") {
    const o = (n.x + e.x) / 2;
    s.appendSegment(Be.createSegment("C", o, n.y, o, e.y, e.x, e.y));
  } else {
    const o = (n.y + e.y) / 2;
    s.appendSegment(Be.createSegment("C", n.x, o, e.x, o, e.x, e.y));
  }
  return i.raw ? s : s.serialize();
}, pk = 1, lp = 1 / 3, ap = 2 / 3;
function jse(n) {
  let e = n.graph._jumpOverUpdateList;
  if (e == null && (e = n.graph._jumpOverUpdateList = [], n.graph.on("cell:mouseup", () => {
    const t = n.graph._jumpOverUpdateList;
    setTimeout(() => {
      for (let i = 0; i < t.length; i += 1)
        t[i].update();
    });
  }), n.graph.on("model:reseted", () => {
    e = n.graph._jumpOverUpdateList = [];
  })), e.indexOf(n) < 0) {
    e.push(n);
    const t = () => e.splice(e.indexOf(n), 1);
    n.cell.once("change:connector", t), n.cell.once("removed", t);
  }
}
function Ev(n, e, t = []) {
  const i = [n, ...t, e], s = [];
  return i.forEach((r, o) => {
    const l = i[o + 1];
    l != null && s.push(new Ie(r, l));
  }), s;
}
function Vse(n, e) {
  const t = [];
  return e.forEach((i) => {
    const s = n.intersectsWithLine(i);
    s && t.push(s);
  }), t;
}
function gk(n, e) {
  return new Ie(n, e).squaredLength();
}
function Fse(n, e, t) {
  return e.reduce((i, s, r) => {
    if (nm.includes(s))
      return i;
    const o = i.pop() || n, l = z.create(s).move(o.start, -t);
    let a = z.create(s).move(o.start, +t);
    const c = e[r + 1];
    if (c != null) {
      const d = a.distance(c);
      d <= t && (a = c.move(o.start, d), nm.push(c));
    } else if (l.distance(o.end) < t * 2 + pk)
      return i.push(o), i;
    if (a.distance(o.start) < t * 2 + pk)
      return i.push(o), i;
    const h = new Ie(l, a);
    return Bd.push(h), i.push(new Ie(o.start, l), h, new Ie(a, o.end)), i;
  }, []);
}
function mk(n, e, t, i) {
  const s = new Be();
  let r;
  return r = Be.createSegment("M", n[0].start), s.appendSegment(r), n.forEach((o, l) => {
    if (Bd.includes(o)) {
      let a, c, u, h;
      if (t === "arc") {
        a = -90, c = o.start.diff(o.end), (c.x < 0 || c.x === 0 && c.y < 0) && (a += 180);
        const f = o.getCenter(), p = new Ie(f, o.end).rotate(a, f);
        let g;
        g = new Ie(o.start, f), u = g.pointAt(2 / 3).rotate(a, o.start), h = p.pointAt(1 / 3).rotate(-a, p.end), r = Be.createSegment("C", u, h, p.end), s.appendSegment(r), g = new Ie(f, o.end), u = p.pointAt(1 / 3).rotate(a, p.end), h = g.pointAt(1 / 3).rotate(-a, o.end), r = Be.createSegment("C", u, h, o.end), s.appendSegment(r);
      } else if (t === "gap")
        r = Be.createSegment("M", o.end), s.appendSegment(r);
      else if (t === "cubic") {
        a = o.start.theta(o.end);
        const d = e * 0.6;
        let f = e * 1.35;
        c = o.start.diff(o.end), (c.x < 0 || c.x === 0 && c.y < 0) && (f *= -1), u = new z(o.start.x + d, o.start.y + f).rotate(a, o.start), h = new z(o.end.x - d, o.end.y + f).rotate(a, o.end), r = Be.createSegment("C", u, h, o.end), s.appendSegment(r);
      }
    } else {
      const a = n[l + 1];
      i === 0 || !a || Bd.includes(a) ? (r = Be.createSegment("L", o.end), s.appendSegment(r)) : Zse(i, s, o.end, o.start, a.end);
    }
  }), s;
}
function Zse(n, e, t, i, s) {
  const r = t.distance(i) / 2, o = t.distance(s) / 2, l = -Math.min(n, r), a = -Math.min(n, o), c = t.clone().move(i, l).round(), u = t.clone().move(s, a).round(), h = new z(lp * c.x + ap * t.x, ap * t.y + lp * c.y), d = new z(lp * u.x + ap * t.x, ap * t.y + lp * u.y);
  let f;
  f = Be.createSegment("L", c), e.appendSegment(f), f = Be.createSegment("C", h, d, u), e.appendSegment(f);
}
let Bd, nm;
const qse = function(n, e, t, i = {}) {
  Bd = [], nm = [], jse(this);
  const s = i.size || 5, r = i.type || "arc", o = i.radius || 0, l = i.ignoreConnectors || ["smooth"], a = this.graph, u = a.model.getEdges();
  if (u.length === 1)
    return mk(Ev(n, e, t), s, r, o);
  const h = this.cell, d = u.indexOf(h), f = a.options.connecting.connector || {}, p = u.filter((w, x) => {
    const S = w.getConnector() || f;
    return l.includes(S.name) ? !1 : x > d ? S.name !== "jumpover" : !0;
  }), g = p.map((w) => a.findViewByCell(w)), m = Ev(n, e, t), v = g.map((w) => w == null ? [] : w === this ? m : Ev(w.sourcePoint, w.targetPoint, w.routePoints)), O = [];
  m.forEach((w) => {
    const x = p.reduce((S, C, k) => {
      if (C !== h) {
        const E = Vse(w, v[k]);
        S.push(...E);
      }
      return S;
    }, []).sort((S, C) => gk(w.start, S) - gk(w.start, C));
    x.length > 0 ? O.push(...Fse(w, x, s)) : O.push(w);
  });
  const b = mk(O, s, r, o);
  return Bd = [], nm = [], i.raw ? b : b.serialize();
}, Wse = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  jumpover: qse,
  loop: Bse,
  normal: Ise,
  rounded: Qse,
  smooth: zse
}, Symbol.toStringTag, { value: "Module" }));
var Ra;
(function(n) {
  n.presets = Wse, n.registry = An.create({
    type: "connector"
  }), n.registry.register(n.presets, !0);
})(Ra || (Ra = {}));
var Hse = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class eR extends gn {
  constructor(e = {}) {
    super(), this.pending = !1, this.changing = !1, this.data = {}, this.mutate(Bt(e)), this.changed = {};
  }
  mutate(e, t = {}) {
    const i = t.unset === !0, s = t.silent === !0, r = [], o = this.changing;
    this.changing = !0, o || (this.previous = Bt(this.data), this.changed = {});
    const l = this.data, a = this.previous, c = this.changed;
    if (Object.keys(e).forEach((u) => {
      const h = u, d = e[h];
      cn(l[h], d) || r.push(h), cn(a[h], d) ? delete c[h] : c[h] = d, i ? delete l[h] : l[h] = d;
    }), !s && r.length > 0 && (this.pending = !0, this.pendingOptions = t, r.forEach((u) => {
      this.emit("change:*", {
        key: u,
        options: t,
        store: this,
        current: l[u],
        previous: a[u]
      });
    })), o)
      return this;
    if (!s)
      for (; this.pending; )
        this.pending = !1, this.emit("changed", {
          current: l,
          previous: a,
          store: this,
          options: this.pendingOptions
        });
    return this.pending = !1, this.changing = !1, this.pendingOptions = null, this;
  }
  get(e, t) {
    if (e == null)
      return this.data;
    const i = this.data[e];
    return i ?? t;
  }
  getPrevious(e) {
    if (this.previous) {
      const t = this.previous[e];
      return t ?? void 0;
    }
  }
  set(e, t, i) {
    return e != null && (typeof e == "object" ? this.mutate(e, t) : this.mutate({ [e]: t }, i)), this;
  }
  remove(e, t) {
    const s = {};
    let r;
    if (typeof e == "string")
      s[e] = void 0, r = t;
    else if (Array.isArray(e))
      e.forEach((o) => s[o] = void 0), r = t;
    else {
      for (const o in this.data)
        s[o] = void 0;
      r = e;
    }
    return this.mutate(s, Object.assign(Object.assign({}, r), { unset: !0 })), this;
  }
  getByPath(e) {
    return rw(this.data, e, "/");
  }
  setByPath(e, t, i = {}) {
    const s = "/", r = Array.isArray(e) ? [...e] : e.split(s), o = Array.isArray(e) ? e.join(s) : e, l = r[0], a = r.length;
    if (i.propertyPath = o, i.propertyValue = t, i.propertyPathArray = r, a === 1)
      this.set(l, t, i);
    else {
      const c = {};
      let u = c, h = l;
      for (let p = 1; p < a; p += 1) {
        const g = r[p], m = Number.isFinite(Number(g));
        u = u[h] = m ? [] : {}, h = g;
      }
      sh(c, r, t, s);
      const d = Bt(this.data);
      i.rewrite && WC(d, e, s);
      const f = On(d, c);
      this.set(l, f[l], i);
    }
    return this;
  }
  removeByPath(e, t) {
    const i = Array.isArray(e) ? e : e.split("/"), s = i[0];
    if (i.length === 1)
      this.remove(s, t);
    else {
      const r = i.slice(1), o = Bt(this.get(s));
      o && WC(o, r), this.set(s, o, t);
    }
    return this;
  }
  hasChanged(e) {
    return e == null ? Object.keys(this.changed).length > 0 : e in this.changed;
  }
  /**
   * Returns an object containing all the data that have changed,
   * or `null` if there are no changes. Useful for determining what
   * parts of a view need to be updated.
   */
  getChanges(e) {
    if (e == null)
      return this.hasChanged() ? Bt(this.changed) : null;
    const t = this.changing ? this.previous : this.data, i = {};
    let s;
    for (const r in e) {
      const o = e[r];
      cn(t[r], o) || (i[r] = o, s = !0);
    }
    return s ? Bt(i) : null;
  }
  /**
   * Returns a copy of the store's `data` object.
   */
  toJSON() {
    return Bt(this.data);
  }
  clone() {
    const e = this.constructor;
    return new e(this.data);
  }
  dispose() {
    this.off(), this.data = {}, this.previous = {}, this.changed = {}, this.pending = !1, this.changing = !1, this.pendingOptions = null, this.trigger("disposed", { store: this });
  }
}
Hse([
  gn.dispose()
], eR.prototype, "dispose", null);
class Qd {
  constructor(e) {
    this.cell = e, this.ids = {}, this.cache = {};
  }
  get() {
    return Object.keys(this.ids);
  }
  start(e, t, i = {}, s = "/") {
    const r = this.cell.getPropByPath(e), o = vQ(i, Qd.defaultOptions), l = this.getTiming(o.timing), a = this.getInterp(o.interp, r, t);
    let c = 0;
    const u = Array.isArray(e) ? e.join(s) : e, h = Array.isArray(e) ? e : e.split(s), d = () => {
      const f = (/* @__PURE__ */ new Date()).getTime();
      c === 0 && (c = f);
      let g = (f - c) / o.duration;
      g < 1 ? this.ids[u] = requestAnimationFrame(d) : g = 1;
      const m = a(l(g));
      this.cell.setPropByPath(h, m), i.progress && i.progress(Object.assign({ progress: g, currentValue: m }, this.getArgs(u))), g === 1 && (this.cell.notify("transition:complete", this.getArgs(u)), i.complete && i.complete(this.getArgs(u)), this.cell.notify("transition:finish", this.getArgs(u)), i.finish && i.finish(this.getArgs(u)), this.clean(u));
    };
    return setTimeout(() => {
      this.stop(e, void 0, s), this.cache[u] = { startValue: r, targetValue: t, options: o }, this.ids[u] = requestAnimationFrame(d), this.cell.notify("transition:start", this.getArgs(u)), i.start && i.start(this.getArgs(u));
    }, i.delay), this.stop.bind(this, e, s, i);
  }
  stop(e, t = {}, i = "/") {
    const s = Array.isArray(e) ? e : e.split(i);
    return Object.keys(this.ids).filter((r) => cn(s, r.split(i).slice(0, s.length))).forEach((r) => {
      cancelAnimationFrame(this.ids[r]);
      const o = this.cache[r], l = this.getArgs(r), a = Object.assign(Object.assign({}, o.options), t), c = a.jumpedToEnd;
      c && o.targetValue != null && (this.cell.setPropByPath(r, o.targetValue), this.cell.notify("transition:end", Object.assign({}, l)), this.cell.notify("transition:complete", Object.assign({}, l)), a.complete && a.complete(Object.assign({}, l)));
      const u = Object.assign({ jumpedToEnd: c }, l);
      this.cell.notify("transition:stop", Object.assign({}, u)), a.stop && a.stop(Object.assign({}, u)), this.cell.notify("transition:finish", Object.assign({}, l)), a.finish && a.finish(Object.assign({}, l)), this.clean(r);
    }), this;
  }
  clean(e) {
    delete this.ids[e], delete this.cache[e];
  }
  getTiming(e) {
    return typeof e == "string" ? Fa[e] : e;
  }
  getInterp(e, t, i) {
    return e ? e(t, i) : typeof i == "number" ? wa.number(t, i) : typeof i == "string" ? i[0] === "#" ? wa.color(t, i) : wa.unit(t, i) : wa.object(t, i);
  }
  getArgs(e) {
    const t = this.cache[e];
    return {
      path: e,
      startValue: t.startValue,
      targetValue: t.targetValue,
      cell: this.cell
    };
  }
}
(function(n) {
  n.defaultOptions = {
    delay: 10,
    duration: 100,
    timing: "linear"
  };
})(Qd || (Qd = {}));
var Xse = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
}, tR = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class gt extends gn {
  static config(e) {
    const { markup: t, propHooks: i, attrHooks: s } = e, r = tR(e, ["markup", "propHooks", "attrHooks"]);
    t != null && (this.markup = t), i && (this.propHooks = this.propHooks.slice(), Array.isArray(i) ? this.propHooks.push(...i) : typeof i == "function" ? this.propHooks.push(i) : Object.values(i).forEach((o) => {
      typeof o == "function" && this.propHooks.push(o);
    })), s && (this.attrHooks = Object.assign(Object.assign({}, this.attrHooks), s)), this.defaults = On({}, this.defaults, r);
  }
  static getMarkup() {
    return this.markup;
  }
  static getDefaults(e) {
    return e ? this.defaults : Bt(this.defaults);
  }
  static getAttrHooks() {
    return this.attrHooks;
  }
  static applyPropHooks(e, t) {
    return this.propHooks.reduce((i, s) => s ? Ze(s, e, i) : i, t);
  }
  // #endregion
  get [Symbol.toStringTag]() {
    return gt.toStringTag;
  }
  constructor(e = {}) {
    super();
    const i = this.constructor.getDefaults(!0), s = On({}, this.preprocess(i), this.preprocess(e));
    this.id = s.id || qg(), this.store = new eR(s), this.animation = new Qd(this), this.setup(), this.init(), this.postprocess(e);
  }
  init() {
  }
  // #region model
  get model() {
    return this._model;
  }
  set model(e) {
    this._model !== e && (this._model = e);
  }
  // #endregion
  preprocess(e, t) {
    const i = e.id, r = this.constructor.applyPropHooks(this, e);
    return i == null && t !== !0 && (r.id = qg()), r;
  }
  postprocess(e) {
  }
  // eslint-disable-line
  setup() {
    this.store.on("change:*", (e) => {
      const { key: t, current: i, previous: s, options: r } = e;
      this.notify("change:*", {
        key: t,
        options: r,
        current: i,
        previous: s,
        cell: this
      }), this.notify(`change:${t}`, {
        options: r,
        current: i,
        previous: s,
        cell: this
      });
      const o = t;
      (o === "source" || o === "target") && this.notify("change:terminal", {
        type: o,
        current: i,
        previous: s,
        options: r,
        cell: this
      });
    }), this.store.on("changed", ({ options: e }) => this.notify("changed", { options: e, cell: this }));
  }
  notify(e, t) {
    this.trigger(e, t);
    const i = this.model;
    return i && (i.notify(`cell:${e}`, t), this.isNode() ? i.notify(`node:${e}`, Object.assign(Object.assign({}, t), { node: this })) : this.isEdge() && i.notify(`edge:${e}`, Object.assign(Object.assign({}, t), { edge: this }))), this;
  }
  isNode() {
    return !1;
  }
  isEdge() {
    return !1;
  }
  isSameStore(e) {
    return this.store === e.store;
  }
  get view() {
    return this.store.get("view");
  }
  get shape() {
    return this.store.get("shape", "");
  }
  getProp(e, t) {
    return e == null ? this.store.get() : this.store.get(e, t);
  }
  setProp(e, t, i) {
    if (typeof e == "string")
      this.store.set(e, t, i);
    else {
      const s = this.preprocess(e, !0);
      this.store.set(On({}, this.getProp(), s), t), this.postprocess(e);
    }
    return this;
  }
  removeProp(e, t) {
    return typeof e == "string" || Array.isArray(e) ? this.store.removeByPath(e, t) : this.store.remove(t), this;
  }
  hasChanged(e) {
    return e == null ? this.store.hasChanged() : this.store.hasChanged(e);
  }
  getPropByPath(e) {
    return this.store.getByPath(e);
  }
  setPropByPath(e, t, i = {}) {
    return this.model && (e === "children" ? this._children = t ? t.map((s) => this.model.getCell(s)).filter((s) => s != null) : null : e === "parent" && (this._parent = t ? this.model.getCell(t) : null)), this.store.setByPath(e, t, i), this;
  }
  removePropByPath(e, t = {}) {
    const i = Array.isArray(e) ? e : e.split("/");
    return i[0] === "attrs" && (t.dirty = !0), this.store.removeByPath(i, t), this;
  }
  prop(e, t, i) {
    return e == null ? this.getProp() : typeof e == "string" || Array.isArray(e) ? arguments.length === 1 ? this.getPropByPath(e) : t == null ? this.removePropByPath(e, i || {}) : this.setPropByPath(e, t, i || {}) : this.setProp(e, t || {});
  }
  previous(e) {
    return this.store.getPrevious(e);
  }
  // #endregion
  // #region zIndex
  get zIndex() {
    return this.getZIndex();
  }
  set zIndex(e) {
    e == null ? this.removeZIndex() : this.setZIndex(e);
  }
  getZIndex() {
    return this.store.get("zIndex");
  }
  setZIndex(e, t = {}) {
    return this.store.set("zIndex", e, t), this;
  }
  removeZIndex(e = {}) {
    return this.store.remove("zIndex", e), this;
  }
  toFront(e = {}) {
    const t = this.model;
    if (t) {
      let i = t.getMaxZIndex(), s;
      e.deep ? (s = this.getDescendants({ deep: !0, breadthFirst: !0 }), s.unshift(this)) : s = [this], i = i - s.length + 1;
      const r = t.total();
      let o = t.indexOf(this) !== r - s.length;
      o || (o = s.some((l, a) => l.getZIndex() !== i + a)), o && this.batchUpdate("to-front", () => {
        i += s.length, s.forEach((l, a) => {
          l.setZIndex(i + a, e);
        });
      });
    }
    return this;
  }
  toBack(e = {}) {
    const t = this.model;
    if (t) {
      let i = t.getMinZIndex(), s;
      e.deep ? (s = this.getDescendants({ deep: !0, breadthFirst: !0 }), s.unshift(this)) : s = [this];
      let r = t.indexOf(this) !== 0;
      r || (r = s.some((o, l) => o.getZIndex() !== i + l)), r && this.batchUpdate("to-back", () => {
        i -= s.length, s.forEach((o, l) => {
          o.setZIndex(i + l, e);
        });
      });
    }
    return this;
  }
  // #endregion
  // #region markup
  get markup() {
    return this.getMarkup();
  }
  set markup(e) {
    e == null ? this.removeMarkup() : this.setMarkup(e);
  }
  getMarkup() {
    let e = this.store.get("markup");
    return e == null && (e = this.constructor.getMarkup()), e;
  }
  setMarkup(e, t = {}) {
    return this.store.set("markup", e, t), this;
  }
  removeMarkup(e = {}) {
    return this.store.remove("markup", e), this;
  }
  // #endregion
  // #region attrs
  get attrs() {
    return this.getAttrs();
  }
  set attrs(e) {
    e == null ? this.removeAttrs() : this.setAttrs(e);
  }
  getAttrs() {
    const e = this.store.get("attrs");
    return e ? Object.assign({}, e) : {};
  }
  setAttrs(e, t = {}) {
    if (e == null)
      this.removeAttrs(t);
    else {
      const i = (s) => this.store.set("attrs", s, t);
      if (t.overwrite === !0)
        i(e);
      else {
        const s = this.getAttrs();
        t.deep === !1 ? i(Object.assign(Object.assign({}, s), e)) : i(On({}, s, e));
      }
    }
    return this;
  }
  replaceAttrs(e, t = {}) {
    return this.setAttrs(e, Object.assign(Object.assign({}, t), { overwrite: !0 }));
  }
  updateAttrs(e, t = {}) {
    return this.setAttrs(e, Object.assign(Object.assign({}, t), { deep: !1 }));
  }
  removeAttrs(e = {}) {
    return this.store.remove("attrs", e), this;
  }
  getAttrDefinition(e) {
    if (!e)
      return null;
    const i = this.constructor.getAttrHooks() || {};
    let s = i[e] || ho.registry.get(e);
    if (!s) {
      const r = Um(e);
      s = i[r] || ho.registry.get(r);
    }
    return s || null;
  }
  getAttrByPath(e) {
    return e == null || e === "" ? this.getAttrs() : this.getPropByPath(this.prefixAttrPath(e));
  }
  setAttrByPath(e, t, i = {}) {
    return this.setPropByPath(this.prefixAttrPath(e), t, i), this;
  }
  removeAttrByPath(e, t = {}) {
    return this.removePropByPath(this.prefixAttrPath(e), t), this;
  }
  prefixAttrPath(e) {
    return Array.isArray(e) ? ["attrs"].concat(e) : `attrs/${e}`;
  }
  attr(e, t, i) {
    return e == null ? this.getAttrByPath() : typeof e == "string" || Array.isArray(e) ? arguments.length === 1 ? this.getAttrByPath(e) : t == null ? this.removeAttrByPath(e, i || {}) : this.setAttrByPath(e, t, i || {}) : this.setAttrs(e, t || {});
  }
  // #endregion
  // #region visible
  get visible() {
    return this.isVisible();
  }
  set visible(e) {
    this.setVisible(e);
  }
  setVisible(e, t = {}) {
    return this.store.set("visible", e, t), this;
  }
  isVisible() {
    return this.store.get("visible") !== !1;
  }
  show(e = {}) {
    return this.isVisible() || this.setVisible(!0, e), this;
  }
  hide(e = {}) {
    return this.isVisible() && this.setVisible(!1, e), this;
  }
  toggleVisible(e, t = {}) {
    const i = typeof e == "boolean" ? e : !this.isVisible(), s = typeof e == "boolean" ? t : e;
    return i ? this.show(s) : this.hide(s), this;
  }
  // #endregion
  // #region data
  get data() {
    return this.getData();
  }
  set data(e) {
    this.setData(e);
  }
  getData() {
    return this.store.get("data");
  }
  setData(e, t = {}) {
    if (e == null)
      this.removeData(t);
    else {
      const i = (s) => this.store.set("data", s, t);
      if (t.overwrite === !0)
        i(e);
      else {
        const s = this.getData();
        t.deep === !1 ? i(typeof e == "object" ? Object.assign(Object.assign({}, s), e) : e) : i(On({}, s, e));
      }
    }
    return this;
  }
  replaceData(e, t = {}) {
    return this.setData(e, Object.assign(Object.assign({}, t), { overwrite: !0 }));
  }
  updateData(e, t = {}) {
    return this.setData(e, Object.assign(Object.assign({}, t), { deep: !1 }));
  }
  removeData(e = {}) {
    return this.store.remove("data", e), this;
  }
  // #endregion
  // #region parent children
  get parent() {
    return this.getParent();
  }
  get children() {
    return this.getChildren();
  }
  getParentId() {
    return this.store.get("parent");
  }
  getParent() {
    const e = this.getParentId();
    if (e && this.model) {
      const t = this.model.getCell(e);
      return this._parent = t, t;
    }
    return null;
  }
  getChildren() {
    const e = this.store.get("children");
    if (e && e.length && this.model) {
      const t = e.map((i) => {
        var s;
        return (s = this.model) === null || s === void 0 ? void 0 : s.getCell(i);
      }).filter((i) => i != null);
      return this._children = t, [...t];
    }
    return null;
  }
  hasParent() {
    return this.parent != null;
  }
  isParentOf(e) {
    return e != null && e.getParent() === this;
  }
  isChildOf(e) {
    return e != null && this.getParent() === e;
  }
  eachChild(e, t) {
    return this.children && this.children.forEach(e, t), this;
  }
  filterChild(e, t) {
    return this.children ? this.children.filter(e, t) : [];
  }
  getChildCount() {
    return this.children == null ? 0 : this.children.length;
  }
  getChildIndex(e) {
    return this.children == null ? -1 : this.children.indexOf(e);
  }
  getChildAt(e) {
    return this.children != null && e >= 0 ? this.children[e] : null;
  }
  getAncestors(e = {}) {
    const t = [];
    let i = this.getParent();
    for (; i; )
      t.push(i), i = e.deep !== !1 ? i.getParent() : null;
    return t;
  }
  getDescendants(e = {}) {
    if (e.deep !== !1) {
      if (e.breadthFirst) {
        const t = [], i = this.getChildren() || [];
        for (; i.length > 0; ) {
          const s = i.shift(), r = s.getChildren();
          t.push(s), r && i.push(...r);
        }
        return t;
      }
      {
        const t = this.getChildren() || [];
        return t.forEach((i) => {
          t.push(...i.getDescendants(e));
        }), t;
      }
    }
    return this.getChildren() || [];
  }
  isDescendantOf(e, t = {}) {
    if (e == null)
      return !1;
    if (t.deep !== !1) {
      let i = this.getParent();
      for (; i; ) {
        if (i === e)
          return !0;
        i = i.getParent();
      }
      return !1;
    }
    return this.isChildOf(e);
  }
  isAncestorOf(e, t = {}) {
    return e == null ? !1 : e.isDescendantOf(this, t);
  }
  contains(e) {
    return this.isAncestorOf(e);
  }
  getCommonAncestor(...e) {
    return gt.getCommonAncestor(this, ...e);
  }
  setParent(e, t = {}) {
    return this._parent = e, e ? this.store.set("parent", e.id, t) : this.store.remove("parent", t), this;
  }
  setChildren(e, t = {}) {
    return this._children = e, e != null ? this.store.set("children", e.map((i) => i.id), t) : this.store.remove("children", t), this;
  }
  unembed(e, t = {}) {
    const i = this.children;
    if (i != null && e != null) {
      const s = this.getChildIndex(e);
      s !== -1 && (i.splice(s, 1), e.setParent(null, t), this.setChildren(i, t));
    }
    return this;
  }
  embed(e, t = {}) {
    return e.addTo(this, t), this;
  }
  addTo(e, t = {}) {
    return gt.isCell(e) ? e.addChild(this, t) : e.addCell(this, t), this;
  }
  insertTo(e, t, i = {}) {
    return e.insertChild(this, t, i), this;
  }
  addChild(e, t = {}) {
    return this.insertChild(e, void 0, t);
  }
  insertChild(e, t, i = {}) {
    if (e != null && e !== this) {
      const s = e.getParent(), r = this !== s;
      let o = t;
      if (o == null && (o = this.getChildCount(), r || (o -= 1)), s) {
        const a = s.getChildren();
        if (a) {
          const c = a.indexOf(e);
          c >= 0 && (e.setParent(null, i), a.splice(c, 1), s.setChildren(a, i));
        }
      }
      let l = this.children;
      if (l == null ? (l = [], l.push(e)) : l.splice(o, 0, e), e.setParent(this, i), this.setChildren(l, i), r && this.model) {
        const a = this.model.getIncomingEdges(this), c = this.model.getOutgoingEdges(this);
        a && a.forEach((u) => u.updateParent(i)), c && c.forEach((u) => u.updateParent(i));
      }
      this.model && this.model.addCell(e, i);
    }
    return this;
  }
  removeFromParent(e = {}) {
    const t = this.getParent();
    if (t != null) {
      const i = t.getChildIndex(this);
      t.removeChildAt(i, e);
    }
    return this;
  }
  removeChild(e, t = {}) {
    const i = this.getChildIndex(e);
    return this.removeChildAt(i, t);
  }
  removeChildAt(e, t = {}) {
    const i = this.getChildAt(e);
    return this.children != null && i != null && (this.unembed(i, t), i.remove(t)), i;
  }
  remove(e = {}) {
    return this.batchUpdate("remove", () => {
      const t = this.getParent();
      t && t.removeChild(this, e), e.deep !== !1 && this.eachChild((i) => i.remove(e)), this.model && this.model.removeCell(this, e);
    }), this;
  }
  transition(e, t, i = {}, s = "/") {
    return this.animation.start(e, t, i, s);
  }
  stopTransition(e, t, i = "/") {
    return this.animation.stop(e, t, i), this;
  }
  getTransitions() {
    return this.animation.get();
  }
  // #endregion
  // #region transform
  // eslint-disable-next-line
  translate(e, t, i) {
    return this;
  }
  scale(e, t, i, s) {
    return this;
  }
  addTools(e, t, i) {
    const s = Array.isArray(e) ? e : [e], r = typeof t == "string" ? t : null, o = typeof t == "object" ? t : typeof i == "object" ? i : {};
    if (o.reset)
      return this.setTools({ name: r, items: s, local: o.local }, o);
    let l = Bt(this.getTools());
    if (l == null || r == null || l.name === r)
      return l == null && (l = {}), l.items || (l.items = []), l.name = r, l.items = [...l.items, ...s], this.setTools(Object.assign({}, l), o);
  }
  setTools(e, t = {}) {
    return e == null ? this.removeTools() : this.store.set("tools", gt.normalizeTools(e), t), this;
  }
  getTools() {
    return this.store.get("tools");
  }
  removeTools(e = {}) {
    return this.store.remove("tools", e), this;
  }
  hasTools(e) {
    const t = this.getTools();
    return t == null ? !1 : e == null ? !0 : t.name === e;
  }
  hasTool(e) {
    const t = this.getTools();
    return t == null ? !1 : t.items.some((i) => typeof i == "string" ? i === e : i.name === e);
  }
  removeTool(e, t = {}) {
    const i = Bt(this.getTools());
    if (i) {
      let s = !1;
      const r = i.items.slice(), o = (l) => {
        r.splice(l, 1), s = !0;
      };
      if (typeof e == "number")
        o(e);
      else
        for (let l = r.length - 1; l >= 0; l -= 1) {
          const a = r[l];
          (typeof a == "string" ? a === e : a.name === e) && o(l);
        }
      s && (i.items = r, this.setTools(i, t));
    }
    return this;
  }
  // #endregion
  // #region common
  // eslint-disable-next-line
  getBBox(e) {
    return new ye();
  }
  // eslint-disable-next-line
  getConnectionPoint(e, t) {
    return new z();
  }
  toJSON(e = {}) {
    const t = Object.assign({}, this.store.get()), i = Object.prototype.toString, s = this.isNode() ? "node" : this.isEdge() ? "edge" : "cell";
    if (!t.shape) {
      const p = this.constructor;
      throw new Error(`Unable to serialize ${s} missing "shape" prop, check the ${s} "${p.name || i.call(p)}"`);
    }
    const r = this.constructor, o = e.diff === !0, l = t.attrs || {}, a = r.getDefaults(!0), c = o ? this.preprocess(a, !0) : a, u = c.attrs || {}, h = {};
    Object.entries(t).forEach(([p, g]) => {
      if (g != null && !Array.isArray(g) && typeof g == "object" && !kr(g))
        throw new Error(`Can only serialize ${s} with plain-object props, but got a "${i.call(g)}" type of key "${p}" on ${s} "${this.id}"`);
      if (p !== "attrs" && p !== "shape" && o) {
        const m = c[p];
        cn(g, m) && delete t[p];
      }
    }), Object.keys(l).forEach((p) => {
      const g = l[p], m = u[p];
      Object.keys(g).forEach((v) => {
        const O = g[v], b = m ? m[v] : null;
        O != null && typeof O == "object" && !Array.isArray(O) ? Object.keys(O).forEach((w) => {
          const x = O[w];
          if (m == null || b == null || !wn(b) || !cn(b[w], x)) {
            h[p] == null && (h[p] = {}), h[p][v] == null && (h[p][v] = {});
            const S = h[p][v];
            S[w] = x;
          }
        }) : (m == null || !cn(b, O)) && (h[p] == null && (h[p] = {}), h[p][v] = O);
      });
    });
    const d = Object.assign(Object.assign({}, t), { attrs: qA(h) ? void 0 : h });
    d.attrs == null && delete d.attrs;
    const f = d;
    return f.angle === 0 && delete f.angle, Bt(f);
  }
  clone(e = {}) {
    if (!e.deep) {
      const i = Object.assign({}, this.store.get());
      e.keepId || delete i.id, delete i.parent, delete i.children;
      const s = this.constructor;
      return new s(i);
    }
    return gt.deepClone(this)[this.id];
  }
  findView(e) {
    return e.findViewByCell(this);
  }
  // #endregion
  // #region batch
  startBatch(e, t = {}, i = this.model) {
    return this.notify("batch:start", { name: e, data: t, cell: this }), i && i.startBatch(e, Object.assign(Object.assign({}, t), { cell: this })), this;
  }
  stopBatch(e, t = {}, i = this.model) {
    return i && i.stopBatch(e, Object.assign(Object.assign({}, t), { cell: this })), this.notify("batch:stop", { name: e, data: t, cell: this }), this;
  }
  batchUpdate(e, t, i) {
    const s = this.model;
    this.startBatch(e, i, s);
    const r = t();
    return this.stopBatch(e, i, s), r;
  }
  // #endregion
  // #region IDisposable
  dispose() {
    this.removeFromParent(), this.store.dispose();
  }
}
gt.defaults = {};
gt.attrHooks = {};
gt.propHooks = [];
Xse([
  gn.dispose()
], gt.prototype, "dispose", null);
(function(n) {
  function e(t) {
    return typeof t == "string" ? { items: [t] } : Array.isArray(t) ? { items: t } : t.items ? t : {
      items: [t]
    };
  }
  n.normalizeTools = e;
})(gt || (gt = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNode == "function" && typeof s.isEdge == "function" && typeof s.prop == "function" && typeof s.attr == "function";
  }
  n.isCell = e;
})(gt || (gt = {}));
(function(n) {
  function e(...r) {
    const o = r.filter((a) => a != null).map((a) => a.getAncestors()).sort((a, c) => a.length - c.length);
    return o.shift().find((a) => o.every((c) => c.includes(a))) || null;
  }
  n.getCommonAncestor = e;
  function t(r, o = {}) {
    let l = null;
    for (let a = 0, c = r.length; a < c; a += 1) {
      const u = r[a];
      let h = u.getBBox(o);
      if (h) {
        if (u.isNode()) {
          const d = u.getAngle();
          d != null && d !== 0 && (h = h.bbox(d));
        }
        l = l == null ? h : l.union(h);
      }
    }
    return l;
  }
  n.getCellsBBox = t;
  function i(r) {
    const o = [r, ...r.getDescendants({ deep: !0 })];
    return n.cloneCells(o);
  }
  n.deepClone = i;
  function s(r) {
    const o = KA(r), l = o.reduce((a, c) => (a[c.id] = c.clone(), a), {});
    return o.forEach((a) => {
      const c = l[a.id];
      if (c.isEdge()) {
        const d = c.getSourceCellId(), f = c.getTargetCellId();
        d && l[d] && c.setSource(Object.assign(Object.assign({}, c.getSource()), { cell: l[d].id })), f && l[f] && c.setTarget(Object.assign(Object.assign({}, c.getTarget()), { cell: l[f].id }));
      }
      const u = a.getParent();
      u && l[u.id] && c.setParent(l[u.id]);
      const h = a.getChildren();
      if (h && h.length) {
        const d = h.reduce((f, p) => (l[p.id] && f.push(l[p.id]), f), []);
        d.length > 0 && c.setChildren(d);
      }
    }), l;
  }
  n.cloneCells = s;
})(gt || (gt = {}));
(function(n) {
  n.config({
    propHooks(e) {
      var { tools: t } = e, i = tR(e, ["tools"]);
      return t && (i.tools = n.normalizeTools(t)), i;
    }
  });
})(gt || (gt = {}));
var $u;
(function(n) {
  let e, t;
  function i(o, l) {
    return l ? e != null && e.exist(o) : t != null && t.exist(o);
  }
  n.exist = i;
  function s(o) {
    e = o;
  }
  n.setEdgeRegistry = s;
  function r(o) {
    t = o;
  }
  n.setNodeRegistry = r;
})($u || ($u = {}));
class Yse {
  constructor(e) {
    this.ports = [], this.groups = {}, this.init(Bt(e));
  }
  getPorts() {
    return this.ports;
  }
  getGroup(e) {
    return e != null ? this.groups[e] : null;
  }
  getPortsByGroup(e) {
    return this.ports.filter((t) => t.group === e || t.group == null && e == null);
  }
  getPortsLayoutByGroup(e, t) {
    const i = this.getPortsByGroup(e), s = e ? this.getGroup(e) : null, r = s ? s.position : null, o = r ? r.name : null;
    let l;
    if (o != null) {
      const h = Ma.registry.get(o);
      if (h == null)
        return Ma.registry.onNotFound(o);
      l = h;
    } else
      l = Ma.presets.left;
    const a = i.map((h) => h && h.position && h.position.args || {}), c = r && r.args || {};
    return l(a, t, c).map((h, d) => {
      const f = i[d];
      return {
        portLayout: h,
        portId: f.id,
        portSize: f.size,
        portAttrs: f.attrs,
        labelSize: f.label.size,
        labelLayout: this.getPortLabelLayout(f, z.create(h.position), t)
      };
    });
  }
  init(e) {
    const { groups: t, items: i } = e;
    t != null && Object.keys(t).forEach((s) => {
      this.groups[s] = this.parseGroup(t[s]);
    }), Array.isArray(i) && i.forEach((s) => {
      this.ports.push(this.parsePort(s));
    });
  }
  parseGroup(e) {
    return Object.assign(Object.assign({}, e), { label: this.getLabel(e, !0), position: this.getPortPosition(e.position, !0) });
  }
  parsePort(e) {
    const t = Object.assign({}, e), i = this.getGroup(e.group) || {};
    return t.markup = t.markup || i.markup, t.attrs = On({}, i.attrs, t.attrs), t.position = this.createPosition(i, t), t.label = On({}, i.label, this.getLabel(t)), t.zIndex = this.getZIndex(i, t), t.size = Object.assign(Object.assign({}, i.size), t.size), t;
  }
  getZIndex(e, t) {
    return typeof t.zIndex == "number" ? t.zIndex : typeof e.zIndex == "number" || e.zIndex === "auto" ? e.zIndex : "auto";
  }
  createPosition(e, t) {
    return On({
      name: "left",
      args: {}
    }, e.position, { args: t.args });
  }
  getPortPosition(e, t = !1) {
    if (e == null) {
      if (t)
        return { name: "left", args: {} };
    } else {
      if (typeof e == "string")
        return {
          name: e,
          args: {}
        };
      if (Array.isArray(e))
        return {
          name: "absolute",
          args: { x: e[0], y: e[1] }
        };
      if (typeof e == "object")
        return e;
    }
    return { args: {} };
  }
  getPortLabelPosition(e, t = !1) {
    if (e == null) {
      if (t)
        return { name: "left", args: {} };
    } else {
      if (typeof e == "string")
        return {
          name: e,
          args: {}
        };
      if (typeof e == "object")
        return e;
    }
    return { args: {} };
  }
  getLabel(e, t = !1) {
    const i = e.label || {};
    return i.position = this.getPortLabelPosition(i.position, t), i;
  }
  getPortLabelLayout(e, t, i) {
    const s = e.label.position.name || "left", r = e.label.position.args || {}, o = xu.registry.get(s) || xu.presets.left;
    return o ? o(t, i, r) : null;
  }
}
var b0 = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
let $n = class nR extends gt {
  get [Symbol.toStringTag]() {
    return nR.toStringTag;
  }
  constructor(e = {}) {
    super(e), this.initPorts();
  }
  preprocess(e, t) {
    const { x: i, y: s, width: r, height: o } = e, l = b0(e, ["x", "y", "width", "height"]);
    if (i != null || s != null) {
      const a = l.position;
      l.position = Object.assign(Object.assign({}, a), { x: i ?? (a ? a.x : 0), y: s ?? (a ? a.y : 0) });
    }
    if (r != null || o != null) {
      const a = l.size;
      l.size = Object.assign(Object.assign({}, a), { width: r ?? (a ? a.width : 0), height: o ?? (a ? a.height : 0) });
    }
    return super.preprocess(l, t);
  }
  isNode() {
    return !0;
  }
  size(e, t, i) {
    return e === void 0 ? this.getSize() : typeof e == "number" ? this.setSize(e, t, i) : this.setSize(e, t);
  }
  getSize() {
    const e = this.store.get("size");
    return e ? Object.assign({}, e) : { width: 1, height: 1 };
  }
  setSize(e, t, i) {
    return typeof e == "object" ? this.resize(e.width, e.height, t) : this.resize(e, t, i), this;
  }
  resize(e, t, i = {}) {
    this.startBatch("resize", i);
    const s = i.direction;
    if (s) {
      const r = this.getSize();
      switch (s) {
        case "left":
        case "right":
          t = r.height;
          break;
        case "top":
        case "bottom":
          e = r.width;
          break;
      }
      let l = {
        right: 0,
        "top-right": 0,
        top: 1,
        "top-left": 1,
        left: 2,
        "bottom-left": 2,
        bottom: 3,
        "bottom-right": 3
      }[s];
      const a = Pt.normalize(this.getAngle() || 0);
      i.absolute && (l += Math.floor((a + 45) / 90), l %= 4);
      const c = this.getBBox();
      let u;
      l === 0 ? u = c.getBottomLeft() : l === 1 ? u = c.getCorner() : l === 2 ? u = c.getTopRight() : u = c.getOrigin();
      const h = u.clone().rotate(-a, c.getCenter()), d = Math.sqrt(e * e + t * t) / 2;
      let f = l * Math.PI / 2;
      f += Math.atan(l % 2 === 0 ? t / e : e / t), f -= Pt.toRad(a);
      const g = z.fromPolar(d, f, h).clone().translate(e / -2, t / -2);
      this.store.set("size", { width: e, height: t }, i), this.setPosition(g.x, g.y, i);
    } else
      this.store.set("size", { width: e, height: t }, i);
    return this.stopBatch("resize", i), this;
  }
  scale(e, t, i, s = {}) {
    const r = this.getBBox().scale(e, t, i ?? void 0);
    return this.startBatch("scale", s), this.setPosition(r.x, r.y, s), this.resize(r.width, r.height, s), this.stopBatch("scale"), this;
  }
  position(e, t, i) {
    return typeof e == "number" ? this.setPosition(e, t, i) : this.getPosition(e);
  }
  getPosition(e = {}) {
    if (e.relative) {
      const i = this.getParent();
      if (i != null && i.isNode()) {
        const s = this.getPosition(), r = i.getPosition();
        return {
          x: s.x - r.x,
          y: s.y - r.y
        };
      }
    }
    const t = this.store.get("position");
    return t ? Object.assign({}, t) : { x: 0, y: 0 };
  }
  setPosition(e, t, i = {}) {
    let s, r, o;
    if (typeof e == "object" ? (s = e.x, r = e.y, o = t || {}) : (s = e, r = t, o = i || {}), o.relative) {
      const l = this.getParent();
      if (l != null && l.isNode()) {
        const a = l.getPosition();
        s += a.x, r += a.y;
      }
    }
    if (o.deep) {
      const l = this.getPosition();
      this.translate(s - l.x, r - l.y, o);
    } else
      this.store.set("position", { x: s, y: r }, o);
    return this;
  }
  translate(e = 0, t = 0, i = {}) {
    if (e === 0 && t === 0)
      return this;
    i.translateBy = i.translateBy || this.id;
    const s = this.getPosition();
    if (i.restrict != null && i.translateBy === this.id) {
      const o = this.getBBox({ deep: !0 }), l = i.restrict, a = s.x - o.x, c = s.y - o.y, u = Math.max(l.x + a, Math.min(l.x + l.width + a - o.width, s.x + e)), h = Math.max(l.y + c, Math.min(l.y + l.height + c - o.height, s.y + t));
      e = u - s.x, t = h - s.y;
    }
    const r = {
      x: s.x + e,
      y: s.y + t
    };
    return i.tx = e, i.ty = t, i.transition ? (typeof i.transition != "object" && (i.transition = {}), this.transition("position", r, Object.assign(Object.assign({}, i.transition), { interp: wa.object })), this.eachChild((o) => {
      var l;
      ((l = i.exclude) === null || l === void 0 ? void 0 : l.includes(o)) || o.translate(e, t, i);
    })) : (this.startBatch("translate", i), this.store.set("position", r, i), this.eachChild((o) => {
      var l;
      ((l = i.exclude) === null || l === void 0 ? void 0 : l.includes(o)) || o.translate(e, t, i);
    }), this.stopBatch("translate", i)), this;
  }
  angle(e, t) {
    return e == null ? this.getAngle() : this.rotate(e, t);
  }
  getAngle() {
    return this.store.get("angle", 0);
  }
  rotate(e, t = {}) {
    const i = this.getAngle();
    if (t.center) {
      const s = this.getSize(), r = this.getPosition(), o = this.getBBox().getCenter();
      o.rotate(i - e, t.center);
      const l = o.x - s.width / 2 - r.x, a = o.y - s.height / 2 - r.y;
      this.startBatch("rotate", { angle: e, options: t }), this.setPosition(r.x + l, r.y + a, t), this.rotate(e, Object.assign(Object.assign({}, t), { center: null })), this.stopBatch("rotate");
    } else
      this.store.set("angle", t.absolute ? e : (i + e) % 360, t);
    return this;
  }
  // #endregion
  // #region common
  getBBox(e = {}) {
    if (e.deep) {
      const t = this.getDescendants({ deep: !0, breadthFirst: !0 });
      return t.push(this), gt.getCellsBBox(t);
    }
    return ye.fromPositionAndSize(this.getPosition(), this.getSize());
  }
  getConnectionPoint(e, t) {
    const i = this.getBBox(), s = i.getCenter(), r = e.getTerminal(t);
    if (r == null)
      return s;
    const o = r.port;
    if (!o || !this.hasPort(o))
      return s;
    const l = this.getPort(o);
    if (!l || !l.group)
      return s;
    const c = this.getPortsPosition(l.group)[o].position, u = z.create(c).translate(i.getOrigin()), h = this.getAngle();
    return h && u.rotate(-h, s), u;
  }
  /**
   * Sets cell's size and position based on the children bbox and given padding.
   */
  fit(e = {}) {
    const i = (this.getChildren() || []).filter((c) => c.isNode());
    if (i.length === 0)
      return this;
    this.startBatch("fit-embeds", e), e.deep && i.forEach((c) => c.fit(e));
    let { x: s, y: r, width: o, height: l } = gt.getCellsBBox(i);
    const a = ja(e.padding);
    return s -= a.left, r -= a.top, o += a.left + a.right, l += a.bottom + a.top, this.store.set({
      position: { x: s, y: r },
      size: { width: o, height: l }
    }, e), this.stopBatch("fit-embeds"), this;
  }
  // #endregion
  // #region ports
  get portContainerMarkup() {
    return this.getPortContainerMarkup();
  }
  set portContainerMarkup(e) {
    this.setPortContainerMarkup(e);
  }
  getDefaultPortContainerMarkup() {
    return this.store.get("defaultPortContainerMarkup") || Yt.getPortContainerMarkup();
  }
  getPortContainerMarkup() {
    return this.store.get("portContainerMarkup") || this.getDefaultPortContainerMarkup();
  }
  setPortContainerMarkup(e, t = {}) {
    return this.store.set("portContainerMarkup", Yt.clone(e), t), this;
  }
  get portMarkup() {
    return this.getPortMarkup();
  }
  set portMarkup(e) {
    this.setPortMarkup(e);
  }
  getDefaultPortMarkup() {
    return this.store.get("defaultPortMarkup") || Yt.getPortMarkup();
  }
  getPortMarkup() {
    return this.store.get("portMarkup") || this.getDefaultPortMarkup();
  }
  setPortMarkup(e, t = {}) {
    return this.store.set("portMarkup", Yt.clone(e), t), this;
  }
  get portLabelMarkup() {
    return this.getPortLabelMarkup();
  }
  set portLabelMarkup(e) {
    this.setPortLabelMarkup(e);
  }
  getDefaultPortLabelMarkup() {
    return this.store.get("defaultPortLabelMarkup") || Yt.getPortLabelMarkup();
  }
  getPortLabelMarkup() {
    return this.store.get("portLabelMarkup") || this.getDefaultPortLabelMarkup();
  }
  setPortLabelMarkup(e, t = {}) {
    return this.store.set("portLabelMarkup", Yt.clone(e), t), this;
  }
  get ports() {
    const e = this.store.get("ports", { items: [] });
    return e.items == null && (e.items = []), e;
  }
  getPorts() {
    return Bt(this.ports.items);
  }
  getPortsByGroup(e) {
    return this.getPorts().filter((t) => t.group === e);
  }
  getPort(e) {
    return Bt(this.ports.items.find((t) => t.id && t.id === e));
  }
  getPortAt(e) {
    return this.ports.items[e] || null;
  }
  hasPorts() {
    return this.ports.items.length > 0;
  }
  hasPort(e) {
    return this.getPortIndex(e) !== -1;
  }
  getPortIndex(e) {
    const t = typeof e == "string" ? e : e.id;
    return t != null ? this.ports.items.findIndex((i) => i.id === t) : -1;
  }
  getPortsPosition(e) {
    const t = this.getSize();
    return this.port.getPortsLayoutByGroup(e, new ye(0, 0, t.width, t.height)).reduce((s, r) => {
      const o = r.portLayout;
      return s[r.portId] = {
        position: Object.assign({}, o.position),
        angle: o.angle || 0
      }, s;
    }, {});
  }
  getPortProp(e, t) {
    return this.getPropByPath(this.prefixPortPath(e, t));
  }
  setPortProp(e, t, i, s) {
    if (typeof t == "string" || Array.isArray(t)) {
      const l = this.prefixPortPath(e, t), a = i;
      return this.setPropByPath(l, a, s);
    }
    const r = this.prefixPortPath(e), o = t;
    return this.setPropByPath(r, o, i);
  }
  removePortProp(e, t, i) {
    return typeof t == "string" || Array.isArray(t) ? this.removePropByPath(this.prefixPortPath(e, t), i) : this.removePropByPath(this.prefixPortPath(e), t);
  }
  portProp(e, t, i, s) {
    return t == null ? this.getPortProp(e) : typeof t == "string" || Array.isArray(t) ? arguments.length === 2 ? this.getPortProp(e, t) : i == null ? this.removePortProp(e, t, s) : this.setPortProp(e, t, i, s) : this.setPortProp(e, t, i);
  }
  prefixPortPath(e, t) {
    const i = this.getPortIndex(e);
    if (i === -1)
      throw new Error(`Unable to find port with id: "${e}"`);
    return t == null || t === "" ? ["ports", "items", `${i}`] : Array.isArray(t) ? ["ports", "items", `${i}`, ...t] : `ports/items/${i}/${t}`;
  }
  addPort(e, t) {
    const i = [...this.ports.items];
    return i.push(e), this.setPropByPath("ports/items", i, t), this;
  }
  addPorts(e, t) {
    return this.setPropByPath("ports/items", [...this.ports.items, ...e], t), this;
  }
  insertPort(e, t, i) {
    const s = [...this.ports.items];
    return s.splice(e, 0, t), this.setPropByPath("ports/items", s, i), this;
  }
  removePort(e, t = {}) {
    return this.removePortAt(this.getPortIndex(e), t);
  }
  removePortAt(e, t = {}) {
    if (e >= 0) {
      const i = [...this.ports.items];
      i.splice(e, 1), t.rewrite = !0, this.setPropByPath("ports/items", i, t);
    }
    return this;
  }
  removePorts(e, t) {
    let i;
    if (Array.isArray(e)) {
      if (i = t || {}, e.length) {
        i.rewrite = !0;
        const r = [...this.ports.items].filter((o) => !e.some((l) => {
          const a = typeof l == "string" ? l : l.id;
          return o.id === a;
        }));
        this.setPropByPath("ports/items", r, i);
      }
    } else
      i = e || {}, i.rewrite = !0, this.setPropByPath("ports/items", [], i);
    return this;
  }
  getParsedPorts() {
    return this.port.getPorts();
  }
  getParsedGroups() {
    return this.port.groups;
  }
  getPortsLayoutByGroup(e, t) {
    return this.port.getPortsLayoutByGroup(e, t);
  }
  initPorts() {
    this.updatePortData(), this.on("change:ports", () => {
      this.processRemovedPort(), this.updatePortData();
    });
  }
  processRemovedPort() {
    const e = this.ports, t = {};
    e.items.forEach((o) => {
      o.id && (t[o.id] = !0);
    });
    const i = {};
    (this.store.getPrevious("ports") || {
      items: []
    }).items.forEach((o) => {
      o.id && !t[o.id] && (i[o.id] = !0);
    });
    const r = this.model;
    r && !qA(i) && (r.getConnectedEdges(this, { incoming: !0 }).forEach((a) => {
      const c = a.getTargetPortId();
      c && i[c] && a.remove();
    }), r.getConnectedEdges(this, { outgoing: !0 }).forEach((a) => {
      const c = a.getSourcePortId();
      c && i[c] && a.remove();
    }));
  }
  validatePorts() {
    const e = {}, t = [];
    return this.ports.items.forEach((i) => {
      typeof i != "object" && t.push(`Invalid port ${i}.`), i.id == null && (i.id = this.generatePortId()), e[i.id] && t.push("Duplicitied port id."), e[i.id] = !0;
    }), t;
  }
  generatePortId() {
    return qg();
  }
  updatePortData() {
    const e = this.validatePorts();
    if (e.length > 0)
      throw this.store.set("ports", this.store.getPrevious("ports")), new Error(e.join(" "));
    const t = this.port ? this.port.getPorts() : null;
    this.port = new Yse(this.ports);
    const i = this.port.getPorts(), s = t ? i.filter((o) => t.find((l) => l.id === o.id) ? null : o) : [...i], r = t ? t.filter((o) => i.find((l) => l.id === o.id) ? null : o) : [];
    s.length > 0 && this.notify("ports:added", { added: s, cell: this, node: this }), r.length > 0 && this.notify("ports:removed", { removed: r, cell: this, node: this });
  }
};
$n.defaults = {
  angle: 0,
  position: { x: 0, y: 0 },
  size: { width: 1, height: 1 }
};
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNode == "function" && typeof s.isEdge == "function" && typeof s.prop == "function" && typeof s.attr == "function" && typeof s.size == "function" && typeof s.position == "function";
  }
  n.isNode = e;
})($n || ($n = {}));
(function(n) {
  n.config({
    propHooks(e) {
      var { ports: t } = e, i = b0(e, ["ports"]);
      return t && (i.ports = Array.isArray(t) ? { items: t } : t), i;
    }
  });
})($n || ($n = {}));
(function(n) {
  n.registry = An.create({
    type: "node",
    process(e, t) {
      if ($u.exist(e, !0))
        throw new Error(`Node with name '${e}' was registered by anthor Edge`);
      if (typeof t == "function")
        return t.config({ shape: e }), t;
      let i = n;
      const { inherit: s } = t, r = b0(t, ["inherit"]);
      if (s)
        if (typeof s == "string") {
          const l = this.get(s);
          l == null ? this.onNotFound(s, "inherited") : i = l;
        } else
          i = s;
      r.constructorName == null && (r.constructorName = e);
      const o = i.define.call(i, r);
      return o.config({ shape: e }), o;
    }
  }), $u.setNodeRegistry(n.registry);
})($n || ($n = {}));
(function(n) {
  let e = 0;
  function t(r) {
    return r ? ow(r) : (e += 1, `CustomNode${e}`);
  }
  function i(r) {
    const { constructorName: o, overwrite: l } = r, a = b0(r, ["constructorName", "overwrite"]), c = sw(t(o || a.shape), this);
    return c.config(a), a.shape && n.registry.register(a.shape, c, l), c;
  }
  n.define = i;
  function s(r) {
    const o = r.shape || "rect", l = n.registry.get(o);
    return l ? new l(r) : n.registry.onNotFound(o);
  }
  n.create = s;
})($n || ($n = {}));
var y0 = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
let xn = class iR extends gt {
  get [Symbol.toStringTag]() {
    return iR.toStringTag;
  }
  constructor(e = {}) {
    super(e);
  }
  preprocess(e, t) {
    const { source: i, sourceCell: s, sourcePort: r, sourcePoint: o, target: l, targetCell: a, targetPort: c, targetPoint: u } = e, d = y0(e, ["source", "sourceCell", "sourcePort", "sourcePoint", "target", "targetCell", "targetPort", "targetPoint"]), f = (p) => typeof p == "string" || typeof p == "number";
    if (i != null)
      if (gt.isCell(i))
        d.source = { cell: i.id };
      else if (f(i))
        d.source = { cell: i };
      else if (z.isPoint(i))
        d.source = i.toJSON();
      else if (Array.isArray(i))
        d.source = { x: i[0], y: i[1] };
      else {
        const p = i.cell;
        gt.isCell(p) ? d.source = Object.assign(Object.assign({}, i), { cell: p.id }) : d.source = i;
      }
    if (s != null || r != null) {
      let p = d.source;
      if (s != null) {
        const g = f(s) ? s : s.id;
        p ? p.cell = g : p = d.source = { cell: g };
      }
      r != null && p && (p.port = r);
    } else
      o != null && (d.source = z.create(o).toJSON());
    if (l != null)
      if (gt.isCell(l))
        d.target = { cell: l.id };
      else if (f(l))
        d.target = { cell: l };
      else if (z.isPoint(l))
        d.target = l.toJSON();
      else if (Array.isArray(l))
        d.target = { x: l[0], y: l[1] };
      else {
        const p = l.cell;
        gt.isCell(p) ? d.target = Object.assign(Object.assign({}, l), { cell: p.id }) : d.target = l;
      }
    if (a != null || c != null) {
      let p = d.target;
      if (a != null) {
        const g = f(a) ? a : a.id;
        p ? p.cell = g : p = d.target = { cell: g };
      }
      c != null && p && (p.port = c);
    } else
      u != null && (d.target = z.create(u).toJSON());
    return super.preprocess(d, t);
  }
  setup() {
    super.setup(), this.on("change:labels", (e) => this.onLabelsChanged(e)), this.on("change:vertices", (e) => this.onVertexsChanged(e));
  }
  isEdge() {
    return !0;
  }
  // #region terminal
  disconnect(e = {}) {
    return this.store.set({
      source: { x: 0, y: 0 },
      target: { x: 0, y: 0 }
    }, e), this;
  }
  get source() {
    return this.getSource();
  }
  set source(e) {
    this.setSource(e);
  }
  getSource() {
    return this.getTerminal("source");
  }
  getSourceCellId() {
    return this.source.cell;
  }
  getSourcePortId() {
    return this.source.port;
  }
  setSource(e, t, i = {}) {
    return this.setTerminal("source", e, t, i);
  }
  get target() {
    return this.getTarget();
  }
  set target(e) {
    this.setTarget(e);
  }
  getTarget() {
    return this.getTerminal("target");
  }
  getTargetCellId() {
    return this.target.cell;
  }
  getTargetPortId() {
    return this.target.port;
  }
  setTarget(e, t, i = {}) {
    return this.setTerminal("target", e, t, i);
  }
  getTerminal(e) {
    return Object.assign({}, this.store.get(e));
  }
  setTerminal(e, t, i, s = {}) {
    if (gt.isCell(t))
      return this.store.set(e, On({}, i, { cell: t.id }), s), this;
    const r = t;
    return z.isPoint(t) || r.x != null && r.y != null ? (this.store.set(e, On({}, i, { x: r.x, y: r.y }), s), this) : (this.store.set(e, Bt(t), s), this);
  }
  getSourcePoint() {
    return this.getTerminalPoint("source");
  }
  getTargetPoint() {
    return this.getTerminalPoint("target");
  }
  getTerminalPoint(e) {
    const t = this[e];
    if (z.isPointLike(t))
      return z.create(t);
    const i = this.getTerminalCell(e);
    return i ? i.getConnectionPoint(this, e) : new z();
  }
  getSourceCell() {
    return this.getTerminalCell("source");
  }
  getTargetCell() {
    return this.getTerminalCell("target");
  }
  getTerminalCell(e) {
    if (this.model) {
      const t = e === "source" ? this.getSourceCellId() : this.getTargetCellId();
      if (t)
        return this.model.getCell(t);
    }
    return null;
  }
  getSourceNode() {
    return this.getTerminalNode("source");
  }
  getTargetNode() {
    return this.getTerminalNode("target");
  }
  getTerminalNode(e) {
    let t = this;
    const i = {};
    for (; t && t.isEdge(); ) {
      if (i[t.id])
        return null;
      i[t.id] = !0, t = t.getTerminalCell(e);
    }
    return t && t.isNode() ? t : null;
  }
  // #endregion
  // #region router
  get router() {
    return this.getRouter();
  }
  set router(e) {
    e == null ? this.removeRouter() : this.setRouter(e);
  }
  getRouter() {
    return this.store.get("router");
  }
  setRouter(e, t, i) {
    return typeof e == "object" ? this.store.set("router", e, t) : this.store.set("router", { name: e, args: t }, i), this;
  }
  removeRouter(e = {}) {
    return this.store.remove("router", e), this;
  }
  // #endregion
  // #region connector
  get connector() {
    return this.getConnector();
  }
  set connector(e) {
    e == null ? this.removeConnector() : this.setConnector(e);
  }
  getConnector() {
    return this.store.get("connector");
  }
  setConnector(e, t, i) {
    return typeof e == "object" ? this.store.set("connector", e, t) : this.store.set("connector", { name: e, args: t }, i), this;
  }
  removeConnector(e = {}) {
    return this.store.remove("connector", e);
  }
  // #endregion
  // #region labels
  getDefaultLabel() {
    const e = this.constructor, t = this.store.get("defaultLabel") || e.defaultLabel || {};
    return Bt(t);
  }
  get labels() {
    return this.getLabels();
  }
  set labels(e) {
    this.setLabels(e);
  }
  getLabels() {
    return [...this.store.get("labels", [])].map((e) => this.parseLabel(e));
  }
  setLabels(e, t = {}) {
    return this.store.set("labels", Array.isArray(e) ? e : [e], t), this;
  }
  insertLabel(e, t, i = {}) {
    const s = this.getLabels(), r = s.length;
    let o = t != null && Number.isFinite(t) ? t : r;
    return o < 0 && (o = r + o + 1), s.splice(o, 0, this.parseLabel(e)), this.setLabels(s, i);
  }
  appendLabel(e, t = {}) {
    return this.insertLabel(e, -1, t);
  }
  getLabelAt(e) {
    const t = this.getLabels();
    return e != null && Number.isFinite(e) ? this.parseLabel(t[e]) : null;
  }
  setLabelAt(e, t, i = {}) {
    if (e != null && Number.isFinite(e)) {
      const s = this.getLabels();
      s[e] = this.parseLabel(t), this.setLabels(s, i);
    }
    return this;
  }
  removeLabelAt(e, t = {}) {
    const i = this.getLabels(), s = e != null && Number.isFinite(e) ? e : -1, r = i.splice(s, 1);
    return this.setLabels(i, t), r.length ? r[0] : null;
  }
  parseLabel(e) {
    return typeof e == "string" ? this.constructor.parseStringLabel(e) : e;
  }
  onLabelsChanged({ previous: e, current: t }) {
    const i = e && t ? t.filter((r) => e.find((o) => r === o || cn(r, o)) ? null : r) : t ? [...t] : [], s = e && t ? e.filter((r) => t.find((o) => r === o || cn(r, o)) ? null : r) : e ? [...e] : [];
    i.length > 0 && this.notify("labels:added", { added: i, cell: this, edge: this }), s.length > 0 && this.notify("labels:removed", { removed: s, cell: this, edge: this });
  }
  // #endregion
  // #region vertices
  get vertices() {
    return this.getVertices();
  }
  set vertices(e) {
    this.setVertices(e);
  }
  getVertices() {
    return [...this.store.get("vertices", [])];
  }
  setVertices(e, t = {}) {
    const i = Array.isArray(e) ? e : [e];
    return this.store.set("vertices", i.map((s) => z.toJSON(s)), t), this;
  }
  insertVertex(e, t, i = {}) {
    const s = this.getVertices(), r = s.length;
    let o = t != null && Number.isFinite(t) ? t : r;
    return o < 0 && (o = r + o + 1), s.splice(o, 0, z.toJSON(e)), this.setVertices(s, i);
  }
  appendVertex(e, t = {}) {
    return this.insertVertex(e, -1, t);
  }
  getVertexAt(e) {
    return e != null && Number.isFinite(e) ? this.getVertices()[e] : null;
  }
  setVertexAt(e, t, i = {}) {
    if (e != null && Number.isFinite(e)) {
      const s = this.getVertices();
      s[e] = t, this.setVertices(s, i);
    }
    return this;
  }
  removeVertexAt(e, t = {}) {
    const i = this.getVertices(), s = e != null && Number.isFinite(e) ? e : -1;
    return i.splice(s, 1), this.setVertices(i, t);
  }
  onVertexsChanged({ previous: e, current: t }) {
    const i = e && t ? t.filter((r) => e.find((o) => z.equals(r, o)) ? null : r) : t ? [...t] : [], s = e && t ? e.filter((r) => t.find((o) => z.equals(r, o)) ? null : r) : e ? [...e] : [];
    i.length > 0 && this.notify("vertexs:added", { added: i, cell: this, edge: this }), s.length > 0 && this.notify("vertexs:removed", { removed: s, cell: this, edge: this });
  }
  // #endregion
  // #region markup
  getDefaultMarkup() {
    return this.store.get("defaultMarkup") || Yt.getEdgeMarkup();
  }
  getMarkup() {
    return super.getMarkup() || this.getDefaultMarkup();
  }
  // #endregion
  // #region transform
  /**
   * Translate the edge vertices (and source and target if they are points)
   * by `tx` pixels in the x-axis and `ty` pixels in the y-axis.
   */
  translate(e, t, i = {}) {
    return i.translateBy = i.translateBy || this.id, i.tx = e, i.ty = t, this.applyToPoints((s) => ({
      x: (s.x || 0) + e,
      y: (s.y || 0) + t
    }), i);
  }
  /**
   * Scales the edge's points (vertices) relative to the given origin.
   */
  scale(e, t, i, s = {}) {
    return this.applyToPoints((r) => z.create(r).scale(e, t, i).toJSON(), s);
  }
  applyToPoints(e, t = {}) {
    const i = {}, s = this.getSource(), r = this.getTarget();
    z.isPointLike(s) && (i.source = e(s)), z.isPointLike(r) && (i.target = e(r));
    const o = this.getVertices();
    return o.length > 0 && (i.vertices = o.map(e)), this.store.set(i, t), this;
  }
  // #endregion
  // #region common
  getBBox() {
    return this.getPolyline().bbox();
  }
  getConnectionPoint() {
    return this.getPolyline().pointAt(0.5);
  }
  getPolyline() {
    const e = [
      this.getSourcePoint(),
      ...this.getVertices().map((t) => z.create(t)),
      this.getTargetPoint()
    ];
    return new Pn(e);
  }
  updateParent(e) {
    let t = null;
    const i = this.getSourceCell(), s = this.getTargetCell(), r = this.getParent();
    return i && s && (i === s || i.isDescendantOf(s) ? t = s : s.isDescendantOf(i) ? t = i : t = gt.getCommonAncestor(i, s)), r && t && t.id !== r.id && r.unembed(this, e), t && (!r || r.id !== t.id) && t.embed(this, e), t;
  }
  hasLoop(e = {}) {
    const t = this.getSource(), i = this.getTarget(), s = t.cell, r = i.cell;
    if (!s || !r)
      return !1;
    let o = s === r;
    if (!o && e.deep && this._model) {
      const l = this.getSourceCell(), a = this.getTargetCell();
      l && a && (o = l.isAncestorOf(a, e) || a.isAncestorOf(l, e));
    }
    return o;
  }
  getFragmentAncestor() {
    const e = [this, this.getSourceNode(), this.getTargetNode()].filter((t) => t != null);
    return this.getCommonAncestor(...e);
  }
  isFragmentDescendantOf(e) {
    const t = this.getFragmentAncestor();
    return !!t && (t.id === e.id || t.isDescendantOf(e));
  }
};
xn.defaults = {};
(function(n) {
  function e(t, i) {
    const s = t, r = i;
    return s.cell === r.cell ? s.port === r.port || s.port == null && r.port == null : !1;
  }
  n.equalTerminals = e;
})(xn || (xn = {}));
(function(n) {
  n.defaultLabel = {
    markup: [
      {
        tagName: "rect",
        selector: "body"
      },
      {
        tagName: "text",
        selector: "label"
      }
    ],
    attrs: {
      text: {
        fill: "#000",
        fontSize: 14,
        textAnchor: "middle",
        textVerticalAnchor: "middle",
        pointerEvents: "none"
      },
      rect: {
        ref: "label",
        fill: "#fff",
        rx: 3,
        ry: 3,
        refWidth: 1,
        refHeight: 1,
        refX: 0,
        refY: 0
      }
    },
    position: {
      distance: 0.5
    }
  };
  function e(t) {
    return {
      attrs: { label: { text: t } }
    };
  }
  n.parseStringLabel = e;
})(xn || (xn = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNode == "function" && typeof s.isEdge == "function" && typeof s.prop == "function" && typeof s.attr == "function" && typeof s.disconnect == "function" && typeof s.getSource == "function" && typeof s.getTarget == "function";
  }
  n.isEdge = e;
})(xn || (xn = {}));
(function(n) {
  n.registry = An.create({
    type: "edge",
    process(e, t) {
      if ($u.exist(e, !1))
        throw new Error(`Edge with name '${e}' was registered by anthor Node`);
      if (typeof t == "function")
        return t.config({ shape: e }), t;
      let i = n;
      const { inherit: s = "edge" } = t, r = y0(t, ["inherit"]);
      if (typeof s == "string") {
        const l = this.get(s || "edge");
        l == null && s ? this.onNotFound(s, "inherited") : i = l;
      } else
        i = s;
      r.constructorName == null && (r.constructorName = e);
      const o = i.define.call(i, r);
      return o.config({ shape: e }), o;
    }
  }), $u.setEdgeRegistry(n.registry);
})(xn || (xn = {}));
(function(n) {
  let e = 0;
  function t(r) {
    return r ? ow(r) : (e += 1, `CustomEdge${e}`);
  }
  function i(r) {
    const { constructorName: o, overwrite: l } = r, a = y0(r, ["constructorName", "overwrite"]), c = sw(t(o || a.shape), this);
    return c.config(a), a.shape && n.registry.register(a.shape, c, l), c;
  }
  n.define = i;
  function s(r) {
    const o = r.shape || "edge", l = n.registry.get(o);
    return l ? new l(r) : n.registry.onNotFound(o);
  }
  n.create = s;
})(xn || (xn = {}));
(function(n) {
  const e = "basic.edge";
  n.config({
    shape: e,
    propHooks(t) {
      const { label: i, vertices: s } = t, r = y0(t, ["label", "vertices"]);
      if (i) {
        r.labels == null && (r.labels = []);
        const o = typeof i == "string" ? n.parseStringLabel(i) : i;
        r.labels.push(o);
      }
      return s && Array.isArray(s) && (r.vertices = s.map((o) => z.create(o).toJSON())), r;
    }
  }), n.registry.register(e, n);
})(xn || (xn = {}));
var Use = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class im extends gn {
  constructor(e, t = {}) {
    super(), this.length = 0, this.comparator = t.comparator || "zIndex", this.clean(), e && this.reset(e, { silent: !0 });
  }
  toJSON() {
    return this.cells.map((e) => e.toJSON());
  }
  add(e, t, i) {
    let s, r;
    typeof t == "number" ? (s = t, r = Object.assign({ merge: !1 }, i)) : (s = this.length, r = Object.assign({ merge: !1 }, t)), s > this.length && (s = this.length), s < 0 && (s += this.length + 1);
    const o = Array.isArray(e) ? e : [e], l = this.comparator && typeof t != "number" && r.sort !== !1, a = this.comparator || null;
    let c = !1;
    const u = [], h = [];
    return o.forEach((d) => {
      const f = this.get(d);
      f ? r.merge && !d.isSameStore(f) && (f.setProp(d.getProp(), i), h.push(f), l && !c && (a == null || typeof a == "function" ? c = f.hasChanged() : typeof a == "string" ? c = f.hasChanged(a) : c = a.some((p) => f.hasChanged(p)))) : (u.push(d), this.reference(d));
    }), u.length && (l && (c = !0), this.cells.splice(s, 0, ...u), this.length = this.cells.length), c && this.sort({ silent: !0 }), r.silent || (u.forEach((d, f) => {
      const p = {
        cell: d,
        index: s + f,
        options: r
      };
      this.trigger("added", p), r.dryrun || d.notify("added", Object.assign({}, p));
    }), c && this.trigger("sorted"), (u.length || h.length) && this.trigger("updated", {
      added: u,
      merged: h,
      removed: [],
      options: r
    })), this;
  }
  remove(e, t = {}) {
    const i = Array.isArray(e) ? e : [e], s = this.removeCells(i, t);
    return !t.silent && s.length > 0 && this.trigger("updated", {
      options: t,
      removed: s,
      added: [],
      merged: []
    }), Array.isArray(e) ? s : s[0];
  }
  removeCells(e, t) {
    const i = [];
    for (let s = 0; s < e.length; s += 1) {
      const r = this.get(e[s]);
      if (r == null)
        continue;
      const o = this.cells.indexOf(r);
      this.cells.splice(o, 1), this.length -= 1, delete this.map[r.id], i.push(r), this.unreference(r), t.dryrun || r.remove(), t.silent || (this.trigger("removed", { cell: r, index: o, options: t }), t.dryrun || r.notify("removed", { cell: r, index: o, options: t }));
    }
    return i;
  }
  reset(e, t = {}) {
    const i = this.cells.slice();
    if (i.forEach((s) => this.unreference(s)), this.clean(), this.add(e, Object.assign({ silent: !0 }, t)), !t.silent) {
      const s = this.cells.slice();
      this.trigger("reseted", {
        options: t,
        previous: i,
        current: s
      });
      const r = [], o = [];
      s.forEach((l) => {
        i.some((c) => c.id === l.id) || r.push(l);
      }), i.forEach((l) => {
        s.some((c) => c.id === l.id) || o.push(l);
      }), this.trigger("updated", { options: t, added: r, removed: o, merged: [] });
    }
    return this;
  }
  push(e, t) {
    return this.add(e, this.length, t);
  }
  pop(e) {
    const t = this.at(this.length - 1);
    return this.remove(t, e);
  }
  unshift(e, t) {
    return this.add(e, 0, t);
  }
  shift(e) {
    const t = this.at(0);
    return this.remove(t, e);
  }
  get(e) {
    if (e == null)
      return null;
    const t = typeof e == "string" || typeof e == "number" ? e : e.id;
    return this.map[t] || null;
  }
  has(e) {
    return this.get(e) != null;
  }
  at(e) {
    return e < 0 && (e += this.length), this.cells[e] || null;
  }
  first() {
    return this.at(0);
  }
  last() {
    return this.at(-1);
  }
  indexOf(e) {
    return this.cells.indexOf(e);
  }
  toArray() {
    return this.cells.slice();
  }
  sort(e = {}) {
    return this.comparator != null && (this.cells = YA(this.cells, this.comparator), e.silent || this.trigger("sorted")), this;
  }
  clone() {
    const e = this.constructor;
    return new e(this.cells.slice(), {
      comparator: this.comparator
    });
  }
  reference(e) {
    this.map[e.id] = e, e.on("*", this.notifyCellEvent, this);
  }
  unreference(e) {
    e.off("*", this.notifyCellEvent, this), delete this.map[e.id];
  }
  notifyCellEvent(e, t) {
    const i = t.cell;
    this.trigger(`cell:${e}`, t), i && (i.isNode() ? this.trigger(`node:${e}`, Object.assign(Object.assign({}, t), { node: i })) : i.isEdge() && this.trigger(`edge:${e}`, Object.assign(Object.assign({}, t), { edge: i })));
  }
  clean() {
    this.length = 0, this.cells = [], this.map = {};
  }
  dispose() {
    this.reset([]);
  }
}
Use([
  im.dispose()
], im.prototype, "dispose", null);
var Gse = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class ls extends gn {
  get [Symbol.toStringTag]() {
    return ls.toStringTag;
  }
  constructor(e = []) {
    super(), this.batches = {}, this.addings = /* @__PURE__ */ new WeakMap(), this.nodes = {}, this.edges = {}, this.outgoings = {}, this.incomings = {}, this.collection = new im(e), this.setup();
  }
  notify(e, t) {
    this.trigger(e, t);
    const i = this.graph;
    return i && (e === "sorted" || e === "reseted" || e === "updated" ? i.trigger(`model:${e}`, t) : i.trigger(e, t)), this;
  }
  setup() {
    const e = this.collection;
    e.on("sorted", () => this.notify("sorted", null)), e.on("updated", (t) => this.notify("updated", t)), e.on("cell:change:zIndex", () => this.sortOnChangeZ()), e.on("added", ({ cell: t }) => {
      this.onCellAdded(t);
    }), e.on("removed", (t) => {
      const i = t.cell;
      this.onCellRemoved(i, t.options), this.notify("cell:removed", t), i.isNode() ? this.notify("node:removed", Object.assign(Object.assign({}, t), { node: i })) : i.isEdge() && this.notify("edge:removed", Object.assign(Object.assign({}, t), { edge: i }));
    }), e.on("reseted", (t) => {
      this.onReset(t.current), this.notify("reseted", t);
    }), e.on("edge:change:source", ({ edge: t }) => this.onEdgeTerminalChanged(t, "source")), e.on("edge:change:target", ({ edge: t }) => {
      this.onEdgeTerminalChanged(t, "target");
    });
  }
  sortOnChangeZ() {
    this.collection.sort();
  }
  onCellAdded(e) {
    const t = e.id;
    e.isEdge() ? (e.updateParent(), this.edges[t] = !0, this.onEdgeTerminalChanged(e, "source"), this.onEdgeTerminalChanged(e, "target")) : this.nodes[t] = !0;
  }
  onCellRemoved(e, t) {
    const i = e.id;
    if (e.isEdge()) {
      delete this.edges[i];
      const s = e.getSource(), r = e.getTarget();
      if (s && s.cell) {
        const o = this.outgoings[s.cell], l = o ? o.indexOf(i) : -1;
        l >= 0 && (o.splice(l, 1), o.length === 0 && delete this.outgoings[s.cell]);
      }
      if (r && r.cell) {
        const o = this.incomings[r.cell], l = o ? o.indexOf(i) : -1;
        l >= 0 && (o.splice(l, 1), o.length === 0 && delete this.incomings[r.cell]);
      }
    } else
      delete this.nodes[i];
    t.clear || (t.disconnectEdges ? this.disconnectConnectedEdges(e, t) : this.removeConnectedEdges(e, t)), e.model === this && (e.model = null);
  }
  onReset(e) {
    this.nodes = {}, this.edges = {}, this.outgoings = {}, this.incomings = {}, e.forEach((t) => this.onCellAdded(t));
  }
  onEdgeTerminalChanged(e, t) {
    const i = t === "source" ? this.outgoings : this.incomings, s = e.previous(t);
    if (s && s.cell) {
      const o = gt.isCell(s.cell) ? s.cell.id : s.cell, l = i[o], a = l ? l.indexOf(e.id) : -1;
      a >= 0 && (l.splice(a, 1), l.length === 0 && delete i[o]);
    }
    const r = e.getTerminal(t);
    if (r && r.cell) {
      const o = gt.isCell(r.cell) ? r.cell.id : r.cell, l = i[o] || [];
      l.indexOf(e.id) === -1 && l.push(e.id), i[o] = l;
    }
  }
  prepareCell(e, t) {
    return !e.model && (!t || !t.dryrun) && (e.model = this), e.zIndex == null && e.setZIndex(this.getMaxZIndex() + 1, { silent: !0 }), e;
  }
  resetCells(e, t = {}) {
    return e.map((i) => this.prepareCell(i, Object.assign(Object.assign({}, t), { dryrun: !0 }))), this.collection.reset(e, t), e.map((i) => this.prepareCell(i, { options: t })), this;
  }
  clear(e = {}) {
    const t = this.getCells();
    if (t.length === 0)
      return this;
    const i = Object.assign(Object.assign({}, e), { clear: !0 });
    return this.batchUpdate("clear", () => {
      const s = t.sort((r, o) => {
        const l = r.isEdge() ? 1 : 2, a = o.isEdge() ? 1 : 2;
        return l - a;
      });
      for (; s.length > 0; ) {
        const r = s.shift();
        r && r.remove(i);
      }
    }, i), this;
  }
  addNode(e, t = {}) {
    const i = $n.isNode(e) ? e : this.createNode(e);
    return this.addCell(i, t), i;
  }
  updateNode(e, t = {}) {
    const i = this.createNode(e), s = i.getProp();
    return i.dispose(), this.updateCell(s, t);
  }
  createNode(e) {
    return $n.create(e);
  }
  addEdge(e, t = {}) {
    const i = xn.isEdge(e) ? e : this.createEdge(e);
    return this.addCell(i, t), i;
  }
  createEdge(e) {
    return xn.create(e);
  }
  updateEdge(e, t = {}) {
    const i = this.createEdge(e), s = i.getProp();
    return i.dispose(), this.updateCell(s, t);
  }
  addCell(e, t = {}) {
    return Array.isArray(e) ? this.addCells(e, t) : (!this.collection.has(e) && !this.addings.has(e) && (this.addings.set(e, !0), this.collection.add(this.prepareCell(e, t), t), e.eachChild((i) => this.addCell(i, t)), this.addings.delete(e)), this);
  }
  addCells(e, t = {}) {
    const i = e.length;
    if (i === 0)
      return this;
    const s = Object.assign(Object.assign({}, t), { position: i - 1, maxPosition: i - 1 });
    return this.startBatch("add", Object.assign(Object.assign({}, s), { cells: e })), e.forEach((r) => {
      this.addCell(r, s), s.position -= 1;
    }), this.stopBatch("add", Object.assign(Object.assign({}, s), { cells: e })), this;
  }
  updateCell(e, t = {}) {
    const i = e.id && this.getCell(e.id);
    return i ? this.batchUpdate("update", () => (Object.entries(e).forEach(([s, r]) => i.setProp(s, r, t)), !0), e) : !1;
  }
  removeCell(e, t = {}) {
    const i = typeof e == "string" ? this.getCell(e) : e;
    return i && this.has(i) ? this.collection.remove(i, t) : null;
  }
  updateCellId(e, t) {
    if (e.id === t)
      return;
    this.startBatch("update", { id: t }), e.prop("id", t);
    const i = e.clone({ keepId: !0 });
    return this.addCell(i), this.getConnectedEdges(e).forEach((r) => {
      const o = r.getSourceCell(), l = r.getTargetCell();
      o === e && r.setSource(Object.assign(Object.assign({}, r.getSource()), { cell: t })), l === e && r.setTarget(Object.assign(Object.assign({}, r.getTarget()), { cell: t }));
    }), this.removeCell(e), this.stopBatch("update", { id: t }), i;
  }
  removeCells(e, t = {}) {
    return e.length ? this.batchUpdate("remove", () => e.map((i) => this.removeCell(i, t))) : [];
  }
  removeConnectedEdges(e, t = {}) {
    const i = this.getConnectedEdges(e);
    return i.forEach((s) => {
      s.remove(t);
    }), i;
  }
  disconnectConnectedEdges(e, t = {}) {
    const i = typeof e == "string" ? e : e.id;
    this.getConnectedEdges(e).forEach((s) => {
      const r = s.getSourceCellId(), o = s.getTargetCellId();
      r === i && s.setSource({ x: 0, y: 0 }, t), o === i && s.setTarget({ x: 0, y: 0 }, t);
    });
  }
  has(e) {
    return this.collection.has(e);
  }
  total() {
    return this.collection.length;
  }
  indexOf(e) {
    return this.collection.indexOf(e);
  }
  /**
   * Returns a cell from the graph by its id.
   */
  getCell(e) {
    return this.collection.get(e);
  }
  /**
   * Returns all the nodes and edges in the graph.
   */
  getCells() {
    return this.collection.toArray();
  }
  /**
   * Returns the first cell (node or edge) in the graph. The first cell is
   * defined as the cell with the lowest `zIndex`.
   */
  getFirstCell() {
    return this.collection.first();
  }
  /**
   * Returns the last cell (node or edge) in the graph. The last cell is
   * defined as the cell with the highest `zIndex`.
   */
  getLastCell() {
    return this.collection.last();
  }
  /**
   * Returns the lowest `zIndex` value in the graph.
   */
  getMinZIndex() {
    const e = this.collection.first();
    return e && e.getZIndex() || 0;
  }
  /**
   * Returns the highest `zIndex` value in the graph.
   */
  getMaxZIndex() {
    const e = this.collection.last();
    return e && e.getZIndex() || 0;
  }
  getCellsFromCache(e) {
    return e ? Object.keys(e).map((t) => this.getCell(t)).filter((t) => t != null) : [];
  }
  /**
   * Returns all the nodes in the graph.
   */
  getNodes() {
    return this.getCellsFromCache(this.nodes);
  }
  /**
   * Returns all the edges in the graph.
   */
  getEdges() {
    return this.getCellsFromCache(this.edges);
  }
  /**
   * Returns all outgoing edges for the node.
   */
  getOutgoingEdges(e) {
    const t = typeof e == "string" ? e : e.id, i = this.outgoings[t];
    return i ? i.map((s) => this.getCell(s)).filter((s) => s && s.isEdge()) : null;
  }
  /**
   * Returns all incoming edges for the node.
   */
  getIncomingEdges(e) {
    const t = typeof e == "string" ? e : e.id, i = this.incomings[t];
    return i ? i.map((s) => this.getCell(s)).filter((s) => s && s.isEdge()) : null;
  }
  /**
   * Returns edges connected with cell.
   */
  getConnectedEdges(e, t = {}) {
    const i = [], s = typeof e == "string" ? this.getCell(e) : e;
    if (s == null)
      return i;
    const r = {}, o = t.indirect;
    let l = t.incoming, a = t.outgoing;
    l == null && a == null && (l = a = !0);
    const c = (u, h) => {
      const d = h ? this.getOutgoingEdges(u) : this.getIncomingEdges(u);
      if (d != null && d.forEach((f) => {
        r[f.id] || (i.push(f), r[f.id] = !0, o && (l && c(f, !1), a && c(f, !0)));
      }), o && u.isEdge()) {
        const f = h ? u.getTargetCell() : u.getSourceCell();
        f && f.isEdge() && (r[f.id] || (i.push(f), c(f, h)));
      }
    };
    if (a && c(s, !0), l && c(s, !1), t.deep) {
      const u = s.getDescendants({ deep: !0 }), h = {};
      u.forEach((f) => {
        f.isNode() && (h[f.id] = !0);
      });
      const d = (f, p) => {
        const g = p ? this.getOutgoingEdges(f.id) : this.getIncomingEdges(f.id);
        g != null && g.forEach((m) => {
          if (!r[m.id]) {
            const v = m.getSourceCell(), O = m.getTargetCell();
            if (!t.enclosed && v && h[v.id] && O && h[O.id])
              return;
            i.push(m), r[m.id] = !0;
          }
        });
      };
      u.forEach((f) => {
        f.isEdge() || (a && d(f, !0), l && d(f, !1));
      });
    }
    return i;
  }
  isBoundary(e, t) {
    const i = typeof e == "string" ? this.getCell(e) : e, s = t ? this.getIncomingEdges(i) : this.getOutgoingEdges(i);
    return s == null || s.length === 0;
  }
  getBoundaryNodes(e) {
    const t = [];
    return Object.keys(this.nodes).forEach((i) => {
      if (this.isBoundary(i, e)) {
        const s = this.getCell(i);
        s && t.push(s);
      }
    }), t;
  }
  /**
   * Returns an array of all the roots of the graph.
   */
  getRoots() {
    return this.getBoundaryNodes(!0);
  }
  /**
   * Returns an array of all the leafs of the graph.
   */
  getLeafs() {
    return this.getBoundaryNodes(!1);
  }
  /**
   * Returns `true` if the node is a root node, i.e. there is no edges
   * coming to the node.
   */
  isRoot(e) {
    return this.isBoundary(e, !0);
  }
  /**
   * Returns `true` if the node is a leaf node, i.e. there is no edges
   * going out from the node.
   */
  isLeaf(e) {
    return this.isBoundary(e, !1);
  }
  /**
   * Returns all the neighbors of node in the graph. Neighbors are all
   * the nodes connected to node via either incoming or outgoing edge.
   */
  getNeighbors(e, t = {}) {
    let i = t.incoming, s = t.outgoing;
    i == null && s == null && (i = s = !0);
    const o = this.getConnectedEdges(e, t).reduce((l, a) => {
      const c = a.hasLoop(t), u = a.getSourceCell(), h = a.getTargetCell();
      return i && u && u.isNode() && !l[u.id] && (c || u !== e && (!t.deep || !u.isDescendantOf(e))) && (l[u.id] = u), s && h && h.isNode() && !l[h.id] && (c || h !== e && (!t.deep || !h.isDescendantOf(e))) && (l[h.id] = h), l;
    }, {});
    if (e.isEdge()) {
      if (i) {
        const l = e.getSourceCell();
        l && l.isNode() && !o[l.id] && (o[l.id] = l);
      }
      if (s) {
        const l = e.getTargetCell();
        l && l.isNode() && !o[l.id] && (o[l.id] = l);
      }
    }
    return Object.keys(o).map((l) => o[l]);
  }
  /**
   * Returns `true` if `cell2` is a neighbor of `cell1`.
   */
  isNeighbor(e, t, i = {}) {
    let s = i.incoming, r = i.outgoing;
    return s == null && r == null && (s = r = !0), this.getConnectedEdges(e, i).some((o) => {
      const l = o.getSourceCell(), a = o.getTargetCell();
      return !!(s && l && l.id === t.id || r && a && a.id === t.id);
    });
  }
  getSuccessors(e, t = {}) {
    const i = [];
    return this.search(e, (s, r) => {
      s !== e && this.matchDistance(r, t.distance) && i.push(s);
    }, Object.assign(Object.assign({}, t), { outgoing: !0 })), i;
  }
  /**
   * Returns `true` if `cell2` is a successor of `cell1`.
   */
  isSuccessor(e, t, i = {}) {
    let s = !1;
    return this.search(e, (r, o) => {
      if (r === t && r !== e && this.matchDistance(o, i.distance))
        return s = !0, !1;
    }, Object.assign(Object.assign({}, i), { outgoing: !0 })), s;
  }
  getPredecessors(e, t = {}) {
    const i = [];
    return this.search(e, (s, r) => {
      s !== e && this.matchDistance(r, t.distance) && i.push(s);
    }, Object.assign(Object.assign({}, t), { incoming: !0 })), i;
  }
  /**
   * Returns `true` if `cell2` is a predecessor of `cell1`.
   */
  isPredecessor(e, t, i = {}) {
    let s = !1;
    return this.search(e, (r, o) => {
      if (r === t && r !== e && this.matchDistance(o, i.distance))
        return s = !0, !1;
    }, Object.assign(Object.assign({}, i), { incoming: !0 })), s;
  }
  matchDistance(e, t) {
    return t == null ? !0 : typeof t == "function" ? t(e) : Array.isArray(t) && t.includes(e) ? !0 : e === t;
  }
  /**
   * Returns the common ancestor of the passed cells.
   */
  getCommonAncestor(...e) {
    const t = [];
    return e.forEach((i) => {
      i && (Array.isArray(i) ? t.push(...i) : t.push(i));
    }), gt.getCommonAncestor(...t);
  }
  /**
   * Returns an array of cells that result from finding nodes/edges that
   * are connected to any of the cells in the cells array. This function
   * loops over cells and if the current cell is a edge, it collects its
   * source/target nodes; if it is an node, it collects its incoming and
   * outgoing edges if both the edge terminal (source/target) are in the
   * cells array.
   */
  getSubGraph(e, t = {}) {
    const i = [], s = {}, r = [], o = [], l = (a) => {
      s[a.id] || (i.push(a), s[a.id] = a, a.isEdge() && o.push(a), a.isNode() && r.push(a));
    };
    return e.forEach((a) => {
      l(a), t.deep && a.getDescendants({ deep: !0 }).forEach((u) => l(u));
    }), o.forEach((a) => {
      const c = a.getSourceCell(), u = a.getTargetCell();
      c && !s[c.id] && (i.push(c), s[c.id] = c, c.isNode() && r.push(c)), u && !s[u.id] && (i.push(u), s[u.id] = u, u.isNode() && r.push(u));
    }), r.forEach((a) => {
      this.getConnectedEdges(a, t).forEach((u) => {
        const h = u.getSourceCell(), d = u.getTargetCell();
        !s[u.id] && h && s[h.id] && d && s[d.id] && (i.push(u), s[u.id] = u);
      });
    }), i;
  }
  /**
   * Clones the whole subgraph (including all the connected links whose
   * source/target is in the subgraph). If `options.deep` is `true`, also
   * take into account all the embedded cells of all the subgraph cells.
   *
   * Returns a map of the form: { [original cell ID]: [clone] }.
   */
  cloneSubGraph(e, t = {}) {
    const i = this.getSubGraph(e, t);
    return this.cloneCells(i);
  }
  cloneCells(e) {
    return gt.cloneCells(e);
  }
  getNodesFromPoint(e, t) {
    const i = typeof e == "number" ? { x: e, y: t || 0 } : e;
    return this.getNodes().filter((s) => s.getBBox().containsPoint(i));
  }
  getNodesInArea(e, t, i, s, r) {
    const o = typeof e == "number" ? new ye(e, t, i, s) : ye.create(e), l = typeof e == "number" ? r : t, a = l && l.strict;
    return this.getNodes().filter((c) => {
      const u = c.getBBox();
      return a ? o.containsRect(u) : o.isIntersectWithRect(u);
    });
  }
  getEdgesInArea(e, t, i, s, r) {
    const o = typeof e == "number" ? new ye(e, t, i, s) : ye.create(e), l = typeof e == "number" ? r : t, a = l && l.strict;
    return this.getEdges().filter((c) => {
      const u = c.getBBox();
      return u.width === 0 ? u.inflate(1, 0) : u.height === 0 && u.inflate(0, 1), a ? o.containsRect(u) : o.isIntersectWithRect(u);
    });
  }
  getNodesUnderNode(e, t = {}) {
    const i = e.getBBox();
    return (t.by == null || t.by === "bbox" ? this.getNodesInArea(i) : this.getNodesFromPoint(i[t.by])).filter((r) => e.id !== r.id && !r.isDescendantOf(e));
  }
  /**
   * Returns the bounding box that surrounds all cells in the graph.
   */
  getAllCellsBBox() {
    return this.getCellsBBox(this.getCells());
  }
  /**
   * Returns the bounding box that surrounds all the given cells.
   */
  getCellsBBox(e, t = {}) {
    return gt.getCellsBBox(e, t);
  }
  // #region search
  search(e, t, i = {}) {
    i.breadthFirst ? this.breadthFirstSearch(e, t, i) : this.depthFirstSearch(e, t, i);
  }
  breadthFirstSearch(e, t, i = {}) {
    const s = [], r = {}, o = {};
    for (s.push(e), o[e.id] = 0; s.length > 0; ) {
      const l = s.shift();
      if (l == null || r[l.id] || (r[l.id] = !0, Ze(t, this, l, o[l.id]) === !1))
        continue;
      this.getNeighbors(l, i).forEach((c) => {
        o[c.id] = o[l.id] + 1, s.push(c);
      });
    }
  }
  depthFirstSearch(e, t, i = {}) {
    const s = [], r = {}, o = {};
    for (s.push(e), o[e.id] = 0; s.length > 0; ) {
      const l = s.pop();
      if (l == null || r[l.id] || (r[l.id] = !0, Ze(t, this, l, o[l.id]) === !1))
        continue;
      const a = this.getNeighbors(l, i), c = s.length;
      a.forEach((u) => {
        o[u.id] = o[l.id] + 1, s.splice(c, 0, u);
      });
    }
  }
  // #endregion
  // #region shortest path
  /** *
   * Returns an array of IDs of nodes on the shortest
   * path between source and target.
   */
  getShortestPath(e, t, i = {}) {
    const s = {};
    this.getEdges().forEach((c) => {
      const u = c.getSourceCellId(), h = c.getTargetCellId();
      u && h && (s[u] || (s[u] = []), s[h] || (s[h] = []), s[u].push(h), i.directed || s[h].push(u));
    });
    const r = typeof e == "string" ? e : e.id, o = My.run(s, r, i.weight), l = [];
    let a = typeof t == "string" ? t : t.id;
    for (o[a] && l.push(a); a = o[a]; )
      l.unshift(a);
    return l;
  }
  // #endregion
  // #region transform
  /**
   * Translate all cells in the graph by `tx` and `ty` pixels.
   */
  translate(e, t, i) {
    return this.getCells().filter((s) => !s.hasParent()).forEach((s) => s.translate(e, t, i)), this;
  }
  resize(e, t, i) {
    return this.resizeCells(e, t, this.getCells(), i);
  }
  resizeCells(e, t, i, s = {}) {
    const r = this.getCellsBBox(i);
    if (r) {
      const o = Math.max(e / r.width, 0), l = Math.max(t / r.height, 0), a = r.getOrigin();
      i.forEach((c) => c.scale(o, l, a, s));
    }
    return this;
  }
  // #endregion
  // #region serialize/deserialize
  toJSON(e = {}) {
    return ls.toJSON(this.getCells(), e);
  }
  parseJSON(e) {
    return ls.fromJSON(e);
  }
  fromJSON(e, t = {}) {
    const i = this.parseJSON(e);
    return this.resetCells(i, t), this;
  }
  // #endregion
  // #region batch
  startBatch(e, t = {}) {
    return this.batches[e] = (this.batches[e] || 0) + 1, this.notify("batch:start", { name: e, data: t }), this;
  }
  stopBatch(e, t = {}) {
    return this.batches[e] = (this.batches[e] || 0) - 1, this.notify("batch:stop", { name: e, data: t }), this;
  }
  batchUpdate(e, t, i = {}) {
    this.startBatch(e, i);
    const s = t();
    return this.stopBatch(e, i), s;
  }
  hasActiveBatch(e = Object.keys(this.batches)) {
    return (Array.isArray(e) ? e : [e]).some((i) => this.batches[i] > 0);
  }
  // #endregion
  dispose() {
    this.collection.dispose();
  }
}
Gse([
  ls.dispose()
], ls.prototype, "dispose", null);
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.addNode == "function" && typeof s.addEdge == "function" && s.collection != null;
  }
  n.isModel = e;
})(ls || (ls = {}));
(function(n) {
  function e(i, s = {}) {
    return {
      cells: i.map((r) => r.toJSON(s))
    };
  }
  n.toJSON = e;
  function t(i) {
    const s = [];
    return Array.isArray(i) ? s.push(...i) : (i.cells && s.push(...i.cells), i.nodes && i.nodes.forEach((r) => {
      r.shape == null && (r.shape = "rect"), s.push(r);
    }), i.edges && i.edges.forEach((r) => {
      r.shape == null && (r.shape = "edge"), s.push(r);
    })), s.map((r) => {
      const o = r.shape;
      if (o) {
        if ($n.registry.exist(o))
          return $n.create(r);
        if (xn.registry.exist(o))
          return xn.create(r);
      }
      throw new Error("The `shape` should be specified when creating a node/edge instance");
    });
  }
  n.fromJSON = t;
})(ls || (ls = {}));
var Kse = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
let Il = class extends $n {
  get label() {
    return this.getLabel();
  }
  set label(e) {
    this.setLabel(e);
  }
  getLabel() {
    return this.getAttrByPath("text/text");
  }
  setLabel(e, t) {
    return e == null ? this.removeLabel() : this.setAttrByPath("text/text", e, t), this;
  }
  removeLabel() {
    return this.removeAttrByPath("text/text"), this;
  }
};
(function(n) {
  n.bodyAttr = {
    fill: "#ffffff",
    stroke: "#333333",
    strokeWidth: 2
  }, n.labelAttr = {
    fontSize: 14,
    fill: "#000000",
    refX: 0.5,
    refY: 0.5,
    textAnchor: "middle",
    textVerticalAnchor: "middle",
    fontFamily: "Arial, helvetica, sans-serif"
  }, n.config({
    attrs: { text: Object.assign({}, n.labelAttr) },
    propHooks(e) {
      const { label: t } = e, i = Kse(e, ["label"]);
      return t && sh(i, "attrs/text/text", t), i;
    },
    visible: !0
  });
})(Il || (Il = {}));
var Jse = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
function ere(n, e = "body") {
  return [
    {
      tagName: n,
      selector: e
    },
    {
      tagName: "text",
      selector: "label"
    }
  ];
}
function tre(n = "xlink:href") {
  return (t) => {
    const { imageUrl: i, imageWidth: s, imageHeight: r } = t, o = Jse(t, ["imageUrl", "imageWidth", "imageHeight"]);
    if (i != null || s != null || r != null) {
      const l = () => {
        if (o.attrs) {
          const a = o.attrs.image;
          i != null && (a[n] = i), s != null && (a.width = s), r != null && (a.height = r), o.attrs.image = a;
        }
      };
      o.attrs ? (o.attrs.image == null && (o.attrs.image = {}), l()) : (o.attrs = {
        image: {}
      }, l());
    }
    return o;
  };
}
function ah(n, e, t = {}) {
  const i = {
    constructorName: n,
    markup: ere(n, t.selector),
    attrs: {
      [n]: Object.assign({}, Il.bodyAttr)
    }
  };
  return (t.parent || Il).define(On(i, e, { shape: n }));
}
ah("rect", {
  attrs: {
    body: {
      refWidth: "100%",
      refHeight: "100%"
    }
  }
});
const nre = xn.define({
  shape: "edge",
  markup: [
    {
      tagName: "path",
      selector: "wrap",
      groupSelector: "lines",
      attrs: {
        fill: "none",
        cursor: "pointer",
        stroke: "transparent",
        strokeLinecap: "round"
      }
    },
    {
      tagName: "path",
      selector: "line",
      groupSelector: "lines",
      attrs: {
        fill: "none",
        pointerEvents: "none"
      }
    }
  ],
  attrs: {
    lines: {
      connection: !0,
      strokeLinejoin: "round"
    },
    wrap: {
      strokeWidth: 10
    },
    line: {
      stroke: "#333",
      strokeWidth: 2,
      targetMarker: "classic"
    }
  }
});
ah("ellipse", {
  attrs: {
    body: {
      refCx: "50%",
      refCy: "50%",
      refRx: "50%",
      refRy: "50%"
    }
  }
});
var ire = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class Tu extends Il {
  get points() {
    return this.getPoints();
  }
  set points(e) {
    this.setPoints(e);
  }
  getPoints() {
    return this.getAttrByPath("body/refPoints");
  }
  setPoints(e, t) {
    return e == null ? this.removePoints() : this.setAttrByPath("body/refPoints", Tu.pointsToString(e), t), this;
  }
  removePoints() {
    return this.removeAttrByPath("body/refPoints"), this;
  }
}
(function(n) {
  function e(t) {
    return typeof t == "string" ? t : t.map((i) => Array.isArray(i) ? i.join(",") : z.isPointLike(i) ? `${i.x}, ${i.y}` : "").join(" ");
  }
  n.pointsToString = e, n.config({
    propHooks(t) {
      const { points: i } = t, s = ire(t, ["points"]);
      if (i) {
        const r = e(i);
        r && sh(s, "attrs/body/refPoints", r);
      }
      return s;
    }
  });
})(Tu || (Tu = {}));
ah("polygon", {}, { parent: Tu });
ah("polyline", {}, { parent: Tu });
var sre = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
Il.define({
  shape: "path",
  markup: [
    {
      tagName: "rect",
      selector: "bg"
    },
    {
      tagName: "path",
      selector: "body"
    },
    {
      tagName: "text",
      selector: "label"
    }
  ],
  attrs: {
    bg: {
      refWidth: "100%",
      refHeight: "100%",
      fill: "none",
      stroke: "none",
      pointerEvents: "all"
    },
    body: {
      fill: "none",
      stroke: "#000",
      strokeWidth: 2
    }
  },
  propHooks(n) {
    const { path: e } = n, t = sre(n, ["path"]);
    return e && sh(t, "attrs/body/refD", e), t;
  }
});
var rre = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
Il.define({
  shape: "text-block",
  markup: [
    {
      tagName: "rect",
      selector: "body"
    },
    _l.SUPPORT_FOREIGNOBJECT ? {
      tagName: "foreignObject",
      selector: "foreignObject",
      children: [
        {
          tagName: "div",
          ns: si.xhtml,
          selector: "label",
          style: {
            width: "100%",
            height: "100%",
            position: "static",
            backgroundColor: "transparent",
            textAlign: "center",
            margin: 0,
            padding: "0px 5px",
            boxSizing: "border-box",
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
          }
        }
      ]
    } : {
      tagName: "text",
      selector: "label",
      attrs: {
        textAnchor: "middle"
      }
    }
  ],
  attrs: {
    body: Object.assign(Object.assign({}, Il.bodyAttr), { refWidth: "100%", refHeight: "100%" }),
    foreignObject: {
      refWidth: "100%",
      refHeight: "100%"
    },
    label: {
      style: {
        fontSize: 14
      }
    }
  },
  propHooks(n) {
    const { text: e } = n, t = rre(n, ["text"]);
    return e && sh(t, "attrs/label/text", e), t;
  },
  attrHooks: {
    text: {
      set(n, { cell: e, view: t, refBBox: i, elem: s, attrs: r }) {
        if (s instanceof HTMLElement)
          s.textContent = n;
        else {
          const o = r.style || {}, l = { text: n, width: -5, height: "100%" }, a = Object.assign({ textVerticalAnchor: "middle" }, o), c = ho.presets.textWrap;
          return Ze(c.set, this, l, {
            cell: e,
            view: t,
            elem: s,
            refBBox: i,
            attrs: a
          }), { fill: o.color || null };
        }
      },
      position(n, { refBBox: e, elem: t }) {
        if (t instanceof SVGElement)
          return e.getCenter();
      }
    }
  }
});
ah("image", {
  attrs: {
    image: {
      refWidth: "100%",
      refHeight: "100%"
    }
  },
  propHooks: tre()
}, {
  selector: "image"
});
ah("circle", {
  attrs: {
    body: {
      refCx: "50%",
      refCy: "50%",
      refR: "50%"
    }
  }
});
class As extends En {
  constructor() {
    super(...arguments), this.portsCache = {};
  }
  get [Symbol.toStringTag]() {
    return As.toStringTag;
  }
  getContainerClassName() {
    const e = [
      super.getContainerClassName(),
      this.prefixClassName("node")
    ];
    return this.can("nodeMovable") || e.push(this.prefixClassName("node-immovable")), e.join(" ");
  }
  updateClassName(e) {
    const t = e.target;
    if (t.hasAttribute("magnet")) {
      const i = this.prefixClassName("port-unconnectable");
      this.can("magnetConnectable") ? Rn(t, i) : Ye(t, i);
    } else {
      const i = this.prefixClassName("node-immovable");
      this.can("nodeMovable") ? this.removeClass(i) : this.addClass(i);
    }
  }
  isNodeView() {
    return !0;
  }
  confirmUpdate(e, t = {}) {
    let i = e;
    return this.hasAction(i, "ports") && (this.removePorts(), this.cleanPortsCache()), this.hasAction(i, "render") ? (this.render(), i = this.removeAction(i, [
      "render",
      "update",
      "resize",
      "translate",
      "rotate",
      "ports",
      "tools"
    ])) : (i = this.handleAction(i, "resize", () => this.resize(), "update"), i = this.handleAction(
      i,
      "update",
      () => this.update(),
      // `update()` will render ports when useCSSSelectors are enabled
      "ports"
    ), i = this.handleAction(i, "translate", () => this.translate()), i = this.handleAction(i, "rotate", () => this.rotate()), i = this.handleAction(i, "ports", () => this.renderPorts()), i = this.handleAction(i, "tools", () => {
      this.getFlag("tools") === e ? this.renderTools() : this.updateTools(t);
    })), i;
  }
  update(e) {
    this.cleanCache(), this.removePorts();
    const t = this.cell, i = t.getSize(), s = t.getAttrs();
    this.updateAttrs(this.container, s, {
      attrs: e === s ? null : e,
      rootBBox: new ye(0, 0, i.width, i.height),
      selectors: this.selectors
    }), this.renderPorts();
  }
  renderMarkup() {
    const e = this.cell.markup;
    if (e) {
      if (typeof e == "string")
        throw new TypeError("Not support string markup.");
      return this.renderJSONMarkup(e);
    }
    throw new TypeError("Invalid node markup.");
  }
  renderJSONMarkup(e) {
    const t = this.parseJSONMarkup(e, this.container);
    this.selectors = t.selectors, this.container.appendChild(t.fragment);
  }
  render() {
    return this.empty(), this.renderMarkup(), this.resize(), this.updateTransform(), this.renderTools(), this;
  }
  resize() {
    this.cell.getAngle() && this.rotate(), this.update();
  }
  translate() {
    this.updateTransform();
  }
  rotate() {
    this.updateTransform();
  }
  getTranslationString() {
    const e = this.cell.getPosition();
    return `translate(${e.x},${e.y})`;
  }
  getRotationString() {
    const e = this.cell.getAngle();
    if (e) {
      const t = this.cell.getSize();
      return `rotate(${e},${t.width / 2},${t.height / 2})`;
    }
  }
  updateTransform() {
    let e = this.getTranslationString();
    const t = this.getRotationString();
    t && (e += ` ${t}`), this.container.setAttribute("transform", e);
  }
  // #region ports
  findPortElem(e, t) {
    const i = e ? this.portsCache[e] : null;
    if (!i)
      return null;
    const s = i.portContentElement, r = i.portContentSelectors || {};
    return this.findOne(t, s, r);
  }
  cleanPortsCache() {
    this.portsCache = {};
  }
  removePorts() {
    Object.values(this.portsCache).forEach((e) => {
      no(e.portElement);
    });
  }
  renderPorts() {
    const e = this.container, t = [];
    e.childNodes.forEach((o) => {
      t.push(o);
    });
    const i = this.cell.getParsedPorts(), s = oS(i, "zIndex"), r = "auto";
    s[r] && s[r].forEach((o) => {
      const l = this.getPortElement(o);
      e.append(l), t.push(l);
    }), Object.keys(s).forEach((o) => {
      if (o !== r) {
        const l = parseInt(o, 10);
        this.appendPorts(s[o], l, t);
      }
    }), this.updatePorts();
  }
  appendPorts(e, t, i) {
    const s = e.map((r) => this.getPortElement(r));
    i[t] || t < 0 ? fw(i[Math.max(t, 0)], s) : Xl(this.container, s);
  }
  getPortElement(e) {
    const t = this.portsCache[e.id];
    return t ? t.portElement : this.createPortElement(e);
  }
  createPortElement(e) {
    let t = Yt.renderMarkup(this.cell.getPortContainerMarkup());
    const i = t.elem;
    if (i == null)
      throw new Error("Invalid port container markup.");
    t = Yt.renderMarkup(this.getPortMarkup(e));
    const s = t.elem, r = t.selectors;
    if (s == null)
      throw new Error("Invalid port markup.");
    this.setAttrs({
      port: e.id,
      "port-group": e.group
    }, s);
    let o = "x6-port";
    e.group && (o += ` x6-port-${e.group}`), Ye(i, o), Ye(i, "x6-port"), Ye(s, "x6-port-body"), i.appendChild(s);
    let l = r, a, c;
    if (this.existPortLabel(e)) {
      if (t = Yt.renderMarkup(this.getPortLabelMarkup(e.label)), a = t.elem, c = t.selectors, a == null)
        throw new Error("Invalid port label markup.");
      if (r && c) {
        for (const h in c)
          if (r[h] && h !== this.rootSelector)
            throw new Error("Selectors within port must be unique.");
        l = Object.assign(Object.assign({}, r), c);
      }
      Ye(a, "x6-port-label"), i.appendChild(a);
    }
    return this.portsCache[e.id] = {
      portElement: i,
      portSelectors: l,
      portLabelElement: a,
      portLabelSelectors: c,
      portContentElement: s,
      portContentSelectors: r
    }, this.graph.options.onPortRendered && this.graph.options.onPortRendered({
      port: e,
      node: this.cell,
      container: i,
      selectors: l,
      labelContainer: a,
      labelSelectors: c,
      contentContainer: s,
      contentSelectors: r
    }), i;
  }
  updatePorts() {
    const e = this.cell.getParsedGroups(), t = Object.keys(e);
    t.length === 0 ? this.updatePortGroup() : t.forEach((i) => this.updatePortGroup(i));
  }
  updatePortGroup(e) {
    const t = ye.fromSize(this.cell.getSize()), i = this.cell.getPortsLayoutByGroup(e, t);
    for (let s = 0, r = i.length; s < r; s += 1) {
      const o = i[s], l = o.portId, a = this.portsCache[l] || {}, c = o.portLayout;
      if (this.applyPortTransform(a.portElement, c), o.portAttrs != null) {
        const h = {
          selectors: a.portSelectors || {}
        };
        o.portSize && (h.rootBBox = ye.fromSize(o.portSize)), this.updateAttrs(a.portElement, o.portAttrs, h);
      }
      const u = o.labelLayout;
      if (u && a.portLabelElement && (this.applyPortTransform(a.portLabelElement, u, -(c.angle || 0)), u.attrs)) {
        const h = {
          selectors: a.portLabelSelectors || {}
        };
        o.labelSize && (h.rootBBox = ye.fromSize(o.labelSize)), this.updateAttrs(a.portLabelElement, u.attrs, h);
      }
    }
  }
  applyPortTransform(e, t, i = 0) {
    const s = t.angle, r = t.position, o = ai().rotate(i).translate(r.x || 0, r.y || 0).rotate(s || 0);
    bu(e, o, { absolute: !0 });
  }
  getPortMarkup(e) {
    return e.markup || this.cell.portMarkup;
  }
  getPortLabelMarkup(e) {
    return e.markup || this.cell.portLabelMarkup;
  }
  existPortLabel(e) {
    return e.attrs && e.attrs.text;
  }
  getEventArgs(e, t, i) {
    const s = this, r = s.cell, o = r;
    return t == null || i == null ? { e, view: s, node: r, cell: o } : { e, x: t, y: i, view: s, node: r, cell: o };
  }
  getPortEventArgs(e, t, i) {
    const s = this, r = s.cell, o = r;
    return i ? {
      e,
      x: i.x,
      y: i.y,
      view: s,
      node: r,
      cell: o,
      port: t
    } : { e, view: s, node: r, cell: o, port: t };
  }
  notifyMouseDown(e, t, i) {
    super.onMouseDown(e, t, i), this.notify("node:mousedown", this.getEventArgs(e, t, i));
  }
  notifyMouseMove(e, t, i) {
    super.onMouseMove(e, t, i), this.notify("node:mousemove", this.getEventArgs(e, t, i));
  }
  notifyMouseUp(e, t, i) {
    super.onMouseUp(e, t, i), this.notify("node:mouseup", this.getEventArgs(e, t, i));
  }
  notifyPortEvent(e, t, i) {
    const s = this.findAttr("port", t.target);
    if (s) {
      const r = t.type;
      e === "node:port:mouseenter" ? t.type = "mouseenter" : e === "node:port:mouseleave" && (t.type = "mouseleave"), this.notify(e, this.getPortEventArgs(t, s, i)), t.type = r;
    }
  }
  onClick(e, t, i) {
    super.onClick(e, t, i), this.notify("node:click", this.getEventArgs(e, t, i)), this.notifyPortEvent("node:port:click", e, { x: t, y: i });
  }
  onDblClick(e, t, i) {
    super.onDblClick(e, t, i), this.notify("node:dblclick", this.getEventArgs(e, t, i)), this.notifyPortEvent("node:port:dblclick", e, { x: t, y: i });
  }
  onContextMenu(e, t, i) {
    super.onContextMenu(e, t, i), this.notify("node:contextmenu", this.getEventArgs(e, t, i)), this.notifyPortEvent("node:port:contextmenu", e, { x: t, y: i });
  }
  onMouseDown(e, t, i) {
    this.isPropagationStopped(e) || (this.notifyMouseDown(e, t, i), this.notifyPortEvent("node:port:mousedown", e, { x: t, y: i }), this.startNodeDragging(e, t, i));
  }
  onMouseMove(e, t, i) {
    const s = this.getEventData(e), r = s.action;
    if (r === "magnet")
      this.dragMagnet(e, t, i);
    else {
      if (r === "move") {
        const l = s.targetView || this;
        l.dragNode(e, t, i), l.notify("node:moving", {
          e,
          x: t,
          y: i,
          view: l,
          cell: l.cell,
          node: l.cell
        });
      }
      this.notifyMouseMove(e, t, i), this.notifyPortEvent("node:port:mousemove", e, { x: t, y: i });
    }
    this.setEventData(e, s);
  }
  onMouseUp(e, t, i) {
    const s = this.getEventData(e), r = s.action;
    r === "magnet" ? this.stopMagnetDragging(e, t, i) : (this.notifyMouseUp(e, t, i), this.notifyPortEvent("node:port:mouseup", e, { x: t, y: i }), r === "move" && (s.targetView || this).stopNodeDragging(e, t, i));
    const o = s.targetMagnet;
    o && this.onMagnetClick(e, o, t, i), this.checkMouseleave(e);
  }
  onMouseOver(e) {
    super.onMouseOver(e), this.notify("node:mouseover", this.getEventArgs(e)), this.notifyPortEvent("node:port:mouseenter", e), this.notifyPortEvent("node:port:mouseover", e);
  }
  onMouseOut(e) {
    super.onMouseOut(e), this.notify("node:mouseout", this.getEventArgs(e)), this.notifyPortEvent("node:port:mouseleave", e), this.notifyPortEvent("node:port:mouseout", e);
  }
  onMouseEnter(e) {
    this.updateClassName(e), super.onMouseEnter(e), this.notify("node:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    super.onMouseLeave(e), this.notify("node:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, i, s) {
    super.onMouseWheel(e, t, i, s), this.notify("node:mousewheel", Object.assign({ delta: s }, this.getEventArgs(e, t, i)));
  }
  onMagnetClick(e, t, i, s) {
    const r = this.graph;
    r.view.getMouseMovedCount(e) > r.options.clickThreshold || this.notify("node:magnet:click", Object.assign({ magnet: t }, this.getEventArgs(e, i, s)));
  }
  onMagnetDblClick(e, t, i, s) {
    this.notify("node:magnet:dblclick", Object.assign({ magnet: t }, this.getEventArgs(e, i, s)));
  }
  onMagnetContextMenu(e, t, i, s) {
    this.notify("node:magnet:contextmenu", Object.assign({ magnet: t }, this.getEventArgs(e, i, s)));
  }
  onMagnetMouseDown(e, t, i, s) {
    this.startMagnetDragging(e, i, s);
  }
  onCustomEvent(e, t, i, s) {
    this.notify("node:customevent", Object.assign({ name: t }, this.getEventArgs(e, i, s))), super.onCustomEvent(e, t, i, s);
  }
  prepareEmbedding(e) {
    const t = this.graph, s = this.getEventData(e).cell || this.cell, r = t.findViewByCell(s), o = t.snapToGrid(e.clientX, e.clientY);
    this.notify("node:embed", {
      e,
      node: s,
      view: r,
      cell: s,
      x: o.x,
      y: o.y,
      currentParent: s.getParent()
    });
  }
  processEmbedding(e, t) {
    const i = t.cell || this.cell, s = t.graph || this.graph, r = s.options.embedding, o = r.findParent;
    let l = typeof o == "function" ? Ze(o, s, {
      view: this,
      node: this.cell
    }).filter((d) => gt.isCell(d) && this.cell.id !== d.id && !d.isDescendantOf(this.cell)) : s.model.getNodesUnderNode(i, {
      by: o
    });
    if (r.frontOnly && l.length > 0) {
      const d = oS(l, "zIndex"), f = YQ(Object.keys(d).map((p) => parseInt(p, 10)));
      f && (l = d[f]);
    }
    l = l.filter((d) => d.visible);
    let a = null;
    const c = t.candidateEmbedView, u = r.validate;
    for (let d = l.length - 1; d >= 0; d -= 1) {
      const f = l[d];
      if (c && c.cell.id === f.id) {
        a = c;
        break;
      } else {
        const p = f.findView(s);
        if (u && Ze(u, s, {
          child: this.cell,
          parent: p.cell,
          childView: this,
          parentView: p
        })) {
          a = p;
          break;
        }
      }
    }
    this.clearEmbedding(t), a && a.highlight(null, { type: "embedding" }), t.candidateEmbedView = a;
    const h = s.snapToGrid(e.clientX, e.clientY);
    this.notify("node:embedding", {
      e,
      cell: i,
      node: i,
      view: s.findViewByCell(i),
      x: h.x,
      y: h.y,
      currentParent: i.getParent(),
      candidateParent: a ? a.cell : null
    });
  }
  clearEmbedding(e) {
    const t = e.candidateEmbedView;
    t && (t.unhighlight(null, { type: "embedding" }), e.candidateEmbedView = null);
  }
  finalizeEmbedding(e, t) {
    this.graph.startBatch("embedding");
    const i = t.cell || this.cell, s = t.graph || this.graph, r = s.findViewByCell(i), o = i.getParent(), l = t.candidateEmbedView;
    if (l ? (l.unhighlight(null, { type: "embedding" }), t.candidateEmbedView = null, (o == null || o.id !== l.cell.id) && l.cell.insertChild(i, void 0, { ui: !0 })) : o && o.unembed(i, { ui: !0 }), s.model.getConnectedEdges(i, { deep: !0 }).forEach((a) => {
      a.updateParent({ ui: !0 });
    }), r && l) {
      const a = s.snapToGrid(e.clientX, e.clientY);
      r.notify("node:embedded", {
        e,
        cell: i,
        x: a.x,
        y: a.y,
        node: i,
        view: s.findViewByCell(i),
        previousParent: o,
        currentParent: i.getParent()
      });
    }
    this.graph.stopBatch("embedding");
  }
  getDelegatedView() {
    let e = this.cell, t = this;
    for (; t && !e.isEdge(); ) {
      if (!e.hasParent() || t.can("stopDelegateOnDragging"))
        return t;
      e = e.getParent(), t = this.graph.findViewByCell(e);
    }
    return null;
  }
  validateMagnet(e, t, i) {
    if (t.getAttribute("magnet") !== "passive") {
      const s = this.graph.options.connecting.validateMagnet;
      return s ? Ze(s, this.graph, {
        e: i,
        magnet: t,
        view: e,
        cell: e.cell
      }) : !0;
    }
    return !1;
  }
  startMagnetDragging(e, t, i) {
    if (!this.can("magnetConnectable"))
      return;
    e.stopPropagation();
    const s = e.currentTarget, r = this.graph;
    this.setEventData(e, {
      targetMagnet: s
    }), this.validateMagnet(this, s, e) ? (r.options.magnetThreshold <= 0 && this.startConnectting(e, s, t, i), this.setEventData(e, {
      action: "magnet"
    }), this.stopPropagation(e)) : this.onMouseDown(e, t, i), r.view.delegateDragEvents(e, this);
  }
  startConnectting(e, t, i, s) {
    this.graph.model.startBatch("add-edge");
    const r = this.createEdgeFromMagnet(t, i, s);
    r.setEventData(e, r.prepareArrowheadDragging("target", {
      x: i,
      y: s,
      isNewEdge: !0,
      fallbackAction: "remove"
    })), this.setEventData(e, { edgeView: r }), r.notifyMouseDown(e, i, s);
  }
  getDefaultEdge(e, t) {
    let i;
    const s = this.graph.options.connecting.createEdge;
    return s && (i = Ze(s, this.graph, {
      sourceMagnet: t,
      sourceView: e,
      sourceCell: e.cell
    })), i;
  }
  createEdgeFromMagnet(e, t, i) {
    const s = this.graph, r = s.model, o = this.getDefaultEdge(this, e);
    return o.setSource(Object.assign(Object.assign({}, o.getSource()), this.getEdgeTerminal(e, t, i, o, "source"))), o.setTarget(Object.assign(Object.assign({}, o.getTarget()), { x: t, y: i })), o.addTo(r, { async: !1, ui: !0 }), o.findView(s);
  }
  dragMagnet(e, t, i) {
    const s = this.getEventData(e), r = s.edgeView;
    if (r)
      r.onMouseMove(e, t, i), this.autoScrollGraph(e.clientX, e.clientY);
    else {
      const o = this.graph, l = o.options.magnetThreshold, a = this.getEventTarget(e), c = s.targetMagnet;
      if (l === "onleave") {
        if (c === a || c.contains(a))
          return;
      } else if (o.view.getMouseMovedCount(e) <= l)
        return;
      this.startConnectting(e, c, t, i);
    }
  }
  stopMagnetDragging(e, t, i) {
    const r = this.eventData(e).edgeView;
    r && (r.onMouseUp(e, t, i), this.graph.model.stopBatch("add-edge"));
  }
  notifyUnhandledMouseDown(e, t, i) {
    this.notify("node:unhandled:mousedown", {
      e,
      x: t,
      y: i,
      view: this,
      cell: this.cell,
      node: this.cell
    });
  }
  notifyNodeMove(e, t, i, s, r) {
    let o = [r];
    const l = this.graph.getPlugin("selection");
    if (l && l.isSelectionMovable()) {
      const a = l.getSelectedCells();
      a.includes(r) && (o = a.filter((c) => c.isNode()));
    }
    o.forEach((a) => {
      this.notify(e, {
        e: t,
        x: i,
        y: s,
        cell: a,
        node: a,
        view: a.findView(this.graph)
      });
    });
  }
  getRestrictArea(e) {
    const t = this.graph.options.translating.restrict, i = typeof t == "function" ? Ze(t, this.graph, e) : t;
    return typeof i == "number" ? this.graph.transform.getGraphArea().inflate(i) : i === !0 ? this.graph.transform.getGraphArea() : i || null;
  }
  startNodeDragging(e, t, i) {
    const s = this.getDelegatedView();
    if (s == null || !s.can("nodeMovable"))
      return this.notifyUnhandledMouseDown(e, t, i);
    this.setEventData(e, {
      targetView: s,
      action: "move"
    });
    const r = z.create(s.cell.getPosition());
    s.setEventData(e, {
      moving: !1,
      offset: r.diff(t, i),
      restrict: this.getRestrictArea(s)
    });
  }
  dragNode(e, t, i) {
    const s = this.cell, r = this.graph, o = r.getGridSize(), l = this.getEventData(e), a = l.offset, c = l.restrict;
    l.moving || (l.moving = !0, this.addClass("node-moving"), this.notifyNodeMove("node:move", e, t, i, this.cell)), this.autoScrollGraph(e.clientX, e.clientY);
    const u = At.snapToGrid(t + a.x, o), h = At.snapToGrid(i + a.y, o);
    s.setPosition(u, h, {
      restrict: c,
      deep: !0,
      ui: !0
    }), r.options.embedding.enabled && (l.embedding || (this.prepareEmbedding(e), l.embedding = !0), this.processEmbedding(e, l));
  }
  stopNodeDragging(e, t, i) {
    const s = this.getEventData(e);
    s.embedding && this.finalizeEmbedding(e, s), s.moving && (this.removeClass("node-moving"), this.notifyNodeMove("node:moved", e, t, i, this.cell)), s.moving = !1, s.embedding = !1;
  }
  // eslint-disable-next-line
  autoScrollGraph(e, t) {
    const i = this.graph.getPlugin("scroller");
    i && i.autoScroll(e, t);
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNodeView == "function" && typeof s.isEdgeView == "function" && typeof s.confirmUpdate == "function" && typeof s.update == "function" && typeof s.findPortElem == "function" && typeof s.resize == "function" && typeof s.rotate == "function" && typeof s.translate == "function";
  }
  n.isNodeView = e;
})(As || (As = {}));
As.config({
  isSvgElement: !0,
  priority: 0,
  bootstrap: ["render"],
  actions: {
    view: ["render"],
    markup: ["render"],
    attrs: ["update"],
    size: ["resize", "ports", "tools"],
    angle: ["rotate", "tools"],
    position: ["translate", "tools"],
    ports: ["ports"],
    tools: ["tools"]
  }
});
As.registry.register("node", As, !0);
var ore = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class jo extends En {
  constructor() {
    super(...arguments), this.POINT_ROUNDING = 2, this.labelDestroyFn = {};
  }
  get [Symbol.toStringTag]() {
    return jo.toStringTag;
  }
  getContainerClassName() {
    return [super.getContainerClassName(), this.prefixClassName("edge")].join(" ");
  }
  get sourceBBox() {
    const e = this.sourceView;
    if (!e) {
      const i = this.cell.getSource();
      return new ye(i.x, i.y);
    }
    const t = this.sourceMagnet;
    return e.isEdgeElement(t) ? new ye(this.sourceAnchor.x, this.sourceAnchor.y) : e.getBBoxOfElement(t || e.container);
  }
  get targetBBox() {
    const e = this.targetView;
    if (!e) {
      const i = this.cell.getTarget();
      return new ye(i.x, i.y);
    }
    const t = this.targetMagnet;
    return e.isEdgeElement(t) ? new ye(this.targetAnchor.x, this.targetAnchor.y) : e.getBBoxOfElement(t || e.container);
  }
  isEdgeView() {
    return !0;
  }
  confirmUpdate(e, t = {}) {
    let i = e;
    if (this.hasAction(i, "source")) {
      if (!this.updateTerminalProperties("source"))
        return i;
      i = this.removeAction(i, "source");
    }
    if (this.hasAction(i, "target")) {
      if (!this.updateTerminalProperties("target"))
        return i;
      i = this.removeAction(i, "target");
    }
    return this.hasAction(i, "render") ? (this.render(), i = this.removeAction(i, ["render", "update", "labels", "tools"]), i) : (i = this.handleAction(i, "update", () => this.update(t)), i = this.handleAction(i, "labels", () => this.onLabelsChange(t)), i = this.handleAction(i, "tools", () => this.renderTools()), i);
  }
  // #region render
  render() {
    return this.empty(), this.renderMarkup(), this.labelContainer = null, this.renderLabels(), this.update(), this.renderTools(), this;
  }
  renderMarkup() {
    const e = this.cell.markup;
    if (e) {
      if (typeof e == "string")
        throw new TypeError("Not support string markup.");
      return this.renderJSONMarkup(e);
    }
    throw new TypeError("Invalid edge markup.");
  }
  renderJSONMarkup(e) {
    const t = this.parseJSONMarkup(e, this.container);
    this.selectors = t.selectors, this.container.append(t.fragment);
  }
  customizeLabels() {
    if (this.labelContainer) {
      const e = this.cell, t = e.labels;
      for (let i = 0, s = t.length; i < s; i += 1) {
        const r = t[i], o = this.labelCache[i], l = this.labelSelectors[i], a = this.graph.options.onEdgeLabelRendered;
        if (a) {
          const c = a({
            edge: e,
            label: r,
            container: o,
            selectors: l
          });
          c && (this.labelDestroyFn[i] = c);
        }
      }
    }
  }
  destroyCustomizeLabels() {
    const e = this.cell.labels;
    if (this.labelCache && this.labelSelectors && this.labelDestroyFn)
      for (let t = 0, i = e.length; t < i; t += 1) {
        const s = this.labelDestroyFn[t], r = this.labelCache[t], o = this.labelSelectors[t];
        s && r && o && s({
          edge: this.cell,
          label: e[t],
          container: r,
          selectors: o
        });
      }
    this.labelDestroyFn = {};
  }
  renderLabels() {
    const e = this.cell, t = e.getLabels(), i = t.length;
    let s = this.labelContainer;
    if (this.labelCache = {}, this.labelSelectors = {}, i <= 0)
      return s && s.parentNode && s.parentNode.removeChild(s), this;
    s ? this.empty(s) : (s = $r("g"), this.addClass(this.prefixClassName("edge-labels"), s), this.labelContainer = s);
    for (let r = 0, o = t.length; r < o; r += 1) {
      const l = t[r], a = this.normalizeLabelMarkup(this.parseLabelMarkup(l.markup));
      let c, u;
      if (a)
        c = a.node, u = a.selectors;
      else {
        const d = e.getDefaultLabel(), f = this.normalizeLabelMarkup(this.parseLabelMarkup(d.markup));
        c = f.node, u = f.selectors;
      }
      c.setAttribute("data-index", `${r}`), s.appendChild(c);
      const h = this.rootSelector;
      if (u[h])
        throw new Error("Ambiguous label root selector.");
      u[h] = c, this.labelCache[r] = c, this.labelSelectors[r] = u;
    }
    return s.parentNode == null && this.container.appendChild(s), this.updateLabels(), this.customizeLabels(), this;
  }
  onLabelsChange(e = {}) {
    this.destroyCustomizeLabels(), this.shouldRerenderLabels(e) ? this.renderLabels() : this.updateLabels(), this.updateLabelPositions();
  }
  shouldRerenderLabels(e = {}) {
    const t = this.cell.previous("labels");
    if (t == null)
      return !0;
    if ("propertyPathArray" in e && "propertyValue" in e) {
      const i = e.propertyPathArray || [], s = i.length;
      if (s > 1) {
        const r = i[1];
        if (t[r]) {
          if (s === 2)
            return typeof e.propertyValue == "object" && qf(e.propertyValue, "markup");
          if (i[2] !== "markup")
            return !1;
        }
      }
    }
    return !0;
  }
  parseLabelMarkup(e) {
    return e ? typeof e == "string" ? this.parseLabelStringMarkup(e) : this.parseJSONMarkup(e) : null;
  }
  parseLabelStringMarkup(e) {
    const t = Je.createVectors(e), i = document.createDocumentFragment();
    for (let s = 0, r = t.length; s < r; s += 1) {
      const o = t[s].node;
      i.appendChild(o);
    }
    return { fragment: i, selectors: {} };
  }
  normalizeLabelMarkup(e) {
    if (e == null)
      return;
    const t = e.fragment;
    if (!(t instanceof DocumentFragment) || !t.hasChildNodes())
      throw new Error("Invalid label markup.");
    let i;
    const s = t.childNodes;
    return s.length > 1 || s[0].nodeName.toUpperCase() !== "G" ? i = Je.create("g").append(t) : i = Je.create(s[0]), i.addClass(this.prefixClassName("edge-label")), {
      node: i.node,
      selectors: e.selectors
    };
  }
  updateLabels() {
    if (this.labelContainer) {
      const e = this.cell, t = e.labels, i = this.can("edgeLabelMovable"), s = e.getDefaultLabel();
      for (let r = 0, o = t.length; r < o; r += 1) {
        const l = this.labelCache[r], a = this.labelSelectors[r];
        l.setAttribute("cursor", i ? "move" : "default");
        const c = t[r], u = On({}, s.attrs, c.attrs);
        this.updateAttrs(l, u, {
          selectors: a,
          rootBBox: c.size ? ye.fromSize(c.size) : void 0
        });
      }
    }
  }
  renderTools() {
    const e = this.cell.getTools();
    return this.addTools(e), this;
  }
  // #endregion
  // #region updating
  update(e = {}) {
    this.cleanCache(), this.updateConnection(e);
    const t = this.cell.getAttrs(), i = ore(t, ["text"]);
    return i != null && this.updateAttrs(this.container, i, {
      selectors: this.selectors
    }), this.updateLabelPositions(), this.updateTools(e), this;
  }
  removeRedundantLinearVertices(e = {}) {
    const t = this.cell, i = t.getVertices(), s = [this.sourceAnchor, ...i, this.targetAnchor], r = s.length, o = new Pn(s);
    o.simplify({ threshold: 0.01 });
    const l = o.points.map((c) => c.toJSON()), a = l.length;
    return r === a ? 0 : (t.setVertices(l.slice(1, a - 1), e), r - a);
  }
  getTerminalView(e) {
    switch (e) {
      case "source":
        return this.sourceView || null;
      case "target":
        return this.targetView || null;
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalAnchor(e) {
    switch (e) {
      case "source":
        return z.create(this.sourceAnchor);
      case "target":
        return z.create(this.targetAnchor);
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalConnectionPoint(e) {
    switch (e) {
      case "source":
        return z.create(this.sourcePoint);
      case "target":
        return z.create(this.targetPoint);
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  getTerminalMagnet(e, t = {}) {
    switch (e) {
      case "source": {
        if (t.raw)
          return this.sourceMagnet;
        const i = this.sourceView;
        return i ? this.sourceMagnet || i.container : null;
      }
      case "target": {
        if (t.raw)
          return this.targetMagnet;
        const i = this.targetView;
        return i ? this.targetMagnet || i.container : null;
      }
      default:
        throw new Error(`Unknown terminal type '${e}'`);
    }
  }
  updateConnection(e = {}) {
    const t = this.cell;
    if (e.translateBy && t.isFragmentDescendantOf(e.translateBy)) {
      const i = e.tx || 0, s = e.ty || 0;
      this.routePoints = new Pn(this.routePoints).translate(i, s).points, this.translateConnectionPoints(i, s), this.path.translate(i, s);
    } else {
      const i = t.getVertices(), s = this.findAnchors(i);
      this.sourceAnchor = s.source, this.targetAnchor = s.target, this.routePoints = this.findRoutePoints(i);
      const r = this.findConnectionPoints(this.routePoints, this.sourceAnchor, this.targetAnchor);
      this.sourcePoint = r.source, this.targetPoint = r.target;
      const o = this.findMarkerPoints(this.routePoints, this.sourcePoint, this.targetPoint);
      this.path = this.findPath(this.routePoints, o.source || this.sourcePoint, o.target || this.targetPoint);
    }
    this.cleanCache();
  }
  findAnchors(e) {
    const t = this.cell, i = t.source, s = t.target, r = e[0], o = e[e.length - 1];
    return s.priority && !i.priority ? this.findAnchorsOrdered("target", o, "source", r) : this.findAnchorsOrdered("source", r, "target", o);
  }
  findAnchorsOrdered(e, t, i, s) {
    let r, o;
    const l = this.cell, a = l[e], c = l[i], u = this.getTerminalView(e), h = this.getTerminalView(i), d = this.getTerminalMagnet(e), f = this.getTerminalMagnet(i);
    if (u) {
      let p;
      t ? p = z.create(t) : h ? p = f : p = z.create(c), r = this.getAnchor(a.anchor, u, d, p, e);
    } else
      r = z.create(a);
    if (h) {
      const p = z.create(s || r);
      o = this.getAnchor(c.anchor, h, f, p, i);
    } else
      o = z.isPointLike(c) ? z.create(c) : new z();
    return {
      [e]: r,
      [i]: o
    };
  }
  getAnchor(e, t, i, s, r) {
    const o = t.isEdgeElement(i), l = this.graph.options.connecting;
    let a = typeof e == "string" ? { name: e } : e;
    if (!a) {
      const h = o ? (r === "source" ? l.sourceEdgeAnchor : l.targetEdgeAnchor) || l.edgeAnchor : (r === "source" ? l.sourceAnchor : l.targetAnchor) || l.anchor;
      a = typeof h == "string" ? { name: h } : h;
    }
    if (!a)
      throw new Error("Anchor should be specified.");
    let c;
    const u = a.name;
    if (o) {
      const h = Eu.registry.get(u);
      if (typeof h != "function")
        return Eu.registry.onNotFound(u);
      c = Ze(h, this, t, i, s, a.args || {}, r);
    } else {
      const h = Pu.registry.get(u);
      if (typeof h != "function")
        return Pu.registry.onNotFound(u);
      c = Ze(h, this, t, i, s, a.args || {}, r);
    }
    return c ? c.round(this.POINT_ROUNDING) : new z();
  }
  findRoutePoints(e = []) {
    const t = this.graph.options.connecting.router || wl.presets.normal, i = this.cell.getRouter() || t;
    let s;
    if (typeof i == "function")
      s = Ze(i, this, e, {}, this);
    else {
      const r = typeof i == "string" ? i : i.name, o = typeof i == "string" ? {} : i.args || {}, l = r ? wl.registry.get(r) : wl.presets.normal;
      if (typeof l != "function")
        return wl.registry.onNotFound(r);
      s = Ze(l, this, e, o, this);
    }
    return s == null ? e.map((r) => z.create(r)) : s.map((r) => z.create(r));
  }
  findConnectionPoints(e, t, i) {
    const s = this.cell, r = this.graph.options.connecting, o = s.getSource(), l = s.getTarget(), a = this.sourceView, c = this.targetView, u = e[0], h = e[e.length - 1];
    let d;
    if (a && !a.isEdgeElement(this.sourceMagnet)) {
      const p = this.sourceMagnet || a.container, g = u || i, m = new Ie(g, t), v = o.connectionPoint || r.sourceConnectionPoint || r.connectionPoint;
      d = this.getConnectionPoint(v, a, p, m, "source");
    } else
      d = t;
    let f;
    if (c && !c.isEdgeElement(this.targetMagnet)) {
      const p = this.targetMagnet || c.container, g = l.connectionPoint || r.targetConnectionPoint || r.connectionPoint, m = h || t, v = new Ie(m, i);
      f = this.getConnectionPoint(g, c, p, v, "target");
    } else
      f = i;
    return {
      source: d,
      target: f
    };
  }
  getConnectionPoint(e, t, i, s, r) {
    const o = s.end;
    if (e == null)
      return o;
    const l = typeof e == "string" ? e : e.name, a = typeof e == "string" ? {} : e.args, c = Au.registry.get(l);
    if (typeof c != "function")
      return Au.registry.onNotFound(l);
    const u = Ze(c, this, s, t, i, a || {}, r);
    return u ? u.round(this.POINT_ROUNDING) : o;
  }
  findMarkerPoints(e, t, i) {
    const s = (h) => {
      const d = this.cell.getAttrs(), f = Object.keys(d);
      for (let p = 0, g = f.length; p < g; p += 1) {
        const m = d[f[p]];
        if (m[`${h}Marker`] || m[`${h}-marker`]) {
          const v = m.strokeWidth || m["stroke-width"];
          if (v)
            return parseFloat(v);
          break;
        }
      }
      return null;
    }, r = e[0], o = e[e.length - 1];
    let l, a;
    const c = s("source");
    c && (l = t.clone().move(r || i, -c));
    const u = s("target");
    return u && (a = i.clone().move(o || t, -u)), this.sourceMarkerPoint = l || t.clone(), this.targetMarkerPoint = a || i.clone(), {
      source: l,
      target: a
    };
  }
  findPath(e, t, i) {
    const s = this.cell.getConnector() || this.graph.options.connecting.connector;
    let r, o, l;
    if (typeof s == "string" ? r = s : (r = s.name, o = s.args), r) {
      const c = Ra.registry.get(r);
      if (typeof c != "function")
        return Ra.registry.onNotFound(r);
      l = c;
    } else
      l = Ra.presets.normal;
    const a = Ze(l, this, t, i, e, Object.assign(Object.assign({}, o), { raw: !0 }), this);
    return typeof a == "string" ? Be.parse(a) : a;
  }
  translateConnectionPoints(e, t) {
    this.sourcePoint.translate(e, t), this.targetPoint.translate(e, t), this.sourceAnchor.translate(e, t), this.targetAnchor.translate(e, t), this.sourceMarkerPoint.translate(e, t), this.targetMarkerPoint.translate(e, t);
  }
  updateLabelPositions() {
    if (this.labelContainer == null)
      return this;
    if (!this.path)
      return this;
    const t = this.cell, i = t.getLabels();
    if (i.length === 0)
      return this;
    const s = t.getDefaultLabel(), r = this.normalizeLabelPosition(s.position);
    for (let o = 0, l = i.length; o < l; o += 1) {
      const a = i[o], c = this.labelCache[o];
      if (!c)
        continue;
      const u = this.normalizeLabelPosition(a.position), h = On({}, r, u), d = this.getLabelTransformationMatrix(h);
      c.setAttribute("transform", oh(d));
    }
    return this;
  }
  updateTerminalProperties(e) {
    const t = this.cell, i = this.graph, s = t[e], r = s && s.cell, o = `${e}View`;
    if (!r)
      return this[o] = null, this.updateTerminalMagnet(e), !0;
    const l = i.getCellById(r);
    if (!l)
      throw new Error(`Edge's ${e} node with id "${r}" not exists`);
    const a = l.findView(i);
    return a ? (this[o] = a, this.updateTerminalMagnet(e), !0) : !1;
  }
  updateTerminalMagnet(e) {
    const t = `${e}Magnet`, i = this.getTerminalView(e);
    if (i) {
      let s = i.getMagnetFromEdgeTerminal(this.cell[e]);
      s === i.container && (s = null), this[t] = s;
    } else
      this[t] = null;
  }
  getLabelPositionAngle(e) {
    const t = this.cell.getLabelAt(e);
    return t && t.position && typeof t.position == "object" && t.position.angle || 0;
  }
  getLabelPositionArgs(e) {
    const t = this.cell.getLabelAt(e);
    if (t && t.position && typeof t.position == "object")
      return t.position.options;
  }
  getDefaultLabelPositionArgs() {
    const e = this.cell.getDefaultLabel();
    if (e && e.position && typeof e.position == "object")
      return e.position.options;
  }
  mergeLabelPositionArgs(e, t) {
    return e === null ? null : e === void 0 ? t === null ? null : t : On({}, t, e);
  }
  // #endregion
  getConnection() {
    return this.path != null ? this.path.clone() : null;
  }
  getConnectionPathData() {
    if (this.path == null)
      return "";
    const e = this.cache.pathCache;
    return qf(e, "data") || (e.data = this.path.serialize()), e.data || "";
  }
  getConnectionSubdivisions() {
    if (this.path == null)
      return null;
    const e = this.cache.pathCache;
    return qf(e, "segmentSubdivisions") || (e.segmentSubdivisions = this.path.getSegmentSubdivisions()), e.segmentSubdivisions;
  }
  getConnectionLength() {
    if (this.path == null)
      return 0;
    const e = this.cache.pathCache;
    return qf(e, "length") || (e.length = this.path.length({
      segmentSubdivisions: this.getConnectionSubdivisions()
    })), e.length;
  }
  getPointAtLength(e) {
    return this.path == null ? null : this.path.pointAtLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getPointAtRatio(e) {
    return this.path == null ? null : (zo(e) && (e = parseFloat(e) / 100), this.path.pointAt(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    }));
  }
  getTangentAtLength(e) {
    return this.path == null ? null : this.path.tangentAtLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getTangentAtRatio(e) {
    return this.path == null ? null : this.path.tangentAt(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPoint(e) {
    return this.path == null ? null : this.path.closestPoint(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPointLength(e) {
    return this.path == null ? null : this.path.closestPointLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getClosestPointRatio(e) {
    return this.path == null ? null : this.path.closestPointNormalizedLength(e, {
      segmentSubdivisions: this.getConnectionSubdivisions()
    });
  }
  getLabelPosition(e, t, i, s) {
    const r = { distance: 0 };
    let o = 0, l;
    typeof i == "number" ? (o = i, l = s) : l = i, l != null && (r.options = l);
    const a = l && l.absoluteOffset, c = !(l && l.absoluteDistance), u = l && l.absoluteDistance && l.reverseDistance, h = this.path, d = {
      segmentSubdivisions: this.getConnectionSubdivisions()
    }, f = new z(e, t), p = h.closestPointT(f, d), g = this.getConnectionLength() || 0;
    let m = h.lengthAtT(p, d);
    c && (m = g > 0 ? m / g : 0), u && (m = -1 * (g - m) || 1), r.distance = m;
    let v;
    a || (v = h.tangentAtT(p));
    let O;
    if (v)
      O = v.pointOffset(f);
    else {
      const b = h.pointAtT(p), w = f.diff(b);
      O = { x: w.x, y: w.y };
    }
    return r.offset = O, r.angle = o, r;
  }
  normalizeLabelPosition(e) {
    return typeof e == "number" ? { distance: e } : e;
  }
  getLabelTransformationMatrix(e) {
    const t = this.normalizeLabelPosition(e), i = t.options || {}, s = t.angle || 0, r = t.distance, o = r > 0 && r <= 1;
    let l = 0;
    const a = { x: 0, y: 0 }, c = t.offset;
    c && (typeof c == "number" ? l = c : (c.x != null && (a.x = c.x), c.y != null && (a.y = c.y)));
    const u = a.x !== 0 || a.y !== 0 || l === 0, h = i.keepGradient, d = i.ensureLegibility, f = this.path, p = { segmentSubdivisions: this.getConnectionSubdivisions() }, g = o ? r * this.getConnectionLength() : r, m = f.tangentAtLength(g, p);
    let v, O = s;
    if (m) {
      if (u)
        v = m.start, v.translate(a);
      else {
        const b = m.clone();
        b.rotate(-90, m.start), b.setLength(l), v = b.end;
      }
      h && (O = m.angle() + s, d && (O = Pt.normalize((O + 90) % 180 - 90)));
    } else
      v = f.start, u && v.translate(a);
    return ai().translate(v.x, v.y).rotate(O);
  }
  getVertexIndex(e, t) {
    const s = this.cell.getVertices(), r = this.getClosestPointLength(new z(e, t));
    let o = 0;
    if (r != null)
      for (const l = s.length; o < l; o += 1) {
        const a = s[o], c = this.getClosestPointLength(a);
        if (c != null && r < c)
          break;
      }
    return o;
  }
  getEventArgs(e, t, i) {
    const s = this, r = s.cell, o = r;
    return t == null || i == null ? { e, view: s, edge: r, cell: o } : { e, x: t, y: i, view: s, edge: r, cell: o };
  }
  notifyUnhandledMouseDown(e, t, i) {
    this.notify("edge:unhandled:mousedown", {
      e,
      x: t,
      y: i,
      view: this,
      cell: this.cell,
      edge: this.cell
    });
  }
  notifyMouseDown(e, t, i) {
    super.onMouseDown(e, t, i), this.notify("edge:mousedown", this.getEventArgs(e, t, i));
  }
  notifyMouseMove(e, t, i) {
    super.onMouseMove(e, t, i), this.notify("edge:mousemove", this.getEventArgs(e, t, i));
  }
  notifyMouseUp(e, t, i) {
    super.onMouseUp(e, t, i), this.notify("edge:mouseup", this.getEventArgs(e, t, i));
  }
  onClick(e, t, i) {
    super.onClick(e, t, i), this.notify("edge:click", this.getEventArgs(e, t, i));
  }
  onDblClick(e, t, i) {
    super.onDblClick(e, t, i), this.notify("edge:dblclick", this.getEventArgs(e, t, i));
  }
  onContextMenu(e, t, i) {
    super.onContextMenu(e, t, i), this.notify("edge:contextmenu", this.getEventArgs(e, t, i));
  }
  onMouseDown(e, t, i) {
    this.notifyMouseDown(e, t, i), this.startEdgeDragging(e, t, i);
  }
  onMouseMove(e, t, i) {
    const s = this.getEventData(e);
    switch (s.action) {
      case "drag-label": {
        this.dragLabel(e, t, i);
        break;
      }
      case "drag-arrowhead": {
        this.dragArrowhead(e, t, i);
        break;
      }
      case "drag-edge": {
        this.dragEdge(e, t, i);
        break;
      }
    }
    return this.notifyMouseMove(e, t, i), s;
  }
  onMouseUp(e, t, i) {
    const s = this.getEventData(e);
    switch (s.action) {
      case "drag-label": {
        this.stopLabelDragging(e, t, i);
        break;
      }
      case "drag-arrowhead": {
        this.stopArrowheadDragging(e, t, i);
        break;
      }
      case "drag-edge": {
        this.stopEdgeDragging(e, t, i);
        break;
      }
    }
    return this.notifyMouseUp(e, t, i), this.checkMouseleave(e), s;
  }
  onMouseOver(e) {
    super.onMouseOver(e), this.notify("edge:mouseover", this.getEventArgs(e));
  }
  onMouseOut(e) {
    super.onMouseOut(e), this.notify("edge:mouseout", this.getEventArgs(e));
  }
  onMouseEnter(e) {
    super.onMouseEnter(e), this.notify("edge:mouseenter", this.getEventArgs(e));
  }
  onMouseLeave(e) {
    super.onMouseLeave(e), this.notify("edge:mouseleave", this.getEventArgs(e));
  }
  onMouseWheel(e, t, i, s) {
    super.onMouseWheel(e, t, i, s), this.notify("edge:mousewheel", Object.assign({ delta: s }, this.getEventArgs(e, t, i)));
  }
  onCustomEvent(e, t, i, s) {
    if (X_(e.target, "edge-tool", this.container)) {
      if (e.stopPropagation(), this.can("useEdgeTools")) {
        if (t === "edge:remove") {
          this.cell.remove({ ui: !0 });
          return;
        }
        this.notify("edge:customevent", Object.assign({ name: t }, this.getEventArgs(e, i, s)));
      }
      this.notifyMouseDown(e, i, s);
    } else
      this.notify("edge:customevent", Object.assign({ name: t }, this.getEventArgs(e, i, s))), super.onCustomEvent(e, t, i, s);
  }
  onLabelMouseDown(e, t, i) {
    this.notifyMouseDown(e, t, i), this.startLabelDragging(e, t, i), this.getEventData(e).stopPropagation && e.stopPropagation();
  }
  // #region drag edge
  startEdgeDragging(e, t, i) {
    if (!this.can("edgeMovable")) {
      this.notifyUnhandledMouseDown(e, t, i);
      return;
    }
    this.setEventData(e, {
      x: t,
      y: i,
      moving: !1,
      action: "drag-edge"
    });
  }
  dragEdge(e, t, i) {
    const s = this.getEventData(e);
    s.moving || (s.moving = !0, this.addClass("edge-moving"), this.notify("edge:move", {
      e,
      x: t,
      y: i,
      view: this,
      cell: this.cell,
      edge: this.cell
    })), this.cell.translate(t - s.x, i - s.y, { ui: !0 }), this.setEventData(e, { x: t, y: i }), this.notify("edge:moving", {
      e,
      x: t,
      y: i,
      view: this,
      cell: this.cell,
      edge: this.cell
    });
  }
  stopEdgeDragging(e, t, i) {
    const s = this.getEventData(e);
    s.moving && (this.removeClass("edge-moving"), this.notify("edge:moved", {
      e,
      x: t,
      y: i,
      view: this,
      cell: this.cell,
      edge: this.cell
    })), s.moving = !1;
  }
  // #endregion
  // #region drag arrowhead
  prepareArrowheadDragging(e, t) {
    const i = this.getTerminalMagnet(e), s = {
      action: "drag-arrowhead",
      x: t.x,
      y: t.y,
      isNewEdge: t.isNewEdge === !0,
      terminalType: e,
      initialMagnet: i,
      initialTerminal: xd(this.cell[e]),
      fallbackAction: t.fallbackAction || "revert",
      getValidateConnectionArgs: this.createValidateConnectionArgs(e),
      options: t.options
    };
    return this.beforeArrowheadDragging(s), s;
  }
  createValidateConnectionArgs(e) {
    const t = [];
    t[4] = e, t[5] = this;
    let i, s = 0, r = 0;
    e === "source" ? (s = 2, i = "target") : (r = 2, i = "source");
    const o = this.cell[i], l = o.cell;
    if (l) {
      let a;
      const c = t[s] = this.graph.findViewByCell(l);
      c && (a = c.getMagnetFromEdgeTerminal(o), a === c.container && (a = void 0)), t[s + 1] = a;
    }
    return (a, c) => (t[r] = a, t[r + 1] = a.container === c ? void 0 : c, t);
  }
  beforeArrowheadDragging(e) {
    e.zIndex = this.cell.zIndex, this.cell.toFront();
    const t = this.container.style;
    e.pointerEvents = t.pointerEvents, t.pointerEvents = "none", this.graph.options.connecting.highlight && this.highlightAvailableMagnets(e);
  }
  afterArrowheadDragging(e) {
    e.zIndex != null && (this.cell.setZIndex(e.zIndex, { ui: !0 }), e.zIndex = null);
    const t = this.container;
    t.style.pointerEvents = e.pointerEvents || "", this.graph.options.connecting.highlight && this.unhighlightAvailableMagnets(e);
  }
  validateConnection(e, t, i, s, r, o, l) {
    const a = this.graph.options.connecting, c = a.allowLoop, u = a.allowNode, h = a.allowEdge, d = a.allowPort, f = a.allowMulti, p = a.validateConnection, g = o ? o.cell : null, m = r === "target" ? i : e, v = r === "target" ? s : t;
    let O = !0;
    const b = (w) => {
      const x = r === "source" ? l ? l.port : null : g ? g.getSourcePortId() : null, S = r === "target" ? l ? l.port : null : g ? g.getTargetPortId() : null;
      return Ze(w, this.graph, {
        edge: g,
        edgeView: o,
        sourceView: e,
        targetView: i,
        sourcePort: x,
        targetPort: S,
        sourceMagnet: t,
        targetMagnet: s,
        sourceCell: e ? e.cell : null,
        targetCell: i ? i.cell : null,
        type: r
      });
    };
    if (c != null && (typeof c == "boolean" ? !c && e === i && (O = !1) : O = b(c)), O && d != null && (typeof d == "boolean" ? !d && v && (O = !1) : O = b(d)), O && h != null && (typeof h == "boolean" ? !h && jo.isEdgeView(m) && (O = !1) : O = b(h)), O && u != null && v == null && (typeof u == "boolean" ? !u && As.isNodeView(m) && (O = !1) : O = b(u)), O && f != null && o) {
      const w = o.cell, x = r === "source" ? l : w.getSource(), S = r === "target" ? l : w.getTarget(), C = l ? this.graph.getCellById(l.cell) : null;
      if (x && S && x.cell && S.cell && C)
        if (typeof f == "function")
          O = b(f);
        else {
          const k = this.graph.model.getConnectedEdges(C, {
            outgoing: r === "source",
            incoming: r === "target"
          });
          k.length && (f === "withPort" ? k.some((M) => {
            const _ = M.getSource(), T = M.getTarget();
            return _ && T && _.cell === x.cell && T.cell === S.cell && _.port != null && _.port === x.port && T.port != null && T.port === S.port;
          }) && (O = !1) : f || k.some((M) => {
            const _ = M.getSource(), T = M.getTarget();
            return _ && T && _.cell === x.cell && T.cell === S.cell;
          }) && (O = !1));
        }
    }
    return O && p != null && (O = b(p)), O;
  }
  allowConnectToBlank(e) {
    const t = this.graph, s = t.options.connecting.allowBlank;
    if (typeof s != "function")
      return !!s;
    const r = t.findViewByCell(e), o = e.getSourceCell(), l = e.getTargetCell(), a = t.findViewByCell(o), c = t.findViewByCell(l);
    return Ze(s, t, {
      edge: e,
      edgeView: r,
      sourceCell: o,
      targetCell: l,
      sourceView: a,
      targetView: c,
      sourcePort: e.getSourcePortId(),
      targetPort: e.getTargetPortId(),
      sourceMagnet: r.sourceMagnet,
      targetMagnet: r.targetMagnet
    });
  }
  validateEdge(e, t, i) {
    const s = this.graph;
    if (!this.allowConnectToBlank(e)) {
      const o = e.getSourceCellId(), l = e.getTargetCellId();
      if (!(o && l))
        return !1;
    }
    const r = s.options.connecting.validateEdge;
    return r ? Ze(r, s, {
      edge: e,
      type: t,
      previous: i
    }) : !0;
  }
  arrowheadDragging(e, t, i, s) {
    s.x = t, s.y = i, s.currentTarget !== e && (s.currentMagnet && s.currentView && s.currentView.unhighlight(s.currentMagnet, {
      type: "magnetAdsorbed"
    }), s.currentView = this.graph.findViewByElem(e), s.currentView ? (s.currentMagnet = s.currentView.findMagnet(e), s.currentMagnet && this.validateConnection(...s.getValidateConnectionArgs(s.currentView, s.currentMagnet), s.currentView.getEdgeTerminal(s.currentMagnet, t, i, this.cell, s.terminalType)) ? s.currentView.highlight(s.currentMagnet, {
      type: "magnetAdsorbed"
    }) : s.currentMagnet = null) : s.currentMagnet = null), s.currentTarget = e, this.cell.prop(s.terminalType, { x: t, y: i }, Object.assign(Object.assign({}, s.options), { ui: !0 }));
  }
  arrowheadDragged(e, t, i) {
    const s = e.currentView, r = e.currentMagnet;
    if (!r || !s)
      return;
    s.unhighlight(r, { type: "magnetAdsorbed" });
    const o = e.terminalType, l = s.getEdgeTerminal(r, t, i, this.cell, o);
    this.cell.setTerminal(o, l, { ui: !0 });
  }
  snapArrowhead(e, t, i) {
    const s = this.graph, { snap: r, allowEdge: o } = s.options.connecting, l = typeof r == "object" && r.radius || 50, a = typeof r == "object" && r.anchor || "center", c = s.renderer.findViewsInArea({
      x: e - l,
      y: t - l,
      width: 2 * l,
      height: 2 * l
    }, { nodeOnly: !0 });
    if (o) {
      const w = s.renderer.findEdgeViewsFromPoint({ x: e, y: t }, l).filter((x) => x !== this);
      c.push(...w);
    }
    const u = i.closestView || null, h = i.closestMagnet || null;
    i.closestView = null, i.closestMagnet = null;
    let d, f = Number.MAX_SAFE_INTEGER;
    const p = new z(e, t);
    c.forEach((w) => {
      if (w.container.getAttribute("magnet") !== "false") {
        if (w.isNodeView())
          d = a === "center" ? w.cell.getBBox().getCenter().distance(p) : w.cell.getBBox().getNearestPointToPoint(p).distance(p);
        else if (w.isEdgeView()) {
          const x = w.getClosestPoint(p);
          x ? d = x.distance(p) : d = Number.MAX_SAFE_INTEGER;
        }
        d < l && d < f && (h === w.container || this.validateConnection(...i.getValidateConnectionArgs(w, null), w.getEdgeTerminal(w.container, e, t, this.cell, i.terminalType))) && (f = d, i.closestView = w, i.closestMagnet = w.container);
      }
      w.container.querySelectorAll("[magnet]").forEach((x) => {
        if (x.getAttribute("magnet") !== "false") {
          const S = w.getBBoxOfElement(x);
          d = p.distance(S.getCenter()), d < l && d < f && (h === x || this.validateConnection(...i.getValidateConnectionArgs(w, x), w.getEdgeTerminal(x, e, t, this.cell, i.terminalType))) && (f = d, i.closestView = w, i.closestMagnet = x);
        }
      });
    });
    let g;
    const m = i.terminalType, v = i.closestView, O = i.closestMagnet, b = h !== O;
    if (u && b && u.unhighlight(h, {
      type: "magnetAdsorbed"
    }), v) {
      if (!b)
        return;
      v.highlight(O, {
        type: "magnetAdsorbed"
      }), g = v.getEdgeTerminal(O, e, t, this.cell, m);
    } else
      g = { x: e, y: t };
    this.cell.setTerminal(m, g, {}, Object.assign(Object.assign({}, i.options), { ui: !0 }));
  }
  snapArrowheadEnd(e) {
    const t = e.closestView, i = e.closestMagnet;
    t && i && (t.unhighlight(i, {
      type: "magnetAdsorbed"
    }), e.currentMagnet = t.findMagnet(i)), e.closestView = null, e.closestMagnet = null;
  }
  finishEmbedding(e) {
    this.graph.options.embedding.enabled && this.cell.updateParent() && (e.zIndex = null);
  }
  fallbackConnection(e) {
    switch (e.fallbackAction) {
      case "remove":
        this.cell.remove({ ui: !0 });
        break;
      case "revert":
      default:
        this.cell.prop(e.terminalType, e.initialTerminal, {
          ui: !0
        });
        break;
    }
  }
  notifyConnectionEvent(e, t) {
    const i = e.terminalType, s = e.initialTerminal, r = this.cell[i];
    if (r && !xn.equalTerminals(s, r)) {
      const l = this.graph, a = s, c = a.cell ? l.getCellById(a.cell) : null, u = a.port, h = c ? l.findViewByCell(c) : null, d = c || e.isNewEdge ? null : z.create(s).toJSON(), f = r, p = f.cell ? l.getCellById(f.cell) : null, g = f.port, m = p ? l.findViewByCell(p) : null, v = p ? null : z.create(r).toJSON();
      this.notify("edge:connected", {
        e: t,
        previousCell: c,
        previousPort: u,
        previousView: h,
        previousPoint: d,
        currentCell: p,
        currentView: m,
        currentPort: g,
        currentPoint: v,
        previousMagnet: e.initialMagnet,
        currentMagnet: e.currentMagnet,
        edge: this.cell,
        view: this,
        type: i,
        isNew: e.isNewEdge
      });
    }
  }
  highlightAvailableMagnets(e) {
    const t = this.graph, i = t.model.getCells();
    e.marked = {};
    for (let s = 0, r = i.length; s < r; s += 1) {
      const o = t.findViewByCell(i[s]);
      if (!o || o.cell.id === this.cell.id)
        continue;
      const l = Array.prototype.slice.call(o.container.querySelectorAll("[magnet]"));
      o.container.getAttribute("magnet") !== "false" && l.push(o.container);
      const a = l.filter((c) => this.validateConnection(...e.getValidateConnectionArgs(o, c), o.getEdgeTerminal(c, e.x, e.y, this.cell, e.terminalType)));
      if (a.length > 0) {
        for (let c = 0, u = a.length; c < u; c += 1)
          o.highlight(a[c], { type: "magnetAvailable" });
        o.highlight(null, { type: "nodeAvailable" }), e.marked[o.cell.id] = a;
      }
    }
  }
  unhighlightAvailableMagnets(e) {
    const t = e.marked || {};
    Object.keys(t).forEach((i) => {
      const s = this.graph.findViewByCell(i);
      s && (t[i].forEach((o) => {
        s.unhighlight(o, { type: "magnetAvailable" });
      }), s.unhighlight(null, { type: "nodeAvailable" }));
    }), e.marked = null;
  }
  startArrowheadDragging(e, t, i) {
    if (!this.can("arrowheadMovable")) {
      this.notifyUnhandledMouseDown(e, t, i);
      return;
    }
    const r = e.target.getAttribute("data-terminal"), o = this.prepareArrowheadDragging(r, { x: t, y: i });
    this.setEventData(e, o);
  }
  dragArrowhead(e, t, i) {
    const s = this.getEventData(e);
    this.graph.options.connecting.snap ? this.snapArrowhead(t, i, s) : this.arrowheadDragging(this.getEventTarget(e), t, i, s);
  }
  stopArrowheadDragging(e, t, i) {
    const s = this.graph, r = this.getEventData(e);
    s.options.connecting.snap ? this.snapArrowheadEnd(r) : this.arrowheadDragged(r, t, i), this.validateEdge(this.cell, r.terminalType, r.initialTerminal) ? (this.finishEmbedding(r), this.notifyConnectionEvent(r, e)) : this.fallbackConnection(r), this.afterArrowheadDragging(r);
  }
  // #endregion
  // #region drag lable
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  startLabelDragging(e, t, i) {
    if (this.can("edgeLabelMovable")) {
      const s = e.currentTarget, r = parseInt(s.getAttribute("data-index"), 10), o = this.getLabelPositionAngle(r), l = this.getLabelPositionArgs(r), a = this.getDefaultLabelPositionArgs(), c = this.mergeLabelPositionArgs(l, a);
      this.setEventData(e, {
        index: r,
        positionAngle: o,
        positionArgs: c,
        stopPropagation: !0,
        action: "drag-label"
      });
    } else
      this.setEventData(e, { stopPropagation: !0 });
    this.graph.view.delegateDragEvents(e, this);
  }
  dragLabel(e, t, i) {
    const s = this.getEventData(e), r = this.cell.getLabelAt(s.index), o = On({}, r, {
      position: this.getLabelPosition(t, i, s.positionAngle, s.positionArgs)
    });
    this.cell.setLabelAt(s.index, o);
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  stopLabelDragging(e, t, i) {
  }
}
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag], s = t;
    return (i == null || i === n.toStringTag) && typeof s.isNodeView == "function" && typeof s.isEdgeView == "function" && typeof s.confirmUpdate == "function" && typeof s.update == "function" && typeof s.getConnection == "function";
  }
  n.isEdgeView = e;
})(jo || (jo = {}));
jo.config({
  isSvgElement: !0,
  priority: 1,
  bootstrap: ["render", "source", "target"],
  actions: {
    view: ["render"],
    markup: ["render"],
    attrs: ["update"],
    source: ["source", "update"],
    target: ["target", "update"],
    router: ["update"],
    connector: ["update"],
    labels: ["labels"],
    defaultLabel: ["labels"],
    tools: ["tools"],
    vertices: ["vertices", "update"]
  }
});
jo.registry.register("edge", jo, !0);
var lre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class fo extends Rt {
  /** Graph's `this.container` is from outer, should not dispose */
  get disposeContainer() {
    return !1;
  }
  get options() {
    return this.graph.options;
  }
  constructor(e) {
    super(), this.graph = e;
    const { selectors: t, fragment: i } = Yt.parseJSONMarkup(fo.markup);
    this.background = t.background, this.grid = t.grid, this.svg = t.svg, this.defs = t.defs, this.viewport = t.viewport, this.primer = t.primer, this.stage = t.stage, this.decorator = t.decorator, this.overlay = t.overlay, this.container = this.options.container, this.restore = fo.snapshoot(this.container), Ye(this.container, this.prefixClassName("graph")), Xl(this.container, i), this.delegateEvents();
  }
  delegateEvents() {
    const e = this.constructor;
    return super.delegateEvents(e.events), this;
  }
  /**
   * Guard the specified event. If the event is not interesting, it
   * returns `true`, otherwise returns `false`.
   */
  guard(e, t) {
    return e.type === "mousedown" && e.button === 2 || this.options.guard && this.options.guard(e, t) ? !0 : e.data && e.data.guarded !== void 0 ? e.data.guarded : !(t && t.cell && gt.isCell(t.cell) || this.svg === e.target || this.container === e.target || this.svg.contains(e.target));
  }
  findView(e) {
    return this.graph.findViewByElem(e);
  }
  onDblClick(e) {
    this.options.preventDefaultDblClick && e.preventDefault();
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.guard(t, i))
      return;
    const s = this.graph.snapToGrid(t.clientX, t.clientY);
    i ? i.onDblClick(t, s.x, s.y) : this.graph.trigger("blank:dblclick", {
      e: t,
      x: s.x,
      y: s.y
    });
  }
  onClick(e) {
    if (this.getMouseMovedCount(e) <= this.options.clickThreshold) {
      const t = this.normalizeEvent(e), i = this.findView(t.target);
      if (this.guard(t, i))
        return;
      const s = this.graph.snapToGrid(t.clientX, t.clientY);
      i ? i.onClick(t, s.x, s.y) : this.graph.trigger("blank:click", {
        e: t,
        x: s.x,
        y: s.y
      });
    }
  }
  isPreventDefaultContextMenu(e) {
    let t = this.options.preventDefaultContextMenu;
    return typeof t == "function" && (t = Ze(t, this.graph, { view: e })), t;
  }
  onContextMenu(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.isPreventDefaultContextMenu(i) && e.preventDefault(), this.guard(t, i))
      return;
    const s = this.graph.snapToGrid(t.clientX, t.clientY);
    i ? i.onContextMenu(t, s.x, s.y) : this.graph.trigger("blank:contextmenu", {
      e: t,
      x: s.x,
      y: s.y
    });
  }
  delegateDragEvents(e, t) {
    e.data == null && (e.data = {}), this.setEventData(e, {
      currentView: t || null,
      mouseMovedCount: 0,
      startPosition: {
        x: e.clientX,
        y: e.clientY
      }
    });
    const i = this.constructor;
    this.delegateDocumentEvents(i.documentEvents, e.data), this.undelegateEvents();
  }
  getMouseMovedCount(e) {
    return this.getEventData(e).mouseMovedCount || 0;
  }
  onMouseDown(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.guard(t, i))
      return;
    this.options.preventDefaultMouseDown && e.preventDefault();
    const s = this.graph.snapToGrid(t.clientX, t.clientY);
    i ? i.onMouseDown(t, s.x, s.y) : (this.options.preventDefaultBlankAction && ["touchstart"].includes(t.type) && e.preventDefault(), this.graph.trigger("blank:mousedown", {
      e: t,
      x: s.x,
      y: s.y
    })), this.delegateDragEvents(t, i);
  }
  onMouseMove(e) {
    const t = this.getEventData(e), i = t.startPosition;
    if (i && i.x === e.clientX && i.y === e.clientY || (t.mouseMovedCount == null && (t.mouseMovedCount = 0), t.mouseMovedCount += 1, t.mouseMovedCount <= this.options.moveThreshold))
      return;
    const r = this.normalizeEvent(e), o = this.graph.snapToGrid(r.clientX, r.clientY), l = t.currentView;
    l ? l.onMouseMove(r, o.x, o.y) : this.graph.trigger("blank:mousemove", {
      e: r,
      x: o.x,
      y: o.y
    }), this.setEventData(r, t);
  }
  onMouseUp(e) {
    this.undelegateDocumentEvents();
    const t = this.normalizeEvent(e), i = this.graph.snapToGrid(t.clientX, t.clientY), r = this.getEventData(e).currentView;
    if (r ? r.onMouseUp(t, i.x, i.y) : this.graph.trigger("blank:mouseup", {
      e: t,
      x: i.x,
      y: i.y
    }), !e.isPropagationStopped()) {
      const o = new io(e, {
        type: "click",
        data: e.data
      });
      this.onClick(o);
    }
    e.stopImmediatePropagation(), this.delegateEvents();
  }
  onMouseOver(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (!this.guard(t, i))
      if (i)
        i.onMouseOver(t);
      else {
        if (this.container === t.target)
          return;
        this.graph.trigger("blank:mouseover", { e: t });
      }
  }
  onMouseOut(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (!this.guard(t, i))
      if (i)
        i.onMouseOut(t);
      else {
        if (this.container === t.target)
          return;
        this.graph.trigger("blank:mouseout", { e: t });
      }
  }
  onMouseEnter(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.guard(t, i))
      return;
    const s = this.graph.findViewByElem(t.relatedTarget);
    if (i) {
      if (s === i)
        return;
      i.onMouseEnter(t);
    } else {
      if (s)
        return;
      this.graph.trigger("graph:mouseenter", { e: t });
    }
  }
  onMouseLeave(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.guard(t, i))
      return;
    const s = this.graph.findViewByElem(t.relatedTarget);
    if (i) {
      if (s === i)
        return;
      i.onMouseLeave(t);
    } else {
      if (s)
        return;
      this.graph.trigger("graph:mouseleave", { e: t });
    }
  }
  onMouseWheel(e) {
    const t = this.normalizeEvent(e), i = this.findView(t.target);
    if (this.guard(t, i))
      return;
    const s = t.originalEvent, r = this.graph.snapToGrid(s.clientX, s.clientY), o = Math.max(-1, Math.min(1, s.wheelDelta || -s.detail));
    i ? i.onMouseWheel(t, r.x, r.y, o) : this.graph.trigger("blank:mousewheel", {
      e: t,
      delta: o,
      x: r.x,
      y: r.y
    });
  }
  onCustomEvent(e) {
    const t = e.currentTarget, i = t.getAttribute("event") || t.getAttribute("data-event");
    if (i) {
      const s = this.findView(t);
      if (s) {
        const r = this.normalizeEvent(e);
        if (this.guard(r, s))
          return;
        const o = this.graph.snapToGrid(r.clientX, r.clientY);
        s.onCustomEvent(r, i, o.x, o.y);
      }
    }
  }
  handleMagnetEvent(e, t) {
    const i = e.currentTarget, s = i.getAttribute("magnet");
    if (s && s.toLowerCase() !== "false") {
      const r = this.findView(i);
      if (r) {
        const o = this.normalizeEvent(e);
        if (this.guard(o, r))
          return;
        const l = this.graph.snapToGrid(o.clientX, o.clientY);
        Ze(t, this.graph, r, o, i, l.x, l.y);
      }
    }
  }
  onMagnetMouseDown(e) {
    this.handleMagnetEvent(e, (t, i, s, r, o) => {
      t.onMagnetMouseDown(i, s, r, o);
    });
  }
  onMagnetDblClick(e) {
    this.handleMagnetEvent(e, (t, i, s, r, o) => {
      t.onMagnetDblClick(i, s, r, o);
    });
  }
  onMagnetContextMenu(e) {
    const t = this.findView(e.target);
    this.isPreventDefaultContextMenu(t) && e.preventDefault(), this.handleMagnetEvent(e, (i, s, r, o, l) => {
      i.onMagnetContextMenu(s, r, o, l);
    });
  }
  onLabelMouseDown(e) {
    const t = e.currentTarget, i = this.findView(t);
    if (i) {
      const s = this.normalizeEvent(e);
      if (this.guard(s, i))
        return;
      const r = this.graph.snapToGrid(s.clientX, s.clientY);
      i.onLabelMouseDown(s, r.x, r.y);
    }
  }
  onImageDragStart() {
    return !1;
  }
  dispose() {
    this.undelegateEvents(), this.undelegateDocumentEvents(), this.restore(), this.restore = () => {
    };
  }
}
lre([
  Rt.dispose()
], fo.prototype, "dispose", null);
(function(n) {
  const e = `${Ks.prefixCls}-graph`;
  n.markup = [
    {
      ns: si.xhtml,
      tagName: "div",
      selector: "background",
      className: `${e}-background`
    },
    {
      ns: si.xhtml,
      tagName: "div",
      selector: "grid",
      className: `${e}-grid`
    },
    {
      ns: si.svg,
      tagName: "svg",
      selector: "svg",
      className: `${e}-svg`,
      attrs: {
        width: "100%",
        height: "100%",
        "xmlns:xlink": si.xlink
      },
      children: [
        {
          tagName: "defs",
          selector: "defs"
        },
        {
          tagName: "g",
          selector: "viewport",
          className: `${e}-svg-viewport`,
          children: [
            {
              tagName: "g",
              selector: "primer",
              className: `${e}-svg-primer`
            },
            {
              tagName: "g",
              selector: "stage",
              className: `${e}-svg-stage`
            },
            {
              tagName: "g",
              selector: "decorator",
              className: `${e}-svg-decorator`
            },
            {
              tagName: "g",
              selector: "overlay",
              className: `${e}-svg-overlay`
            }
          ]
        }
      ]
    }
  ];
  function t(i) {
    const s = i.cloneNode();
    return i.childNodes.forEach((r) => s.appendChild(r)), () => {
      for (kf(i); i.attributes.length > 0; )
        i.removeAttribute(i.attributes[0].name);
      for (let r = 0, o = s.attributes.length; r < o; r += 1) {
        const l = s.attributes[r];
        i.setAttribute(l.name, l.value);
      }
      s.childNodes.forEach((r) => i.appendChild(r));
    };
  }
  n.snapshoot = t;
})(fo || (fo = {}));
(function(n) {
  const e = Ks.prefixCls;
  n.events = {
    dblclick: "onDblClick",
    contextmenu: "onContextMenu",
    touchstart: "onMouseDown",
    mousedown: "onMouseDown",
    mouseover: "onMouseOver",
    mouseout: "onMouseOut",
    mouseenter: "onMouseEnter",
    mouseleave: "onMouseLeave",
    mousewheel: "onMouseWheel",
    DOMMouseScroll: "onMouseWheel",
    [`mouseenter  .${e}-cell`]: "onMouseEnter",
    [`mouseleave  .${e}-cell`]: "onMouseLeave",
    [`mouseenter  .${e}-cell-tools`]: "onMouseEnter",
    [`mouseleave  .${e}-cell-tools`]: "onMouseLeave",
    [`mousedown   .${e}-cell [event]`]: "onCustomEvent",
    [`touchstart  .${e}-cell [event]`]: "onCustomEvent",
    [`mousedown   .${e}-cell [data-event]`]: "onCustomEvent",
    [`touchstart  .${e}-cell [data-event]`]: "onCustomEvent",
    [`dblclick    .${e}-cell [magnet]`]: "onMagnetDblClick",
    [`contextmenu .${e}-cell [magnet]`]: "onMagnetContextMenu",
    [`mousedown   .${e}-cell [magnet]`]: "onMagnetMouseDown",
    [`touchstart  .${e}-cell [magnet]`]: "onMagnetMouseDown",
    [`dblclick    .${e}-cell [data-magnet]`]: "onMagnetDblClick",
    [`contextmenu .${e}-cell [data-magnet]`]: "onMagnetContextMenu",
    [`mousedown   .${e}-cell [data-magnet]`]: "onMagnetMouseDown",
    [`touchstart  .${e}-cell [data-magnet]`]: "onMagnetMouseDown",
    [`dragstart   .${e}-cell image`]: "onImageDragStart",
    [`mousedown   .${e}-edge .${e}-edge-label`]: "onLabelMouseDown",
    [`touchstart  .${e}-edge .${e}-edge-label`]: "onLabelMouseDown"
  }, n.documentEvents = {
    mousemove: "onMouseMove",
    touchmove: "onMouseMove",
    mouseup: "onMouseUp",
    touchend: "onMouseUp",
    touchcancel: "onMouseUp"
  };
})(fo || (fo = {}));
const are = `.x6-graph {
  position: relative;
  overflow: hidden;
  outline: none;
  touch-action: none;
}
.x6-graph-background,
.x6-graph-grid,
.x6-graph-svg {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.x6-graph-background-stage,
.x6-graph-grid-stage,
.x6-graph-svg-stage {
  user-select: none;
}
.x6-graph.x6-graph-pannable {
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}
.x6-graph.x6-graph-panning {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
  user-select: none;
}
.x6-node {
  cursor: move;
  /* stylelint-disable-next-line */
}
.x6-node.x6-node-immovable {
  cursor: default;
}
.x6-node * {
  -webkit-user-drag: none;
}
.x6-node .scalable * {
  vector-effect: non-scaling-stroke;
}
.x6-node [magnet='true'] {
  cursor: crosshair;
  transition: opacity 0.3s;
}
.x6-node [magnet='true']:hover {
  opacity: 0.7;
}
.x6-node foreignObject {
  display: block;
  overflow: visible;
  background-color: transparent;
}
.x6-node foreignObject > body {
  position: static;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: visible;
  background-color: transparent;
}
.x6-edge .source-marker,
.x6-edge .target-marker {
  vector-effect: non-scaling-stroke;
}
.x6-edge .connection {
  stroke-linejoin: round;
  fill: none;
}
.x6-edge .connection-wrap {
  cursor: move;
  opacity: 0;
  fill: none;
  stroke: #000;
  stroke-width: 15;
  stroke-linecap: round;
  stroke-linejoin: round;
}
.x6-edge .connection-wrap:hover {
  opacity: 0.4;
  stroke-opacity: 0.4;
}
.x6-edge .vertices {
  cursor: move;
  opacity: 0;
}
.x6-edge .vertices .vertex {
  fill: #1abc9c;
}
.x6-edge .vertices .vertex :hover {
  fill: #34495e;
  stroke: none;
}
.x6-edge .vertices .vertex-remove {
  cursor: pointer;
  fill: #fff;
}
.x6-edge .vertices .vertex-remove-area {
  cursor: pointer;
  opacity: 0.1;
}
.x6-edge .vertices .vertex-group:hover .vertex-remove-area {
  opacity: 1;
}
.x6-edge .arrowheads {
  cursor: move;
  opacity: 0;
}
.x6-edge .arrowheads .arrowhead {
  fill: #1abc9c;
}
.x6-edge .arrowheads .arrowhead :hover {
  fill: #f39c12;
  stroke: none;
}
.x6-edge .tools {
  cursor: pointer;
  opacity: 0;
}
.x6-edge .tools .tool-options {
  display: none;
}
.x6-edge .tools .tool-remove circle {
  fill: #f00;
}
.x6-edge .tools .tool-remove path {
  fill: #fff;
}
.x6-edge:hover .vertices,
.x6-edge:hover .arrowheads,
.x6-edge:hover .tools {
  opacity: 1;
}
.x6-highlight-opacity {
  opacity: 0.3;
}
.x6-cell-tool-editor {
  position: relative;
  display: inline-block;
  min-height: 1em;
  margin: 0;
  padding: 0;
  line-height: 1;
  white-space: normal;
  text-align: center;
  vertical-align: top;
  overflow-wrap: normal;
  outline: none;
  transform-origin: 0 0;
  -webkit-user-drag: none;
}
.x6-edge-tool-editor {
  border: 1px solid #275fc5;
  border-radius: 2px;
}
`;
class ci extends Qo {
  get options() {
    return this.graph.options;
  }
  get model() {
    return this.graph.model;
  }
  get view() {
    return this.graph.view;
  }
  constructor(e) {
    super(), this.graph = e, this.init();
  }
  init() {
  }
}
var cre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Iy extends ci {
  init() {
    h0("core", are);
  }
  dispose() {
    d0("core");
  }
}
cre([
  Iy.dispose()
], Iy.prototype, "dispose", null);
var ure = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
}, zd;
(function(n) {
  function e(t) {
    const { grid: i, panning: s, mousewheel: r, embedding: o } = t, l = ure(
      t,
      ["grid", "panning", "mousewheel", "embedding"]
    ), a = t.container;
    if (a != null)
      l.width == null && (l.width = a.clientWidth), l.height == null && (l.height = a.clientHeight);
    else
      throw new Error("Ensure the container of the graph is specified and valid");
    const c = On({}, n.defaults, l), u = { size: 10, visible: !1 };
    return typeof i == "number" ? c.grid = { size: i, visible: !1 } : typeof i == "boolean" ? c.grid = Object.assign(Object.assign({}, u), { visible: i }) : c.grid = Object.assign(Object.assign({}, u), i), [
      "panning",
      "mousewheel",
      "embedding"
    ].forEach((d) => {
      const f = t[d];
      typeof f == "boolean" ? c[d].enabled = f : c[d] = Object.assign(Object.assign({}, c[d]), f);
    }), c;
  }
  n.get = e;
})(zd || (zd = {}));
(function(n) {
  n.defaults = {
    x: 0,
    y: 0,
    scaling: {
      min: 0.01,
      max: 16
    },
    grid: {
      size: 10,
      visible: !1
    },
    background: !1,
    panning: {
      enabled: !1,
      eventTypes: ["leftMouseDown"]
    },
    mousewheel: {
      enabled: !1,
      factor: 1.2,
      zoomAtMousePosition: !0
    },
    highlighting: {
      default: {
        name: "stroke",
        args: {
          padding: 3
        }
      },
      nodeAvailable: {
        name: "className",
        args: {
          className: Ks.prefix("available-node")
        }
      },
      magnetAvailable: {
        name: "className",
        args: {
          className: Ks.prefix("available-magnet")
        }
      }
    },
    connecting: {
      snap: !1,
      allowLoop: !0,
      allowNode: !0,
      allowEdge: !1,
      allowPort: !0,
      allowBlank: !0,
      allowMulti: !0,
      highlight: !1,
      anchor: "center",
      edgeAnchor: "ratio",
      connectionPoint: "boundary",
      router: "normal",
      connector: "normal",
      validateConnection({ type: e, sourceView: t, targetView: i }) {
        return (e === "target" ? i : t) != null;
      },
      createEdge() {
        return new nre();
      }
    },
    translating: {
      restrict: !1
    },
    embedding: {
      enabled: !1,
      findParent: "bbox",
      frontOnly: !0,
      validate: () => !0
    },
    moveThreshold: 0,
    clickThreshold: 0,
    magnetThreshold: 0,
    preventDefaultDblClick: !0,
    preventDefaultMouseDown: !1,
    preventDefaultContextMenu: !0,
    preventDefaultBlankAction: !0,
    interacting: {
      edgeLabelMovable: !1
    },
    async: !0,
    virtual: !1,
    guard: () => !1
  };
})(zd || (zd = {}));
var hre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
}, dre = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class Ow extends ci {
  get elem() {
    return this.view.grid;
  }
  get grid() {
    return this.options.grid;
  }
  init() {
    this.startListening(), this.draw(this.grid);
  }
  startListening() {
    this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this);
  }
  stopListening() {
    this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this);
  }
  setVisible(e) {
    this.grid.visible !== e && (this.grid.visible = e, this.update());
  }
  getGridSize() {
    return this.grid.size;
  }
  setGridSize(e) {
    this.grid.size = Math.max(e, 1), this.update();
  }
  show() {
    this.setVisible(!0), this.update();
  }
  hide() {
    this.setVisible(!1), this.update();
  }
  clear() {
    this.elem.style.backgroundImage = "";
  }
  draw(e) {
    this.clear(), this.instance = null, Object.assign(this.grid, e), this.patterns = this.resolveGrid(e), this.update();
  }
  update(e = {}) {
    const t = this.grid.size;
    if (t <= 1 || !this.grid.visible)
      return this.clear();
    const i = this.graph.matrix(), s = this.getInstance(), r = Array.isArray(e) ? e : [e];
    this.patterns.forEach((a, c) => {
      const u = `pattern_${c}`, h = i.a || 1, d = i.d || 1, { update: f, markup: p } = a, g = dre(a, ["update", "markup"]), m = Object.assign(Object.assign(Object.assign({}, g), r[c]), {
        sx: h,
        sy: d,
        ox: i.e || 0,
        oy: i.f || 0,
        width: t * h,
        height: t * d
      });
      s.has(u) || s.add(u, Je.create("pattern", { id: u, patternUnits: "userSpaceOnUse" }, Je.createVectors(p)).node);
      const v = s.get(u);
      typeof f == "function" && f(v.childNodes[0], m);
      let O = m.ox % m.width;
      O < 0 && (O += m.width);
      let b = m.oy % m.height;
      b < 0 && (b += m.height), St(v, {
        x: O,
        y: b,
        width: m.width,
        height: m.height
      });
    });
    const o = new XMLSerializer().serializeToString(s.root), l = `url(data:image/svg+xml;base64,${btoa(o)})`;
    this.elem.style.backgroundImage = l;
  }
  getInstance() {
    return this.instance || (this.instance = new Ol()), this.instance;
  }
  resolveGrid(e) {
    if (!e)
      return [];
    const t = e.type;
    if (t == null)
      return [
        Object.assign(Object.assign({}, Ol.presets.dot), e.args)
      ];
    const i = Ol.registry.get(t);
    if (i) {
      let s = e.args || [];
      return Array.isArray(s) || (s = [s]), Array.isArray(i) ? i.map((r, o) => Object.assign(Object.assign({}, r), s[o])) : [Object.assign(Object.assign({}, i), s[0])];
    }
    return Ol.registry.onNotFound(t);
  }
  dispose() {
    this.stopListening(), this.clear();
  }
}
hre([
  ci.dispose()
], Ow.prototype, "dispose", null);
class sR extends ci {
  get container() {
    return this.graph.view.container;
  }
  get viewport() {
    return this.graph.view.viewport;
  }
  get stage() {
    return this.graph.view.stage;
  }
  init() {
    this.resize();
  }
  /**
   * Returns the current transformation matrix of the graph.
   */
  getMatrix() {
    const e = this.viewport.getAttribute("transform");
    return e !== this.viewportTransformString && (this.viewportMatrix = this.viewport.getCTM(), this.viewportTransformString = e), ai(this.viewportMatrix);
  }
  /**
   * Sets new transformation with the given `matrix`
   */
  setMatrix(e) {
    const t = ai(e), i = oh(t);
    this.viewport.setAttribute("transform", i), this.viewportMatrix = t, this.viewportTransformString = i;
  }
  resize(e, t) {
    let i = e === void 0 ? this.options.width : e, s = t === void 0 ? this.options.height : t;
    this.options.width = i, this.options.height = s, typeof i == "number" && (i = Math.round(i)), typeof s == "number" && (s = Math.round(s)), this.container.style.width = i == null ? "" : `${i}px`, this.container.style.height = s == null ? "" : `${s}px`;
    const r = this.getComputedSize();
    return this.graph.trigger("resize", Object.assign({}, r)), this;
  }
  getComputedSize() {
    let e = this.options.width, t = this.options.height;
    return lS(e) || (e = this.container.clientWidth), lS(t) || (t = this.container.clientHeight), { width: e, height: t };
  }
  getScale() {
    return ate(this.getMatrix());
  }
  scale(e, t = e, i = 0, s = 0) {
    if (e = this.clampScale(e), t = this.clampScale(t), i || s) {
      const o = this.getTranslation(), l = o.tx - i * (e - 1), a = o.ty - s * (t - 1);
      (l !== o.tx || a !== o.ty) && this.translate(l, a);
    }
    const r = this.getMatrix();
    return r.a = e, r.d = t, this.setMatrix(r), this.graph.trigger("scale", { sx: e, sy: t, ox: i, oy: s }), this;
  }
  clampScale(e) {
    const t = this.graph.options.scaling;
    return is(e, t.min || 0.01, t.max || 16);
  }
  getZoom() {
    return this.getScale().sx;
  }
  zoom(e, t) {
    t = t || {};
    let i = e, s = e;
    const r = this.getScale(), o = this.getComputedSize();
    let l = o.width / 2, a = o.height / 2;
    if (t.absolute || (i += r.sx, s += r.sy), t.scaleGrid && (i = Math.round(i / t.scaleGrid) * t.scaleGrid, s = Math.round(s / t.scaleGrid) * t.scaleGrid), t.maxScale && (i = Math.min(t.maxScale, i), s = Math.min(t.maxScale, s)), t.minScale && (i = Math.max(t.minScale, i), s = Math.max(t.minScale, s)), t.center && (l = t.center.x, a = t.center.y), i = this.clampScale(i), s = this.clampScale(s), l || a) {
      const c = this.getTranslation(), u = l - (l - c.tx) * (i / r.sx), h = a - (a - c.ty) * (s / r.sy);
      (u !== c.tx || h !== c.ty) && this.translate(u, h);
    }
    return this.scale(i, s), this;
  }
  getRotation() {
    return cte(this.getMatrix());
  }
  rotate(e, t, i) {
    if (t == null || i == null) {
      const r = It.getBBox(this.stage);
      t = r.width / 2, i = r.height / 2;
    }
    const s = this.getMatrix().translate(t, i).rotate(e).translate(-t, -i);
    return this.setMatrix(s), this;
  }
  getTranslation() {
    return ute(this.getMatrix());
  }
  translate(e, t) {
    const i = this.getMatrix();
    i.e = e || 0, i.f = t || 0, this.setMatrix(i);
    const s = this.getTranslation();
    return this.options.x = s.tx, this.options.y = s.ty, this.graph.trigger("translate", Object.assign({}, s)), this;
  }
  setOrigin(e, t) {
    return this.translate(e || 0, t || 0);
  }
  fitToContent(e, t, i, s) {
    if (typeof e == "object") {
      const b = e;
      e = b.gridWidth || 1, t = b.gridHeight || 1, i = b.padding || 0, s = b;
    } else
      e = e || 1, t = t || 1, i = i || 0, s == null && (s = {});
    const r = ja(i), o = s.border || 0, l = s.contentArea ? ye.create(s.contentArea) : this.getContentArea(s);
    o > 0 && l.inflate(o);
    const a = this.getScale(), c = this.getTranslation(), u = a.sx, h = a.sy;
    l.x *= u, l.y *= h, l.width *= u, l.height *= h;
    let d = Math.max(Math.ceil((l.width + l.x) / e), 1) * e, f = Math.max(Math.ceil((l.height + l.y) / t), 1) * t, p = 0, g = 0;
    (s.allowNewOrigin === "negative" && l.x < 0 || s.allowNewOrigin === "positive" && l.x >= 0 || s.allowNewOrigin === "any") && (p = Math.ceil(-l.x / e) * e, p += r.left, d += p), (s.allowNewOrigin === "negative" && l.y < 0 || s.allowNewOrigin === "positive" && l.y >= 0 || s.allowNewOrigin === "any") && (g = Math.ceil(-l.y / t) * t, g += r.top, f += g), d += r.right, f += r.bottom, d = Math.max(d, s.minWidth || 0), f = Math.max(f, s.minHeight || 0), d = Math.min(d, s.maxWidth || Number.MAX_SAFE_INTEGER), f = Math.min(f, s.maxHeight || Number.MAX_SAFE_INTEGER);
    const m = this.getComputedSize(), v = d !== m.width || f !== m.height;
    return (p !== c.tx || g !== c.ty) && this.translate(p, g), v && this.resize(d, f), new ye(-p / u, -g / h, d / u, f / h);
  }
  scaleContentToFit(e = {}) {
    this.scaleContentToFitImpl(e);
  }
  scaleContentToFitImpl(e = {}, t = !0) {
    let i, s;
    if (e.contentArea) {
      const v = e.contentArea;
      i = this.graph.localToGraph(v), s = z.create(v);
    } else
      i = this.getContentBBox(e), s = this.graph.graphToLocal(i);
    if (!i.width || !i.height)
      return;
    const r = ja(e.padding), o = e.minScale || 0, l = e.maxScale || Number.MAX_SAFE_INTEGER, a = e.minScaleX || o, c = e.maxScaleX || l, u = e.minScaleY || o, h = e.maxScaleY || l;
    let d;
    if (e.viewportArea)
      d = e.viewportArea;
    else {
      const v = this.getComputedSize(), O = this.getTranslation();
      d = {
        x: O.tx,
        y: O.ty,
        width: v.width,
        height: v.height
      };
    }
    d = ye.create(d).moveAndExpand({
      x: r.left,
      y: r.top,
      width: -r.left - r.right,
      height: -r.top - r.bottom
    });
    const f = this.getScale();
    let p = d.width / i.width * f.sx, g = d.height / i.height * f.sy;
    e.preserveAspectRatio !== !1 && (p = g = Math.min(p, g));
    const m = e.scaleGrid;
    if (m && (p = m * Math.floor(p / m), g = m * Math.floor(g / m)), p = is(p, a, c), g = is(g, u, h), this.scale(p, g), t) {
      const v = this.options, O = d.x - s.x * p - v.x, b = d.y - s.y * g - v.y;
      this.translate(O, b);
    }
  }
  getContentArea(e = {}) {
    return e.useCellGeometry !== !1 ? this.model.getAllCellsBBox() || new ye() : It.getBBox(this.stage);
  }
  getContentBBox(e = {}) {
    return this.graph.localToGraph(this.getContentArea(e));
  }
  getGraphArea() {
    const e = ye.fromSize(this.getComputedSize());
    return this.graph.graphToLocal(e);
  }
  zoomToRect(e, t = {}) {
    const i = ye.create(e), s = this.graph;
    t.contentArea = i, t.viewportArea == null && (t.viewportArea = {
      x: s.options.x,
      y: s.options.y,
      width: this.options.width,
      height: this.options.height
    }), this.scaleContentToFitImpl(t, !1);
    const r = i.getCenter();
    return this.centerPoint(r.x, r.y), this;
  }
  zoomToFit(e = {}) {
    return this.zoomToRect(this.getContentArea(e), e);
  }
  centerPoint(e, t) {
    const i = this.getComputedSize(), s = this.getScale(), r = this.getTranslation(), o = i.width / 2, l = i.height / 2;
    e = typeof e == "number" ? e : o, t = typeof t == "number" ? t : l, e = o - e * s.sx, t = l - t * s.sy, (r.tx !== e || r.ty !== t) && this.translate(e, t);
  }
  centerContent(e) {
    const i = this.graph.getContentArea(e).getCenter();
    this.centerPoint(i.x, i.y);
  }
  centerCell(e) {
    return this.positionCell(e, "center");
  }
  positionPoint(e, t, i) {
    const s = this.getComputedSize();
    t = br(t, Math.max(0, s.width)), t < 0 && (t = s.width + t), i = br(i, Math.max(0, s.height)), i < 0 && (i = s.height + i);
    const r = this.getTranslation(), o = this.getScale(), l = t - e.x * o.sx, a = i - e.y * o.sy;
    (r.tx !== l || r.ty !== a) && this.translate(l, a);
  }
  positionRect(e, t) {
    const i = ye.create(e);
    switch (t) {
      case "center":
        return this.positionPoint(i.getCenter(), "50%", "50%");
      case "top":
        return this.positionPoint(i.getTopCenter(), "50%", 0);
      case "top-right":
        return this.positionPoint(i.getTopRight(), "100%", 0);
      case "right":
        return this.positionPoint(i.getRightMiddle(), "100%", "50%");
      case "bottom-right":
        return this.positionPoint(i.getBottomRight(), "100%", "100%");
      case "bottom":
        return this.positionPoint(i.getBottomCenter(), "50%", "100%");
      case "bottom-left":
        return this.positionPoint(i.getBottomLeft(), 0, "100%");
      case "left":
        return this.positionPoint(i.getLeftMiddle(), 0, "50%");
      case "top-left":
        return this.positionPoint(i.getTopLeft(), 0, 0);
      default:
        return this;
    }
  }
  positionCell(e, t) {
    const i = e.getBBox();
    return this.positionRect(i, t);
  }
  positionContent(e, t) {
    const i = this.graph.getContentArea(t);
    return this.positionRect(i, e);
  }
}
var fre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class ww extends ci {
  get elem() {
    return this.view.background;
  }
  init() {
    this.startListening(), this.options.background && this.draw(this.options.background);
  }
  startListening() {
    this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this);
  }
  stopListening() {
    this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this);
  }
  updateBackgroundImage(e = {}) {
    let t = e.size || "auto auto", i = e.position || "center";
    const s = this.graph.transform.getScale(), r = this.graph.translate();
    if (typeof i == "object") {
      const o = r.tx + s.sx * (i.x || 0), l = r.ty + s.sy * (i.y || 0);
      i = `${o}px ${l}px`;
    }
    typeof t == "object" && (t = ye.fromSize(t).scale(s.sx, s.sy), t = `${t.width}px ${t.height}px`), this.elem.style.backgroundSize = t, this.elem.style.backgroundPosition = i;
  }
  drawBackgroundImage(e, t = {}) {
    if (!(e instanceof HTMLImageElement)) {
      this.elem.style.backgroundImage = "";
      return;
    }
    const i = this.optionsCache;
    if (i && i.image !== t.image)
      return;
    let s;
    const r = t.opacity, o = t.size;
    let l = t.repeat || "no-repeat";
    const a = Dd.registry.get(l);
    if (typeof a == "function") {
      const u = t.quality || 1;
      e.width *= u, e.height *= u;
      const h = a(e, t);
      if (!(h instanceof HTMLCanvasElement))
        throw new Error("Background pattern must return an HTML Canvas instance");
      s = h.toDataURL("image/png"), t.repeat && l !== t.repeat ? l = t.repeat : l = "repeat", typeof o == "object" ? (o.width *= h.width / e.width, o.height *= h.height / e.height) : o === void 0 && (t.size = {
        width: h.width / u,
        height: h.height / u
      });
    } else
      s = e.src, o === void 0 && (t.size = {
        width: e.width,
        height: e.height
      });
    i != null && typeof t.size == "object" && t.image === i.image && t.repeat === i.repeat && t.quality === i.quality && (i.size = xd(t.size));
    const c = this.elem.style;
    c.backgroundImage = `url(${s})`, c.backgroundRepeat = l, c.opacity = r == null || r >= 1 ? "" : `${r}`, this.updateBackgroundImage(t);
  }
  updateBackgroundColor(e) {
    this.elem.style.backgroundColor = e || "";
  }
  updateBackgroundOptions(e) {
    this.graph.options.background = e;
  }
  update() {
    this.optionsCache && this.updateBackgroundImage(this.optionsCache);
  }
  draw(e) {
    const t = e || {};
    if (this.updateBackgroundOptions(e), this.updateBackgroundColor(t.color), t.image) {
      this.optionsCache = xd(t);
      const i = document.createElement("img");
      i.onload = () => this.drawBackgroundImage(i, e), i.setAttribute("crossorigin", "anonymous"), i.src = t.image;
    } else
      this.drawBackgroundImage(null), this.optionsCache = null;
  }
  clear() {
    this.draw();
  }
  dispose() {
    this.clear(), this.stopListening();
  }
}
fre([
  ci.dispose()
], ww.prototype, "dispose", null);
var pre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class xw extends ci {
  get widgetOptions() {
    return this.options.panning;
  }
  get pannable() {
    return this.widgetOptions && this.widgetOptions.enabled === !0;
  }
  init() {
    this.onRightMouseDown = this.onRightMouseDown.bind(this), this.onSpaceKeyDown = this.onSpaceKeyDown.bind(this), this.onSpaceKeyUp = this.onSpaceKeyUp.bind(this), this.startListening(), this.updateClassName();
  }
  startListening() {
    this.graph.on("blank:mousedown", this.onMouseDown, this), this.graph.on("node:unhandled:mousedown", this.onMouseDown, this), this.graph.on("edge:unhandled:mousedown", this.onMouseDown, this), mi.on(this.graph.container, "mousedown", this.onRightMouseDown), mi.on(document.body, {
      keydown: this.onSpaceKeyDown,
      keyup: this.onSpaceKeyUp
    }), this.mousewheelHandle = new aM(this.graph.container, this.onMouseWheel.bind(this), this.allowMouseWheel.bind(this)), this.mousewheelHandle.enable();
  }
  stopListening() {
    this.graph.off("blank:mousedown", this.onMouseDown, this), this.graph.off("node:unhandled:mousedown", this.onMouseDown, this), this.graph.off("edge:unhandled:mousedown", this.onMouseDown, this), mi.off(this.graph.container, "mousedown", this.onRightMouseDown), mi.off(document.body, {
      keydown: this.onSpaceKeyDown,
      keyup: this.onSpaceKeyUp
    }), this.mousewheelHandle && this.mousewheelHandle.disable();
  }
  allowPanning(e, t) {
    return e.spaceKey = this.isSpaceKeyPressed, this.pannable && Rl.isMatch(e, this.widgetOptions.modifiers, t);
  }
  startPanning(e) {
    const t = this.view.normalizeEvent(e);
    this.clientX = t.clientX, this.clientY = t.clientY, this.panning = !0, this.updateClassName(), mi.on(document.body, {
      "mousemove.panning touchmove.panning": this.pan.bind(this),
      "mouseup.panning touchend.panning": this.stopPanning.bind(this),
      "mouseleave.panning": this.stopPanning.bind(this)
    }), mi.on(window, "mouseup.panning", this.stopPanning.bind(this));
  }
  pan(e) {
    const t = this.view.normalizeEvent(e), i = t.clientX - this.clientX, s = t.clientY - this.clientY;
    this.clientX = t.clientX, this.clientY = t.clientY, this.graph.translateBy(i, s);
  }
  // eslint-disable-next-line
  stopPanning(e) {
    this.panning = !1, this.updateClassName(), mi.off(document.body, ".panning"), mi.off(window, ".panning");
  }
  updateClassName() {
    const e = this.view.container, t = this.view.prefixClassName("graph-panning"), i = this.view.prefixClassName("graph-pannable");
    this.pannable ? this.panning ? (Ye(e, t), Rn(e, i)) : (Rn(e, t), Ye(e, i)) : (Rn(e, t), Rn(e, i));
  }
  onMouseDown({ e }) {
    if (!this.allowBlankMouseDown(e))
      return;
    const t = this.graph.getPlugin("selection"), i = t && t.allowRubberband(e, !0);
    (this.allowPanning(e, !0) || this.allowPanning(e) && !i) && this.startPanning(e);
  }
  onRightMouseDown(e) {
    const t = this.widgetOptions.eventTypes;
    t != null && t.includes("rightMouseDown") && e.button === 2 && this.allowPanning(e, !0) && this.startPanning(e);
  }
  onMouseWheel(e, t, i) {
    this.graph.translateBy(-t, -i);
  }
  onSpaceKeyDown(e) {
    e.which === 32 && (this.isSpaceKeyPressed = !0);
  }
  onSpaceKeyUp(e) {
    e.which === 32 && (this.isSpaceKeyPressed = !1);
  }
  allowBlankMouseDown(e) {
    const t = this.widgetOptions.eventTypes;
    return (t == null ? void 0 : t.includes("leftMouseDown")) && e.button === 0 || (t == null ? void 0 : t.includes("mouseWheelDown")) && e.button === 1;
  }
  allowMouseWheel(e) {
    var t;
    return this.pannable && !e.ctrlKey && ((t = this.widgetOptions.eventTypes) === null || t === void 0 ? void 0 : t.includes("mouseWheel"));
  }
  autoPanning(e, t) {
    const s = this.graph.getGraphArea();
    let r = 0, o = 0;
    e <= s.left + 10 && (r = -10), t <= s.top + 10 && (o = -10), e >= s.right - 10 && (r = 10), t >= s.bottom - 10 && (o = 10), (r !== 0 || o !== 0) && this.graph.translateBy(-r, -o);
  }
  enablePanning() {
    this.pannable || (this.widgetOptions.enabled = !0, this.updateClassName());
  }
  disablePanning() {
    this.pannable && (this.widgetOptions.enabled = !1, this.updateClassName());
  }
  dispose() {
    this.stopListening();
  }
}
pre([
  ci.dispose()
], xw.prototype, "dispose", null);
var gre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Sw extends ci {
  constructor() {
    super(...arguments), this.cumulatedFactor = 1;
  }
  get widgetOptions() {
    return this.options.mousewheel;
  }
  init() {
    this.container = this.graph.container, this.target = this.widgetOptions.global ? document : this.container, this.mousewheelHandle = new aM(this.target, this.onMouseWheel.bind(this), this.allowMouseWheel.bind(this)), this.widgetOptions.enabled && this.enable(!0);
  }
  get disabled() {
    return this.widgetOptions.enabled !== !0;
  }
  enable(e) {
    (this.disabled || e) && (this.widgetOptions.enabled = !0, this.mousewheelHandle.enable());
  }
  disable() {
    this.disabled || (this.widgetOptions.enabled = !1, this.mousewheelHandle.disable());
  }
  allowMouseWheel(e) {
    const t = this.widgetOptions.guard;
    return (t == null || t(e)) && Rl.isMatch(e, this.widgetOptions.modifiers);
  }
  onMouseWheel(e) {
    const t = this.widgetOptions.guard;
    if ((t == null || t(e)) && Rl.isMatch(e, this.widgetOptions.modifiers)) {
      const i = this.widgetOptions.factor || 1.2;
      this.currentScale == null && (this.startPos = { x: e.clientX, y: e.clientY }, this.currentScale = this.graph.transform.getScale().sx), e.deltaY < 0 ? this.currentScale < 0.15 ? this.cumulatedFactor = (this.currentScale + 0.01) / this.currentScale : (this.cumulatedFactor = Math.round(this.currentScale * i * 20) / 20 / this.currentScale, this.cumulatedFactor === 1 && (this.cumulatedFactor = 1.05)) : this.currentScale <= 0.15 ? this.cumulatedFactor = (this.currentScale - 0.01) / this.currentScale : (this.cumulatedFactor = Math.round(this.currentScale * (1 / i) * 20) / 20 / this.currentScale, this.cumulatedFactor === 1 && (this.cumulatedFactor = 0.95)), this.cumulatedFactor = Math.max(0.01, Math.min(this.currentScale * this.cumulatedFactor, 160) / this.currentScale);
      const r = this.currentScale;
      let o = this.graph.transform.clampScale(r * this.cumulatedFactor);
      const l = this.widgetOptions.minScale || Number.MIN_SAFE_INTEGER, a = this.widgetOptions.maxScale || Number.MAX_SAFE_INTEGER;
      if (o = is(o, l, a), o !== r)
        if (this.widgetOptions.zoomAtMousePosition) {
          const u = !!this.graph.getPlugin("scroller") ? this.graph.clientToLocal(this.startPos) : this.graph.clientToGraph(this.startPos);
          this.graph.zoom(o, {
            absolute: !0,
            center: u.clone()
          });
        } else
          this.graph.zoom(o, { absolute: !0 });
      this.currentScale = null, this.cumulatedFactor = 1;
    }
  }
  dispose() {
    this.disable();
  }
}
gre([
  Qo.dispose()
], Sw.prototype, "dispose", null);
var mre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class rR extends ci {
  init() {
    this.resetRenderArea = bz(this.resetRenderArea, 200, {
      leading: !0
    }), this.resetRenderArea(), this.startListening();
  }
  startListening() {
    this.graph.on("translate", this.resetRenderArea, this), this.graph.on("scale", this.resetRenderArea, this), this.graph.on("resize", this.resetRenderArea, this);
  }
  stopListening() {
    this.graph.off("translate", this.resetRenderArea, this), this.graph.off("scale", this.resetRenderArea, this), this.graph.off("resize", this.resetRenderArea, this);
  }
  enableVirtualRender() {
    this.options.virtual = !0, this.resetRenderArea();
  }
  disableVirtualRender() {
    this.options.virtual = !1, this.graph.renderer.setRenderArea(void 0);
  }
  resetRenderArea() {
    if (this.options.virtual) {
      const e = this.graph.getGraphArea();
      this.graph.renderer.setRenderArea(e);
    }
  }
  dispose() {
    this.stopListening();
  }
}
mre([
  ci.dispose()
], rR.prototype, "dispose", null);
class vre {
  constructor() {
    this.isFlushing = !1, this.isFlushPending = !1, this.scheduleId = 0, this.queue = [], this.frameInterval = 33, this.initialTime = Date.now();
  }
  queueJob(e) {
    if (e.priority & Po.PRIOR)
      e.cb();
    else {
      const t = this.findInsertionIndex(e);
      t >= 0 && this.queue.splice(t, 0, e);
    }
  }
  queueFlush() {
    !this.isFlushing && !this.isFlushPending && (this.isFlushPending = !0, this.scheduleJob());
  }
  queueFlushSync() {
    !this.isFlushing && !this.isFlushPending && (this.isFlushPending = !0, this.flushJobsSync());
  }
  clearJobs() {
    this.queue.length = 0, this.isFlushing = !1, this.isFlushPending = !1, this.cancelScheduleJob();
  }
  flushJobs() {
    this.isFlushPending = !1, this.isFlushing = !0;
    const e = this.getCurrentTime();
    let t;
    for (; (t = this.queue.shift()) && (t.cb(), !(this.getCurrentTime() - e >= this.frameInterval)); )
      ;
    this.isFlushing = !1, this.queue.length && this.queueFlush();
  }
  flushJobsSync() {
    this.isFlushPending = !1, this.isFlushing = !0;
    let e;
    for (; e = this.queue.shift(); )
      try {
        e.cb();
      } catch (t) {
        console.log(t);
      }
    this.isFlushing = !1;
  }
  findInsertionIndex(e) {
    let t = 0, i = this.queue.length, s = i - 1;
    const r = e.priority;
    for (; t <= s; ) {
      const o = (s - t >> 1) + t;
      r <= this.queue[o].priority ? t = o + 1 : (i = o, s = o - 1);
    }
    return i;
  }
  scheduleJob() {
    "requestIdleCallback" in window ? (this.scheduleId && this.cancelScheduleJob(), this.scheduleId = window.requestIdleCallback(this.flushJobs.bind(this), {
      timeout: 100
    })) : (this.scheduleId && this.cancelScheduleJob(), this.scheduleId = window.setTimeout(this.flushJobs.bind(this)));
  }
  cancelScheduleJob() {
    "cancelIdleCallback" in window ? (this.scheduleId && window.cancelIdleCallback(this.scheduleId), this.scheduleId = 0) : (this.scheduleId && clearTimeout(this.scheduleId), this.scheduleId = 0);
  }
  getCurrentTime() {
    return typeof performance == "object" && typeof performance.now == "function" ? performance.now() : Date.now() - this.initialTime;
  }
}
var Po;
(function(n) {
  n[n.Update = 2] = "Update", n[n.RenderEdge = 4] = "RenderEdge", n[n.RenderNode = 8] = "RenderNode", n[n.PRIOR = 1048576] = "PRIOR";
})(Po || (Po = {}));
var bre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Fn extends Qo {
  get model() {
    return this.graph.model;
  }
  get container() {
    return this.graph.view.stage;
  }
  constructor(e) {
    super(), this.views = {}, this.willRemoveViews = {}, this.queue = new vre(), this.graph = e, this.init();
  }
  init() {
    this.startListening(), this.renderViews(this.model.getCells());
  }
  startListening() {
    this.model.on("reseted", this.onModelReseted, this), this.model.on("cell:added", this.onCellAdded, this), this.model.on("cell:removed", this.onCellRemoved, this), this.model.on("cell:change:zIndex", this.onCellZIndexChanged, this), this.model.on("cell:change:visible", this.onCellVisibleChanged, this);
  }
  stopListening() {
    this.model.off("reseted", this.onModelReseted, this), this.model.off("cell:added", this.onCellAdded, this), this.model.off("cell:removed", this.onCellRemoved, this), this.model.off("cell:change:zIndex", this.onCellZIndexChanged, this), this.model.off("cell:change:visible", this.onCellVisibleChanged, this);
  }
  onModelReseted({ options: e }) {
    this.queue.clearJobs(), this.removeZPivots(), this.resetViews();
    const t = this.model.getCells();
    this.renderViews(t, Object.assign(Object.assign({}, e), { queue: t.map((i) => i.id) }));
  }
  onCellAdded({ cell: e, options: t }) {
    this.renderViews([e], t);
  }
  onCellRemoved({ cell: e }) {
    this.removeViews([e]);
  }
  onCellZIndexChanged({ cell: e, options: t }) {
    const i = this.views[e.id];
    i && this.requestViewUpdate(i.view, Fn.FLAG_INSERT, t, Po.Update, !0);
  }
  onCellVisibleChanged({ cell: e, current: t }) {
    this.toggleVisible(e, !!t);
  }
  requestViewUpdate(e, t, i = {}, s = Po.Update, r = !0) {
    const o = e.cell.id, l = this.views[o];
    if (!l)
      return;
    l.flag = t, l.options = i, (e.hasAction(t, ["translate", "resize", "rotate"]) || i.async === !1) && (s = Po.PRIOR, r = !1), this.queue.queueJob({
      id: o,
      priority: s,
      cb: () => {
        this.renderViewInArea(e, t, i);
        const u = i.queue;
        if (u) {
          const h = u.indexOf(e.cell.id);
          h >= 0 && u.splice(h, 1), u.length === 0 && this.graph.trigger("render:done");
        }
      }
    }), this.getEffectedEdges(e).forEach((u) => {
      this.requestViewUpdate(u.view, u.flag, i, s, !1);
    }), r && this.flush();
  }
  setRenderArea(e) {
    this.renderArea = e, this.flushWaitingViews();
  }
  isViewMounted(e) {
    if (e == null)
      return !1;
    const t = this.views[e.cell.id];
    return t ? t.state === Fn.ViewState.MOUNTED : !1;
  }
  renderViews(e, t = {}) {
    e.sort((i, s) => i.isNode() && s.isEdge() ? -1 : 0), e.forEach((i) => {
      const s = i.id, r = this.views;
      let o = 0, l = r[s];
      if (l)
        o = Fn.FLAG_INSERT;
      else {
        const a = this.createCellView(i);
        a && (a.graph = this.graph, o = Fn.FLAG_INSERT | a.getBootstrapFlag(), l = {
          view: a,
          flag: o,
          options: t,
          state: Fn.ViewState.CREATED
        }, this.views[s] = l);
      }
      l && this.requestViewUpdate(l.view, o, t, this.getRenderPriority(l.view), !1);
    }), this.flush();
  }
  renderViewInArea(e, t, i = {}) {
    const s = e.cell, r = s.id, o = this.views[r];
    if (!o)
      return;
    let l = 0;
    this.isUpdatable(e) ? (l = this.updateView(e, t, i), o.flag = l) : o.state === Fn.ViewState.MOUNTED ? (l = this.updateView(e, t, i), o.flag = l) : o.state = Fn.ViewState.WAITING, l && s.isEdge() && !(l & e.getFlag(["source", "target"])) && this.queue.queueJob({
      id: r,
      priority: Po.RenderEdge,
      cb: () => {
        this.updateView(e, t, i);
      }
    });
  }
  removeViews(e) {
    e.forEach((t) => {
      const i = t.id, s = this.views[i];
      s && (this.willRemoveViews[i] = s, delete this.views[i], this.queue.queueJob({
        id: i,
        priority: this.getRenderPriority(s.view),
        cb: () => {
          this.removeView(s.view);
        }
      }));
    }), this.flush();
  }
  flush() {
    this.graph.options.async ? this.queue.queueFlush() : this.queue.queueFlushSync();
  }
  flushWaitingViews() {
    Object.values(this.views).forEach((e) => {
      if (e && e.state === Fn.ViewState.WAITING) {
        const { view: t, flag: i, options: s } = e;
        this.requestViewUpdate(t, i, s, this.getRenderPriority(t), !1);
      }
    }), this.flush();
  }
  updateView(e, t, i = {}) {
    if (e == null)
      return 0;
    if (En.isCellView(e)) {
      if (t & Fn.FLAG_REMOVE)
        return this.removeView(e.cell), 0;
      t & Fn.FLAG_INSERT && (this.insertView(e), t ^= Fn.FLAG_INSERT);
    }
    return t ? e.confirmUpdate(t, i) : 0;
  }
  insertView(e) {
    const t = this.views[e.cell.id];
    if (t) {
      const i = e.cell.getZIndex(), s = this.addZPivot(i);
      this.container.insertBefore(e.container, s), e.cell.isVisible() || this.toggleVisible(e.cell, !1), t.state = Fn.ViewState.MOUNTED, this.graph.trigger("view:mounted", { view: e });
    }
  }
  resetViews() {
    this.willRemoveViews = Object.assign(Object.assign({}, this.views), this.willRemoveViews), Object.values(this.willRemoveViews).forEach((e) => {
      e && this.removeView(e.view);
    }), this.views = {}, this.willRemoveViews = {};
  }
  removeView(e) {
    const t = e.cell, i = this.willRemoveViews[t.id];
    i && e && (i.view.remove(), delete this.willRemoveViews[t.id], this.graph.trigger("view:unmounted", { view: e }));
  }
  toggleVisible(e, t) {
    const i = this.model.getConnectedEdges(e);
    for (let r = 0, o = i.length; r < o; r += 1) {
      const l = i[r];
      if (t) {
        const a = l.getSourceCell(), c = l.getTargetCell();
        if (a && !a.isVisible() || c && !c.isVisible())
          continue;
        this.toggleVisible(l, !0);
      } else
        this.toggleVisible(l, !1);
    }
    const s = this.views[e.id];
    s && Zn(s.view.container, {
      display: t ? "unset" : "none"
    });
  }
  addZPivot(e = 0) {
    this.zPivots == null && (this.zPivots = {});
    const t = this.zPivots;
    let i = t[e];
    if (i)
      return i;
    i = t[e] = document.createComment(`z-index:${e + 1}`);
    let s = -1 / 0;
    for (const o in t) {
      const l = +o;
      l < e && l > s && (s = l, e - 1);
    }
    const r = this.container;
    if (s !== -1 / 0) {
      const o = t[s];
      r.insertBefore(i, o.nextSibling);
    } else
      r.insertBefore(i, r.firstChild);
    return i;
  }
  removeZPivots() {
    this.zPivots && Object.values(this.zPivots).forEach((e) => {
      e && e.parentNode && e.parentNode.removeChild(e);
    }), this.zPivots = {};
  }
  createCellView(e) {
    const t = { graph: this.graph }, i = this.graph.options.createCellView;
    if (i) {
      const r = Ze(i, this.graph, e);
      if (r)
        return new r(e, t);
      if (r === null)
        return null;
    }
    const s = e.view;
    if (s != null && typeof s == "string") {
      const r = En.registry.get(s);
      return r ? new r(e, t) : En.registry.onNotFound(s);
    }
    return e.isNode() ? new As(e, t) : e.isEdge() ? new jo(e, t) : null;
  }
  getEffectedEdges(e) {
    const t = [], i = e.cell, s = this.model.getConnectedEdges(i);
    for (let r = 0, o = s.length; r < o; r += 1) {
      const l = s[r], a = this.views[l.id];
      if (!a)
        continue;
      const c = a.view;
      if (!this.isViewMounted(c))
        continue;
      const u = ["update"];
      l.getTargetCell() === i && u.push("target"), l.getSourceCell() === i && u.push("source"), t.push({
        id: l.id,
        view: c,
        flag: c.getFlag(u)
      });
    }
    return t;
  }
  isUpdatable(e) {
    if (e.isNodeView())
      return this.renderArea ? this.renderArea.isIntersectWithRect(e.cell.getBBox()) : !0;
    if (e.isEdgeView()) {
      const t = e.cell, i = t.getSourceCell(), s = t.getTargetCell();
      if (this.renderArea && i && s)
        return this.renderArea.isIntersectWithRect(i.getBBox()) || this.renderArea.isIntersectWithRect(s.getBBox());
    }
    return !0;
  }
  getRenderPriority(e) {
    return e.cell.isNode() ? Po.RenderNode : Po.RenderEdge;
  }
  dispose() {
    this.stopListening(), Object.keys(this.views).forEach((e) => {
      this.views[e].view.dispose();
    }), this.views = {};
  }
}
bre([
  Qo.dispose()
], Fn.prototype, "dispose", null);
(function(n) {
  n.FLAG_INSERT = 1 << 30, n.FLAG_REMOVE = 1 << 29, n.FLAG_RENDER = (1 << 26) - 1;
})(Fn || (Fn = {}));
(function(n) {
  (function(e) {
    e[e.CREATED = 0] = "CREATED", e[e.MOUNTED = 1] = "MOUNTED", e[e.WAITING = 2] = "WAITING";
  })(n.ViewState || (n.ViewState = {}));
})(Fn || (Fn = {}));
var yre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
let Cw = class extends ci {
  constructor() {
    super(...arguments), this.schedule = new Fn(this.graph);
  }
  requestViewUpdate(e, t, i = {}) {
    this.schedule.requestViewUpdate(e, t, i);
  }
  isViewMounted(e) {
    return this.schedule.isViewMounted(e);
  }
  setRenderArea(e) {
    this.schedule.setRenderArea(e);
  }
  findViewByElem(e) {
    if (e == null)
      return null;
    const t = this.options.container, i = typeof e == "string" ? t.querySelector(e) : e instanceof Element ? e : e[0];
    if (i) {
      const s = this.graph.view.findAttr("data-cell-id", i);
      if (s) {
        const r = this.schedule.views;
        if (r[s])
          return r[s].view;
      }
    }
    return null;
  }
  findViewByCell(e) {
    if (e == null)
      return null;
    const t = gt.isCell(e) ? e.id : e, i = this.schedule.views;
    return i[t] ? i[t].view : null;
  }
  findViewsFromPoint(e) {
    const t = { x: e.x, y: e.y };
    return this.model.getCells().map((i) => this.findViewByCell(i)).filter((i) => i != null ? It.getBBox(i.container, {
      target: this.view.stage
    }).containsPoint(t) : !1);
  }
  findEdgeViewsFromPoint(e, t = 5) {
    return this.model.getEdges().map((i) => this.findViewByCell(i)).filter((i) => {
      if (i != null) {
        const s = i.getClosestPoint(e);
        if (s)
          return s.distance(e) <= t;
      }
      return !1;
    });
  }
  findViewsInArea(e, t = {}) {
    const i = ye.create(e);
    return this.model.getCells().map((s) => this.findViewByCell(s)).filter((s) => {
      if (s) {
        if (t.nodeOnly && !s.isNodeView())
          return !1;
        const r = It.getBBox(s.container, {
          target: this.view.stage
        });
        return r.width === 0 ? r.inflate(1, 0) : r.height === 0 && r.inflate(0, 1), t.strict ? i.containsRect(r) : i.isIntersectWithRect(r);
      }
      return !1;
    });
  }
  dispose() {
    this.schedule.dispose();
  }
};
yre([
  ci.dispose()
], Cw.prototype, "dispose", null);
var vk = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class oR extends ci {
  get cid() {
    return this.graph.view.cid;
  }
  get svg() {
    return this.view.svg;
  }
  get defs() {
    return this.view.defs;
  }
  isDefined(e) {
    return this.svg.getElementById(e) != null;
  }
  filter(e) {
    let t = e.id;
    const i = e.name;
    if (t || (t = `filter-${i}-${this.cid}-${xv(JSON.stringify(e))}`), !this.isDefined(t)) {
      const s = wu.registry.get(i);
      if (s == null)
        return wu.registry.onNotFound(i);
      const r = s(e.args || {}), o = Object.assign(Object.assign({ x: -1, y: -1, width: 3, height: 3, filterUnits: "objectBoundingBox" }, e.attrs), { id: t });
      Je.create(Yt.sanitize(r), o).appendTo(this.defs);
    }
    return t;
  }
  gradient(e) {
    let t = e.id;
    const i = e.type;
    if (t || (t = `gradient-${i}-${this.cid}-${xv(JSON.stringify(e))}`), !this.isDefined(t)) {
      const r = e.stops.map((a) => {
        const c = a.opacity != null && Number.isFinite(a.opacity) ? a.opacity : 1;
        return `<stop offset="${a.offset}" stop-color="${a.color}" stop-opacity="${c}"/>`;
      }), o = `<${i}>${r.join("")}</${i}>`, l = Object.assign({ id: t }, e.attrs);
      Je.create(o, l).appendTo(this.defs);
    }
    return t;
  }
  marker(e) {
    const { id: t, refX: i, refY: s, markerUnits: r, markerOrient: o, tagName: l, children: a } = e, c = vk(e, ["id", "refX", "refY", "markerUnits", "markerOrient", "tagName", "children"]);
    let u = t;
    if (u || (u = `marker-${this.cid}-${xv(JSON.stringify(e))}`), !this.isDefined(u)) {
      l !== "path" && delete c.d;
      const h = Je.create("marker", {
        refX: i,
        refY: s,
        id: u,
        overflow: "visible",
        orient: o ?? "auto",
        markerUnits: r || "userSpaceOnUse"
      }, a ? a.map((d) => {
        var { tagName: f } = d, p = vk(d, ["tagName"]);
        return Je.create(`${f}` || "path", _d(Object.assign(Object.assign({}, c), p)));
      }) : [Je.create(l || "path", _d(c))]);
      this.defs.appendChild(h.node);
    }
    return u;
  }
  remove(e) {
    const t = this.svg.getElementById(e);
    t && t.parentNode && t.parentNode.removeChild(t);
  }
}
class lR extends ci {
  getClientMatrix() {
    return ai(this.view.stage.getScreenCTM());
  }
  /**
   * Returns coordinates of the graph viewport, relative to the window.
   */
  getClientOffset() {
    const e = this.view.svg.getBoundingClientRect();
    return new z(e.left, e.top);
  }
  /**
   * Returns coordinates of the graph viewport, relative to the document.
   */
  getPageOffset() {
    return this.getClientOffset().translate(window.scrollX, window.scrollY);
  }
  snapToGrid(e, t) {
    return (typeof e == "number" ? this.clientToLocalPoint(e, t) : this.clientToLocalPoint(e.x, e.y)).snapToGrid(this.graph.getGridSize());
  }
  localToGraphPoint(e, t) {
    const i = z.create(e, t);
    return It.transformPoint(i, this.graph.matrix());
  }
  localToClientPoint(e, t) {
    const i = z.create(e, t);
    return It.transformPoint(i, this.getClientMatrix());
  }
  localToPagePoint(e, t) {
    return (typeof e == "number" ? this.localToGraphPoint(e, t) : this.localToGraphPoint(e)).translate(this.getPageOffset());
  }
  localToGraphRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return It.transformRectangle(r, this.graph.matrix());
  }
  localToClientRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return It.transformRectangle(r, this.getClientMatrix());
  }
  localToPageRect(e, t, i, s) {
    return (typeof e == "number" ? this.localToGraphRect(e, t, i, s) : this.localToGraphRect(e)).translate(this.getPageOffset());
  }
  graphToLocalPoint(e, t) {
    const i = z.create(e, t);
    return It.transformPoint(i, this.graph.matrix().inverse());
  }
  clientToLocalPoint(e, t) {
    const i = z.create(e, t);
    return It.transformPoint(i, this.getClientMatrix().inverse());
  }
  clientToGraphPoint(e, t) {
    const i = z.create(e, t);
    return It.transformPoint(i, this.graph.matrix().multiply(this.getClientMatrix().inverse()));
  }
  pageToLocalPoint(e, t) {
    const s = z.create(e, t).diff(this.getPageOffset());
    return this.graphToLocalPoint(s);
  }
  graphToLocalRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return It.transformRectangle(r, this.graph.matrix().inverse());
  }
  clientToLocalRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return It.transformRectangle(r, this.getClientMatrix().inverse());
  }
  clientToGraphRect(e, t, i, s) {
    const r = ye.create(e, t, i, s);
    return It.transformRectangle(r, this.graph.matrix().multiply(this.getClientMatrix().inverse()));
  }
  pageToLocalRect(e, t, i, s) {
    const r = ye.create(e, t, i, s), o = this.getPageOffset();
    return r.x -= o.x, r.y -= o.y, this.graphToLocalRect(r);
  }
}
var Ore = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class sm extends ci {
  constructor() {
    super(...arguments), this.highlights = {};
  }
  init() {
    this.startListening();
  }
  startListening() {
    this.graph.on("cell:highlight", this.onCellHighlight, this), this.graph.on("cell:unhighlight", this.onCellUnhighlight, this);
  }
  stopListening() {
    this.graph.off("cell:highlight", this.onCellHighlight, this), this.graph.off("cell:unhighlight", this.onCellUnhighlight, this);
  }
  onCellHighlight({ view: e, magnet: t, options: i = {} }) {
    const s = this.resolveHighlighter(i);
    if (!s)
      return;
    const r = this.getHighlighterId(t, s);
    if (!this.highlights[r]) {
      const o = s.highlighter;
      o.highlight(e, t, Object.assign({}, s.args)), this.highlights[r] = {
        cellView: e,
        magnet: t,
        highlighter: o,
        args: s.args
      };
    }
  }
  onCellUnhighlight({ magnet: e, options: t = {} }) {
    const i = this.resolveHighlighter(t);
    if (!i)
      return;
    const s = this.getHighlighterId(e, i);
    this.unhighlight(s);
  }
  resolveHighlighter(e) {
    const t = this.options;
    let i = e.highlighter;
    if (i == null) {
      const l = e.type;
      i = l && t.highlighting[l] || t.highlighting.default;
    }
    if (i == null)
      return null;
    const s = typeof i == "string" ? {
      name: i
    } : i, r = s.name, o = Ro.registry.get(r);
    return o == null ? Ro.registry.onNotFound(r) : (Ro.check(r, o), {
      name: r,
      highlighter: o,
      args: s.args || {}
    });
  }
  getHighlighterId(e, t) {
    return uw(e), t.name + e.id + JSON.stringify(t.args);
  }
  unhighlight(e) {
    const t = this.highlights[e];
    t && (t.highlighter.unhighlight(t.cellView, t.magnet, t.args), delete this.highlights[e]);
  }
  dispose() {
    Object.keys(this.highlights).forEach((e) => this.unhighlight(e)), this.stopListening();
  }
}
Ore([
  sm.dispose()
], sm.prototype, "dispose", null);
var wre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class aR extends ci {
  getScroller() {
    const e = this.graph.getPlugin("scroller");
    return e && e.options.enabled ? e : null;
  }
  getContainer() {
    const e = this.getScroller();
    return e ? e.container.parentElement : this.graph.container.parentElement;
  }
  getSensorTarget() {
    const e = this.options.autoResize;
    if (e)
      return typeof e == "boolean" ? this.getContainer() : e;
  }
  init() {
    if (this.options.autoResize) {
      const t = this.getSensorTarget();
      t && Yg.bind(t, () => {
        const i = t.offsetWidth, s = t.offsetHeight;
        this.resize(i, s);
      });
    }
  }
  resize(e, t) {
    const i = this.getScroller();
    i ? i.resize(e, t) : this.graph.transform.resize(e, t);
  }
  dispose() {
    Yg.clear(this.graph.container);
  }
}
wre([
  ci.dispose()
], aR.prototype, "dispose", null);
var xre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Pe extends gn {
  get container() {
    return this.options.container;
  }
  get [Symbol.toStringTag]() {
    return Pe.toStringTag;
  }
  constructor(e) {
    super(), this.installedPlugins = /* @__PURE__ */ new Set(), this.options = zd.get(e), this.css = new Iy(this), this.view = new fo(this), this.defs = new oR(this), this.coord = new lR(this), this.transform = new sR(this), this.highlight = new sm(this), this.grid = new Ow(this), this.background = new ww(this), this.options.model ? this.model = this.options.model : (this.model = new ls(), this.model.graph = this), this.renderer = new Cw(this), this.panning = new xw(this), this.mousewheel = new Sw(this), this.virtualRender = new rR(this), this.size = new aR(this);
  }
  // #region model
  isNode(e) {
    return e.isNode();
  }
  isEdge(e) {
    return e.isEdge();
  }
  resetCells(e, t = {}) {
    return this.model.resetCells(e, t), this;
  }
  clearCells(e = {}) {
    return this.model.clear(e), this;
  }
  toJSON(e = {}) {
    return this.model.toJSON(e);
  }
  parseJSON(e) {
    return this.model.parseJSON(e);
  }
  fromJSON(e, t = {}) {
    return this.model.fromJSON(e, t), this;
  }
  getCellById(e) {
    return this.model.getCell(e);
  }
  addNode(e, t = {}) {
    return this.model.addNode(e, t);
  }
  addNodes(e, t = {}) {
    return this.addCell(e.map((i) => $n.isNode(i) ? i : this.createNode(i)), t);
  }
  createNode(e) {
    return this.model.createNode(e);
  }
  removeNode(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  addEdge(e, t = {}) {
    return this.model.addEdge(e, t);
  }
  addEdges(e, t = {}) {
    return this.addCell(e.map((i) => xn.isEdge(i) ? i : this.createEdge(i)), t);
  }
  removeEdge(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  createEdge(e) {
    return this.model.createEdge(e);
  }
  addCell(e, t = {}) {
    return this.model.addCell(e, t), this;
  }
  removeCell(e, t = {}) {
    return this.model.removeCell(e, t);
  }
  removeCells(e, t = {}) {
    return this.model.removeCells(e, t);
  }
  removeConnectedEdges(e, t = {}) {
    return this.model.removeConnectedEdges(e, t);
  }
  disconnectConnectedEdges(e, t = {}) {
    return this.model.disconnectConnectedEdges(e, t), this;
  }
  hasCell(e) {
    return this.model.has(e);
  }
  getCells() {
    return this.model.getCells();
  }
  getCellCount() {
    return this.model.total();
  }
  /**
   * Returns all the nodes in the graph.
   */
  getNodes() {
    return this.model.getNodes();
  }
  /**
   * Returns all the edges in the graph.
   */
  getEdges() {
    return this.model.getEdges();
  }
  /**
   * Returns all outgoing edges for the node.
   */
  getOutgoingEdges(e) {
    return this.model.getOutgoingEdges(e);
  }
  /**
   * Returns all incoming edges for the node.
   */
  getIncomingEdges(e) {
    return this.model.getIncomingEdges(e);
  }
  /**
   * Returns edges connected with cell.
   */
  getConnectedEdges(e, t = {}) {
    return this.model.getConnectedEdges(e, t);
  }
  /**
   * Returns an array of all the roots of the graph.
   */
  getRootNodes() {
    return this.model.getRoots();
  }
  /**
   * Returns an array of all the leafs of the graph.
   */
  getLeafNodes() {
    return this.model.getLeafs();
  }
  /**
   * Returns `true` if the node is a root node, i.e.
   * there is no  edges coming to the node.
   */
  isRootNode(e) {
    return this.model.isRoot(e);
  }
  /**
   * Returns `true` if the node is a leaf node, i.e.
   * there is no edges going out from the node.
   */
  isLeafNode(e) {
    return this.model.isLeaf(e);
  }
  /**
   * Returns all the neighbors of node in the graph. Neighbors are all
   * the nodes connected to node via either incoming or outgoing edge.
   */
  getNeighbors(e, t = {}) {
    return this.model.getNeighbors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a neighbor of `cell1`.
   */
  isNeighbor(e, t, i = {}) {
    return this.model.isNeighbor(e, t, i);
  }
  getSuccessors(e, t = {}) {
    return this.model.getSuccessors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a successor of `cell1`.
   */
  isSuccessor(e, t, i = {}) {
    return this.model.isSuccessor(e, t, i);
  }
  getPredecessors(e, t = {}) {
    return this.model.getPredecessors(e, t);
  }
  /**
   * Returns `true` if `cell2` is a predecessor of `cell1`.
   */
  isPredecessor(e, t, i = {}) {
    return this.model.isPredecessor(e, t, i);
  }
  getCommonAncestor(...e) {
    return this.model.getCommonAncestor(...e);
  }
  /**
   * Returns an array of cells that result from finding nodes/edges that
   * are connected to any of the cells in the cells array. This function
   * loops over cells and if the current cell is a edge, it collects its
   * source/target nodes; if it is an node, it collects its incoming and
   * outgoing edges if both the edge terminal (source/target) are in the
   * cells array.
   */
  getSubGraph(e, t = {}) {
    return this.model.getSubGraph(e, t);
  }
  /**
   * Clones the whole subgraph (including all the connected links whose
   * source/target is in the subgraph). If `options.deep` is `true`, also
   * take into account all the embedded cells of all the subgraph cells.
   *
   * Returns a map of the form: { [original cell ID]: [clone] }.
   */
  cloneSubGraph(e, t = {}) {
    return this.model.cloneSubGraph(e, t);
  }
  cloneCells(e) {
    return this.model.cloneCells(e);
  }
  getNodesFromPoint(e, t) {
    return this.model.getNodesFromPoint(e, t);
  }
  getNodesInArea(e, t, i, s, r) {
    return this.model.getNodesInArea(e, t, i, s, r);
  }
  getNodesUnderNode(e, t = {}) {
    return this.model.getNodesUnderNode(e, t);
  }
  searchCell(e, t, i = {}) {
    return this.model.search(e, t, i), this;
  }
  /** *
   * Returns an array of IDs of nodes on the shortest
   * path between source and target.
   */
  getShortestPath(e, t, i = {}) {
    return this.model.getShortestPath(e, t, i);
  }
  /**
   * Returns the bounding box that surrounds all cells in the graph.
   */
  getAllCellsBBox() {
    return this.model.getAllCellsBBox();
  }
  /**
   * Returns the bounding box that surrounds all the given cells.
   */
  getCellsBBox(e, t = {}) {
    return this.model.getCellsBBox(e, t);
  }
  startBatch(e, t = {}) {
    this.model.startBatch(e, t);
  }
  stopBatch(e, t = {}) {
    this.model.stopBatch(e, t);
  }
  batchUpdate(e, t, i) {
    const s = typeof e == "string" ? e : "update", r = typeof e == "string" ? t : e, o = typeof t == "function" ? i : t;
    this.startBatch(s, o);
    const l = r();
    return this.stopBatch(s, o), l;
  }
  updateCellId(e, t) {
    return this.model.updateCellId(e, t);
  }
  // #endregion
  // #region view
  findView(e) {
    return gt.isCell(e) ? this.findViewByCell(e) : this.findViewByElem(e);
  }
  findViews(e) {
    return ye.isRectangleLike(e) ? this.findViewsInArea(e) : z.isPointLike(e) ? this.findViewsFromPoint(e) : [];
  }
  findViewByCell(e) {
    return this.renderer.findViewByCell(e);
  }
  findViewByElem(e) {
    return this.renderer.findViewByElem(e);
  }
  findViewsFromPoint(e, t) {
    const i = typeof e == "number" ? { x: e, y: t } : e;
    return this.renderer.findViewsFromPoint(i);
  }
  findViewsInArea(e, t, i, s, r) {
    const o = typeof e == "number" ? {
      x: e,
      y: t,
      width: i,
      height: s
    } : e, l = typeof e == "number" ? r : t;
    return this.renderer.findViewsInArea(o, l);
  }
  matrix(e) {
    return typeof e > "u" ? this.transform.getMatrix() : (this.transform.setMatrix(e), this);
  }
  resize(e, t) {
    const i = this.getPlugin("scroller");
    return i ? i.resize(e, t) : this.transform.resize(e, t), this;
  }
  scale(e, t = e, i = 0, s = 0) {
    return typeof e > "u" ? this.transform.getScale() : (this.transform.scale(e, t, i, s), this);
  }
  zoom(e, t) {
    const i = this.getPlugin("scroller");
    if (i) {
      if (typeof e > "u")
        return i.zoom();
      i.zoom(e, t);
    } else {
      if (typeof e > "u")
        return this.transform.getZoom();
      this.transform.zoom(e, t);
    }
    return this;
  }
  zoomTo(e, t = {}) {
    const i = this.getPlugin("scroller");
    return i ? i.zoom(e, Object.assign(Object.assign({}, t), { absolute: !0 })) : this.transform.zoom(e, Object.assign(Object.assign({}, t), { absolute: !0 })), this;
  }
  zoomToRect(e, t = {}) {
    const i = this.getPlugin("scroller");
    return i ? i.zoomToRect(e, t) : this.transform.zoomToRect(e, t), this;
  }
  zoomToFit(e = {}) {
    const t = this.getPlugin("scroller");
    return t ? t.zoomToFit(e) : this.transform.zoomToFit(e), this;
  }
  rotate(e, t, i) {
    return typeof e > "u" ? this.transform.getRotation() : (this.transform.rotate(e, t, i), this);
  }
  translate(e, t) {
    return typeof e > "u" ? this.transform.getTranslation() : (this.transform.translate(e, t), this);
  }
  translateBy(e, t) {
    const i = this.translate(), s = i.tx + e, r = i.ty + t;
    return this.translate(s, r);
  }
  getGraphArea() {
    return this.transform.getGraphArea();
  }
  getContentArea(e = {}) {
    return this.transform.getContentArea(e);
  }
  getContentBBox(e = {}) {
    return this.transform.getContentBBox(e);
  }
  fitToContent(e, t, i, s) {
    return this.transform.fitToContent(e, t, i, s);
  }
  scaleContentToFit(e = {}) {
    return this.transform.scaleContentToFit(e), this;
  }
  /**
   * Position the center of graph to the center of the viewport.
   */
  center(e) {
    return this.centerPoint(e);
  }
  centerPoint(e, t, i) {
    const s = this.getPlugin("scroller");
    return s ? s.centerPoint(e, t, i) : this.transform.centerPoint(e, t), this;
  }
  centerContent(e) {
    const t = this.getPlugin("scroller");
    return t ? t.centerContent(e) : this.transform.centerContent(e), this;
  }
  centerCell(e, t) {
    const i = this.getPlugin("scroller");
    return i ? i.centerCell(e, t) : this.transform.centerCell(e), this;
  }
  positionPoint(e, t, i, s = {}) {
    const r = this.getPlugin("scroller");
    return r ? r.positionPoint(e, t, i, s) : this.transform.positionPoint(e, t, i), this;
  }
  positionRect(e, t, i) {
    const s = this.getPlugin("scroller");
    return s ? s.positionRect(e, t, i) : this.transform.positionRect(e, t), this;
  }
  positionCell(e, t, i) {
    const s = this.getPlugin("scroller");
    return s ? s.positionCell(e, t, i) : this.transform.positionCell(e, t), this;
  }
  positionContent(e, t) {
    const i = this.getPlugin("scroller");
    return i ? i.positionContent(e, t) : this.transform.positionContent(e, t), this;
  }
  snapToGrid(e, t) {
    return this.coord.snapToGrid(e, t);
  }
  pageToLocal(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.pageToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.pageToLocalRect(e, t, i, s) : this.coord.pageToLocalPoint(e, t);
  }
  localToPage(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.localToPageRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.localToPageRect(e, t, i, s) : this.coord.localToPagePoint(e, t);
  }
  clientToLocal(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.clientToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.clientToLocalRect(e, t, i, s) : this.coord.clientToLocalPoint(e, t);
  }
  localToClient(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.localToClientRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.localToClientRect(e, t, i, s) : this.coord.localToClientPoint(e, t);
  }
  localToGraph(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.localToGraphRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.localToGraphRect(e, t, i, s) : this.coord.localToGraphPoint(e, t);
  }
  graphToLocal(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.graphToLocalRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.graphToLocalRect(e, t, i, s) : this.coord.graphToLocalPoint(e, t);
  }
  clientToGraph(e, t, i, s) {
    return ye.isRectangleLike(e) ? this.coord.clientToGraphRect(e) : typeof e == "number" && typeof t == "number" && typeof i == "number" && typeof s == "number" ? this.coord.clientToGraphRect(e, t, i, s) : this.coord.clientToGraphPoint(e, t);
  }
  // #endregion
  // #region defs
  defineFilter(e) {
    return this.defs.filter(e);
  }
  defineGradient(e) {
    return this.defs.gradient(e);
  }
  defineMarker(e) {
    return this.defs.marker(e);
  }
  // #endregion
  // #region grid
  getGridSize() {
    return this.grid.getGridSize();
  }
  setGridSize(e) {
    return this.grid.setGridSize(e), this;
  }
  showGrid() {
    return this.grid.show(), this;
  }
  hideGrid() {
    return this.grid.hide(), this;
  }
  clearGrid() {
    return this.grid.clear(), this;
  }
  drawGrid(e) {
    return this.grid.draw(e), this;
  }
  // #endregion
  // #region background
  updateBackground() {
    return this.background.update(), this;
  }
  drawBackground(e, t) {
    const i = this.getPlugin("scroller");
    return i != null && (this.options.background == null || !t) ? i.drawBackground(e, t) : this.background.draw(e), this;
  }
  clearBackground(e) {
    const t = this.getPlugin("scroller");
    return t != null && (this.options.background == null || !e) ? t.clearBackground(e) : this.background.clear(), this;
  }
  // #endregion
  // #region virtual-render
  enableVirtualRender() {
    return this.virtualRender.enableVirtualRender(), this;
  }
  disableVirtualRender() {
    return this.virtualRender.disableVirtualRender(), this;
  }
  // #endregion
  // #region mousewheel
  isMouseWheelEnabled() {
    return !this.mousewheel.disabled;
  }
  enableMouseWheel() {
    return this.mousewheel.enable(), this;
  }
  disableMouseWheel() {
    return this.mousewheel.disable(), this;
  }
  toggleMouseWheel(e) {
    return e == null ? this.isMouseWheelEnabled() ? this.disableMouseWheel() : this.enableMouseWheel() : e ? this.enableMouseWheel() : this.disableMouseWheel(), this;
  }
  // #endregion
  // #region panning
  isPannable() {
    const e = this.getPlugin("scroller");
    return e ? e.isPannable() : this.panning.pannable;
  }
  enablePanning() {
    const e = this.getPlugin("scroller");
    return e ? e.enablePanning() : this.panning.enablePanning(), this;
  }
  disablePanning() {
    const e = this.getPlugin("scroller");
    return e ? e.disablePanning() : this.panning.disablePanning(), this;
  }
  togglePanning(e) {
    return e == null ? this.isPannable() ? this.disablePanning() : this.enablePanning() : e !== this.isPannable() && (e ? this.enablePanning() : this.disablePanning()), this;
  }
  // #endregion
  // #region plugin
  use(e, ...t) {
    return this.installedPlugins.has(e) || (this.installedPlugins.add(e), e.init(this, ...t)), this;
  }
  getPlugin(e) {
    return Array.from(this.installedPlugins).find((t) => t.name === e);
  }
  getPlugins(e) {
    return Array.from(this.installedPlugins).filter((t) => e.includes(t.name));
  }
  enablePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const i = this.getPlugins(t);
    return i == null || i.forEach((s) => {
      var r;
      (r = s == null ? void 0 : s.enable) === null || r === void 0 || r.call(s);
    }), this;
  }
  disablePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const i = this.getPlugins(t);
    return i == null || i.forEach((s) => {
      var r;
      (r = s == null ? void 0 : s.disable) === null || r === void 0 || r.call(s);
    }), this;
  }
  isPluginEnabled(e) {
    var t;
    const i = this.getPlugin(e);
    return (t = i == null ? void 0 : i.isEnabled) === null || t === void 0 ? void 0 : t.call(i);
  }
  disposePlugins(e) {
    let t = e;
    Array.isArray(t) || (t = [t]);
    const i = this.getPlugins(t);
    return i == null || i.forEach((s) => {
      s.dispose(), this.installedPlugins.delete(s);
    }), this;
  }
  // #endregion
  // #region dispose
  dispose(e = !0) {
    e && this.model.dispose(), this.css.dispose(), this.defs.dispose(), this.grid.dispose(), this.coord.dispose(), this.transform.dispose(), this.highlight.dispose(), this.background.dispose(), this.mousewheel.dispose(), this.panning.dispose(), this.view.dispose(), this.renderer.dispose(), this.installedPlugins.forEach((t) => {
      t.dispose();
    });
  }
}
xre([
  gn.dispose()
], Pe.prototype, "dispose", null);
(function(n) {
  n.View = fo, n.Renderer = Cw, n.MouseWheel = Sw, n.DefsManager = oR, n.GridManager = Ow, n.CoordManager = lR, n.TransformManager = sR, n.HighlightManager = sm, n.BackgroundManager = ww, n.PanningManager = xw;
})(Pe || (Pe = {}));
(function(n) {
  n.toStringTag = `X6.${n.name}`;
  function e(t) {
    if (t == null)
      return !1;
    if (t instanceof n)
      return !0;
    const i = t[Symbol.toStringTag];
    return i == null || i === n.toStringTag;
  }
  n.isGraph = e;
})(Pe || (Pe = {}));
(function(n) {
  function e(t, i) {
    const s = t instanceof HTMLElement ? new n({ container: t }) : new n(t);
    return i != null && s.fromJSON(i), s;
  }
  n.render = e;
})(Pe || (Pe = {}));
(function(n) {
  n.registerNode = $n.registry.register, n.registerEdge = xn.registry.register, n.registerView = En.registry.register, n.registerAttr = ho.registry.register, n.registerGrid = Ol.registry.register, n.registerFilter = wu.registry.register, n.registerNodeTool = Cu.registry.register, n.registerEdgeTool = ku.registry.register, n.registerBackground = Dd.registry.register, n.registerHighlighter = Ro.registry.register, n.registerPortLayout = Ma.registry.register, n.registerPortLabelLayout = xu.registry.register, n.registerMarker = Dl.registry.register, n.registerRouter = wl.registry.register, n.registerConnector = Ra.registry.register, n.registerAnchor = Pu.registry.register, n.registerEdgeAnchor = Eu.registry.register, n.registerConnectionPoint = Au.registry.register;
})(Pe || (Pe = {}));
(function(n) {
  n.unregisterNode = $n.registry.unregister, n.unregisterEdge = xn.registry.unregister, n.unregisterView = En.registry.unregister, n.unregisterAttr = ho.registry.unregister, n.unregisterGrid = Ol.registry.unregister, n.unregisterFilter = wu.registry.unregister, n.unregisterNodeTool = Cu.registry.unregister, n.unregisterEdgeTool = ku.registry.unregister, n.unregisterBackground = Dd.registry.unregister, n.unregisterHighlighter = Ro.registry.unregister, n.unregisterPortLayout = Ma.registry.unregister, n.unregisterPortLabelLayout = xu.registry.unregister, n.unregisterMarker = Dl.registry.unregister, n.unregisterRouter = wl.registry.unregister, n.unregisterConnector = Ra.registry.unregister, n.unregisterAnchor = Pu.registry.unregister, n.unregisterEdgeAnchor = Eu.registry.unregister, n.unregisterConnectionPoint = Au.registry.unregister;
})(Pe || (Pe = {}));
var Sre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
}, Cre = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class _u extends $n {
}
(function(n) {
  class e extends As {
    init() {
      super.init(), this.cell.on("change:*", this.onCellChangeAny, this);
    }
    onCellChangeAny({ key: i }) {
      const s = n.shapeMaps[this.cell.shape];
      if (s) {
        const { effect: r } = s;
        (!r || r.includes(i)) && this.renderHTMLComponent();
      }
    }
    confirmUpdate(i) {
      const s = super.confirmUpdate(i);
      return this.handleAction(s, e.action, () => this.renderHTMLComponent());
    }
    renderHTMLComponent() {
      const i = this.selectors && this.selectors.foContent;
      if (i) {
        kf(i);
        const s = n.shapeMaps[this.cell.shape];
        if (!s)
          return;
        let { html: r } = s;
        typeof r == "function" && (r = r(this.cell)), r && (typeof r == "string" ? i.innerHTML = r : Xl(i, r));
      }
    }
    dispose() {
      this.cell.off("change:*", this.onCellChangeAny, this);
    }
  }
  Sre([
    e.dispose()
  ], e.prototype, "dispose", null), n.View = e, function(t) {
    t.action = "html", t.config({
      bootstrap: [t.action],
      actions: {
        html: t.action
      }
    }), As.registry.register("html-view", t, !0);
  }(e = n.View || (n.View = {}));
})(_u || (_u = {}));
(function(n) {
  n.config({
    view: "html-view",
    markup: [
      {
        tagName: "rect",
        selector: "body"
      },
      Object.assign({}, Yt.getForeignObjectMarkup()),
      {
        tagName: "text",
        selector: "label"
      }
    ],
    attrs: {
      body: {
        fill: "none",
        stroke: "none",
        refWidth: "100%",
        refHeight: "100%"
      },
      fo: {
        refWidth: "100%",
        refHeight: "100%"
      }
    }
  }), $n.registry.register("html", n, !0);
})(_u || (_u = {}));
(function(n) {
  n.shapeMaps = {};
  function e(t) {
    const { shape: i, html: s, effect: r, inherit: o } = t, l = Cre(t, ["shape", "html", "effect", "inherit"]);
    if (!i)
      throw new Error("should specify shape in config");
    n.shapeMaps[i] = {
      html: s,
      effect: r
    }, Pe.registerNode(i, Object.assign({ inherit: o || "html" }, l), !0);
  }
  n.register = e;
})(_u || (_u = {}));
class bk extends $n {
}
(function(n) {
  function e(t) {
    const i = [], s = Yt.getForeignObjectMarkup();
    return t ? i.push({
      tagName: t,
      selector: "body"
    }, s) : i.push(s), i;
  }
  n.config({
    view: "vue-shape-view",
    markup: e(),
    attrs: {
      body: {
        fill: "none",
        stroke: "none",
        refWidth: "100%",
        refHeight: "100%"
      },
      fo: {
        refWidth: "100%",
        refHeight: "100%"
      }
    },
    propHooks(t) {
      if (t.markup == null) {
        const i = t.primer;
        if (i) {
          t.markup = e(i);
          let s = {};
          switch (i) {
            case "circle":
              s = {
                refCx: "50%",
                refCy: "50%",
                refR: "50%"
              };
              break;
            case "ellipse":
              s = {
                refCx: "50%",
                refCy: "50%",
                refRx: "50%",
                refRy: "50%"
              };
              break;
          }
          t.attrs = On({}, {
            body: Object.assign({ refWidth: null, refHeight: null }, s)
          }, t.attrs || {});
        }
      }
      return t;
    }
  }), $n.registry.register("vue-shape", n, !0);
})(bk || (bk = {}));
var kre = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
const cR = {};
function KUe(n) {
  const { shape: e, component: t, inherit: i } = n, s = kre(n, ["shape", "component", "inherit"]);
  if (!e)
    throw new Error("should specify shape in config");
  cR[e] = {
    component: t
  }, Pe.registerNode(e, Object.assign({ inherit: i || "vue-shape" }, s), !0);
}
let O0 = !1;
const rm = Gt({});
function Pre(n, e, t, i, s) {
  O0 && (rm[n] = H4(F({
    render: () => Re(jm, { to: t }, [Re(e, { node: i, graph: s })]),
    provide: () => ({
      getNode: () => i,
      getGraph: () => s
    })
  })));
}
function yk(n) {
  O0 && delete rm[n];
}
function Ok() {
  return O0;
}
function JUe() {
  return O0 = !0, F({
    setup() {
      return () => Re(Tt, {}, Object.keys(rm).map((n) => Re(rm[n])));
    }
  });
}
class om extends As {
  getComponentContainer() {
    return this.selectors && this.selectors.foContent;
  }
  confirmUpdate(e) {
    const t = super.confirmUpdate(e);
    return this.handleAction(t, om.action, () => {
      this.renderVueComponent();
    });
  }
  targetId() {
    return `${this.graph.view.cid}:${this.cell.id}`;
  }
  renderVueComponent() {
    console.log("======renderVueComponent====>1"), this.unmountVueComponent();
    const e = this.getComponentContainer(), t = this.cell, i = this.graph;
    if (e) {
      const { component: s } = cR[t.shape];
      s && (Ok() ? (yk(this.targetId()), Pre(this.targetId(), s, e, t, i)) : (this.vm = X4({
        render() {
          return Re(s, { node: t, graph: i });
        },
        provide() {
          return {
            getNode: () => t,
            getGraph: () => i
          };
        }
      }), this.vm.mount(e)));
    }
  }
  unmountVueComponent() {
    const e = this.getComponentContainer();
    return this.vm && (this.vm.unmount(), this.vm = null), e && (e.innerHTML = ""), e;
  }
  onMouseDown(e, t, i) {
    const s = e.target;
    if (s.tagName.toLowerCase() === "input") {
      const o = s.getAttribute("type");
      if (o == null || [
        "text",
        "password",
        "number",
        "email",
        "search",
        "tel",
        "url"
      ].includes(o))
        return;
    }
    super.onMouseDown(e, t, i);
  }
  unmount() {
    return Ok() && yk(this.targetId()), this.unmountVueComponent(), super.unmount(), this;
  }
}
(function(n) {
  n.action = "vue", n.config({
    bootstrap: [n.action],
    actions: {
      component: n.action
    }
  }), As.registry.register("vue-shape-view", n, !0);
})(om || (om = {}));
const Ere = `.x6-widget-dnd {
  position: absolute;
  top: -10000px;
  left: -10000px;
  z-index: 999999;
  display: none;
  cursor: move;
  opacity: 0.7;
  pointer-events: 'cursor';
}
.x6-widget-dnd.dragging {
  display: inline-block;
}
.x6-widget-dnd.dragging * {
  pointer-events: none !important;
}
.x6-widget-dnd .x6-graph {
  background: transparent;
  box-shadow: none;
}
`;
var Are = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Mu extends Rt {
  get targetScroller() {
    return this.options.target.getPlugin("scroller");
  }
  get targetGraph() {
    return this.options.target;
  }
  get targetModel() {
    return this.targetGraph.model;
  }
  get snapline() {
    return this.options.target.getPlugin("snapline");
  }
  constructor(e) {
    super(), this.name = "dnd", this.options = Object.assign(Object.assign({}, Mu.defaults), e), this.init();
  }
  init() {
    h0(this.name, Ere), this.container = document.createElement("div"), Ye(this.container, this.prefixClassName("widget-dnd")), this.draggingGraph = new Pe(Object.assign(Object.assign({}, this.options.delegateGraphOptions), { container: document.createElement("div"), width: 1, height: 1, async: !1 })), Xl(this.container, this.draggingGraph.container);
  }
  start(e, t) {
    const i = t;
    i.preventDefault(), this.targetModel.startBatch("dnd"), Ye(this.container, "dragging"), Jh(this.container, this.options.draggingContainer || document.body), this.sourceNode = e, this.prepareDragging(e, i.clientX, i.clientY);
    const s = this.updateNodePosition(i.clientX, i.clientY);
    this.isSnaplineEnabled() && (this.snapline.captureCursorOffset({
      e: i,
      node: e,
      cell: e,
      view: this.draggingView,
      x: s.x,
      y: s.y
    }), this.draggingNode.on("change:position", this.snap, this)), this.delegateDocumentEvents(Mu.documentEvents, i.data);
  }
  isSnaplineEnabled() {
    return this.snapline && this.snapline.isEnabled();
  }
  prepareDragging(e, t, i) {
    const s = this.draggingGraph, r = s.model, o = this.options.getDragNode(e, {
      sourceNode: e,
      draggingGraph: s,
      targetGraph: this.targetGraph
    });
    o.position(0, 0);
    let l = 5;
    if (this.isSnaplineEnabled() && (l += this.snapline.options.tolerance || 0), this.isSnaplineEnabled() || this.options.scaled) {
      const u = this.targetGraph.transform.getScale();
      s.scale(u.sx, u.sy), l *= Math.max(u.sx, u.sy);
    } else
      s.scale(1, 1);
    this.clearDragging(), r.resetCells([o]);
    const a = s.findViewByCell(o);
    a.undelegateEvents(), a.cell.off("changed"), s.fitToContent({
      padding: l,
      allowNewOrigin: "any",
      useCellGeometry: !1
    });
    const c = a.getBBox();
    this.geometryBBox = a.getBBox({ useCellGeometry: !0 }), this.delta = this.geometryBBox.getTopLeft().diff(c.getTopLeft()), this.draggingNode = o, this.draggingView = a, this.draggingBBox = o.getBBox(), this.padding = l, this.originOffset = this.updateGraphPosition(t, i);
  }
  updateGraphPosition(e, t) {
    const i = document.body.scrollTop || document.documentElement.scrollTop, s = document.body.scrollLeft || document.documentElement.scrollLeft, r = this.delta, o = this.geometryBBox, l = this.padding || 5, a = {
      left: e - r.x - o.width / 2 - l + s,
      top: t - r.y - o.height / 2 - l + i
    };
    return this.draggingGraph && Zn(this.container, {
      left: `${a.left}px`,
      top: `${a.top}px`
    }), a;
  }
  updateNodePosition(e, t) {
    const i = this.targetGraph.clientToLocal(e, t), s = this.draggingBBox;
    return i.x -= s.width / 2, i.y -= s.height / 2, this.draggingNode.position(i.x, i.y), i;
  }
  snap({ cell: e, current: t, options: i }) {
    const s = e;
    if (i.snapped) {
      const r = this.draggingBBox;
      s.position(r.x + i.tx, r.y + i.ty, { silent: !0 }), this.draggingView.translate(), s.position(t.x, t.y, { silent: !0 }), this.snapOffset = {
        x: i.tx,
        y: i.ty
      };
    } else
      this.snapOffset = null;
  }
  onDragging(e) {
    const t = this.draggingView;
    if (t) {
      e.preventDefault();
      const i = this.normalizeEvent(e), s = i.clientX, r = i.clientY;
      this.updateGraphPosition(s, r);
      const o = this.updateNodePosition(s, r), l = this.targetGraph.options.embedding.enabled, a = (l || this.isSnaplineEnabled()) && this.isInsideValidArea({
        x: s,
        y: r
      });
      if (l) {
        t.setEventData(i, {
          graph: this.targetGraph,
          candidateEmbedView: this.candidateEmbedView
        });
        const c = t.getEventData(i);
        a ? t.processEmbedding(i, c) : t.clearEmbedding(c), this.candidateEmbedView = c.candidateEmbedView;
      }
      this.isSnaplineEnabled() && (a ? this.snapline.snapOnMoving({
        e: i,
        view: t,
        x: o.x,
        y: o.y
      }) : this.snapline.hide());
    }
  }
  onDragEnd(e) {
    const t = this.draggingNode;
    if (t) {
      const i = this.normalizeEvent(e), s = this.draggingView, r = this.draggingBBox, o = this.snapOffset;
      let l = r.x, a = r.y;
      o && (l += o.x, a += o.y), t.position(l, a, { silent: !0 });
      const c = this.drop(t, { x: i.clientX, y: i.clientY }), u = (h) => {
        h ? (this.onDropped(t), this.targetGraph.options.embedding.enabled && s && (s.setEventData(i, {
          cell: h,
          graph: this.targetGraph,
          candidateEmbedView: this.candidateEmbedView
        }), s.finalizeEmbedding(i, s.getEventData(i)))) : this.onDropInvalid(), this.candidateEmbedView = null, this.targetModel.stopBatch("dnd");
      };
      ky(c) ? (this.undelegateDocumentEvents(), c.then(u)) : u(c);
    }
  }
  clearDragging() {
    this.draggingNode && (this.sourceNode = null, this.draggingNode.remove(), this.draggingNode = null, this.draggingView = null, this.delta = null, this.padding = null, this.snapOffset = null, this.originOffset = null, this.undelegateDocumentEvents());
  }
  onDropped(e) {
    this.draggingNode === e && (this.clearDragging(), Rn(this.container, "dragging"), no(this.container));
  }
  onDropInvalid() {
    const e = this.draggingNode;
    e && this.onDropped(e);
  }
  isInsideValidArea(e) {
    let t, i = null;
    const s = this.targetGraph, r = this.targetScroller;
    this.options.dndContainer && (i = this.getDropArea(this.options.dndContainer));
    const o = i && i.containsPoint(e);
    if (r)
      if (r.options.autoResize)
        t = this.getDropArea(r.container);
      else {
        const l = this.getDropArea(r.container);
        t = this.getDropArea(s.container).intersectsWithRect(l);
      }
    else
      t = this.getDropArea(s.container);
    return !o && t && t.containsPoint(e);
  }
  getDropArea(e) {
    const t = _y(e), i = document.body.scrollTop || document.documentElement.scrollTop, s = document.body.scrollLeft || document.documentElement.scrollLeft;
    return ye.create({
      x: t.left + parseInt(Zn(e, "border-left-width"), 10) - s,
      y: t.top + parseInt(Zn(e, "border-top-width"), 10) - i,
      width: e.clientWidth,
      height: e.clientHeight
    });
  }
  drop(e, t) {
    if (this.isInsideValidArea(t)) {
      const i = this.targetGraph, s = i.model, r = i.clientToLocal(t), o = this.sourceNode, l = this.options.getDropNode(e, {
        sourceNode: o,
        draggingNode: e,
        targetGraph: this.targetGraph,
        draggingGraph: this.draggingGraph
      }), a = l.getBBox();
      r.x += a.x - a.width / 2, r.y += a.y - a.height / 2;
      const c = this.snapOffset ? 1 : i.getGridSize();
      l.position(At.snapToGrid(r.x, c), At.snapToGrid(r.y, c)), l.removeZIndex();
      const u = this.options.validateNode, h = u ? u(l, {
        sourceNode: o,
        draggingNode: e,
        droppingNode: l,
        targetGraph: i,
        draggingGraph: this.draggingGraph
      }) : !0;
      return typeof h == "boolean" ? h ? (s.addCell(l, { stencil: this.cid }), l) : null : bee(h).then((d) => d ? (s.addCell(l, { stencil: this.cid }), l) : null);
    }
    return null;
  }
  onRemove() {
    this.draggingGraph && (this.draggingGraph.view.remove(), this.draggingGraph.dispose());
  }
  dispose() {
    this.remove(), d0(this.name);
  }
}
Are([
  Rt.dispose()
], Mu.prototype, "dispose", null);
(function(n) {
  n.defaults = {
    // animation: false,
    getDragNode: (e) => e.clone(),
    getDropNode: (e) => e.clone()
  }, n.documentEvents = {
    mousemove: "onDragging",
    touchmove: "onDragging",
    mouseup: "onDragEnd",
    touchend: "onDragEnd",
    touchcancel: "onDragEnd"
  };
})(Mu || (Mu = {}));
var $re = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class uR extends Rt {
  get model() {
    return this.graph.model;
  }
  get view() {
    return this.graph.renderer.findViewByCell(this.node);
  }
  get containerClassName() {
    return this.prefixClassName("widget-transform");
  }
  get resizeClassName() {
    return `${this.containerClassName}-resize`;
  }
  get rotateClassName() {
    return `${this.containerClassName}-rotate`;
  }
  constructor(e, t, i) {
    super(), this.node = t, this.graph = i, this.options = Object.assign(Object.assign({}, zn.defaultOptions), e), this.render(), this.startListening();
  }
  startListening() {
    this.delegateEvents({
      [`mousedown .${this.resizeClassName}`]: "startResizing",
      [`touchstart .${this.resizeClassName}`]: "startResizing",
      [`mousedown .${this.rotateClassName}`]: "startRotating",
      [`touchstart .${this.rotateClassName}`]: "startRotating"
    }), this.model.on("*", this.update, this), this.graph.on("scale", this.update, this), this.graph.on("translate", this.update, this), this.node.on("removed", this.remove, this), this.model.on("reseted", this.remove, this), this.view.on("cell:knob:mousedown", this.onKnobMouseDown, this), this.view.on("cell:knob:mouseup", this.onKnobMouseUp, this);
  }
  stopListening() {
    this.undelegateEvents(), this.model.off("*", this.update, this), this.graph.off("scale", this.update, this), this.graph.off("translate", this.update, this), this.node.off("removed", this.remove, this), this.model.off("reseted", this.remove, this), this.view.off("cell:knob:mousedown", this.onKnobMouseDown, this), this.view.off("cell:knob:mouseup", this.onKnobMouseUp, this);
  }
  renderHandles() {
    this.container = document.createElement("div");
    const e = document.createElement("div");
    St(e, "draggable", "false");
    const t = e.cloneNode(!0);
    Ye(t, this.rotateClassName);
    const i = zn.POSITIONS.map((s) => {
      const r = e.cloneNode(!0);
      return Ye(r, this.resizeClassName), St(r, "data-position", s), r;
    });
    this.empty(), Xl(this.container, [...i, t]);
  }
  render() {
    return this.renderHandles(), this.view && this.view.addClass(zn.NODE_CLS), Ye(this.container, this.containerClassName), Kh(this.container, "no-orth-resize", this.options.preserveAspectRatio || !this.options.orthogonalResizing), Kh(this.container, "no-resize", !this.options.resizable), Kh(this.container, "no-rotate", !this.options.rotatable), this.options.className && Ye(this.container, this.options.className), this.graph.container.appendChild(this.container), this.update();
  }
  update() {
    const e = this.graph.matrix(), t = this.node.getBBox();
    t.x *= e.a, t.x += e.e, t.y *= e.d, t.y += e.f, t.width *= e.a, t.height *= e.d;
    const i = Pt.normalize(this.node.getAngle()), s = i !== 0 ? `rotate(${i}deg)` : "";
    return Zn(this.container, {
      transform: s,
      width: t.width,
      height: t.height,
      left: t.x,
      top: t.y
    }), this.updateResizerDirections(), this;
  }
  remove() {
    return this.view && this.view.removeClass(zn.NODE_CLS), super.remove();
  }
  onKnobMouseDown() {
    this.startHandle();
  }
  onKnobMouseUp() {
    this.stopHandle();
  }
  updateResizerDirections() {
    const e = Pt.normalize(this.node.getAngle()), t = Math.floor(e * (zn.DIRECTIONS.length / 360));
    if (t !== this.prevShift) {
      const i = zn.DIRECTIONS.slice(t).concat(zn.DIRECTIONS.slice(0, t)), s = (o) => `${this.containerClassName}-cursor-${o}`;
      this.container.querySelectorAll(`.${this.resizeClassName}`).forEach((o, l) => {
        Rn(o, zn.DIRECTIONS.map((a) => s(a)).join(" ")), Ye(o, s(i[l]));
      }), this.prevShift = t;
    }
  }
  getTrueDirection(e) {
    const t = Pt.normalize(this.node.getAngle());
    let i = zn.POSITIONS.indexOf(e);
    return i += Math.floor(t * (zn.POSITIONS.length / 360)), i %= zn.POSITIONS.length, zn.POSITIONS[i];
  }
  toValidResizeDirection(e) {
    return {
      top: "top-left",
      bottom: "bottom-right",
      left: "bottom-left",
      right: "top-right"
    }[e] || e;
  }
  startResizing(e) {
    e.stopPropagation(), this.model.startBatch("resize", { cid: this.cid });
    const t = St(e.target, "data-position");
    this.prepareResizing(e, t), this.startAction(e);
  }
  prepareResizing(e, t) {
    const i = this.getTrueDirection(t);
    let s = 0, r = 0;
    t.split("-").forEach((c) => {
      s = { left: -1, right: 1 }[c] || s, r = { top: -1, bottom: 1 }[c] || r;
    });
    const o = this.toValidResizeDirection(t), l = {
      "top-right": "bottomLeft",
      "top-left": "bottomRight",
      "bottom-left": "topRight",
      "bottom-right": "topLeft"
    }[o], a = Pt.normalize(this.node.getAngle());
    this.setEventData(e, {
      selector: l,
      direction: o,
      trueDirection: i,
      relativeDirection: t,
      angle: a,
      resizeX: s,
      resizeY: r,
      action: "resizing"
    });
  }
  startRotating(e) {
    e.stopPropagation(), this.model.startBatch("rotate", { cid: this.cid });
    const t = this.node.getBBox().getCenter(), i = this.normalizeEvent(e), s = this.graph.snapToGrid(i.clientX, i.clientY);
    this.setEventData(e, {
      center: t,
      action: "rotating",
      angle: Pt.normalize(this.node.getAngle()),
      start: z.create(s).theta(t)
    }), this.startAction(e);
  }
  onMouseMove(e) {
    const t = this.graph.findViewByCell(this.node);
    let i = this.getEventData(e);
    if (i.action) {
      const s = this.normalizeEvent(e);
      let r = s.clientX, o = s.clientY;
      const l = this.graph.getPlugin("scroller"), a = this.options.restrictedResizing;
      if (a === !0 || typeof a == "number") {
        const f = a === !0 ? 0 : a, p = l ? Math.max(f, 8) : f, g = this.graph.container.getBoundingClientRect();
        r = is(r, g.left + p, g.right - p), o = is(o, g.top + p, g.bottom - p);
      } else
        this.options.autoScrollOnResizing && l && l.autoScroll(r, o);
      const c = this.graph.snapToGrid(r, o), u = this.graph.getGridSize(), h = this.node, d = this.options;
      if (i.action === "resizing") {
        i = i, i.resized || (t && (t.addClass("node-resizing"), this.notify("node:resize", e, t)), i.resized = !0);
        const f = h.getBBox(), p = z.create(c).rotate(i.angle, f.getCenter()).diff(f[i.selector]);
        let g = i.resizeX ? p.x * i.resizeX : f.width, m = i.resizeY ? p.y * i.resizeY : f.height;
        const v = g, O = m;
        if (g = At.snapToGrid(g, u), m = At.snapToGrid(m, u), g = Math.max(g, d.minWidth || u), m = Math.max(m, d.minHeight || u), g = Math.min(g, d.maxWidth || 1 / 0), m = Math.min(m, d.maxHeight || 1 / 0), d.preserveAspectRatio) {
          const w = f.width * m / f.height, x = f.height * g / f.width;
          g < w ? m = x : g = w;
        }
        const b = i.relativeDirection;
        if (d.allowReverse && (v <= -g || O <= -m)) {
          let w;
          b === "left" ? v <= -g && (w = "right") : b === "right" ? v <= -g && (w = "left") : b === "top" ? O <= -m && (w = "bottom") : b === "bottom" ? O <= -m && (w = "top") : b === "top-left" ? v <= -g && O <= -m ? w = "bottom-right" : v <= -g ? w = "top-right" : O <= -m && (w = "bottom-left") : b === "top-right" ? v <= -g && O <= -m ? w = "bottom-left" : v <= -g ? w = "top-left" : O <= -m && (w = "bottom-right") : b === "bottom-left" ? v <= -g && O <= -m ? w = "top-right" : v <= -g ? w = "bottom-right" : O <= -m && (w = "top-left") : b === "bottom-right" && (v <= -g && O <= -m ? w = "top-left" : v <= -g ? w = "bottom-left" : O <= -m && (w = "top-right"));
          const x = w;
          this.stopHandle();
          const S = this.container.querySelector(`.${this.resizeClassName}[data-position="${x}"]`);
          this.startHandle(S), this.prepareResizing(e, x), this.onMouseMove(e);
        }
        if (f.width !== g || f.height !== m) {
          const w = {
            ui: !0,
            direction: i.direction,
            relativeDirection: i.relativeDirection,
            trueDirection: i.trueDirection,
            minWidth: d.minWidth,
            minHeight: d.minHeight,
            maxWidth: d.maxWidth,
            maxHeight: d.maxHeight,
            preserveAspectRatio: d.preserveAspectRatio === !0
          };
          h.resize(g, m, w), this.notify("node:resizing", e, t);
        }
      } else if (i.action === "rotating") {
        i = i, i.rotated || (t && (t.addClass("node-rotating"), this.notify("node:rotate", e, t)), i.rotated = !0);
        const f = h.getAngle(), p = i.start - z.create(c).theta(i.center);
        let g = i.angle + p;
        d.rotateGrid && (g = At.snapToGrid(g, d.rotateGrid)), g = Pt.normalize(g), f !== g && (h.rotate(g, { absolute: !0 }), this.notify("node:rotating", e, t));
      }
    }
  }
  onMouseUp(e) {
    const t = this.getEventData(e);
    t.action && (this.stopAction(e), this.model.stopBatch(t.action === "resizing" ? "resize" : "rotate", {
      cid: this.cid
    }));
  }
  startHandle(e) {
    if (this.handle = e || null, Ye(this.container, `${this.containerClassName}-active`), e) {
      Ye(e, `${this.containerClassName}-active-handle`);
      const t = e.getAttribute("data-position");
      if (t) {
        const i = zn.DIRECTIONS[zn.POSITIONS.indexOf(t)];
        Ye(this.container, `${this.containerClassName}-cursor-${i}`);
      }
    }
  }
  stopHandle() {
    if (Rn(this.container, `${this.containerClassName}-active`), this.handle) {
      Rn(this.handle, `${this.containerClassName}-active-handle`);
      const e = this.handle.getAttribute("data-position");
      if (e) {
        const t = zn.DIRECTIONS[zn.POSITIONS.indexOf(e)];
        Rn(this.container, `${this.containerClassName}-cursor-${t}`);
      }
      this.handle = null;
    }
  }
  startAction(e) {
    this.startHandle(e.target), this.graph.view.undelegateEvents(), this.delegateDocumentEvents(zn.documentEvents, e.data);
  }
  stopAction(e) {
    this.stopHandle(), this.undelegateDocumentEvents(), this.graph.view.delegateEvents();
    const t = this.graph.findViewByCell(this.node), i = this.getEventData(e);
    t && (t.removeClass(`node-${i.action}`), i.action === "resizing" && i.resized ? this.notify("node:resized", e, t) : i.action === "rotating" && i.rotated && this.notify("node:rotated", e, t));
  }
  notify(e, t, i, s = {}) {
    if (i) {
      const r = i.graph, o = r.view.normalizeEvent(t), l = r.snapToGrid(o.clientX, o.clientY);
      this.trigger(e, Object.assign({
        e: o,
        view: i,
        node: i.cell,
        cell: i.cell,
        x: l.x,
        y: l.y
      }, s));
    }
  }
  dispose() {
    this.stopListening(), this.remove(), this.off();
  }
}
$re([
  Rt.dispose()
], uR.prototype, "dispose", null);
var zn;
(function(n) {
  n.NODE_CLS = "has-widget-transform", n.DIRECTIONS = ["nw", "n", "ne", "e", "se", "s", "sw", "w"], n.POSITIONS = [
    "top-left",
    "top",
    "top-right",
    "right",
    "bottom-right",
    "bottom",
    "bottom-left",
    "left"
  ], n.documentEvents = {
    mousemove: "onMouseMove",
    touchmove: "onMouseMove",
    mouseup: "onMouseUp",
    touchend: "onMouseUp"
  }, n.defaultOptions = {
    minWidth: 0,
    minHeight: 0,
    maxWidth: 1 / 0,
    maxHeight: 1 / 0,
    rotateGrid: 15,
    rotatable: !0,
    preserveAspectRatio: !1,
    orthogonalResizing: !0,
    restrictedResizing: !1,
    autoScrollOnResizing: !0,
    allowReverse: !0
  };
})(zn || (zn = {}));
const Tre = `.x6-widget-transform {
  position: absolute;
  box-sizing: content-box !important;
  margin: -5px 0 0 -5px;
  padding: 4px;
  border: 1px dashed #000;
  border-radius: 5px;
  user-select: none;
  pointer-events: none;
}
.x6-widget-transform > div {
  position: absolute;
  box-sizing: border-box;
  background-color: #fff;
  border: 1px solid #000;
  transition: background-color 0.2s;
  pointer-events: auto;
  -webkit-user-drag: none;
  user-drag: none;
  /* stylelint-disable-line */
}
.x6-widget-transform > div:hover {
  background-color: #d3d3d3;
}
.x6-widget-transform-cursor-n {
  cursor: n-resize;
}
.x6-widget-transform-cursor-s {
  cursor: s-resize;
}
.x6-widget-transform-cursor-e {
  cursor: e-resize;
}
.x6-widget-transform-cursor-w {
  cursor: w-resize;
}
.x6-widget-transform-cursor-ne {
  cursor: ne-resize;
}
.x6-widget-transform-cursor-nw {
  cursor: nw-resize;
}
.x6-widget-transform-cursor-se {
  cursor: se-resize;
}
.x6-widget-transform-cursor-sw {
  cursor: sw-resize;
}
.x6-widget-transform-resize {
  width: 10px;
  height: 10px;
  border-radius: 6px;
}
.x6-widget-transform-resize[data-position='top-left'] {
  top: -5px;
  left: -5px;
}
.x6-widget-transform-resize[data-position='top-right'] {
  top: -5px;
  right: -5px;
}
.x6-widget-transform-resize[data-position='bottom-left'] {
  bottom: -5px;
  left: -5px;
}
.x6-widget-transform-resize[data-position='bottom-right'] {
  right: -5px;
  bottom: -5px;
}
.x6-widget-transform-resize[data-position='top'] {
  top: -5px;
  left: 50%;
  margin-left: -5px;
}
.x6-widget-transform-resize[data-position='bottom'] {
  bottom: -5px;
  left: 50%;
  margin-left: -5px;
}
.x6-widget-transform-resize[data-position='left'] {
  top: 50%;
  left: -5px;
  margin-top: -5px;
}
.x6-widget-transform-resize[data-position='right'] {
  top: 50%;
  right: -5px;
  margin-top: -5px;
}
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='top'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='bottom'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='left'],
.x6-widget-transform.prevent-aspect-ratio .x6-widget-transform-resize[data-position='right'] {
  display: none;
}
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='bottom'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='left'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='right'],
.x6-widget-transform.no-orth-resize .x6-widget-transform-resize[data-position='top'] {
  display: none;
}
.x6-widget-transform.no-resize .x6-widget-transform-resize {
  display: none;
}
.x6-widget-transform-rotate {
  top: -20px;
  left: -20px;
  width: 12px;
  height: 12px;
  border-radius: 6px;
  cursor: crosshair;
}
.x6-widget-transform.no-rotate .x6-widget-transform-rotate {
  display: none;
}
.x6-widget-transform-active {
  border-color: transparent;
  pointer-events: all;
}
.x6-widget-transform-active > div {
  display: none;
}
.x6-widget-transform-active > .x6-widget-transform-active-handle {
  display: block;
  background-color: #808080;
}
`;
Pe.prototype.createTransformWidget = function(n) {
  const e = this.getPlugin("transform");
  return e && e.createWidget(n), this;
};
Pe.prototype.clearTransformWidgets = function() {
  const n = this.getPlugin("transform");
  return n && n.clearWidgets(), this;
};
var _re = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Ru extends gn {
  constructor(e = {}) {
    super(), this.name = "transform", this.widgets = /* @__PURE__ */ new Map(), this.disabled = !1, this.options = e, h0(this.name, Tre);
  }
  init(e) {
    this.graph = e, !this.disabled && this.startListening();
  }
  startListening() {
    this.graph.on("node:click", this.onNodeClick, this), this.graph.on("blank:mousedown", this.onBlankMouseDown, this);
  }
  stopListening() {
    this.graph.off("node:click", this.onNodeClick, this), this.graph.off("blank:mousedown", this.onBlankMouseDown, this);
  }
  enable() {
    this.disabled && (this.disabled = !1, this.startListening());
  }
  disable() {
    this.disabled || (this.disabled = !0, this.stopListening());
  }
  isEnabled() {
    return !this.disabled;
  }
  createWidget(e) {
    this.clearWidgets();
    const t = this.createTransform(e);
    t && (this.widgets.set(e, t), t.on("*", (i, s) => {
      this.trigger(i, s), this.graph.trigger(i, s);
    }));
  }
  onNodeClick({ node: e }) {
    this.createWidget(e);
  }
  onBlankMouseDown() {
    this.clearWidgets();
  }
  createTransform(e) {
    const t = this.getTransformOptions(e);
    return t.resizable || t.rotatable ? new uR(t, e, this.graph) : null;
  }
  getTransformOptions(e) {
    this.options.resizing || (this.options.resizing = {
      enabled: !1
    }), this.options.rotating || (this.options.rotating = {
      enabled: !1
    }), typeof this.options.resizing == "boolean" && (this.options.resizing = {
      enabled: this.options.resizing
    }), typeof this.options.rotating == "boolean" && (this.options.rotating = {
      enabled: this.options.rotating
    });
    const t = Ru.parseOptionGroup(this.graph, e, this.options.resizing), i = Ru.parseOptionGroup(this.graph, e, this.options.rotating);
    return {
      resizable: !!t.enabled,
      minWidth: t.minWidth || 0,
      maxWidth: t.maxWidth || Number.MAX_SAFE_INTEGER,
      minHeight: t.minHeight || 0,
      maxHeight: t.maxHeight || Number.MAX_SAFE_INTEGER,
      orthogonalResizing: typeof t.orthogonal == "boolean" ? t.orthogonal : !0,
      restrictedResizing: !!t.restrict,
      autoScrollOnResizing: typeof t.autoScroll == "boolean" ? t.autoScroll : !0,
      preserveAspectRatio: !!t.preserveAspectRatio,
      allowReverse: typeof t.allowReverse == "boolean" ? t.allowReverse : !0,
      rotatable: !!i.enabled,
      rotateGrid: i.grid || 15
    };
  }
  clearWidgets() {
    this.widgets.forEach((e, t) => {
      this.graph.getCellById(t.id) && e.dispose();
    }), this.widgets.clear();
  }
  dispose() {
    this.clearWidgets(), this.stopListening(), this.off(), d0(this.name);
  }
}
_re([
  gn.dispose()
], Ru.prototype, "dispose", null);
(function(n) {
  function e(t, i, s) {
    const r = {};
    return Object.keys(s || {}).forEach((o) => {
      const l = s[o];
      r[o] = typeof l == "function" ? l.call(t, i) : l;
    }), r;
  }
  n.parseOptionGroup = e;
})(Ru || (Ru = {}));
var Mre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class hR extends Rt {
  get graph() {
    return this.options.graph;
  }
  get boxClassName() {
    return this.prefixClassName(Ji.classNames.box);
  }
  get $boxes() {
    return Ree(this.container, this.boxClassName);
  }
  get handleOptions() {
    return this.options;
  }
  constructor(e) {
    super(), this.options = e, this.options.model && (this.options.collection = this.options.model.collection), this.options.collection ? this.collection = this.options.collection : (this.collection = new im([], {
      comparator: Ji.depthComparator
    }), this.options.collection = this.collection), this.boxCount = 0, this.createContainer(), this.startListening();
  }
  startListening() {
    const e = this.graph, t = this.collection;
    this.delegateEvents({
      [`mousedown .${this.boxClassName}`]: "onSelectionBoxMouseDown",
      [`touchstart .${this.boxClassName}`]: "onSelectionBoxMouseDown"
    }, !0), e.on("scale", this.onGraphTransformed, this), e.on("translate", this.onGraphTransformed, this), e.model.on("updated", this.onModelUpdated, this), t.on("added", this.onCellAdded, this), t.on("removed", this.onCellRemoved, this), t.on("reseted", this.onReseted, this), t.on("updated", this.onCollectionUpdated, this), t.on("node:change:position", this.onNodePositionChanged, this), t.on("cell:changed", this.onCellChanged, this);
  }
  stopListening() {
    const e = this.graph, t = this.collection;
    this.undelegateEvents(), e.off("scale", this.onGraphTransformed, this), e.off("translate", this.onGraphTransformed, this), e.model.off("updated", this.onModelUpdated, this), t.off("added", this.onCellAdded, this), t.off("removed", this.onCellRemoved, this), t.off("reseted", this.onReseted, this), t.off("updated", this.onCollectionUpdated, this), t.off("node:change:position", this.onNodePositionChanged, this), t.off("cell:changed", this.onCellChanged, this);
  }
  onRemove() {
    this.stopListening();
  }
  onGraphTransformed() {
    this.updateSelectionBoxes();
  }
  onCellChanged() {
    this.updateSelectionBoxes();
  }
  onNodePositionChanged({ node: e, options: t }) {
    const { showNodeSelectionBox: i, pointerEvents: s } = this.options, { ui: r, selection: o, translateBy: l, snapped: a } = t, c = (i !== !0 || s && this.getPointerEventsValue(s) === "none") && !this.translating && !o, u = r && l && e.id === l;
    if (c && (u || a)) {
      this.translating = !0;
      const h = e.position(), d = e.previous("position"), f = h.x - d.x, p = h.y - d.y;
      (f !== 0 || p !== 0) && this.translateSelectedNodes(f, p, e, t), this.translating = !1;
    }
  }
  onModelUpdated({ removed: e }) {
    e && e.length && this.unselect(e);
  }
  isEmpty() {
    return this.length <= 0;
  }
  isSelected(e) {
    return this.collection.has(e);
  }
  get length() {
    return this.collection.length;
  }
  get cells() {
    return this.collection.toArray();
  }
  select(e, t = {}) {
    t.dryrun = !0;
    const i = this.filter(Array.isArray(e) ? e : [e]);
    return this.collection.add(i, t), this;
  }
  unselect(e, t = {}) {
    return t.dryrun = !0, this.collection.remove(Array.isArray(e) ? e : [e], t), this;
  }
  reset(e, t = {}) {
    if (e) {
      if (t.batch) {
        const c = this.filter(Array.isArray(e) ? e : [e]);
        return this.collection.reset(c, Object.assign(Object.assign({}, t), { ui: !0 })), this;
      }
      const i = this.cells, s = this.filter(Array.isArray(e) ? e : [e]), r = {}, o = {};
      i.forEach((c) => r[c.id] = c), s.forEach((c) => o[c.id] = c);
      const l = [], a = [];
      return s.forEach((c) => {
        r[c.id] || l.push(c);
      }), i.forEach((c) => {
        o[c.id] || a.push(c);
      }), a.length && this.unselect(a, Object.assign(Object.assign({}, t), { ui: !0 })), l.length && this.select(l, Object.assign(Object.assign({}, t), { ui: !0 })), a.length === 0 && l.length === 0 && this.updateContainer(), this;
    }
    return this.clean(t);
  }
  clean(e = {}) {
    return this.length && (e.batch === !1 ? this.unselect(this.cells, e) : this.collection.reset([], Object.assign(Object.assign({}, e), { ui: !0 }))), this;
  }
  setFilter(e) {
    this.options.filter = e;
  }
  setContent(e) {
    this.options.content = e;
  }
  startSelecting(e) {
    e = this.normalizeEvent(e), this.clean();
    let t, i;
    const s = this.graph.container;
    if (e.offsetX != null && e.offsetY != null && s.contains(e.target))
      t = e.offsetX, i = e.offsetY;
    else {
      const r = _y(s), o = s.scrollLeft, l = s.scrollTop;
      t = e.clientX - r.left + window.pageXOffset + o, i = e.clientY - r.top + window.pageYOffset + l;
    }
    Zn(this.container, {
      top: i,
      left: t,
      width: 1,
      height: 1
    }), this.setEventData(e, {
      action: "selecting",
      clientX: e.clientX,
      clientY: e.clientY,
      offsetX: t,
      offsetY: i,
      scrollerX: 0,
      scrollerY: 0,
      moving: !1
    }), this.delegateDocumentEvents(Ji.documentEvents, e.data);
  }
  filter(e) {
    const t = this.options.filter;
    return e.filter((i) => Array.isArray(t) ? t.some((s) => typeof s == "string" ? i.shape === s : i.id === s.id) : typeof t == "function" ? Ze(t, this.graph, i) : !0);
  }
  stopSelecting(e) {
    const t = this.graph, i = this.getEventData(e);
    switch (i.action) {
      case "selecting": {
        let r = pte(this.container), o = gte(this.container);
        const l = _y(this.container), a = t.pageToLocal(l.left, l.top), c = t.transform.getScale();
        r /= c.sx, o /= c.sy;
        const u = new ye(a.x, a.y, r, o), h = this.getCellViewsInArea(u).map((d) => d.cell);
        this.reset(h, { batch: !0 }), this.hideRubberband();
        break;
      }
      case "translating": {
        const r = t.snapToGrid(e.clientX, e.clientY);
        if (!this.options.following) {
          const o = i;
          this.updateSelectedNodesPosition({
            dx: o.clientX - o.originX,
            dy: o.clientY - o.originY
          });
        }
        this.graph.model.stopBatch("move-selection"), this.notifyBoxEvent("box:mouseup", e, r.x, r.y);
        break;
      }
      default: {
        this.clean();
        break;
      }
    }
  }
  onMouseUp(e) {
    this.getEventData(e).action && (this.stopSelecting(e), this.undelegateDocumentEvents());
  }
  onSelectionBoxMouseDown(e) {
    this.options.following || e.stopPropagation();
    const t = this.normalizeEvent(e);
    this.options.movable && this.startTranslating(t);
    const i = this.getCellViewFromElem(t.target);
    this.setEventData(t, { activeView: i });
    const s = this.graph.snapToGrid(t.clientX, t.clientY);
    this.notifyBoxEvent("box:mousedown", t, s.x, s.y), this.delegateDocumentEvents(Ji.documentEvents, t.data);
  }
  startTranslating(e) {
    this.graph.model.startBatch("move-selection");
    const t = this.graph.snapToGrid(e.clientX, e.clientY);
    this.setEventData(e, {
      action: "translating",
      clientX: t.x,
      clientY: t.y,
      originX: t.x,
      originY: t.y
    });
  }
  getRestrictArea() {
    const e = this.graph.options.translating.restrict, t = typeof e == "function" ? Ze(e, this.graph, null) : e;
    return typeof t == "number" ? this.graph.transform.getGraphArea().inflate(t) : t === !0 ? this.graph.transform.getGraphArea() : t || null;
  }
  getSelectionOffset(e, t) {
    let i = e.x - t.clientX, s = e.y - t.clientY;
    const r = this.getRestrictArea();
    if (r) {
      const o = this.collection.toArray(), l = gt.getCellsBBox(o, { deep: !0 }) || ye.create(), a = r.x - l.x, c = r.y - l.y, u = r.x + r.width - (l.x + l.width), h = r.y + r.height - (l.y + l.height);
      if (i < a && (i = a), s < c && (s = c), u < i && (i = u), h < s && (s = h), !this.options.following) {
        const d = e.x - t.originX, f = e.y - t.originY;
        i = d <= a || d >= u ? 0 : i, s = f <= c || f >= h ? 0 : s;
      }
    }
    return {
      dx: i,
      dy: s
    };
  }
  updateElementPosition(e, t, i) {
    const s = Zn(e, "left"), r = Zn(e, "top"), o = s ? parseFloat(s) : 0, l = r ? parseFloat(r) : 0;
    Zn(e, "left", o + t), Zn(e, "top", l + i);
  }
  updateSelectedNodesPosition(e) {
    const { dx: t, dy: i } = e;
    if (t || i)
      if (this.translateSelectedNodes(t, i), this.boxesUpdated)
        this.collection.length > 1 && this.updateSelectionBoxes();
      else {
        const s = this.graph.transform.getScale();
        for (let r = 0, o = this.$boxes, l = o.length; r < l; r += 1)
          this.updateElementPosition(o[r], t * s.sx, i * s.sy);
        this.updateElementPosition(this.selectionContainer, t * s.sx, i * s.sy);
      }
  }
  autoScrollGraph(e, t) {
    const i = this.graph.getPlugin("scroller");
    return i ? i.autoScroll(e, t) : { scrollerX: 0, scrollerY: 0 };
  }
  adjustSelection(e) {
    const t = this.normalizeEvent(e), i = this.getEventData(t);
    switch (i.action) {
      case "selecting": {
        const r = i;
        r.moving !== !0 && (Jh(this.container, this.graph.container), this.showRubberband(), r.moving = !0);
        const { scrollerX: o, scrollerY: l } = this.autoScrollGraph(t.clientX, t.clientY);
        r.scrollerX += o, r.scrollerY += l;
        const a = t.clientX - r.clientX + r.scrollerX, c = t.clientY - r.clientY + r.scrollerY, u = parseInt(Zn(this.container, "left") || "0", 10), h = parseInt(Zn(this.container, "top") || "0", 10);
        Zn(this.container, {
          left: a < 0 ? r.offsetX + a : u,
          top: c < 0 ? r.offsetY + c : h,
          width: Math.abs(a),
          height: Math.abs(c)
        });
        break;
      }
      case "translating": {
        const r = this.graph.snapToGrid(t.clientX, t.clientY), o = i, l = this.getSelectionOffset(r, o);
        this.options.following ? this.updateSelectedNodesPosition(l) : this.updateContainerPosition(l), l.dx && (o.clientX = r.x), l.dy && (o.clientY = r.y), this.notifyBoxEvent("box:mousemove", e, r.x, r.y);
        break;
      }
    }
    this.boxesUpdated = !1;
  }
  translateSelectedNodes(e, t, i, s) {
    const r = {}, o = [];
    if (i && (r[i.id] = !0), this.collection.toArray().forEach((l) => {
      l.getDescendants({ deep: !0 }).forEach((a) => {
        r[a.id] = !0;
      });
    }), s && s.translateBy) {
      const l = this.graph.getCellById(s.translateBy);
      l && (r[l.id] = !0, l.getDescendants({ deep: !0 }).forEach((a) => {
        r[a.id] = !0;
      }), o.push(l));
    }
    this.collection.toArray().forEach((l) => {
      if (!r[l.id]) {
        const a = Object.assign(Object.assign({}, s), { selection: this.cid, exclude: o });
        l.translate(e, t, a), this.graph.model.getConnectedEdges(l).forEach((c) => {
          r[c.id] || (c.translate(e, t, a), r[c.id] = !0);
        });
      }
    });
  }
  getCellViewsInArea(e) {
    const t = this.graph, i = {
      strict: this.options.strict
    };
    let s = [];
    return this.options.rubberNode && (s = s.concat(t.model.getNodesInArea(e, i).map((r) => t.renderer.findViewByCell(r)).filter((r) => r != null))), this.options.rubberEdge && (s = s.concat(t.model.getEdgesInArea(e, i).map((r) => t.renderer.findViewByCell(r)).filter((r) => r != null))), s;
  }
  notifyBoxEvent(e, t, i, s) {
    const o = this.getEventData(t).activeView;
    this.trigger(e, { e: t, view: o, x: i, y: s, cell: o.cell });
  }
  getSelectedClassName(e) {
    return this.prefixClassName(`${e.isNode() ? "node" : "edge"}-selected`);
  }
  addCellSelectedClassName(e) {
    const t = this.graph.renderer.findViewByCell(e);
    t && t.addClass(this.getSelectedClassName(e));
  }
  removeCellUnSelectedClassName(e) {
    const t = this.graph.renderer.findViewByCell(e);
    t && t.removeClass(this.getSelectedClassName(e));
  }
  destroySelectionBox(e) {
    this.removeCellUnSelectedClassName(e), this.canShowSelectionBox(e) && (no(this.container.querySelector(`[data-cell-id="${e.id}"]`)), this.$boxes.length === 0 && this.hide(), this.boxCount = Math.max(0, this.boxCount - 1));
  }
  destroyAllSelectionBoxes(e) {
    e.forEach((t) => this.removeCellUnSelectedClassName(t)), this.hide(), no(this.$boxes), this.boxCount = 0;
  }
  hide() {
    Rn(this.container, this.prefixClassName(Ji.classNames.rubberband)), Rn(this.container, this.prefixClassName(Ji.classNames.selected));
  }
  showRubberband() {
    Ye(this.container, this.prefixClassName(Ji.classNames.rubberband));
  }
  hideRubberband() {
    Rn(this.container, this.prefixClassName(Ji.classNames.rubberband));
  }
  showSelected() {
    pw(this.container, "style"), Ye(this.container, this.prefixClassName(Ji.classNames.selected));
  }
  createContainer() {
    this.container = document.createElement("div"), Ye(this.container, this.prefixClassName(Ji.classNames.root)), this.options.className && Ye(this.container, this.options.className), this.selectionContainer = document.createElement("div"), Ye(this.selectionContainer, this.prefixClassName(Ji.classNames.inner)), this.selectionContent = document.createElement("div"), Ye(this.selectionContent, this.prefixClassName(Ji.classNames.content)), Xl(this.selectionContainer, this.selectionContent), St(this.selectionContainer, "data-selection-length", this.collection.length), U_(this.container, this.selectionContainer);
  }
  updateContainerPosition(e) {
    (e.dx || e.dy) && this.updateElementPosition(this.selectionContainer, e.dx, e.dy);
  }
  updateContainer() {
    const e = { x: 1 / 0, y: 1 / 0 }, t = { x: 0, y: 0 };
    this.collection.toArray().filter((r) => this.canShowSelectionBox(r)).forEach((r) => {
      const o = this.graph.renderer.findViewByCell(r);
      if (o) {
        const l = o.getBBox({
          useCellGeometry: !0
        });
        e.x = Math.min(e.x, l.x), e.y = Math.min(e.y, l.y), t.x = Math.max(t.x, l.x + l.width), t.y = Math.max(t.y, l.y + l.height);
      }
    }), Zn(this.selectionContainer, {
      position: "absolute",
      pointerEvents: "none",
      left: e.x,
      top: e.y,
      width: t.x - e.x,
      height: t.y - e.y
    }), St(this.selectionContainer, "data-selection-length", this.collection.length);
    const s = this.options.content;
    if (s)
      if (typeof s == "function") {
        const r = Ze(s, this.graph, this, this.selectionContent);
        r && (this.selectionContent.innerHTML = r);
      } else
        this.selectionContent.innerHTML = s;
    this.collection.length > 0 && !this.container.parentNode ? Jh(this.container, this.graph.container) : this.collection.length <= 0 && this.container.parentNode && this.container.parentNode.removeChild(this.container);
  }
  canShowSelectionBox(e) {
    return e.isNode() && this.options.showNodeSelectionBox === !0 || e.isEdge() && this.options.showEdgeSelectionBox === !0;
  }
  getPointerEventsValue(e) {
    return typeof e == "string" ? e : e(this.cells);
  }
  createSelectionBox(e) {
    if (this.addCellSelectedClassName(e), this.canShowSelectionBox(e)) {
      const t = this.graph.renderer.findViewByCell(e);
      if (t) {
        const i = t.getBBox({
          useCellGeometry: !0
        }), s = this.boxClassName, r = document.createElement("div"), o = this.options.pointerEvents;
        Ye(r, s), Ye(r, `${s}-${e.isNode() ? "node" : "edge"}`), St(r, "data-cell-id", e.id), Zn(r, {
          position: "absolute",
          left: i.x,
          top: i.y,
          width: i.width,
          height: i.height,
          pointerEvents: o ? this.getPointerEventsValue(o) : "auto"
        }), Jh(r, this.container), this.showSelected(), this.boxCount += 1;
      }
    }
  }
  updateSelectionBoxes() {
    this.collection.length > 0 && (this.boxesUpdated = !0, this.confirmUpdate());
  }
  confirmUpdate() {
    if (this.boxCount) {
      this.hide();
      for (let e = 0, t = this.$boxes, i = t.length; e < i; e += 1) {
        const s = t[e], r = St(s, "data-cell-id");
        no(s), this.boxCount -= 1;
        const o = this.collection.get(r);
        o && this.createSelectionBox(o);
      }
      this.updateContainer();
    }
    return 0;
  }
  getCellViewFromElem(e) {
    const t = e.getAttribute("data-cell-id");
    if (t) {
      const i = this.collection.get(t);
      if (i)
        return this.graph.renderer.findViewByCell(i);
    }
    return null;
  }
  onCellRemoved({ cell: e }) {
    this.destroySelectionBox(e), this.updateContainer();
  }
  onReseted({ previous: e, current: t }) {
    this.destroyAllSelectionBoxes(e), t.forEach((i) => {
      this.listenCellRemoveEvent(i), this.createSelectionBox(i);
    }), this.updateContainer();
  }
  onCellAdded({ cell: e }) {
    this.listenCellRemoveEvent(e), this.createSelectionBox(e), this.updateContainer();
  }
  listenCellRemoveEvent(e) {
    e.off("removed", this.onCellRemoved, this), e.on("removed", this.onCellRemoved, this);
  }
  onCollectionUpdated({ added: e, removed: t, options: i }) {
    e.forEach((r) => {
      this.trigger("cell:selected", { cell: r, options: i }), r.isNode() ? this.trigger("node:selected", { cell: r, options: i, node: r }) : r.isEdge() && this.trigger("edge:selected", { cell: r, options: i, edge: r });
    }), t.forEach((r) => {
      this.trigger("cell:unselected", { cell: r, options: i }), r.isNode() ? this.trigger("node:unselected", { cell: r, options: i, node: r }) : r.isEdge() && this.trigger("edge:unselected", { cell: r, options: i, edge: r });
    });
    const s = {
      added: e,
      removed: t,
      options: i,
      selected: this.cells.filter((r) => !!this.graph.getCellById(r.id))
    };
    this.trigger("selection:changed", s);
  }
  // #endregion
  dispose() {
    this.clean(), this.remove(), this.off();
  }
}
Mre([
  Rt.dispose()
], hR.prototype, "dispose", null);
var Ji;
(function(n) {
  const e = "widget-selection";
  n.classNames = {
    root: e,
    inner: `${e}-inner`,
    box: `${e}-box`,
    content: `${e}-content`,
    rubberband: `${e}-rubberband`,
    selected: `${e}-selected`
  }, n.documentEvents = {
    mousemove: "adjustSelection",
    touchmove: "adjustSelection",
    mouseup: "onMouseUp",
    touchend: "onMouseUp",
    touchcancel: "onMouseUp"
  };
  function t(i) {
    return i.getAncestors().length;
  }
  n.depthComparator = t;
})(Ji || (Ji = {}));
const Rre = `.x6-widget-selection {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
  width: 0;
  height: 0;
  touch-action: none;
}
.x6-widget-selection-rubberband {
  display: block;
  overflow: visible;
  opacity: 0.3;
}
.x6-widget-selection-selected {
  display: block;
}
.x6-widget-selection-box {
  cursor: move;
}
.x6-widget-selection-inner[data-selection-length='0'],
.x6-widget-selection-inner[data-selection-length='1'] {
  display: none;
}
.x6-widget-selection-content {
  position: absolute;
  top: 100%;
  right: -20px;
  left: -20px;
  margin-top: 30px;
  padding: 6px;
  line-height: 14px;
  text-align: center;
  border-radius: 6px;
}
.x6-widget-selection-content:empty {
  display: none;
}
.x6-widget-selection-rubberband {
  background-color: #3498db;
  border: 2px solid #2980b9;
}
.x6-widget-selection-box {
  box-sizing: content-box !important;
  margin-top: -4px;
  margin-left: -4px;
  padding-right: 4px;
  padding-bottom: 4px;
  border: 2px dashed #feb663;
  box-shadow: 2px 2px 5px #d3d3d3;
}
.x6-widget-selection-inner {
  box-sizing: content-box !important;
  margin-top: -8px;
  margin-left: -8px;
  padding-right: 12px;
  padding-bottom: 12px;
  border: 2px solid #feb663;
  box-shadow: 2px 2px 5px #d3d3d3;
}
.x6-widget-selection-content {
  color: #fff;
  font-size: 10px;
  background-color: #6a6b8a;
}
`;
Pe.prototype.isSelectionEnabled = function() {
  const n = this.getPlugin("selection");
  return n ? n.isEnabled() : !1;
};
Pe.prototype.enableSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.enable(), this;
};
Pe.prototype.disableSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.disable(), this;
};
Pe.prototype.toggleSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleEnabled(n), this;
};
Pe.prototype.isMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n ? n.isMultipleSelection() : !1;
};
Pe.prototype.enableMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.enableMultipleSelection(), this;
};
Pe.prototype.disableMultipleSelection = function() {
  const n = this.getPlugin("selection");
  return n && n.disableMultipleSelection(), this;
};
Pe.prototype.toggleMultipleSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleMultipleSelection(n), this;
};
Pe.prototype.isSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n ? n.isSelectionMovable() : !1;
};
Pe.prototype.enableSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n && n.enableSelectionMovable(), this;
};
Pe.prototype.disableSelectionMovable = function() {
  const n = this.getPlugin("selection");
  return n && n.disableSelectionMovable(), this;
};
Pe.prototype.toggleSelectionMovable = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleSelectionMovable(n), this;
};
Pe.prototype.isRubberbandEnabled = function() {
  const n = this.getPlugin("selection");
  return n ? n.isRubberbandEnabled() : !1;
};
Pe.prototype.enableRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.enableRubberband(), this;
};
Pe.prototype.disableRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.disableRubberband(), this;
};
Pe.prototype.toggleRubberband = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleRubberband(n), this;
};
Pe.prototype.isStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n ? n.isStrictRubberband() : !1;
};
Pe.prototype.enableStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.enableStrictRubberband(), this;
};
Pe.prototype.disableStrictRubberband = function() {
  const n = this.getPlugin("selection");
  return n && n.disableStrictRubberband(), this;
};
Pe.prototype.toggleStrictRubberband = function(n) {
  const e = this.getPlugin("selection");
  return e && e.toggleStrictRubberband(n), this;
};
Pe.prototype.setRubberbandModifiers = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setRubberbandModifiers(n), this;
};
Pe.prototype.setSelectionFilter = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setSelectionFilter(n), this;
};
Pe.prototype.setSelectionDisplayContent = function(n) {
  const e = this.getPlugin("selection");
  return e && e.setSelectionDisplayContent(n), this;
};
Pe.prototype.isSelectionEmpty = function() {
  const n = this.getPlugin("selection");
  return n ? n.isEmpty() : !0;
};
Pe.prototype.cleanSelection = function(n) {
  const e = this.getPlugin("selection");
  return e && e.clean(n), this;
};
Pe.prototype.resetSelection = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.reset(n, e), this;
};
Pe.prototype.getSelectedCells = function() {
  const n = this.getPlugin("selection");
  return n ? n.getSelectedCells() : [];
};
Pe.prototype.getSelectedCellCount = function() {
  const n = this.getPlugin("selection");
  return n ? n.getSelectedCellCount() : 0;
};
Pe.prototype.isSelected = function(n) {
  const e = this.getPlugin("selection");
  return e ? e.isSelected(n) : !1;
};
Pe.prototype.select = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.select(n, e), this;
};
Pe.prototype.unselect = function(n, e) {
  const t = this.getPlugin("selection");
  return t && t.unselect(n, e), this;
};
var Nre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class jd extends gn {
  get rubberbandDisabled() {
    return this.options.enabled !== !0 || this.options.rubberband !== !0;
  }
  get disabled() {
    return this.options.enabled !== !0;
  }
  get length() {
    return this.selectionImpl.length;
  }
  get cells() {
    return this.selectionImpl.cells;
  }
  constructor(e = {}) {
    super(), this.name = "selection", this.movedMap = /* @__PURE__ */ new WeakMap(), this.unselectMap = /* @__PURE__ */ new WeakMap(), this.options = Object.assign(Object.assign({ enabled: !0 }, jd.defaultOptions), e), h0(this.name, Rre);
  }
  init(e) {
    this.graph = e, this.selectionImpl = new hR(Object.assign(Object.assign({}, this.options), { graph: e })), this.setup(), this.startListening();
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  isMultipleSelection() {
    return this.isMultiple();
  }
  enableMultipleSelection() {
    return this.enableMultiple(), this;
  }
  disableMultipleSelection() {
    return this.disableMultiple(), this;
  }
  toggleMultipleSelection(e) {
    return e != null ? e !== this.isMultipleSelection() && (e ? this.enableMultipleSelection() : this.disableMultipleSelection()) : this.isMultipleSelection() ? this.disableMultipleSelection() : this.enableMultipleSelection(), this;
  }
  isSelectionMovable() {
    return this.options.movable !== !1;
  }
  enableSelectionMovable() {
    return this.selectionImpl.options.movable = !0, this;
  }
  disableSelectionMovable() {
    return this.selectionImpl.options.movable = !1, this;
  }
  toggleSelectionMovable(e) {
    return e != null ? e !== this.isSelectionMovable() && (e ? this.enableSelectionMovable() : this.disableSelectionMovable()) : this.isSelectionMovable() ? this.disableSelectionMovable() : this.enableSelectionMovable(), this;
  }
  isRubberbandEnabled() {
    return !this.rubberbandDisabled;
  }
  enableRubberband() {
    return this.rubberbandDisabled && (this.options.rubberband = !0), this;
  }
  disableRubberband() {
    return this.rubberbandDisabled || (this.options.rubberband = !1), this;
  }
  toggleRubberband(e) {
    return e != null ? e !== this.isRubberbandEnabled() && (e ? this.enableRubberband() : this.disableRubberband()) : this.isRubberbandEnabled() ? this.disableRubberband() : this.enableRubberband(), this;
  }
  isStrictRubberband() {
    return this.selectionImpl.options.strict === !0;
  }
  enableStrictRubberband() {
    return this.selectionImpl.options.strict = !0, this;
  }
  disableStrictRubberband() {
    return this.selectionImpl.options.strict = !1, this;
  }
  toggleStrictRubberband(e) {
    return e != null ? e !== this.isStrictRubberband() && (e ? this.enableStrictRubberband() : this.disableStrictRubberband()) : this.isStrictRubberband() ? this.disableStrictRubberband() : this.enableStrictRubberband(), this;
  }
  setRubberbandModifiers(e) {
    this.setModifiers(e);
  }
  setSelectionFilter(e) {
    return this.setFilter(e), this;
  }
  setSelectionDisplayContent(e) {
    return this.setContent(e), this;
  }
  isEmpty() {
    return this.length <= 0;
  }
  clean(e = {}) {
    return this.selectionImpl.clean(e), this;
  }
  reset(e, t = {}) {
    return this.selectionImpl.reset(e ? this.getCells(e) : [], t), this;
  }
  getSelectedCells() {
    return this.cells;
  }
  getSelectedCellCount() {
    return this.length;
  }
  isSelected(e) {
    return this.selectionImpl.isSelected(e);
  }
  select(e, t = {}) {
    const i = this.getCells(e);
    return i.length && (this.isMultiple() ? this.selectionImpl.select(i, t) : this.reset(i.slice(0, 1), t)), this;
  }
  unselect(e, t = {}) {
    return this.selectionImpl.unselect(this.getCells(e), t), this;
  }
  // #endregion
  setup() {
    this.selectionImpl.on("*", (e, t) => {
      this.trigger(e, t), this.graph.trigger(e, t);
    });
  }
  startListening() {
    this.graph.on("blank:mousedown", this.onBlankMouseDown, this), this.graph.on("blank:click", this.onBlankClick, this), this.graph.on("cell:mousemove", this.onCellMouseMove, this), this.graph.on("cell:mouseup", this.onCellMouseUp, this), this.selectionImpl.on("box:mousedown", this.onBoxMouseDown, this);
  }
  stopListening() {
    this.graph.off("blank:mousedown", this.onBlankMouseDown, this), this.graph.off("blank:click", this.onBlankClick, this), this.graph.off("cell:mousemove", this.onCellMouseMove, this), this.graph.off("cell:mouseup", this.onCellMouseUp, this), this.selectionImpl.off("box:mousedown", this.onBoxMouseDown, this);
  }
  onBlankMouseDown({ e }) {
    if (!this.allowBlankMouseDown(e))
      return;
    const t = this.graph.panning.allowPanning(e, !0), i = this.graph.getPlugin("scroller"), s = i && i.allowPanning(e, !0);
    (this.allowRubberband(e, !0) || this.allowRubberband(e) && !s && !t) && this.startRubberband(e);
  }
  allowBlankMouseDown(e) {
    const t = this.options.eventTypes;
    return (t == null ? void 0 : t.includes("leftMouseDown")) && e.button === 0 || (t == null ? void 0 : t.includes("mouseWheelDown")) && e.button === 1;
  }
  onBlankClick() {
    this.clean();
  }
  allowRubberband(e, t) {
    return !this.rubberbandDisabled && Rl.isMatch(e, this.options.modifiers, t);
  }
  allowMultipleSelection(e) {
    return this.isMultiple() && Rl.isMatch(e, this.options.multipleSelectionModifiers);
  }
  onCellMouseMove({ cell: e }) {
    this.movedMap.set(e, !0);
  }
  onCellMouseUp({ e, cell: t }) {
    const i = this.options;
    let s = this.disabled;
    !s && this.movedMap.has(t) && (s = i.selectCellOnMoved === !1, s || (s = i.selectNodeOnMoved === !1 && t.isNode()), s || (s = i.selectEdgeOnMoved === !1 && t.isEdge())), s || (this.allowMultipleSelection(e) ? this.unselectMap.has(t) ? this.unselectMap.delete(t) : this.isSelected(t) ? this.unselect(t) : this.select(t) : this.reset(t)), this.movedMap.delete(t);
  }
  onBoxMouseDown({ e, cell: t }) {
    this.disabled || this.allowMultipleSelection(e) && (this.unselect(t), this.unselectMap.set(t, !0));
  }
  getCells(e) {
    return (Array.isArray(e) ? e : [e]).map((t) => typeof t == "string" ? this.graph.getCellById(t) : t).filter((t) => t != null);
  }
  startRubberband(e) {
    return this.rubberbandDisabled || this.selectionImpl.startSelecting(e), this;
  }
  isMultiple() {
    return this.options.multiple !== !1;
  }
  enableMultiple() {
    return this.options.multiple = !0, this;
  }
  disableMultiple() {
    return this.options.multiple = !1, this;
  }
  setModifiers(e) {
    return this.options.modifiers = e, this;
  }
  setContent(e) {
    return this.selectionImpl.setContent(e), this;
  }
  setFilter(e) {
    return this.selectionImpl.setFilter(e), this;
  }
  dispose() {
    this.stopListening(), this.off(), this.selectionImpl.dispose(), d0(this.name);
  }
}
Nre([
  gn.dispose()
], jd.prototype, "dispose", null);
(function(n) {
  n.defaultOptions = {
    rubberband: !1,
    rubberNode: !0,
    rubberEdge: !1,
    pointerEvents: "auto",
    multiple: !0,
    multipleSelectionModifiers: ["ctrl", "meta"],
    movable: !0,
    strict: !1,
    selectCellOnMoved: !1,
    selectNodeOnMoved: !1,
    selectEdgeOnMoved: !1,
    following: !0,
    content: null,
    eventTypes: ["leftMouseDown", "mouseWheelDown"]
  };
})(jd || (jd = {}));
class Dre {
  constructor() {
    this.cells = [];
  }
  copy(e, t, i = {}) {
    this.options = Object.assign({}, i);
    const r = (ls.isModel(t) ? t : t.model).cloneSubGraph(e, i);
    this.cells = YA(Object.keys(r).map((o) => r[o]), (o) => o.isEdge() ? 2 : 1), this.serialize(i);
  }
  cut(e, t, i = {}) {
    this.copy(e, t, i), (Pe.isGraph(t) ? t.model : t).batchUpdate("cut", () => {
      e.forEach((r) => r.remove());
    });
  }
  paste(e, t = {}) {
    const i = Object.assign(Object.assign({}, this.options), t), { offset: s, edgeProps: r, nodeProps: o } = i;
    let l = 20, a = 20;
    s && (l = typeof s == "number" ? s : s.dx, a = typeof s == "number" ? s : s.dy), this.deserialize(i);
    const c = this.cells;
    c.forEach((h) => {
      h.model = null, h.removeProp("zIndex"), (l || a) && h.translate(l, a), o && h.isNode() && h.prop(o), r && h.isEdge() && h.prop(r);
    });
    const u = Pe.isGraph(e) ? e.model : e;
    return u.batchUpdate("paste", () => {
      u.addCells(this.cells);
    }), this.copy(c, e, t), c;
  }
  serialize(e) {
    e.useLocalStorage !== !1 && rd.save(this.cells);
  }
  deserialize(e) {
    if (e.useLocalStorage) {
      const t = rd.fetch();
      t && (this.cells = t);
    }
  }
  isEmpty(e = {}) {
    return e.useLocalStorage && this.deserialize(e), this.cells.length <= 0;
  }
  clean() {
    this.options = {}, this.cells = [], rd.clean();
  }
}
var rd;
(function(n) {
  const e = `${Ks.prefixCls}.clipboard.cells`;
  function t(r) {
    if (window.localStorage) {
      const o = r.map((l) => l.toJSON());
      localStorage.setItem(e, JSON.stringify(o));
    }
  }
  n.save = t;
  function i() {
    if (window.localStorage) {
      const r = localStorage.getItem(e), o = r ? JSON.parse(r) : [];
      if (o)
        return ls.fromJSON(o);
    }
  }
  n.fetch = i;
  function s() {
    window.localStorage && localStorage.removeItem(e);
  }
  n.clean = s;
})(rd || (rd = {}));
Pe.prototype.isClipboardEnabled = function() {
  const n = this.getPlugin("clipboard");
  return n ? n.isEnabled() : !1;
};
Pe.prototype.enableClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.enable(), this;
};
Pe.prototype.disableClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.disable(), this;
};
Pe.prototype.toggleClipboard = function(n) {
  const e = this.getPlugin("clipboard");
  return e && e.toggleEnabled(n), this;
};
Pe.prototype.isClipboardEmpty = function(n) {
  const e = this.getPlugin("clipboard");
  return e ? e.isEmpty(n) : !0;
};
Pe.prototype.getCellsInClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n ? n.getCellsInClipboard() : [];
};
Pe.prototype.cleanClipboard = function() {
  const n = this.getPlugin("clipboard");
  return n && n.clean(), this;
};
Pe.prototype.copy = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t && t.copy(n, e), this;
};
Pe.prototype.cut = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t && t.cut(n, e), this;
};
Pe.prototype.paste = function(n, e) {
  const t = this.getPlugin("clipboard");
  return t ? t.paste(n, e) : [];
};
var Lre = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
}, Ire = function(n, e) {
  var t = {};
  for (var i in n)
    Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var s = 0, i = Object.getOwnPropertySymbols(n); s < i.length; s++)
      e.indexOf(i[s]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[s]) && (t[i[s]] = n[i[s]]);
  return t;
};
class Bre extends gn {
  get disabled() {
    return this.options.enabled !== !0;
  }
  get cells() {
    return this.clipboardImpl.cells;
  }
  constructor(e = {}) {
    super(), this.name = "clipboard", this.options = Object.assign({ enabled: !0 }, e);
  }
  init(e) {
    this.graph = e, this.clipboardImpl = new Dre(), this.clipboardImpl.deserialize(this.options);
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  isEmpty(e = {}) {
    return this.clipboardImpl.isEmpty(e);
  }
  getCellsInClipboard() {
    return this.cells;
  }
  clean(e) {
    return (!this.disabled || e) && (this.clipboardImpl.clean(), this.notify("clipboard:changed", { cells: [] })), this;
  }
  copy(e, t = {}) {
    return this.disabled || (this.clipboardImpl.copy(e, this.graph, Object.assign(Object.assign({}, this.commonOptions), t)), this.notify("clipboard:changed", { cells: e })), this;
  }
  cut(e, t = {}) {
    return this.disabled || (this.clipboardImpl.cut(e, this.graph, Object.assign(Object.assign({}, this.commonOptions), t)), this.notify("clipboard:changed", { cells: e })), this;
  }
  paste(e = {}, t = this.graph) {
    return this.disabled ? [] : this.clipboardImpl.paste(t, Object.assign(Object.assign({}, this.commonOptions), e));
  }
  // #endregion
  get commonOptions() {
    const e = this.options;
    return Ire(e, ["enabled"]);
  }
  notify(e, t) {
    this.trigger(e, t), this.graph.trigger(e, t);
  }
  dispose() {
    this.clean(!0), this.off();
  }
}
Lre([
  gn.dispose()
], Bre.prototype, "dispose", null);
Pe.prototype.isHistoryEnabled = function() {
  const n = this.getPlugin("history");
  return n ? n.isEnabled() : !1;
};
Pe.prototype.enableHistory = function() {
  const n = this.getPlugin("history");
  return n && n.enable(), this;
};
Pe.prototype.disableHistory = function() {
  const n = this.getPlugin("history");
  return n && n.disable(), this;
};
Pe.prototype.toggleHistory = function(n) {
  const e = this.getPlugin("history");
  return e && e.toggleEnabled(n), this;
};
Pe.prototype.undo = function(n) {
  const e = this.getPlugin("history");
  return e && e.undo(n), this;
};
Pe.prototype.redo = function(n) {
  const e = this.getPlugin("history");
  return e && e.redo(n), this;
};
Pe.prototype.undoAndCancel = function(n) {
  const e = this.getPlugin("history");
  return e && e.cancel(n), this;
};
Pe.prototype.canUndo = function() {
  const n = this.getPlugin("history");
  return n ? n.canUndo() : !1;
};
Pe.prototype.canRedo = function() {
  const n = this.getPlugin("history");
  return n ? n.canRedo() : !1;
};
Pe.prototype.cleanHistory = function(n) {
  const e = this.getPlugin("history");
  return e && e.clean(n), this;
};
Pe.prototype.getHistoryStackSize = function() {
  return this.getPlugin("history").getSize();
};
Pe.prototype.getUndoStackSize = function() {
  return this.getPlugin("history").getUndoSize();
};
Pe.prototype.getRedoStackSize = function() {
  return this.getPlugin("history").getRedoSize();
};
Pe.prototype.getUndoRemainSize = function() {
  return this.getPlugin("history").getUndoRemainSize();
};
var dR = function(n, e, t, i) {
  var s = arguments.length, r = s < 3 ? e : i === null ? i = Object.getOwnPropertyDescriptor(e, t) : i, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    r = Reflect.decorate(n, e, t, i);
  else
    for (var l = n.length - 1; l >= 0; l--)
      (o = n[l]) && (r = (s < 3 ? o(r) : s > 3 ? o(e, t, r) : o(e, t)) || r);
  return s > 3 && r && Object.defineProperty(e, t, r), r;
};
class Vd extends gn {
  constructor(e = {}) {
    super(), this.name = "history", this.batchCommands = null, this.batchLevel = 0, this.lastBatchIndex = -1, this.freezed = !1, this.stackSize = 0, this.handlers = [];
    const { stackSize: t = 0 } = e;
    this.stackSize = t, this.options = dn.getOptions(e), this.validator = new Vd.Validator({
      history: this,
      cancelInvalid: this.options.cancelInvalid
    });
  }
  init(e) {
    this.graph = e, this.model = this.graph.model, this.clean(), this.startListening();
  }
  // #region api
  isEnabled() {
    return !this.disabled;
  }
  enable() {
    this.disabled && (this.options.enabled = !0);
  }
  disable() {
    this.disabled || (this.options.enabled = !1);
  }
  toggleEnabled(e) {
    return e != null ? e !== this.isEnabled() && (e ? this.enable() : this.disable()) : this.isEnabled() ? this.disable() : this.enable(), this;
  }
  undo(e = {}) {
    if (!this.disabled) {
      const t = this.undoStack.pop();
      t && (this.revertCommand(t, e), this.redoStack.push(t), this.notify("undo", t, e));
    }
    return this;
  }
  redo(e = {}) {
    if (!this.disabled) {
      const t = this.redoStack.pop();
      t && (this.applyCommand(t, e), this.undoStackPush(t), this.notify("redo", t, e));
    }
    return this;
  }
  /**
   * Same as `undo()` but does not store the undo-ed command to the
   * `redoStack`. Canceled command therefore cannot be redo-ed.
   */
  cancel(e = {}) {
    if (!this.disabled) {
      const t = this.undoStack.pop();
      t && (this.revertCommand(t, e), this.redoStack = [], this.notify("cancel", t, e));
    }
    return this;
  }
  getSize() {
    return this.stackSize;
  }
  getUndoRemainSize() {
    const e = this.undoStack.length;
    return this.stackSize - e;
  }
  getUndoSize() {
    return this.undoStack.length;
  }
  getRedoSize() {
    return this.redoStack.length;
  }
  canUndo() {
    return !this.disabled && this.undoStack.length > 0;
  }
  canRedo() {
    return !this.disabled && this.redoStack.length > 0;
  }
  clean(e = {}) {
    return this.undoStack = [], this.redoStack = [], this.notify("clean", null, e), this;
  }
  // #endregion
  get disabled() {
    return this.options.enabled !== !0;
  }
  validate(e, ...t) {
    return this.validator.validate(e, ...t), this;
  }
  startListening() {
    this.model.on("batch:start", this.initBatchCommand, this), this.model.on("batch:stop", this.storeBatchCommand, this), this.options.eventNames && this.options.eventNames.forEach((e, t) => {
      this.handlers[t] = this.addCommand.bind(this, e), this.model.on(e, this.handlers[t]);
    }), this.validator.on("invalid", (e) => this.trigger("invalid", e));
  }
  stopListening() {
    this.model.off("batch:start", this.initBatchCommand, this), this.model.off("batch:stop", this.storeBatchCommand, this), this.options.eventNames && (this.options.eventNames.forEach((e, t) => {
      this.model.off(e, this.handlers[t]);
    }), this.handlers.length = 0), this.validator.off("invalid");
  }
  createCommand(e) {
    return {
      batch: e ? e.batch : !1,
      data: {}
    };
  }
  revertCommand(e, t) {
    this.freezed = !0;
    const i = Array.isArray(e) ? dn.sortBatchCommands(e) : [e];
    for (let s = i.length - 1; s >= 0; s -= 1) {
      const r = i[s], o = Object.assign(Object.assign({}, t), Lb(r.options, this.options.revertOptionsList || []));
      this.executeCommand(r, !0, o);
    }
    this.freezed = !1;
  }
  applyCommand(e, t) {
    this.freezed = !0;
    const i = Array.isArray(e) ? dn.sortBatchCommands(e) : [e];
    for (let s = 0; s < i.length; s += 1) {
      const r = i[s], o = Object.assign(Object.assign({}, t), Lb(r.options, this.options.applyOptionsList || []));
      this.executeCommand(r, !1, o);
    }
    this.freezed = !1;
  }
  executeCommand(e, t, i) {
    const s = this.model, r = s.getCell(e.data.id), o = e.event;
    if (dn.isAddEvent(o) && t || dn.isRemoveEvent(o) && !t)
      r && r.remove(i);
    else if (dn.isAddEvent(o) && !t || dn.isRemoveEvent(o) && t) {
      const l = e.data;
      l.node ? s.addNode(l.props, i) : l.edge && s.addEdge(l.props, i);
    } else if (dn.isChangeEvent(o)) {
      const l = e.data, a = l.key;
      if (a && r) {
        const c = t ? l.prev[a] : l.next[a];
        l.key === "attrs" && this.ensureUndefinedAttrs(c, t ? l.next[a] : l.prev[a]) && (i.dirty = !0), r.prop(a, c, i);
      }
    } else {
      const l = this.options.executeCommand;
      l && Ze(l, this, e, t, i);
    }
  }
  addCommand(e, t) {
    if (this.freezed || this.disabled)
      return;
    const i = t, s = i.options || {};
    if (s.dryrun || dn.isAddEvent(e) && this.options.ignoreAdd || dn.isRemoveEvent(e) && this.options.ignoreRemove || dn.isChangeEvent(e) && this.options.ignoreChange)
      return;
    const r = this.options.beforeAddCommand;
    if (r != null && Ze(r, this, e, t) === !1)
      return;
    e === "cell:change:*" && (e = `cell:change:${i.key}`);
    const o = i.cell, l = ls.isModel(o);
    let a;
    if (this.batchCommands) {
      a = this.batchCommands[Math.max(this.lastBatchIndex, 0)];
      const u = l && !a.modelChange || a.data.id !== o.id, h = a.event !== e;
      if (this.lastBatchIndex >= 0 && (u || h)) {
        const d = this.batchCommands.findIndex((f) => (l && f.modelChange || f.data.id === o.id) && f.event === e);
        d < 0 || dn.isAddEvent(e) || dn.isRemoveEvent(e) ? a = this.createCommand({ batch: !0 }) : (a = this.batchCommands[d], this.batchCommands.splice(d, 1)), this.batchCommands.push(a), this.lastBatchIndex = this.batchCommands.length - 1;
      }
    } else
      a = this.createCommand({ batch: !1 });
    if (dn.isAddEvent(e) || dn.isRemoveEvent(e)) {
      const u = a.data;
      return a.event = e, a.options = s, u.id = o.id, u.props = Bt(o.toJSON()), o.isEdge() ? u.edge = !0 : o.isNode() && (u.node = !0), this.push(a, s);
    }
    if (dn.isChangeEvent(e)) {
      const u = t.key, h = a.data;
      return (!a.batch || !a.event) && (a.event = e, a.options = s, h.key = u, h.prev == null && (h.prev = {}), h.prev[u] = Bt(o.previous(u)), l ? a.modelChange = !0 : h.id = o.id), h.next == null && (h.next = {}), h.next[u] = Bt(o.prop(u)), this.push(a, s);
    }
    const c = this.options.afterAddCommand;
    c && Ze(c, this, e, t, a), this.push(a, s);
  }
  /**
   * Gather multiple changes into a single command. These commands could
   * be reverted with single `undo()` call. From the moment the function
   * is called every change made on model is not stored into the undoStack.
   * Changes are temporarily kept until `storeBatchCommand()` is called.
   */
  // eslint-disable-next-line
  initBatchCommand(e) {
    this.freezed || (this.batchCommands ? this.batchLevel += 1 : (this.batchCommands = [this.createCommand({ batch: !0 })], this.batchLevel = 0, this.lastBatchIndex = -1));
  }
  /**
   * Store changes temporarily kept in the undoStack. You have to call this
   * function as many times as `initBatchCommand()` been called.
   */
  storeBatchCommand(e) {
    if (!this.freezed)
      if (this.batchCommands && this.batchLevel <= 0) {
        const t = this.filterBatchCommand(this.batchCommands);
        t.length > 0 && (this.redoStack = [], this.undoStackPush(t), this.consolidateCommands(), this.notify("add", t, e)), this.batchCommands = null, this.lastBatchIndex = -1, this.batchLevel = 0;
      } else
        this.batchCommands && this.batchLevel > 0 && (this.batchLevel -= 1);
  }
  filterBatchCommand(e) {
    let t = e.slice();
    const i = [];
    for (; t.length > 0; ) {
      const s = t.shift(), r = s.event, o = s.data.id;
      if (r != null && (o != null || s.modelChange)) {
        if (dn.isAddEvent(r)) {
          const l = t.findIndex((a) => dn.isRemoveEvent(a.event) && a.data.id === o);
          if (l >= 0) {
            t = t.filter((a, c) => l < c || a.data.id !== o);
            continue;
          }
        } else if (dn.isRemoveEvent(r)) {
          const l = t.findIndex((a) => dn.isAddEvent(a.event) && a.data.id === o);
          if (l >= 0) {
            t.splice(l, 1);
            continue;
          }
        } else if (dn.isChangeEvent(r)) {
          const l = s.data;
          if (cn(l.prev, l.next))
            continue;
        }
        i.push(s);
      }
    }
    return i;
  }
  notify(e, t, i) {
    const s = t == null ? null : Array.isArray(t) ? t : [t];
    this.emit(e, { cmds: s, options: i }), this.graph.trigger(`history:${e}`, { cmds: s, options: i }), this.emit("change", { cmds: s, options: i }), this.graph.trigger("history:change", { cmds: s, options: i });
  }
  push(e, t) {
    this.redoStack = [], e.batch ? (this.lastBatchIndex = Math.max(this.lastBatchIndex, 0), this.emit("batch", { cmd: e, options: t })) : (this.undoStackPush(e), this.consolidateCommands(), this.notify("add", e, t));
  }
  /**
   * Conditionally combine multiple undo items into one.
   *
   * Currently this is only used combine a `cell:changed:position` event
   * followed by multiple `cell:change:parent` and `cell:change:children`
   * events, such that a "move + embed" action can be undone in one step.
   *
   * See https://github.com/antvis/X6/issues/2421
   *
   * This is an ugly WORKAROUND. It does not solve deficiencies in the batch
   * system itself.
   */
  consolidateCommands() {
    var e;
    const t = this.undoStack[this.undoStack.length - 1], i = this.undoStack[this.undoStack.length - 2];
    if (!Array.isArray(t))
      return;
    const s = new Set(t.map((o) => o.event));
    if (s.size !== 2 || !s.has("cell:change:parent") || !s.has("cell:change:children") || !t.every((o) => {
      var l;
      return o.batch && ((l = o.options) === null || l === void 0 ? void 0 : l.ui);
    }) || !Array.isArray(i) || i.length !== 1)
      return;
    const r = i[0];
    r.event !== "cell:change:position" || !(!((e = r.options) === null || e === void 0) && e.ui) || (i.push(...t), this.undoStack.pop());
  }
  undoStackPush(e) {
    if (this.stackSize === 0) {
      this.undoStack.push(e);
      return;
    }
    this.undoStack.length >= this.stackSize && this.undoStack.shift(), this.undoStack.push(e);
  }
  ensureUndefinedAttrs(e, t) {
    let i = !1;
    return e !== null && t !== null && typeof e == "object" && typeof t == "object" && Object.keys(t).forEach((s) => {
      e[s] === void 0 && t[s] !== void 0 ? (e[s] = void 0, i = !0) : typeof e[s] == "object" && typeof t[s] == "object" && (i = this.ensureUndefinedAttrs(e[s], t[s]));
    }), i;
  }
  dispose() {
    this.validator.dispose(), this.clean(), this.stopListening(), this.off();
  }
}
dR([
  gn.dispose()
], Vd.prototype, "dispose", null);
(function(n) {
  class e extends gn {
    constructor(i) {
      super(), this.map = {}, this.command = i.history, this.cancelInvalid = i.cancelInvalid !== !1, this.command.on("add", this.onCommandAdded, this);
    }
    onCommandAdded({ cmds: i }) {
      return Array.isArray(i) ? i.every((s) => this.isValidCommand(s)) : this.isValidCommand(i);
    }
    isValidCommand(i) {
      if (i.options && i.options.validation === !1)
        return !0;
      const s = i.event && this.map[i.event] || [];
      let r = null;
      return s.forEach((o) => {
        let l = 0;
        const a = (c) => {
          const u = o[l];
          l += 1;
          try {
            if (u)
              u(c, i, a);
            else {
              r = c;
              return;
            }
          } catch (h) {
            a(h);
          }
        };
        a(r);
      }), r ? (this.cancelInvalid && this.command.cancel(), this.emit("invalid", { err: r }), !1) : !0;
    }
    validate(i, ...s) {
      const r = Array.isArray(i) ? i : i.split(/\s+/);
      return s.forEach((o) => {
        if (typeof o != "function")
          throw new Error(`${r.join(" ")} requires callback functions.`);
      }), r.forEach((o) => {
        this.map[o] == null && (this.map[o] = []), this.map[o].push(s);
      }), this;
    }
    dispose() {
      this.command.off("add", this.onCommandAdded, this);
    }
  }
  dR([
    gn.dispose()
  ], e.prototype, "dispose", null), n.Validator = e;
})(Vd || (Vd = {}));
var dn;
(function(n) {
  function e(o) {
    return o === "cell:added";
  }
  n.isAddEvent = e;
  function t(o) {
    return o === "cell:removed";
  }
  n.isRemoveEvent = t;
  function i(o) {
    return o != null && o.startsWith("cell:change:");
  }
  n.isChangeEvent = i;
  function s(o) {
    const l = [
      "cell:added",
      "cell:removed",
      "cell:change:*"
    ], a = ["batch:start", "batch:stop"], c = o.eventNames ? o.eventNames.filter((u) => !(n.isChangeEvent(u) || l.includes(u) || a.includes(u))) : l;
    return Object.assign(Object.assign({ enabled: !0 }, o), { eventNames: c, applyOptionsList: o.applyOptionsList || ["propertyPath"], revertOptionsList: o.revertOptionsList || ["propertyPath"] });
  }
  n.getOptions = s;
  function r(o) {
    const l = [];
    for (let a = 0, c = o.length; a < c; a += 1) {
      const u = o[a];
      let h = null;
      if (n.isAddEvent(u.event)) {
        const d = u.data.id;
        for (let f = 0; f < a; f += 1)
          if (o[f].data.id === d) {
            h = f;
            break;
          }
      }
      h !== null ? l.splice(h, 0, u) : l.push(u);
    }
    return l;
  }
  n.sortBatchCommands = r;
})(dn || (dn = {}));
const Lt = "md-editor", Qre = "md-editor-v3", zre = "https://at.alicdn.com/t/c/font_2605852_prouiefeic.js", jre = "https://at.alicdn.com/t/c/font_2605852_prouiefeic.css", _n = "https://cdnjs.cloudflare.com/ajax/libs", Vre = `${_n}/highlight.js/11.8.0/highlight.min.js`, Fre = [
  "bold",
  "underline",
  "italic",
  "strikeThrough",
  "-",
  "title",
  "sub",
  "sup",
  "quote",
  "unorderedList",
  "orderedList",
  "task",
  "-",
  "codeRow",
  "code",
  "link",
  "image",
  "table",
  "mermaid",
  "katex",
  "-",
  "revoke",
  "next",
  "save",
  "=",
  "prettier",
  "pageFullscreen",
  "fullscreen",
  "preview",
  "htmlPreview",
  "catalog",
  "github"
], Zre = ["markdownTotal", "=", "scrollSwitch"], wk = {
  "zh-CN": {
    toolbarTips: {
      bold: "加粗",
      underline: "下划线",
      italic: "斜体",
      strikeThrough: "删除线",
      title: "标题",
      sub: "下标",
      sup: "上标",
      quote: "引用",
      unorderedList: "无序列表",
      orderedList: "有序列表",
      task: "任务列表",
      codeRow: "行内代码",
      code: "块级代码",
      link: "链接",
      image: "图片",
      table: "表格",
      mermaid: "mermaid图",
      katex: "katex公式",
      revoke: "后退",
      next: "前进",
      save: "保存",
      prettier: "美化",
      pageFullscreen: "浏览器全屏",
      fullscreen: "屏幕全屏",
      preview: "预览",
      htmlPreview: "html代码预览",
      catalog: "目录",
      github: "源码地址"
    },
    titleItem: {
      h1: "一级标题",
      h2: "二级标题",
      h3: "三级标题",
      h4: "四级标题",
      h5: "五级标题",
      h6: "六级标题"
    },
    imgTitleItem: {
      link: "添加链接",
      upload: "上传图片",
      clip2upload: "裁剪上传"
    },
    linkModalTips: {
      linkTitle: "添加链接",
      imageTitle: "添加图片",
      descLabel: "链接描述：",
      descLabelPlaceHolder: "请输入描述...",
      urlLabel: "链接地址：",
      urlLabelPlaceHolder: "请输入链接...",
      buttonOK: "确定"
    },
    clipModalTips: {
      title: "裁剪图片上传",
      buttonUpload: "上传"
    },
    copyCode: {
      text: "复制代码",
      successTips: "已复制！",
      failTips: "复制失败！"
    },
    mermaid: {
      flow: "流程图",
      sequence: "时序图",
      gantt: "甘特图",
      class: "类图",
      state: "状态图",
      pie: "饼图",
      relationship: "关系图",
      journey: "旅程图"
    },
    katex: {
      inline: "行内公式",
      block: "块级公式"
    },
    footer: {
      markdownTotal: "字数",
      scrollAuto: "同步滚动"
    }
  },
  "en-US": {
    toolbarTips: {
      bold: "bold",
      underline: "underline",
      italic: "italic",
      strikeThrough: "strikeThrough",
      title: "title",
      sub: "subscript",
      sup: "superscript",
      quote: "quote",
      unorderedList: "unordered list",
      orderedList: "ordered list",
      task: "task list",
      codeRow: "inline code",
      code: "block-level code",
      link: "link",
      image: "image",
      table: "table",
      mermaid: "mermaid",
      katex: "formula",
      revoke: "revoke",
      next: "undo revoke",
      save: "save",
      prettier: "prettier",
      pageFullscreen: "fullscreen in page",
      fullscreen: "fullscreen",
      preview: "preview",
      htmlPreview: "html preview",
      catalog: "catalog",
      github: "source code"
    },
    titleItem: {
      h1: "Lv1 Heading",
      h2: "Lv2 Heading",
      h3: "Lv3 Heading",
      h4: "Lv4 Heading",
      h5: "Lv5 Heading",
      h6: "Lv6 Heading"
    },
    imgTitleItem: {
      link: "Add Img Link",
      upload: "Upload Img",
      clip2upload: "Clip Upload"
    },
    linkModalTips: {
      linkTitle: "Add Link",
      imageTitle: "Add Image",
      descLabel: "Desc:",
      descLabelPlaceHolder: "Enter a description...",
      urlLabel: "Link:",
      urlLabelPlaceHolder: "Enter a link...",
      buttonOK: "OK"
    },
    clipModalTips: {
      title: "Crop Image",
      buttonUpload: "Upload"
    },
    copyCode: {
      text: "Copy",
      successTips: "Copied!",
      failTips: "Copy failed!"
    },
    mermaid: {
      flow: "flow",
      sequence: "sequence",
      gantt: "gantt",
      class: "class",
      state: "state",
      pie: "pie",
      relationship: "relationship",
      journey: "journey"
    },
    katex: {
      inline: "inline",
      block: "block"
    },
    footer: {
      markdownTotal: "Character Count",
      scrollAuto: "Scroll Auto"
    }
  }
}, qre = `${_n}/mermaid/10.6.1/mermaid.esm.min.mjs`, xk = {
  js: `${_n}/KaTeX/0.16.9/katex.min.js`,
  css: `${_n}/KaTeX/0.16.9/katex.min.css`
}, Sk = {
  a11y: {
    light: `${_n}/highlight.js/11.8.0/styles/a11y-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/a11y-dark.min.css`
  },
  atom: {
    light: `${_n}/highlight.js/11.8.0/styles/atom-one-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/atom-one-dark.min.css`
  },
  github: {
    light: `${_n}/highlight.js/11.8.0/styles/github.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/github-dark.min.css`
  },
  gradient: {
    light: `${_n}/highlight.js/11.8.0/styles/gradient-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/gradient-dark.min.css`
  },
  kimbie: {
    light: `${_n}/highlight.js/11.8.0/styles/kimbie-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/kimbie-dark.min.css`
  },
  paraiso: {
    light: `${_n}/highlight.js/11.8.0/styles/paraiso-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/paraiso-dark.min.css`
  },
  qtcreator: {
    light: `${_n}/highlight.js/11.8.0/styles/qtcreator-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/qtcreator-dark.min.css`
  },
  stackoverflow: {
    light: `${_n}/highlight.js/11.8.0/styles/stackoverflow-light.min.css`,
    dark: `${_n}/highlight.js/11.8.0/styles/stackoverflow-dark.min.css`
  }
}, so = {
  editorExtensions: {},
  editorConfig: {},
  codeMirrorExtensions: (n, e) => e,
  markdownItConfig: () => {
  },
  markdownItPlugins: (n) => n,
  iconfontType: "svg",
  mermaidConfig: (n) => n
}, kw = (n, e = 200) => {
  let t = 0;
  return (...i) => new Promise((s) => {
    t && (clearTimeout(t), s("cancel")), t = window.setTimeout(() => {
      n.apply(void 0, i), t = 0, s("done");
    }, e);
  });
}, By = () => `${Date.now().toString(36)}${Math.random().toString(36).substring(2)}`;
var Wre = Object.defineProperty, Hre = (n, e, t) => e in n ? Wre(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, Xre = (n, e, t) => (Hre(n, typeof e != "symbol" ? e + "" : e, t), t);
let Yre = class {
  constructor() {
    Xre(this, "pools", {});
  }
  // 移除事件监听
  remove(e, t, i) {
    const s = this.pools[e] && this.pools[e][t];
    s && (this.pools[e][t] = s.filter((r) => r !== i));
  }
  // 清空全部事件，由于单一实例，多次注册会被共享内容
  clear(e) {
    this.pools[e] = {};
  }
  // 注册事件监听
  on(e, t) {
    return this.pools[e] || (this.pools[e] = {}), this.pools[e][t.name] || (this.pools[e][t.name] = []), this.pools[e][t.name].push(t.callback), this.pools[e][t.name].includes(t.callback);
  }
  // 触发事件
  emit(e, t, ...i) {
    this.pools[e] || (this.pools[e] = {});
    const s = this.pools[e][t];
    s && s.forEach((r) => {
      try {
        r(...i);
      } catch (o) {
        console.error(`${t} monitor event exception！`, o);
      }
    });
  }
};
const da = new Yre(), Ure = "buildFinished", Ck = "catalogChanged", Gre = "pushCatalog", fR = "rerender", Kre = (n) => {
  if (!n)
    return n;
  const e = n.split(`
`), t = ['<span rn-wrapper aria-hidden="true">'];
  return e.forEach(() => {
    t.push("<span></span>");
  }), t.push("</span>"), `<span class="code-block">${n}</span>${t.join("")}`;
}, Za = (n, e = "") => {
  const t = document.getElementById(n.id), i = n.onload;
  n.onload = null;
  const s = function(r) {
    typeof i == "function" && i.bind(this)(r), n.removeEventListener("load", s);
  };
  t ? e !== "" && (t.addEventListener("load", s), Reflect.get(window, e) && t.dispatchEvent(new Event("load"))) : (n.addEventListener("load", s), document.head.appendChild(n));
}, Jre = kw((n, e, t) => {
  const i = document.getElementById(n);
  i && i.setAttribute(e, t);
}, 10);
class $t {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, t, i) {
    [e, t] = Nu(this, e, t);
    let s = [];
    return this.decompose(
      0,
      e,
      s,
      2
      /* Open.To */
    ), i.length && i.decompose(
      0,
      i.length,
      s,
      3
      /* Open.To */
    ), this.decompose(
      t,
      this.length,
      s,
      1
      /* Open.From */
    ), Hr.from(s, this.length - (t - e) + i.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, t = this.length) {
    [e, t] = Nu(this, e, t);
    let i = [];
    return this.decompose(e, t, i, 0), Hr.from(i, t - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let t = this.scanIdentical(e, 1), i = this.length - this.scanIdentical(e, -1), s = new od(this), r = new od(e);
    for (let o = t, l = t; ; ) {
      if (s.next(o), r.next(o), o = 0, s.lineBreak != r.lineBreak || s.done != r.done || s.value != r.value)
        return !1;
      if (l += s.value.length, s.done || l >= i)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new od(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, t = this.length) {
    return new pR(this, e, t);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, t) {
    let i;
    if (e == null)
      i = this.iter();
    else {
      t == null && (t = this.lines + 1);
      let s = this.line(e).from;
      i = this.iterRange(s, Math.max(s, t == this.lines + 1 ? this.length : t <= 1 ? 0 : this.line(t - 1).to));
    }
    return new gR(i);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? $t.empty : e.length <= 32 ? new Cn(e) : Hr.from(Cn.split(e, []));
  }
}
class Cn extends $t {
  constructor(e, t = eoe(e)) {
    super(), this.text = e, this.length = t;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, t, i, s) {
    for (let r = 0; ; r++) {
      let o = this.text[r], l = s + o.length;
      if ((t ? i : l) >= e)
        return new toe(s, l, i, o);
      s = l + 1, i++;
    }
  }
  decompose(e, t, i, s) {
    let r = e <= 0 && t >= this.length ? this : new Cn(kk(this.text, e, t), Math.min(t, this.length) - Math.max(0, e));
    if (s & 1) {
      let o = i.pop(), l = ug(r.text, o.text.slice(), 0, r.length);
      if (l.length <= 32)
        i.push(new Cn(l, o.length + r.length));
      else {
        let a = l.length >> 1;
        i.push(new Cn(l.slice(0, a)), new Cn(l.slice(a)));
      }
    } else
      i.push(r);
  }
  replace(e, t, i) {
    if (!(i instanceof Cn))
      return super.replace(e, t, i);
    [e, t] = Nu(this, e, t);
    let s = ug(this.text, ug(i.text, kk(this.text, 0, e)), t), r = this.length + i.length - (t - e);
    return s.length <= 32 ? new Cn(s, r) : Hr.from(Cn.split(s, []), r);
  }
  sliceString(e, t = this.length, i = `
`) {
    [e, t] = Nu(this, e, t);
    let s = "";
    for (let r = 0, o = 0; r <= t && o < this.text.length; o++) {
      let l = this.text[o], a = r + l.length;
      r > e && o && (s += i), e < a && t > r && (s += l.slice(Math.max(0, e - r), t - r)), r = a + 1;
    }
    return s;
  }
  flatten(e) {
    for (let t of this.text)
      e.push(t);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, t) {
    let i = [], s = -1;
    for (let r of e)
      i.push(r), s += r.length + 1, i.length == 32 && (t.push(new Cn(i, s)), i = [], s = -1);
    return s > -1 && t.push(new Cn(i, s)), t;
  }
}
class Hr extends $t {
  constructor(e, t) {
    super(), this.children = e, this.length = t, this.lines = 0;
    for (let i of e)
      this.lines += i.lines;
  }
  lineInner(e, t, i, s) {
    for (let r = 0; ; r++) {
      let o = this.children[r], l = s + o.length, a = i + o.lines - 1;
      if ((t ? a : l) >= e)
        return o.lineInner(e, t, i, s);
      s = l + 1, i = a + 1;
    }
  }
  decompose(e, t, i, s) {
    for (let r = 0, o = 0; o <= t && r < this.children.length; r++) {
      let l = this.children[r], a = o + l.length;
      if (e <= a && t >= o) {
        let c = s & ((o <= e ? 1 : 0) | (a >= t ? 2 : 0));
        o >= e && a <= t && !c ? i.push(l) : l.decompose(e - o, t - o, i, c);
      }
      o = a + 1;
    }
  }
  replace(e, t, i) {
    if ([e, t] = Nu(this, e, t), i.lines < this.lines)
      for (let s = 0, r = 0; s < this.children.length; s++) {
        let o = this.children[s], l = r + o.length;
        if (e >= r && t <= l) {
          let a = o.replace(e - r, t - r, i), c = this.lines - o.lines + a.lines;
          if (a.lines < c >> 4 && a.lines > c >> 6) {
            let u = this.children.slice();
            return u[s] = a, new Hr(u, this.length - (t - e) + i.length);
          }
          return super.replace(r, l, a);
        }
        r = l + 1;
      }
    return super.replace(e, t, i);
  }
  sliceString(e, t = this.length, i = `
`) {
    [e, t] = Nu(this, e, t);
    let s = "";
    for (let r = 0, o = 0; r < this.children.length && o <= t; r++) {
      let l = this.children[r], a = o + l.length;
      o > e && r && (s += i), e < a && t > o && (s += l.sliceString(e - o, t - o, i)), o = a + 1;
    }
    return s;
  }
  flatten(e) {
    for (let t of this.children)
      t.flatten(e);
  }
  scanIdentical(e, t) {
    if (!(e instanceof Hr))
      return 0;
    let i = 0, [s, r, o, l] = t > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; s += t, r += t) {
      if (s == o || r == l)
        return i;
      let a = this.children[s], c = e.children[r];
      if (a != c)
        return i + a.scanIdentical(c, t);
      i += a.length + 1;
    }
  }
  static from(e, t = e.reduce((i, s) => i + s.length + 1, -1)) {
    let i = 0;
    for (let f of e)
      i += f.lines;
    if (i < 32) {
      let f = [];
      for (let p of e)
        p.flatten(f);
      return new Cn(f, t);
    }
    let s = Math.max(
      32,
      i >> 5
      /* Tree.BranchShift */
    ), r = s << 1, o = s >> 1, l = [], a = 0, c = -1, u = [];
    function h(f) {
      let p;
      if (f.lines > r && f instanceof Hr)
        for (let g of f.children)
          h(g);
      else
        f.lines > o && (a > o || !a) ? (d(), l.push(f)) : f instanceof Cn && a && (p = u[u.length - 1]) instanceof Cn && f.lines + p.lines <= 32 ? (a += f.lines, c += f.length + 1, u[u.length - 1] = new Cn(p.text.concat(f.text), p.length + 1 + f.length)) : (a + f.lines > s && d(), a += f.lines, c += f.length + 1, u.push(f));
    }
    function d() {
      a != 0 && (l.push(u.length == 1 ? u[0] : Hr.from(u, c)), c = -1, a = u.length = 0);
    }
    for (let f of e)
      h(f);
    return d(), l.length == 1 ? l[0] : new Hr(l, t);
  }
}
$t.empty = /* @__PURE__ */ new Cn([""], 0);
function eoe(n) {
  let e = -1;
  for (let t of n)
    e += t.length + 1;
  return e;
}
function ug(n, e, t = 0, i = 1e9) {
  for (let s = 0, r = 0, o = !0; r < n.length && s <= i; r++) {
    let l = n[r], a = s + l.length;
    a >= t && (a > i && (l = l.slice(0, i - s)), s < t && (l = l.slice(t - s)), o ? (e[e.length - 1] += l, o = !1) : e.push(l)), s = a + 1;
  }
  return e;
}
function kk(n, e, t) {
  return ug(n, [""], e, t);
}
class od {
  constructor(e, t = 1) {
    this.dir = t, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [t > 0 ? 1 : (e instanceof Cn ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, t) {
    for (this.done = this.lineBreak = !1; ; ) {
      let i = this.nodes.length - 1, s = this.nodes[i], r = this.offsets[i], o = r >> 1, l = s instanceof Cn ? s.text.length : s.children.length;
      if (o == (t > 0 ? l : 0)) {
        if (i == 0)
          return this.done = !0, this.value = "", this;
        t > 0 && this.offsets[i - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((r & 1) == (t > 0 ? 0 : 1)) {
        if (this.offsets[i] += t, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (s instanceof Cn) {
        let a = s.text[o + (t < 0 ? -1 : 0)];
        if (this.offsets[i] += t, a.length > Math.max(0, e))
          return this.value = e == 0 ? a : t > 0 ? a.slice(e) : a.slice(0, a.length - e), this;
        e -= a.length;
      } else {
        let a = s.children[o + (t < 0 ? -1 : 0)];
        e > a.length ? (e -= a.length, this.offsets[i] += t) : (t < 0 && this.offsets[i]--, this.nodes.push(a), this.offsets.push(t > 0 ? 1 : (a instanceof Cn ? a.text.length : a.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class pR {
  constructor(e, t, i) {
    this.value = "", this.done = !1, this.cursor = new od(e, t > i ? -1 : 1), this.pos = t > i ? e.length : 0, this.from = Math.min(t, i), this.to = Math.max(t, i);
  }
  nextInner(e, t) {
    if (t < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, t < 0 ? this.pos - this.to : this.from - this.pos);
    let i = t < 0 ? this.pos - this.from : this.to - this.pos;
    e > i && (e = i), i -= e;
    let { value: s } = this.cursor.next(e);
    return this.pos += (s.length + e) * t, this.value = s.length <= i ? s : t < 0 ? s.slice(s.length - i) : s.slice(0, i), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class gR {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: t, lineBreak: i, value: s } = this.inner.next(e);
    return t && this.afterBreak ? (this.value = "", this.afterBreak = !1) : t ? (this.done = !0, this.value = "") : i ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = s, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && ($t.prototype[Symbol.iterator] = function() {
  return this.iter();
}, od.prototype[Symbol.iterator] = pR.prototype[Symbol.iterator] = gR.prototype[Symbol.iterator] = function() {
  return this;
});
class toe {
  /**
  @internal
  */
  constructor(e, t, i, s) {
    this.from = e, this.to = t, this.number = i, this.text = s;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function Nu(n, e, t) {
  return e = Math.max(0, Math.min(n.length, e)), [e, Math.max(e, Math.min(n.length, t))];
}
let Qc = /* @__PURE__ */ "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((n) => n ? parseInt(n, 36) : 1);
for (let n = 1; n < Qc.length; n++)
  Qc[n] += Qc[n - 1];
function noe(n) {
  for (let e = 1; e < Qc.length; e += 2)
    if (Qc[e] > n)
      return Qc[e - 1] <= n;
  return !1;
}
function Pk(n) {
  return n >= 127462 && n <= 127487;
}
const Ek = 8205;
function Ci(n, e, t = !0, i = !0) {
  return (t ? mR : ioe)(n, e, i);
}
function mR(n, e, t) {
  if (e == n.length)
    return e;
  e && vR(n.charCodeAt(e)) && bR(n.charCodeAt(e - 1)) && e--;
  let i = bi(n, e);
  for (e += zs(i); e < n.length; ) {
    let s = bi(n, e);
    if (i == Ek || s == Ek || t && noe(s))
      e += zs(s), i = s;
    else if (Pk(s)) {
      let r = 0, o = e - 2;
      for (; o >= 0 && Pk(bi(n, o)); )
        r++, o -= 2;
      if (r % 2 == 0)
        break;
      e += 2;
    } else
      break;
  }
  return e;
}
function ioe(n, e, t) {
  for (; e > 0; ) {
    let i = mR(n, e - 2, t);
    if (i < e)
      return i;
    e--;
  }
  return 0;
}
function vR(n) {
  return n >= 56320 && n < 57344;
}
function bR(n) {
  return n >= 55296 && n < 56320;
}
function bi(n, e) {
  let t = n.charCodeAt(e);
  if (!bR(t) || e + 1 == n.length)
    return t;
  let i = n.charCodeAt(e + 1);
  return vR(i) ? (t - 55296 << 10) + (i - 56320) + 65536 : t;
}
function Pw(n) {
  return n <= 65535 ? String.fromCharCode(n) : (n -= 65536, String.fromCharCode((n >> 10) + 55296, (n & 1023) + 56320));
}
function zs(n) {
  return n < 65536 ? 1 : 2;
}
const Qy = /\r\n?|\n/;
var wi = /* @__PURE__ */ function(n) {
  return n[n.Simple = 0] = "Simple", n[n.TrackDel = 1] = "TrackDel", n[n.TrackBefore = 2] = "TrackBefore", n[n.TrackAfter = 3] = "TrackAfter", n;
}(wi || (wi = {}));
class ro {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2)
      e += this.sections[t];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let t = 0; t < this.sections.length; t += 2) {
      let i = this.sections[t + 1];
      e += i < 0 ? this.sections[t] : i;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let t = 0, i = 0, s = 0; t < this.sections.length; ) {
      let r = this.sections[t++], o = this.sections[t++];
      o < 0 ? (e(i, s, r), s += r) : s += o, i += r;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, t = !1) {
    zy(this, e, t);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let t = 0; t < this.sections.length; ) {
      let i = this.sections[t++], s = this.sections[t++];
      s < 0 ? e.push(i, s) : e.push(s, i);
    }
    return new ro(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : yR(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `other` happened before the ones in `this`.
  */
  mapDesc(e, t = !1) {
    return e.empty ? this : jy(this, e, t);
  }
  mapPos(e, t = -1, i = wi.Simple) {
    let s = 0, r = 0;
    for (let o = 0; o < this.sections.length; ) {
      let l = this.sections[o++], a = this.sections[o++], c = s + l;
      if (a < 0) {
        if (c > e)
          return r + (e - s);
        r += l;
      } else {
        if (i != wi.Simple && c >= e && (i == wi.TrackDel && s < e && c > e || i == wi.TrackBefore && s < e || i == wi.TrackAfter && c > e))
          return null;
        if (c > e || c == e && t < 0 && !l)
          return e == s || t < 0 ? r : r + a;
        r += a;
      }
      s = c;
    }
    if (e > s)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${s}`);
    return r;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, t = e) {
    for (let i = 0, s = 0; i < this.sections.length && s <= t; ) {
      let r = this.sections[i++], o = this.sections[i++], l = s + r;
      if (o >= 0 && s <= t && l >= e)
        return s < e && l > t ? "cover" : !0;
      s = l;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let t = 0; t < this.sections.length; ) {
      let i = this.sections[t++], s = this.sections[t++];
      e += (e ? " " : "") + i + (s >= 0 ? ":" + s : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((t) => typeof t != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new ro(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new ro(e);
  }
}
class Wn extends ro {
  constructor(e, t) {
    super(e), this.inserted = t;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return zy(this, (t, i, s, r, o) => e = e.replace(s, s + (i - t), o), !1), e;
  }
  mapDesc(e, t = !1) {
    return jy(this, e, t, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let t = this.sections.slice(), i = [];
    for (let s = 0, r = 0; s < t.length; s += 2) {
      let o = t[s], l = t[s + 1];
      if (l >= 0) {
        t[s] = l, t[s + 1] = o;
        let a = s >> 1;
        for (; i.length < a; )
          i.push($t.empty);
        i.push(o ? e.slice(r, r + o) : $t.empty);
      }
      r += o;
    }
    return new Wn(t, i);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : yR(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, t = !1) {
    return e.empty ? this : jy(this, e, t, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, t = !1) {
    zy(this, e, t);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return ro.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let t = [], i = [], s = [], r = new Fd(this);
    e:
      for (let o = 0, l = 0; ; ) {
        let a = o == e.length ? 1e9 : e[o++];
        for (; l < a || l == a && r.len == 0; ) {
          if (r.done)
            break e;
          let u = Math.min(r.len, a - l);
          Ti(s, u, -1);
          let h = r.ins == -1 ? -1 : r.off == 0 ? r.ins : 0;
          Ti(t, u, h), h > 0 && xl(i, t, r.text), r.forward(u), l += u;
        }
        let c = e[o++];
        for (; l < c; ) {
          if (r.done)
            break e;
          let u = Math.min(r.len, c - l);
          Ti(t, u, -1), Ti(s, u, r.ins == -1 ? -1 : r.off == 0 ? r.ins : 0), r.forward(u), l += u;
        }
      }
    return {
      changes: new Wn(t, i),
      filtered: ro.create(s)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let t = 0; t < this.sections.length; t += 2) {
      let i = this.sections[t], s = this.sections[t + 1];
      s < 0 ? e.push(i) : s == 0 ? e.push([i]) : e.push([i].concat(this.inserted[t >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, t, i) {
    let s = [], r = [], o = 0, l = null;
    function a(u = !1) {
      if (!u && !s.length)
        return;
      o < t && Ti(s, t - o, -1);
      let h = new Wn(s, r);
      l = l ? l.compose(h.map(l)) : h, s = [], r = [], o = 0;
    }
    function c(u) {
      if (Array.isArray(u))
        for (let h of u)
          c(h);
      else if (u instanceof Wn) {
        if (u.length != t)
          throw new RangeError(`Mismatched change set length (got ${u.length}, expected ${t})`);
        a(), l = l ? l.compose(u.map(l)) : u;
      } else {
        let { from: h, to: d = h, insert: f } = u;
        if (h > d || h < 0 || d > t)
          throw new RangeError(`Invalid change range ${h} to ${d} (in doc of length ${t})`);
        let p = f ? typeof f == "string" ? $t.of(f.split(i || Qy)) : f : $t.empty, g = p.length;
        if (h == d && g == 0)
          return;
        h < o && a(), h > o && Ti(s, h - o, -1), Ti(s, d - h, g), xl(r, s, p), o = d;
      }
    }
    return c(e), a(!l), l;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new Wn(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let t = [], i = [];
    for (let s = 0; s < e.length; s++) {
      let r = e[s];
      if (typeof r == "number")
        t.push(r, -1);
      else {
        if (!Array.isArray(r) || typeof r[0] != "number" || r.some((o, l) => l && typeof o != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (r.length == 1)
          t.push(r[0], 0);
        else {
          for (; i.length < s; )
            i.push($t.empty);
          i[s] = $t.of(r.slice(1)), t.push(r[0], i[s].length);
        }
      }
    }
    return new Wn(t, i);
  }
  /**
  @internal
  */
  static createSet(e, t) {
    return new Wn(e, t);
  }
}
function Ti(n, e, t, i = !1) {
  if (e == 0 && t <= 0)
    return;
  let s = n.length - 2;
  s >= 0 && t <= 0 && t == n[s + 1] ? n[s] += e : e == 0 && n[s] == 0 ? n[s + 1] += t : i ? (n[s] += e, n[s + 1] += t) : n.push(e, t);
}
function xl(n, e, t) {
  if (t.length == 0)
    return;
  let i = e.length - 2 >> 1;
  if (i < n.length)
    n[n.length - 1] = n[n.length - 1].append(t);
  else {
    for (; n.length < i; )
      n.push($t.empty);
    n.push(t);
  }
}
function zy(n, e, t) {
  let i = n.inserted;
  for (let s = 0, r = 0, o = 0; o < n.sections.length; ) {
    let l = n.sections[o++], a = n.sections[o++];
    if (a < 0)
      s += l, r += l;
    else {
      let c = s, u = r, h = $t.empty;
      for (; c += l, u += a, a && i && (h = h.append(i[o - 2 >> 1])), !(t || o == n.sections.length || n.sections[o + 1] < 0); )
        l = n.sections[o++], a = n.sections[o++];
      e(s, c, r, u, h), s = c, r = u;
    }
  }
}
function jy(n, e, t, i = !1) {
  let s = [], r = i ? [] : null, o = new Fd(n), l = new Fd(e);
  for (let a = -1; ; )
    if (o.ins == -1 && l.ins == -1) {
      let c = Math.min(o.len, l.len);
      Ti(s, c, -1), o.forward(c), l.forward(c);
    } else if (l.ins >= 0 && (o.ins < 0 || a == o.i || o.off == 0 && (l.len < o.len || l.len == o.len && !t))) {
      let c = l.len;
      for (Ti(s, l.ins, -1); c; ) {
        let u = Math.min(o.len, c);
        o.ins >= 0 && a < o.i && o.len <= u && (Ti(s, 0, o.ins), r && xl(r, s, o.text), a = o.i), o.forward(u), c -= u;
      }
      l.next();
    } else if (o.ins >= 0) {
      let c = 0, u = o.len;
      for (; u; )
        if (l.ins == -1) {
          let h = Math.min(u, l.len);
          c += h, u -= h, l.forward(h);
        } else if (l.ins == 0 && l.len < u)
          u -= l.len, l.next();
        else
          break;
      Ti(s, c, a < o.i ? o.ins : 0), r && a < o.i && xl(r, s, o.text), a = o.i, o.forward(o.len - u);
    } else {
      if (o.done && l.done)
        return r ? Wn.createSet(s, r) : ro.create(s);
      throw new Error("Mismatched change set lengths");
    }
}
function yR(n, e, t = !1) {
  let i = [], s = t ? [] : null, r = new Fd(n), o = new Fd(e);
  for (let l = !1; ; ) {
    if (r.done && o.done)
      return s ? Wn.createSet(i, s) : ro.create(i);
    if (r.ins == 0)
      Ti(i, r.len, 0, l), r.next();
    else if (o.len == 0 && !o.done)
      Ti(i, 0, o.ins, l), s && xl(s, i, o.text), o.next();
    else {
      if (r.done || o.done)
        throw new Error("Mismatched change set lengths");
      {
        let a = Math.min(r.len2, o.len), c = i.length;
        if (r.ins == -1) {
          let u = o.ins == -1 ? -1 : o.off ? 0 : o.ins;
          Ti(i, a, u, l), s && u && xl(s, i, o.text);
        } else
          o.ins == -1 ? (Ti(i, r.off ? 0 : r.len, a, l), s && xl(s, i, r.textBit(a))) : (Ti(i, r.off ? 0 : r.len, o.off ? 0 : o.ins, l), s && !o.off && xl(s, i, o.text));
        l = (r.ins > a || o.ins >= 0 && o.len > a) && (l || i.length > c), r.forward2(a), o.forward(a);
      }
    }
  }
}
class Fd {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, t = this.i - 2 >> 1;
    return t >= e.length ? $t.empty : e[t];
  }
  textBit(e) {
    let { inserted: t } = this.set, i = this.i - 2 >> 1;
    return i >= t.length && !e ? $t.empty : t[i].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class xa {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.flags = i;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, t = -1) {
    let i, s;
    return this.empty ? i = s = e.mapPos(this.from, t) : (i = e.mapPos(this.from, 1), s = e.mapPos(this.to, -1)), i == this.from && s == this.to ? this : new xa(i, s, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, t = e) {
    if (e <= this.anchor && t >= this.anchor)
      return ue.range(e, t);
    let i = Math.abs(e - this.anchor) > Math.abs(t - this.anchor) ? e : t;
    return ue.range(this.anchor, i);
  }
  /**
  Compare this range to another range.
  */
  eq(e, t = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!t || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return ue.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new xa(e, t, i);
  }
}
class ue {
  constructor(e, t) {
    this.ranges = e, this.mainIndex = t;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, t = -1) {
    return e.empty ? this : ue.create(this.ranges.map((i) => i.map(e, t)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, t = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let i = 0; i < this.ranges.length; i++)
      if (!this.ranges[i].eq(e.ranges[i], t))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new ue([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, t = !0) {
    return ue.create([e].concat(this.ranges), t ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, t = this.mainIndex) {
    let i = this.ranges.slice();
    return i[t] = e, ue.create(i, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new ue(e.ranges.map((t) => xa.fromJSON(t)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, t = e) {
    return new ue([ue.range(e, t)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, t = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let i = 0, s = 0; s < e.length; s++) {
      let r = e[s];
      if (r.empty ? r.from <= i : r.from < i)
        return ue.normalized(e.slice(), t);
      i = r.to;
    }
    return new ue(e, t);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, t = 0, i, s) {
    return xa.create(e, e, (t == 0 ? 0 : t < 0 ? 8 : 16) | (i == null ? 7 : Math.min(6, i)) | (s ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, t, i, s) {
    let r = (i ?? 16777215) << 6 | (s == null ? 7 : Math.min(6, s));
    return t < e ? xa.create(t, e, 48 | r) : xa.create(e, t, (t > e ? 8 : 0) | r);
  }
  /**
  @internal
  */
  static normalized(e, t = 0) {
    let i = e[t];
    e.sort((s, r) => s.from - r.from), t = e.indexOf(i);
    for (let s = 1; s < e.length; s++) {
      let r = e[s], o = e[s - 1];
      if (r.empty ? r.from <= o.to : r.from < o.to) {
        let l = o.from, a = Math.max(r.to, o.to);
        s <= t && t--, e.splice(--s, 2, r.anchor > r.head ? ue.range(a, l) : ue.range(l, a));
      }
    }
    return new ue(e, t);
  }
}
function OR(n, e) {
  for (let t of n.ranges)
    if (t.to > e)
      throw new RangeError("Selection points outside of document");
}
let Ew = 0;
class Me {
  constructor(e, t, i, s, r) {
    this.combine = e, this.compareInput = t, this.compare = i, this.isStatic = s, this.id = Ew++, this.default = e([]), this.extensions = typeof r == "function" ? r(this) : r;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new Me(e.combine || ((t) => t), e.compareInput || ((t, i) => t === i), e.compare || (e.combine ? (t, i) => t === i : Aw), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new hg([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new hg(e, this, 1, t);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, t) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new hg(e, this, 2, t);
  }
  from(e, t) {
    return t || (t = (i) => i), this.compute([e], (i) => t(i.field(e)));
  }
}
function Aw(n, e) {
  return n == e || n.length == e.length && n.every((t, i) => t === e[i]);
}
class hg {
  constructor(e, t, i, s) {
    this.dependencies = e, this.facet = t, this.type = i, this.value = s, this.id = Ew++;
  }
  dynamicSlot(e) {
    var t;
    let i = this.value, s = this.facet.compareInput, r = this.id, o = e[r] >> 1, l = this.type == 2, a = !1, c = !1, u = [];
    for (let h of this.dependencies)
      h == "doc" ? a = !0 : h == "selection" ? c = !0 : ((t = e[h.id]) !== null && t !== void 0 ? t : 1) & 1 || u.push(e[h.id]);
    return {
      create(h) {
        return h.values[o] = i(h), 1;
      },
      update(h, d) {
        if (a && d.docChanged || c && (d.docChanged || d.selection) || Vy(h, u)) {
          let f = i(h);
          if (l ? !Ak(f, h.values[o], s) : !s(f, h.values[o]))
            return h.values[o] = f, 1;
        }
        return 0;
      },
      reconfigure: (h, d) => {
        let f, p = d.config.address[r];
        if (p != null) {
          let g = am(d, p);
          if (this.dependencies.every((m) => m instanceof Me ? d.facet(m) === h.facet(m) : m instanceof ui ? d.field(m, !1) == h.field(m, !1) : !0) || (l ? Ak(f = i(h), g, s) : s(f = i(h), g)))
            return h.values[o] = g, 0;
        } else
          f = i(h);
        return h.values[o] = f, 1;
      }
    };
  }
}
function Ak(n, e, t) {
  if (n.length != e.length)
    return !1;
  for (let i = 0; i < n.length; i++)
    if (!t(n[i], e[i]))
      return !1;
  return !0;
}
function Vy(n, e) {
  let t = !1;
  for (let i of e)
    ld(n, i) & 1 && (t = !0);
  return t;
}
function soe(n, e, t) {
  let i = t.map((a) => n[a.id]), s = t.map((a) => a.type), r = i.filter((a) => !(a & 1)), o = n[e.id] >> 1;
  function l(a) {
    let c = [];
    for (let u = 0; u < i.length; u++) {
      let h = am(a, i[u]);
      if (s[u] == 2)
        for (let d of h)
          c.push(d);
      else
        c.push(h);
    }
    return e.combine(c);
  }
  return {
    create(a) {
      for (let c of i)
        ld(a, c);
      return a.values[o] = l(a), 1;
    },
    update(a, c) {
      if (!Vy(a, r))
        return 0;
      let u = l(a);
      return e.compare(u, a.values[o]) ? 0 : (a.values[o] = u, 1);
    },
    reconfigure(a, c) {
      let u = Vy(a, i), h = c.config.facets[e.id], d = c.facet(e);
      if (h && !u && Aw(t, h))
        return a.values[o] = d, 0;
      let f = l(a);
      return e.compare(f, d) ? (a.values[o] = d, 0) : (a.values[o] = f, 1);
    }
  };
}
const $k = /* @__PURE__ */ Me.define({ static: !0 });
class ui {
  constructor(e, t, i, s, r) {
    this.id = e, this.createF = t, this.updateF = i, this.compareF = s, this.spec = r, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let t = new ui(Ew++, e.create, e.update, e.compare || ((i, s) => i === s), e);
    return e.provide && (t.provides = e.provide(t)), t;
  }
  create(e) {
    let t = e.facet($k).find((i) => i.field == this);
    return ((t == null ? void 0 : t.create) || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let t = e[this.id] >> 1;
    return {
      create: (i) => (i.values[t] = this.create(i), 1),
      update: (i, s) => {
        let r = i.values[t], o = this.updateF(r, s);
        return this.compareF(r, o) ? 0 : (i.values[t] = o, 1);
      },
      reconfigure: (i, s) => s.config.address[this.id] != null ? (i.values[t] = s.field(this), 0) : (i.values[t] = this.create(i), 1)
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, $k.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const fa = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Oh(n) {
  return (e) => new wR(e, n);
}
const sc = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Oh(fa.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Oh(fa.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Oh(fa.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Oh(fa.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Oh(fa.lowest)
};
class wR {
  constructor(e, t) {
    this.inner = e, this.prec = t;
  }
}
class w0 {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new Fy(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return w0.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class Fy {
  constructor(e, t) {
    this.compartment = e, this.inner = t;
  }
}
class lm {
  constructor(e, t, i, s, r, o) {
    for (this.base = e, this.compartments = t, this.dynamicSlots = i, this.address = s, this.staticValues = r, this.facets = o, this.statusTemplate = []; this.statusTemplate.length < i.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let t = this.address[e.id];
    return t == null ? e.default : this.staticValues[t >> 1];
  }
  static resolve(e, t, i) {
    let s = [], r = /* @__PURE__ */ Object.create(null), o = /* @__PURE__ */ new Map();
    for (let d of roe(e, t, o))
      d instanceof ui ? s.push(d) : (r[d.facet.id] || (r[d.facet.id] = [])).push(d);
    let l = /* @__PURE__ */ Object.create(null), a = [], c = [];
    for (let d of s)
      l[d.id] = c.length << 1, c.push((f) => d.slot(f));
    let u = i == null ? void 0 : i.config.facets;
    for (let d in r) {
      let f = r[d], p = f[0].facet, g = u && u[d] || [];
      if (f.every(
        (m) => m.type == 0
        /* Provider.Static */
      ))
        if (l[p.id] = a.length << 1 | 1, Aw(g, f))
          a.push(i.facet(p));
        else {
          let m = p.combine(f.map((v) => v.value));
          a.push(i && p.compare(m, i.facet(p)) ? i.facet(p) : m);
        }
      else {
        for (let m of f)
          m.type == 0 ? (l[m.id] = a.length << 1 | 1, a.push(m.value)) : (l[m.id] = c.length << 1, c.push((v) => m.dynamicSlot(v)));
        l[p.id] = c.length << 1, c.push((m) => soe(m, p, f));
      }
    }
    let h = c.map((d) => d(l));
    return new lm(e, o, h, l, a, r);
  }
}
function roe(n, e, t) {
  let i = [[], [], [], [], []], s = /* @__PURE__ */ new Map();
  function r(o, l) {
    let a = s.get(o);
    if (a != null) {
      if (a <= l)
        return;
      let c = i[a].indexOf(o);
      c > -1 && i[a].splice(c, 1), o instanceof Fy && t.delete(o.compartment);
    }
    if (s.set(o, l), Array.isArray(o))
      for (let c of o)
        r(c, l);
    else if (o instanceof Fy) {
      if (t.has(o.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let c = e.get(o.compartment) || o.inner;
      t.set(o.compartment, c), r(c, l);
    } else if (o instanceof wR)
      r(o.inner, o.prec);
    else if (o instanceof ui)
      i[l].push(o), o.provides && r(o.provides, l);
    else if (o instanceof hg)
      i[l].push(o), o.facet.extensions && r(o.facet.extensions, fa.default);
    else {
      let c = o.extension;
      if (!c)
        throw new Error(`Unrecognized extension value in extension set (${o}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      r(c, l);
    }
  }
  return r(n, fa.default), i.reduce((o, l) => o.concat(l));
}
function ld(n, e) {
  if (e & 1)
    return 2;
  let t = e >> 1, i = n.status[t];
  if (i == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (i & 2)
    return i;
  n.status[t] = 4;
  let s = n.computeSlot(n, n.config.dynamicSlots[t]);
  return n.status[t] = 2 | s;
}
function am(n, e) {
  return e & 1 ? n.config.staticValues[e >> 1] : n.values[e >> 1];
}
const xR = /* @__PURE__ */ Me.define(), Zy = /* @__PURE__ */ Me.define({
  combine: (n) => n.some((e) => e),
  static: !0
}), SR = /* @__PURE__ */ Me.define({
  combine: (n) => n.length ? n[0] : void 0,
  static: !0
}), CR = /* @__PURE__ */ Me.define(), kR = /* @__PURE__ */ Me.define(), PR = /* @__PURE__ */ Me.define(), ER = /* @__PURE__ */ Me.define({
  combine: (n) => n.length ? n[0] : !1
});
class Go {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new ooe();
  }
}
class ooe {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new Go(this, e);
  }
}
class loe {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new ct(this, e);
  }
}
class ct {
  /**
  @internal
  */
  constructor(e, t) {
    this.type = e, this.value = t;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let t = this.type.map(this.value, e);
    return t === void 0 ? void 0 : t == this.value ? this : new ct(this.type, t);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new loe(e.map || ((t) => t));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, t) {
    if (!e.length)
      return e;
    let i = [];
    for (let s of e) {
      let r = s.map(t);
      r && i.push(r);
    }
    return i;
  }
}
ct.reconfigure = /* @__PURE__ */ ct.define();
ct.appendConfig = /* @__PURE__ */ ct.define();
class Nn {
  constructor(e, t, i, s, r, o) {
    this.startState = e, this.changes = t, this.selection = i, this.effects = s, this.annotations = r, this.scrollIntoView = o, this._doc = null, this._state = null, i && OR(i, t.newLength), r.some((l) => l.type == Nn.time) || (this.annotations = r.concat(Nn.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, t, i, s, r, o) {
    return new Nn(e, t, i, s, r, o);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let t of this.annotations)
      if (t.type == e)
        return t.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let t = this.annotation(Nn.userEvent);
    return !!(t && (t == e || t.length > e.length && t.slice(0, e.length) == e && t[e.length] == "."));
  }
}
Nn.time = /* @__PURE__ */ Go.define();
Nn.userEvent = /* @__PURE__ */ Go.define();
Nn.addToHistory = /* @__PURE__ */ Go.define();
Nn.remote = /* @__PURE__ */ Go.define();
function aoe(n, e) {
  let t = [];
  for (let i = 0, s = 0; ; ) {
    let r, o;
    if (i < n.length && (s == e.length || e[s] >= n[i]))
      r = n[i++], o = n[i++];
    else if (s < e.length)
      r = e[s++], o = e[s++];
    else
      return t;
    !t.length || t[t.length - 1] < r ? t.push(r, o) : t[t.length - 1] < o && (t[t.length - 1] = o);
  }
}
function AR(n, e, t) {
  var i;
  let s, r, o;
  return t ? (s = e.changes, r = Wn.empty(e.changes.length), o = n.changes.compose(e.changes)) : (s = e.changes.map(n.changes), r = n.changes.mapDesc(e.changes, !0), o = n.changes.compose(s)), {
    changes: o,
    selection: e.selection ? e.selection.map(r) : (i = n.selection) === null || i === void 0 ? void 0 : i.map(s),
    effects: ct.mapEffects(n.effects, s).concat(ct.mapEffects(e.effects, r)),
    annotations: n.annotations.length ? n.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: n.scrollIntoView || e.scrollIntoView
  };
}
function qy(n, e, t) {
  let i = e.selection, s = zc(e.annotations);
  return e.userEvent && (s = s.concat(Nn.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof Wn ? e.changes : Wn.of(e.changes || [], t, n.facet(SR)),
    selection: i && (i instanceof ue ? i : ue.single(i.anchor, i.head)),
    effects: zc(e.effects),
    annotations: s,
    scrollIntoView: !!e.scrollIntoView
  };
}
function $R(n, e, t) {
  let i = qy(n, e.length ? e[0] : {}, n.doc.length);
  e.length && e[0].filter === !1 && (t = !1);
  for (let r = 1; r < e.length; r++) {
    e[r].filter === !1 && (t = !1);
    let o = !!e[r].sequential;
    i = AR(i, qy(n, e[r], o ? i.changes.newLength : n.doc.length), o);
  }
  let s = Nn.create(n, i.changes, i.selection, i.effects, i.annotations, i.scrollIntoView);
  return uoe(t ? coe(s) : s);
}
function coe(n) {
  let e = n.startState, t = !0;
  for (let s of e.facet(CR)) {
    let r = s(n);
    if (r === !1) {
      t = !1;
      break;
    }
    Array.isArray(r) && (t = t === !0 ? r : aoe(t, r));
  }
  if (t !== !0) {
    let s, r;
    if (t === !1)
      r = n.changes.invertedDesc, s = Wn.empty(e.doc.length);
    else {
      let o = n.changes.filter(t);
      s = o.changes, r = o.filtered.mapDesc(o.changes).invertedDesc;
    }
    n = Nn.create(e, s, n.selection && n.selection.map(r), ct.mapEffects(n.effects, r), n.annotations, n.scrollIntoView);
  }
  let i = e.facet(kR);
  for (let s = i.length - 1; s >= 0; s--) {
    let r = i[s](n);
    r instanceof Nn ? n = r : Array.isArray(r) && r.length == 1 && r[0] instanceof Nn ? n = r[0] : n = $R(e, zc(r), !1);
  }
  return n;
}
function uoe(n) {
  let e = n.startState, t = e.facet(PR), i = n;
  for (let s = t.length - 1; s >= 0; s--) {
    let r = t[s](n);
    r && Object.keys(r).length && (i = AR(i, qy(e, r, n.changes.newLength), !0));
  }
  return i == n ? n : Nn.create(e, n.changes, n.selection, i.effects, i.annotations, i.scrollIntoView);
}
const hoe = [];
function zc(n) {
  return n == null ? hoe : Array.isArray(n) ? n : [n];
}
var an = /* @__PURE__ */ function(n) {
  return n[n.Word = 0] = "Word", n[n.Space = 1] = "Space", n[n.Other = 2] = "Other", n;
}(an || (an = {}));
const doe = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let Wy;
try {
  Wy = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function foe(n) {
  if (Wy)
    return Wy.test(n);
  for (let e = 0; e < n.length; e++) {
    let t = n[e];
    if (/\w/.test(t) || t > "" && (t.toUpperCase() != t.toLowerCase() || doe.test(t)))
      return !0;
  }
  return !1;
}
function poe(n) {
  return (e) => {
    if (!/\S/.test(e))
      return an.Space;
    if (foe(e))
      return an.Word;
    for (let t = 0; t < n.length; t++)
      if (e.indexOf(n[t]) > -1)
        return an.Word;
    return an.Other;
  };
}
class Et {
  constructor(e, t, i, s, r, o) {
    this.config = e, this.doc = t, this.selection = i, this.values = s, this.status = e.statusTemplate.slice(), this.computeSlot = r, o && (o._state = this);
    for (let l = 0; l < this.config.dynamicSlots.length; l++)
      ld(this, l << 1);
    this.computeSlot = null;
  }
  field(e, t = !0) {
    let i = this.config.address[e.id];
    if (i == null) {
      if (t)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return ld(this, i), am(this, i);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return $R(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let t = this.config, { base: i, compartments: s } = t;
    for (let l of e.effects)
      l.is(w0.reconfigure) ? (t && (s = /* @__PURE__ */ new Map(), t.compartments.forEach((a, c) => s.set(c, a)), t = null), s.set(l.value.compartment, l.value.extension)) : l.is(ct.reconfigure) ? (t = null, i = l.value) : l.is(ct.appendConfig) && (t = null, i = zc(i).concat(l.value));
    let r;
    t ? r = e.startState.values.slice() : (t = lm.resolve(i, s, this), r = new Et(t, this.doc, this.selection, t.dynamicSlots.map(() => null), (a, c) => c.reconfigure(a, this), null).values);
    let o = e.startState.facet(Zy) ? e.newSelection : e.newSelection.asSingle();
    new Et(t, e.newDoc, o, r, (l, a) => a.update(l, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((t) => ({
      changes: { from: t.from, to: t.to, insert: e },
      range: ue.cursor(t.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let t = this.selection, i = e(t.ranges[0]), s = this.changes(i.changes), r = [i.range], o = zc(i.effects);
    for (let l = 1; l < t.ranges.length; l++) {
      let a = e(t.ranges[l]), c = this.changes(a.changes), u = c.map(s);
      for (let d = 0; d < l; d++)
        r[d] = r[d].map(u);
      let h = s.mapDesc(c, !0);
      r.push(a.range.map(h)), s = s.compose(u), o = ct.mapEffects(o, u).concat(ct.mapEffects(zc(a.effects), h));
    }
    return {
      changes: s,
      selection: ue.create(r, t.mainIndex),
      effects: o
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof Wn ? e : Wn.of(e, this.doc.length, this.facet(Et.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return $t.of(e.split(this.facet(Et.lineSeparator) || Qy));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, t = this.doc.length) {
    return this.doc.sliceString(e, t, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let t = this.config.address[e.id];
    return t == null ? e.default : (ld(this, t), am(this, t));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let t = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let i in e) {
        let s = e[i];
        s instanceof ui && this.config.address[s.id] != null && (t[i] = s.spec.toJSON(this.field(e[i]), this));
      }
    return t;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, t = {}, i) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let s = [];
    if (i) {
      for (let r in i)
        if (Object.prototype.hasOwnProperty.call(e, r)) {
          let o = i[r], l = e[r];
          s.push(o.init((a) => o.spec.fromJSON(l, a)));
        }
    }
    return Et.create({
      doc: e.doc,
      selection: ue.fromJSON(e.selection),
      extensions: t.extensions ? s.concat([t.extensions]) : s
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let t = lm.resolve(e.extensions || [], /* @__PURE__ */ new Map()), i = e.doc instanceof $t ? e.doc : $t.of((e.doc || "").split(t.staticFacet(Et.lineSeparator) || Qy)), s = e.selection ? e.selection instanceof ue ? e.selection : ue.single(e.selection.anchor, e.selection.head) : ue.single(0);
    return OR(s, i.length), t.staticFacet(Zy) || (s = s.asSingle()), new Et(t, i, s, t.dynamicSlots.map(() => null), (r, o) => o.create(r), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(Et.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(Et.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(ER);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...t) {
    for (let i of this.facet(Et.phrases))
      if (Object.prototype.hasOwnProperty.call(i, e)) {
        e = i[e];
        break;
      }
    return t.length && (e = e.replace(/\$(\$|\d*)/g, (i, s) => {
      if (s == "$")
        return "$";
      let r = +(s || 1);
      return !r || r > t.length ? i : t[r - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, t, i = -1) {
    let s = [];
    for (let r of this.facet(xR))
      for (let o of r(this, t, i))
        Object.prototype.hasOwnProperty.call(o, e) && s.push(o[e]);
    return s;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return poe(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: t, from: i, length: s } = this.doc.lineAt(e), r = this.charCategorizer(e), o = e - i, l = e - i;
    for (; o > 0; ) {
      let a = Ci(t, o, !1);
      if (r(t.slice(a, o)) != an.Word)
        break;
      o = a;
    }
    for (; l < s; ) {
      let a = Ci(t, l);
      if (r(t.slice(l, a)) != an.Word)
        break;
      l = a;
    }
    return o == l ? null : ue.range(o + i, l + i);
  }
}
Et.allowMultipleSelections = Zy;
Et.tabSize = /* @__PURE__ */ Me.define({
  combine: (n) => n.length ? n[0] : 4
});
Et.lineSeparator = SR;
Et.readOnly = ER;
Et.phrases = /* @__PURE__ */ Me.define({
  compare(n, e) {
    let t = Object.keys(n), i = Object.keys(e);
    return t.length == i.length && t.every((s) => n[s] == e[s]);
  }
});
Et.languageData = xR;
Et.changeFilter = CR;
Et.transactionFilter = kR;
Et.transactionExtender = PR;
w0.reconfigure = /* @__PURE__ */ ct.define();
function bo(n, e, t = {}) {
  let i = {};
  for (let s of n)
    for (let r of Object.keys(s)) {
      let o = s[r], l = i[r];
      if (l === void 0)
        i[r] = o;
      else if (!(l === o || o === void 0))
        if (Object.hasOwnProperty.call(t, r))
          i[r] = t[r](l, o);
        else
          throw new Error("Config merge conflict for field " + r);
    }
  for (let s in e)
    i[s] === void 0 && (i[s] = e[s]);
  return i;
}
class qa {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, t = e) {
    return Hy.create(e, t, this);
  }
}
qa.prototype.startSide = qa.prototype.endSide = 0;
qa.prototype.point = !1;
qa.prototype.mapMode = wi.TrackDel;
let Hy = class TR {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.value = i;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new TR(e, t, i);
  }
};
function Xy(n, e) {
  return n.from - e.from || n.value.startSide - e.value.startSide;
}
class $w {
  constructor(e, t, i, s) {
    this.from = e, this.to = t, this.value = i, this.maxPoint = s;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, t, i, s = 0) {
    let r = i ? this.to : this.from;
    for (let o = s, l = r.length; ; ) {
      if (o == l)
        return o;
      let a = o + l >> 1, c = r[a] - e || (i ? this.value[a].endSide : this.value[a].startSide) - t;
      if (a == o)
        return c >= 0 ? o : l;
      c >= 0 ? l = a : o = a + 1;
    }
  }
  between(e, t, i, s) {
    for (let r = this.findIndex(t, -1e9, !0), o = this.findIndex(i, 1e9, !1, r); r < o; r++)
      if (s(this.from[r] + e, this.to[r] + e, this.value[r]) === !1)
        return !1;
  }
  map(e, t) {
    let i = [], s = [], r = [], o = -1, l = -1;
    for (let a = 0; a < this.value.length; a++) {
      let c = this.value[a], u = this.from[a] + e, h = this.to[a] + e, d, f;
      if (u == h) {
        let p = t.mapPos(u, c.startSide, c.mapMode);
        if (p == null || (d = f = p, c.startSide != c.endSide && (f = t.mapPos(u, c.endSide), f < d)))
          continue;
      } else if (d = t.mapPos(u, c.startSide), f = t.mapPos(h, c.endSide), d > f || d == f && c.startSide > 0 && c.endSide <= 0)
        continue;
      (f - d || c.endSide - c.startSide) < 0 || (o < 0 && (o = d), c.point && (l = Math.max(l, f - d)), i.push(c), s.push(d - o), r.push(f - o));
    }
    return { mapped: i.length ? new $w(s, r, i, l) : null, pos: o };
  }
}
class kt {
  constructor(e, t, i, s) {
    this.chunkPos = e, this.chunk = t, this.nextLayer = i, this.maxPoint = s;
  }
  /**
  @internal
  */
  static create(e, t, i, s) {
    return new kt(e, t, i, s);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let t of this.chunk)
      e += t.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: t = [], sort: i = !1, filterFrom: s = 0, filterTo: r = this.length } = e, o = e.filter;
    if (t.length == 0 && !o)
      return this;
    if (i && (t = t.slice().sort(Xy)), this.isEmpty)
      return t.length ? kt.of(t) : this;
    let l = new _R(this, null, -1).goto(0), a = 0, c = [], u = new Bl();
    for (; l.value || a < t.length; )
      if (a < t.length && (l.from - t[a].from || l.startSide - t[a].value.startSide) >= 0) {
        let h = t[a++];
        u.addInner(h.from, h.to, h.value) || c.push(h);
      } else
        l.rangeIndex == 1 && l.chunkIndex < this.chunk.length && (a == t.length || this.chunkEnd(l.chunkIndex) < t[a].from) && (!o || s > this.chunkEnd(l.chunkIndex) || r < this.chunkPos[l.chunkIndex]) && u.addChunk(this.chunkPos[l.chunkIndex], this.chunk[l.chunkIndex]) ? l.nextChunk() : ((!o || s > l.to || r < l.from || o(l.from, l.to, l.value)) && (u.addInner(l.from, l.to, l.value) || c.push(Hy.create(l.from, l.to, l.value))), l.next());
    return u.finishInner(this.nextLayer.isEmpty && !c.length ? kt.empty : this.nextLayer.update({ add: c, filter: o, filterFrom: s, filterTo: r }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let t = [], i = [], s = -1;
    for (let o = 0; o < this.chunk.length; o++) {
      let l = this.chunkPos[o], a = this.chunk[o], c = e.touchesRange(l, l + a.length);
      if (c === !1)
        s = Math.max(s, a.maxPoint), t.push(a), i.push(e.mapPos(l));
      else if (c === !0) {
        let { mapped: u, pos: h } = a.map(l, e);
        u && (s = Math.max(s, u.maxPoint), t.push(u), i.push(h));
      }
    }
    let r = this.nextLayer.map(e);
    return t.length == 0 ? r : new kt(i, t, r || kt.empty, s);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, t, i) {
    if (!this.isEmpty) {
      for (let s = 0; s < this.chunk.length; s++) {
        let r = this.chunkPos[s], o = this.chunk[s];
        if (t >= r && e <= r + o.length && o.between(r, e - r, t - r, i) === !1)
          return;
      }
      this.nextLayer.between(e, t, i);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return Zd.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, t = 0) {
    return Zd.from(e).goto(t);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, t, i, s, r = -1) {
    let o = e.filter((h) => h.maxPoint > 0 || !h.isEmpty && h.maxPoint >= r), l = t.filter((h) => h.maxPoint > 0 || !h.isEmpty && h.maxPoint >= r), a = Tk(o, l, i), c = new wh(o, a, r), u = new wh(l, a, r);
    i.iterGaps((h, d, f) => _k(c, h, u, d, f, s)), i.empty && i.length == 0 && _k(c, 0, u, 0, 0, s);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, t, i = 0, s) {
    s == null && (s = 999999999);
    let r = e.filter((u) => !u.isEmpty && t.indexOf(u) < 0), o = t.filter((u) => !u.isEmpty && e.indexOf(u) < 0);
    if (r.length != o.length)
      return !1;
    if (!r.length)
      return !0;
    let l = Tk(r, o), a = new wh(r, l, 0).goto(i), c = new wh(o, l, 0).goto(i);
    for (; ; ) {
      if (a.to != c.to || !Yy(a.active, c.active) || a.point && (!c.point || !a.point.eq(c.point)))
        return !1;
      if (a.to > s)
        return !0;
      a.next(), c.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, t, i, s, r = -1) {
    let o = new wh(e, null, r).goto(t), l = t, a = o.openStart;
    for (; ; ) {
      let c = Math.min(o.to, i);
      if (o.point) {
        let u = o.activeForPoint(o.to), h = o.pointFrom < t ? u.length + 1 : o.point.startSide < 0 ? u.length : Math.min(u.length, a);
        s.point(l, c, o.point, u, h, o.pointRank), a = Math.min(o.openEnd(c), u.length);
      } else
        c > l && (s.span(l, c, o.active, a), a = o.openEnd(c));
      if (o.to > i)
        return a + (o.point && o.to > i ? 1 : 0);
      l = o.to, o.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, t = !1) {
    let i = new Bl();
    for (let s of e instanceof Hy ? [e] : t ? goe(e) : e)
      i.add(s.from, s.to, s.value);
    return i.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return kt.empty;
    let t = e[e.length - 1];
    for (let i = e.length - 2; i >= 0; i--)
      for (let s = e[i]; s != kt.empty; s = s.nextLayer)
        t = new kt(s.chunkPos, s.chunk, t, Math.max(s.maxPoint, t.maxPoint));
    return t;
  }
}
kt.empty = /* @__PURE__ */ new kt([], [], null, -1);
function goe(n) {
  if (n.length > 1)
    for (let e = n[0], t = 1; t < n.length; t++) {
      let i = n[t];
      if (Xy(e, i) > 0)
        return n.slice().sort(Xy);
      e = i;
    }
  return n;
}
kt.empty.nextLayer = kt.empty;
class Bl {
  finishChunk(e) {
    this.chunks.push(new $w(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, t, i) {
    this.addInner(e, t, i) || (this.nextLayer || (this.nextLayer = new Bl())).add(e, t, i);
  }
  /**
  @internal
  */
  addInner(e, t, i) {
    let s = e - this.lastTo || i.startSide - this.last.endSide;
    if (s <= 0 && (e - this.lastFrom || i.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return s < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(t - this.chunkStart), this.last = i, this.lastFrom = e, this.lastTo = t, this.value.push(i), i.point && (this.maxPoint = Math.max(this.maxPoint, t - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, t) {
    if ((e - this.lastTo || t.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, t.maxPoint), this.chunks.push(t), this.chunkPos.push(e);
    let i = t.value.length - 1;
    return this.last = t.value[i], this.lastFrom = t.from[i] + e, this.lastTo = t.to[i] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(kt.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let t = kt.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, t;
  }
}
function Tk(n, e, t) {
  let i = /* @__PURE__ */ new Map();
  for (let r of n)
    for (let o = 0; o < r.chunk.length; o++)
      r.chunk[o].maxPoint <= 0 && i.set(r.chunk[o], r.chunkPos[o]);
  let s = /* @__PURE__ */ new Set();
  for (let r of e)
    for (let o = 0; o < r.chunk.length; o++) {
      let l = i.get(r.chunk[o]);
      l != null && (t ? t.mapPos(l) : l) == r.chunkPos[o] && !(t != null && t.touchesRange(l, l + r.chunk[o].length)) && s.add(r.chunk[o]);
    }
  return s;
}
class _R {
  constructor(e, t, i, s = 0) {
    this.layer = e, this.skip = t, this.minPoint = i, this.rank = s;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, t = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, t, !1), this;
  }
  gotoInner(e, t, i) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let s = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(s) || this.layer.chunkEnd(this.chunkIndex) < e || s.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, i = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let s = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], t, !0);
      (!i || this.rangeIndex < s) && this.setRangeIndex(s);
    }
    this.next();
  }
  forward(e, t) {
    (this.to - e || this.endSide - t) < 0 && this.gotoInner(e, t, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], t = this.layer.chunk[this.chunkIndex], i = e + t.from[this.rangeIndex];
        if (this.from = i, this.to = e + t.to[this.rangeIndex], this.value = t.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class Zd {
  constructor(e) {
    this.heap = e;
  }
  static from(e, t = null, i = -1) {
    let s = [];
    for (let r = 0; r < e.length; r++)
      for (let o = e[r]; !o.isEmpty; o = o.nextLayer)
        o.maxPoint >= i && s.push(new _R(o, t, i, r));
    return s.length == 1 ? s[0] : new Zd(s);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, t = -1e9) {
    for (let i of this.heap)
      i.goto(e, t);
    for (let i = this.heap.length >> 1; i >= 0; i--)
      Av(this.heap, i);
    return this.next(), this;
  }
  forward(e, t) {
    for (let i of this.heap)
      i.forward(e, t);
    for (let i = this.heap.length >> 1; i >= 0; i--)
      Av(this.heap, i);
    (this.to - e || this.value.endSide - t) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), Av(this.heap, 0);
    }
  }
}
function Av(n, e) {
  for (let t = n[e]; ; ) {
    let i = (e << 1) + 1;
    if (i >= n.length)
      break;
    let s = n[i];
    if (i + 1 < n.length && s.compare(n[i + 1]) >= 0 && (s = n[i + 1], i++), t.compare(s) < 0)
      break;
    n[i] = t, n[e] = s, e = i;
  }
}
class wh {
  constructor(e, t, i) {
    this.minPoint = i, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Zd.from(e, t, i);
  }
  goto(e, t = -1e9) {
    return this.cursor.goto(e, t), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = t, this.openStart = -1, this.next(), this;
  }
  forward(e, t) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - t) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, t);
  }
  removeActive(e) {
    cp(this.active, e), cp(this.activeTo, e), cp(this.activeRank, e), this.minActive = Mk(this.active, this.activeTo);
  }
  addActive(e) {
    let t = 0, { value: i, to: s, rank: r } = this.cursor;
    for (; t < this.activeRank.length && (r - this.activeRank[t] || s - this.activeTo[t]) > 0; )
      t++;
    up(this.active, t, i), up(this.activeTo, t, s), up(this.activeRank, t, r), e && up(e, t, this.cursor.from), this.minActive = Mk(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, t = this.point;
    this.point = null;
    let i = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let s = this.minActive;
      if (s > -1 && (this.activeTo[s] - this.cursor.from || this.active[s].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[s] > e) {
          this.to = this.activeTo[s], this.endSide = this.active[s].endSide;
          break;
        }
        this.removeActive(s), i && cp(i, s);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let r = this.cursor.value;
          if (!r.point)
            this.addActive(i), this.cursor.next();
          else if (t && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = r, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = r.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (i) {
      this.openStart = 0;
      for (let s = i.length - 1; s >= 0 && i[s] < e; s--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let t = [];
    for (let i = this.active.length - 1; i >= 0 && !(this.activeRank[i] < this.pointRank); i--)
      (this.activeTo[i] > e || this.activeTo[i] == e && this.active[i].endSide >= this.point.endSide) && t.push(this.active[i]);
    return t.reverse();
  }
  openEnd(e) {
    let t = 0;
    for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > e; i--)
      t++;
    return t;
  }
}
function _k(n, e, t, i, s, r) {
  n.goto(e), t.goto(i);
  let o = i + s, l = i, a = i - e;
  for (; ; ) {
    let c = n.to + a - t.to || n.endSide - t.endSide, u = c < 0 ? n.to + a : t.to, h = Math.min(u, o);
    if (n.point || t.point ? n.point && t.point && (n.point == t.point || n.point.eq(t.point)) && Yy(n.activeForPoint(n.to), t.activeForPoint(t.to)) || r.comparePoint(l, h, n.point, t.point) : h > l && !Yy(n.active, t.active) && r.compareRange(l, h, n.active, t.active), u > o)
      break;
    l = u, c <= 0 && n.next(), c >= 0 && t.next();
  }
}
function Yy(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (n[t] != e[t] && !n[t].eq(e[t]))
      return !1;
  return !0;
}
function cp(n, e) {
  for (let t = e, i = n.length - 1; t < i; t++)
    n[t] = n[t + 1];
  n.pop();
}
function up(n, e, t) {
  for (let i = n.length - 1; i >= e; i--)
    n[i + 1] = n[i];
  n[e] = t;
}
function Mk(n, e) {
  let t = -1, i = 1e9;
  for (let s = 0; s < e.length; s++)
    (e[s] - i || n[s].endSide - n[t].endSide) < 0 && (t = s, i = e[s]);
  return t;
}
function ch(n, e, t = n.length) {
  let i = 0;
  for (let s = 0; s < t; )
    n.charCodeAt(s) == 9 ? (i += e - i % e, s++) : (i++, s = Ci(n, s));
  return i;
}
function Uy(n, e, t, i) {
  for (let s = 0, r = 0; ; ) {
    if (r >= e)
      return s;
    if (s == n.length)
      break;
    r += n.charCodeAt(s) == 9 ? t - r % t : 1, s = Ci(n, s);
  }
  return i === !0 ? -1 : n.length;
}
const Gy = "ͼ", Rk = typeof Symbol > "u" ? "__" + Gy : Symbol.for(Gy), Ky = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), Nk = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class Ql {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, t) {
    this.rules = [];
    let { finish: i } = t || {};
    function s(o) {
      return /^@/.test(o) ? [o] : o.split(/,\s*/);
    }
    function r(o, l, a, c) {
      let u = [], h = /^@(\w+)\b/.exec(o[0]), d = h && h[1] == "keyframes";
      if (h && l == null)
        return a.push(o[0] + ";");
      for (let f in l) {
        let p = l[f];
        if (/&/.test(f))
          r(
            f.split(/,\s*/).map((g) => o.map((m) => g.replace(/&/, m))).reduce((g, m) => g.concat(m)),
            p,
            a
          );
        else if (p && typeof p == "object") {
          if (!h)
            throw new RangeError("The value of a property (" + f + ") should be a primitive value.");
          r(s(f), p, u, d);
        } else
          p != null && u.push(f.replace(/_.*/, "").replace(/[A-Z]/g, (g) => "-" + g.toLowerCase()) + ": " + p + ";");
      }
      (u.length || d) && a.push((i && !h && !c ? o.map(i) : o).join(", ") + " {" + u.join(" ") + "}");
    }
    for (let o in e)
      r(s(o), e[o], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = Nk[Rk] || 1;
    return Nk[Rk] = e + 1, Gy + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, t, i) {
    let s = e[Ky], r = i && i.nonce;
    s ? r && s.setNonce(r) : s = new moe(e, r), s.mount(Array.isArray(t) ? t : [t]);
  }
}
let Dk = /* @__PURE__ */ new Map();
class moe {
  constructor(e, t) {
    let i = e.ownerDocument || e, s = i.defaultView;
    if (!e.head && e.adoptedStyleSheets && s.CSSStyleSheet) {
      let r = Dk.get(i);
      if (r)
        return e.adoptedStyleSheets = [r.sheet, ...e.adoptedStyleSheets], e[Ky] = r;
      this.sheet = new s.CSSStyleSheet(), e.adoptedStyleSheets = [this.sheet, ...e.adoptedStyleSheets], Dk.set(i, this);
    } else {
      this.styleTag = i.createElement("style"), t && this.styleTag.setAttribute("nonce", t);
      let r = e.head || e;
      r.insertBefore(this.styleTag, r.firstChild);
    }
    this.modules = [], e[Ky] = this;
  }
  mount(e) {
    let t = this.sheet, i = 0, s = 0;
    for (let r = 0; r < e.length; r++) {
      let o = e[r], l = this.modules.indexOf(o);
      if (l < s && l > -1 && (this.modules.splice(l, 1), s--, l = -1), l == -1) {
        if (this.modules.splice(s++, 0, o), t)
          for (let a = 0; a < o.rules.length; a++)
            t.insertRule(o.rules[a], i++);
      } else {
        for (; s < l; )
          i += this.modules[s++].rules.length;
        i += o.rules.length, s++;
      }
    }
    if (!t) {
      let r = "";
      for (let o = 0; o < this.modules.length; o++)
        r += this.modules[o].getRules() + `
`;
      this.styleTag.textContent = r;
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var zl = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, qd = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, voe = typeof navigator < "u" && /Mac/.test(navigator.platform), boe = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var yi = 0; yi < 10; yi++)
  zl[48 + yi] = zl[96 + yi] = String(yi);
for (var yi = 1; yi <= 24; yi++)
  zl[yi + 111] = "F" + yi;
for (var yi = 65; yi <= 90; yi++)
  zl[yi] = String.fromCharCode(yi + 32), qd[yi] = String.fromCharCode(yi);
for (var $v in zl)
  qd.hasOwnProperty($v) || (qd[$v] = zl[$v]);
function yoe(n) {
  var e = voe && n.metaKey && n.shiftKey && !n.ctrlKey && !n.altKey || boe && n.shiftKey && n.key && n.key.length == 1 || n.key == "Unidentified", t = !e && n.key || (n.shiftKey ? qd : zl)[n.keyCode] || n.key || "Unidentified";
  return t == "Esc" && (t = "Escape"), t == "Del" && (t = "Delete"), t == "Left" && (t = "ArrowLeft"), t == "Up" && (t = "ArrowUp"), t == "Right" && (t = "ArrowRight"), t == "Down" && (t = "ArrowDown"), t;
}
function cm(n) {
  let e;
  return n.nodeType == 11 ? e = n.getSelection ? n : n.ownerDocument : e = n, e.getSelection();
}
function Jy(n, e) {
  return e ? n == e || n.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function Ooe(n) {
  let e = n.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function dg(n, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return Jy(n, e.anchorNode);
  } catch {
    return !1;
  }
}
function Wd(n) {
  return n.nodeType == 3 ? Wa(n, 0, n.nodeValue.length).getClientRects() : n.nodeType == 1 ? n.getClientRects() : [];
}
function ad(n, e, t, i) {
  return t ? Lk(n, e, t, i, -1) || Lk(n, e, t, i, 1) : !1;
}
function Hd(n) {
  for (var e = 0; ; e++)
    if (n = n.previousSibling, !n)
      return e;
}
function Lk(n, e, t, i, s) {
  for (; ; ) {
    if (n == t && e == i)
      return !0;
    if (e == (s < 0 ? 0 : Vo(n))) {
      if (n.nodeName == "DIV")
        return !1;
      let r = n.parentNode;
      if (!r || r.nodeType != 1)
        return !1;
      e = Hd(n) + (s < 0 ? 0 : 1), n = r;
    } else if (n.nodeType == 1) {
      if (n = n.childNodes[e + (s < 0 ? -1 : 0)], n.nodeType == 1 && n.contentEditable == "false")
        return !1;
      e = s < 0 ? Vo(n) : 0;
    } else
      return !1;
  }
}
function Vo(n) {
  return n.nodeType == 3 ? n.nodeValue.length : n.childNodes.length;
}
function Tw(n, e) {
  let t = e ? n.left : n.right;
  return { left: t, right: t, top: n.top, bottom: n.bottom };
}
function woe(n) {
  return {
    left: 0,
    right: n.innerWidth,
    top: 0,
    bottom: n.innerHeight
  };
}
function MR(n, e) {
  let t = e.width / n.offsetWidth, i = e.height / n.offsetHeight;
  return (t > 0.995 && t < 1.005 || !isFinite(t) || Math.abs(e.width - n.offsetWidth) < 1) && (t = 1), (i > 0.995 && i < 1.005 || !isFinite(i) || Math.abs(e.height - n.offsetHeight) < 1) && (i = 1), { scaleX: t, scaleY: i };
}
function xoe(n, e, t, i, s, r, o, l) {
  let a = n.ownerDocument, c = a.defaultView || window;
  for (let u = n, h = !1; u && !h; )
    if (u.nodeType == 1) {
      let d, f = u == a.body, p = 1, g = 1;
      if (f)
        d = woe(c);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(u).position) && (h = !0), u.scrollHeight <= u.clientHeight && u.scrollWidth <= u.clientWidth) {
          u = u.assignedSlot || u.parentNode;
          continue;
        }
        let O = u.getBoundingClientRect();
        ({ scaleX: p, scaleY: g } = MR(u, O)), d = {
          left: O.left,
          right: O.left + u.clientWidth * p,
          top: O.top,
          bottom: O.top + u.clientHeight * g
        };
      }
      let m = 0, v = 0;
      if (s == "nearest")
        e.top < d.top ? (v = -(d.top - e.top + o), t > 0 && e.bottom > d.bottom + v && (v = e.bottom - d.bottom + v + o)) : e.bottom > d.bottom && (v = e.bottom - d.bottom + o, t < 0 && e.top - v < d.top && (v = -(d.top + v - e.top + o)));
      else {
        let O = e.bottom - e.top, b = d.bottom - d.top;
        v = (s == "center" && O <= b ? e.top + O / 2 - b / 2 : s == "start" || s == "center" && t < 0 ? e.top - o : e.bottom - b + o) - d.top;
      }
      if (i == "nearest" ? e.left < d.left ? (m = -(d.left - e.left + r), t > 0 && e.right > d.right + m && (m = e.right - d.right + m + r)) : e.right > d.right && (m = e.right - d.right + r, t < 0 && e.left < d.left + m && (m = -(d.left + m - e.left + r))) : m = (i == "center" ? e.left + (e.right - e.left) / 2 - (d.right - d.left) / 2 : i == "start" == l ? e.left - r : e.right - (d.right - d.left) + r) - d.left, m || v)
        if (f)
          c.scrollBy(m, v);
        else {
          let O = 0, b = 0;
          if (v) {
            let w = u.scrollTop;
            u.scrollTop += v / g, b = (u.scrollTop - w) * g;
          }
          if (m) {
            let w = u.scrollLeft;
            u.scrollLeft += m / p, O = (u.scrollLeft - w) * p;
          }
          e = {
            left: e.left - O,
            top: e.top - b,
            right: e.right - O,
            bottom: e.bottom - b
          }, O && Math.abs(O - m) < 1 && (i = "nearest"), b && Math.abs(b - v) < 1 && (s = "nearest");
        }
      if (f)
        break;
      u = u.assignedSlot || u.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
}
function Soe(n) {
  let e = n.ownerDocument;
  for (let t = n.parentNode; t && t != e.body; )
    if (t.nodeType == 1) {
      if (t.scrollHeight > t.clientHeight || t.scrollWidth > t.clientWidth)
        return t;
      t = t.assignedSlot || t.parentNode;
    } else if (t.nodeType == 11)
      t = t.host;
    else
      break;
  return null;
}
class Coe {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: t, focusNode: i } = e;
    this.set(t, Math.min(e.anchorOffset, t ? Vo(t) : 0), i, Math.min(e.focusOffset, i ? Vo(i) : 0));
  }
  set(e, t, i, s) {
    this.anchorNode = e, this.anchorOffset = t, this.focusNode = i, this.focusOffset = s;
  }
}
let mc = null;
function RR(n) {
  if (n.setActive)
    return n.setActive();
  if (mc)
    return n.focus(mc);
  let e = [];
  for (let t = n; t && (e.push(t, t.scrollTop, t.scrollLeft), t != t.ownerDocument); t = t.parentNode)
    ;
  if (n.focus(mc == null ? {
    get preventScroll() {
      return mc = { preventScroll: !0 }, !0;
    }
  } : void 0), !mc) {
    mc = !1;
    for (let t = 0; t < e.length; ) {
      let i = e[t++], s = e[t++], r = e[t++];
      i.scrollTop != s && (i.scrollTop = s), i.scrollLeft != r && (i.scrollLeft = r);
    }
  }
}
let Ik;
function Wa(n, e, t = e) {
  let i = Ik || (Ik = document.createRange());
  return i.setEnd(n, t), i.setStart(n, e), i;
}
function jc(n, e, t) {
  let i = { key: e, code: e, keyCode: t, which: t, cancelable: !0 }, s = new KeyboardEvent("keydown", i);
  s.synthetic = !0, n.dispatchEvent(s);
  let r = new KeyboardEvent("keyup", i);
  return r.synthetic = !0, n.dispatchEvent(r), s.defaultPrevented || r.defaultPrevented;
}
function koe(n) {
  for (; n; ) {
    if (n && (n.nodeType == 9 || n.nodeType == 11 && n.host))
      return n;
    n = n.assignedSlot || n.parentNode;
  }
  return null;
}
function NR(n) {
  for (; n.attributes.length; )
    n.removeAttributeNode(n.attributes[0]);
}
function Poe(n, e) {
  let t = e.focusNode, i = e.focusOffset;
  if (!t || e.anchorNode != t || e.anchorOffset != i)
    return !1;
  for (i = Math.min(i, Vo(t)); ; )
    if (i) {
      if (t.nodeType != 1)
        return !1;
      let s = t.childNodes[i - 1];
      s.contentEditable == "false" ? i-- : (t = s, i = Vo(t));
    } else {
      if (t == n)
        return !0;
      i = Hd(t), t = t.parentNode;
    }
}
function DR(n) {
  return n.scrollTop > Math.max(1, n.scrollHeight - n.clientHeight - 4);
}
class Mi {
  constructor(e, t, i = !0) {
    this.node = e, this.offset = t, this.precise = i;
  }
  static before(e, t) {
    return new Mi(e.parentNode, Hd(e), t);
  }
  static after(e, t) {
    return new Mi(e.parentNode, Hd(e) + 1, t);
  }
}
const _w = [];
class tn {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let t = this.posAtStart;
    for (let i of this.children) {
      if (i == e)
        return t;
      t += i.length + i.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, t) {
    if (this.flags & 2) {
      let i = this.dom, s = null, r;
      for (let o of this.children) {
        if (o.flags & 7) {
          if (!o.dom && (r = s ? s.nextSibling : i.firstChild)) {
            let l = tn.get(r);
            (!l || !l.parent && l.canReuseDOM(o)) && o.reuseDOM(r);
          }
          o.sync(e, t), o.flags &= -8;
        }
        if (r = s ? s.nextSibling : i.firstChild, t && !t.written && t.node == i && r != o.dom && (t.written = !0), o.dom.parentNode == i)
          for (; r && r != o.dom; )
            r = Bk(r);
        else
          i.insertBefore(o.dom, r);
        s = o.dom;
      }
      for (r = s ? s.nextSibling : i.firstChild, r && t && t.node == i && (t.written = !0); r; )
        r = Bk(r);
    } else if (this.flags & 1)
      for (let i of this.children)
        i.flags & 7 && (i.sync(e, t), i.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, t) {
    let i;
    if (e == this.dom)
      i = this.dom.childNodes[t];
    else {
      let s = Vo(e) == 0 ? 0 : t == 0 ? -1 : 1;
      for (; ; ) {
        let r = e.parentNode;
        if (r == this.dom)
          break;
        s == 0 && r.firstChild != r.lastChild && (e == r.firstChild ? s = -1 : s = 1), e = r;
      }
      s < 0 ? i = e : i = e.nextSibling;
    }
    if (i == this.dom.firstChild)
      return 0;
    for (; i && !tn.get(i); )
      i = i.nextSibling;
    if (!i)
      return this.length;
    for (let s = 0, r = 0; ; s++) {
      let o = this.children[s];
      if (o.dom == i)
        return r;
      r += o.length + o.breakAfter;
    }
  }
  domBoundsAround(e, t, i = 0) {
    let s = -1, r = -1, o = -1, l = -1;
    for (let a = 0, c = i, u = i; a < this.children.length; a++) {
      let h = this.children[a], d = c + h.length;
      if (c < e && d > t)
        return h.domBoundsAround(e, t, c);
      if (d >= e && s == -1 && (s = a, r = c), c > t && h.dom.parentNode == this.dom) {
        o = a, l = u;
        break;
      }
      u = d, c = d + h.breakAfter;
    }
    return {
      from: r,
      to: l < 0 ? i + this.length : l,
      startDOM: (s ? this.children[s - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: o < this.children.length && o >= 0 ? this.children[o].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let t = this.parent; t; t = t.parent) {
      if (e && (t.flags |= 2), t.flags & 1)
        return;
      t.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let t = e.parent;
      if (!t)
        return e;
      e = t;
    }
  }
  replaceChildren(e, t, i = _w) {
    this.markDirty();
    for (let s = e; s < t; s++) {
      let r = this.children[s];
      r.parent == this && i.indexOf(r) < 0 && r.destroy();
    }
    this.children.splice(e, t - e, ...i);
    for (let s = 0; s < i.length; s++)
      i[s].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new LR(this.children, e, this.children.length);
  }
  childPos(e, t = 1) {
    return this.childCursor().findPos(e, t);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, t, i, s, r, o) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
tn.prototype.breakAfter = 0;
function Bk(n) {
  let e = n.nextSibling;
  return n.parentNode.removeChild(n), e;
}
class LR {
  constructor(e, t, i) {
    this.children = e, this.pos = t, this.i = i, this.off = 0;
  }
  findPos(e, t = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (t > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let i = this.children[--this.i];
      this.pos -= i.length + i.breakAfter;
    }
  }
}
function IR(n, e, t, i, s, r, o, l, a) {
  let { children: c } = n, u = c.length ? c[e] : null, h = r.length ? r[r.length - 1] : null, d = h ? h.breakAfter : o;
  if (!(e == i && u && !o && !d && r.length < 2 && u.merge(t, s, r.length ? h : null, t == 0, l, a))) {
    if (i < c.length) {
      let f = c[i];
      f && (s < f.length || f.breakAfter && (h != null && h.breakAfter)) ? (e == i && (f = f.split(s), s = 0), !d && h && f.merge(0, s, h, !0, 0, a) ? r[r.length - 1] = f : ((s || f.children.length && !f.children[0].length) && f.merge(0, s, null, !1, 0, a), r.push(f))) : f != null && f.breakAfter && (h ? h.breakAfter = 1 : o = 1), i++;
    }
    for (u && (u.breakAfter = o, t > 0 && (!o && r.length && u.merge(t, u.length, r[0], !1, l, 0) ? u.breakAfter = r.shift().breakAfter : (t < u.length || u.children.length && u.children[u.children.length - 1].length == 0) && u.merge(t, u.length, null, !1, l, 0), e++)); e < i && r.length; )
      if (c[i - 1].become(r[r.length - 1]))
        i--, r.pop(), a = r.length ? 0 : l;
      else if (c[e].become(r[0]))
        e++, r.shift(), l = r.length ? 0 : a;
      else
        break;
    !r.length && e && i < c.length && !c[e - 1].breakAfter && c[i].merge(0, 0, c[e - 1], !1, l, a) && e--, (e < i || r.length) && n.replaceChildren(e, i, r);
  }
}
function BR(n, e, t, i, s, r) {
  let o = n.childCursor(), { i: l, off: a } = o.findPos(t, 1), { i: c, off: u } = o.findPos(e, -1), h = e - t;
  for (let d of i)
    h += d.length;
  n.length += h, IR(n, c, u, l, a, i, 0, s, r);
}
let Ss = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, eO = typeof document < "u" ? document : { documentElement: { style: {} } };
const tO = /* @__PURE__ */ /Edge\/(\d+)/.exec(Ss.userAgent), QR = /* @__PURE__ */ /MSIE \d/.test(Ss.userAgent), nO = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Ss.userAgent), x0 = !!(QR || nO || tO), Qk = !x0 && /* @__PURE__ */ /gecko\/(\d+)/i.test(Ss.userAgent), Tv = !x0 && /* @__PURE__ */ /Chrome\/(\d+)/.exec(Ss.userAgent), zk = "webkitFontSmoothing" in eO.documentElement.style, zR = !x0 && /* @__PURE__ */ /Apple Computer/.test(Ss.vendor), jk = zR && (/* @__PURE__ */ /Mobile\/\w+/.test(Ss.userAgent) || Ss.maxTouchPoints > 2);
var Ne = {
  mac: jk || /* @__PURE__ */ /Mac/.test(Ss.platform),
  windows: /* @__PURE__ */ /Win/.test(Ss.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(Ss.platform),
  ie: x0,
  ie_version: QR ? eO.documentMode || 6 : nO ? +nO[1] : tO ? +tO[1] : 0,
  gecko: Qk,
  gecko_version: Qk ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(Ss.userAgent) || [0, 0])[1] : 0,
  chrome: !!Tv,
  chrome_version: Tv ? +Tv[1] : 0,
  ios: jk,
  android: /* @__PURE__ */ /Android\b/.test(Ss.userAgent),
  webkit: zk,
  safari: zR,
  webkit_version: zk ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,
  tabSize: eO.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const Eoe = 256;
class Fo extends tn {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, t) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (t && t.node == this.dom && (t.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, t, i) {
    return this.flags & 8 || i && (!(i instanceof Fo) || this.length - (t - e) + i.length > Eoe || i.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (i ? i.text : "") + this.text.slice(t), this.markDirty(), !0);
  }
  split(e) {
    let t = new Fo(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), t.flags |= this.flags & 8, t;
  }
  localPosFromDOM(e, t) {
    return e == this.dom ? t : t ? this.text.length : 0;
  }
  domAtPos(e) {
    return new Mi(this.dom, e);
  }
  domBoundsAround(e, t, i) {
    return { from: i, to: i + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, t) {
    return Aoe(this.dom, e, t);
  }
}
class Zo extends tn {
  constructor(e, t = [], i = 0) {
    super(), this.mark = e, this.children = t, this.length = i;
    for (let s of t)
      s.setParent(this);
  }
  setAttrs(e) {
    if (NR(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let t in this.mark.attrs)
        e.setAttribute(t, this.mark.attrs[t]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, t);
  }
  merge(e, t, i, s, r, o) {
    return i && (!(i instanceof Zo && i.mark.eq(this.mark)) || e && r <= 0 || t < this.length && o <= 0) ? !1 : (BR(this, e, t, i ? i.children.slice() : [], r - 1, o - 1), this.markDirty(), !0);
  }
  split(e) {
    let t = [], i = 0, s = -1, r = 0;
    for (let l of this.children) {
      let a = i + l.length;
      a > e && t.push(i < e ? l.split(e - i) : l), s < 0 && i >= e && (s = r), i = a, r++;
    }
    let o = this.length - e;
    return this.length = e, s > -1 && (this.children.length = s, this.markDirty()), new Zo(this.mark, t, o);
  }
  domAtPos(e) {
    return jR(this, e);
  }
  coordsAt(e, t) {
    return FR(this, e, t);
  }
}
function Aoe(n, e, t) {
  let i = n.nodeValue.length;
  e > i && (e = i);
  let s = e, r = e, o = 0;
  e == 0 && t < 0 || e == i && t >= 0 ? Ne.chrome || Ne.gecko || (e ? (s--, o = 1) : r < i && (r++, o = -1)) : t < 0 ? s-- : r < i && r++;
  let l = Wa(n, s, r).getClientRects();
  if (!l.length)
    return null;
  let a = l[(o ? o < 0 : t >= 0) ? 0 : l.length - 1];
  return Ne.safari && !o && a.width == 0 && (a = Array.prototype.find.call(l, (c) => c.width) || a), o ? Tw(a, o < 0) : a || null;
}
class Sl extends tn {
  static create(e, t, i) {
    return new Sl(e, t, i);
  }
  constructor(e, t, i) {
    super(), this.widget = e, this.length = t, this.side = i, this.prevWidget = null;
  }
  split(e) {
    let t = Sl.create(this.widget, this.length - e, this.side);
    return this.length -= e, t;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, t, i, s, r, o) {
    return i && (!(i instanceof Sl) || !this.widget.compare(i.widget) || e > 0 && r <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (i ? i.length : 0) + (this.length - t), !0);
  }
  become(e) {
    return e instanceof Sl && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return $t.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: t } = e, i = t && t.state.doc, s = this.posAtStart;
    return i ? i.slice(s, s + this.length) : $t.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? Mi.before(this.dom) : Mi.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, t) {
    let i = this.widget.coordsAt(this.dom, e, t);
    if (i)
      return i;
    let s = this.dom.getClientRects(), r = null;
    if (!s.length)
      return null;
    let o = this.side ? this.side < 0 : e > 0;
    for (let l = o ? s.length - 1 : 0; r = s[l], !(e > 0 ? l == 0 : l == s.length - 1 || r.top < r.bottom); l += o ? -1 : 1)
      ;
    return Tw(r, !o);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class Du extends tn {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof Du && e.side == this.side;
  }
  split() {
    return new Du(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? Mi.before(this.dom) : Mi.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return $t.empty;
  }
  get isHidden() {
    return !0;
  }
}
Fo.prototype.children = Sl.prototype.children = Du.prototype.children = _w;
function jR(n, e) {
  let t = n.dom, { children: i } = n, s = 0;
  for (let r = 0; s < i.length; s++) {
    let o = i[s], l = r + o.length;
    if (!(l == r && o.getSide() <= 0)) {
      if (e > r && e < l && o.dom.parentNode == t)
        return o.domAtPos(e - r);
      if (e <= r)
        break;
      r = l;
    }
  }
  for (let r = s; r > 0; r--) {
    let o = i[r - 1];
    if (o.dom.parentNode == t)
      return o.domAtPos(o.length);
  }
  for (let r = s; r < i.length; r++) {
    let o = i[r];
    if (o.dom.parentNode == t)
      return o.domAtPos(0);
  }
  return new Mi(t, 0);
}
function VR(n, e, t) {
  let i, { children: s } = n;
  t > 0 && e instanceof Zo && s.length && (i = s[s.length - 1]) instanceof Zo && i.mark.eq(e.mark) ? VR(i, e.children[0], t - 1) : (s.push(e), e.setParent(n)), n.length += e.length;
}
function FR(n, e, t) {
  let i = null, s = -1, r = null, o = -1;
  function l(c, u) {
    for (let h = 0, d = 0; h < c.children.length && d <= u; h++) {
      let f = c.children[h], p = d + f.length;
      p >= u && (f.children.length ? l(f, u - d) : (!r || r.isHidden && t > 0) && (p > u || d == p && f.getSide() > 0) ? (r = f, o = u - d) : (d < u || d == p && f.getSide() < 0 && !f.isHidden) && (i = f, s = u - d)), d = p;
    }
  }
  l(n, e);
  let a = (t < 0 ? i : r) || i || r;
  return a ? a.coordsAt(Math.max(0, a == i ? s : o), t) : $oe(n);
}
function $oe(n) {
  let e = n.dom.lastChild;
  if (!e)
    return n.dom.getBoundingClientRect();
  let t = Wd(e);
  return t[t.length - 1] || null;
}
function iO(n, e) {
  for (let t in n)
    t == "class" && e.class ? e.class += " " + n.class : t == "style" && e.style ? e.style += ";" + n.style : e[t] = n[t];
  return e;
}
const Vk = /* @__PURE__ */ Object.create(null);
function Mw(n, e, t) {
  if (n == e)
    return !0;
  n || (n = Vk), e || (e = Vk);
  let i = Object.keys(n), s = Object.keys(e);
  if (i.length - (t && i.indexOf(t) > -1 ? 1 : 0) != s.length - (t && s.indexOf(t) > -1 ? 1 : 0))
    return !1;
  for (let r of i)
    if (r != t && (s.indexOf(r) == -1 || n[r] !== e[r]))
      return !1;
  return !0;
}
function sO(n, e, t) {
  let i = !1;
  if (e)
    for (let s in e)
      t && s in t || (i = !0, s == "style" ? n.style.cssText = "" : n.removeAttribute(s));
  if (t)
    for (let s in t)
      e && e[s] == t[s] || (i = !0, s == "style" ? n.style.cssText = t[s] : n.setAttribute(s, t[s]));
  return i;
}
function Toe(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t = 0; t < n.attributes.length; t++) {
    let i = n.attributes[t];
    e[i.name] = i.value;
  }
  return e;
}
class qn extends tn {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, t, i, s, r, o) {
    if (i) {
      if (!(i instanceof qn))
        return !1;
      this.dom || i.transferDOM(this);
    }
    return s && this.setDeco(i ? i.attrs : null), BR(this, e, t, i ? i.children.slice() : [], r, o), !0;
  }
  split(e) {
    let t = new qn();
    if (t.breakAfter = this.breakAfter, this.length == 0)
      return t;
    let { i, off: s } = this.childPos(e);
    s && (t.append(this.children[i].split(s), 0), this.children[i].merge(s, this.children[i].length, null, !1, 0, 0), i++);
    for (let r = i; r < this.children.length; r++)
      t.append(this.children[r], 0);
    for (; i > 0 && this.children[i - 1].length == 0; )
      this.children[--i].destroy();
    return this.children.length = i, this.markDirty(), this.length = e, t;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    Mw(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, t) {
    VR(this, e, t);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let t = e.spec.attributes, i = e.spec.class;
    t && (this.attrs = iO(t, this.attrs || {})), i && (this.attrs = iO({ class: i }, this.attrs || {}));
  }
  domAtPos(e) {
    return jR(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, t) {
    var i;
    this.dom ? this.flags & 4 && (NR(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (sO(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, t);
    let s = this.dom.lastChild;
    for (; s && tn.get(s) instanceof Zo; )
      s = s.lastChild;
    if (!s || !this.length || s.nodeName != "BR" && ((i = tn.get(s)) === null || i === void 0 ? void 0 : i.isEditable) == !1 && (!Ne.ios || !this.children.some((r) => r instanceof Fo))) {
      let r = document.createElement("BR");
      r.cmIgnore = !0, this.dom.appendChild(r);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, t;
    for (let i of this.children) {
      if (!(i instanceof Fo) || /[^ -~]/.test(i.text))
        return null;
      let s = Wd(i.dom);
      if (s.length != 1)
        return null;
      e += s[0].width, t = s[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: t
    } : null;
  }
  coordsAt(e, t) {
    let i = FR(this, e, t);
    if (!this.children.length && i && this.parent) {
      let { heightOracle: s } = this.parent.view.viewState, r = i.bottom - i.top;
      if (Math.abs(r - s.lineHeight) < 2 && s.textHeight < r) {
        let o = (r - s.textHeight) / 2;
        return { top: i.top + o, bottom: i.bottom - o, left: i.left, right: i.left };
      }
    }
    return i;
  }
  become(e) {
    return !1;
  }
  covers() {
    return !0;
  }
  static find(e, t) {
    for (let i = 0, s = 0; i < e.children.length; i++) {
      let r = e.children[i], o = s + r.length;
      if (o >= t) {
        if (r instanceof qn)
          return r;
        if (o > t)
          break;
      }
      s = o + r.breakAfter;
    }
    return null;
  }
}
class Pl extends tn {
  constructor(e, t, i) {
    super(), this.widget = e, this.length = t, this.deco = i, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, t, i, s, r, o) {
    return i && (!(i instanceof Pl) || !this.widget.compare(i.widget) || e > 0 && r <= 0 || t < this.length && o <= 0) ? !1 : (this.length = e + (i ? i.length : 0) + (this.length - t), !0);
  }
  domAtPos(e) {
    return e == 0 ? Mi.before(this.dom) : Mi.after(this.dom, e == this.length);
  }
  split(e) {
    let t = this.length - e;
    this.length = e;
    let i = new Pl(this.widget, t, this.deco);
    return i.breakAfter = this.breakAfter, i;
  }
  get children() {
    return _w;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : $t.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof Pl && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, t) {
    return this.widget.coordsAt(this.dom, e, t);
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: t, endSide: i } = this.deco;
    return t == i ? !1 : e < 0 ? t < 0 : i > 0;
  }
}
class Ko {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, t) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, t, i) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var qi = /* @__PURE__ */ function(n) {
  return n[n.Text = 0] = "Text", n[n.WidgetBefore = 1] = "WidgetBefore", n[n.WidgetAfter = 2] = "WidgetAfter", n[n.WidgetRange = 3] = "WidgetRange", n;
}(qi || (qi = {}));
class He extends qa {
  constructor(e, t, i, s) {
    super(), this.startSide = e, this.endSide = t, this.widget = i, this.spec = s;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new Af(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let t = Math.max(-1e4, Math.min(1e4, e.side || 0)), i = !!e.block;
    return t += i && !e.inlineOrder ? t > 0 ? 3e8 : -4e8 : t > 0 ? 1e8 : -1e8, new jl(e, t, t, i, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let t = !!e.block, i, s;
    if (e.isBlockGap)
      i = -5e8, s = 4e8;
    else {
      let { start: r, end: o } = ZR(e, t);
      i = (r ? t ? -3e8 : -1 : 5e8) - 1, s = (o ? t ? 2e8 : 1 : -6e8) + 1;
    }
    return new jl(e, i, s, t, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new $f(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, t = !1) {
    return kt.of(e, t);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
He.none = kt.empty;
class Af extends He {
  constructor(e) {
    let { start: t, end: i } = ZR(e);
    super(t ? -1 : 5e8, i ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var t, i;
    return this == e || e instanceof Af && this.tagName == e.tagName && (this.class || ((t = this.attrs) === null || t === void 0 ? void 0 : t.class)) == (e.class || ((i = e.attrs) === null || i === void 0 ? void 0 : i.class)) && Mw(this.attrs, e.attrs, "class");
  }
  range(e, t = e) {
    if (e >= t)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, t);
  }
}
Af.prototype.point = !1;
class $f extends He {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof $f && this.spec.class == e.spec.class && Mw(this.spec.attributes, e.spec.attributes);
  }
  range(e, t = e) {
    if (t != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, t);
  }
}
$f.prototype.mapMode = wi.TrackBefore;
$f.prototype.point = !0;
class jl extends He {
  constructor(e, t, i, s, r, o) {
    super(t, i, r, e), this.block = s, this.isReplace = o, this.mapMode = s ? t <= 0 ? wi.TrackBefore : wi.TrackAfter : wi.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? qi.WidgetRange : this.startSide <= 0 ? qi.WidgetBefore : qi.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof jl && _oe(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, t = e) {
    if (this.isReplace && (e > t || e == t && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && t != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, t);
  }
}
jl.prototype.point = !0;
function ZR(n, e = !1) {
  let { inclusiveStart: t, inclusiveEnd: i } = n;
  return t == null && (t = n.inclusive), i == null && (i = n.inclusive), { start: t ?? e, end: i ?? e };
}
function _oe(n, e) {
  return n == e || !!(n && e && n.compare(e));
}
function rO(n, e, t, i = 0) {
  let s = t.length - 1;
  s >= 0 && t[s] + i >= n ? t[s] = Math.max(t[s], e) : t.push(n, e);
}
class cd {
  constructor(e, t, i, s) {
    this.doc = e, this.pos = t, this.end = i, this.disallowBlockEffectsFor = s, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = t;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof Pl && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new qn()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(hp(new Du(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof Pl) && this.getLine();
  }
  buildText(e, t, i) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: r, lineBreak: o, done: l } = this.cursor.next(this.skip);
        if (this.skip = 0, l)
          throw new Error("Ran out of text content when drawing inline views");
        if (o) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = r, this.textOff = 0;
      }
      let s = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(t.slice(t.length - i)), this.getLine().append(hp(new Fo(this.text.slice(this.textOff, this.textOff + s)), t), i), this.atCursorPos = !0, this.textOff += s, e -= s, i = 0;
    }
  }
  span(e, t, i, s) {
    this.buildText(t - e, i, s), this.pos = t, this.openStart < 0 && (this.openStart = s);
  }
  point(e, t, i, s, r, o) {
    if (this.disallowBlockEffectsFor[o] && i instanceof jl) {
      if (i.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (t > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let l = t - e;
    if (i instanceof jl)
      if (i.block)
        i.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new Pl(i.widget || new Fk("div"), l, i));
      else {
        let a = Sl.create(i.widget || new Fk("span"), l, l ? 0 : i.startSide), c = this.atCursorPos && !a.isEditable && r <= s.length && (e < t || i.startSide > 0), u = !a.isEditable && (e < t || r > s.length || i.startSide <= 0), h = this.getLine();
        this.pendingBuffer == 2 && !c && !a.isEditable && (this.pendingBuffer = 0), this.flushBuffer(s), c && (h.append(hp(new Du(1), s), r), r = s.length + Math.max(0, r - s.length)), h.append(hp(a, s), r), this.atCursorPos = u, this.pendingBuffer = u ? e < t || r > s.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = s.slice());
      }
    else
      this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(i);
    l && (this.textOff + l <= this.text.length ? this.textOff += l : (this.skip += l - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = t), this.openStart < 0 && (this.openStart = r);
  }
  static build(e, t, i, s, r) {
    let o = new cd(e, t, i, r);
    return o.openEnd = kt.spans(s, t, i, o), o.openStart < 0 && (o.openStart = o.openEnd), o.finish(o.openEnd), o;
  }
}
function hp(n, e) {
  for (let t of e)
    n = new Zo(t, [n], n.length);
  return n;
}
class Fk extends Ko {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
var nn = /* @__PURE__ */ function(n) {
  return n[n.LTR = 0] = "LTR", n[n.RTL = 1] = "RTL", n;
}(nn || (nn = {}));
const Ha = nn.LTR, Rw = nn.RTL;
function qR(n) {
  let e = [];
  for (let t = 0; t < n.length; t++)
    e.push(1 << +n[t]);
  return e;
}
const Moe = /* @__PURE__ */ qR("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), Roe = /* @__PURE__ */ qR("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), oO = /* @__PURE__ */ Object.create(null), Dr = [];
for (let n of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ n.charCodeAt(0), t = /* @__PURE__ */ n.charCodeAt(1);
  oO[e] = t, oO[t] = -e;
}
function WR(n) {
  return n <= 247 ? Moe[n] : 1424 <= n && n <= 1524 ? 2 : 1536 <= n && n <= 1785 ? Roe[n - 1536] : 1774 <= n && n <= 2220 ? 4 : 8192 <= n && n <= 8204 ? 256 : 64336 <= n && n <= 65023 ? 4 : 1;
}
const Noe = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class Cl {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? Rw : Ha;
  }
  /**
  @internal
  */
  constructor(e, t, i) {
    this.from = e, this.to = t, this.level = i;
  }
  /**
  @internal
  */
  side(e, t) {
    return this.dir == t == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, t) {
    return e == (this.dir == t);
  }
  /**
  @internal
  */
  static find(e, t, i, s) {
    let r = -1;
    for (let o = 0; o < e.length; o++) {
      let l = e[o];
      if (l.from <= t && l.to >= t) {
        if (l.level == i)
          return o;
        (r < 0 || (s != 0 ? s < 0 ? l.from < t : l.to > t : e[r].level > l.level)) && (r = o);
      }
    }
    if (r < 0)
      throw new RangeError("Index out of range");
    return r;
  }
}
function HR(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++) {
    let i = n[t], s = e[t];
    if (i.from != s.from || i.to != s.to || i.direction != s.direction || !HR(i.inner, s.inner))
      return !1;
  }
  return !0;
}
const Vt = [];
function Doe(n, e, t, i, s) {
  for (let r = 0; r <= i.length; r++) {
    let o = r ? i[r - 1].to : e, l = r < i.length ? i[r].from : t, a = r ? 256 : s;
    for (let c = o, u = a, h = a; c < l; c++) {
      let d = WR(n.charCodeAt(c));
      d == 512 ? d = u : d == 8 && h == 4 && (d = 16), Vt[c] = d == 4 ? 2 : d, d & 7 && (h = d), u = d;
    }
    for (let c = o, u = a, h = a; c < l; c++) {
      let d = Vt[c];
      if (d == 128)
        c < l - 1 && u == Vt[c + 1] && u & 24 ? d = Vt[c] = u : Vt[c] = 256;
      else if (d == 64) {
        let f = c + 1;
        for (; f < l && Vt[f] == 64; )
          f++;
        let p = c && u == 8 || f < t && Vt[f] == 8 ? h == 1 ? 1 : 8 : 256;
        for (let g = c; g < f; g++)
          Vt[g] = p;
        c = f - 1;
      } else
        d == 8 && h == 1 && (Vt[c] = 1);
      u = d, d & 7 && (h = d);
    }
  }
}
function Loe(n, e, t, i, s) {
  let r = s == 1 ? 2 : 1;
  for (let o = 0, l = 0, a = 0; o <= i.length; o++) {
    let c = o ? i[o - 1].to : e, u = o < i.length ? i[o].from : t;
    for (let h = c, d, f, p; h < u; h++)
      if (f = oO[d = n.charCodeAt(h)])
        if (f < 0) {
          for (let g = l - 3; g >= 0; g -= 3)
            if (Dr[g + 1] == -f) {
              let m = Dr[g + 2], v = m & 2 ? s : m & 4 ? m & 1 ? r : s : 0;
              v && (Vt[h] = Vt[Dr[g]] = v), l = g;
              break;
            }
        } else {
          if (Dr.length == 189)
            break;
          Dr[l++] = h, Dr[l++] = d, Dr[l++] = a;
        }
      else if ((p = Vt[h]) == 2 || p == 1) {
        let g = p == s;
        a = g ? 0 : 1;
        for (let m = l - 3; m >= 0; m -= 3) {
          let v = Dr[m + 2];
          if (v & 2)
            break;
          if (g)
            Dr[m + 2] |= 2;
          else {
            if (v & 4)
              break;
            Dr[m + 2] |= 4;
          }
        }
      }
  }
}
function Ioe(n, e, t, i) {
  for (let s = 0, r = i; s <= t.length; s++) {
    let o = s ? t[s - 1].to : n, l = s < t.length ? t[s].from : e;
    for (let a = o; a < l; ) {
      let c = Vt[a];
      if (c == 256) {
        let u = a + 1;
        for (; ; )
          if (u == l) {
            if (s == t.length)
              break;
            u = t[s++].to, l = s < t.length ? t[s].from : e;
          } else if (Vt[u] == 256)
            u++;
          else
            break;
        let h = r == 1, d = (u < e ? Vt[u] : i) == 1, f = h == d ? h ? 1 : 2 : i;
        for (let p = u, g = s, m = g ? t[g - 1].to : n; p > a; )
          p == m && (p = t[--g].from, m = g ? t[g - 1].to : n), Vt[--p] = f;
        a = u;
      } else
        r = c, a++;
    }
  }
}
function lO(n, e, t, i, s, r, o) {
  let l = i % 2 ? 2 : 1;
  if (i % 2 == s % 2)
    for (let a = e, c = 0; a < t; ) {
      let u = !0, h = !1;
      if (c == r.length || a < r[c].from) {
        let g = Vt[a];
        g != l && (u = !1, h = g == 16);
      }
      let d = !u && l == 1 ? [] : null, f = u ? i : i + 1, p = a;
      e:
        for (; ; )
          if (c < r.length && p == r[c].from) {
            if (h)
              break e;
            let g = r[c];
            if (!u)
              for (let m = g.to, v = c + 1; ; ) {
                if (m == t)
                  break e;
                if (v < r.length && r[v].from == m)
                  m = r[v++].to;
                else {
                  if (Vt[m] == l)
                    break e;
                  break;
                }
              }
            if (c++, d)
              d.push(g);
            else {
              g.from > a && o.push(new Cl(a, g.from, f));
              let m = g.direction == Ha != !(f % 2);
              aO(n, m ? i + 1 : i, s, g.inner, g.from, g.to, o), a = g.to;
            }
            p = g.to;
          } else {
            if (p == t || (u ? Vt[p] != l : Vt[p] == l))
              break;
            p++;
          }
      d ? lO(n, a, p, i + 1, s, d, o) : a < p && o.push(new Cl(a, p, f)), a = p;
    }
  else
    for (let a = t, c = r.length; a > e; ) {
      let u = !0, h = !1;
      if (!c || a > r[c - 1].to) {
        let g = Vt[a - 1];
        g != l && (u = !1, h = g == 16);
      }
      let d = !u && l == 1 ? [] : null, f = u ? i : i + 1, p = a;
      e:
        for (; ; )
          if (c && p == r[c - 1].to) {
            if (h)
              break e;
            let g = r[--c];
            if (!u)
              for (let m = g.from, v = c; ; ) {
                if (m == e)
                  break e;
                if (v && r[v - 1].to == m)
                  m = r[--v].from;
                else {
                  if (Vt[m - 1] == l)
                    break e;
                  break;
                }
              }
            if (d)
              d.push(g);
            else {
              g.to < a && o.push(new Cl(g.to, a, f));
              let m = g.direction == Ha != !(f % 2);
              aO(n, m ? i + 1 : i, s, g.inner, g.from, g.to, o), a = g.from;
            }
            p = g.from;
          } else {
            if (p == e || (u ? Vt[p - 1] != l : Vt[p - 1] == l))
              break;
            p--;
          }
      d ? lO(n, p, a, i + 1, s, d, o) : p < a && o.push(new Cl(p, a, f)), a = p;
    }
}
function aO(n, e, t, i, s, r, o) {
  let l = e % 2 ? 2 : 1;
  Doe(n, s, r, i, l), Loe(n, s, r, i, l), Ioe(s, r, i, l), lO(n, s, r, e, t, i, o);
}
function Boe(n, e, t) {
  if (!n)
    return [new Cl(0, 0, e == Rw ? 1 : 0)];
  if (e == Ha && !t.length && !Noe.test(n))
    return XR(n.length);
  if (t.length)
    for (; n.length > Vt.length; )
      Vt[Vt.length] = 256;
  let i = [], s = e == Ha ? 0 : 1;
  return aO(n, s, s, t, 0, n.length, i), i;
}
function XR(n) {
  return [new Cl(0, n, 0)];
}
let YR = "";
function Qoe(n, e, t, i, s) {
  var r;
  let o = i.head - n.from, l = Cl.find(e, o, (r = i.bidiLevel) !== null && r !== void 0 ? r : -1, i.assoc), a = e[l], c = a.side(s, t);
  if (o == c) {
    let d = l += s ? 1 : -1;
    if (d < 0 || d >= e.length)
      return null;
    a = e[l = d], o = a.side(!s, t), c = a.side(s, t);
  }
  let u = Ci(n.text, o, a.forward(s, t));
  (u < a.from || u > a.to) && (u = c), YR = n.text.slice(Math.min(o, u), Math.max(o, u));
  let h = l == (s ? e.length - 1 : 0) ? null : e[l + (s ? 1 : -1)];
  return h && u == c && h.level + (s ? 0 : 1) < a.level ? ue.cursor(h.side(!s, t) + n.from, h.forward(s, t) ? 1 : -1, h.level) : ue.cursor(u + n.from, a.forward(s, t) ? -1 : 1, a.level);
}
function zoe(n, e, t) {
  for (let i = e; i < t; i++) {
    let s = WR(n.charCodeAt(i));
    if (s == 1)
      return Ha;
    if (s == 2 || s == 4)
      return Rw;
  }
  return Ha;
}
const UR = /* @__PURE__ */ Me.define(), GR = /* @__PURE__ */ Me.define(), KR = /* @__PURE__ */ Me.define(), JR = /* @__PURE__ */ Me.define(), cO = /* @__PURE__ */ Me.define(), e3 = /* @__PURE__ */ Me.define(), t3 = /* @__PURE__ */ Me.define(), n3 = /* @__PURE__ */ Me.define({
  combine: (n) => n.some((e) => e)
}), i3 = /* @__PURE__ */ Me.define({
  combine: (n) => n.some((e) => e)
});
class Vc {
  constructor(e, t = "nearest", i = "nearest", s = 5, r = 5, o = !1) {
    this.range = e, this.y = t, this.x = i, this.yMargin = s, this.xMargin = r, this.isSnapshot = o;
  }
  map(e) {
    return e.empty ? this : new Vc(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new Vc(ue.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const dp = /* @__PURE__ */ ct.define({ map: (n, e) => n.map(e) });
function Zs(n, e, t) {
  let i = n.facet(JR);
  i.length ? i[0](e) : window.onerror ? window.onerror(String(e), t, void 0, void 0, e) : t ? console.error(t + ":", e) : console.error(e);
}
const S0 = /* @__PURE__ */ Me.define({ combine: (n) => n.length ? n[0] : !0 });
let joe = 0;
const Rh = /* @__PURE__ */ Me.define();
class Bn {
  constructor(e, t, i, s, r) {
    this.id = e, this.create = t, this.domEventHandlers = i, this.domEventObservers = s, this.extension = r(this);
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, t) {
    const { eventHandlers: i, eventObservers: s, provide: r, decorations: o } = t || {};
    return new Bn(joe++, e, i, s, (l) => {
      let a = [Rh.of(l)];
      return o && a.push(Xd.of((c) => {
        let u = c.plugin(l);
        return u ? o(u) : He.none;
      })), r && a.push(r(l)), a;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, t) {
    return Bn.define((i) => new e(i), t);
  }
}
class _v {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let t = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(t);
          } catch (i) {
            if (Zs(t.state, i, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.create(e);
      } catch (t) {
        Zs(e.state, t, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var t;
    if (!((t = this.value) === null || t === void 0) && t.destroy)
      try {
        this.value.destroy();
      } catch (i) {
        Zs(e.state, i, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const s3 = /* @__PURE__ */ Me.define(), Nw = /* @__PURE__ */ Me.define(), Xd = /* @__PURE__ */ Me.define(), r3 = /* @__PURE__ */ Me.define(), Dw = /* @__PURE__ */ Me.define(), o3 = /* @__PURE__ */ Me.define();
function Zk(n, e) {
  let t = n.state.facet(o3);
  if (!t.length)
    return t;
  let i = t.map((r) => r instanceof Function ? r(n) : r), s = [];
  return kt.spans(i, e.from, e.to, {
    point() {
    },
    span(r, o, l, a) {
      let c = r - e.from, u = o - e.from, h = s;
      for (let d = l.length - 1; d >= 0; d--, a--) {
        let f = l[d].spec.bidiIsolate, p;
        if (f == null && (f = zoe(e.text, c, u)), a > 0 && h.length && (p = h[h.length - 1]).to == c && p.direction == f)
          p.to = u, h = p.inner;
        else {
          let g = { from: c, to: u, direction: f, inner: [] };
          h.push(g), h = g.inner;
        }
      }
    }
  }), s;
}
const l3 = /* @__PURE__ */ Me.define();
function a3(n) {
  let e = 0, t = 0, i = 0, s = 0;
  for (let r of n.state.facet(l3)) {
    let o = r(n);
    o && (o.left != null && (e = Math.max(e, o.left)), o.right != null && (t = Math.max(t, o.right)), o.top != null && (i = Math.max(i, o.top)), o.bottom != null && (s = Math.max(s, o.bottom)));
  }
  return { left: e, right: t, top: i, bottom: s };
}
const Nh = /* @__PURE__ */ Me.define();
class qs {
  constructor(e, t, i, s) {
    this.fromA = e, this.toA = t, this.fromB = i, this.toB = s;
  }
  join(e) {
    return new qs(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let t = e.length, i = this;
    for (; t > 0; t--) {
      let s = e[t - 1];
      if (!(s.fromA > i.toA)) {
        if (s.toA < i.fromA)
          break;
        i = i.join(s), e.splice(t - 1, 1);
      }
    }
    return e.splice(t, 0, i), e;
  }
  static extendWithRanges(e, t) {
    if (t.length == 0)
      return e;
    let i = [];
    for (let s = 0, r = 0, o = 0, l = 0; ; s++) {
      let a = s == e.length ? null : e[s], c = o - l, u = a ? a.fromB : 1e9;
      for (; r < t.length && t[r] < u; ) {
        let h = t[r], d = t[r + 1], f = Math.max(l, h), p = Math.min(u, d);
        if (f <= p && new qs(f + c, p + c, f, p).addToSet(i), d > u)
          break;
        r += 2;
      }
      if (!a)
        return i;
      new qs(a.fromA, a.toA, a.fromB, a.toB).addToSet(i), o = a.toA, l = a.toB;
    }
  }
}
class um {
  constructor(e, t, i) {
    this.view = e, this.state = t, this.transactions = i, this.flags = 0, this.startState = e.state, this.changes = Wn.empty(this.startState.doc.length);
    for (let r of i)
      this.changes = this.changes.compose(r.changes);
    let s = [];
    this.changes.iterChangedRanges((r, o, l, a) => s.push(new qs(r, o, l, a))), this.changedRanges = s;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new um(e, t, i);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 10) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class qk extends tn {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new qn()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new qs(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var t;
    let i = e.changedRanges;
    this.minWidth > 0 && i.length && (i.every(({ fromA: c, toA: u }) => u < this.minWidthFrom || c > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0);
    let s = -1;
    this.view.inputState.composing >= 0 && (!((t = this.domChanged) === null || t === void 0) && t.newSel ? s = this.domChanged.newSel.head : !Xoe(e.changes, this.hasComposition) && !e.selectionSet && (s = e.state.selection.main.head));
    let r = s > -1 ? Foe(this.view, e.changes, s) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: c, to: u } = this.hasComposition;
      i = new qs(c, u, e.changes.mapPos(c, -1), e.changes.mapPos(u, 1)).addToSet(i.slice());
    }
    this.hasComposition = r ? { from: r.range.fromB, to: r.range.toB } : null, (Ne.ie || Ne.chrome) && !r && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let o = this.decorations, l = this.updateDeco(), a = Woe(o, l, e.changes);
    return i = qs.extendWithRanges(i, a), !(this.flags & 7) && i.length == 0 ? !1 : (this.updateInner(i, e.startState.doc.length, r), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, t, i) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, t, i);
    let { observer: s } = this.view;
    s.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let o = Ne.chrome || Ne.ios ? { node: s.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, o), this.flags &= -8, o && (o.written || s.selectionRange.focusNode != o.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (o) => o.flags &= -9
      /* ViewFlag.Composition */
    );
    let r = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let o of this.children)
        o instanceof Pl && o.widget instanceof Wk && r.push(o.dom);
    s.updateGaps(r);
  }
  updateChildren(e, t, i) {
    let s = i ? i.range.addToSet(e.slice()) : e, r = this.childCursor(t);
    for (let o = s.length - 1; ; o--) {
      let l = o >= 0 ? s[o] : null;
      if (!l)
        break;
      let { fromA: a, toA: c, fromB: u, toB: h } = l, d, f, p, g;
      if (i && i.range.fromB < h && i.range.toB > u) {
        let w = cd.build(this.view.state.doc, u, i.range.fromB, this.decorations, this.dynamicDecorationMap), x = cd.build(this.view.state.doc, i.range.toB, h, this.decorations, this.dynamicDecorationMap);
        f = w.breakAtStart, p = w.openStart, g = x.openEnd;
        let S = this.compositionView(i);
        x.breakAtStart ? S.breakAfter = 1 : x.content.length && S.merge(S.length, S.length, x.content[0], !1, x.openStart, 0) && (S.breakAfter = x.content[0].breakAfter, x.content.shift()), w.content.length && S.merge(0, 0, w.content[w.content.length - 1], !0, 0, w.openEnd) && w.content.pop(), d = w.content.concat(S).concat(x.content);
      } else
        ({ content: d, breakAtStart: f, openStart: p, openEnd: g } = cd.build(this.view.state.doc, u, h, this.decorations, this.dynamicDecorationMap));
      let { i: m, off: v } = r.findPos(c, 1), { i: O, off: b } = r.findPos(a, -1);
      IR(this, O, b, m, v, d, f, p, g);
    }
    i && this.fixCompositionDOM(i);
  }
  compositionView(e) {
    let t = new Fo(e.text.nodeValue);
    t.flags |= 8;
    for (let { deco: s } of e.marks)
      t = new Zo(s, [t], t.length);
    let i = new qn();
    return i.append(t, 0), i;
  }
  fixCompositionDOM(e) {
    let t = (r, o) => {
      o.flags |= 8 | (o.children.some(
        (a) => a.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(o);
      let l = tn.get(r);
      l && l != o && (l.dom = null), o.setDOM(r);
    }, i = this.childPos(e.range.fromB, 1), s = this.children[i.i];
    t(e.line, s);
    for (let r = e.marks.length - 1; r >= -1; r--)
      i = s.childPos(i.off, 1), s = s.children[i.i], t(r >= 0 ? e.marks[r].node : e.text, s);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, t = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let i = this.view.root.activeElement, s = i == this.dom, r = !s && dg(this.dom, this.view.observer.selectionRange) && !(i && this.dom.contains(i));
    if (!(s || t || r))
      return;
    let o = this.forceSelection;
    this.forceSelection = !1;
    let l = this.view.state.selection.main, a = this.moveToLine(this.domAtPos(l.anchor)), c = l.empty ? a : this.moveToLine(this.domAtPos(l.head));
    if (Ne.gecko && l.empty && !this.hasComposition && Voe(a)) {
      let h = document.createTextNode("");
      this.view.observer.ignore(() => a.node.insertBefore(h, a.node.childNodes[a.offset] || null)), a = c = new Mi(h, 0), o = !0;
    }
    let u = this.view.observer.selectionRange;
    (o || !u.focusNode || (!ad(a.node, a.offset, u.anchorNode, u.anchorOffset) || !ad(c.node, c.offset, u.focusNode, u.focusOffset)) && !this.suppressWidgetCursorChange(u, l)) && (this.view.observer.ignore(() => {
      Ne.android && Ne.chrome && this.dom.contains(u.focusNode) && Hoe(u.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let h = cm(this.view.root);
      if (h)
        if (l.empty) {
          if (Ne.gecko) {
            let d = Zoe(a.node, a.offset);
            if (d && d != 3) {
              let f = u3(a.node, a.offset, d == 1 ? 1 : -1);
              f && (a = new Mi(f.node, f.offset));
            }
          }
          h.collapse(a.node, a.offset), l.bidiLevel != null && h.caretBidiLevel !== void 0 && (h.caretBidiLevel = l.bidiLevel);
        } else if (h.extend) {
          h.collapse(a.node, a.offset);
          try {
            h.extend(c.node, c.offset);
          } catch {
          }
        } else {
          let d = document.createRange();
          l.anchor > l.head && ([a, c] = [c, a]), d.setEnd(c.node, c.offset), d.setStart(a.node, a.offset), h.removeAllRanges(), h.addRange(d);
        }
      r && this.view.root.activeElement == this.dom && (this.dom.blur(), i && i.focus());
    }), this.view.observer.setSelectionRange(a, c)), this.impreciseAnchor = a.precise ? null : new Mi(u.anchorNode, u.anchorOffset), this.impreciseHead = c.precise ? null : new Mi(u.focusNode, u.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, t) {
    return this.hasComposition && t.empty && ad(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == t.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, t = e.state.selection.main, i = cm(e.root), { anchorNode: s, anchorOffset: r } = e.observer.selectionRange;
    if (!i || !t.empty || !t.assoc || !i.modify)
      return;
    let o = qn.find(this, t.head);
    if (!o)
      return;
    let l = o.posAtStart;
    if (t.head == l || t.head == l + o.length)
      return;
    let a = this.coordsAt(t.head, -1), c = this.coordsAt(t.head, 1);
    if (!a || !c || a.bottom > c.top)
      return;
    let u = this.domAtPos(t.head + t.assoc);
    i.collapse(u.node, u.offset), i.modify("move", t.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let h = e.observer.selectionRange;
    e.docView.posFromDOM(h.anchorNode, h.anchorOffset) != t.from && i.collapse(s, r);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let t = this.dom, i;
    if (e.node != t)
      return e;
    for (let s = e.offset; !i && s < t.childNodes.length; s++) {
      let r = tn.get(t.childNodes[s]);
      r instanceof qn && (i = r.domAtPos(0));
    }
    for (let s = e.offset - 1; !i && s >= 0; s--) {
      let r = tn.get(t.childNodes[s]);
      r instanceof qn && (i = r.domAtPos(r.length));
    }
    return i ? new Mi(i.node, i.offset, !0) : e;
  }
  nearest(e) {
    for (let t = e; t; ) {
      let i = tn.get(t);
      if (i && i.rootView == this)
        return i;
      t = t.parentNode;
    }
    return null;
  }
  posFromDOM(e, t) {
    let i = this.nearest(e);
    if (!i)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return i.localPosFromDOM(e, t) + i.posAtStart;
  }
  domAtPos(e) {
    let { i: t, off: i } = this.childCursor().findPos(e, -1);
    for (; t < this.children.length - 1; ) {
      let s = this.children[t];
      if (i < s.length || s instanceof qn)
        break;
      t++, i = 0;
    }
    return this.children[t].domAtPos(i);
  }
  coordsAt(e, t) {
    let i = null, s = 0;
    for (let r = this.length, o = this.children.length - 1; o >= 0; o--) {
      let l = this.children[o], a = r - l.breakAfter, c = a - l.length;
      if (a < e)
        break;
      c <= e && (c < e || l.covers(-1)) && (a > e || l.covers(1)) && (!i || l instanceof qn && !(i instanceof qn && t >= 0)) && (i = l, s = c), r = c;
    }
    return i ? i.coordsAt(e - s, t) : null;
  }
  coordsForChar(e) {
    let { i: t, off: i } = this.childPos(e, 1), s = this.children[t];
    if (!(s instanceof qn))
      return null;
    for (; s.children.length; ) {
      let { i: l, off: a } = s.childPos(i, 1);
      for (; ; l++) {
        if (l == s.children.length)
          return null;
        if ((s = s.children[l]).length)
          break;
      }
      i = a;
    }
    if (!(s instanceof Fo))
      return null;
    let r = Ci(s.text, i);
    if (r == i)
      return null;
    let o = Wa(s.dom, i, r).getClientRects();
    for (let l = 0; l < o.length; l++) {
      let a = o[l];
      if (l == o.length - 1 || a.top < a.bottom && a.left < a.right)
        return a;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let t = [], { from: i, to: s } = e, r = this.view.contentDOM.clientWidth, o = r > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, l = -1, a = this.view.textDirection == nn.LTR;
    for (let c = 0, u = 0; u < this.children.length; u++) {
      let h = this.children[u], d = c + h.length;
      if (d > s)
        break;
      if (c >= i) {
        let f = h.dom.getBoundingClientRect();
        if (t.push(f.height), o) {
          let p = h.dom.lastChild, g = p ? Wd(p) : [];
          if (g.length) {
            let m = g[g.length - 1], v = a ? m.right - f.left : f.right - m.left;
            v > l && (l = v, this.minWidth = r, this.minWidthFrom = c, this.minWidthTo = d);
          }
        }
      }
      c = d + h.breakAfter;
    }
    return t;
  }
  textDirectionAt(e) {
    let { i: t } = this.childPos(e, 1);
    return getComputedStyle(this.children[t].dom).direction == "rtl" ? nn.RTL : nn.LTR;
  }
  measureTextSize() {
    for (let r of this.children)
      if (r instanceof qn) {
        let o = r.measureTextSize();
        if (o)
          return o;
      }
    let e = document.createElement("div"), t, i, s;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let r = Wd(e.firstChild)[0];
      t = e.getBoundingClientRect().height, i = r ? r.width / 27 : 7, s = r ? r.height : t, e.remove();
    }), { lineHeight: t, charWidth: i, textHeight: s };
  }
  childCursor(e = this.length) {
    let t = this.children.length;
    return t && (e -= this.children[--t].length), new LR(this.children, e, t);
  }
  computeBlockGapDeco() {
    let e = [], t = this.view.viewState;
    for (let i = 0, s = 0; ; s++) {
      let r = s == t.viewports.length ? null : t.viewports[s], o = r ? r.from - 1 : this.length;
      if (o > i) {
        let l = (t.lineBlockAt(o).bottom - t.lineBlockAt(i).top) / this.view.scaleY;
        e.push(He.replace({
          widget: new Wk(l),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(i, o));
      }
      if (!r)
        break;
      i = r.to + 1;
    }
    return He.set(e);
  }
  updateDeco() {
    let e = this.view.state.facet(Xd).map((s, r) => (this.dynamicDecorationMap[r] = typeof s == "function") ? s(this.view) : s), t = !1, i = this.view.state.facet(r3).map((s, r) => {
      let o = typeof s == "function";
      return o && (t = !0), o ? s(this.view) : s;
    });
    i.length && (this.dynamicDecorationMap[e.length] = t, e.push(kt.join(i)));
    for (let s = e.length; s < e.length + 3; s++)
      this.dynamicDecorationMap[s] = !1;
    return this.decorations = [
      ...e,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ];
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let c = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = c.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    let { range: t } = e, i = this.coordsAt(t.head, t.empty ? t.assoc : t.head > t.anchor ? -1 : 1), s;
    if (!i)
      return;
    !t.empty && (s = this.coordsAt(t.anchor, t.anchor > t.head ? -1 : 1)) && (i = {
      left: Math.min(i.left, s.left),
      top: Math.min(i.top, s.top),
      right: Math.max(i.right, s.right),
      bottom: Math.max(i.bottom, s.bottom)
    });
    let r = a3(this.view), o = {
      left: i.left - r.left,
      top: i.top - r.top,
      right: i.right + r.right,
      bottom: i.bottom + r.bottom
    }, { offsetWidth: l, offsetHeight: a } = this.view.scrollDOM;
    xoe(this.view.scrollDOM, o, t.head < t.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, l), -l), Math.max(Math.min(e.yMargin, a), -a), this.view.textDirection == nn.LTR);
  }
}
function Voe(n) {
  return n.node.nodeType == 1 && n.node.firstChild && (n.offset == 0 || n.node.childNodes[n.offset - 1].contentEditable == "false") && (n.offset == n.node.childNodes.length || n.node.childNodes[n.offset].contentEditable == "false");
}
class Wk extends Ko {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
function c3(n, e) {
  let t = n.observer.selectionRange, i = t.focusNode && u3(t.focusNode, t.focusOffset, 0);
  if (!i)
    return null;
  let s = e - i.offset;
  return { from: s, to: s + i.node.nodeValue.length, node: i.node };
}
function Foe(n, e, t) {
  let i = c3(n, t);
  if (!i)
    return null;
  let { node: s, from: r, to: o } = i, l = s.nodeValue;
  if (/[\n\r]/.test(l) || n.state.doc.sliceString(i.from, i.to) != l)
    return null;
  let a = e.invertedDesc, c = new qs(a.mapPos(r), a.mapPos(o), r, o), u = [];
  for (let h = s.parentNode; ; h = h.parentNode) {
    let d = tn.get(h);
    if (d instanceof Zo)
      u.push({ node: h, deco: d.mark });
    else {
      if (d instanceof qn || h.nodeName == "DIV" && h.parentNode == n.contentDOM)
        return { range: c, text: s, marks: u, line: h };
      if (h != n.contentDOM)
        u.push({ node: h, deco: new Af({
          inclusive: !0,
          attributes: Toe(h),
          tagName: h.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function u3(n, e, t) {
  if (t <= 0)
    for (let i = n, s = e; ; ) {
      if (i.nodeType == 3)
        return { node: i, offset: s };
      if (i.nodeType == 1 && s > 0)
        i = i.childNodes[s - 1], s = Vo(i);
      else
        break;
    }
  if (t >= 0)
    for (let i = n, s = e; ; ) {
      if (i.nodeType == 3)
        return { node: i, offset: s };
      if (i.nodeType == 1 && s < i.childNodes.length && t >= 0)
        i = i.childNodes[s], s = 0;
      else
        break;
    }
  return null;
}
function Zoe(n, e) {
  return n.nodeType != 1 ? 0 : (e && n.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < n.childNodes.length && n.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let qoe = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, t) {
    rO(e, t, this.changes);
  }
  comparePoint(e, t) {
    rO(e, t, this.changes);
  }
};
function Woe(n, e, t) {
  let i = new qoe();
  return kt.compare(n, e, t, i), i.changes;
}
function Hoe(n, e) {
  for (let t = n; t && t != e; t = t.assignedSlot || t.parentNode)
    if (t.nodeType == 1 && t.contentEditable == "false")
      return !0;
  return !1;
}
function Xoe(n, e) {
  let t = !1;
  return e && n.iterChangedRanges((i, s) => {
    i < e.to && s > e.from && (t = !0);
  }), t;
}
function Yoe(n, e, t = 1) {
  let i = n.charCategorizer(e), s = n.doc.lineAt(e), r = e - s.from;
  if (s.length == 0)
    return ue.cursor(e);
  r == 0 ? t = 1 : r == s.length && (t = -1);
  let o = r, l = r;
  t < 0 ? o = Ci(s.text, r, !1) : l = Ci(s.text, r);
  let a = i(s.text.slice(o, l));
  for (; o > 0; ) {
    let c = Ci(s.text, o, !1);
    if (i(s.text.slice(c, o)) != a)
      break;
    o = c;
  }
  for (; l < s.length; ) {
    let c = Ci(s.text, l);
    if (i(s.text.slice(l, c)) != a)
      break;
    l = c;
  }
  return ue.range(o + s.from, l + s.from);
}
function Uoe(n, e) {
  return e.left > n ? e.left - n : Math.max(0, n - e.right);
}
function Goe(n, e) {
  return e.top > n ? e.top - n : Math.max(0, n - e.bottom);
}
function Mv(n, e) {
  return n.top < e.bottom - 1 && n.bottom > e.top + 1;
}
function Hk(n, e) {
  return e < n.top ? { top: e, left: n.left, right: n.right, bottom: n.bottom } : n;
}
function Xk(n, e) {
  return e > n.bottom ? { top: n.top, left: n.left, right: n.right, bottom: e } : n;
}
function uO(n, e, t) {
  let i, s, r, o, l = !1, a, c, u, h;
  for (let p = n.firstChild; p; p = p.nextSibling) {
    let g = Wd(p);
    for (let m = 0; m < g.length; m++) {
      let v = g[m];
      s && Mv(s, v) && (v = Hk(Xk(v, s.bottom), s.top));
      let O = Uoe(e, v), b = Goe(t, v);
      if (O == 0 && b == 0)
        return p.nodeType == 3 ? Yk(p, e, t) : uO(p, e, t);
      if (!i || o > b || o == b && r > O) {
        i = p, s = v, r = O, o = b;
        let w = b ? t < v.top ? -1 : 1 : O ? e < v.left ? -1 : 1 : 0;
        l = !w || (w > 0 ? m < g.length - 1 : m > 0);
      }
      O == 0 ? t > v.bottom && (!u || u.bottom < v.bottom) ? (a = p, u = v) : t < v.top && (!h || h.top > v.top) && (c = p, h = v) : u && Mv(u, v) ? u = Xk(u, v.bottom) : h && Mv(h, v) && (h = Hk(h, v.top));
    }
  }
  if (u && u.bottom >= t ? (i = a, s = u) : h && h.top <= t && (i = c, s = h), !i)
    return { node: n, offset: 0 };
  let d = Math.max(s.left, Math.min(s.right, e));
  if (i.nodeType == 3)
    return Yk(i, d, t);
  if (l && i.contentEditable != "false")
    return uO(i, d, t);
  let f = Array.prototype.indexOf.call(n.childNodes, i) + (e >= (s.left + s.right) / 2 ? 1 : 0);
  return { node: n, offset: f };
}
function Yk(n, e, t) {
  let i = n.nodeValue.length, s = -1, r = 1e9, o = 0;
  for (let l = 0; l < i; l++) {
    let a = Wa(n, l, l + 1).getClientRects();
    for (let c = 0; c < a.length; c++) {
      let u = a[c];
      if (u.top == u.bottom)
        continue;
      o || (o = e - u.left);
      let h = (u.top > t ? u.top - t : t - u.bottom) - 1;
      if (u.left - 1 <= e && u.right + 1 >= e && h < r) {
        let d = e >= (u.left + u.right) / 2, f = d;
        if ((Ne.chrome || Ne.gecko) && Wa(n, l).getBoundingClientRect().left == u.right && (f = !d), h <= 0)
          return { node: n, offset: l + (f ? 1 : 0) };
        s = l + (f ? 1 : 0), r = h;
      }
    }
  }
  return { node: n, offset: s > -1 ? s : o > 0 ? n.nodeValue.length : 0 };
}
function h3(n, e, t, i = -1) {
  var s, r;
  let o = n.contentDOM.getBoundingClientRect(), l = o.top + n.viewState.paddingTop, a, { docHeight: c } = n.viewState, { x: u, y: h } = e, d = h - l;
  if (d < 0)
    return 0;
  if (d > c)
    return n.state.doc.length;
  for (let w = n.viewState.heightOracle.textHeight / 2, x = !1; a = n.elementAtHeight(d), a.type != qi.Text; )
    for (; d = i > 0 ? a.bottom + w : a.top - w, !(d >= 0 && d <= c); ) {
      if (x)
        return t ? null : 0;
      x = !0, i = -i;
    }
  h = l + d;
  let f = a.from;
  if (f < n.viewport.from)
    return n.viewport.from == 0 ? 0 : t ? null : Uk(n, o, a, u, h);
  if (f > n.viewport.to)
    return n.viewport.to == n.state.doc.length ? n.state.doc.length : t ? null : Uk(n, o, a, u, h);
  let p = n.dom.ownerDocument, g = n.root.elementFromPoint ? n.root : p, m = g.elementFromPoint(u, h);
  m && !n.contentDOM.contains(m) && (m = null), m || (u = Math.max(o.left + 1, Math.min(o.right - 1, u)), m = g.elementFromPoint(u, h), m && !n.contentDOM.contains(m) && (m = null));
  let v, O = -1;
  if (m && ((s = n.docView.nearest(m)) === null || s === void 0 ? void 0 : s.isEditable) != !1) {
    if (p.caretPositionFromPoint) {
      let w = p.caretPositionFromPoint(u, h);
      w && ({ offsetNode: v, offset: O } = w);
    } else if (p.caretRangeFromPoint) {
      let w = p.caretRangeFromPoint(u, h);
      w && ({ startContainer: v, startOffset: O } = w, (!n.contentDOM.contains(v) || Ne.safari && Koe(v, O, u) || Ne.chrome && Joe(v, O, u)) && (v = void 0));
    }
  }
  if (!v || !n.docView.dom.contains(v)) {
    let w = qn.find(n.docView, f);
    if (!w)
      return d > a.top + a.height / 2 ? a.to : a.from;
    ({ node: v, offset: O } = uO(w.dom, u, h));
  }
  let b = n.docView.nearest(v);
  if (!b)
    return null;
  if (b.isWidget && ((r = b.dom) === null || r === void 0 ? void 0 : r.nodeType) == 1) {
    let w = b.dom.getBoundingClientRect();
    return e.y < w.top || e.y <= w.bottom && e.x <= (w.left + w.right) / 2 ? b.posAtStart : b.posAtEnd;
  } else
    return b.localPosFromDOM(v, O) + b.posAtStart;
}
function Uk(n, e, t, i, s) {
  let r = Math.round((i - e.left) * n.defaultCharacterWidth);
  if (n.lineWrapping && t.height > n.defaultLineHeight * 1.5) {
    let l = n.viewState.heightOracle.textHeight, a = Math.floor((s - t.top - (n.defaultLineHeight - l) * 0.5) / l);
    r += a * n.viewState.heightOracle.lineLength;
  }
  let o = n.state.sliceDoc(t.from, t.to);
  return t.from + Uy(o, r, n.state.tabSize);
}
function Koe(n, e, t) {
  let i;
  if (n.nodeType != 3 || e != (i = n.nodeValue.length))
    return !1;
  for (let s = n.nextSibling; s; s = s.nextSibling)
    if (s.nodeType != 1 || s.nodeName != "BR")
      return !1;
  return Wa(n, i - 1, i).getBoundingClientRect().left > t;
}
function Joe(n, e, t) {
  if (e != 0)
    return !1;
  for (let s = n; ; ) {
    let r = s.parentNode;
    if (!r || r.nodeType != 1 || r.firstChild != s)
      return !1;
    if (r.classList.contains("cm-line"))
      break;
    s = r;
  }
  let i = n.nodeType == 1 ? n.getBoundingClientRect() : Wa(n, 0, Math.max(n.nodeValue.length, 1)).getBoundingClientRect();
  return t - i.left > 5;
}
function hO(n, e) {
  let t = n.lineBlockAt(e);
  if (Array.isArray(t.type)) {
    for (let i of t.type)
      if (i.to > e || i.to == e && (i.to == t.to || i.type == qi.Text))
        return i;
  }
  return t;
}
function ele(n, e, t, i) {
  let s = hO(n, e.head), r = !i || s.type != qi.Text || !(n.lineWrapping || s.widgetLineBreaks) ? null : n.coordsAtPos(e.assoc < 0 && e.head > s.from ? e.head - 1 : e.head);
  if (r) {
    let o = n.dom.getBoundingClientRect(), l = n.textDirectionAt(s.from), a = n.posAtCoords({
      x: t == (l == nn.LTR) ? o.right - 1 : o.left + 1,
      y: (r.top + r.bottom) / 2
    });
    if (a != null)
      return ue.cursor(a, t ? -1 : 1);
  }
  return ue.cursor(t ? s.to : s.from, t ? -1 : 1);
}
function Gk(n, e, t, i) {
  let s = n.state.doc.lineAt(e.head), r = n.bidiSpans(s), o = n.textDirectionAt(s.from);
  for (let l = e, a = null; ; ) {
    let c = Qoe(s, r, o, l, t), u = YR;
    if (!c) {
      if (s.number == (t ? n.state.doc.lines : 1))
        return l;
      u = `
`, s = n.state.doc.line(s.number + (t ? 1 : -1)), r = n.bidiSpans(s), c = n.visualLineSide(s, !t);
    }
    if (a) {
      if (!a(u))
        return l;
    } else {
      if (!i)
        return c;
      a = i(u);
    }
    l = c;
  }
}
function tle(n, e, t) {
  let i = n.state.charCategorizer(e), s = i(t);
  return (r) => {
    let o = i(r);
    return s == an.Space && (s = o), s == o;
  };
}
function nle(n, e, t, i) {
  let s = e.head, r = t ? 1 : -1;
  if (s == (t ? n.state.doc.length : 0))
    return ue.cursor(s, e.assoc);
  let o = e.goalColumn, l, a = n.contentDOM.getBoundingClientRect(), c = n.coordsAtPos(s, e.assoc || -1), u = n.documentTop;
  if (c)
    o == null && (o = c.left - a.left), l = r < 0 ? c.top : c.bottom;
  else {
    let f = n.viewState.lineBlockAt(s);
    o == null && (o = Math.min(a.right - a.left, n.defaultCharacterWidth * (s - f.from))), l = (r < 0 ? f.top : f.bottom) + u;
  }
  let h = a.left + o, d = i ?? n.viewState.heightOracle.textHeight >> 1;
  for (let f = 0; ; f += 10) {
    let p = l + (d + f) * r, g = h3(n, { x: h, y: p }, !1, r);
    if (p < a.top || p > a.bottom || (r < 0 ? g < s : g > s)) {
      let m = n.docView.coordsForChar(g), v = !m || p < m.top ? -1 : 1;
      return ue.cursor(g, v, void 0, o);
    }
  }
}
function fg(n, e, t) {
  for (; ; ) {
    let i = 0;
    for (let s of n)
      s.between(e - 1, e + 1, (r, o, l) => {
        if (e > r && e < o) {
          let a = i || t || (e - r < o - e ? -1 : 1);
          e = a < 0 ? r : o, i = a;
        }
      });
    if (!i)
      return e;
  }
}
function Rv(n, e, t) {
  let i = fg(n.state.facet(Dw).map((s) => s(n)), t.from, e.head > t.from ? -1 : 1);
  return i == t.from ? t : ue.cursor(i, i < t.from ? 1 : -1);
}
class ile {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastEscPress = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, Ne.safari && e.contentDOM.addEventListener("input", () => null), Ne.gecko && yle(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !hle(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || this.runHandlers(e.type, e);
  }
  runHandlers(e, t) {
    let i = this.handlers[e];
    if (i) {
      for (let s of i.observers)
        s(this.view, t);
      for (let s of i.handlers) {
        if (t.defaultPrevented)
          break;
        if (s(this.view, t)) {
          t.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let t = sle(e), i = this.handlers, s = this.view.contentDOM;
    for (let r in t)
      if (r != "scroll") {
        let o = !t[r].handlers.length, l = i[r];
        l && o != !l.handlers.length && (s.removeEventListener(r, this.handleEvent), l = null), l || s.addEventListener(r, this.handleEvent, { passive: o });
      }
    for (let r in i)
      r != "scroll" && !t[r] && s.removeEventListener(r, this.handleEvent);
    this.handlers = t;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && Date.now() < this.lastEscPress + 2e3)
      return !0;
    if (e.keyCode != 27 && f3.indexOf(e.keyCode) < 0 && (this.view.inputState.lastEscPress = 0), Ne.android && Ne.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let t;
    return Ne.ios && !e.synthetic && !e.altKey && !e.metaKey && ((t = d3.find((i) => i.keyCode == e.keyCode)) && !e.ctrlKey || rle.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = t || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey() {
    let e = this.pendingIOSKey;
    return e ? (this.pendingIOSKey = void 0, jc(this.view.contentDOM, e.key, e.keyCode)) : !1;
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : Ne.safari && !Ne.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function Kk(n, e) {
  return (t, i) => {
    try {
      return e.call(n, i, t);
    } catch (s) {
      Zs(t.state, s);
    }
  };
}
function sle(n) {
  let e = /* @__PURE__ */ Object.create(null);
  function t(i) {
    return e[i] || (e[i] = { observers: [], handlers: [] });
  }
  for (let i of n) {
    let s = i.spec;
    if (s && s.domEventHandlers)
      for (let r in s.domEventHandlers) {
        let o = s.domEventHandlers[r];
        o && t(r).handlers.push(Kk(i.value, o));
      }
    if (s && s.domEventObservers)
      for (let r in s.domEventObservers) {
        let o = s.domEventObservers[r];
        o && t(r).observers.push(Kk(i.value, o));
      }
  }
  for (let i in xr)
    t(i).handlers.push(xr[i]);
  for (let i in Sr)
    t(i).observers.push(Sr[i]);
  return e;
}
const d3 = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], rle = "dthko", f3 = [16, 17, 18, 20, 91, 92, 224, 225], fp = 6;
function pp(n) {
  return Math.max(0, n) * 0.7 + 8;
}
function ole(n, e) {
  return Math.max(Math.abs(n.clientX - e.clientX), Math.abs(n.clientY - e.clientY));
}
class lle {
  constructor(e, t, i, s) {
    this.view = e, this.startEvent = t, this.style = i, this.mustSelect = s, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = t, this.scrollParent = Soe(e.contentDOM), this.atoms = e.state.facet(Dw).map((o) => o(e));
    let r = e.contentDOM.ownerDocument;
    r.addEventListener("mousemove", this.move = this.move.bind(this)), r.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = t.shiftKey, this.multiple = e.state.facet(Et.allowMultipleSelections) && ale(e, t), this.dragging = ule(e, t) && v3(t) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    var t;
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && ole(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let i = 0, s = 0, r = ((t = this.scrollParent) === null || t === void 0 ? void 0 : t.getBoundingClientRect()) || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight }, o = a3(this.view);
    e.clientX - o.left <= r.left + fp ? i = -pp(r.left - e.clientX) : e.clientX + o.right >= r.right - fp && (i = pp(e.clientX - r.right)), e.clientY - o.top <= r.top + fp ? s = -pp(r.top - e.clientY) : e.clientY + o.bottom >= r.bottom - fp && (s = pp(e.clientY - r.bottom)), this.setScrollSpeed(i, s);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, t) {
    this.scrollSpeed = { x: e, y: t }, e || t ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    this.scrollParent ? (this.scrollParent.scrollLeft += this.scrollSpeed.x, this.scrollParent.scrollTop += this.scrollSpeed.y) : this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let t = null;
    for (let i = 0; i < e.ranges.length; i++) {
      let s = e.ranges[i], r = null;
      if (s.empty) {
        let o = fg(this.atoms, s.from, 0);
        o != s.from && (r = ue.cursor(o, -1));
      } else {
        let o = fg(this.atoms, s.from, -1), l = fg(this.atoms, s.to, 1);
        (o != s.from || l != s.to) && (r = ue.range(s.from == s.anchor ? o : l, s.from == s.head ? o : l));
      }
      r && (t || (t = e.ranges.slice()), t[i] = r);
    }
    return t ? ue.create(t, e.mainIndex) : e;
  }
  select(e) {
    let { view: t } = this, i = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !i.eq(t.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: i,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function ale(n, e) {
  let t = n.state.facet(UR);
  return t.length ? t[0](e) : Ne.mac ? e.metaKey : e.ctrlKey;
}
function cle(n, e) {
  let t = n.state.facet(GR);
  return t.length ? t[0](e) : Ne.mac ? !e.altKey : !e.ctrlKey;
}
function ule(n, e) {
  let { main: t } = n.state.selection;
  if (t.empty)
    return !1;
  let i = cm(n.root);
  if (!i || i.rangeCount == 0)
    return !0;
  let s = i.getRangeAt(0).getClientRects();
  for (let r = 0; r < s.length; r++) {
    let o = s[r];
    if (o.left <= e.clientX && o.right >= e.clientX && o.top <= e.clientY && o.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function hle(n, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let t = e.target, i; t != n.contentDOM; t = t.parentNode)
    if (!t || t.nodeType == 11 || (i = tn.get(t)) && i.ignoreEvent(e))
      return !1;
  return !0;
}
const xr = /* @__PURE__ */ Object.create(null), Sr = /* @__PURE__ */ Object.create(null), p3 = Ne.ie && Ne.ie_version < 15 || Ne.ios && Ne.webkit_version < 604;
function dle(n) {
  let e = n.dom.parentNode;
  if (!e)
    return;
  let t = e.appendChild(document.createElement("textarea"));
  t.style.cssText = "position: fixed; left: -10000px; top: 10px", t.focus(), setTimeout(() => {
    n.focus(), t.remove(), g3(n, t.value);
  }, 50);
}
function g3(n, e) {
  let { state: t } = n, i, s = 1, r = t.toText(e), o = r.lines == t.selection.ranges.length;
  if (dO != null && t.selection.ranges.every((a) => a.empty) && dO == r.toString()) {
    let a = -1;
    i = t.changeByRange((c) => {
      let u = t.doc.lineAt(c.from);
      if (u.from == a)
        return { range: c };
      a = u.from;
      let h = t.toText((o ? r.line(s++).text : e) + t.lineBreak);
      return {
        changes: { from: u.from, insert: h },
        range: ue.cursor(c.from + h.length)
      };
    });
  } else
    o ? i = t.changeByRange((a) => {
      let c = r.line(s++);
      return {
        changes: { from: a.from, to: a.to, insert: c.text },
        range: ue.cursor(a.from + c.length)
      };
    }) : i = t.replaceSelection(r);
  n.dispatch(i, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
Sr.scroll = (n) => {
  n.inputState.lastScrollTop = n.scrollDOM.scrollTop, n.inputState.lastScrollLeft = n.scrollDOM.scrollLeft;
};
xr.keydown = (n, e) => (n.inputState.setSelectionOrigin("select"), e.keyCode == 27 && (n.inputState.lastEscPress = Date.now()), !1);
Sr.touchstart = (n, e) => {
  n.inputState.lastTouchTime = Date.now(), n.inputState.setSelectionOrigin("select.pointer");
};
Sr.touchmove = (n) => {
  n.inputState.setSelectionOrigin("select.pointer");
};
xr.mousedown = (n, e) => {
  if (n.observer.flush(), n.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let t = null;
  for (let i of n.state.facet(KR))
    if (t = i(n, e), t)
      break;
  if (!t && e.button == 0 && (t = gle(n, e)), t) {
    let i = !n.hasFocus;
    n.inputState.startMouseSelection(new lle(n, e, t, i)), i && n.observer.ignore(() => RR(n.contentDOM));
    let s = n.inputState.mouseSelection;
    if (s)
      return s.start(e), s.dragging === !1;
  }
  return !1;
};
function Jk(n, e, t, i) {
  if (i == 1)
    return ue.cursor(e, t);
  if (i == 2)
    return Yoe(n.state, e, t);
  {
    let s = qn.find(n.docView, e), r = n.state.doc.lineAt(s ? s.posAtEnd : e), o = s ? s.posAtStart : r.from, l = s ? s.posAtEnd : r.to;
    return l < n.state.doc.length && l == r.to && l++, ue.range(o, l);
  }
}
let m3 = (n, e) => n >= e.top && n <= e.bottom, e2 = (n, e, t) => m3(e, t) && n >= t.left && n <= t.right;
function fle(n, e, t, i) {
  let s = qn.find(n.docView, e);
  if (!s)
    return 1;
  let r = e - s.posAtStart;
  if (r == 0)
    return 1;
  if (r == s.length)
    return -1;
  let o = s.coordsAt(r, -1);
  if (o && e2(t, i, o))
    return -1;
  let l = s.coordsAt(r, 1);
  return l && e2(t, i, l) ? 1 : o && m3(i, o) ? -1 : 1;
}
function t2(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: t, bias: fle(n, t, e.clientX, e.clientY) };
}
const ple = Ne.ie && Ne.ie_version <= 11;
let n2 = null, i2 = 0, s2 = 0;
function v3(n) {
  if (!ple)
    return n.detail;
  let e = n2, t = s2;
  return n2 = n, s2 = Date.now(), i2 = !e || t > Date.now() - 400 && Math.abs(e.clientX - n.clientX) < 2 && Math.abs(e.clientY - n.clientY) < 2 ? (i2 + 1) % 3 : 1;
}
function gle(n, e) {
  let t = t2(n, e), i = v3(e), s = n.state.selection;
  return {
    update(r) {
      r.docChanged && (t.pos = r.changes.mapPos(t.pos), s = s.map(r.changes));
    },
    get(r, o, l) {
      let a = t2(n, r), c, u = Jk(n, a.pos, a.bias, i);
      if (t.pos != a.pos && !o) {
        let h = Jk(n, t.pos, t.bias, i), d = Math.min(h.from, u.from), f = Math.max(h.to, u.to);
        u = d < u.from ? ue.range(d, f) : ue.range(f, d);
      }
      return o ? s.replaceRange(s.main.extend(u.from, u.to)) : l && i == 1 && s.ranges.length > 1 && (c = mle(s, a.pos)) ? c : l ? s.addRange(u) : ue.create([u]);
    }
  };
}
function mle(n, e) {
  for (let t = 0; t < n.ranges.length; t++) {
    let { from: i, to: s } = n.ranges[t];
    if (i <= e && s >= e)
      return ue.create(n.ranges.slice(0, t).concat(n.ranges.slice(t + 1)), n.mainIndex == t ? 0 : n.mainIndex - (n.mainIndex > t ? 1 : 0));
  }
  return null;
}
xr.dragstart = (n, e) => {
  let { selection: { main: t } } = n.state;
  if (e.target.draggable) {
    let s = n.docView.nearest(e.target);
    if (s && s.isWidget) {
      let r = s.posAtStart, o = r + s.length;
      (r >= t.to || o <= t.from) && (t = ue.range(r, o));
    }
  }
  let { inputState: i } = n;
  return i.mouseSelection && (i.mouseSelection.dragging = !0), i.draggedContent = t, e.dataTransfer && (e.dataTransfer.setData("Text", n.state.sliceDoc(t.from, t.to)), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
xr.dragend = (n) => (n.inputState.draggedContent = null, !1);
function r2(n, e, t, i) {
  if (!t)
    return;
  let s = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: r } = n.inputState, o = i && r && cle(n, e) ? { from: r.from, to: r.to } : null, l = { from: s, insert: t }, a = n.state.changes(o ? [o, l] : l);
  n.focus(), n.dispatch({
    changes: a,
    selection: { anchor: a.mapPos(s, -1), head: a.mapPos(s, 1) },
    userEvent: o ? "move.drop" : "input.drop"
  }), n.inputState.draggedContent = null;
}
xr.drop = (n, e) => {
  if (!e.dataTransfer)
    return !1;
  if (n.state.readOnly)
    return !0;
  let t = e.dataTransfer.files;
  if (t && t.length) {
    let i = Array(t.length), s = 0, r = () => {
      ++s == t.length && r2(n, e, i.filter((o) => o != null).join(n.state.lineBreak), !1);
    };
    for (let o = 0; o < t.length; o++) {
      let l = new FileReader();
      l.onerror = r, l.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(l.result) || (i[o] = l.result), r();
      }, l.readAsText(t[o]);
    }
    return !0;
  } else {
    let i = e.dataTransfer.getData("Text");
    if (i)
      return r2(n, e, i, !0), !0;
  }
  return !1;
};
xr.paste = (n, e) => {
  if (n.state.readOnly)
    return !0;
  n.observer.flush();
  let t = p3 ? null : e.clipboardData;
  return t ? (g3(n, t.getData("text/plain") || t.getData("text/uri-text")), !0) : (dle(n), !1);
};
function vle(n, e) {
  let t = n.dom.parentNode;
  if (!t)
    return;
  let i = t.appendChild(document.createElement("textarea"));
  i.style.cssText = "position: fixed; left: -10000px; top: 10px", i.value = e, i.focus(), i.selectionEnd = e.length, i.selectionStart = 0, setTimeout(() => {
    i.remove(), n.focus();
  }, 50);
}
function ble(n) {
  let e = [], t = [], i = !1;
  for (let s of n.selection.ranges)
    s.empty || (e.push(n.sliceDoc(s.from, s.to)), t.push(s));
  if (!e.length) {
    let s = -1;
    for (let { from: r } of n.selection.ranges) {
      let o = n.doc.lineAt(r);
      o.number > s && (e.push(o.text), t.push({ from: o.from, to: Math.min(n.doc.length, o.to + 1) })), s = o.number;
    }
    i = !0;
  }
  return { text: e.join(n.lineBreak), ranges: t, linewise: i };
}
let dO = null;
xr.copy = xr.cut = (n, e) => {
  let { text: t, ranges: i, linewise: s } = ble(n.state);
  if (!t && !s)
    return !1;
  dO = s ? t : null, e.type == "cut" && !n.state.readOnly && n.dispatch({
    changes: i,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let r = p3 ? null : e.clipboardData;
  return r ? (r.clearData(), r.setData("text/plain", t), !0) : (vle(n, t), !1);
};
const b3 = /* @__PURE__ */ Go.define();
function y3(n, e) {
  let t = [];
  for (let i of n.facet(t3)) {
    let s = i(n, e);
    s && t.push(s);
  }
  return t ? n.update({ effects: t, annotations: b3.of(!0) }) : null;
}
function O3(n) {
  setTimeout(() => {
    let e = n.hasFocus;
    if (e != n.inputState.notifiedFocused) {
      let t = y3(n.state, e);
      t ? n.dispatch(t) : n.update([]);
    }
  }, 10);
}
Sr.focus = (n) => {
  n.inputState.lastFocusTime = Date.now(), !n.scrollDOM.scrollTop && (n.inputState.lastScrollTop || n.inputState.lastScrollLeft) && (n.scrollDOM.scrollTop = n.inputState.lastScrollTop, n.scrollDOM.scrollLeft = n.inputState.lastScrollLeft), O3(n);
};
Sr.blur = (n) => {
  n.observer.clearSelectionRange(), O3(n);
};
Sr.compositionstart = Sr.compositionupdate = (n) => {
  n.inputState.compositionFirstChange == null && (n.inputState.compositionFirstChange = !0), n.inputState.composing < 0 && (n.inputState.composing = 0);
};
Sr.compositionend = (n) => {
  n.inputState.composing = -1, n.inputState.compositionEndedAt = Date.now(), n.inputState.compositionPendingKey = !0, n.inputState.compositionPendingChange = n.observer.pendingRecords().length > 0, n.inputState.compositionFirstChange = null, Ne.chrome && Ne.android ? n.observer.flushSoon() : n.inputState.compositionPendingChange ? Promise.resolve().then(() => n.observer.flush()) : setTimeout(() => {
    n.inputState.composing < 0 && n.docView.hasComposition && n.update([]);
  }, 50);
};
Sr.contextmenu = (n) => {
  n.inputState.lastContextMenu = Date.now();
};
xr.beforeinput = (n, e) => {
  var t;
  let i;
  if (Ne.chrome && Ne.android && (i = d3.find((s) => s.inputType == e.inputType)) && (n.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
    let s = ((t = window.visualViewport) === null || t === void 0 ? void 0 : t.height) || 0;
    setTimeout(() => {
      var r;
      (((r = window.visualViewport) === null || r === void 0 ? void 0 : r.height) || 0) > s + 10 && n.hasFocus && (n.contentDOM.blur(), n.focus());
    }, 100);
  }
  return !1;
};
const o2 = /* @__PURE__ */ new Set();
function yle(n) {
  o2.has(n) || (o2.add(n), n.addEventListener("copy", () => {
  }), n.addEventListener("cut", () => {
  }));
}
const l2 = ["pre-wrap", "normal", "pre-line", "break-spaces"];
class Ole {
  constructor(e) {
    this.lineWrapping = e, this.doc = $t.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30, this.heightChanged = !1;
  }
  heightForGap(e, t) {
    let i = this.doc.lineAt(t).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (i += Math.max(0, Math.ceil((t - e - i * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * i;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / (this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return l2.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let t = !1;
    for (let i = 0; i < e.length; i++) {
      let s = e[i];
      s < 0 ? i++ : this.heightSamples[Math.floor(s * 10)] || (t = !0, this.heightSamples[Math.floor(s * 10)] = !0);
    }
    return t;
  }
  refresh(e, t, i, s, r, o) {
    let l = l2.indexOf(e) > -1, a = Math.round(t) != Math.round(this.lineHeight) || this.lineWrapping != l;
    if (this.lineWrapping = l, this.lineHeight = t, this.charWidth = i, this.textHeight = s, this.lineLength = r, a) {
      this.heightSamples = {};
      for (let c = 0; c < o.length; c++) {
        let u = o[c];
        u < 0 ? c++ : this.heightSamples[Math.floor(u * 10)] = !0;
      }
    }
    return a;
  }
}
class wle {
  constructor(e, t) {
    this.from = e, this.heights = t, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class Xr {
  /**
  @internal
  */
  constructor(e, t, i, s, r) {
    this.from = e, this.length = t, this.top = i, this.height = s, this._content = r;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? qi.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof jl ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let t = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new Xr(this.from, this.length + e.length, this.top, this.height + e.height, t);
  }
}
var en = /* @__PURE__ */ function(n) {
  return n[n.ByPos = 0] = "ByPos", n[n.ByHeight = 1] = "ByHeight", n[n.ByPosNoHeight = 2] = "ByPosNoHeight", n;
}(en || (en = {}));
const pg = 1e-3;
class Wi {
  constructor(e, t, i = 2) {
    this.length = e, this.height = t, this.flags = i;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e, t) {
    this.height != t && (Math.abs(this.height - t) > pg && (e.heightChanged = !0), this.height = t);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, t, i) {
    return Wi.of(i);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, t) {
    t.push(this);
  }
  decomposeRight(e, t) {
    t.push(this);
  }
  applyChanges(e, t, i, s) {
    let r = this, o = i.doc;
    for (let l = s.length - 1; l >= 0; l--) {
      let { fromA: a, toA: c, fromB: u, toB: h } = s[l], d = r.lineAt(a, en.ByPosNoHeight, i.setDoc(t), 0, 0), f = d.to >= c ? d : r.lineAt(c, en.ByPosNoHeight, i, 0, 0);
      for (h += f.to - c, c = f.to; l > 0 && d.from <= s[l - 1].toA; )
        a = s[l - 1].fromA, u = s[l - 1].fromB, l--, a < d.from && (d = r.lineAt(a, en.ByPosNoHeight, i, 0, 0));
      u += d.from - a, a = d.from;
      let p = Lw.build(i.setDoc(o), e, u, h);
      r = r.replace(a, c, p);
    }
    return r.updateHeight(i, 0);
  }
  static empty() {
    return new ws(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let t = 0, i = e.length, s = 0, r = 0;
    for (; ; )
      if (t == i)
        if (s > r * 2) {
          let l = e[t - 1];
          l.break ? e.splice(--t, 1, l.left, null, l.right) : e.splice(--t, 1, l.left, l.right), i += 1 + l.break, s -= l.size;
        } else if (r > s * 2) {
          let l = e[i];
          l.break ? e.splice(i, 1, l.left, null, l.right) : e.splice(i, 1, l.left, l.right), i += 2 + l.break, r -= l.size;
        } else
          break;
      else if (s < r) {
        let l = e[t++];
        l && (s += l.size);
      } else {
        let l = e[--i];
        l && (r += l.size);
      }
    let o = 0;
    return e[t - 1] == null ? (o = 1, t--) : e[t] == null && (o = 1, i++), new xle(Wi.of(e.slice(0, t)), o, Wi.of(e.slice(i)));
  }
}
Wi.prototype.size = 1;
class w3 extends Wi {
  constructor(e, t, i) {
    super(e, t), this.deco = i;
  }
  blockAt(e, t, i, s) {
    return new Xr(s, this.length, i, this.height, this.deco || 0);
  }
  lineAt(e, t, i, s, r) {
    return this.blockAt(0, i, s, r);
  }
  forEachLine(e, t, i, s, r, o) {
    e <= r + this.length && t >= r && o(this.blockAt(0, i, s, r));
  }
  updateHeight(e, t = 0, i = !1, s) {
    return s && s.from <= t && s.more && this.setHeight(e, s.heights[s.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class ws extends w3 {
  constructor(e, t) {
    super(e, t, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, t, i, s) {
    return new Xr(s, this.length, i, this.height, this.breaks);
  }
  replace(e, t, i) {
    let s = i[0];
    return i.length == 1 && (s instanceof ws || s instanceof pi && s.flags & 4) && Math.abs(this.length - s.length) < 10 ? (s instanceof pi ? s = new ws(s.length, this.height) : s.height = this.height, this.outdated || (s.outdated = !1), s) : Wi.of(i);
  }
  updateHeight(e, t = 0, i = !1, s) {
    return s && s.from <= t && s.more ? this.setHeight(e, s.heights[s.index++]) : (i || this.outdated) && this.setHeight(e, Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class pi extends Wi {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, t) {
    let i = e.doc.lineAt(t).number, s = e.doc.lineAt(t + this.length).number, r = s - i + 1, o, l = 0;
    if (e.lineWrapping) {
      let a = Math.min(this.height, e.lineHeight * r);
      o = a / r, this.length > r + 1 && (l = (this.height - a) / (this.length - r - 1));
    } else
      o = this.height / r;
    return { firstLine: i, lastLine: s, perLine: o, perChar: l };
  }
  blockAt(e, t, i, s) {
    let { firstLine: r, lastLine: o, perLine: l, perChar: a } = this.heightMetrics(t, s);
    if (t.lineWrapping) {
      let c = s + Math.round(Math.max(0, Math.min(1, (e - i) / this.height)) * this.length), u = t.doc.lineAt(c), h = l + u.length * a, d = Math.max(i, e - h / 2);
      return new Xr(u.from, u.length, d, h, 0);
    } else {
      let c = Math.max(0, Math.min(o - r, Math.floor((e - i) / l))), { from: u, length: h } = t.doc.line(r + c);
      return new Xr(u, h, i + l * c, l, 0);
    }
  }
  lineAt(e, t, i, s, r) {
    if (t == en.ByHeight)
      return this.blockAt(e, i, s, r);
    if (t == en.ByPosNoHeight) {
      let { from: f, to: p } = i.doc.lineAt(e);
      return new Xr(f, p - f, 0, 0, 0);
    }
    let { firstLine: o, perLine: l, perChar: a } = this.heightMetrics(i, r), c = i.doc.lineAt(e), u = l + c.length * a, h = c.number - o, d = s + l * h + a * (c.from - r - h);
    return new Xr(c.from, c.length, Math.max(s, Math.min(d, s + this.height - u)), u, 0);
  }
  forEachLine(e, t, i, s, r, o) {
    e = Math.max(e, r), t = Math.min(t, r + this.length);
    let { firstLine: l, perLine: a, perChar: c } = this.heightMetrics(i, r);
    for (let u = e, h = s; u <= t; ) {
      let d = i.doc.lineAt(u);
      if (u == e) {
        let p = d.number - l;
        h += a * p + c * (e - r - p);
      }
      let f = a + c * d.length;
      o(new Xr(d.from, d.length, h, f, 0)), h += f, u = d.to + 1;
    }
  }
  replace(e, t, i) {
    let s = this.length - t;
    if (s > 0) {
      let r = i[i.length - 1];
      r instanceof pi ? i[i.length - 1] = new pi(r.length + s) : i.push(null, new pi(s - 1));
    }
    if (e > 0) {
      let r = i[0];
      r instanceof pi ? i[0] = new pi(e + r.length) : i.unshift(new pi(e - 1), null);
    }
    return Wi.of(i);
  }
  decomposeLeft(e, t) {
    t.push(new pi(e - 1), null);
  }
  decomposeRight(e, t) {
    t.push(null, new pi(this.length - e - 1));
  }
  updateHeight(e, t = 0, i = !1, s) {
    let r = t + this.length;
    if (s && s.from <= t + this.length && s.more) {
      let o = [], l = Math.max(t, s.from), a = -1;
      for (s.from > t && o.push(new pi(s.from - t - 1).updateHeight(e, t)); l <= r && s.more; ) {
        let u = e.doc.lineAt(l).length;
        o.length && o.push(null);
        let h = s.heights[s.index++];
        a == -1 ? a = h : Math.abs(h - a) >= pg && (a = -2);
        let d = new ws(u, h);
        d.outdated = !1, o.push(d), l += u + 1;
      }
      l <= r && o.push(null, new pi(r - l).updateHeight(e, l));
      let c = Wi.of(o);
      return (a < 0 || Math.abs(c.height - this.height) >= pg || Math.abs(a - this.heightMetrics(e, t).perLine) >= pg) && (e.heightChanged = !0), c;
    } else
      (i || this.outdated) && (this.setHeight(e, e.heightForGap(t, t + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class xle extends Wi {
  constructor(e, t, i) {
    super(e.length + t + i.length, e.height + i.height, t | (e.outdated || i.outdated ? 2 : 0)), this.left = e, this.right = i, this.size = e.size + i.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, t, i, s) {
    let r = i + this.left.height;
    return e < r ? this.left.blockAt(e, t, i, s) : this.right.blockAt(e, t, r, s + this.left.length + this.break);
  }
  lineAt(e, t, i, s, r) {
    let o = s + this.left.height, l = r + this.left.length + this.break, a = t == en.ByHeight ? e < o : e < l, c = a ? this.left.lineAt(e, t, i, s, r) : this.right.lineAt(e, t, i, o, l);
    if (this.break || (a ? c.to < l : c.from > l))
      return c;
    let u = t == en.ByPosNoHeight ? en.ByPosNoHeight : en.ByPos;
    return a ? c.join(this.right.lineAt(l, u, i, o, l)) : this.left.lineAt(l, u, i, s, r).join(c);
  }
  forEachLine(e, t, i, s, r, o) {
    let l = s + this.left.height, a = r + this.left.length + this.break;
    if (this.break)
      e < a && this.left.forEachLine(e, t, i, s, r, o), t >= a && this.right.forEachLine(e, t, i, l, a, o);
    else {
      let c = this.lineAt(a, en.ByPos, i, s, r);
      e < c.from && this.left.forEachLine(e, c.from - 1, i, s, r, o), c.to >= e && c.from <= t && o(c), t > c.to && this.right.forEachLine(c.to + 1, t, i, l, a, o);
    }
  }
  replace(e, t, i) {
    let s = this.left.length + this.break;
    if (t < s)
      return this.balanced(this.left.replace(e, t, i), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - s, t - s, i));
    let r = [];
    e > 0 && this.decomposeLeft(e, r);
    let o = r.length;
    for (let l of i)
      r.push(l);
    if (e > 0 && a2(r, o - 1), t < this.length) {
      let l = r.length;
      this.decomposeRight(t, r), a2(r, l);
    }
    return Wi.of(r);
  }
  decomposeLeft(e, t) {
    let i = this.left.length;
    if (e <= i)
      return this.left.decomposeLeft(e, t);
    t.push(this.left), this.break && (i++, e >= i && t.push(null)), e > i && this.right.decomposeLeft(e - i, t);
  }
  decomposeRight(e, t) {
    let i = this.left.length, s = i + this.break;
    if (e >= s)
      return this.right.decomposeRight(e - s, t);
    e < i && this.left.decomposeRight(e, t), this.break && e < s && t.push(null), t.push(this.right);
  }
  balanced(e, t) {
    return e.size > 2 * t.size || t.size > 2 * e.size ? Wi.of(this.break ? [e, null, t] : [e, t]) : (this.left = e, this.right = t, this.height = e.height + t.height, this.outdated = e.outdated || t.outdated, this.size = e.size + t.size, this.length = e.length + this.break + t.length, this);
  }
  updateHeight(e, t = 0, i = !1, s) {
    let { left: r, right: o } = this, l = t + r.length + this.break, a = null;
    return s && s.from <= t + r.length && s.more ? a = r = r.updateHeight(e, t, i, s) : r.updateHeight(e, t, i), s && s.from <= l + o.length && s.more ? a = o = o.updateHeight(e, l, i, s) : o.updateHeight(e, l, i), a ? this.balanced(r, o) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function a2(n, e) {
  let t, i;
  n[e] == null && (t = n[e - 1]) instanceof pi && (i = n[e + 1]) instanceof pi && n.splice(e - 1, 3, new pi(t.length + 1 + i.length));
}
const Sle = 5;
class Lw {
  constructor(e, t) {
    this.pos = e, this.oracle = t, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, t) {
    if (this.lineStart > -1) {
      let i = Math.min(t, this.lineEnd), s = this.nodes[this.nodes.length - 1];
      s instanceof ws ? s.length += i - this.pos : (i > this.pos || !this.isCovered) && this.nodes.push(new ws(i - this.pos, -1)), this.writtenTo = i, t > i && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = t;
  }
  point(e, t, i) {
    if (e < t || i.heightRelevant) {
      let s = i.widget ? i.widget.estimatedHeight : 0, r = i.widget ? i.widget.lineBreaks : 0;
      s < 0 && (s = this.oracle.lineHeight);
      let o = t - e;
      i.block ? this.addBlock(new w3(o, s, i)) : (o || r || s >= Sle) && this.addLineDeco(s, r, o);
    } else
      t > e && this.span(e, t);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: t } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = t, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new ws(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, t) {
    let i = new pi(t - e);
    return this.oracle.doc.lineAt(e).to == t && (i.flags |= 4), i;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof ws)
      return e;
    let t = new ws(0, -1);
    return this.nodes.push(t), t;
  }
  addBlock(e) {
    this.enterLine();
    let t = e.deco;
    t && t.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, t && t.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, t, i) {
    let s = this.ensureLine();
    s.length += i, s.collapsed += i, s.widgetHeight = Math.max(s.widgetHeight, e), s.breaks += t, this.writtenTo = this.pos = this.pos + i;
  }
  finish(e) {
    let t = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(t instanceof ws) && !this.isCovered ? this.nodes.push(new ws(0, -1)) : (this.writtenTo < this.pos || t == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let i = e;
    for (let s of this.nodes)
      s instanceof ws && s.updateHeight(this.oracle, i), i += s ? s.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, t, i, s) {
    let r = new Lw(i, e);
    return kt.spans(t, i, s, r, 0), r.finish(i);
  }
}
function Cle(n, e, t) {
  let i = new kle();
  return kt.compare(n, e, t, i, 0), i.changes;
}
class kle {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, t, i, s) {
    (e < t || i && i.heightRelevant || s && s.heightRelevant) && rO(e, t, this.changes, 5);
  }
}
function Ple(n, e) {
  let t = n.getBoundingClientRect(), i = n.ownerDocument, s = i.defaultView || window, r = Math.max(0, t.left), o = Math.min(s.innerWidth, t.right), l = Math.max(0, t.top), a = Math.min(s.innerHeight, t.bottom);
  for (let c = n.parentNode; c && c != i.body; )
    if (c.nodeType == 1) {
      let u = c, h = window.getComputedStyle(u);
      if ((u.scrollHeight > u.clientHeight || u.scrollWidth > u.clientWidth) && h.overflow != "visible") {
        let d = u.getBoundingClientRect();
        r = Math.max(r, d.left), o = Math.min(o, d.right), l = Math.max(l, d.top), a = c == n.parentNode ? d.bottom : Math.min(a, d.bottom);
      }
      c = h.position == "absolute" || h.position == "fixed" ? u.offsetParent : u.parentNode;
    } else if (c.nodeType == 11)
      c = c.host;
    else
      break;
  return {
    left: r - t.left,
    right: Math.max(r, o) - t.left,
    top: l - (t.top + e),
    bottom: Math.max(l, a) - (t.top + e)
  };
}
function Ele(n, e) {
  let t = n.getBoundingClientRect();
  return {
    left: 0,
    right: t.right - t.left,
    top: e,
    bottom: t.bottom - (t.top + e)
  };
}
class Nv {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.size = i;
  }
  static same(e, t) {
    if (e.length != t.length)
      return !1;
    for (let i = 0; i < e.length; i++) {
      let s = e[i], r = t[i];
      if (s.from != r.from || s.to != r.to || s.size != r.size)
        return !1;
    }
    return !0;
  }
  draw(e, t) {
    return He.replace({
      widget: new Ale(this.size * (t ? e.scaleY : e.scaleX), t)
    }).range(this.from, this.to);
  }
}
class Ale extends Ko {
  constructor(e, t) {
    super(), this.size = e, this.vertical = t;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class c2 {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !0, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = u2, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = nn.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let t = e.facet(Nw).some((i) => typeof i != "function" && i.class == "cm-lineWrapping");
    this.heightOracle = new Ole(t), this.stateDeco = e.facet(Xd).filter((i) => typeof i != "function"), this.heightMap = Wi.empty().applyChanges(this.stateDeco, $t.empty, this.heightOracle.setDoc(e.doc), [new qs(0, 0, 0, e.doc.length)]), this.viewport = this.getViewport(0, null), this.updateViewportLines(), this.updateForViewport(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = He.set(this.lineGaps.map((i) => i.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: t } = this.state.selection;
    for (let i = 0; i <= 1; i++) {
      let s = i ? t.head : t.anchor;
      if (!e.some(({ from: r, to: o }) => s >= r && s <= o)) {
        let { from: r, to: o } = this.lineBlockAt(s);
        e.push(new gp(r, o));
      }
    }
    this.viewports = e.sort((i, s) => i.from - s.from), this.scaler = this.heightMap.height <= 7e6 ? u2 : new _le(this.heightOracle, this.heightMap, this.viewports);
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(this.scaler.scale == 1 ? e : Dh(e, this.scaler));
    });
  }
  update(e, t = null) {
    this.state = e.state;
    let i = this.stateDeco;
    this.stateDeco = this.state.facet(Xd).filter((u) => typeof u != "function");
    let s = e.changedRanges, r = qs.extendWithRanges(s, Cle(i, this.stateDeco, e ? e.changes : Wn.empty(this.state.doc.length))), o = this.heightMap.height, l = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), r), this.heightMap.height != o && (e.flags |= 2), l ? (this.scrollAnchorPos = e.changes.mapPos(l.from, -1), this.scrollAnchorHeight = l.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = this.heightMap.height);
    let a = r.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (t && (t.range.head < a.from || t.range.head > a.to) || !this.viewportIsAppropriate(a)) && (a = this.getViewport(0, t));
    let c = !e.changes.empty || e.flags & 2 || a.from != this.viewport.from || a.to != this.viewport.to;
    this.viewport = a, this.updateForViewport(), c && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(), t && (this.scrollTarget = t), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(i3) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let t = e.contentDOM, i = window.getComputedStyle(t), s = this.heightOracle, r = i.whiteSpace;
    this.defaultTextDirection = i.direction == "rtl" ? nn.RTL : nn.LTR;
    let o = this.heightOracle.mustRefreshForWrapping(r), l = t.getBoundingClientRect(), a = o || this.mustMeasureContent || this.contentDOMHeight != l.height;
    this.contentDOMHeight = l.height, this.mustMeasureContent = !1;
    let c = 0, u = 0;
    if (l.width && l.height) {
      let { scaleX: w, scaleY: x } = MR(t, l);
      (this.scaleX != w || this.scaleY != x) && (this.scaleX = w, this.scaleY = x, c |= 8, o = a = !0);
    }
    let h = (parseInt(i.paddingTop) || 0) * this.scaleY, d = (parseInt(i.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != h || this.paddingBottom != d) && (this.paddingTop = h, this.paddingBottom = d, c |= 10), this.editorWidth != e.scrollDOM.clientWidth && (s.lineWrapping && (a = !0), this.editorWidth = e.scrollDOM.clientWidth, c |= 8);
    let f = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != f && (this.scrollAnchorHeight = -1, this.scrollTop = f), this.scrolledToBottom = DR(e.scrollDOM);
    let p = (this.printing ? Ele : Ple)(t, this.paddingTop), g = p.top - this.pixelViewport.top, m = p.bottom - this.pixelViewport.bottom;
    this.pixelViewport = p;
    let v = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (v != this.inView && (this.inView = v, v && (a = !0)), !this.inView && !this.scrollTarget)
      return 0;
    let O = l.width;
    if ((this.contentDOMWidth != O || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = l.width, this.editorHeight = e.scrollDOM.clientHeight, c |= 8), a) {
      let w = e.docView.measureVisibleLineHeights(this.viewport);
      if (s.mustRefreshForHeights(w) && (o = !0), o || s.lineWrapping && Math.abs(O - this.contentDOMWidth) > s.charWidth) {
        let { lineHeight: x, charWidth: S, textHeight: C } = e.docView.measureTextSize();
        o = x > 0 && s.refresh(r, x, S, C, O / S, w), o && (e.docView.minWidth = 0, c |= 8);
      }
      g > 0 && m > 0 ? u = Math.max(g, m) : g < 0 && m < 0 && (u = Math.min(g, m)), s.heightChanged = !1;
      for (let x of this.viewports) {
        let S = x.from == this.viewport.from ? w : e.docView.measureVisibleLineHeights(x);
        this.heightMap = (o ? Wi.empty().applyChanges(this.stateDeco, $t.empty, this.heightOracle, [new qs(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(s, 0, o, new wle(x.from, S));
      }
      s.heightChanged && (c |= 2);
    }
    let b = !this.viewportIsAppropriate(this.viewport, u) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return b && (this.viewport = this.getViewport(u, this.scrollTarget)), this.updateForViewport(), (c & 2 || b) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(o ? [] : this.lineGaps, e)), c |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), c;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, t) {
    let i = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), s = this.heightMap, r = this.heightOracle, { visibleTop: o, visibleBottom: l } = this, a = new gp(s.lineAt(o - i * 1e3, en.ByHeight, r, 0, 0).from, s.lineAt(l + (1 - i) * 1e3, en.ByHeight, r, 0, 0).to);
    if (t) {
      let { head: c } = t.range;
      if (c < a.from || c > a.to) {
        let u = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), h = s.lineAt(c, en.ByPos, r, 0, 0), d;
        t.y == "center" ? d = (h.top + h.bottom) / 2 - u / 2 : t.y == "start" || t.y == "nearest" && c < a.from ? d = h.top : d = h.bottom - u, a = new gp(s.lineAt(d - 1e3 / 2, en.ByHeight, r, 0, 0).from, s.lineAt(d + u + 1e3 / 2, en.ByHeight, r, 0, 0).to);
      }
    }
    return a;
  }
  mapViewport(e, t) {
    let i = t.mapPos(e.from, -1), s = t.mapPos(e.to, 1);
    return new gp(this.heightMap.lineAt(i, en.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(s, en.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: t }, i = 0) {
    if (!this.inView)
      return !0;
    let { top: s } = this.heightMap.lineAt(e, en.ByPos, this.heightOracle, 0, 0), { bottom: r } = this.heightMap.lineAt(t, en.ByPos, this.heightOracle, 0, 0), { visibleTop: o, visibleBottom: l } = this;
    return (e == 0 || s <= o - Math.max(10, Math.min(
      -i,
      250
      /* VP.MaxCoverMargin */
    ))) && (t == this.state.doc.length || r >= l + Math.max(10, Math.min(
      i,
      250
      /* VP.MaxCoverMargin */
    ))) && s > o - 2 * 1e3 && r < l + 2 * 1e3;
  }
  mapLineGaps(e, t) {
    if (!e.length || t.empty)
      return e;
    let i = [];
    for (let s of e)
      t.touchesRange(s.from, s.to) || i.push(new Nv(t.mapPos(s.from), t.mapPos(s.to), s.size));
    return i;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, t) {
    let i = this.heightOracle.lineWrapping, s = i ? 1e4 : 2e3, r = s >> 1, o = s << 1;
    if (this.defaultTextDirection != nn.LTR && !i)
      return [];
    let l = [], a = (c, u, h, d) => {
      if (u - c < r)
        return;
      let f = this.state.selection.main, p = [f.from];
      f.empty || p.push(f.to);
      for (let m of p)
        if (m > c && m < u) {
          a(c, m - 10, h, d), a(m + 10, u, h, d);
          return;
        }
      let g = Tle(e, (m) => m.from >= h.from && m.to <= h.to && Math.abs(m.from - c) < r && Math.abs(m.to - u) < r && !p.some((v) => m.from < v && m.to > v));
      if (!g) {
        if (u < h.to && t && i && t.visibleRanges.some((m) => m.from <= u && m.to >= u)) {
          let m = t.moveToLineBoundary(ue.cursor(u), !1, !0).head;
          m > c && (u = m);
        }
        g = new Nv(c, u, this.gapSize(h, c, u, d));
      }
      l.push(g);
    };
    for (let c of this.viewportLines) {
      if (c.length < o)
        continue;
      let u = $le(c.from, c.to, this.stateDeco);
      if (u.total < o)
        continue;
      let h = this.scrollTarget ? this.scrollTarget.range.head : null, d, f;
      if (i) {
        let p = s / this.heightOracle.lineLength * this.heightOracle.lineHeight, g, m;
        if (h != null) {
          let v = vp(u, h), O = ((this.visibleBottom - this.visibleTop) / 2 + p) / c.height;
          g = v - O, m = v + O;
        } else
          g = (this.visibleTop - c.top - p) / c.height, m = (this.visibleBottom - c.top + p) / c.height;
        d = mp(u, g), f = mp(u, m);
      } else {
        let p = u.total * this.heightOracle.charWidth, g = s * this.heightOracle.charWidth, m, v;
        if (h != null) {
          let O = vp(u, h), b = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + g) / p;
          m = O - b, v = O + b;
        } else
          m = (this.pixelViewport.left - g) / p, v = (this.pixelViewport.right + g) / p;
        d = mp(u, m), f = mp(u, v);
      }
      d > c.from && a(c.from, d, c, u), f < c.to && a(f, c.to, c, u);
    }
    return l;
  }
  gapSize(e, t, i, s) {
    let r = vp(s, i) - vp(s, t);
    return this.heightOracle.lineWrapping ? e.height * r : s.total * this.heightOracle.charWidth * r;
  }
  updateLineGaps(e) {
    Nv.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = He.set(e.map((t) => t.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges() {
    let e = this.stateDeco;
    this.lineGaps.length && (e = e.concat(this.lineGapDeco));
    let t = [];
    kt.spans(e, this.viewport.from, this.viewport.to, {
      span(s, r) {
        t.push({ from: s, to: r });
      },
      point() {
      }
    }, 20);
    let i = t.length != this.visibleRanges.length || this.visibleRanges.some((s, r) => s.from != t[r].from || s.to != t[r].to);
    return this.visibleRanges = t, i ? 4 : 0;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((t) => t.from <= e && t.to >= e) || Dh(this.heightMap.lineAt(e, en.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return Dh(this.heightMap.lineAt(this.scaler.fromDOM(e), en.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let t = this.lineBlockAtHeight(e + 8);
    return t.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? t : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return Dh(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class gp {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
function $le(n, e, t) {
  let i = [], s = n, r = 0;
  return kt.spans(t, n, e, {
    span() {
    },
    point(o, l) {
      o > s && (i.push({ from: s, to: o }), r += o - s), s = l;
    }
  }, 20), s < e && (i.push({ from: s, to: e }), r += e - s), { total: r, ranges: i };
}
function mp({ total: n, ranges: e }, t) {
  if (t <= 0)
    return e[0].from;
  if (t >= 1)
    return e[e.length - 1].to;
  let i = Math.floor(n * t);
  for (let s = 0; ; s++) {
    let { from: r, to: o } = e[s], l = o - r;
    if (i <= l)
      return r + i;
    i -= l;
  }
}
function vp(n, e) {
  let t = 0;
  for (let { from: i, to: s } of n.ranges) {
    if (e <= s) {
      t += e - i;
      break;
    }
    t += s - i;
  }
  return t / n.total;
}
function Tle(n, e) {
  for (let t of n)
    if (e(t))
      return t;
}
const u2 = {
  toDOM(n) {
    return n;
  },
  fromDOM(n) {
    return n;
  },
  scale: 1
};
class _le {
  constructor(e, t, i) {
    let s = 0, r = 0, o = 0;
    this.viewports = i.map(({ from: l, to: a }) => {
      let c = t.lineAt(l, en.ByPos, e, 0, 0).top, u = t.lineAt(a, en.ByPos, e, 0, 0).bottom;
      return s += u - c, { from: l, to: a, top: c, bottom: u, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - s) / (t.height - s);
    for (let l of this.viewports)
      l.domTop = o + (l.top - r) * this.scale, o = l.domBottom = l.domTop + (l.bottom - l.top), r = l.bottom;
  }
  toDOM(e) {
    for (let t = 0, i = 0, s = 0; ; t++) {
      let r = t < this.viewports.length ? this.viewports[t] : null;
      if (!r || e < r.top)
        return s + (e - i) * this.scale;
      if (e <= r.bottom)
        return r.domTop + (e - r.top);
      i = r.bottom, s = r.domBottom;
    }
  }
  fromDOM(e) {
    for (let t = 0, i = 0, s = 0; ; t++) {
      let r = t < this.viewports.length ? this.viewports[t] : null;
      if (!r || e < r.domTop)
        return i + (e - s) / this.scale;
      if (e <= r.domBottom)
        return r.top + (e - r.domTop);
      i = r.bottom, s = r.domBottom;
    }
  }
}
function Dh(n, e) {
  if (e.scale == 1)
    return n;
  let t = e.toDOM(n.top), i = e.toDOM(n.bottom);
  return new Xr(n.from, n.length, t, i - t, Array.isArray(n._content) ? n._content.map((s) => Dh(s, e)) : n._content);
}
const bp = /* @__PURE__ */ Me.define({ combine: (n) => n.join(" ") }), fO = /* @__PURE__ */ Me.define({ combine: (n) => n.indexOf(!0) > -1 }), pO = /* @__PURE__ */ Ql.newName(), x3 = /* @__PURE__ */ Ql.newName(), S3 = /* @__PURE__ */ Ql.newName(), C3 = { "&light": "." + x3, "&dark": "." + S3 };
function gO(n, e, t) {
  return new Ql(e, {
    finish(i) {
      return /&/.test(i) ? i.replace(/&\w*/, (s) => {
        if (s == "&")
          return n;
        if (!t || !t[s])
          throw new RangeError(`Unsupported selector: ${s}`);
        return t[s];
      }) : n + " " + i;
    }
  });
}
const Mle = /* @__PURE__ */ gO("." + pO, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#444"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    insetInlineStart: 0,
    zIndex: 200
  },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    borderRight: "1px solid #ddd"
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top"
  },
  ".cm-highlightSpace:before": {
    content: "attr(data-display)",
    position: "absolute",
    pointerEvents: "none",
    color: "#888"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, C3), Lh = "￿";
class Rle {
  constructor(e, t) {
    this.points = e, this.text = "", this.lineSeparator = t.facet(Et.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += Lh;
  }
  readRange(e, t) {
    if (!e)
      return this;
    let i = e.parentNode;
    for (let s = e; ; ) {
      this.findPointBefore(i, s);
      let r = this.text.length;
      this.readNode(s);
      let o = s.nextSibling;
      if (o == t)
        break;
      let l = tn.get(s), a = tn.get(o);
      (l && a ? l.breakAfter : (l ? l.breakAfter : h2(s)) || h2(o) && (s.nodeName != "BR" || s.cmIgnore) && this.text.length > r) && this.lineBreak(), s = o;
    }
    return this.findPointBefore(i, t), this;
  }
  readTextNode(e) {
    let t = e.nodeValue;
    for (let i of this.points)
      i.node == e && (i.pos = this.text.length + Math.min(i.offset, t.length));
    for (let i = 0, s = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let r = -1, o = 1, l;
      if (this.lineSeparator ? (r = t.indexOf(this.lineSeparator, i), o = this.lineSeparator.length) : (l = s.exec(t)) && (r = l.index, o = l[0].length), this.append(t.slice(i, r < 0 ? t.length : r)), r < 0)
        break;
      if (this.lineBreak(), o > 1)
        for (let a of this.points)
          a.node == e && a.pos > this.text.length && (a.pos -= o - 1);
      i = r + o;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let t = tn.get(e), i = t && t.overrideDOMText;
    if (i != null) {
      this.findPointInside(e, i.length);
      for (let s = i.iter(); !s.next().done; )
        s.lineBreak ? this.lineBreak() : this.append(s.value);
    } else
      e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, t) {
    for (let i of this.points)
      i.node == e && e.childNodes[i.offset] == t && (i.pos = this.text.length);
  }
  findPointInside(e, t) {
    for (let i of this.points)
      (e.nodeType == 3 ? i.node == e : e.contains(i.node)) && (i.pos = this.text.length + (Nle(e, i.node, i.offset) ? t : 0));
  }
}
function Nle(n, e, t) {
  for (; ; ) {
    if (!e || t < Vo(e))
      return !1;
    if (e == n)
      return !0;
    t = Hd(e) + 1, e = e.parentNode;
  }
}
function h2(n) {
  return n.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(n.nodeName);
}
class d2 {
  constructor(e, t) {
    this.node = e, this.offset = t, this.pos = -1;
  }
}
class Dle {
  constructor(e, t, i, s) {
    this.typeOver = s, this.bounds = null, this.text = "";
    let { impreciseHead: r, impreciseAnchor: o } = e.docView;
    if (e.state.readOnly && t > -1)
      this.newSel = null;
    else if (t > -1 && (this.bounds = e.docView.domBoundsAround(t, i, 0))) {
      let l = r || o ? [] : Ble(e), a = new Rle(l, e.state);
      a.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = a.text, this.newSel = Qle(l, this.bounds.from);
    } else {
      let l = e.observer.selectionRange, a = r && r.node == l.focusNode && r.offset == l.focusOffset || !Jy(e.contentDOM, l.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(l.focusNode, l.focusOffset), c = o && o.node == l.anchorNode && o.offset == l.anchorOffset || !Jy(e.contentDOM, l.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(l.anchorNode, l.anchorOffset), u = e.viewport;
      if ((Ne.ios || Ne.chrome) && e.state.selection.main.empty && a != c && (u.from > 0 || u.to < e.state.doc.length)) {
        let h = Math.min(a, c), d = Math.max(a, c), f = u.from - h, p = u.to - d;
        (f == 0 || f == 1 || h == 0) && (p == 0 || p == -1 || d == e.state.doc.length) && (a = 0, c = e.state.doc.length);
      }
      this.newSel = ue.single(c, a);
    }
  }
}
function k3(n, e) {
  let t, { newSel: i } = e, s = n.state.selection.main, r = n.inputState.lastKeyTime > Date.now() - 100 ? n.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: o, to: l } = e.bounds, a = s.from, c = null;
    (r === 8 || Ne.android && e.text.length < l - o) && (a = s.to, c = "end");
    let u = Ile(n.state.doc.sliceString(o, l, Lh), e.text, a - o, c);
    u && (Ne.chrome && r == 13 && u.toB == u.from + 2 && e.text.slice(u.from, u.toB) == Lh + Lh && u.toB--, t = {
      from: o + u.from,
      to: o + u.toA,
      insert: $t.of(e.text.slice(u.from, u.toB).split(Lh))
    });
  } else
    i && (!n.hasFocus && n.state.facet(S0) || i.main.eq(s)) && (i = null);
  if (!t && !i)
    return !1;
  if (!t && e.typeOver && !s.empty && i && i.main.empty ? t = { from: s.from, to: s.to, insert: n.state.doc.slice(s.from, s.to) } : t && t.from >= s.from && t.to <= s.to && (t.from != s.from || t.to != s.to) && s.to - s.from - (t.to - t.from) <= 4 ? t = {
    from: s.from,
    to: s.to,
    insert: n.state.doc.slice(s.from, t.from).append(t.insert).append(n.state.doc.slice(t.to, s.to))
  } : (Ne.mac || Ne.android) && t && t.from == t.to && t.from == s.head - 1 && /^\. ?$/.test(t.insert.toString()) && n.contentDOM.getAttribute("autocorrect") == "off" ? (i && t.insert.length == 2 && (i = ue.single(i.main.anchor - 1, i.main.head - 1)), t = { from: s.from, to: s.to, insert: $t.of([" "]) }) : Ne.chrome && t && t.from == t.to && t.from == s.head && t.insert.toString() == `
 ` && n.lineWrapping && (i && (i = ue.single(i.main.anchor - 1, i.main.head - 1)), t = { from: s.from, to: s.to, insert: $t.of([" "]) }), t) {
    if (Ne.ios && n.inputState.flushIOSKey() || Ne.android && (t.from == s.from && t.to == s.to && t.insert.length == 1 && t.insert.lines == 2 && jc(n.contentDOM, "Enter", 13) || (t.from == s.from - 1 && t.to == s.to && t.insert.length == 0 || r == 8 && t.insert.length < t.to - t.from && t.to > s.head) && jc(n.contentDOM, "Backspace", 8) || t.from == s.from && t.to == s.to + 1 && t.insert.length == 0 && jc(n.contentDOM, "Delete", 46)))
      return !0;
    let o = t.insert.toString();
    n.inputState.composing >= 0 && n.inputState.composing++;
    let l, a = () => l || (l = Lle(n, t, i));
    return n.state.facet(e3).some((c) => c(n, t.from, t.to, o, a)) || n.dispatch(a()), !0;
  } else if (i && !i.main.eq(s)) {
    let o = !1, l = "select";
    return n.inputState.lastSelectionTime > Date.now() - 50 && (n.inputState.lastSelectionOrigin == "select" && (o = !0), l = n.inputState.lastSelectionOrigin), n.dispatch({ selection: i, scrollIntoView: o, userEvent: l }), !0;
  } else
    return !1;
}
function Lle(n, e, t) {
  let i, s = n.state, r = s.selection.main;
  if (e.from >= r.from && e.to <= r.to && e.to - e.from >= (r.to - r.from) / 3 && (!t || t.main.empty && t.main.from == e.from + e.insert.length) && n.inputState.composing < 0) {
    let l = r.from < e.from ? s.sliceDoc(r.from, e.from) : "", a = r.to > e.to ? s.sliceDoc(e.to, r.to) : "";
    i = s.replaceSelection(n.state.toText(l + e.insert.sliceString(0, void 0, n.state.lineBreak) + a));
  } else {
    let l = s.changes(e), a = t && t.main.to <= l.newLength ? t.main : void 0;
    if (s.selection.ranges.length > 1 && n.inputState.composing >= 0 && e.to <= r.to && e.to >= r.to - 10) {
      let c = n.state.sliceDoc(e.from, e.to), u, h = t && c3(n, t.main.head);
      if (h) {
        let p = e.insert.length - (e.to - e.from);
        u = { from: h.from, to: h.to - p };
      } else
        u = n.state.doc.lineAt(r.head);
      let d = r.to - e.to, f = r.to - r.from;
      i = s.changeByRange((p) => {
        if (p.from == r.from && p.to == r.to)
          return { changes: l, range: a || p.map(l) };
        let g = p.to - d, m = g - c.length;
        if (p.to - p.from != f || n.state.sliceDoc(m, g) != c || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        p.to >= u.from && p.from <= u.to)
          return { range: p };
        let v = s.changes({ from: m, to: g, insert: e.insert }), O = p.to - r.to;
        return {
          changes: v,
          range: a ? ue.range(Math.max(0, a.anchor + O), Math.max(0, a.head + O)) : p.map(v)
        };
      });
    } else
      i = {
        changes: l,
        selection: a && s.selection.replaceRange(a)
      };
  }
  let o = "input.type";
  return (n.composing || n.inputState.compositionPendingChange && n.inputState.compositionEndedAt > Date.now() - 50) && (n.inputState.compositionPendingChange = !1, o += ".compose", n.inputState.compositionFirstChange && (o += ".start", n.inputState.compositionFirstChange = !1)), s.update(i, { userEvent: o, scrollIntoView: !0 });
}
function Ile(n, e, t, i) {
  let s = Math.min(n.length, e.length), r = 0;
  for (; r < s && n.charCodeAt(r) == e.charCodeAt(r); )
    r++;
  if (r == s && n.length == e.length)
    return null;
  let o = n.length, l = e.length;
  for (; o > 0 && l > 0 && n.charCodeAt(o - 1) == e.charCodeAt(l - 1); )
    o--, l--;
  if (i == "end") {
    let a = Math.max(0, r - Math.min(o, l));
    t -= o + a - r;
  }
  if (o < r && n.length < e.length) {
    let a = t <= r && t >= o ? r - t : 0;
    r -= a, l = r + (l - o), o = r;
  } else if (l < r) {
    let a = t <= r && t >= l ? r - t : 0;
    r -= a, o = r + (o - l), l = r;
  }
  return { from: r, toA: o, toB: l };
}
function Ble(n) {
  let e = [];
  if (n.root.activeElement != n.contentDOM)
    return e;
  let { anchorNode: t, anchorOffset: i, focusNode: s, focusOffset: r } = n.observer.selectionRange;
  return t && (e.push(new d2(t, i)), (s != t || r != i) && e.push(new d2(s, r))), e;
}
function Qle(n, e) {
  if (n.length == 0)
    return null;
  let t = n[0].pos, i = n.length == 2 ? n[1].pos : t;
  return t > -1 && i > -1 ? ue.single(t + e, i + e) : null;
}
const zle = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, Dv = Ne.ie && Ne.ie_version <= 11;
class jle {
  constructor(e) {
    this.view = e, this.active = !1, this.selectionRange = new Coe(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((t) => {
      for (let i of t)
        this.queue.push(i);
      (Ne.ie && Ne.ie_version <= 11 || Ne.ios && e.composing) && t.some((i) => i.type == "childList" && i.removedNodes.length || i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), Dv && (this.onCharData = (t) => {
      this.queue.push({
        target: t.target,
        type: "characterData",
        oldValue: t.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var t;
      ((t = this.view.docView) === null || t === void 0 ? void 0 : t.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((t) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), t.length > 0 && t[t.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((t) => {
      t.length > 0 && t[t.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint() {
    this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500);
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((t, i) => t != e[i]))) {
      this.gapIntersection.disconnect();
      for (let t of e)
        this.gapIntersection.observe(t);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let t = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: i } = this, s = this.selectionRange;
    if (i.state.facet(S0) ? i.root.activeElement != this.dom : !dg(i.dom, s))
      return;
    let r = s.anchorNode && i.docView.nearest(s.anchorNode);
    if (r && r.ignoreEvent(e)) {
      t || (this.selectionChanged = !1);
      return;
    }
    (Ne.ie && Ne.ie_version <= 11 || Ne.android && Ne.chrome) && !i.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    s.focusNode && ad(s.focusNode, s.focusOffset, s.anchorNode, s.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, t = Ne.safari && e.root.nodeType == 11 && Ooe(this.dom.ownerDocument) == this.dom && Vle(this.view) || cm(e.root);
    if (!t || this.selectionRange.eq(t))
      return !1;
    let i = dg(this.dom, t);
    return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && Poe(this.dom, t) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(t), i && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, t) {
    this.selectionRange.set(e.node, e.offset, t.node, t.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, t = null;
    for (let i = this.dom; i; )
      if (i.nodeType == 1)
        !t && e < this.scrollTargets.length && this.scrollTargets[e] == i ? e++ : t || (t = this.scrollTargets.slice(0, e)), t && t.push(i), i = i.assignedSlot || i.parentNode;
      else if (i.nodeType == 11)
        i = i.host;
      else
        break;
    if (e < this.scrollTargets.length && !t && (t = this.scrollTargets.slice(0, e)), t) {
      for (let i of this.scrollTargets)
        i.removeEventListener("scroll", this.onScroll);
      for (let i of this.scrollTargets = t)
        i.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, zle), Dv && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), Dv && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, t) {
    var i;
    if (!this.delayedAndroidKey) {
      let s = () => {
        let r = this.delayedAndroidKey;
        r && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = r.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && r.force && jc(this.dom, r.key, r.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(s);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: t,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((i = this.delayedAndroidKey) === null || i === void 0) && i.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let t = -1, i = -1, s = !1;
    for (let r of e) {
      let o = this.readMutation(r);
      o && (o.typeOver && (s = !0), t == -1 ? { from: t, to: i } = o : (t = Math.min(o.from, t), i = Math.max(o.to, i)));
    }
    return { from: t, to: i, typeOver: s };
  }
  readChange() {
    let { from: e, to: t, typeOver: i } = this.processRecords(), s = this.selectionChanged && dg(this.dom, this.selectionRange);
    if (e < 0 && !s)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let r = new Dle(this.view, e, t, i);
    return this.view.docView.domChanged = { newSel: r.newSel ? r.newSel.main : null }, r;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let t = this.readChange();
    if (!t)
      return this.view.requestMeasure(), !1;
    let i = this.view.state, s = k3(this.view, t);
    return this.view.state == i && this.view.update([]), s;
  }
  readMutation(e) {
    let t = this.view.docView.nearest(e.target);
    if (!t || t.ignoreMutation(e))
      return null;
    if (t.markDirty(e.type == "attributes"), e.type == "attributes" && (t.flags |= 4), e.type == "childList") {
      let i = f2(t, e.previousSibling || e.target.previousSibling, -1), s = f2(t, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: i ? t.posAfter(i) : t.posAtStart,
        to: s ? t.posBefore(s) : t.posAtEnd,
        typeOver: !1
      };
    } else
      return e.type == "characterData" ? { from: t.posAtStart, to: t.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  destroy() {
    var e, t, i;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (t = this.gapIntersection) === null || t === void 0 || t.disconnect(), (i = this.resizeScroll) === null || i === void 0 || i.disconnect();
    for (let s of this.scrollTargets)
      s.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey);
  }
}
function f2(n, e, t) {
  for (; e; ) {
    let i = tn.get(e);
    if (i && i.parent == n)
      return i;
    let s = e.parentNode;
    e = s != n.dom ? s : t > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function Vle(n) {
  let e = null;
  function t(a) {
    a.preventDefault(), a.stopImmediatePropagation(), e = a.getTargetRanges()[0];
  }
  if (n.contentDOM.addEventListener("beforeinput", t, !0), n.dom.ownerDocument.execCommand("indent"), n.contentDOM.removeEventListener("beforeinput", t, !0), !e)
    return null;
  let i = e.startContainer, s = e.startOffset, r = e.endContainer, o = e.endOffset, l = n.docView.domAtPos(n.state.selection.main.anchor);
  return ad(l.node, l.offset, r, o) && ([i, s, r, o] = [r, o, i, s]), { anchorNode: i, anchorOffset: s, focusNode: r, focusOffset: o };
}
class _e {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: t } = e;
    this.dispatchTransactions = e.dispatchTransactions || t && ((i) => i.forEach((s) => t(s, this))) || ((i) => this.update(i)), this.dispatch = this.dispatch.bind(this), this._root = e.root || koe(e.parent) || document, this.viewState = new c2(e.state || Et.create(e)), e.scrollTo && e.scrollTo.is(dp) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(Rh).map((i) => new _v(i));
    for (let i of this.plugins)
      i.update(this);
    this.observer = new jle(this), this.inputState = new ile(this), this.inputState.ensureHandlers(this.plugins), this.docView = new qk(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure();
  }
  dispatch(...e) {
    let t = e.length == 1 && e[0] instanceof Nn ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(t, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let t = !1, i = !1, s, r = this.state;
    for (let d of e) {
      if (d.startState != r)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      r = d.state;
    }
    if (this.destroyed) {
      this.viewState.state = r;
      return;
    }
    let o = this.hasFocus, l = 0, a = null;
    e.some((d) => d.annotation(b3)) ? (this.inputState.notifiedFocused = o, l = 1) : o != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = o, a = y3(r, o), a || (l = 1));
    let c = this.observer.delayedAndroidKey, u = null;
    if (c ? (this.observer.clearDelayedAndroidKey(), u = this.observer.readChange(), (u && !this.state.doc.eq(r.doc) || !this.state.selection.eq(r.selection)) && (u = null)) : this.observer.clear(), r.facet(Et.phrases) != this.state.facet(Et.phrases))
      return this.setState(r);
    s = um.create(this, r, e), s.flags |= l;
    let h = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let d of e) {
        if (h && (h = h.map(d.changes)), d.scrollIntoView) {
          let { main: f } = d.state.selection;
          h = new Vc(f.empty ? f : ue.cursor(f.head, f.head > f.anchor ? -1 : 1));
        }
        for (let f of d.effects)
          f.is(dp) && (h = f.value.clip(this.state));
      }
      this.viewState.update(s, h), this.bidiCache = hm.update(this.bidiCache, s.changes), s.empty || (this.updatePlugins(s), this.inputState.update(s)), t = this.docView.update(s), this.state.facet(Nh) != this.styleModules && this.mountStyles(), i = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(t, e.some((d) => d.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (s.startState.facet(bp) != s.state.facet(bp) && (this.viewState.mustMeasureContent = !0), (t || i || h || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), !s.empty)
      for (let d of this.state.facet(cO))
        try {
          d(s);
        } catch (f) {
          Zs(this.state, f, "update listener");
        }
    (a || u) && Promise.resolve().then(() => {
      a && this.state == a.startState && this.dispatch(a), u && !k3(this, u) && c.force && jc(this.contentDOM, c.key, c.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let t = this.hasFocus;
    try {
      for (let i of this.plugins)
        i.destroy(this);
      this.viewState = new c2(e), this.plugins = e.facet(Rh).map((i) => new _v(i)), this.pluginMap.clear();
      for (let i of this.plugins)
        i.update(this);
      this.docView.destroy(), this.docView = new qk(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    t && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let t = e.startState.facet(Rh), i = e.state.facet(Rh);
    if (t != i) {
      let s = [];
      for (let r of i) {
        let o = t.indexOf(r);
        if (o < 0)
          s.push(new _v(r));
        else {
          let l = this.plugins[o];
          l.mustUpdate = e, s.push(l);
        }
      }
      for (let r of this.plugins)
        r.mustUpdate != e && r.destroy(this);
      this.plugins = s, this.pluginMap.clear();
    } else
      for (let s of this.plugins)
        s.mustUpdate = e;
    for (let s = 0; s < this.plugins.length; s++)
      this.plugins[s].update(this);
    t != i && this.inputState.ensureHandlers(this.plugins);
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let t = null, i = this.scrollDOM, s = i.scrollTop * this.scaleY, { scrollAnchorPos: r, scrollAnchorHeight: o } = this.viewState;
    Math.abs(s - this.viewState.scrollTop) > 1 && (o = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let l = 0; ; l++) {
        if (o < 0)
          if (DR(i))
            r = -1, o = this.viewState.heightMap.height;
          else {
            let f = this.viewState.scrollAnchorAt(s);
            r = f.from, o = f.top;
          }
        this.updateState = 1;
        let a = this.viewState.measure(this);
        if (!a && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (l > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let c = [];
        a & 4 || ([this.measureRequests, c] = [c, this.measureRequests]);
        let u = c.map((f) => {
          try {
            return f.read(this);
          } catch (p) {
            return Zs(this.state, p), p2;
          }
        }), h = um.create(this, this.state, []), d = !1;
        h.flags |= a, t ? t.flags |= a : t = h, this.updateState = 2, h.empty || (this.updatePlugins(h), this.inputState.update(h), this.updateAttrs(), d = this.docView.update(h));
        for (let f = 0; f < c.length; f++)
          if (u[f] != p2)
            try {
              let p = c[f];
              p.write && p.write(u[f], this);
            } catch (p) {
              Zs(this.state, p);
            }
        if (d && this.docView.updateSelection(!0), !h.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, o = -1;
              continue;
            } else {
              let p = (r < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(r).top) - o;
              if (p > 1 || p < -1) {
                s = s + p, i.scrollTop = s / this.scaleY, o = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (t && !t.empty)
      for (let l of this.state.facet(cO))
        l(t);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return pO + " " + (this.state.facet(fO) ? S3 : x3) + " " + this.state.facet(bp);
  }
  updateAttrs() {
    let e = g2(this, s3, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), t = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      translate: "no",
      contenteditable: this.state.facet(S0) ? "true" : "false",
      class: "cm-content",
      style: `${Ne.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (t["aria-readonly"] = "true"), g2(this, Nw, t);
    let i = this.observer.ignore(() => {
      let s = sO(this.contentDOM, this.contentAttrs, t), r = sO(this.dom, this.editorAttrs, e);
      return s || r;
    });
    return this.editorAttrs = e, this.contentAttrs = t, i;
  }
  showAnnouncements(e) {
    let t = !0;
    for (let i of e)
      for (let s of i.effects)
        if (s.is(_e.announce)) {
          t && (this.announceDOM.textContent = ""), t = !1;
          let r = this.announceDOM.appendChild(document.createElement("div"));
          r.textContent = s.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(Nh);
    let e = this.state.facet(_e.cspNonce);
    Ql.mount(this.root, this.styleModules.concat(Mle).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let t = 0; t < this.measureRequests.length; t++)
          if (this.measureRequests[t].key === e.key) {
            this.measureRequests[t] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let t = this.pluginMap.get(e);
    return (t === void 0 || t && t.spec != e) && this.pluginMap.set(e, t = this.plugins.find((i) => i.spec == e) || null), t && t.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, t, i) {
    return Rv(this, e, Gk(this, e, t, i));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, t) {
    return Rv(this, e, Gk(this, e, t, (i) => tle(this, e.head, i)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, t) {
    let i = this.bidiSpans(e), s = this.textDirectionAt(e.from), r = i[t ? i.length - 1 : 0];
    return ue.cursor(r.side(t, s) + e.from, r.forward(!t, s) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, t, i = !0) {
    return ele(this, e, t, i);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, t, i) {
    return Rv(this, e, nle(this, e, t, i));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, t = 0) {
    return this.docView.posFromDOM(e, t);
  }
  posAtCoords(e, t = !0) {
    return this.readMeasured(), h3(this, e, t);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, t = 1) {
    this.readMeasured();
    let i = this.docView.coordsAt(e, t);
    if (!i || i.left == i.right)
      return i;
    let s = this.state.doc.lineAt(e), r = this.bidiSpans(s), o = r[Cl.find(r, e - s.from, -1, t)];
    return Tw(i, o.dir == nn.LTR == t > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(n3) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > Fle)
      return XR(e.length);
    let t = this.textDirectionAt(e.from), i;
    for (let r of this.bidiCache)
      if (r.from == e.from && r.dir == t && (r.fresh || HR(r.isolates, i = Zk(this, e))))
        return r.order;
    i || (i = Zk(this, e));
    let s = Boe(e.text, t, i);
    return this.bidiCache.push(new hm(e.from, e.to, t, i, !0, s)), s;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || Ne.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      RR(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, t = {}) {
    return dp.of(new Vc(typeof e == "number" ? ue.cursor(e) : e, t.y, t.x, t.yMargin, t.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: t } = this.scrollDOM, i = this.viewState.scrollAnchorAt(e);
    return dp.of(new Vc(ue.cursor(i.from), "start", "start", i.top - e, t, !0));
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return Bn.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return Bn.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, t) {
    let i = Ql.newName(), s = [bp.of(i), Nh.of(gO(`.${i}`, e))];
    return t && t.dark && s.push(fO.of(!0)), s;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return sc.lowest(Nh.of(gO("." + pO, e, C3)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var t;
    let i = e.querySelector(".cm-content"), s = i && tn.get(i) || tn.get(e);
    return ((t = s == null ? void 0 : s.rootView) === null || t === void 0 ? void 0 : t.view) || null;
  }
}
_e.styleModule = Nh;
_e.inputHandler = e3;
_e.focusChangeEffect = t3;
_e.perLineTextDirection = n3;
_e.exceptionSink = JR;
_e.updateListener = cO;
_e.editable = S0;
_e.mouseSelectionStyle = KR;
_e.dragMovesSelection = GR;
_e.clickAddsSelectionRange = UR;
_e.decorations = Xd;
_e.outerDecorations = r3;
_e.atomicRanges = Dw;
_e.bidiIsolatedRanges = o3;
_e.scrollMargins = l3;
_e.darkTheme = fO;
_e.cspNonce = /* @__PURE__ */ Me.define({ combine: (n) => n.length ? n[0] : "" });
_e.contentAttributes = Nw;
_e.editorAttributes = s3;
_e.lineWrapping = /* @__PURE__ */ _e.contentAttributes.of({ class: "cm-lineWrapping" });
_e.announce = /* @__PURE__ */ ct.define();
const Fle = 4096, p2 = {};
class hm {
  constructor(e, t, i, s, r, o) {
    this.from = e, this.to = t, this.dir = i, this.isolates = s, this.fresh = r, this.order = o;
  }
  static update(e, t) {
    if (t.empty && !e.some((r) => r.fresh))
      return e;
    let i = [], s = e.length ? e[e.length - 1].dir : nn.LTR;
    for (let r = Math.max(0, e.length - 10); r < e.length; r++) {
      let o = e[r];
      o.dir == s && !t.touchesRange(o.from, o.to) && i.push(new hm(t.mapPos(o.from, 1), t.mapPos(o.to, -1), o.dir, o.isolates, !1, o.order));
    }
    return i;
  }
}
function g2(n, e, t) {
  for (let i = n.state.facet(e), s = i.length - 1; s >= 0; s--) {
    let r = i[s], o = typeof r == "function" ? r(n) : r;
    o && iO(o, t);
  }
  return t;
}
const Zle = Ne.mac ? "mac" : Ne.windows ? "win" : Ne.linux ? "linux" : "key";
function qle(n, e) {
  const t = n.split(/-(?!$)/);
  let i = t[t.length - 1];
  i == "Space" && (i = " ");
  let s, r, o, l;
  for (let a = 0; a < t.length - 1; ++a) {
    const c = t[a];
    if (/^(cmd|meta|m)$/i.test(c))
      l = !0;
    else if (/^a(lt)?$/i.test(c))
      s = !0;
    else if (/^(c|ctrl|control)$/i.test(c))
      r = !0;
    else if (/^s(hift)?$/i.test(c))
      o = !0;
    else if (/^mod$/i.test(c))
      e == "mac" ? l = !0 : r = !0;
    else
      throw new Error("Unrecognized modifier name: " + c);
  }
  return s && (i = "Alt-" + i), r && (i = "Ctrl-" + i), l && (i = "Meta-" + i), o && (i = "Shift-" + i), i;
}
function yp(n, e, t) {
  return e.altKey && (n = "Alt-" + n), e.ctrlKey && (n = "Ctrl-" + n), e.metaKey && (n = "Meta-" + n), t !== !1 && e.shiftKey && (n = "Shift-" + n), n;
}
const Wle = /* @__PURE__ */ sc.default(/* @__PURE__ */ _e.domEventHandlers({
  keydown(n, e) {
    return E3(P3(e.state), n, e, "editor");
  }
})), C0 = /* @__PURE__ */ Me.define({ enables: Wle }), m2 = /* @__PURE__ */ new WeakMap();
function P3(n) {
  let e = n.facet(C0), t = m2.get(e);
  return t || m2.set(e, t = Yle(e.reduce((i, s) => i.concat(s), []))), t;
}
function Hle(n, e, t) {
  return E3(P3(n.state), e, n, t);
}
let ml = null;
const Xle = 4e3;
function Yle(n, e = Zle) {
  let t = /* @__PURE__ */ Object.create(null), i = /* @__PURE__ */ Object.create(null), s = (o, l) => {
    let a = i[o];
    if (a == null)
      i[o] = l;
    else if (a != l)
      throw new Error("Key binding " + o + " is used both as a regular binding and as a multi-stroke prefix");
  }, r = (o, l, a, c, u) => {
    var h, d;
    let f = t[o] || (t[o] = /* @__PURE__ */ Object.create(null)), p = l.split(/ (?!$)/).map((v) => qle(v, e));
    for (let v = 1; v < p.length; v++) {
      let O = p.slice(0, v).join(" ");
      s(O, !0), f[O] || (f[O] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(b) => {
          let w = ml = { view: b, prefix: O, scope: o };
          return setTimeout(() => {
            ml == w && (ml = null);
          }, Xle), !0;
        }]
      });
    }
    let g = p.join(" ");
    s(g, !1);
    let m = f[g] || (f[g] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((d = (h = f._any) === null || h === void 0 ? void 0 : h.run) === null || d === void 0 ? void 0 : d.slice()) || []
    });
    a && m.run.push(a), c && (m.preventDefault = !0), u && (m.stopPropagation = !0);
  };
  for (let o of n) {
    let l = o.scope ? o.scope.split(" ") : ["editor"];
    if (o.any)
      for (let c of l) {
        let u = t[c] || (t[c] = /* @__PURE__ */ Object.create(null));
        u._any || (u._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        for (let h in u)
          u[h].run.push(o.any);
      }
    let a = o[e] || o.key;
    if (a)
      for (let c of l)
        r(c, a, o.run, o.preventDefault, o.stopPropagation), o.shift && r(c, "Shift-" + a, o.shift, o.preventDefault, o.stopPropagation);
  }
  return t;
}
function E3(n, e, t, i) {
  let s = yoe(e), r = bi(s, 0), o = zs(r) == s.length && s != " ", l = "", a = !1, c = !1, u = !1;
  ml && ml.view == t && ml.scope == i && (l = ml.prefix + " ", f3.indexOf(e.keyCode) < 0 && (c = !0, ml = null));
  let h = /* @__PURE__ */ new Set(), d = (m) => {
    if (m) {
      for (let v of m.run)
        if (!h.has(v) && (h.add(v), v(t, e)))
          return m.stopPropagation && (u = !0), !0;
      m.preventDefault && (m.stopPropagation && (u = !0), c = !0);
    }
    return !1;
  }, f = n[i], p, g;
  return f && (d(f[l + yp(s, e, !o)]) ? a = !0 : o && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(Ne.windows && e.ctrlKey && e.altKey) && (p = zl[e.keyCode]) && p != s ? (d(f[l + yp(p, e, !0)]) || e.shiftKey && (g = qd[e.keyCode]) != s && g != p && d(f[l + yp(g, e, !1)])) && (a = !0) : o && e.shiftKey && d(f[l + yp(s, e, !0)]) && (a = !0), !a && d(f._any) && (a = !0)), c && (a = !0), a && u && e.stopPropagation(), a;
}
class Tf {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, t, i, s, r) {
    this.className = e, this.left = t, this.top = i, this.width = s, this.height = r;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, t) {
    return t.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, t, i) {
    if (i.empty) {
      let s = e.coordsAtPos(i.head, i.assoc || 1);
      if (!s)
        return [];
      let r = A3(e);
      return [new Tf(t, s.left - r.left, s.top - r.top, null, s.bottom - s.top)];
    } else
      return Ule(e, t, i);
  }
}
function A3(n) {
  let e = n.scrollDOM.getBoundingClientRect();
  return { left: (n.textDirection == nn.LTR ? e.left : e.right - n.scrollDOM.clientWidth * n.scaleX) - n.scrollDOM.scrollLeft * n.scaleX, top: e.top - n.scrollDOM.scrollTop * n.scaleY };
}
function v2(n, e, t) {
  let i = ue.cursor(e);
  return {
    from: Math.max(t.from, n.moveToLineBoundary(i, !1, !0).from),
    to: Math.min(t.to, n.moveToLineBoundary(i, !0, !0).from),
    type: qi.Text
  };
}
function Ule(n, e, t) {
  if (t.to <= n.viewport.from || t.from >= n.viewport.to)
    return [];
  let i = Math.max(t.from, n.viewport.from), s = Math.min(t.to, n.viewport.to), r = n.textDirection == nn.LTR, o = n.contentDOM, l = o.getBoundingClientRect(), a = A3(n), c = o.querySelector(".cm-line"), u = c && window.getComputedStyle(c), h = l.left + (u ? parseInt(u.paddingLeft) + Math.min(0, parseInt(u.textIndent)) : 0), d = l.right - (u ? parseInt(u.paddingRight) : 0), f = hO(n, i), p = hO(n, s), g = f.type == qi.Text ? f : null, m = p.type == qi.Text ? p : null;
  if (g && (n.lineWrapping || f.widgetLineBreaks) && (g = v2(n, i, g)), m && (n.lineWrapping || p.widgetLineBreaks) && (m = v2(n, s, m)), g && m && g.from == m.from)
    return O(b(t.from, t.to, g));
  {
    let x = g ? b(t.from, null, g) : w(f, !1), S = m ? b(null, t.to, m) : w(p, !0), C = [];
    return (g || f).to < (m || p).from - (g && m ? 1 : 0) || f.widgetLineBreaks > 1 && x.bottom + n.defaultLineHeight / 2 < S.top ? C.push(v(h, x.bottom, d, S.top)) : x.bottom < S.top && n.elementAtHeight((x.bottom + S.top) / 2).type == qi.Text && (x.bottom = S.top = (x.bottom + S.top) / 2), O(x).concat(C).concat(O(S));
  }
  function v(x, S, C, k) {
    return new Tf(
      e,
      x - a.left,
      S - a.top - 0.01,
      C - x,
      k - S + 0.01
      /* C.Epsilon */
    );
  }
  function O({ top: x, bottom: S, horizontal: C }) {
    let k = [];
    for (let E = 0; E < C.length; E += 2)
      k.push(v(C[E], x, C[E + 1], S));
    return k;
  }
  function b(x, S, C) {
    let k = 1e9, E = -1e9, M = [];
    function _(I, P, A, N, q) {
      let j = n.coordsAtPos(I, I == C.to ? -2 : 2), H = n.coordsAtPos(A, A == C.from ? 2 : -2);
      !j || !H || (k = Math.min(j.top, H.top, k), E = Math.max(j.bottom, H.bottom, E), q == nn.LTR ? M.push(r && P ? h : j.left, r && N ? d : H.right) : M.push(!r && N ? h : H.left, !r && P ? d : j.right));
    }
    let T = x ?? C.from, B = S ?? C.to;
    for (let I of n.visibleRanges)
      if (I.to > T && I.from < B)
        for (let P = Math.max(I.from, T), A = Math.min(I.to, B); ; ) {
          let N = n.state.doc.lineAt(P);
          for (let q of n.bidiSpans(N)) {
            let j = q.from + N.from, H = q.to + N.from;
            if (j >= A)
              break;
            H > P && _(Math.max(j, P), x == null && j <= T, Math.min(H, A), S == null && H >= B, q.dir);
          }
          if (P = N.to + 1, P >= A)
            break;
        }
    return M.length == 0 && _(T, x == null, B, S == null, n.textDirection), { top: k, bottom: E, horizontal: M };
  }
  function w(x, S) {
    let C = l.top + (S ? x.top : x.bottom);
    return { top: C, bottom: C, horizontal: [] };
  }
}
function Gle(n, e) {
  return n.constructor == e.constructor && n.eq(e);
}
class Kle {
  constructor(e, t) {
    this.view = e, this.layer = t, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), t.above && this.dom.classList.add("cm-layer-above"), t.class && this.dom.classList.add(t.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), t.mount && t.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(gg) != e.state.facet(gg) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  setOrder(e) {
    let t = 0, i = e.facet(gg);
    for (; t < i.length && i[t] != this.layer; )
      t++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - t);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: t } = this.view;
    (e != this.scaleX || t != this.scaleY) && (this.scaleX = e, this.scaleY = t, this.dom.style.transform = `scale(${1 / e}, ${1 / t})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((t, i) => !Gle(t, this.drawn[i]))) {
      let t = this.dom.firstChild, i = 0;
      for (let s of e)
        s.update && t && s.constructor && this.drawn[i].constructor && s.update(t, this.drawn[i]) ? (t = t.nextSibling, i++) : this.dom.insertBefore(s.draw(), t);
      for (; t; ) {
        let s = t.nextSibling;
        t.remove(), t = s;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const gg = /* @__PURE__ */ Me.define();
function $3(n) {
  return [
    Bn.define((e) => new Kle(e, n)),
    gg.of(n)
  ];
}
const T3 = !Ne.ios, Yd = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, t) => Math.min(e, t),
      drawRangeCursor: (e, t) => e || t
    });
  }
});
function Jle(n = {}) {
  return [
    Yd.of(n),
    eae,
    tae,
    nae,
    i3.of(!0)
  ];
}
function _3(n) {
  return n.startState.facet(Yd) != n.state.facet(Yd);
}
const eae = /* @__PURE__ */ $3({
  above: !0,
  markers(n) {
    let { state: e } = n, t = e.facet(Yd), i = [];
    for (let s of e.selection.ranges) {
      let r = s == e.selection.main;
      if (s.empty ? !r || T3 : t.drawRangeCursor) {
        let o = r ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", l = s.empty ? s : ue.cursor(s.head, s.head > s.anchor ? -1 : 1);
        for (let a of Tf.forRange(n, o, l))
          i.push(a);
      }
    }
    return i;
  },
  update(n, e) {
    n.transactions.some((i) => i.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let t = _3(n);
    return t && b2(n.state, e), n.docChanged || n.selectionSet || t;
  },
  mount(n, e) {
    b2(e.state, n);
  },
  class: "cm-cursorLayer"
});
function b2(n, e) {
  e.style.animationDuration = n.facet(Yd).cursorBlinkRate + "ms";
}
const tae = /* @__PURE__ */ $3({
  above: !1,
  markers(n) {
    return n.state.selection.ranges.map((e) => e.empty ? [] : Tf.forRange(n, "cm-selectionBackground", e)).reduce((e, t) => e.concat(t));
  },
  update(n, e) {
    return n.docChanged || n.selectionSet || n.viewportChanged || _3(n);
  },
  class: "cm-selectionLayer"
}), mO = {
  ".cm-line": {
    "& ::selection": { backgroundColor: "transparent !important" },
    "&::selection": { backgroundColor: "transparent !important" }
  }
};
T3 && (mO[".cm-line"].caretColor = "transparent !important", mO[".cm-content"] = { caretColor: "transparent !important" });
const nae = /* @__PURE__ */ sc.highest(/* @__PURE__ */ _e.theme(mO)), M3 = /* @__PURE__ */ ct.define({
  map(n, e) {
    return n == null ? null : e.mapPos(n);
  }
}), Ih = /* @__PURE__ */ ui.define({
  create() {
    return null;
  },
  update(n, e) {
    return n != null && (n = e.changes.mapPos(n)), e.effects.reduce((t, i) => i.is(M3) ? i.value : t, n);
  }
}), iae = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.view = n, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(n) {
    var e;
    let t = n.state.field(Ih);
    t == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (n.startState.field(Ih) != t || n.docChanged || n.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: n } = this, e = n.state.field(Ih), t = e != null && n.coordsAtPos(e);
    if (!t)
      return null;
    let i = n.scrollDOM.getBoundingClientRect();
    return {
      left: t.left - i.left + n.scrollDOM.scrollLeft * n.scaleX,
      top: t.top - i.top + n.scrollDOM.scrollTop * n.scaleY,
      height: t.bottom - t.top
    };
  }
  drawCursor(n) {
    if (this.cursor) {
      let { scaleX: e, scaleY: t } = this.view;
      n ? (this.cursor.style.left = n.left / e + "px", this.cursor.style.top = n.top / t + "px", this.cursor.style.height = n.height / t + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(n) {
    this.view.state.field(Ih) != n && this.view.dispatch({ effects: M3.of(n) });
  }
}, {
  eventObservers: {
    dragover(n) {
      this.setDropPos(this.view.posAtCoords({ x: n.clientX, y: n.clientY }));
    },
    dragleave(n) {
      (n.target == this.view.contentDOM || !this.view.contentDOM.contains(n.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function sae() {
  return [Ih, iae];
}
function y2(n, e, t, i, s) {
  e.lastIndex = 0;
  for (let r = n.iterRange(t, i), o = t, l; !r.next().done; o += r.value.length)
    if (!r.lineBreak)
      for (; l = e.exec(r.value); )
        s(o + l.index, l);
}
function rae(n, e) {
  let t = n.visibleRanges;
  if (t.length == 1 && t[0].from == n.viewport.from && t[0].to == n.viewport.to)
    return t;
  let i = [];
  for (let { from: s, to: r } of t)
    s = Math.max(n.state.doc.lineAt(s).from, s - e), r = Math.min(n.state.doc.lineAt(r).to, r + e), i.length && i[i.length - 1].to >= s ? i[i.length - 1].to = r : i.push({ from: s, to: r });
  return i;
}
class oae {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: t, decoration: i, decorate: s, boundary: r, maxLength: o = 1e3 } = e;
    if (!t.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = t, s)
      this.addMatch = (l, a, c, u) => s(u, c, c + l[0].length, l, a);
    else if (typeof i == "function")
      this.addMatch = (l, a, c, u) => {
        let h = i(l, a, c);
        h && u(c, c + l[0].length, h);
      };
    else if (i)
      this.addMatch = (l, a, c, u) => u(c, c + l[0].length, i);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = r, this.maxLength = o;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let t = new Bl(), i = t.add.bind(t);
    for (let { from: s, to: r } of rae(e, this.maxLength))
      y2(e.state.doc, this.regexp, s, r, (o, l) => this.addMatch(l, e, o, i));
    return t.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, t) {
    let i = 1e9, s = -1;
    return e.docChanged && e.changes.iterChanges((r, o, l, a) => {
      a > e.view.viewport.from && l < e.view.viewport.to && (i = Math.min(l, i), s = Math.max(a, s));
    }), e.viewportChanged || s - i > 1e3 ? this.createDeco(e.view) : s > -1 ? this.updateRange(e.view, t.map(e.changes), i, s) : t;
  }
  updateRange(e, t, i, s) {
    for (let r of e.visibleRanges) {
      let o = Math.max(r.from, i), l = Math.min(r.to, s);
      if (l > o) {
        let a = e.state.doc.lineAt(o), c = a.to < l ? e.state.doc.lineAt(l) : a, u = Math.max(r.from, a.from), h = Math.min(r.to, c.to);
        if (this.boundary) {
          for (; o > a.from; o--)
            if (this.boundary.test(a.text[o - 1 - a.from])) {
              u = o;
              break;
            }
          for (; l < c.to; l++)
            if (this.boundary.test(c.text[l - c.from])) {
              h = l;
              break;
            }
        }
        let d = [], f, p = (g, m, v) => d.push(v.range(g, m));
        if (a == c)
          for (this.regexp.lastIndex = u - a.from; (f = this.regexp.exec(a.text)) && f.index < h - a.from; )
            this.addMatch(f, e, f.index + a.from, p);
        else
          y2(e.state.doc, this.regexp, u, h, (g, m) => this.addMatch(m, e, g, p));
        t = t.update({ filterFrom: u, filterTo: h, filter: (g, m) => g < u || m > h, add: d });
      }
    }
    return t;
  }
}
const vO = /x/.unicode != null ? "gu" : "g", lae = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, vO), aae = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let Lv = null;
function cae() {
  var n;
  if (Lv == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    Lv = ((n = e.tabSize) !== null && n !== void 0 ? n : e.MozTabSize) != null;
  }
  return Lv || !1;
}
const mg = /* @__PURE__ */ Me.define({
  combine(n) {
    let e = bo(n, {
      render: null,
      specialChars: lae,
      addSpecialChars: null
    });
    return (e.replaceTabs = !cae()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, vO)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, vO)), e;
  }
});
function uae(n = {}) {
  return [mg.of(n), hae()];
}
let O2 = null;
function hae() {
  return O2 || (O2 = Bn.fromClass(class {
    constructor(n) {
      this.view = n, this.decorations = He.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(n.state.facet(mg)), this.decorations = this.decorator.createDeco(n);
    }
    makeDecorator(n) {
      return new oae({
        regexp: n.specialChars,
        decoration: (e, t, i) => {
          let { doc: s } = t.state, r = bi(e[0], 0);
          if (r == 9) {
            let o = s.lineAt(i), l = t.state.tabSize, a = ch(o.text, l, i - o.from);
            return He.replace({
              widget: new gae((l - a % l) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[r] || (this.decorationCache[r] = He.replace({ widget: new pae(n, r) }));
        },
        boundary: n.replaceTabs ? void 0 : /[^]/
      });
    }
    update(n) {
      let e = n.state.facet(mg);
      n.startState.facet(mg) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(n.view)) : this.decorations = this.decorator.updateDeco(n, this.decorations);
    }
  }, {
    decorations: (n) => n.decorations
  }));
}
const dae = "•";
function fae(n) {
  return n >= 32 ? dae : n == 10 ? "␤" : String.fromCharCode(9216 + n);
}
class pae extends Ko {
  constructor(e, t) {
    super(), this.options = e, this.code = t;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let t = fae(this.code), i = e.state.phrase("Control character") + " " + (aae[this.code] || "0x" + this.code.toString(16)), s = this.options.render && this.options.render(this.code, i, t);
    if (s)
      return s;
    let r = document.createElement("span");
    return r.textContent = t, r.title = i, r.setAttribute("aria-label", i), r.className = "cm-specialChar", r;
  }
  ignoreEvent() {
    return !1;
  }
}
class gae extends Ko {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function mae() {
  return bae;
}
const vae = /* @__PURE__ */ He.line({ class: "cm-activeLine" }), bae = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.docChanged || n.selectionSet) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = -1, t = [];
    for (let i of n.state.selection.ranges) {
      let s = n.lineBlockAt(i.head);
      s.from > e && (t.push(vae.range(s.from)), e = s.from);
    }
    return He.set(t);
  }
}, {
  decorations: (n) => n.decorations
}), bO = 2e3;
function yae(n, e, t) {
  let i = Math.min(e.line, t.line), s = Math.max(e.line, t.line), r = [];
  if (e.off > bO || t.off > bO || e.col < 0 || t.col < 0) {
    let o = Math.min(e.off, t.off), l = Math.max(e.off, t.off);
    for (let a = i; a <= s; a++) {
      let c = n.doc.line(a);
      c.length <= l && r.push(ue.range(c.from + o, c.to + l));
    }
  } else {
    let o = Math.min(e.col, t.col), l = Math.max(e.col, t.col);
    for (let a = i; a <= s; a++) {
      let c = n.doc.line(a), u = Uy(c.text, o, n.tabSize, !0);
      if (u < 0)
        r.push(ue.cursor(c.to));
      else {
        let h = Uy(c.text, l, n.tabSize);
        r.push(ue.range(c.from + u, c.from + h));
      }
    }
  }
  return r;
}
function Oae(n, e) {
  let t = n.coordsAtPos(n.viewport.from);
  return t ? Math.round(Math.abs((t.left - e) / n.defaultCharacterWidth)) : -1;
}
function w2(n, e) {
  let t = n.posAtCoords({ x: e.clientX, y: e.clientY }, !1), i = n.state.doc.lineAt(t), s = t - i.from, r = s > bO ? -1 : s == i.length ? Oae(n, e.clientX) : ch(i.text, n.state.tabSize, t - i.from);
  return { line: i.number, col: r, off: s };
}
function wae(n, e) {
  let t = w2(n, e), i = n.state.selection;
  return t ? {
    update(s) {
      if (s.docChanged) {
        let r = s.changes.mapPos(s.startState.doc.line(t.line).from), o = s.state.doc.lineAt(r);
        t = { line: o.number, col: t.col, off: Math.min(t.off, o.length) }, i = i.map(s.changes);
      }
    },
    get(s, r, o) {
      let l = w2(n, s);
      if (!l)
        return i;
      let a = yae(n.state, t, l);
      return a.length ? o ? ue.create(a.concat(i.ranges)) : ue.create(a) : i;
    }
  } : null;
}
function xae(n) {
  let e = (n == null ? void 0 : n.eventFilter) || ((t) => t.altKey && t.button == 0);
  return _e.mouseSelectionStyle.of((t, i) => e(i) ? wae(t, i) : null);
}
const Sae = {
  Alt: [18, (n) => !!n.altKey],
  Control: [17, (n) => !!n.ctrlKey],
  Shift: [16, (n) => !!n.shiftKey],
  Meta: [91, (n) => !!n.metaKey]
}, Cae = { style: "cursor: crosshair" };
function kae(n = {}) {
  let [e, t] = Sae[n.key || "Alt"], i = Bn.fromClass(class {
    constructor(s) {
      this.view = s, this.isDown = !1;
    }
    set(s) {
      this.isDown != s && (this.isDown = s, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(s) {
        this.set(s.keyCode == e || t(s));
      },
      keyup(s) {
        (s.keyCode == e || !t(s)) && this.set(!1);
      },
      mousemove(s) {
        this.set(t(s));
      }
    }
  });
  return [
    i,
    _e.contentAttributes.of((s) => {
      var r;
      return !((r = s.plugin(i)) === null || r === void 0) && r.isDown ? Cae : null;
    })
  ];
}
const xh = "-10000px";
class R3 {
  constructor(e, t, i, s) {
    this.facet = t, this.createTooltipView = i, this.removeTooltipView = s, this.input = e.state.facet(t), this.tooltips = this.input.filter((o) => o);
    let r = null;
    this.tooltipViews = this.tooltips.map((o) => r = i(o, r));
  }
  update(e, t) {
    var i;
    let s = e.state.facet(this.facet), r = s.filter((a) => a);
    if (s === this.input) {
      for (let a of this.tooltipViews)
        a.update && a.update(e);
      return !1;
    }
    let o = [], l = t ? [] : null;
    for (let a = 0; a < r.length; a++) {
      let c = r[a], u = -1;
      if (c) {
        for (let h = 0; h < this.tooltips.length; h++) {
          let d = this.tooltips[h];
          d && d.create == c.create && (u = h);
        }
        if (u < 0)
          o[a] = this.createTooltipView(c, a ? o[a - 1] : null), l && (l[a] = !!c.above);
        else {
          let h = o[a] = this.tooltipViews[u];
          l && (l[a] = t[u]), h.update && h.update(e);
        }
      }
    }
    for (let a of this.tooltipViews)
      o.indexOf(a) < 0 && (this.removeTooltipView(a), (i = a.destroy) === null || i === void 0 || i.call(a));
    return t && (l.forEach((a, c) => t[c] = a), t.length = l.length), this.input = s, this.tooltips = r, this.tooltipViews = o, !0;
  }
}
function Pae(n) {
  let { win: e } = n;
  return { top: 0, left: 0, bottom: e.innerHeight, right: e.innerWidth };
}
const Iv = /* @__PURE__ */ Me.define({
  combine: (n) => {
    var e, t, i;
    return {
      position: Ne.ios ? "absolute" : ((e = n.find((s) => s.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((t = n.find((s) => s.parent)) === null || t === void 0 ? void 0 : t.parent) || null,
      tooltipSpace: ((i = n.find((s) => s.tooltipSpace)) === null || i === void 0 ? void 0 : i.tooltipSpace) || Pae
    };
  }
}), x2 = /* @__PURE__ */ new WeakMap(), Iw = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.view = n, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = n.state.facet(Iv);
    this.position = e.position, this.parent = e.parent, this.classes = n.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new R3(n, Bw, (t, i) => this.createTooltip(t, i), (t) => {
      this.resizeObserver && this.resizeObserver.unobserve(t.dom), t.dom.remove();
    }), this.above = this.manager.tooltips.map((t) => !!t.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((t) => {
      Date.now() > this.lastTransaction - 50 && t.length > 0 && t[t.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), n.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let n of this.manager.tooltipViews)
        this.intersectionObserver.observe(n.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(n) {
    n.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(n, this.above);
    e && this.observeIntersection();
    let t = e || n.geometryChanged, i = n.state.facet(Iv);
    if (i.position != this.position && !this.madeAbsolute) {
      this.position = i.position;
      for (let s of this.manager.tooltipViews)
        s.dom.style.position = this.position;
      t = !0;
    }
    if (i.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = i.parent, this.createContainer();
      for (let s of this.manager.tooltipViews)
        this.container.appendChild(s.dom);
      t = !0;
    } else
      this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    t && this.maybeMeasure();
  }
  createTooltip(n, e) {
    let t = n.create(this.view), i = e ? e.dom : null;
    if (t.dom.classList.add("cm-tooltip"), n.arrow && !t.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let s = document.createElement("div");
      s.className = "cm-tooltip-arrow", t.dom.insertBefore(s, i);
    }
    return t.dom.style.position = this.position, t.dom.style.top = xh, t.dom.style.left = "0px", this.container.insertBefore(t.dom, i), t.mount && t.mount(this.view), this.resizeObserver && this.resizeObserver.observe(t.dom), t;
  }
  destroy() {
    var n, e, t;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let i of this.manager.tooltipViews)
      i.dom.remove(), (n = i.destroy) === null || n === void 0 || n.call(i);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (t = this.intersectionObserver) === null || t === void 0 || t.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let n = this.view.dom.getBoundingClientRect(), e = 1, t = 1, i = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: s } = this.manager.tooltipViews[0];
      if (Ne.gecko)
        i = s.offsetParent != this.container.ownerDocument.body;
      else if (s.style.top == xh && s.style.left == "0px") {
        let r = s.getBoundingClientRect();
        i = Math.abs(r.top + 1e4) > 1 || Math.abs(r.left) > 1;
      }
    }
    if (i || this.position == "absolute")
      if (this.parent) {
        let s = this.parent.getBoundingClientRect();
        s.width && s.height && (e = s.width / this.parent.offsetWidth, t = s.height / this.parent.offsetHeight);
      } else
        ({ scaleX: e, scaleY: t } = this.view.viewState);
    return {
      editor: n,
      parent: this.parent ? this.container.getBoundingClientRect() : n,
      pos: this.manager.tooltips.map((s, r) => {
        let o = this.manager.tooltipViews[r];
        return o.getCoords ? o.getCoords(s.pos) : this.view.coordsAtPos(s.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: s }) => s.getBoundingClientRect()),
      space: this.view.state.facet(Iv).tooltipSpace(this.view),
      scaleX: e,
      scaleY: t,
      makeAbsolute: i
    };
  }
  writeMeasure(n) {
    var e;
    if (n.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let l of this.manager.tooltipViews)
        l.dom.style.position = "absolute";
    }
    let { editor: t, space: i, scaleX: s, scaleY: r } = n, o = [];
    for (let l = 0; l < this.manager.tooltips.length; l++) {
      let a = this.manager.tooltips[l], c = this.manager.tooltipViews[l], { dom: u } = c, h = n.pos[l], d = n.size[l];
      if (!h || h.bottom <= Math.max(t.top, i.top) || h.top >= Math.min(t.bottom, i.bottom) || h.right < Math.max(t.left, i.left) - 0.1 || h.left > Math.min(t.right, i.right) + 0.1) {
        u.style.top = xh;
        continue;
      }
      let f = a.arrow ? c.dom.querySelector(".cm-tooltip-arrow") : null, p = f ? 7 : 0, g = d.right - d.left, m = (e = x2.get(c)) !== null && e !== void 0 ? e : d.bottom - d.top, v = c.offset || Aae, O = this.view.textDirection == nn.LTR, b = d.width > i.right - i.left ? O ? i.left : i.right - d.width : O ? Math.min(h.left - (f ? 14 : 0) + v.x, i.right - g) : Math.max(i.left, h.left - g + (f ? 14 : 0) - v.x), w = this.above[l];
      !a.strictSide && (w ? h.top - (d.bottom - d.top) - v.y < i.top : h.bottom + (d.bottom - d.top) + v.y > i.bottom) && w == i.bottom - h.bottom > h.top - i.top && (w = this.above[l] = !w);
      let x = (w ? h.top - i.top : i.bottom - h.bottom) - p;
      if (x < m && c.resize !== !1) {
        if (x < this.view.defaultLineHeight) {
          u.style.top = xh;
          continue;
        }
        x2.set(c, m), u.style.height = (m = x) / r + "px";
      } else
        u.style.height && (u.style.height = "");
      let S = w ? h.top - m - p - v.y : h.bottom + p + v.y, C = b + g;
      if (c.overlap !== !0)
        for (let k of o)
          k.left < C && k.right > b && k.top < S + m && k.bottom > S && (S = w ? k.top - m - 2 - p : k.bottom + p + 2);
      if (this.position == "absolute" ? (u.style.top = (S - n.parent.top) / r + "px", u.style.left = (b - n.parent.left) / s + "px") : (u.style.top = S / r + "px", u.style.left = b / s + "px"), f) {
        let k = h.left + (O ? v.x : -v.x) - (b + 14 - 7);
        f.style.left = k / s + "px";
      }
      c.overlap !== !0 && o.push({ left: b, top: S, right: C, bottom: S + m }), u.classList.toggle("cm-tooltip-above", w), u.classList.toggle("cm-tooltip-below", !w), c.positioned && c.positioned(n.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let n of this.manager.tooltipViews)
        n.dom.style.top = xh;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
}), Eae = /* @__PURE__ */ _e.baseTheme({
  ".cm-tooltip": {
    zIndex: 100,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: `${7 * 2}px`,
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), Aae = { x: 0, y: 0 }, Bw = /* @__PURE__ */ Me.define({
  enables: [Iw, Eae]
}), dm = /* @__PURE__ */ Me.define({
  combine: (n) => n.reduce((e, t) => e.concat(t), [])
});
class k0 {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new k0(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new R3(e, dm, (t, i) => this.createHostedView(t, i), (t) => t.dom.remove());
  }
  createHostedView(e, t) {
    let i = e.create(this.view);
    return i.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(i.dom, t ? t.dom.nextSibling : this.dom.firstChild), this.mounted && i.mount && i.mount(this.view), i;
  }
  mount(e) {
    for (let t of this.manager.tooltipViews)
      t.mount && t.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let t of this.manager.tooltipViews)
      t.positioned && t.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let t of this.manager.tooltipViews)
      (e = t.destroy) === null || e === void 0 || e.call(t);
  }
  passProp(e) {
    let t;
    for (let i of this.manager.tooltipViews) {
      let s = i[e];
      if (s !== void 0) {
        if (t === void 0)
          t = s;
        else if (t !== s)
          return;
      }
    }
    return t;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const $ae = /* @__PURE__ */ Bw.compute([dm], (n) => {
  let e = n.facet(dm);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((t) => t.pos)),
    end: Math.max(...e.map((t) => {
      var i;
      return (i = t.end) !== null && i !== void 0 ? i : t.pos;
    })),
    create: k0.create,
    above: e[0].above,
    arrow: e.some((t) => t.arrow)
  };
});
class Tae {
  constructor(e, t, i, s, r) {
    this.view = e, this.source = t, this.field = i, this.setHover = s, this.hoverTime = r, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: t } = this, i = e.docView.nearest(t.target);
    if (!i)
      return;
    let s, r = 1;
    if (i instanceof Sl)
      s = i.posAtStart;
    else {
      if (s = e.posAtCoords(t), s == null)
        return;
      let l = e.coordsAtPos(s);
      if (!l || t.y < l.top || t.y > l.bottom || t.x < l.left - e.defaultCharacterWidth || t.x > l.right + e.defaultCharacterWidth)
        return;
      let a = e.bidiSpans(e.state.doc.lineAt(s)).find((u) => u.from <= s && u.to >= s), c = a && a.dir == nn.RTL ? -1 : 1;
      r = t.x < l.left ? -c : c;
    }
    let o = this.source(e, s, r);
    if (o != null && o.then) {
      let l = this.pending = { pos: s };
      o.then((a) => {
        this.pending == l && (this.pending = null, a && !(Array.isArray(a) && !a.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(a) ? a : [a]) }));
      }, (a) => Zs(e.state, a, "hover tooltip"));
    } else
      o && !(Array.isArray(o) && !o.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(o) ? o : [o]) });
  }
  get tooltip() {
    let e = this.view.plugin(Iw), t = e ? e.manager.tooltips.findIndex((i) => i.create == k0.create) : -1;
    return t > -1 ? e.manager.tooltipViews[t] : null;
  }
  mousemove(e) {
    var t, i;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: s, tooltip: r } = this;
    if (s.length && r && !_ae(r.dom, e) || this.pending) {
      let { pos: o } = s[0] || this.pending, l = (i = (t = s[0]) === null || t === void 0 ? void 0 : t.end) !== null && i !== void 0 ? i : o;
      (o == l ? this.view.posAtCoords(this.lastMove) != o : !Mae(this.view, o, l, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: t } = this;
    if (t.length) {
      let { tooltip: i } = this;
      i && i.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(i.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let t = (i) => {
      e.removeEventListener("mouseleave", t), this.active.length && !this.view.dom.contains(i.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", t);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const Op = 4;
function _ae(n, e) {
  let t = n.getBoundingClientRect();
  return e.clientX >= t.left - Op && e.clientX <= t.right + Op && e.clientY >= t.top - Op && e.clientY <= t.bottom + Op;
}
function Mae(n, e, t, i, s, r) {
  let o = n.scrollDOM.getBoundingClientRect(), l = n.documentTop + n.documentPadding.top + n.contentHeight;
  if (o.left > i || o.right < i || o.top > s || Math.min(o.bottom, l) < s)
    return !1;
  let a = n.posAtCoords({ x: i, y: s }, !1);
  return a >= e && a <= t;
}
function Rae(n, e = {}) {
  let t = ct.define(), i = ui.define({
    create() {
      return [];
    },
    update(s, r) {
      if (s.length && (e.hideOnChange && (r.docChanged || r.selection) ? s = [] : e.hideOn && (s = s.filter((o) => !e.hideOn(r, o))), r.docChanged)) {
        let o = [];
        for (let l of s) {
          let a = r.changes.mapPos(l.pos, -1, wi.TrackDel);
          if (a != null) {
            let c = Object.assign(/* @__PURE__ */ Object.create(null), l);
            c.pos = a, c.end != null && (c.end = r.changes.mapPos(c.end)), o.push(c);
          }
        }
        s = o;
      }
      for (let o of r.effects)
        o.is(t) && (s = o.value), o.is(Nae) && (s = []);
      return s;
    },
    provide: (s) => dm.from(s)
  });
  return [
    i,
    Bn.define((s) => new Tae(
      s,
      n,
      i,
      t,
      e.hoverTime || 300
      /* Hover.Time */
    )),
    $ae
  ];
}
function N3(n, e) {
  let t = n.plugin(Iw);
  if (!t)
    return null;
  let i = t.manager.tooltips.indexOf(e);
  return i < 0 ? null : t.manager.tooltipViews[i];
}
const Nae = /* @__PURE__ */ ct.define(), S2 = /* @__PURE__ */ Me.define({
  combine(n) {
    let e, t;
    for (let i of n)
      e = e || i.topContainer, t = t || i.bottomContainer;
    return { topContainer: e, bottomContainer: t };
  }
});
function Ud(n, e) {
  let t = n.plugin(D3), i = t ? t.specs.indexOf(e) : -1;
  return i > -1 ? t.panels[i] : null;
}
const D3 = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.input = n.state.facet(Gd), this.specs = this.input.filter((t) => t), this.panels = this.specs.map((t) => t(n));
    let e = n.state.facet(S2);
    this.top = new wp(n, !0, e.topContainer), this.bottom = new wp(n, !1, e.bottomContainer), this.top.sync(this.panels.filter((t) => t.top)), this.bottom.sync(this.panels.filter((t) => !t.top));
    for (let t of this.panels)
      t.dom.classList.add("cm-panel"), t.mount && t.mount();
  }
  update(n) {
    let e = n.state.facet(S2);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new wp(n.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new wp(n.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let t = n.state.facet(Gd);
    if (t != this.input) {
      let i = t.filter((a) => a), s = [], r = [], o = [], l = [];
      for (let a of i) {
        let c = this.specs.indexOf(a), u;
        c < 0 ? (u = a(n.view), l.push(u)) : (u = this.panels[c], u.update && u.update(n)), s.push(u), (u.top ? r : o).push(u);
      }
      this.specs = i, this.panels = s, this.top.sync(r), this.bottom.sync(o);
      for (let a of l)
        a.dom.classList.add("cm-panel"), a.mount && a.mount();
    } else
      for (let i of this.panels)
        i.update && i.update(n);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (n) => _e.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return t && { top: t.top.scrollMargin(), bottom: t.bottom.scrollMargin() };
  })
});
class wp {
  constructor(e, t, i) {
    this.view = e, this.top = t, this.container = i, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let t of this.panels)
      t.destroy && e.indexOf(t) < 0 && t.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let t = this.container || this.view.dom;
      t.insertBefore(this.dom, this.top ? t.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let t of this.panels)
      if (t.dom.parentNode == this.dom) {
        for (; e != t.dom; )
          e = C2(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(t.dom, e);
    for (; e; )
      e = C2(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function C2(n) {
  let e = n.nextSibling;
  return n.remove(), e;
}
const Gd = /* @__PURE__ */ Me.define({
  enables: D3
});
class qo extends qa {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
qo.prototype.elementClass = "";
qo.prototype.toDOM = void 0;
qo.prototype.mapMode = wi.TrackBefore;
qo.prototype.startSide = qo.prototype.endSide = -1;
qo.prototype.point = !0;
const vg = /* @__PURE__ */ Me.define(), Dae = {
  class: "",
  renderEmptyElements: !1,
  elementStyle: "",
  markers: () => kt.empty,
  lineMarker: () => null,
  widgetMarker: () => null,
  lineMarkerChange: null,
  initialSpacer: null,
  updateSpacer: null,
  domEventHandlers: {}
}, ud = /* @__PURE__ */ Me.define();
function Lae(n) {
  return [L3(), ud.of(Object.assign(Object.assign({}, Dae), n))];
}
const yO = /* @__PURE__ */ Me.define({
  combine: (n) => n.some((e) => e)
});
function L3(n) {
  let e = [
    Iae
  ];
  return n && n.fixed === !1 && e.push(yO.of(!0)), e;
}
const Iae = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.view = n, this.prevViewport = n.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = n.state.facet(ud).map((e) => new P2(n, e));
    for (let e of this.gutters)
      this.dom.appendChild(e.dom);
    this.fixed = !n.state.facet(yO), this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), n.scrollDOM.insertBefore(this.dom, n.contentDOM);
  }
  update(n) {
    if (this.updateGutters(n)) {
      let e = this.prevViewport, t = n.view.viewport, i = Math.min(e.to, t.to) - Math.max(e.from, t.from);
      this.syncGutters(i < (t.to - t.from) * 0.8);
    }
    n.geometryChanged && (this.dom.style.minHeight = this.view.contentHeight + "px"), this.view.state.facet(yO) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : ""), this.prevViewport = n.view.viewport;
  }
  syncGutters(n) {
    let e = this.dom.nextSibling;
    n && this.dom.remove();
    let t = kt.iter(this.view.state.facet(vg), this.view.viewport.from), i = [], s = this.gutters.map((r) => new Bae(r, this.view.viewport, -this.view.documentPadding.top));
    for (let r of this.view.viewportLineBlocks)
      if (i.length && (i = []), Array.isArray(r.type)) {
        let o = !0;
        for (let l of r.type)
          if (l.type == qi.Text && o) {
            OO(t, i, l.from);
            for (let a of s)
              a.line(this.view, l, i);
            o = !1;
          } else if (l.widget)
            for (let a of s)
              a.widget(this.view, l);
      } else if (r.type == qi.Text) {
        OO(t, i, r.from);
        for (let o of s)
          o.line(this.view, r, i);
      } else if (r.widget)
        for (let o of s)
          o.widget(this.view, r);
    for (let r of s)
      r.finish();
    n && this.view.scrollDOM.insertBefore(this.dom, e);
  }
  updateGutters(n) {
    let e = n.startState.facet(ud), t = n.state.facet(ud), i = n.docChanged || n.heightChanged || n.viewportChanged || !kt.eq(n.startState.facet(vg), n.state.facet(vg), n.view.viewport.from, n.view.viewport.to);
    if (e == t)
      for (let s of this.gutters)
        s.update(n) && (i = !0);
    else {
      i = !0;
      let s = [];
      for (let r of t) {
        let o = e.indexOf(r);
        o < 0 ? s.push(new P2(this.view, r)) : (this.gutters[o].update(n), s.push(this.gutters[o]));
      }
      for (let r of this.gutters)
        r.dom.remove(), s.indexOf(r) < 0 && r.destroy();
      for (let r of s)
        this.dom.appendChild(r.dom);
      this.gutters = s;
    }
    return i;
  }
  destroy() {
    for (let n of this.gutters)
      n.destroy();
    this.dom.remove();
  }
}, {
  provide: (n) => _e.scrollMargins.of((e) => {
    let t = e.plugin(n);
    return !t || t.gutters.length == 0 || !t.fixed ? null : e.textDirection == nn.LTR ? { left: t.dom.offsetWidth * e.scaleX } : { right: t.dom.offsetWidth * e.scaleX };
  })
});
function k2(n) {
  return Array.isArray(n) ? n : [n];
}
function OO(n, e, t) {
  for (; n.value && n.from <= t; )
    n.from == t && e.push(n.value), n.next();
}
class Bae {
  constructor(e, t, i) {
    this.gutter = e, this.height = i, this.i = 0, this.cursor = kt.iter(e.markers, t.from);
  }
  addElement(e, t, i) {
    let { gutter: s } = this, r = (t.top - this.height) / e.scaleY, o = t.height / e.scaleY;
    if (this.i == s.elements.length) {
      let l = new I3(e, o, r, i);
      s.elements.push(l), s.dom.appendChild(l.dom);
    } else
      s.elements[this.i].update(e, o, r, i);
    this.height = t.bottom, this.i++;
  }
  line(e, t, i) {
    let s = [];
    OO(this.cursor, s, t.from), i.length && (s = s.concat(i));
    let r = this.gutter.config.lineMarker(e, t, s);
    r && s.unshift(r);
    let o = this.gutter;
    s.length == 0 && !o.config.renderEmptyElements || this.addElement(e, t, s);
  }
  widget(e, t) {
    let i = this.gutter.config.widgetMarker(e, t.widget, t);
    i && this.addElement(e, t, [i]);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let t = e.elements.pop();
      e.dom.removeChild(t.dom), t.destroy();
    }
  }
}
class P2 {
  constructor(e, t) {
    this.view = e, this.config = t, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let i in t.domEventHandlers)
      this.dom.addEventListener(i, (s) => {
        let r = s.target, o;
        if (r != this.dom && this.dom.contains(r)) {
          for (; r.parentNode != this.dom; )
            r = r.parentNode;
          let a = r.getBoundingClientRect();
          o = (a.top + a.bottom) / 2;
        } else
          o = s.clientY;
        let l = e.lineBlockAtHeight(o - e.documentTop);
        t.domEventHandlers[i](e, l, s) && s.preventDefault();
      });
    this.markers = k2(t.markers(e)), t.initialSpacer && (this.spacer = new I3(e, 0, 0, [t.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let t = this.markers;
    if (this.markers = k2(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let s = this.config.updateSpacer(this.spacer.markers[0], e);
      s != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [s]);
    }
    let i = e.view.viewport;
    return !kt.eq(this.markers, t, i.from, i.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class I3 {
  constructor(e, t, i, s) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, t, i, s);
  }
  update(e, t, i, s) {
    this.height != t && (this.height = t, this.dom.style.height = t + "px"), this.above != i && (this.dom.style.marginTop = (this.above = i) ? i + "px" : ""), Qae(this.markers, s) || this.setMarkers(e, s);
  }
  setMarkers(e, t) {
    let i = "cm-gutterElement", s = this.dom.firstChild;
    for (let r = 0, o = 0; ; ) {
      let l = o, a = r < t.length ? t[r++] : null, c = !1;
      if (a) {
        let u = a.elementClass;
        u && (i += " " + u);
        for (let h = o; h < this.markers.length; h++)
          if (this.markers[h].compare(a)) {
            l = h, c = !0;
            break;
          }
      } else
        l = this.markers.length;
      for (; o < l; ) {
        let u = this.markers[o++];
        if (u.toDOM) {
          u.destroy(s);
          let h = s.nextSibling;
          s.remove(), s = h;
        }
      }
      if (!a)
        break;
      a.toDOM && (c ? s = s.nextSibling : this.dom.insertBefore(a.toDOM(e), s)), c && o++;
    }
    this.dom.className = i, this.markers = t;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function Qae(n, e) {
  if (n.length != e.length)
    return !1;
  for (let t = 0; t < n.length; t++)
    if (!n[t].compare(e[t]))
      return !1;
  return !0;
}
const zae = /* @__PURE__ */ Me.define(), Ac = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, t) {
        let i = Object.assign({}, e);
        for (let s in t) {
          let r = i[s], o = t[s];
          i[s] = r ? (l, a, c) => r(l, a, c) || o(l, a, c) : o;
        }
        return i;
      }
    });
  }
});
class Bv extends qo {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function Qv(n, e) {
  return n.state.facet(Ac).formatNumber(e, n.state);
}
const jae = /* @__PURE__ */ ud.compute([Ac], (n) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(zae);
  },
  lineMarker(e, t, i) {
    return i.some((s) => s.toDOM) ? null : new Bv(Qv(e, e.state.doc.lineAt(t.from).number));
  },
  widgetMarker: () => null,
  lineMarkerChange: (e) => e.startState.facet(Ac) != e.state.facet(Ac),
  initialSpacer(e) {
    return new Bv(Qv(e, E2(e.state.doc.lines)));
  },
  updateSpacer(e, t) {
    let i = Qv(t.view, E2(t.view.state.doc.lines));
    return i == e.number ? e : new Bv(i);
  },
  domEventHandlers: n.facet(Ac).domEventHandlers
}));
function Vae(n = {}) {
  return [
    Ac.of(n),
    L3(),
    jae
  ];
}
function E2(n) {
  let e = 9;
  for (; e < n; )
    e = e * 10 + 9;
  return e;
}
const Fae = /* @__PURE__ */ new class extends qo {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), Zae = /* @__PURE__ */ vg.compute(["selection"], (n) => {
  let e = [], t = -1;
  for (let i of n.selection.ranges) {
    let s = n.doc.lineAt(i.head).from;
    s > t && (t = s, e.push(Fae.range(s)));
  }
  return kt.of(e);
});
function qae() {
  return Zae;
}
const B3 = 1024;
let Wae = 0;
class zv {
  constructor(e, t) {
    this.from = e, this.to = t;
  }
}
class mt {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = Wae++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = us.match(e)), (t) => {
      let i = e(t);
      return i === void 0 ? null : [this, i];
    };
  }
}
mt.closedBy = new mt({ deserialize: (n) => n.split(" ") });
mt.openedBy = new mt({ deserialize: (n) => n.split(" ") });
mt.group = new mt({ deserialize: (n) => n.split(" ") });
mt.isolate = new mt({ deserialize: (n) => {
  if (n && n != "rtl" && n != "ltr" && n != "auto")
    throw new RangeError("Invalid value for isolate: " + n);
  return n || "auto";
} });
mt.contextHash = new mt({ perNode: !0 });
mt.lookAhead = new mt({ perNode: !0 });
mt.mounted = new mt({ perNode: !0 });
class fm {
  constructor(e, t, i) {
    this.tree = e, this.overlay = t, this.parser = i;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[mt.mounted.id];
  }
}
const Hae = /* @__PURE__ */ Object.create(null);
class us {
  /**
  @internal
  */
  constructor(e, t, i, s = 0) {
    this.name = e, this.props = t, this.id = i, this.flags = s;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let t = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : Hae, i = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), s = new us(e.name || "", t, e.id, i);
    if (e.props) {
      for (let r of e.props)
        if (Array.isArray(r) || (r = r(s)), r) {
          if (r[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          t[r[0].id] = r[1];
        }
    }
    return s;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let t = this.prop(mt.group);
      return t ? t.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let t = /* @__PURE__ */ Object.create(null);
    for (let i in e)
      for (let s of i.split(" "))
        t[s] = e[i];
    return (i) => {
      for (let s = i.prop(mt.group), r = -1; r < (s ? s.length : 0); r++) {
        let o = t[r < 0 ? i.name : s[r]];
        if (o)
          return o;
      }
    };
  }
}
us.none = new us(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class Qw {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let t = 0; t < e.length; t++)
      if (e[t].id != t)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let t = [];
    for (let i of this.types) {
      let s = null;
      for (let r of e) {
        let o = r(i);
        o && (s || (s = Object.assign({}, i.props)), s[o[0].id] = o[1]);
      }
      t.push(s ? new us(i.name, s, i.id, i.flags) : i);
    }
    return new Qw(t);
  }
}
const xp = /* @__PURE__ */ new WeakMap(), A2 = /* @__PURE__ */ new WeakMap();
var Hn;
(function(n) {
  n[n.ExcludeBuffers = 1] = "ExcludeBuffers", n[n.IncludeAnonymous = 2] = "IncludeAnonymous", n[n.IgnoreMounts = 4] = "IgnoreMounts", n[n.IgnoreOverlays = 8] = "IgnoreOverlays";
})(Hn || (Hn = {}));
class Dn {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, t, i, s, r) {
    if (this.type = e, this.children = t, this.positions = i, this.length = s, this.props = null, r && r.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [o, l] of r)
        this.props[typeof o == "number" ? o : o.id] = l;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = fm.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let t = "";
    for (let i of this.children) {
      let s = i.toString();
      s && (t && (t += ","), t += s);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (t.length ? "(" + t + ")" : "") : t;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new xO(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, t = 0, i = 0) {
    let s = xp.get(this) || this.topNode, r = new xO(s);
    return r.moveTo(e, t), xp.set(this, r._tree), r;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new as(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, t = 0) {
    let i = Kd(xp.get(this) || this.topNode, e, t, !1);
    return xp.set(this, i), i;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, t = 0) {
    let i = Kd(A2.get(this) || this.topNode, e, t, !0);
    return A2.set(this, i), i;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, t = 0) {
    return Uae(this, e, t);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: t, leave: i, from: s = 0, to: r = this.length } = e, o = e.mode || 0, l = (o & Hn.IncludeAnonymous) > 0;
    for (let a = this.cursor(o | Hn.IncludeAnonymous); ; ) {
      let c = !1;
      if (a.from <= r && a.to >= s && (!l && a.type.isAnonymous || t(a) !== !1)) {
        if (a.firstChild())
          continue;
        c = !0;
      }
      for (; c && i && (l || !a.type.isAnonymous) && i(a), !a.nextSibling(); ) {
        if (!a.parent())
          return;
        c = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let t in this.props)
        e.push([+t, this.props[t]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : Vw(us.none, this.children, this.positions, 0, this.children.length, 0, this.length, (t, i, s) => new Dn(this.type, t, i, s, this.propValues), e.makeTree || ((t, i, s) => new Dn(us.none, t, i, s)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return Gae(e);
  }
}
Dn.empty = new Dn(us.none, [], [], 0);
class zw {
  constructor(e, t) {
    this.buffer = e, this.index = t;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new zw(this.buffer, this.index);
  }
}
class Vl {
  /**
  Create a tree buffer.
  */
  constructor(e, t, i) {
    this.buffer = e, this.length = t, this.set = i;
  }
  /**
  @internal
  */
  get type() {
    return us.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let t = 0; t < this.buffer.length; )
      e.push(this.childString(t)), t = this.buffer[t + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let t = this.buffer[e], i = this.buffer[e + 3], s = this.set.types[t], r = s.name;
    if (/\W/.test(r) && !s.isError && (r = JSON.stringify(r)), e += 4, i == e)
      return r;
    let o = [];
    for (; e < i; )
      o.push(this.childString(e)), e = this.buffer[e + 3];
    return r + "(" + o.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, t, i, s, r) {
    let { buffer: o } = this, l = -1;
    for (let a = e; a != t && !(Q3(r, s, o[a + 1], o[a + 2]) && (l = a, i > 0)); a = o[a + 3])
      ;
    return l;
  }
  /**
  @internal
  */
  slice(e, t, i) {
    let s = this.buffer, r = new Uint16Array(t - e), o = 0;
    for (let l = e, a = 0; l < t; ) {
      r[a++] = s[l++], r[a++] = s[l++] - i;
      let c = r[a++] = s[l++] - i;
      r[a++] = s[l++] - e, o = Math.max(o, c);
    }
    return new Vl(r, o, this.set);
  }
}
function Q3(n, e, t, i) {
  switch (n) {
    case -2:
      return t < e;
    case -1:
      return i >= e && t < e;
    case 0:
      return t < e && i > e;
    case 1:
      return t <= e && i > e;
    case 2:
      return i > e;
    case 4:
      return !0;
  }
}
function Kd(n, e, t, i) {
  for (var s; n.from == n.to || (t < 1 ? n.from >= e : n.from > e) || (t > -1 ? n.to <= e : n.to < e); ) {
    let o = !i && n instanceof as && n.index < 0 ? null : n.parent;
    if (!o)
      return n;
    n = o;
  }
  let r = i ? 0 : Hn.IgnoreOverlays;
  if (i)
    for (let o = n, l = o.parent; l; o = l, l = o.parent)
      o instanceof as && o.index < 0 && ((s = l.enter(e, t, r)) === null || s === void 0 ? void 0 : s.from) != o.from && (n = l);
  for (; ; ) {
    let o = n.enter(e, t, r);
    if (!o)
      return n;
    n = o;
  }
}
class z3 {
  cursor(e = 0) {
    return new xO(this, e);
  }
  getChild(e, t = null, i = null) {
    let s = $2(this, e, t, i);
    return s.length ? s[0] : null;
  }
  getChildren(e, t = null, i = null) {
    return $2(this, e, t, i);
  }
  resolve(e, t = 0) {
    return Kd(this, e, t, !1);
  }
  resolveInner(e, t = 0) {
    return Kd(this, e, t, !0);
  }
  matchContext(e) {
    return wO(this, e);
  }
  enterUnfinishedNodesBefore(e) {
    let t = this.childBefore(e), i = this;
    for (; t; ) {
      let s = t.lastChild;
      if (!s || s.to != t.to)
        break;
      s.type.isError && s.from == s.to ? (i = t, t = s.prevSibling) : t = s;
    }
    return i;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class as extends z3 {
  constructor(e, t, i, s) {
    super(), this._tree = e, this.from = t, this.index = i, this._parent = s;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, t, i, s, r = 0) {
    for (let o = this; ; ) {
      for (let { children: l, positions: a } = o._tree, c = t > 0 ? l.length : -1; e != c; e += t) {
        let u = l[e], h = a[e] + o.from;
        if (Q3(s, i, h, h + u.length)) {
          if (u instanceof Vl) {
            if (r & Hn.ExcludeBuffers)
              continue;
            let d = u.findChild(0, u.buffer.length, t, i - h, s);
            if (d > -1)
              return new Ur(new Xae(o, u, e, h), null, d);
          } else if (r & Hn.IncludeAnonymous || !u.type.isAnonymous || jw(u)) {
            let d;
            if (!(r & Hn.IgnoreMounts) && (d = fm.get(u)) && !d.overlay)
              return new as(d.tree, h, e, o);
            let f = new as(u, h, e, o);
            return r & Hn.IncludeAnonymous || !f.type.isAnonymous ? f : f.nextChild(t < 0 ? u.children.length - 1 : 0, t, i, s);
          }
        }
      }
      if (r & Hn.IncludeAnonymous || !o.type.isAnonymous || (o.index >= 0 ? e = o.index + t : e = t < 0 ? -1 : o._parent._tree.children.length, o = o._parent, !o))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, i = 0) {
    let s;
    if (!(i & Hn.IgnoreOverlays) && (s = fm.get(this._tree)) && s.overlay) {
      let r = e - this.from;
      for (let { from: o, to: l } of s.overlay)
        if ((t > 0 ? o <= r : o < r) && (t < 0 ? l >= r : l > r))
          return new as(s.tree, s.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, t, i);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function $2(n, e, t, i) {
  let s = n.cursor(), r = [];
  if (!s.firstChild())
    return r;
  if (t != null) {
    for (let o = !1; !o; )
      if (o = s.type.is(t), !s.nextSibling())
        return r;
  }
  for (; ; ) {
    if (i != null && s.type.is(i))
      return r;
    if (s.type.is(e) && r.push(s.node), !s.nextSibling())
      return i == null ? r : [];
  }
}
function wO(n, e, t = e.length - 1) {
  for (let i = n.parent; t >= 0; i = i.parent) {
    if (!i)
      return !1;
    if (!i.type.isAnonymous) {
      if (e[t] && e[t] != i.name)
        return !1;
      t--;
    }
  }
  return !0;
}
class Xae {
  constructor(e, t, i, s) {
    this.parent = e, this.buffer = t, this.index = i, this.start = s;
  }
}
class Ur extends z3 {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, t, i) {
    super(), this.context = e, this._parent = t, this.index = i, this.type = e.buffer.set.types[e.buffer.buffer[i]];
  }
  child(e, t, i) {
    let { buffer: s } = this.context, r = s.findChild(this.index + 4, s.buffer[this.index + 3], e, t - this.context.start, i);
    return r < 0 ? null : new Ur(this.context, this, r);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, t, i = 0) {
    if (i & Hn.ExcludeBuffers)
      return null;
    let { buffer: s } = this.context, r = s.findChild(this.index + 4, s.buffer[this.index + 3], t > 0 ? 1 : -1, e - this.context.start, t);
    return r < 0 ? null : new Ur(this.context, this, r);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, t = e.buffer[this.index + 3];
    return t < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new Ur(this.context, this._parent, t) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, t = this._parent ? this._parent.index + 4 : 0;
    return this.index == t ? this.externalSibling(-1) : new Ur(this.context, this._parent, e.findChild(
      t,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], t = [], { buffer: i } = this.context, s = this.index + 4, r = i.buffer[this.index + 3];
    if (r > s) {
      let o = i.buffer[this.index + 1];
      e.push(i.slice(s, r, o)), t.push(0);
    }
    return new Dn(this.type, e, t, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function j3(n) {
  if (!n.length)
    return null;
  let e = 0, t = n[0];
  for (let r = 1; r < n.length; r++) {
    let o = n[r];
    (o.from > t.from || o.to < t.to) && (t = o, e = r);
  }
  let i = t instanceof as && t.index < 0 ? null : t.parent, s = n.slice();
  return i ? s[e] = i : s.splice(e, 1), new Yae(s, t);
}
class Yae {
  constructor(e, t) {
    this.heads = e, this.node = t;
  }
  get next() {
    return j3(this.heads);
  }
}
function Uae(n, e, t) {
  let i = n.resolveInner(e, t), s = null;
  for (let r = i instanceof as ? i : i.context.parent; r; r = r.parent)
    if (r.index < 0) {
      let o = r.parent;
      (s || (s = [i])).push(o.resolve(e, t)), r = o;
    } else {
      let o = fm.get(r.tree);
      if (o && o.overlay && o.overlay[0].from <= e && o.overlay[o.overlay.length - 1].to >= e) {
        let l = new as(o.tree, o.overlay[0].from + r.from, -1, r);
        (s || (s = [i])).push(Kd(l, e, t, !1));
      }
    }
  return s ? j3(s) : i;
}
class xO {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, t = 0) {
    if (this.mode = t, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof as)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let i = e._parent; i; i = i._parent)
        this.stack.unshift(i.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, t) {
    this.index = e;
    let { start: i, buffer: s } = this.buffer;
    return this.type = t || s.set.types[s.buffer[e]], this.from = i + s.buffer[e + 1], this.to = i + s.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof as ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, t, i) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, t, i, this.mode));
    let { buffer: s } = this.buffer, r = s.findChild(this.index + 4, s.buffer[this.index + 3], e, t - this.buffer.start, i);
    return r < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(r));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, t, i = this.mode) {
    return this.buffer ? i & Hn.ExcludeBuffers ? !1 : this.enterChild(1, e, t) : this.yield(this._tree.enter(e, t, i));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & Hn.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & Hn.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: t } = this.buffer, i = this.stack.length - 1;
    if (e < 0) {
      let s = i < 0 ? 0 : this.stack[i] + 4;
      if (this.index != s)
        return this.yieldBuf(t.findChild(
          s,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let s = t.buffer[this.index + 3];
      if (s < (i < 0 ? t.buffer.length : t.buffer[this.stack[i] + 3]))
        return this.yieldBuf(s);
    }
    return i < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let t, i, { buffer: s } = this;
    if (s) {
      if (e > 0) {
        if (this.index < s.buffer.buffer.length)
          return !1;
      } else
        for (let r = 0; r < this.index; r++)
          if (s.buffer.buffer[r + 3] < this.index)
            return !1;
      ({ index: t, parent: i } = s);
    } else
      ({ index: t, _parent: i } = this._tree);
    for (; i; { index: t, _parent: i } = i)
      if (t > -1)
        for (let r = t + e, o = e < 0 ? -1 : i._tree.children.length; r != o; r += e) {
          let l = i._tree.children[r];
          if (this.mode & Hn.IncludeAnonymous || l instanceof Vl || !l.type.isAnonymous || jw(l))
            return !1;
        }
    return !0;
  }
  move(e, t) {
    if (t && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traveral. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, t = 0) {
    for (; (this.from == this.to || (t < 1 ? this.from >= e : this.from > e) || (t > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, t); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, t = null, i = 0;
    if (e && e.context == this.buffer)
      e:
        for (let s = this.index, r = this.stack.length; r >= 0; ) {
          for (let o = e; o; o = o._parent)
            if (o.index == s) {
              if (s == this.index)
                return o;
              t = o, i = r + 1;
              break e;
            }
          s = this.stack[--r];
        }
    for (let s = i; s < this.stack.length; s++)
      t = new Ur(this.buffer, t, this.stack[s]);
    return this.bufferNode = new Ur(this.buffer, t, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, t) {
    for (let i = 0; ; ) {
      let s = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          i++;
          continue;
        }
        this.type.isAnonymous || (s = !0);
      }
      for (; s && t && t(this), s = this.type.isAnonymous, !this.nextSibling(); ) {
        if (!i)
          return;
        this.parent(), i--, s = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return wO(this.node, e);
    let { buffer: t } = this.buffer, { types: i } = t.set;
    for (let s = e.length - 1, r = this.stack.length - 1; s >= 0; r--) {
      if (r < 0)
        return wO(this.node, e, s);
      let o = i[t.buffer[this.stack[r]]];
      if (!o.isAnonymous) {
        if (e[s] && e[s] != o.name)
          return !1;
        s--;
      }
    }
    return !0;
  }
}
function jw(n) {
  return n.children.some((e) => e instanceof Vl || !e.type.isAnonymous || jw(e));
}
function Gae(n) {
  var e;
  let { buffer: t, nodeSet: i, maxBufferLength: s = B3, reused: r = [], minRepeatType: o = i.types.length } = n, l = Array.isArray(t) ? new zw(t, t.length) : t, a = i.types, c = 0, u = 0;
  function h(x, S, C, k, E, M) {
    let { id: _, start: T, end: B, size: I } = l, P = u;
    for (; I < 0; )
      if (l.next(), I == -1) {
        let H = r[_];
        C.push(H), k.push(T - x);
        return;
      } else if (I == -3) {
        c = _;
        return;
      } else if (I == -4) {
        u = _;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${I}`);
    let A = a[_], N, q, j = T - x;
    if (B - T <= s && (q = m(l.pos - S, E))) {
      let H = new Uint16Array(q.size - q.skip), oe = l.pos - q.size, te = H.length;
      for (; l.pos > oe; )
        te = v(q.start, H, te);
      N = new Vl(H, B - q.start, i), j = q.start - x;
    } else {
      let H = l.pos - I;
      l.next();
      let oe = [], te = [], W = _ >= o ? _ : -1, U = 0, le = B;
      for (; l.pos > H; )
        W >= 0 && l.id == W && l.size >= 0 ? (l.end <= le - s && (p(oe, te, T, U, l.end, le, W, P), U = oe.length, le = l.end), l.next()) : M > 2500 ? d(T, H, oe, te) : h(T, H, oe, te, W, M + 1);
      if (W >= 0 && U > 0 && U < oe.length && p(oe, te, T, U, T, le, W, P), oe.reverse(), te.reverse(), W > -1 && U > 0) {
        let he = f(A);
        N = Vw(A, oe, te, 0, oe.length, 0, B - T, he, he);
      } else
        N = g(A, oe, te, B - T, P - B);
    }
    C.push(N), k.push(j);
  }
  function d(x, S, C, k) {
    let E = [], M = 0, _ = -1;
    for (; l.pos > S; ) {
      let { id: T, start: B, end: I, size: P } = l;
      if (P > 4)
        l.next();
      else {
        if (_ > -1 && B < _)
          break;
        _ < 0 && (_ = I - s), E.push(T, B, I), M++, l.next();
      }
    }
    if (M) {
      let T = new Uint16Array(M * 4), B = E[E.length - 2];
      for (let I = E.length - 3, P = 0; I >= 0; I -= 3)
        T[P++] = E[I], T[P++] = E[I + 1] - B, T[P++] = E[I + 2] - B, T[P++] = P;
      C.push(new Vl(T, E[2] - B, i)), k.push(B - x);
    }
  }
  function f(x) {
    return (S, C, k) => {
      let E = 0, M = S.length - 1, _, T;
      if (M >= 0 && (_ = S[M]) instanceof Dn) {
        if (!M && _.type == x && _.length == k)
          return _;
        (T = _.prop(mt.lookAhead)) && (E = C[M] + _.length + T);
      }
      return g(x, S, C, k, E);
    };
  }
  function p(x, S, C, k, E, M, _, T) {
    let B = [], I = [];
    for (; x.length > k; )
      B.push(x.pop()), I.push(S.pop() + C - E);
    x.push(g(i.types[_], B, I, M - E, T - M)), S.push(E - C);
  }
  function g(x, S, C, k, E = 0, M) {
    if (c) {
      let _ = [mt.contextHash, c];
      M = M ? [_].concat(M) : [_];
    }
    if (E > 25) {
      let _ = [mt.lookAhead, E];
      M = M ? [_].concat(M) : [_];
    }
    return new Dn(x, S, C, k, M);
  }
  function m(x, S) {
    let C = l.fork(), k = 0, E = 0, M = 0, _ = C.end - s, T = { size: 0, start: 0, skip: 0 };
    e:
      for (let B = C.pos - x; C.pos > B; ) {
        let I = C.size;
        if (C.id == S && I >= 0) {
          T.size = k, T.start = E, T.skip = M, M += 4, k += 4, C.next();
          continue;
        }
        let P = C.pos - I;
        if (I < 0 || P < B || C.start < _)
          break;
        let A = C.id >= o ? 4 : 0, N = C.start;
        for (C.next(); C.pos > P; ) {
          if (C.size < 0)
            if (C.size == -3)
              A += 4;
            else
              break e;
          else
            C.id >= o && (A += 4);
          C.next();
        }
        E = N, k += I, M += A;
      }
    return (S < 0 || k == x) && (T.size = k, T.start = E, T.skip = M), T.size > 4 ? T : void 0;
  }
  function v(x, S, C) {
    let { id: k, start: E, end: M, size: _ } = l;
    if (l.next(), _ >= 0 && k < o) {
      let T = C;
      if (_ > 4) {
        let B = l.pos - (_ - 4);
        for (; l.pos > B; )
          C = v(x, S, C);
      }
      S[--C] = T, S[--C] = M - x, S[--C] = E - x, S[--C] = k;
    } else
      _ == -3 ? c = k : _ == -4 && (u = k);
    return C;
  }
  let O = [], b = [];
  for (; l.pos > 0; )
    h(n.start || 0, n.bufferStart || 0, O, b, -1, 0);
  let w = (e = n.length) !== null && e !== void 0 ? e : O.length ? b[0] + O[0].length : 0;
  return new Dn(a[n.topID], O.reverse(), b.reverse(), w);
}
const T2 = /* @__PURE__ */ new WeakMap();
function bg(n, e) {
  if (!n.isAnonymous || e instanceof Vl || e.type != n)
    return 1;
  let t = T2.get(e);
  if (t == null) {
    t = 1;
    for (let i of e.children) {
      if (i.type != n || !(i instanceof Dn)) {
        t = 1;
        break;
      }
      t += bg(n, i);
    }
    T2.set(e, t);
  }
  return t;
}
function Vw(n, e, t, i, s, r, o, l, a) {
  let c = 0;
  for (let p = i; p < s; p++)
    c += bg(n, e[p]);
  let u = Math.ceil(
    c * 1.5 / 8
    /* Balance.BranchFactor */
  ), h = [], d = [];
  function f(p, g, m, v, O) {
    for (let b = m; b < v; ) {
      let w = b, x = g[b], S = bg(n, p[b]);
      for (b++; b < v; b++) {
        let C = bg(n, p[b]);
        if (S + C >= u)
          break;
        S += C;
      }
      if (b == w + 1) {
        if (S > u) {
          let C = p[w];
          f(C.children, C.positions, 0, C.children.length, g[w] + O);
          continue;
        }
        h.push(p[w]);
      } else {
        let C = g[b - 1] + p[b - 1].length - x;
        h.push(Vw(n, p, g, w, b, x, C, null, a));
      }
      d.push(x + O - r);
    }
  }
  return f(e, t, i, s, 0), (l || a)(h, d, o);
}
class Kae {
  constructor() {
    this.map = /* @__PURE__ */ new WeakMap();
  }
  setBuffer(e, t, i) {
    let s = this.map.get(e);
    s || this.map.set(e, s = /* @__PURE__ */ new Map()), s.set(t, i);
  }
  getBuffer(e, t) {
    let i = this.map.get(e);
    return i && i.get(t);
  }
  /**
  Set the value for this syntax node.
  */
  set(e, t) {
    e instanceof Ur ? this.setBuffer(e.context.buffer, e.index, t) : e instanceof as && this.map.set(e.tree, t);
  }
  /**
  Retrieve value for this syntax node, if it exists in the map.
  */
  get(e) {
    return e instanceof Ur ? this.getBuffer(e.context.buffer, e.index) : e instanceof as ? this.map.get(e.tree) : void 0;
  }
  /**
  Set the value for the node that a cursor currently points to.
  */
  cursorSet(e, t) {
    e.buffer ? this.setBuffer(e.buffer.buffer, e.index, t) : this.map.set(e.tree, t);
  }
  /**
  Retrieve the value for the node that a cursor currently points
  to.
  */
  cursorGet(e) {
    return e.buffer ? this.getBuffer(e.buffer.buffer, e.index) : this.map.get(e.tree);
  }
}
class Na {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, t, i, s, r = !1, o = !1) {
    this.from = e, this.to = t, this.tree = i, this.offset = s, this.open = (r ? 1 : 0) | (o ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, t = [], i = !1) {
    let s = [new Na(0, e.length, e, 0, !1, i)];
    for (let r of t)
      r.to > e.length && s.push(r);
    return s;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, t, i = 128) {
    if (!t.length)
      return e;
    let s = [], r = 1, o = e.length ? e[0] : null;
    for (let l = 0, a = 0, c = 0; ; l++) {
      let u = l < t.length ? t[l] : null, h = u ? u.fromA : 1e9;
      if (h - a >= i)
        for (; o && o.from < h; ) {
          let d = o;
          if (a >= d.from || h <= d.to || c) {
            let f = Math.max(d.from, a) - c, p = Math.min(d.to, h) - c;
            d = f >= p ? null : new Na(f, p, d.tree, d.offset + c, l > 0, !!u);
          }
          if (d && s.push(d), o.to > h)
            break;
          o = r < e.length ? e[r++] : null;
        }
      if (!u)
        break;
      a = u.toA, c = u.toA - u.toB;
    }
    return s;
  }
}
class V3 {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, t, i) {
    return typeof e == "string" && (e = new Jae(e)), i = i ? i.length ? i.map((s) => new zv(s.from, s.to)) : [new zv(0, 0)] : [new zv(0, e.length)], this.createParse(e, t || [], i);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, t, i) {
    let s = this.startParse(e, t, i);
    for (; ; ) {
      let r = s.advance();
      if (r)
        return r;
    }
  }
}
class Jae {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, t) {
    return this.string.slice(e, t);
  }
}
new mt({ perNode: !0 });
let ece = 0;
class Zr {
  /**
  @internal
  */
  constructor(e, t, i) {
    this.set = e, this.base = t, this.modified = i, this.id = ece++;
  }
  /**
  Define a new tag. If `parent` is given, the tag is treated as a
  sub-tag of that parent, and
  [highlighters](#highlight.tagHighlighter) that don't mention
  this tag will try to fall back to the parent tag (or grandparent
  tag, etc).
  */
  static define(e) {
    if (e != null && e.base)
      throw new Error("Can not derive from a modified tag");
    let t = new Zr([], null, []);
    if (t.set.push(t), e)
      for (let i of e.set)
        t.set.push(i);
    return t;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier() {
    let e = new pm();
    return (t) => t.modified.indexOf(e) > -1 ? t : pm.get(t.base || t, t.modified.concat(e).sort((i, s) => i.id - s.id));
  }
}
let tce = 0;
class pm {
  constructor() {
    this.instances = [], this.id = tce++;
  }
  static get(e, t) {
    if (!t.length)
      return e;
    let i = t[0].instances.find((l) => l.base == e && nce(t, l.modified));
    if (i)
      return i;
    let s = [], r = new Zr(s, e, t);
    for (let l of t)
      l.instances.push(r);
    let o = ice(t);
    for (let l of e.set)
      if (!l.modified.length)
        for (let a of o)
          s.push(pm.get(l, a));
    return r;
  }
}
function nce(n, e) {
  return n.length == e.length && n.every((t, i) => t == e[i]);
}
function ice(n) {
  let e = [[]];
  for (let t = 0; t < n.length; t++)
    for (let i = 0, s = e.length; i < s; i++)
      e.push(e[i].concat(n[t]));
  return e.sort((t, i) => i.length - t.length);
}
function P0(n) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let t in n) {
    let i = n[t];
    Array.isArray(i) || (i = [i]);
    for (let s of t.split(" "))
      if (s) {
        let r = [], o = 2, l = s;
        for (let h = 0; ; ) {
          if (l == "..." && h > 0 && h + 3 == s.length) {
            o = 1;
            break;
          }
          let d = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(l);
          if (!d)
            throw new RangeError("Invalid path: " + s);
          if (r.push(d[0] == "*" ? "" : d[0][0] == '"' ? JSON.parse(d[0]) : d[0]), h += d[0].length, h == s.length)
            break;
          let f = s[h++];
          if (h == s.length && f == "!") {
            o = 0;
            break;
          }
          if (f != "/")
            throw new RangeError("Invalid path: " + s);
          l = s.slice(h);
        }
        let a = r.length - 1, c = r[a];
        if (!c)
          throw new RangeError("Invalid path: " + s);
        let u = new gm(i, o, a > 0 ? r.slice(0, a) : null);
        e[c] = u.sort(e[c]);
      }
  }
  return F3.add(e);
}
const F3 = new mt();
class gm {
  constructor(e, t, i, s) {
    this.tags = e, this.mode = t, this.context = i, this.next = s;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
gm.empty = new gm([], 2, null);
function Z3(n, e) {
  let t = /* @__PURE__ */ Object.create(null);
  for (let r of n)
    if (!Array.isArray(r.tag))
      t[r.tag.id] = r.class;
    else
      for (let o of r.tag)
        t[o.id] = r.class;
  let { scope: i, all: s = null } = e || {};
  return {
    style: (r) => {
      let o = s;
      for (let l of r)
        for (let a of l.set) {
          let c = t[a.id];
          if (c) {
            o = o ? o + " " + c : c;
            break;
          }
        }
      return o;
    },
    scope: i
  };
}
function sce(n, e) {
  let t = null;
  for (let i of n) {
    let s = i.style(e);
    s && (t = t ? t + " " + s : s);
  }
  return t;
}
function rce(n, e, t, i = 0, s = n.length) {
  let r = new oce(i, Array.isArray(e) ? e : [e], t);
  r.highlightRange(n.cursor(), i, s, "", r.highlighters), r.flush(s);
}
class oce {
  constructor(e, t, i) {
    this.at = e, this.highlighters = t, this.span = i, this.class = "";
  }
  startSpan(e, t) {
    t != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = t);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, t, i, s, r) {
    let { type: o, from: l, to: a } = e;
    if (l >= i || a <= t)
      return;
    o.isTop && (r = this.highlighters.filter((f) => !f.scope || f.scope(o)));
    let c = s, u = lce(e) || gm.empty, h = sce(r, u.tags);
    if (h && (c && (c += " "), c += h, u.mode == 1 && (s += (s ? " " : "") + h)), this.startSpan(Math.max(t, l), c), u.opaque)
      return;
    let d = e.tree && e.tree.prop(mt.mounted);
    if (d && d.overlay) {
      let f = e.node.enter(d.overlay[0].from + l, 1), p = this.highlighters.filter((m) => !m.scope || m.scope(d.tree.type)), g = e.firstChild();
      for (let m = 0, v = l; ; m++) {
        let O = m < d.overlay.length ? d.overlay[m] : null, b = O ? O.from + l : a, w = Math.max(t, v), x = Math.min(i, b);
        if (w < x && g)
          for (; e.from < x && (this.highlightRange(e, w, x, s, r), this.startSpan(Math.min(x, e.to), c), !(e.to >= b || !e.nextSibling())); )
            ;
        if (!O || b > i)
          break;
        v = O.to + l, v > t && (this.highlightRange(f.cursor(), Math.max(t, O.from + l), Math.min(i, v), "", p), this.startSpan(Math.min(i, v), c));
      }
      g && e.parent();
    } else if (e.firstChild()) {
      d && (s = "");
      do
        if (!(e.to <= t)) {
          if (e.from >= i)
            break;
          this.highlightRange(e, t, i, s, r), this.startSpan(Math.min(i, e.to), c);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function lce(n) {
  let e = n.type.prop(F3);
  for (; e && e.context && !n.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const Se = Zr.define, Sp = Se(), ul = Se(), _2 = Se(ul), M2 = Se(ul), hl = Se(), Cp = Se(hl), jv = Se(hl), Br = Se(), ta = Se(Br), Lr = Se(), Ir = Se(), SO = Se(), Sh = Se(SO), kp = Se(), X = {
  /**
  A comment.
  */
  comment: Sp,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: Se(Sp),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: Se(Sp),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: Se(Sp),
  /**
  Any kind of identifier.
  */
  name: ul,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: Se(ul),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: _2,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: Se(_2),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: M2,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: Se(M2),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: Se(ul),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: Se(ul),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: Se(ul),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: Se(ul),
  /**
  A literal value.
  */
  literal: hl,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: Cp,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: Se(Cp),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: Se(Cp),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: Se(Cp),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: jv,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: Se(jv),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: Se(jv),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: Se(hl),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: Se(hl),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: Se(hl),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: Se(hl),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: Se(hl),
  /**
  A language keyword.
  */
  keyword: Lr,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: Se(Lr),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: Se(Lr),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: Se(Lr),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: Se(Lr),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: Se(Lr),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: Se(Lr),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: Se(Lr),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: Se(Lr),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: Se(Lr),
  /**
  An operator.
  */
  operator: Ir,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: Se(Ir),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: Se(Ir),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: Se(Ir),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: Se(Ir),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: Se(Ir),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: Se(Ir),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: Se(Ir),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: Se(Ir),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: Se(Ir),
  /**
  Program or markup punctuation.
  */
  punctuation: SO,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: Se(SO),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: Sh,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: Se(Sh),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: Se(Sh),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: Se(Sh),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: Se(Sh),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: Br,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: ta,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: Se(ta),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: Se(ta),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: Se(ta),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: Se(ta),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: Se(ta),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: Se(ta),
  /**
  A prose separator (such as a horizontal rule).
  */
  contentSeparator: Se(Br),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: Se(Br),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: Se(Br),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: Se(Br),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: Se(Br),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: Se(Br),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: Se(Br),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: Se(Br),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: Se(),
  /**
  Deleted text.
  */
  deleted: Se(),
  /**
  Changed text.
  */
  changed: Se(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: Se(),
  /**
  Metadata or meta-instruction.
  */
  meta: kp,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: Se(kp),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: Se(kp),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: Se(kp),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: Zr.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: Zr.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: Zr.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: Zr.defineModifier(),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: Zr.defineModifier(),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: Zr.defineModifier()
};
Z3([
  { tag: X.link, class: "tok-link" },
  { tag: X.heading, class: "tok-heading" },
  { tag: X.emphasis, class: "tok-emphasis" },
  { tag: X.strong, class: "tok-strong" },
  { tag: X.keyword, class: "tok-keyword" },
  { tag: X.atom, class: "tok-atom" },
  { tag: X.bool, class: "tok-bool" },
  { tag: X.url, class: "tok-url" },
  { tag: X.labelName, class: "tok-labelName" },
  { tag: X.inserted, class: "tok-inserted" },
  { tag: X.deleted, class: "tok-deleted" },
  { tag: X.literal, class: "tok-literal" },
  { tag: X.string, class: "tok-string" },
  { tag: X.number, class: "tok-number" },
  { tag: [X.regexp, X.escape, X.special(X.string)], class: "tok-string2" },
  { tag: X.variableName, class: "tok-variableName" },
  { tag: X.local(X.variableName), class: "tok-variableName tok-local" },
  { tag: X.definition(X.variableName), class: "tok-variableName tok-definition" },
  { tag: X.special(X.variableName), class: "tok-variableName2" },
  { tag: X.definition(X.propertyName), class: "tok-propertyName tok-definition" },
  { tag: X.typeName, class: "tok-typeName" },
  { tag: X.namespace, class: "tok-namespace" },
  { tag: X.className, class: "tok-className" },
  { tag: X.macroName, class: "tok-macroName" },
  { tag: X.propertyName, class: "tok-propertyName" },
  { tag: X.operator, class: "tok-operator" },
  { tag: X.comment, class: "tok-comment" },
  { tag: X.meta, class: "tok-meta" },
  { tag: X.invalid, class: "tok-invalid" },
  { tag: X.punctuation, class: "tok-punctuation" }
]);
var Vv;
const $c = /* @__PURE__ */ new mt();
function q3(n) {
  return Me.define({
    combine: n ? (e) => e.concat(n) : void 0
  });
}
const Fw = /* @__PURE__ */ new mt();
class mr {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, t, i = [], s = "") {
    this.data = e, this.name = s, Et.prototype.hasOwnProperty("tree") || Object.defineProperty(Et.prototype, "tree", { get() {
      return Qn(this);
    } }), this.parser = t, this.extension = [
      Fl.of(this),
      Et.languageData.of((r, o, l) => {
        let a = R2(r, o, l), c = a.type.prop($c);
        if (!c)
          return [];
        let u = r.facet(c), h = a.type.prop(Fw);
        if (h) {
          let d = a.resolve(o - a.from, l);
          for (let f of h)
            if (f.test(d, r)) {
              let p = r.facet(f.facet);
              return f.type == "replace" ? p : p.concat(u);
            }
        }
        return u;
      })
    ].concat(i);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, t, i = -1) {
    return R2(e, t, i).type.prop($c) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let t = e.facet(Fl);
    if ((t == null ? void 0 : t.data) == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!t || !t.allowsNesting)
      return [];
    let i = [], s = (r, o) => {
      if (r.prop($c) == this.data) {
        i.push({ from: o, to: o + r.length });
        return;
      }
      let l = r.prop(mt.mounted);
      if (l) {
        if (l.tree.prop($c) == this.data) {
          if (l.overlay)
            for (let a of l.overlay)
              i.push({ from: a.from + o, to: a.to + o });
          else
            i.push({ from: o, to: o + r.length });
          return;
        } else if (l.overlay) {
          let a = i.length;
          if (s(l.tree, l.overlay[0].from + o), i.length > a)
            return;
        }
      }
      for (let a = 0; a < r.children.length; a++) {
        let c = r.children[a];
        c instanceof Dn && s(c, r.positions[a] + o);
      }
    };
    return s(Qn(e), 0), i;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
mr.setState = /* @__PURE__ */ ct.define();
function R2(n, e, t) {
  let i = n.facet(Fl), s = Qn(n).topNode;
  if (!i || i.allowsNesting)
    for (let r = s; r; r = r.enter(e, t, Hn.ExcludeBuffers))
      r.type.isTop && (s = r);
  return s;
}
class Lu extends mr {
  constructor(e, t, i) {
    super(e, t, [], i), this.parser = t;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let t = q3(e.languageData);
    return new Lu(t, e.parser.configure({
      props: [$c.add((i) => i.isTop ? t : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, t) {
    return new Lu(this.data, this.parser.configure(e), t || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Qn(n) {
  let e = n.field(mr.state, !1);
  return e ? e.tree : Dn.empty;
}
class ace {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, t) {
    let i = this.cursorPos - this.string.length;
    return e < i || t >= this.cursorPos ? this.doc.sliceString(e, t) : this.string.slice(e - i, t - i);
  }
}
let Ch = null;
class mm {
  constructor(e, t, i = [], s, r, o, l, a) {
    this.parser = e, this.state = t, this.fragments = i, this.tree = s, this.treeLen = r, this.viewport = o, this.skipped = l, this.scheduleOn = a, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new mm(e, t, [], Dn.empty, 0, i, [], null);
  }
  startParse() {
    return this.parser.startParse(new ace(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, t) {
    return t != null && t >= this.state.doc.length && (t = void 0), this.tree != Dn.empty && this.isDone(t ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var i;
      if (typeof e == "number") {
        let s = Date.now() + e;
        e = () => Date.now() > s;
      }
      for (this.parse || (this.parse = this.startParse()), t != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > t) && t < this.state.doc.length && this.parse.stopAt(t); ; ) {
        let s = this.parse.advance();
        if (s)
          if (this.fragments = this.withoutTempSkipped(Na.addTree(s, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (i = this.parse.stoppedAt) !== null && i !== void 0 ? i : this.state.doc.length, this.tree = s, this.parse = null, this.treeLen < (t ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, t;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(t = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = t, this.fragments = this.withoutTempSkipped(Na.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let t = Ch;
    Ch = this;
    try {
      return e();
    } finally {
      Ch = t;
    }
  }
  withoutTempSkipped(e) {
    for (let t; t = this.tempSkipped.pop(); )
      e = N2(e, t.from, t.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, t) {
    let { fragments: i, tree: s, treeLen: r, viewport: o, skipped: l } = this;
    if (this.takeTree(), !e.empty) {
      let a = [];
      if (e.iterChangedRanges((c, u, h, d) => a.push({ fromA: c, toA: u, fromB: h, toB: d })), i = Na.applyChanges(i, a), s = Dn.empty, r = 0, o = { from: e.mapPos(o.from, -1), to: e.mapPos(o.to, 1) }, this.skipped.length) {
        l = [];
        for (let c of this.skipped) {
          let u = e.mapPos(c.from, 1), h = e.mapPos(c.to, -1);
          u < h && l.push({ from: u, to: h });
        }
      }
    }
    return new mm(this.parser, t, i, s, r, o, l, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let t = this.skipped.length;
    for (let i = 0; i < this.skipped.length; i++) {
      let { from: s, to: r } = this.skipped[i];
      s < e.to && r > e.from && (this.fragments = N2(this.fragments, s, r), this.skipped.splice(i--, 1));
    }
    return this.skipped.length >= t ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, t) {
    this.skipped.push({ from: e, to: t });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends V3 {
      createParse(t, i, s) {
        let r = s[0].from, o = s[s.length - 1].to;
        return {
          parsedPos: r,
          advance() {
            let a = Ch;
            if (a) {
              for (let c of s)
                a.tempSkipped.push(c);
              e && (a.scheduleOn = a.scheduleOn ? Promise.all([a.scheduleOn, e]) : e);
            }
            return this.parsedPos = o, new Dn(us.none, [], [], o - r);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let t = this.fragments;
    return this.treeLen >= e && t.length && t[0].from == 0 && t[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return Ch;
  }
}
function N2(n, e, t) {
  return Na.applyChanges(n, [{ fromA: e, toA: t, fromB: e, toB: t }]);
}
class Iu {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let t = this.context.changes(e.changes, e.state), i = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), t.viewport.to);
    return t.work(20, i) || t.takeTree(), new Iu(t);
  }
  static init(e) {
    let t = Math.min(3e3, e.doc.length), i = mm.create(e.facet(Fl).parser, e, { from: 0, to: t });
    return i.work(20, t) || i.takeTree(), new Iu(i);
  }
}
mr.state = /* @__PURE__ */ ui.define({
  create: Iu.init,
  update(n, e) {
    for (let t of e.effects)
      if (t.is(mr.setState))
        return t.value;
    return e.startState.facet(Fl) != e.state.facet(Fl) ? Iu.init(e.state) : n.apply(e);
  }
});
let W3 = (n) => {
  let e = setTimeout(
    () => n(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (W3 = (n) => {
  let e = -1, t = setTimeout(
    () => {
      e = requestIdleCallback(n, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(t) : cancelIdleCallback(e);
});
const Fv = typeof navigator < "u" && (!((Vv = navigator.scheduling) === null || Vv === void 0) && Vv.isInputPending) ? () => navigator.scheduling.isInputPending() : null, cce = /* @__PURE__ */ Bn.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let t = this.view.state.field(mr.state).context;
    (t.updateViewport(e.view.viewport) || this.view.viewport.to > t.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(t);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, t = e.field(mr.state);
    (t.tree != t.context.tree || !t.context.isDone(e.doc.length)) && (this.working = W3(this.work));
  }
  work(e) {
    this.working = null;
    let t = Date.now();
    if (this.chunkEnd < t && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = t + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: i, viewport: { to: s } } = this.view, r = i.field(mr.state);
    if (r.tree == r.context.tree && r.context.isDone(
      s + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let o = Date.now() + Math.min(this.chunkBudget, 100, e && !Fv ? Math.max(25, e.timeRemaining() - 5) : 1e9), l = r.context.treeLen < s && i.doc.length > s + 1e3, a = r.context.work(() => Fv && Fv() || Date.now() > o, s + (l ? 0 : 1e5));
    this.chunkBudget -= Date.now() - t, (a || this.chunkBudget <= 0) && (r.context.takeTree(), this.view.dispatch({ effects: mr.setState.of(new Iu(r.context)) })), this.chunkBudget > 0 && !(a && !l) && this.scheduleWork(), this.checkAsyncSchedule(r.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((t) => Zs(this.view.state, t)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), Fl = /* @__PURE__ */ Me.define({
  combine(n) {
    return n.length ? n[0] : null;
  },
  enables: (n) => [
    mr.state,
    cce,
    _e.contentAttributes.compute([n], (e) => {
      let t = e.facet(n);
      return t && t.name ? { "data-language": t.name } : {};
    })
  ]
});
class Zw {
  /**
  Create a language support object.
  */
  constructor(e, t = []) {
    this.language = e, this.support = t, this.extension = [e, t];
  }
}
const uce = /* @__PURE__ */ Me.define(), E0 = /* @__PURE__ */ Me.define({
  combine: (n) => {
    if (!n.length)
      return "  ";
    let e = n[0];
    if (!e || /\S/.test(e) || Array.from(e).some((t) => t != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(n[0]));
    return e;
  }
});
function vm(n) {
  let e = n.facet(E0);
  return e.charCodeAt(0) == 9 ? n.tabSize * e.length : e.length;
}
function Jd(n, e) {
  let t = "", i = n.tabSize, s = n.facet(E0)[0];
  if (s == "	") {
    for (; e >= i; )
      t += "	", e -= i;
    s = " ";
  }
  for (let r = 0; r < e; r++)
    t += s;
  return t;
}
function qw(n, e) {
  n instanceof Et && (n = new A0(n));
  for (let i of n.state.facet(uce)) {
    let s = i(n, e);
    if (s !== void 0)
      return s;
  }
  let t = Qn(n.state);
  return t.length >= e ? hce(n, t, e) : null;
}
class A0 {
  /**
  Create an indent context.
  */
  constructor(e, t = {}) {
    this.state = e, this.options = t, this.unit = vm(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, t = 1) {
    let i = this.state.doc.lineAt(e), { simulateBreak: s, simulateDoubleBreak: r } = this.options;
    return s != null && s >= i.from && s <= i.to ? r && s == e ? { text: "", from: e } : (t < 0 ? s < e : s <= e) ? { text: i.text.slice(s - i.from), from: s } : { text: i.text.slice(0, s - i.from), from: i.from } : i;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, t = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: i, from: s } = this.lineAt(e, t);
    return i.slice(e - s, Math.min(i.length, e + 100 - s));
  }
  /**
  Find the column for the given position.
  */
  column(e, t = 1) {
    let { text: i, from: s } = this.lineAt(e, t), r = this.countColumn(i, e - s), o = this.options.overrideIndentation ? this.options.overrideIndentation(s) : -1;
    return o > -1 && (r += o - this.countColumn(i, i.search(/\S|$/))), r;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, t = e.length) {
    return ch(e, this.state.tabSize, t);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, t = 1) {
    let { text: i, from: s } = this.lineAt(e, t), r = this.options.overrideIndentation;
    if (r) {
      let o = r(s);
      if (o > -1)
        return o;
    }
    return this.countColumn(i, i.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const $0 = /* @__PURE__ */ new mt();
function hce(n, e, t) {
  let i = e.resolveStack(t), s = i.node.enterUnfinishedNodesBefore(t);
  if (s != i.node) {
    let r = [];
    for (let o = s; o != i.node; o = o.parent)
      r.push(o);
    for (let o = r.length - 1; o >= 0; o--)
      i = { node: r[o], next: i };
  }
  return H3(i, n, t);
}
function H3(n, e, t) {
  for (let i = n; i; i = i.next) {
    let s = fce(i.node);
    if (s)
      return s(Ww.create(e, t, i));
  }
  return 0;
}
function dce(n) {
  return n.pos == n.options.simulateBreak && n.options.simulateDoubleBreak;
}
function fce(n) {
  let e = n.type.prop($0);
  if (e)
    return e;
  let t = n.firstChild, i;
  if (t && (i = t.type.prop(mt.closedBy))) {
    let s = n.lastChild, r = s && i.indexOf(s.name) > -1;
    return (o) => X3(o, !0, 1, void 0, r && !dce(o) ? s.from : void 0);
  }
  return n.parent == null ? pce : null;
}
function pce() {
  return 0;
}
class Ww extends A0 {
  constructor(e, t, i) {
    super(e.state, e.options), this.base = e, this.pos = t, this.context = i;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, t, i) {
    return new Ww(e, t, i);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let t = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let i = e.resolve(t.from);
      for (; i.parent && i.parent.from == i.from; )
        i = i.parent;
      if (gce(i, e))
        break;
      t = this.state.doc.lineAt(i.from);
    }
    return this.lineIndent(t.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return H3(this.context.next, this.base, this.pos);
  }
}
function gce(n, e) {
  for (let t = e; t; t = t.parent)
    if (n == t)
      return !0;
  return !1;
}
function mce(n) {
  let e = n.node, t = e.childAfter(e.from), i = e.lastChild;
  if (!t)
    return null;
  let s = n.options.simulateBreak, r = n.state.doc.lineAt(t.from), o = s == null || s <= r.from ? r.to : Math.min(r.to, s);
  for (let l = t.to; ; ) {
    let a = e.childAfter(l);
    if (!a || a == i)
      return null;
    if (!a.type.isSkipped)
      return a.from < o ? t : null;
    l = a.to;
  }
}
function vce({ closing: n, align: e = !0, units: t = 1 }) {
  return (i) => X3(i, e, t, n);
}
function X3(n, e, t, i, s) {
  let r = n.textAfter, o = r.match(/^\s*/)[0].length, l = i && r.slice(o, o + i.length) == i || s == n.pos + o, a = e ? mce(n) : null;
  return a ? l ? n.column(a.from) : n.column(a.to) : n.baseIndent + (l ? 0 : n.unit * t);
}
const bce = (n) => n.baseIndent;
function Fc({ except: n, units: e = 1 } = {}) {
  return (t) => {
    let i = n && n.test(t.textAfter);
    return t.baseIndent + (i ? 0 : e * t.unit);
  };
}
const yce = 200;
function Oce() {
  return Et.transactionFilter.of((n) => {
    if (!n.docChanged || !n.isUserEvent("input.type") && !n.isUserEvent("input.complete"))
      return n;
    let e = n.startState.languageDataAt("indentOnInput", n.startState.selection.main.head);
    if (!e.length)
      return n;
    let t = n.newDoc, { head: i } = n.newSelection.main, s = t.lineAt(i);
    if (i > s.from + yce)
      return n;
    let r = t.sliceString(s.from, i);
    if (!e.some((c) => c.test(r)))
      return n;
    let { state: o } = n, l = -1, a = [];
    for (let { head: c } of o.selection.ranges) {
      let u = o.doc.lineAt(c);
      if (u.from == l)
        continue;
      l = u.from;
      let h = qw(o, u.from);
      if (h == null)
        continue;
      let d = /^\s*/.exec(u.text)[0], f = Jd(o, h);
      d != f && a.push({ from: u.from, to: u.from + d.length, insert: f });
    }
    return a.length ? [n, { changes: a, sequential: !0 }] : n;
  });
}
const wce = /* @__PURE__ */ Me.define(), T0 = /* @__PURE__ */ new mt();
function Y3(n) {
  let e = n.firstChild, t = n.lastChild;
  return e && e.to < t.from ? { from: e.to, to: t.type.isError ? n.to : t.from } : null;
}
function xce(n, e, t) {
  let i = Qn(n);
  if (i.length < t)
    return null;
  let s = i.resolveStack(t, 1), r = null;
  for (let o = s; o; o = o.next) {
    let l = o.node;
    if (l.to <= t || l.from > t)
      continue;
    if (r && l.from < e)
      break;
    let a = l.type.prop(T0);
    if (a && (l.to < i.length - 50 || i.length == n.doc.length || !Sce(l))) {
      let c = a(l, n);
      c && c.from <= t && c.from >= e && c.to > t && (r = c);
    }
  }
  return r;
}
function Sce(n) {
  let e = n.lastChild;
  return e && e.to == n.to && e.type.isError;
}
function bm(n, e, t) {
  for (let i of n.facet(wce)) {
    let s = i(n, e, t);
    if (s)
      return s;
  }
  return xce(n, e, t);
}
function U3(n, e) {
  let t = e.mapPos(n.from, 1), i = e.mapPos(n.to, -1);
  return t >= i ? void 0 : { from: t, to: i };
}
const _0 = /* @__PURE__ */ ct.define({ map: U3 }), _f = /* @__PURE__ */ ct.define({ map: U3 });
function G3(n) {
  let e = [];
  for (let { head: t } of n.state.selection.ranges)
    e.some((i) => i.from <= t && i.to >= t) || e.push(n.lineBlockAt(t));
  return e;
}
const Xa = /* @__PURE__ */ ui.define({
  create() {
    return He.none;
  },
  update(n, e) {
    n = n.map(e.changes);
    for (let t of e.effects)
      if (t.is(_0) && !Cce(n, t.value.from, t.value.to)) {
        let { preparePlaceholder: i } = e.state.facet(Hw), s = i ? He.replace({ widget: new _ce(i(e.state, t.value)) }) : D2;
        n = n.update({ add: [s.range(t.value.from, t.value.to)] });
      } else
        t.is(_f) && (n = n.update({
          filter: (i, s) => t.value.from != i || t.value.to != s,
          filterFrom: t.value.from,
          filterTo: t.value.to
        }));
    if (e.selection) {
      let t = !1, { head: i } = e.selection.main;
      n.between(i, i, (s, r) => {
        s < i && r > i && (t = !0);
      }), t && (n = n.update({
        filterFrom: i,
        filterTo: i,
        filter: (s, r) => r <= i || s >= i
      }));
    }
    return n;
  },
  provide: (n) => _e.decorations.from(n),
  toJSON(n, e) {
    let t = [];
    return n.between(0, e.doc.length, (i, s) => {
      t.push(i, s);
    }), t;
  },
  fromJSON(n) {
    if (!Array.isArray(n) || n.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let t = 0; t < n.length; ) {
      let i = n[t++], s = n[t++];
      if (typeof i != "number" || typeof s != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(D2.range(i, s));
    }
    return He.set(e, !0);
  }
});
function ym(n, e, t) {
  var i;
  let s = null;
  return (i = n.field(Xa, !1)) === null || i === void 0 || i.between(e, t, (r, o) => {
    (!s || s.from > r) && (s = { from: r, to: o });
  }), s;
}
function Cce(n, e, t) {
  let i = !1;
  return n.between(e, e, (s, r) => {
    s == e && r == t && (i = !0);
  }), i;
}
function K3(n, e) {
  return n.field(Xa, !1) ? e : e.concat(ct.appendConfig.of(eN()));
}
const kce = (n) => {
  for (let e of G3(n)) {
    let t = bm(n.state, e.from, e.to);
    if (t)
      return n.dispatch({ effects: K3(n.state, [_0.of(t), J3(n, t)]) }), !0;
  }
  return !1;
}, Pce = (n) => {
  if (!n.state.field(Xa, !1))
    return !1;
  let e = [];
  for (let t of G3(n)) {
    let i = ym(n.state, t.from, t.to);
    i && e.push(_f.of(i), J3(n, i, !1));
  }
  return e.length && n.dispatch({ effects: e }), e.length > 0;
};
function J3(n, e, t = !0) {
  let i = n.state.doc.lineAt(e.from).number, s = n.state.doc.lineAt(e.to).number;
  return _e.announce.of(`${n.state.phrase(t ? "Folded lines" : "Unfolded lines")} ${i} ${n.state.phrase("to")} ${s}.`);
}
const Ece = (n) => {
  let { state: e } = n, t = [];
  for (let i = 0; i < e.doc.length; ) {
    let s = n.lineBlockAt(i), r = bm(e, s.from, s.to);
    r && t.push(_0.of(r)), i = (r ? n.lineBlockAt(r.to) : s).to + 1;
  }
  return t.length && n.dispatch({ effects: K3(n.state, t) }), !!t.length;
}, Ace = (n) => {
  let e = n.state.field(Xa, !1);
  if (!e || !e.size)
    return !1;
  let t = [];
  return e.between(0, n.state.doc.length, (i, s) => {
    t.push(_f.of({ from: i, to: s }));
  }), n.dispatch({ effects: t }), !0;
}, $ce = [
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: kce },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: Pce },
  { key: "Ctrl-Alt-[", run: Ece },
  { key: "Ctrl-Alt-]", run: Ace }
], Tce = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, Hw = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, Tce);
  }
});
function eN(n) {
  let e = [Xa, Nce];
  return n && e.push(Hw.of(n)), e;
}
function tN(n, e) {
  let { state: t } = n, i = t.facet(Hw), s = (o) => {
    let l = n.lineBlockAt(n.posAtDOM(o.target)), a = ym(n.state, l.from, l.to);
    a && n.dispatch({ effects: _f.of(a) }), o.preventDefault();
  };
  if (i.placeholderDOM)
    return i.placeholderDOM(n, s, e);
  let r = document.createElement("span");
  return r.textContent = i.placeholderText, r.setAttribute("aria-label", t.phrase("folded code")), r.title = t.phrase("unfold"), r.className = "cm-foldPlaceholder", r.onclick = s, r;
}
const D2 = /* @__PURE__ */ He.replace({ widget: /* @__PURE__ */ new class extends Ko {
  toDOM(n) {
    return tN(n, null);
  }
}() });
class _ce extends Ko {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return tN(e, this.value);
  }
}
const Mce = {
  openText: "⌄",
  closedText: "›",
  markerDOM: null,
  domEventHandlers: {},
  foldingChanged: () => !1
};
class Zv extends qo {
  constructor(e, t) {
    super(), this.config = e, this.open = t;
  }
  eq(e) {
    return this.config == e.config && this.open == e.open;
  }
  toDOM(e) {
    if (this.config.markerDOM)
      return this.config.markerDOM(this.open);
    let t = document.createElement("span");
    return t.textContent = this.open ? this.config.openText : this.config.closedText, t.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"), t;
  }
}
function Rce(n = {}) {
  let e = Object.assign(Object.assign({}, Mce), n), t = new Zv(e, !0), i = new Zv(e, !1), s = Bn.fromClass(class {
    constructor(o) {
      this.from = o.viewport.from, this.markers = this.buildMarkers(o);
    }
    update(o) {
      (o.docChanged || o.viewportChanged || o.startState.facet(Fl) != o.state.facet(Fl) || o.startState.field(Xa, !1) != o.state.field(Xa, !1) || Qn(o.startState) != Qn(o.state) || e.foldingChanged(o)) && (this.markers = this.buildMarkers(o.view));
    }
    buildMarkers(o) {
      let l = new Bl();
      for (let a of o.viewportLineBlocks) {
        let c = ym(o.state, a.from, a.to) ? i : bm(o.state, a.from, a.to) ? t : null;
        c && l.add(a.from, a.from, c);
      }
      return l.finish();
    }
  }), { domEventHandlers: r } = e;
  return [
    s,
    Lae({
      class: "cm-foldGutter",
      markers(o) {
        var l;
        return ((l = o.plugin(s)) === null || l === void 0 ? void 0 : l.markers) || kt.empty;
      },
      initialSpacer() {
        return new Zv(e, !1);
      },
      domEventHandlers: Object.assign(Object.assign({}, r), { click: (o, l, a) => {
        if (r.click && r.click(o, l, a))
          return !0;
        let c = ym(o.state, l.from, l.to);
        if (c)
          return o.dispatch({ effects: _f.of(c) }), !0;
        let u = bm(o.state, l.from, l.to);
        return u ? (o.dispatch({ effects: _0.of(u) }), !0) : !1;
      } })
    }),
    eN()
  ];
}
const Nce = /* @__PURE__ */ _e.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class M0 {
  constructor(e, t) {
    this.specs = e;
    let i;
    function s(l) {
      let a = Ql.newName();
      return (i || (i = /* @__PURE__ */ Object.create(null)))["." + a] = l, a;
    }
    const r = typeof t.all == "string" ? t.all : t.all ? s(t.all) : void 0, o = t.scope;
    this.scope = o instanceof mr ? (l) => l.prop($c) == o.data : o ? (l) => l == o : void 0, this.style = Z3(e.map((l) => ({
      tag: l.tag,
      class: l.class || s(Object.assign({}, l, { tag: null }))
    })), {
      all: r
    }).style, this.module = i ? new Ql(i) : null, this.themeType = t.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, t) {
    return new M0(e, t || {});
  }
}
const CO = /* @__PURE__ */ Me.define(), nN = /* @__PURE__ */ Me.define({
  combine(n) {
    return n.length ? [n[0]] : null;
  }
});
function qv(n) {
  let e = n.facet(CO);
  return e.length ? e : n.facet(nN);
}
function Dce(n, e) {
  let t = [Ice], i;
  return n instanceof M0 && (n.module && t.push(_e.styleModule.of(n.module)), i = n.themeType), e != null && e.fallback ? t.push(nN.of(n)) : i ? t.push(CO.computeN([_e.darkTheme], (s) => s.facet(_e.darkTheme) == (i == "dark") ? [n] : [])) : t.push(CO.of(n)), t;
}
class Lce {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Qn(e.state), this.decorations = this.buildDeco(e, qv(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let t = Qn(e.state), i = qv(e.state), s = i != qv(e.startState), { viewport: r } = e.view, o = e.changes.mapPos(this.decoratedTo, 1);
    t.length < r.to && !s && t.type == this.tree.type && o >= r.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = o) : (t != this.tree || e.viewportChanged || s) && (this.tree = t, this.decorations = this.buildDeco(e.view, i), this.decoratedTo = r.to);
  }
  buildDeco(e, t) {
    if (!t || !this.tree.length)
      return He.none;
    let i = new Bl();
    for (let { from: s, to: r } of e.visibleRanges)
      rce(this.tree, t, (o, l, a) => {
        i.add(o, l, this.markCache[a] || (this.markCache[a] = He.mark({ class: a })));
      }, s, r);
    return i.finish();
  }
}
const Ice = /* @__PURE__ */ sc.high(/* @__PURE__ */ Bn.fromClass(Lce, {
  decorations: (n) => n.decorations
})), Bce = /* @__PURE__ */ M0.define([
  {
    tag: X.meta,
    color: "#404740"
  },
  {
    tag: X.link,
    textDecoration: "underline"
  },
  {
    tag: X.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: X.emphasis,
    fontStyle: "italic"
  },
  {
    tag: X.strong,
    fontWeight: "bold"
  },
  {
    tag: X.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: X.keyword,
    color: "#708"
  },
  {
    tag: [X.atom, X.bool, X.url, X.contentSeparator, X.labelName],
    color: "#219"
  },
  {
    tag: [X.literal, X.inserted],
    color: "#164"
  },
  {
    tag: [X.string, X.deleted],
    color: "#a11"
  },
  {
    tag: [X.regexp, X.escape, /* @__PURE__ */ X.special(X.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ X.definition(X.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ X.local(X.variableName),
    color: "#30a"
  },
  {
    tag: [X.typeName, X.namespace],
    color: "#085"
  },
  {
    tag: X.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ X.special(X.variableName), X.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ X.definition(X.propertyName),
    color: "#00c"
  },
  {
    tag: X.comment,
    color: "#940"
  },
  {
    tag: X.invalid,
    color: "#f00"
  }
]), Qce = /* @__PURE__ */ _e.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), iN = 1e4, sN = "()[]{}", rN = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, {
      afterCursor: !0,
      brackets: sN,
      maxScanDistance: iN,
      renderMatch: Vce
    });
  }
}), zce = /* @__PURE__ */ He.mark({ class: "cm-matchingBracket" }), jce = /* @__PURE__ */ He.mark({ class: "cm-nonmatchingBracket" });
function Vce(n) {
  let e = [], t = n.matched ? zce : jce;
  return e.push(t.range(n.start.from, n.start.to)), n.end && e.push(t.range(n.end.from, n.end.to)), e;
}
const Fce = /* @__PURE__ */ ui.define({
  create() {
    return He.none;
  },
  update(n, e) {
    if (!e.docChanged && !e.selection)
      return n;
    let t = [], i = e.state.facet(rN);
    for (let s of e.state.selection.ranges) {
      if (!s.empty)
        continue;
      let r = Gr(e.state, s.head, -1, i) || s.head > 0 && Gr(e.state, s.head - 1, 1, i) || i.afterCursor && (Gr(e.state, s.head, 1, i) || s.head < e.state.doc.length && Gr(e.state, s.head + 1, -1, i));
      r && (t = t.concat(i.renderMatch(r, e.state)));
    }
    return He.set(t, !0);
  },
  provide: (n) => _e.decorations.from(n)
}), Zce = [
  Fce,
  Qce
];
function qce(n = {}) {
  return [rN.of(n), Zce];
}
const Wce = /* @__PURE__ */ new mt();
function kO(n, e, t) {
  let i = n.prop(e < 0 ? mt.openedBy : mt.closedBy);
  if (i)
    return i;
  if (n.name.length == 1) {
    let s = t.indexOf(n.name);
    if (s > -1 && s % 2 == (e < 0 ? 1 : 0))
      return [t[s + e]];
  }
  return null;
}
function PO(n) {
  let e = n.type.prop(Wce);
  return e ? e(n.node) : n;
}
function Gr(n, e, t, i = {}) {
  let s = i.maxScanDistance || iN, r = i.brackets || sN, o = Qn(n), l = o.resolveInner(e, t);
  for (let a = l; a; a = a.parent) {
    let c = kO(a.type, t, r);
    if (c && a.from < a.to) {
      let u = PO(a);
      if (u && (t > 0 ? e >= u.from && e < u.to : e > u.from && e <= u.to))
        return Hce(n, e, t, a, u, c, r);
    }
  }
  return Xce(n, e, t, o, l.type, s, r);
}
function Hce(n, e, t, i, s, r, o) {
  let l = i.parent, a = { from: s.from, to: s.to }, c = 0, u = l == null ? void 0 : l.cursor();
  if (u && (t < 0 ? u.childBefore(i.from) : u.childAfter(i.to)))
    do
      if (t < 0 ? u.to <= i.from : u.from >= i.to) {
        if (c == 0 && r.indexOf(u.type.name) > -1 && u.from < u.to) {
          let h = PO(u);
          return { start: a, end: h ? { from: h.from, to: h.to } : void 0, matched: !0 };
        } else if (kO(u.type, t, o))
          c++;
        else if (kO(u.type, -t, o)) {
          if (c == 0) {
            let h = PO(u);
            return {
              start: a,
              end: h && h.from < h.to ? { from: h.from, to: h.to } : void 0,
              matched: !1
            };
          }
          c--;
        }
      }
    while (t < 0 ? u.prevSibling() : u.nextSibling());
  return { start: a, matched: !1 };
}
function Xce(n, e, t, i, s, r, o) {
  let l = t < 0 ? n.sliceDoc(e - 1, e) : n.sliceDoc(e, e + 1), a = o.indexOf(l);
  if (a < 0 || a % 2 == 0 != t > 0)
    return null;
  let c = { from: t < 0 ? e - 1 : e, to: t > 0 ? e + 1 : e }, u = n.doc.iterRange(e, t > 0 ? n.doc.length : 0), h = 0;
  for (let d = 0; !u.next().done && d <= r; ) {
    let f = u.value;
    t < 0 && (d += f.length);
    let p = e + d * t;
    for (let g = t > 0 ? 0 : f.length - 1, m = t > 0 ? f.length : -1; g != m; g += t) {
      let v = o.indexOf(f[g]);
      if (!(v < 0 || i.resolveInner(p + g, 1).type != s))
        if (v % 2 == 0 == t > 0)
          h++;
        else {
          if (h == 1)
            return { start: c, end: { from: p + g, to: p + g + 1 }, matched: v >> 1 == a >> 1 };
          h--;
        }
    }
    t > 0 && (d += f.length);
  }
  return u.done ? { start: c, matched: !1 } : null;
}
const Yce = /* @__PURE__ */ Object.create(null), L2 = [us.none], I2 = [], B2 = /* @__PURE__ */ Object.create(null), Uce = /* @__PURE__ */ Object.create(null);
for (let [n, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  Uce[n] = /* @__PURE__ */ Gce(Yce, e);
function Wv(n, e) {
  I2.indexOf(n) > -1 || (I2.push(n), console.warn(e));
}
function Gce(n, e) {
  let t = [];
  for (let l of e.split(" ")) {
    let a = [];
    for (let c of l.split(".")) {
      let u = n[c] || X[c];
      u ? typeof u == "function" ? a.length ? a = a.map(u) : Wv(c, `Modifier ${c} used at start of tag`) : a.length ? Wv(c, `Tag ${c} used as modifier`) : a = Array.isArray(u) ? u : [u] : Wv(c, `Unknown highlighting tag ${c}`);
    }
    for (let c of a)
      t.push(c);
  }
  if (!t.length)
    return 0;
  let i = e.replace(/ /g, "_"), s = i + " " + t.map((l) => l.id), r = B2[s];
  if (r)
    return r.id;
  let o = B2[s] = us.define({
    id: L2.length,
    name: i,
    props: [P0({ [i]: t })]
  });
  return L2.push(o), o.id;
}
nn.RTL, nn.LTR;
const Kce = (n) => {
  let { state: e } = n, t = e.doc.lineAt(e.selection.main.from), i = Yw(n.state, t.from);
  return i.line ? Jce(n) : i.block ? tue(n) : !1;
};
function Xw(n, e) {
  return ({ state: t, dispatch: i }) => {
    if (t.readOnly)
      return !1;
    let s = n(e, t);
    return s ? (i(t.update(s)), !0) : !1;
  };
}
const Jce = /* @__PURE__ */ Xw(
  sue,
  0
  /* CommentOption.Toggle */
), eue = /* @__PURE__ */ Xw(
  oN,
  0
  /* CommentOption.Toggle */
), tue = /* @__PURE__ */ Xw(
  (n, e) => oN(n, e, iue(e)),
  0
  /* CommentOption.Toggle */
);
function Yw(n, e) {
  let t = n.languageDataAt("commentTokens", e);
  return t.length ? t[0] : {};
}
const kh = 50;
function nue(n, { open: e, close: t }, i, s) {
  let r = n.sliceDoc(i - kh, i), o = n.sliceDoc(s, s + kh), l = /\s*$/.exec(r)[0].length, a = /^\s*/.exec(o)[0].length, c = r.length - l;
  if (r.slice(c - e.length, c) == e && o.slice(a, a + t.length) == t)
    return {
      open: { pos: i - l, margin: l && 1 },
      close: { pos: s + a, margin: a && 1 }
    };
  let u, h;
  s - i <= 2 * kh ? u = h = n.sliceDoc(i, s) : (u = n.sliceDoc(i, i + kh), h = n.sliceDoc(s - kh, s));
  let d = /^\s*/.exec(u)[0].length, f = /\s*$/.exec(h)[0].length, p = h.length - f - t.length;
  return u.slice(d, d + e.length) == e && h.slice(p, p + t.length) == t ? {
    open: {
      pos: i + d + e.length,
      margin: /\s/.test(u.charAt(d + e.length)) ? 1 : 0
    },
    close: {
      pos: s - f - t.length,
      margin: /\s/.test(h.charAt(p - 1)) ? 1 : 0
    }
  } : null;
}
function iue(n) {
  let e = [];
  for (let t of n.selection.ranges) {
    let i = n.doc.lineAt(t.from), s = t.to <= i.to ? i : n.doc.lineAt(t.to), r = e.length - 1;
    r >= 0 && e[r].to > i.from ? e[r].to = s.to : e.push({ from: i.from + /^\s*/.exec(i.text)[0].length, to: s.to });
  }
  return e;
}
function oN(n, e, t = e.selection.ranges) {
  let i = t.map((r) => Yw(e, r.from).block);
  if (!i.every((r) => r))
    return null;
  let s = t.map((r, o) => nue(e, i[o], r.from, r.to));
  if (n != 2 && !s.every((r) => r))
    return { changes: e.changes(t.map((r, o) => s[o] ? [] : [{ from: r.from, insert: i[o].open + " " }, { from: r.to, insert: " " + i[o].close }])) };
  if (n != 1 && s.some((r) => r)) {
    let r = [];
    for (let o = 0, l; o < s.length; o++)
      if (l = s[o]) {
        let a = i[o], { open: c, close: u } = l;
        r.push({ from: c.pos - a.open.length, to: c.pos + c.margin }, { from: u.pos - u.margin, to: u.pos + a.close.length });
      }
    return { changes: r };
  }
  return null;
}
function sue(n, e, t = e.selection.ranges) {
  let i = [], s = -1;
  for (let { from: r, to: o } of t) {
    let l = i.length, a = 1e9, c = Yw(e, r).line;
    if (c) {
      for (let u = r; u <= o; ) {
        let h = e.doc.lineAt(u);
        if (h.from > s && (r == o || o > h.from)) {
          s = h.from;
          let d = /^\s*/.exec(h.text)[0].length, f = d == h.length, p = h.text.slice(d, d + c.length) == c ? d : -1;
          d < h.text.length && d < a && (a = d), i.push({ line: h, comment: p, token: c, indent: d, empty: f, single: !1 });
        }
        u = h.to + 1;
      }
      if (a < 1e9)
        for (let u = l; u < i.length; u++)
          i[u].indent < i[u].line.text.length && (i[u].indent = a);
      i.length == l + 1 && (i[l].single = !0);
    }
  }
  if (n != 2 && i.some((r) => r.comment < 0 && (!r.empty || r.single))) {
    let r = [];
    for (let { line: l, token: a, indent: c, empty: u, single: h } of i)
      (h || !u) && r.push({ from: l.from + c, insert: a + " " });
    let o = e.changes(r);
    return { changes: o, selection: e.selection.map(o, 1) };
  } else if (n != 1 && i.some((r) => r.comment >= 0)) {
    let r = [];
    for (let { line: o, comment: l, token: a } of i)
      if (l >= 0) {
        let c = o.from + l, u = c + a.length;
        o.text[u - o.from] == " " && u++, r.push({ from: c, to: u });
      }
    return { changes: r };
  }
  return null;
}
const EO = /* @__PURE__ */ Go.define(), rue = /* @__PURE__ */ Go.define(), oue = /* @__PURE__ */ Me.define(), lN = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, {
      minDepth: 100,
      newGroupDelay: 500,
      joinToEvent: (e, t) => t
    }, {
      minDepth: Math.max,
      newGroupDelay: Math.min,
      joinToEvent: (e, t) => (i, s) => e(i, s) || t(i, s)
    });
  }
}), aN = /* @__PURE__ */ ui.define({
  create() {
    return Kr.empty;
  },
  update(n, e) {
    let t = e.state.facet(lN), i = e.annotation(EO);
    if (i) {
      let a = ss.fromTransaction(e, i.selection), c = i.side, u = c == 0 ? n.undone : n.done;
      return a ? u = Om(u, u.length, t.minDepth, a) : u = hN(u, e.startState.selection), new Kr(c == 0 ? i.rest : u, c == 0 ? u : i.rest);
    }
    let s = e.annotation(rue);
    if ((s == "full" || s == "before") && (n = n.isolate()), e.annotation(Nn.addToHistory) === !1)
      return e.changes.empty ? n : n.addMapping(e.changes.desc);
    let r = ss.fromTransaction(e), o = e.annotation(Nn.time), l = e.annotation(Nn.userEvent);
    return r ? n = n.addChanges(r, o, l, t, e) : e.selection && (n = n.addSelection(e.startState.selection, o, l, t.newGroupDelay)), (s == "full" || s == "after") && (n = n.isolate()), n;
  },
  toJSON(n) {
    return { done: n.done.map((e) => e.toJSON()), undone: n.undone.map((e) => e.toJSON()) };
  },
  fromJSON(n) {
    return new Kr(n.done.map(ss.fromJSON), n.undone.map(ss.fromJSON));
  }
});
function lue(n = {}) {
  return [
    aN,
    lN.of(n),
    _e.domEventHandlers({
      beforeinput(e, t) {
        let i = e.inputType == "historyUndo" ? cN : e.inputType == "historyRedo" ? AO : null;
        return i ? (e.preventDefault(), i(t)) : !1;
      }
    })
  ];
}
function R0(n, e) {
  return function({ state: t, dispatch: i }) {
    if (!e && t.readOnly)
      return !1;
    let s = t.field(aN, !1);
    if (!s)
      return !1;
    let r = s.pop(n, t, e);
    return r ? (i(r), !0) : !1;
  };
}
const cN = /* @__PURE__ */ R0(0, !1), AO = /* @__PURE__ */ R0(1, !1), aue = /* @__PURE__ */ R0(0, !0), cue = /* @__PURE__ */ R0(1, !0);
class ss {
  constructor(e, t, i, s, r) {
    this.changes = e, this.effects = t, this.mapped = i, this.startSelection = s, this.selectionsAfter = r;
  }
  setSelAfter(e) {
    return new ss(this.changes, this.effects, this.mapped, this.startSelection, e);
  }
  toJSON() {
    var e, t, i;
    return {
      changes: (e = this.changes) === null || e === void 0 ? void 0 : e.toJSON(),
      mapped: (t = this.mapped) === null || t === void 0 ? void 0 : t.toJSON(),
      startSelection: (i = this.startSelection) === null || i === void 0 ? void 0 : i.toJSON(),
      selectionsAfter: this.selectionsAfter.map((s) => s.toJSON())
    };
  }
  static fromJSON(e) {
    return new ss(e.changes && Wn.fromJSON(e.changes), [], e.mapped && ro.fromJSON(e.mapped), e.startSelection && ue.fromJSON(e.startSelection), e.selectionsAfter.map(ue.fromJSON));
  }
  // This does not check `addToHistory` and such, it assumes the
  // transaction needs to be converted to an item. Returns null when
  // there are no changes or effects in the transaction.
  static fromTransaction(e, t) {
    let i = js;
    for (let s of e.startState.facet(oue)) {
      let r = s(e);
      r.length && (i = i.concat(r));
    }
    return !i.length && e.changes.empty ? null : new ss(e.changes.invert(e.startState.doc), i, void 0, t || e.startState.selection, js);
  }
  static selection(e) {
    return new ss(void 0, js, void 0, void 0, e);
  }
}
function Om(n, e, t, i) {
  let s = e + 1 > t + 20 ? e - t - 1 : 0, r = n.slice(s, e);
  return r.push(i), r;
}
function uue(n, e) {
  let t = [], i = !1;
  return n.iterChangedRanges((s, r) => t.push(s, r)), e.iterChangedRanges((s, r, o, l) => {
    for (let a = 0; a < t.length; ) {
      let c = t[a++], u = t[a++];
      l >= c && o <= u && (i = !0);
    }
  }), i;
}
function hue(n, e) {
  return n.ranges.length == e.ranges.length && n.ranges.filter((t, i) => t.empty != e.ranges[i].empty).length === 0;
}
function uN(n, e) {
  return n.length ? e.length ? n.concat(e) : n : e;
}
const js = [], due = 200;
function hN(n, e) {
  if (n.length) {
    let t = n[n.length - 1], i = t.selectionsAfter.slice(Math.max(0, t.selectionsAfter.length - due));
    return i.length && i[i.length - 1].eq(e) ? n : (i.push(e), Om(n, n.length - 1, 1e9, t.setSelAfter(i)));
  } else
    return [ss.selection([e])];
}
function fue(n) {
  let e = n[n.length - 1], t = n.slice();
  return t[n.length - 1] = e.setSelAfter(e.selectionsAfter.slice(0, e.selectionsAfter.length - 1)), t;
}
function Hv(n, e) {
  if (!n.length)
    return n;
  let t = n.length, i = js;
  for (; t; ) {
    let s = pue(n[t - 1], e, i);
    if (s.changes && !s.changes.empty || s.effects.length) {
      let r = n.slice(0, t);
      return r[t - 1] = s, r;
    } else
      e = s.mapped, t--, i = s.selectionsAfter;
  }
  return i.length ? [ss.selection(i)] : js;
}
function pue(n, e, t) {
  let i = uN(n.selectionsAfter.length ? n.selectionsAfter.map((l) => l.map(e)) : js, t);
  if (!n.changes)
    return ss.selection(i);
  let s = n.changes.map(e), r = e.mapDesc(n.changes, !0), o = n.mapped ? n.mapped.composeDesc(r) : r;
  return new ss(s, ct.mapEffects(n.effects, e), o, n.startSelection.map(r), i);
}
const gue = /^(input\.type|delete)($|\.)/;
class Kr {
  constructor(e, t, i = 0, s = void 0) {
    this.done = e, this.undone = t, this.prevTime = i, this.prevUserEvent = s;
  }
  isolate() {
    return this.prevTime ? new Kr(this.done, this.undone) : this;
  }
  addChanges(e, t, i, s, r) {
    let o = this.done, l = o[o.length - 1];
    return l && l.changes && !l.changes.empty && e.changes && (!i || gue.test(i)) && (!l.selectionsAfter.length && t - this.prevTime < s.newGroupDelay && s.joinToEvent(r, uue(l.changes, e.changes)) || // For compose (but not compose.start) events, always join with previous event
    i == "input.type.compose") ? o = Om(o, o.length - 1, s.minDepth, new ss(e.changes.compose(l.changes), uN(e.effects, l.effects), l.mapped, l.startSelection, js)) : o = Om(o, o.length, s.minDepth, e), new Kr(o, js, t, i);
  }
  addSelection(e, t, i, s) {
    let r = this.done.length ? this.done[this.done.length - 1].selectionsAfter : js;
    return r.length > 0 && t - this.prevTime < s && i == this.prevUserEvent && i && /^select($|\.)/.test(i) && hue(r[r.length - 1], e) ? this : new Kr(hN(this.done, e), this.undone, t, i);
  }
  addMapping(e) {
    return new Kr(Hv(this.done, e), Hv(this.undone, e), this.prevTime, this.prevUserEvent);
  }
  pop(e, t, i) {
    let s = e == 0 ? this.done : this.undone;
    if (s.length == 0)
      return null;
    let r = s[s.length - 1], o = r.selectionsAfter[0] || t.selection;
    if (i && r.selectionsAfter.length)
      return t.update({
        selection: r.selectionsAfter[r.selectionsAfter.length - 1],
        annotations: EO.of({ side: e, rest: fue(s), selection: o }),
        userEvent: e == 0 ? "select.undo" : "select.redo",
        scrollIntoView: !0
      });
    if (r.changes) {
      let l = s.length == 1 ? js : s.slice(0, s.length - 1);
      return r.mapped && (l = Hv(l, r.mapped)), t.update({
        changes: r.changes,
        selection: r.startSelection,
        effects: r.effects,
        annotations: EO.of({ side: e, rest: l, selection: o }),
        filter: !1,
        userEvent: e == 0 ? "undo" : "redo",
        scrollIntoView: !0
      });
    } else
      return null;
  }
}
Kr.empty = /* @__PURE__ */ new Kr(js, js);
const mue = [
  { key: "Mod-z", run: cN, preventDefault: !0 },
  { key: "Mod-y", mac: "Mod-Shift-z", run: AO, preventDefault: !0 },
  { linux: "Ctrl-Shift-z", run: AO, preventDefault: !0 },
  { key: "Mod-u", run: aue, preventDefault: !0 },
  { key: "Alt-u", mac: "Mod-Shift-u", run: cue, preventDefault: !0 }
];
function uh(n, e) {
  return ue.create(n.ranges.map(e), n.mainIndex);
}
function yo(n, e) {
  return n.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function Tr({ state: n, dispatch: e }, t) {
  let i = uh(n.selection, t);
  return i.eq(n.selection, !0) ? !1 : (e(yo(n, i)), !0);
}
function N0(n, e) {
  return ue.cursor(e ? n.to : n.from);
}
function dN(n, e) {
  return Tr(n, (t) => t.empty ? n.moveByChar(t, e) : N0(t, e));
}
function Ni(n) {
  return n.textDirectionAt(n.state.selection.main.head) == nn.LTR;
}
const fN = (n) => dN(n, !Ni(n)), pN = (n) => dN(n, Ni(n));
function gN(n, e) {
  return Tr(n, (t) => t.empty ? n.moveByGroup(t, e) : N0(t, e));
}
const vue = (n) => gN(n, !Ni(n)), bue = (n) => gN(n, Ni(n));
function yue(n, e, t) {
  if (e.type.prop(t))
    return !0;
  let i = e.to - e.from;
  return i && (i > 2 || /[^\s,.;:]/.test(n.sliceDoc(e.from, e.to))) || e.firstChild;
}
function D0(n, e, t) {
  let i = Qn(n).resolveInner(e.head), s = t ? mt.closedBy : mt.openedBy;
  for (let a = e.head; ; ) {
    let c = t ? i.childAfter(a) : i.childBefore(a);
    if (!c)
      break;
    yue(n, c, s) ? i = c : a = t ? c.to : c.from;
  }
  let r = i.type.prop(s), o, l;
  return r && (o = t ? Gr(n, i.from, 1) : Gr(n, i.to, -1)) && o.matched ? l = t ? o.end.to : o.end.from : l = t ? i.to : i.from, ue.cursor(l, t ? -1 : 1);
}
const Oue = (n) => Tr(n, (e) => D0(n.state, e, !Ni(n))), wue = (n) => Tr(n, (e) => D0(n.state, e, Ni(n)));
function mN(n, e) {
  return Tr(n, (t) => {
    if (!t.empty)
      return N0(t, e);
    let i = n.moveVertically(t, e);
    return i.head != t.head ? i : n.moveToLineBoundary(t, e);
  });
}
const vN = (n) => mN(n, !1), bN = (n) => mN(n, !0);
function yN(n) {
  let e = n.scrollDOM.clientHeight < n.scrollDOM.scrollHeight - 2, t = 0, i = 0, s;
  if (e) {
    for (let r of n.state.facet(_e.scrollMargins)) {
      let o = r(n);
      o != null && o.top && (t = Math.max(o == null ? void 0 : o.top, t)), o != null && o.bottom && (i = Math.max(o == null ? void 0 : o.bottom, i));
    }
    s = n.scrollDOM.clientHeight - t - i;
  } else
    s = (n.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: t,
    marginBottom: i,
    selfScroll: e,
    height: Math.max(n.defaultLineHeight, s - 5)
  };
}
function ON(n, e) {
  let t = yN(n), { state: i } = n, s = uh(i.selection, (o) => o.empty ? n.moveVertically(o, e, t.height) : N0(o, e));
  if (s.eq(i.selection))
    return !1;
  let r;
  if (t.selfScroll) {
    let o = n.coordsAtPos(i.selection.main.head), l = n.scrollDOM.getBoundingClientRect(), a = l.top + t.marginTop, c = l.bottom - t.marginBottom;
    o && o.top > a && o.bottom < c && (r = _e.scrollIntoView(s.main.head, { y: "start", yMargin: o.top - a }));
  }
  return n.dispatch(yo(i, s), { effects: r }), !0;
}
const Q2 = (n) => ON(n, !1), $O = (n) => ON(n, !0);
function Kl(n, e, t) {
  let i = n.lineBlockAt(e.head), s = n.moveToLineBoundary(e, t);
  if (s.head == e.head && s.head != (t ? i.to : i.from) && (s = n.moveToLineBoundary(e, t, !1)), !t && s.head == i.from && i.length) {
    let r = /^\s*/.exec(n.state.sliceDoc(i.from, Math.min(i.from + 100, i.to)))[0].length;
    r && e.head != i.from + r && (s = ue.cursor(i.from + r));
  }
  return s;
}
const xue = (n) => Tr(n, (e) => Kl(n, e, !0)), Sue = (n) => Tr(n, (e) => Kl(n, e, !1)), Cue = (n) => Tr(n, (e) => Kl(n, e, !Ni(n))), kue = (n) => Tr(n, (e) => Kl(n, e, Ni(n))), Pue = (n) => Tr(n, (e) => ue.cursor(n.lineBlockAt(e.head).from, 1)), Eue = (n) => Tr(n, (e) => ue.cursor(n.lineBlockAt(e.head).to, -1));
function Aue(n, e, t) {
  let i = !1, s = uh(n.selection, (r) => {
    let o = Gr(n, r.head, -1) || Gr(n, r.head, 1) || r.head > 0 && Gr(n, r.head - 1, 1) || r.head < n.doc.length && Gr(n, r.head + 1, -1);
    if (!o || !o.end)
      return r;
    i = !0;
    let l = o.start.from == r.head ? o.end.to : o.end.from;
    return t ? ue.range(r.anchor, l) : ue.cursor(l);
  });
  return i ? (e(yo(n, s)), !0) : !1;
}
const $ue = ({ state: n, dispatch: e }) => Aue(n, e, !1);
function tr(n, e) {
  let t = uh(n.state.selection, (i) => {
    let s = e(i);
    return ue.range(i.anchor, s.head, s.goalColumn, s.bidiLevel || void 0);
  });
  return t.eq(n.state.selection) ? !1 : (n.dispatch(yo(n.state, t)), !0);
}
function wN(n, e) {
  return tr(n, (t) => n.moveByChar(t, e));
}
const xN = (n) => wN(n, !Ni(n)), SN = (n) => wN(n, Ni(n));
function CN(n, e) {
  return tr(n, (t) => n.moveByGroup(t, e));
}
const Tue = (n) => CN(n, !Ni(n)), _ue = (n) => CN(n, Ni(n)), Mue = (n) => tr(n, (e) => D0(n.state, e, !Ni(n))), Rue = (n) => tr(n, (e) => D0(n.state, e, Ni(n)));
function kN(n, e) {
  return tr(n, (t) => n.moveVertically(t, e));
}
const PN = (n) => kN(n, !1), EN = (n) => kN(n, !0);
function AN(n, e) {
  return tr(n, (t) => n.moveVertically(t, e, yN(n).height));
}
const z2 = (n) => AN(n, !1), j2 = (n) => AN(n, !0), Nue = (n) => tr(n, (e) => Kl(n, e, !0)), Due = (n) => tr(n, (e) => Kl(n, e, !1)), Lue = (n) => tr(n, (e) => Kl(n, e, !Ni(n))), Iue = (n) => tr(n, (e) => Kl(n, e, Ni(n))), Bue = (n) => tr(n, (e) => ue.cursor(n.lineBlockAt(e.head).from)), Que = (n) => tr(n, (e) => ue.cursor(n.lineBlockAt(e.head).to)), V2 = ({ state: n, dispatch: e }) => (e(yo(n, { anchor: 0 })), !0), F2 = ({ state: n, dispatch: e }) => (e(yo(n, { anchor: n.doc.length })), !0), Z2 = ({ state: n, dispatch: e }) => (e(yo(n, { anchor: n.selection.main.anchor, head: 0 })), !0), q2 = ({ state: n, dispatch: e }) => (e(yo(n, { anchor: n.selection.main.anchor, head: n.doc.length })), !0), zue = ({ state: n, dispatch: e }) => (e(n.update({ selection: { anchor: 0, head: n.doc.length }, userEvent: "select" })), !0), jue = ({ state: n, dispatch: e }) => {
  let t = L0(n).map(({ from: i, to: s }) => ue.range(i, Math.min(s + 1, n.doc.length)));
  return e(n.update({ selection: ue.create(t), userEvent: "select" })), !0;
}, Vue = ({ state: n, dispatch: e }) => {
  let t = uh(n.selection, (i) => {
    var s;
    let r = Qn(n).resolveStack(i.from, 1);
    for (let o = r; o; o = o.next) {
      let { node: l } = o;
      if ((l.from < i.from && l.to >= i.to || l.to > i.to && l.from <= i.from) && (!((s = l.parent) === null || s === void 0) && s.parent))
        return ue.range(l.to, l.from);
    }
    return i;
  });
  return e(yo(n, t)), !0;
}, Fue = ({ state: n, dispatch: e }) => {
  let t = n.selection, i = null;
  return t.ranges.length > 1 ? i = ue.create([t.main]) : t.main.empty || (i = ue.create([ue.cursor(t.main.head)])), i ? (e(yo(n, i)), !0) : !1;
};
function Mf(n, e) {
  if (n.state.readOnly)
    return !1;
  let t = "delete.selection", { state: i } = n, s = i.changeByRange((r) => {
    let { from: o, to: l } = r;
    if (o == l) {
      let a = e(r);
      a < o ? (t = "delete.backward", a = Pp(n, a, !1)) : a > o && (t = "delete.forward", a = Pp(n, a, !0)), o = Math.min(o, a), l = Math.max(l, a);
    } else
      o = Pp(n, o, !1), l = Pp(n, l, !0);
    return o == l ? { range: r } : { changes: { from: o, to: l }, range: ue.cursor(o, o < r.head ? -1 : 1) };
  });
  return s.changes.empty ? !1 : (n.dispatch(i.update(s, {
    scrollIntoView: !0,
    userEvent: t,
    effects: t == "delete.selection" ? _e.announce.of(i.phrase("Selection deleted")) : void 0
  })), !0);
}
function Pp(n, e, t) {
  if (n instanceof _e)
    for (let i of n.state.facet(_e.atomicRanges).map((s) => s(n)))
      i.between(e, e, (s, r) => {
        s < e && r > e && (e = t ? r : s);
      });
  return e;
}
const $N = (n, e) => Mf(n, (t) => {
  let i = t.from, { state: s } = n, r = s.doc.lineAt(i), o, l;
  if (!e && i > r.from && i < r.from + 200 && !/[^ \t]/.test(o = r.text.slice(0, i - r.from))) {
    if (o[o.length - 1] == "	")
      return i - 1;
    let a = ch(o, s.tabSize), c = a % vm(s) || vm(s);
    for (let u = 0; u < c && o[o.length - 1 - u] == " "; u++)
      i--;
    l = i;
  } else
    l = Ci(r.text, i - r.from, e, e) + r.from, l == i && r.number != (e ? s.doc.lines : 1) ? l += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(r.text.slice(l - r.from, i - r.from)) && (l = Ci(r.text, l - r.from, !1, !1) + r.from);
  return l;
}), TO = (n) => $N(n, !1), TN = (n) => $N(n, !0), _N = (n, e) => Mf(n, (t) => {
  let i = t.head, { state: s } = n, r = s.doc.lineAt(i), o = s.charCategorizer(i);
  for (let l = null; ; ) {
    if (i == (e ? r.to : r.from)) {
      i == t.head && r.number != (e ? s.doc.lines : 1) && (i += e ? 1 : -1);
      break;
    }
    let a = Ci(r.text, i - r.from, e) + r.from, c = r.text.slice(Math.min(i, a) - r.from, Math.max(i, a) - r.from), u = o(c);
    if (l != null && u != l)
      break;
    (c != " " || i != t.head) && (l = u), i = a;
  }
  return i;
}), MN = (n) => _N(n, !1), Zue = (n) => _N(n, !0), que = (n) => Mf(n, (e) => {
  let t = n.lineBlockAt(e.head).to;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), Wue = (n) => Mf(n, (e) => {
  let t = n.moveToLineBoundary(e, !1).head;
  return e.head > t ? t : Math.max(0, e.head - 1);
}), Hue = (n) => Mf(n, (e) => {
  let t = n.moveToLineBoundary(e, !0).head;
  return e.head < t ? t : Math.min(n.state.doc.length, e.head + 1);
}), Xue = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((i) => ({
    changes: { from: i.from, to: i.to, insert: $t.of(["", ""]) },
    range: ue.cursor(i.from)
  }));
  return e(n.update(t, { scrollIntoView: !0, userEvent: "input" })), !0;
}, Yue = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = n.changeByRange((i) => {
    if (!i.empty || i.from == 0 || i.from == n.doc.length)
      return { range: i };
    let s = i.from, r = n.doc.lineAt(s), o = s == r.from ? s - 1 : Ci(r.text, s - r.from, !1) + r.from, l = s == r.to ? s + 1 : Ci(r.text, s - r.from, !0) + r.from;
    return {
      changes: { from: o, to: l, insert: n.doc.slice(s, l).append(n.doc.slice(o, s)) },
      range: ue.cursor(l)
    };
  });
  return t.changes.empty ? !1 : (e(n.update(t, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function L0(n) {
  let e = [], t = -1;
  for (let i of n.selection.ranges) {
    let s = n.doc.lineAt(i.from), r = n.doc.lineAt(i.to);
    if (!i.empty && i.to == r.from && (r = n.doc.lineAt(i.to - 1)), t >= s.number) {
      let o = e[e.length - 1];
      o.to = r.to, o.ranges.push(i);
    } else
      e.push({ from: s.from, to: r.to, ranges: [i] });
    t = r.number + 1;
  }
  return e;
}
function RN(n, e, t) {
  if (n.readOnly)
    return !1;
  let i = [], s = [];
  for (let r of L0(n)) {
    if (t ? r.to == n.doc.length : r.from == 0)
      continue;
    let o = n.doc.lineAt(t ? r.to + 1 : r.from - 1), l = o.length + 1;
    if (t) {
      i.push({ from: r.to, to: o.to }, { from: r.from, insert: o.text + n.lineBreak });
      for (let a of r.ranges)
        s.push(ue.range(Math.min(n.doc.length, a.anchor + l), Math.min(n.doc.length, a.head + l)));
    } else {
      i.push({ from: o.from, to: r.from }, { from: r.to, insert: n.lineBreak + o.text });
      for (let a of r.ranges)
        s.push(ue.range(a.anchor - l, a.head - l));
    }
  }
  return i.length ? (e(n.update({
    changes: i,
    scrollIntoView: !0,
    selection: ue.create(s, n.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const Uue = ({ state: n, dispatch: e }) => RN(n, e, !1), Gue = ({ state: n, dispatch: e }) => RN(n, e, !0);
function NN(n, e, t) {
  if (n.readOnly)
    return !1;
  let i = [];
  for (let s of L0(n))
    t ? i.push({ from: s.from, insert: n.doc.slice(s.from, s.to) + n.lineBreak }) : i.push({ from: s.to, insert: n.lineBreak + n.doc.slice(s.from, s.to) });
  return e(n.update({ changes: i, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const Kue = ({ state: n, dispatch: e }) => NN(n, e, !1), Jue = ({ state: n, dispatch: e }) => NN(n, e, !0), ehe = (n) => {
  if (n.state.readOnly)
    return !1;
  let { state: e } = n, t = e.changes(L0(e).map(({ from: s, to: r }) => (s > 0 ? s-- : r < e.doc.length && r++, { from: s, to: r }))), i = uh(e.selection, (s) => n.moveVertically(s, !0)).map(t);
  return n.dispatch({ changes: t, selection: i, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function the(n, e) {
  if (/\(\)|\[\]|\{\}/.test(n.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let t = Qn(n).resolveInner(e), i = t.childBefore(e), s = t.childAfter(e), r;
  return i && s && i.to <= e && s.from >= e && (r = i.type.prop(mt.closedBy)) && r.indexOf(s.name) > -1 && n.doc.lineAt(i.to).from == n.doc.lineAt(s.from).from && !/\S/.test(n.sliceDoc(i.to, s.from)) ? { from: i.to, to: s.from } : null;
}
const nhe = /* @__PURE__ */ DN(!1), ihe = /* @__PURE__ */ DN(!0);
function DN(n) {
  return ({ state: e, dispatch: t }) => {
    if (e.readOnly)
      return !1;
    let i = e.changeByRange((s) => {
      let { from: r, to: o } = s, l = e.doc.lineAt(r), a = !n && r == o && the(e, r);
      n && (r = o = (o <= l.to ? l : e.doc.lineAt(o)).to);
      let c = new A0(e, { simulateBreak: r, simulateDoubleBreak: !!a }), u = qw(c, r);
      for (u == null && (u = ch(/^\s*/.exec(e.doc.lineAt(r).text)[0], e.tabSize)); o < l.to && /\s/.test(l.text[o - l.from]); )
        o++;
      a ? { from: r, to: o } = a : r > l.from && r < l.from + 100 && !/\S/.test(l.text.slice(0, r)) && (r = l.from);
      let h = ["", Jd(e, u)];
      return a && h.push(Jd(e, c.lineIndent(l.from, -1))), {
        changes: { from: r, to: o, insert: $t.of(h) },
        range: ue.cursor(r + 1 + h[1].length)
      };
    });
    return t(e.update(i, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function Uw(n, e) {
  let t = -1;
  return n.changeByRange((i) => {
    let s = [];
    for (let o = i.from; o <= i.to; ) {
      let l = n.doc.lineAt(o);
      l.number > t && (i.empty || i.to > l.from) && (e(l, s, i), t = l.number), o = l.to + 1;
    }
    let r = n.changes(s);
    return {
      changes: s,
      range: ue.range(r.mapPos(i.anchor, 1), r.mapPos(i.head, 1))
    };
  });
}
const she = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let t = /* @__PURE__ */ Object.create(null), i = new A0(n, { overrideIndentation: (r) => {
    let o = t[r];
    return o ?? -1;
  } }), s = Uw(n, (r, o, l) => {
    let a = qw(i, r.from);
    if (a == null)
      return;
    /\S/.test(r.text) || (a = 0);
    let c = /^\s*/.exec(r.text)[0], u = Jd(n, a);
    (c != u || l.from < r.from + c.length) && (t[r.from] = a, o.push({ from: r.from, to: r.from + c.length, insert: u }));
  });
  return s.changes.empty || e(n.update(s, { userEvent: "indent" })), !0;
}, rhe = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(Uw(n, (t, i) => {
  i.push({ from: t.from, insert: n.facet(E0) });
}), { userEvent: "input.indent" })), !0), ohe = ({ state: n, dispatch: e }) => n.readOnly ? !1 : (e(n.update(Uw(n, (t, i) => {
  let s = /^\s*/.exec(t.text)[0];
  if (!s)
    return;
  let r = ch(s, n.tabSize), o = 0, l = Jd(n, Math.max(0, r - vm(n)));
  for (; o < s.length && o < l.length && s.charCodeAt(o) == l.charCodeAt(o); )
    o++;
  i.push({ from: t.from + o, to: t.from + s.length, insert: l.slice(o) });
}), { userEvent: "delete.dedent" })), !0), lhe = [
  { key: "Ctrl-b", run: fN, shift: xN, preventDefault: !0 },
  { key: "Ctrl-f", run: pN, shift: SN },
  { key: "Ctrl-p", run: vN, shift: PN },
  { key: "Ctrl-n", run: bN, shift: EN },
  { key: "Ctrl-a", run: Pue, shift: Bue },
  { key: "Ctrl-e", run: Eue, shift: Que },
  { key: "Ctrl-d", run: TN },
  { key: "Ctrl-h", run: TO },
  { key: "Ctrl-k", run: que },
  { key: "Ctrl-Alt-h", run: MN },
  { key: "Ctrl-o", run: Xue },
  { key: "Ctrl-t", run: Yue },
  { key: "Ctrl-v", run: $O }
], ahe = /* @__PURE__ */ [
  { key: "ArrowLeft", run: fN, shift: xN, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: vue, shift: Tue, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: Cue, shift: Lue, preventDefault: !0 },
  { key: "ArrowRight", run: pN, shift: SN, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: bue, shift: _ue, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: kue, shift: Iue, preventDefault: !0 },
  { key: "ArrowUp", run: vN, shift: PN, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: V2, shift: Z2 },
  { mac: "Ctrl-ArrowUp", run: Q2, shift: z2 },
  { key: "ArrowDown", run: bN, shift: EN, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: F2, shift: q2 },
  { mac: "Ctrl-ArrowDown", run: $O, shift: j2 },
  { key: "PageUp", run: Q2, shift: z2 },
  { key: "PageDown", run: $O, shift: j2 },
  { key: "Home", run: Sue, shift: Due, preventDefault: !0 },
  { key: "Mod-Home", run: V2, shift: Z2 },
  { key: "End", run: xue, shift: Nue, preventDefault: !0 },
  { key: "Mod-End", run: F2, shift: q2 },
  { key: "Enter", run: nhe },
  { key: "Mod-a", run: zue },
  { key: "Backspace", run: TO, shift: TO },
  { key: "Delete", run: TN },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: MN },
  { key: "Mod-Delete", mac: "Alt-Delete", run: Zue },
  { mac: "Mod-Backspace", run: Wue },
  { mac: "Mod-Delete", run: Hue }
].concat(/* @__PURE__ */ lhe.map((n) => ({ mac: n.key, run: n.run, shift: n.shift }))), che = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: Oue, shift: Mue },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: wue, shift: Rue },
  { key: "Alt-ArrowUp", run: Uue },
  { key: "Shift-Alt-ArrowUp", run: Kue },
  { key: "Alt-ArrowDown", run: Gue },
  { key: "Shift-Alt-ArrowDown", run: Jue },
  { key: "Escape", run: Fue },
  { key: "Mod-Enter", run: ihe },
  { key: "Alt-l", mac: "Ctrl-l", run: jue },
  { key: "Mod-i", run: Vue, preventDefault: !0 },
  { key: "Mod-[", run: ohe },
  { key: "Mod-]", run: rhe },
  { key: "Mod-Alt-\\", run: she },
  { key: "Shift-Mod-k", run: ehe },
  { key: "Shift-Mod-\\", run: $ue },
  { key: "Mod-/", run: Kce },
  { key: "Alt-A", run: eue }
].concat(ahe);
function Ht() {
  var n = arguments[0];
  typeof n == "string" && (n = document.createElement(n));
  var e = 1, t = arguments[1];
  if (t && typeof t == "object" && t.nodeType == null && !Array.isArray(t)) {
    for (var i in t)
      if (Object.prototype.hasOwnProperty.call(t, i)) {
        var s = t[i];
        typeof s == "string" ? n.setAttribute(i, s) : s != null && (n[i] = s);
      }
    e++;
  }
  for (; e < arguments.length; e++)
    LN(n, arguments[e]);
  return n;
}
function LN(n, e) {
  if (typeof e == "string")
    n.appendChild(document.createTextNode(e));
  else if (e != null)
    if (e.nodeType != null)
      n.appendChild(e);
    else if (Array.isArray(e))
      for (var t = 0; t < e.length; t++)
        LN(n, e[t]);
    else
      throw new RangeError("Unsupported child node: " + e);
}
const W2 = typeof String.prototype.normalize == "function" ? (n) => n.normalize("NFKD") : (n) => n;
class Bu {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, t, i = 0, s = e.length, r, o) {
    this.test = o, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(i, s), this.bufferStart = i, this.normalize = r ? (l) => r(W2(l)) : W2, this.query = this.normalize(t);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return bi(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let t = Pw(e), i = this.bufferStart + this.bufferPos;
      this.bufferPos += zs(e);
      let s = this.normalize(t);
      for (let r = 0, o = i; ; r++) {
        let l = s.charCodeAt(r), a = this.match(l, o, this.bufferPos + this.bufferStart);
        if (r == s.length - 1) {
          if (a)
            return this.value = a, this;
          break;
        }
        o == i && r < t.length && t.charCodeAt(r) == l && o++;
      }
    }
  }
  match(e, t, i) {
    let s = null;
    for (let r = 0; r < this.matches.length; r += 2) {
      let o = this.matches[r], l = !1;
      this.query.charCodeAt(o) == e && (o == this.query.length - 1 ? s = { from: this.matches[r + 1], to: i } : (this.matches[r]++, l = !0)), l || (this.matches.splice(r, 2), r -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? s = { from: t, to: i } : this.matches.push(1, t)), s && this.test && !this.test(s.from, s.to, this.buffer, this.bufferStart) && (s = null), s;
  }
}
typeof Symbol < "u" && (Bu.prototype[Symbol.iterator] = function() {
  return this;
});
const IN = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, Gw = "gm" + (/x/.unicode == null ? "" : "u");
class BN {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, t, i, s = 0, r = e.length) {
    if (this.text = e, this.to = r, this.curLine = "", this.done = !1, this.value = IN, /\\[sWDnr]|\n|\r|\[\^/.test(t))
      return new QN(e, t, i, s, r);
    this.re = new RegExp(t, Gw + (i != null && i.ignoreCase ? "i" : "")), this.test = i == null ? void 0 : i.test, this.iter = e.iter();
    let o = e.lineAt(s);
    this.curLineStart = o.from, this.matchPos = wm(e, s), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let t = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (t) {
        let i = this.curLineStart + t.index, s = i + t[0].length;
        if (this.matchPos = wm(this.text, s + (i == s ? 1 : 0)), i == this.curLineStart + this.curLine.length && this.nextLine(), (i < s || i > this.value.to) && (!this.test || this.test(i, s, t)))
          return this.value = { from: i, to: s, match: t }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const Xv = /* @__PURE__ */ new WeakMap();
class Zc {
  constructor(e, t) {
    this.from = e, this.text = t;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, t, i) {
    let s = Xv.get(e);
    if (!s || s.from >= i || s.to <= t) {
      let l = new Zc(t, e.sliceString(t, i));
      return Xv.set(e, l), l;
    }
    if (s.from == t && s.to == i)
      return s;
    let { text: r, from: o } = s;
    return o > t && (r = e.sliceString(t, o) + r, o = t), s.to < i && (r += e.sliceString(s.to, i)), Xv.set(e, new Zc(o, r)), new Zc(t, r.slice(t - o, i - o));
  }
}
class QN {
  constructor(e, t, i, s, r) {
    this.text = e, this.to = r, this.done = !1, this.value = IN, this.matchPos = wm(e, s), this.re = new RegExp(t, Gw + (i != null && i.ignoreCase ? "i" : "")), this.test = i == null ? void 0 : i.test, this.flat = Zc.get(e, s, this.chunkEnd(
      s + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, t = this.re.exec(this.flat.text);
      if (t && !t[0] && t.index == e && (this.re.lastIndex = e + 1, t = this.re.exec(this.flat.text)), t) {
        let i = this.flat.from + t.index, s = i + t[0].length;
        if ((this.flat.to >= this.to || t.index + t[0].length <= this.flat.text.length - 10) && (!this.test || this.test(i, s, t)))
          return this.value = { from: i, to: s, match: t }, this.matchPos = wm(this.text, s + (i == s ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = Zc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (BN.prototype[Symbol.iterator] = QN.prototype[Symbol.iterator] = function() {
  return this;
});
function uhe(n) {
  try {
    return new RegExp(n, Gw), !0;
  } catch {
    return !1;
  }
}
function wm(n, e) {
  if (e >= n.length)
    return e;
  let t = n.lineAt(e), i;
  for (; e < t.to && (i = t.text.charCodeAt(e - t.from)) >= 56320 && i < 57344; )
    e++;
  return e;
}
function _O(n) {
  let e = String(n.state.doc.lineAt(n.state.selection.main.head).number), t = Ht("input", { class: "cm-textfield", name: "line", value: e }), i = Ht("form", {
    class: "cm-gotoLine",
    onkeydown: (r) => {
      r.keyCode == 27 ? (r.preventDefault(), n.dispatch({ effects: xm.of(!1) }), n.focus()) : r.keyCode == 13 && (r.preventDefault(), s());
    },
    onsubmit: (r) => {
      r.preventDefault(), s();
    }
  }, Ht("label", n.state.phrase("Go to line"), ": ", t), " ", Ht("button", { class: "cm-button", type: "submit" }, n.state.phrase("go")));
  function s() {
    let r = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(t.value);
    if (!r)
      return;
    let { state: o } = n, l = o.doc.lineAt(o.selection.main.head), [, a, c, u, h] = r, d = u ? +u.slice(1) : 0, f = c ? +c : l.number;
    if (c && h) {
      let m = f / 100;
      a && (m = m * (a == "-" ? -1 : 1) + l.number / o.doc.lines), f = Math.round(o.doc.lines * m);
    } else
      c && a && (f = f * (a == "-" ? -1 : 1) + l.number);
    let p = o.doc.line(Math.max(1, Math.min(o.doc.lines, f))), g = ue.cursor(p.from + Math.max(0, Math.min(d, p.length)));
    n.dispatch({
      effects: [xm.of(!1), _e.scrollIntoView(g.from, { y: "center" })],
      selection: g
    }), n.focus();
  }
  return { dom: i };
}
const xm = /* @__PURE__ */ ct.define(), H2 = /* @__PURE__ */ ui.define({
  create() {
    return !0;
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(xm) && (n = t.value);
    return n;
  },
  provide: (n) => Gd.from(n, (e) => e ? _O : null)
}), hhe = (n) => {
  let e = Ud(n, _O);
  if (!e) {
    let t = [xm.of(!0)];
    n.state.field(H2, !1) == null && t.push(ct.appendConfig.of([H2, dhe])), n.dispatch({ effects: t }), e = Ud(n, _O);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, dhe = /* @__PURE__ */ _e.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    "& label": { fontSize: "80%" }
  }
}), fhe = {
  highlightWordAroundCursor: !1,
  minSelectionLength: 1,
  maxMatches: 100,
  wholeWords: !1
}, zN = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, fhe, {
      highlightWordAroundCursor: (e, t) => e || t,
      minSelectionLength: Math.min,
      maxMatches: Math.min
    });
  }
});
function phe(n) {
  let e = [yhe, bhe];
  return n && e.push(zN.of(n)), e;
}
const ghe = /* @__PURE__ */ He.mark({ class: "cm-selectionMatch" }), mhe = /* @__PURE__ */ He.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
function X2(n, e, t, i) {
  return (t == 0 || n(e.sliceDoc(t - 1, t)) != an.Word) && (i == e.doc.length || n(e.sliceDoc(i, i + 1)) != an.Word);
}
function vhe(n, e, t, i) {
  return n(e.sliceDoc(t, t + 1)) == an.Word && n(e.sliceDoc(i - 1, i)) == an.Word;
}
const bhe = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.decorations = this.getDeco(n);
  }
  update(n) {
    (n.selectionSet || n.docChanged || n.viewportChanged) && (this.decorations = this.getDeco(n.view));
  }
  getDeco(n) {
    let e = n.state.facet(zN), { state: t } = n, i = t.selection;
    if (i.ranges.length > 1)
      return He.none;
    let s = i.main, r, o = null;
    if (s.empty) {
      if (!e.highlightWordAroundCursor)
        return He.none;
      let a = t.wordAt(s.head);
      if (!a)
        return He.none;
      o = t.charCategorizer(s.head), r = t.sliceDoc(a.from, a.to);
    } else {
      let a = s.to - s.from;
      if (a < e.minSelectionLength || a > 200)
        return He.none;
      if (e.wholeWords) {
        if (r = t.sliceDoc(s.from, s.to), o = t.charCategorizer(s.head), !(X2(o, t, s.from, s.to) && vhe(o, t, s.from, s.to)))
          return He.none;
      } else if (r = t.sliceDoc(s.from, s.to), !r)
        return He.none;
    }
    let l = [];
    for (let a of n.visibleRanges) {
      let c = new Bu(t.doc, r, a.from, a.to);
      for (; !c.next().done; ) {
        let { from: u, to: h } = c.value;
        if ((!o || X2(o, t, u, h)) && (s.empty && u <= s.from && h >= s.to ? l.push(mhe.range(u, h)) : (u >= s.to || h <= s.from) && l.push(ghe.range(u, h)), l.length > e.maxMatches))
          return He.none;
      }
    }
    return He.set(l);
  }
}, {
  decorations: (n) => n.decorations
}), yhe = /* @__PURE__ */ _e.baseTheme({
  ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
  ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
}), Ohe = ({ state: n, dispatch: e }) => {
  let { selection: t } = n, i = ue.create(t.ranges.map((s) => n.wordAt(s.head) || ue.cursor(s.head)), t.mainIndex);
  return i.eq(t) ? !1 : (e(n.update({ selection: i })), !0);
};
function whe(n, e) {
  let { main: t, ranges: i } = n.selection, s = n.wordAt(t.head), r = s && s.from == t.from && s.to == t.to;
  for (let o = !1, l = new Bu(n.doc, e, i[i.length - 1].to); ; )
    if (l.next(), l.done) {
      if (o)
        return null;
      l = new Bu(n.doc, e, 0, Math.max(0, i[i.length - 1].from - 1)), o = !0;
    } else {
      if (o && i.some((a) => a.from == l.value.from))
        continue;
      if (r) {
        let a = n.wordAt(l.value.from);
        if (!a || a.from != l.value.from || a.to != l.value.to)
          continue;
      }
      return l.value;
    }
}
const xhe = ({ state: n, dispatch: e }) => {
  let { ranges: t } = n.selection;
  if (t.some((r) => r.from === r.to))
    return Ohe({ state: n, dispatch: e });
  let i = n.sliceDoc(t[0].from, t[0].to);
  if (n.selection.ranges.some((r) => n.sliceDoc(r.from, r.to) != i))
    return !1;
  let s = whe(n, i);
  return s ? (e(n.update({
    selection: n.selection.addRange(ue.range(s.from, s.to), !1),
    effects: _e.scrollIntoView(s.to)
  })), !0) : !1;
}, hh = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new Nhe(e),
      scrollToMatch: (e) => _e.scrollIntoView(e)
    });
  }
});
class jN {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || uhe(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (t, i) => i == "n" ? `
` : i == "r" ? "\r" : i == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new Phe(this) : new Che(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, t = 0, i) {
    let s = e.doc ? e : Et.create({ doc: e });
    return i == null && (i = s.doc.length), this.regexp ? kc(this, s, t, i) : Cc(this, s, t, i);
  }
}
class VN {
  constructor(e) {
    this.spec = e;
  }
}
function Cc(n, e, t, i) {
  return new Bu(e.doc, n.unquoted, t, i, n.caseSensitive ? void 0 : (s) => s.toLowerCase(), n.wholeWord ? She(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function She(n, e) {
  return (t, i, s, r) => ((r > t || r + s.length < i) && (r = Math.max(0, t - 2), s = n.sliceString(r, Math.min(n.length, i + 2))), (e(Sm(s, t - r)) != an.Word || e(Cm(s, t - r)) != an.Word) && (e(Cm(s, i - r)) != an.Word || e(Sm(s, i - r)) != an.Word));
}
class Che extends VN {
  constructor(e) {
    super(e);
  }
  nextMatch(e, t, i) {
    let s = Cc(this.spec, e, i, e.doc.length).nextOverlapping();
    return s.done && (s = Cc(this.spec, e, 0, t).nextOverlapping()), s.done ? null : s.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, t, i) {
    for (let s = i; ; ) {
      let r = Math.max(t, s - 1e4 - this.spec.unquoted.length), o = Cc(this.spec, e, r, s), l = null;
      for (; !o.nextOverlapping().done; )
        l = o.value;
      if (l)
        return l;
      if (r == t)
        return null;
      s -= 1e4;
    }
  }
  prevMatch(e, t, i) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, i, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, t) {
    let i = Cc(this.spec, e, 0, e.doc.length), s = [];
    for (; !i.next().done; ) {
      if (s.length >= t)
        return null;
      s.push(i.value);
    }
    return s;
  }
  highlight(e, t, i, s) {
    let r = Cc(this.spec, e, Math.max(0, t - this.spec.unquoted.length), Math.min(i + this.spec.unquoted.length, e.doc.length));
    for (; !r.next().done; )
      s(r.value.from, r.value.to);
  }
}
function kc(n, e, t, i) {
  return new BN(e.doc, n.search, {
    ignoreCase: !n.caseSensitive,
    test: n.wholeWord ? khe(e.charCategorizer(e.selection.main.head)) : void 0
  }, t, i);
}
function Sm(n, e) {
  return n.slice(Ci(n, e, !1), e);
}
function Cm(n, e) {
  return n.slice(e, Ci(n, e));
}
function khe(n) {
  return (e, t, i) => !i[0].length || (n(Sm(i.input, i.index)) != an.Word || n(Cm(i.input, i.index)) != an.Word) && (n(Cm(i.input, i.index + i[0].length)) != an.Word || n(Sm(i.input, i.index + i[0].length)) != an.Word);
}
class Phe extends VN {
  nextMatch(e, t, i) {
    let s = kc(this.spec, e, i, e.doc.length).next();
    return s.done && (s = kc(this.spec, e, 0, t).next()), s.done ? null : s.value;
  }
  prevMatchInRange(e, t, i) {
    for (let s = 1; ; s++) {
      let r = Math.max(
        t,
        i - s * 1e4
        /* FindPrev.ChunkSize */
      ), o = kc(this.spec, e, r, i), l = null;
      for (; !o.next().done; )
        l = o.value;
      if (l && (r == t || l.from > r + 10))
        return l;
      if (r == t)
        return null;
    }
  }
  prevMatch(e, t, i) {
    return this.prevMatchInRange(e, 0, t) || this.prevMatchInRange(e, i, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&\d+])/g, (t, i) => i == "$" ? "$" : i == "&" ? e.match[0] : i != "0" && +i < e.match.length ? e.match[i] : t);
  }
  matchAll(e, t) {
    let i = kc(this.spec, e, 0, e.doc.length), s = [];
    for (; !i.next().done; ) {
      if (s.length >= t)
        return null;
      s.push(i.value);
    }
    return s;
  }
  highlight(e, t, i, s) {
    let r = kc(this.spec, e, Math.max(
      0,
      t - 250
      /* RegExp.HighlightMargin */
    ), Math.min(i + 250, e.doc.length));
    for (; !r.next().done; )
      s(r.value.from, r.value.to);
  }
}
const ef = /* @__PURE__ */ ct.define(), Kw = /* @__PURE__ */ ct.define(), El = /* @__PURE__ */ ui.define({
  create(n) {
    return new Yv(MO(n).create(), null);
  },
  update(n, e) {
    for (let t of e.effects)
      t.is(ef) ? n = new Yv(t.value.create(), n.panel) : t.is(Kw) && (n = new Yv(n.query, t.value ? Jw : null));
    return n;
  },
  provide: (n) => Gd.from(n, (e) => e.panel)
});
class Yv {
  constructor(e, t) {
    this.query = e, this.panel = t;
  }
}
const Ehe = /* @__PURE__ */ He.mark({ class: "cm-searchMatch" }), Ahe = /* @__PURE__ */ He.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), $he = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.view = n, this.decorations = this.highlight(n.state.field(El));
  }
  update(n) {
    let e = n.state.field(El);
    (e != n.startState.field(El) || n.docChanged || n.selectionSet || n.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: n, panel: e }) {
    if (!e || !n.spec.valid)
      return He.none;
    let { view: t } = this, i = new Bl();
    for (let s = 0, r = t.visibleRanges, o = r.length; s < o; s++) {
      let { from: l, to: a } = r[s];
      for (; s < o - 1 && a > r[s + 1].from - 2 * 250; )
        a = r[++s].to;
      n.highlight(t.state, l, a, (c, u) => {
        let h = t.state.selection.ranges.some((d) => d.from == c && d.to == u);
        i.add(c, u, h ? Ahe : Ehe);
      });
    }
    return i.finish();
  }
}, {
  decorations: (n) => n.decorations
});
function Rf(n) {
  return (e) => {
    let t = e.state.field(El, !1);
    return t && t.query.spec.valid ? n(e, t) : qN(e);
  };
}
const km = /* @__PURE__ */ Rf((n, { query: e }) => {
  let { to: t } = n.state.selection.main, i = e.nextMatch(n.state, t, t);
  if (!i)
    return !1;
  let s = ue.single(i.from, i.to), r = n.state.facet(hh);
  return n.dispatch({
    selection: s,
    effects: [ex(n, i), r.scrollToMatch(s.main, n)],
    userEvent: "select.search"
  }), ZN(n), !0;
}), Pm = /* @__PURE__ */ Rf((n, { query: e }) => {
  let { state: t } = n, { from: i } = t.selection.main, s = e.prevMatch(t, i, i);
  if (!s)
    return !1;
  let r = ue.single(s.from, s.to), o = n.state.facet(hh);
  return n.dispatch({
    selection: r,
    effects: [ex(n, s), o.scrollToMatch(r.main, n)],
    userEvent: "select.search"
  }), ZN(n), !0;
}), The = /* @__PURE__ */ Rf((n, { query: e }) => {
  let t = e.matchAll(n.state, 1e3);
  return !t || !t.length ? !1 : (n.dispatch({
    selection: ue.create(t.map((i) => ue.range(i.from, i.to))),
    userEvent: "select.search.matches"
  }), !0);
}), _he = ({ state: n, dispatch: e }) => {
  let t = n.selection;
  if (t.ranges.length > 1 || t.main.empty)
    return !1;
  let { from: i, to: s } = t.main, r = [], o = 0;
  for (let l = new Bu(n.doc, n.sliceDoc(i, s)); !l.next().done; ) {
    if (r.length > 1e3)
      return !1;
    l.value.from == i && (o = r.length), r.push(ue.range(l.value.from, l.value.to));
  }
  return e(n.update({
    selection: ue.create(r, o),
    userEvent: "select.search.matches"
  })), !0;
}, Y2 = /* @__PURE__ */ Rf((n, { query: e }) => {
  let { state: t } = n, { from: i, to: s } = t.selection.main;
  if (t.readOnly)
    return !1;
  let r = e.nextMatch(t, i, i);
  if (!r)
    return !1;
  let o = [], l, a, c = [];
  if (r.from == i && r.to == s && (a = t.toText(e.getReplacement(r)), o.push({ from: r.from, to: r.to, insert: a }), r = e.nextMatch(t, r.from, r.to), c.push(_e.announce.of(t.phrase("replaced match on line $", t.doc.lineAt(i).number) + "."))), r) {
    let u = o.length == 0 || o[0].from >= r.to ? 0 : r.to - r.from - a.length;
    l = ue.single(r.from - u, r.to - u), c.push(ex(n, r)), c.push(t.facet(hh).scrollToMatch(l.main, n));
  }
  return n.dispatch({
    changes: o,
    selection: l,
    effects: c,
    userEvent: "input.replace"
  }), !0;
}), Mhe = /* @__PURE__ */ Rf((n, { query: e }) => {
  if (n.state.readOnly)
    return !1;
  let t = e.matchAll(n.state, 1e9).map((s) => {
    let { from: r, to: o } = s;
    return { from: r, to: o, insert: e.getReplacement(s) };
  });
  if (!t.length)
    return !1;
  let i = n.state.phrase("replaced $ matches", t.length) + ".";
  return n.dispatch({
    changes: t,
    effects: _e.announce.of(i),
    userEvent: "input.replace.all"
  }), !0;
});
function Jw(n) {
  return n.state.facet(hh).createPanel(n);
}
function MO(n, e) {
  var t, i, s, r, o;
  let l = n.selection.main, a = l.empty || l.to > l.from + 100 ? "" : n.sliceDoc(l.from, l.to);
  if (e && !a)
    return e;
  let c = n.facet(hh);
  return new jN({
    search: ((t = e == null ? void 0 : e.literal) !== null && t !== void 0 ? t : c.literal) ? a : a.replace(/\n/g, "\\n"),
    caseSensitive: (i = e == null ? void 0 : e.caseSensitive) !== null && i !== void 0 ? i : c.caseSensitive,
    literal: (s = e == null ? void 0 : e.literal) !== null && s !== void 0 ? s : c.literal,
    regexp: (r = e == null ? void 0 : e.regexp) !== null && r !== void 0 ? r : c.regexp,
    wholeWord: (o = e == null ? void 0 : e.wholeWord) !== null && o !== void 0 ? o : c.wholeWord
  });
}
function FN(n) {
  let e = Ud(n, Jw);
  return e && e.dom.querySelector("[main-field]");
}
function ZN(n) {
  let e = FN(n);
  e && e == n.root.activeElement && e.select();
}
const qN = (n) => {
  let e = n.state.field(El, !1);
  if (e && e.panel) {
    let t = FN(n);
    if (t && t != n.root.activeElement) {
      let i = MO(n.state, e.query.spec);
      i.valid && n.dispatch({ effects: ef.of(i) }), t.focus(), t.select();
    }
  } else
    n.dispatch({ effects: [
      Kw.of(!0),
      e ? ef.of(MO(n.state, e.query.spec)) : ct.appendConfig.of(Lhe)
    ] });
  return !0;
}, WN = (n) => {
  let e = n.state.field(El, !1);
  if (!e || !e.panel)
    return !1;
  let t = Ud(n, Jw);
  return t && t.dom.contains(n.root.activeElement) && n.focus(), n.dispatch({ effects: Kw.of(!1) }), !0;
}, Rhe = [
  { key: "Mod-f", run: qN, scope: "editor search-panel" },
  { key: "F3", run: km, shift: Pm, scope: "editor search-panel", preventDefault: !0 },
  { key: "Mod-g", run: km, shift: Pm, scope: "editor search-panel", preventDefault: !0 },
  { key: "Escape", run: WN, scope: "editor search-panel" },
  { key: "Mod-Shift-l", run: _he },
  { key: "Mod-Alt-g", run: hhe },
  { key: "Mod-d", run: xhe, preventDefault: !0 }
];
class Nhe {
  constructor(e) {
    this.view = e;
    let t = this.query = e.state.field(El).query.spec;
    this.commit = this.commit.bind(this), this.searchField = Ht("input", {
      value: t.search,
      placeholder: fs(e, "Find"),
      "aria-label": fs(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = Ht("input", {
      value: t.replace,
      placeholder: fs(e, "Replace"),
      "aria-label": fs(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = Ht("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: t.caseSensitive,
      onchange: this.commit
    }), this.reField = Ht("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: t.regexp,
      onchange: this.commit
    }), this.wordField = Ht("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: t.wholeWord,
      onchange: this.commit
    });
    function i(s, r, o) {
      return Ht("button", { class: "cm-button", name: s, onclick: r, type: "button" }, o);
    }
    this.dom = Ht("div", { onkeydown: (s) => this.keydown(s), class: "cm-search" }, [
      this.searchField,
      i("next", () => km(e), [fs(e, "next")]),
      i("prev", () => Pm(e), [fs(e, "previous")]),
      i("select", () => The(e), [fs(e, "all")]),
      Ht("label", null, [this.caseField, fs(e, "match case")]),
      Ht("label", null, [this.reField, fs(e, "regexp")]),
      Ht("label", null, [this.wordField, fs(e, "by word")]),
      ...e.state.readOnly ? [] : [
        Ht("br"),
        this.replaceField,
        i("replace", () => Y2(e), [fs(e, "replace")]),
        i("replaceAll", () => Mhe(e), [fs(e, "replace all")])
      ],
      Ht("button", {
        name: "close",
        onclick: () => WN(e),
        "aria-label": fs(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new jN({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: ef.of(e) }));
  }
  keydown(e) {
    Hle(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? Pm : km)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), Y2(this.view));
  }
  update(e) {
    for (let t of e.transactions)
      for (let i of t.effects)
        i.is(ef) && !i.value.eq(this.query) && this.setQuery(i.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(hh).top;
  }
}
function fs(n, e) {
  return n.state.phrase(e);
}
const Ep = 30, Ap = /[\s\.,:;?!]/;
function ex(n, { from: e, to: t }) {
  let i = n.state.doc.lineAt(e), s = n.state.doc.lineAt(t).to, r = Math.max(i.from, e - Ep), o = Math.min(s, t + Ep), l = n.state.sliceDoc(r, o);
  if (r != i.from) {
    for (let a = 0; a < Ep; a++)
      if (!Ap.test(l[a + 1]) && Ap.test(l[a])) {
        l = l.slice(a);
        break;
      }
  }
  if (o != s) {
    for (let a = l.length - 1; a > l.length - Ep; a--)
      if (!Ap.test(l[a - 1]) && Ap.test(l[a])) {
        l = l.slice(0, a);
        break;
      }
  }
  return _e.announce.of(`${n.state.phrase("current match")}. ${l} ${n.state.phrase("on line")} ${i.number}.`);
}
const Dhe = /* @__PURE__ */ _e.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), Lhe = [
  El,
  /* @__PURE__ */ sc.low($he),
  Dhe
];
class HN {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, t, i) {
    this.state = e, this.pos = t, this.explicit = i, this.abortListeners = [];
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let t = Qn(this.state).resolveInner(this.pos, -1);
    for (; t && e.indexOf(t.name) < 0; )
      t = t.parent;
    return t ? {
      from: t.from,
      to: this.pos,
      text: this.state.sliceDoc(t.from, this.pos),
      type: t.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let t = this.state.doc.lineAt(this.pos), i = Math.max(t.from, this.pos - 250), s = t.text.slice(i - t.from, this.pos - t.from), r = s.search(YN(e, !1));
    return r < 0 ? null : { from: i + r, to: this.pos, text: s.slice(r) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  */
  addEventListener(e, t) {
    e == "abort" && this.abortListeners && this.abortListeners.push(t);
  }
}
function U2(n) {
  let e = Object.keys(n).join(""), t = /\w/.test(e);
  return t && (e = e.replace(/\w/g, "")), `[${t ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function Ihe(n) {
  let e = /* @__PURE__ */ Object.create(null), t = /* @__PURE__ */ Object.create(null);
  for (let { label: s } of n) {
    e[s[0]] = !0;
    for (let r = 1; r < s.length; r++)
      t[s[r]] = !0;
  }
  let i = U2(e) + U2(t) + "*$";
  return [new RegExp("^" + i), new RegExp(i)];
}
function tx(n) {
  let e = n.map((s) => typeof s == "string" ? { label: s } : s), [t, i] = e.every((s) => /^\w+$/.test(s.label)) ? [/\w*$/, /\w+$/] : Ihe(e);
  return (s) => {
    let r = s.matchBefore(i);
    return r || s.explicit ? { from: r ? r.from : s.pos, options: e, validFor: t } : null;
  };
}
function XN(n, e) {
  return (t) => {
    for (let i = Qn(t.state).resolveInner(t.pos, -1); i; i = i.parent) {
      if (n.indexOf(i.name) > -1)
        return null;
      if (i.type.isTop)
        break;
    }
    return e(t);
  };
}
class G2 {
  constructor(e, t, i, s) {
    this.completion = e, this.source = t, this.match = i, this.score = s;
  }
}
function Al(n) {
  return n.selection.main.from;
}
function YN(n, e) {
  var t;
  let { source: i } = n, s = e && i[0] != "^", r = i[i.length - 1] != "$";
  return !s && !r ? n : new RegExp(`${s ? "^" : ""}(?:${i})${r ? "$" : ""}`, (t = n.flags) !== null && t !== void 0 ? t : n.ignoreCase ? "i" : "");
}
const UN = /* @__PURE__ */ Go.define();
function Bhe(n, e, t, i) {
  let { main: s } = n.selection, r = t - s.from, o = i - s.from;
  return Object.assign(Object.assign({}, n.changeByRange((l) => l != s && t != i && n.sliceDoc(l.from + r, l.from + o) != n.sliceDoc(t, i) ? { range: l } : {
    changes: { from: l.from + r, to: i == s.from ? l.to : l.from + o, insert: e },
    range: ue.cursor(l.from + r + e.length)
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const K2 = /* @__PURE__ */ new WeakMap();
function Qhe(n) {
  if (!Array.isArray(n))
    return n;
  let e = K2.get(n);
  return e || K2.set(n, e = tx(n)), e;
}
const Em = /* @__PURE__ */ ct.define(), tf = /* @__PURE__ */ ct.define();
class zhe {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let t = 0; t < e.length; ) {
      let i = bi(e, t), s = zs(i);
      this.chars.push(i);
      let r = e.slice(t, t + s), o = r.toUpperCase();
      this.folded.push(bi(o == r ? r.toLowerCase() : o, 0)), t += s;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, t) {
    return this.score = e, this.matched = t, !0;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return !1;
    let { chars: t, folded: i, any: s, precise: r, byWord: o } = this;
    if (t.length == 1) {
      let O = bi(e, 0), b = zs(O), w = b == e.length ? 0 : -100;
      if (O != t[0])
        if (O == i[0])
          w += -200;
        else
          return !1;
      return this.ret(w, [0, b]);
    }
    let l = e.indexOf(this.pattern);
    if (l == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let a = t.length, c = 0;
    if (l < 0) {
      for (let O = 0, b = Math.min(e.length, 200); O < b && c < a; ) {
        let w = bi(e, O);
        (w == t[c] || w == i[c]) && (s[c++] = O), O += zs(w);
      }
      if (c < a)
        return !1;
    }
    let u = 0, h = 0, d = !1, f = 0, p = -1, g = -1, m = /[a-z]/.test(e), v = !0;
    for (let O = 0, b = Math.min(e.length, 200), w = 0; O < b && h < a; ) {
      let x = bi(e, O);
      l < 0 && (u < a && x == t[u] && (r[u++] = O), f < a && (x == t[f] || x == i[f] ? (f == 0 && (p = O), g = O + 1, f++) : f = 0));
      let S, C = x < 255 ? x >= 48 && x <= 57 || x >= 97 && x <= 122 ? 2 : x >= 65 && x <= 90 ? 1 : 0 : (S = Pw(x)) != S.toLowerCase() ? 1 : S != S.toUpperCase() ? 2 : 0;
      (!O || C == 1 && m || w == 0 && C != 0) && (t[h] == x || i[h] == x && (d = !0) ? o[h++] = O : o.length && (v = !1)), w = C, O += zs(x);
    }
    return h == a && o[0] == 0 && v ? this.result(-100 + (d ? -200 : 0), o, e) : f == a && p == 0 ? this.ret(-200 - e.length + (g == e.length ? 0 : -100), [0, g]) : l > -1 ? this.ret(-700 - e.length, [l, l + this.pattern.length]) : f == a ? this.ret(-900 - e.length, [p, g]) : h == a ? this.result(-100 + (d ? -200 : 0) + -700 + (v ? 0 : -1100), o, e) : t.length == 2 ? !1 : this.result((s[0] ? -700 : 0) + -200 + -1100, s, e);
  }
  result(e, t, i) {
    let s = [], r = 0;
    for (let o of t) {
      let l = o + (this.astral ? zs(bi(i, o)) : 1);
      r && s[r - 1] == o ? s[r - 1] = l : (s[r++] = o, s[r++] = l);
    }
    return this.ret(e - i.length, s);
  }
}
const xi = /* @__PURE__ */ Me.define({
  combine(n) {
    return bo(n, {
      activateOnTyping: !0,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: jhe,
      compareCompletions: (e, t) => e.label.localeCompare(t.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, t) => e && t,
      closeOnBlur: (e, t) => e && t,
      icons: (e, t) => e && t,
      tooltipClass: (e, t) => (i) => J2(e(i), t(i)),
      optionClass: (e, t) => (i) => J2(e(i), t(i)),
      addToOptions: (e, t) => e.concat(t)
    });
  }
});
function J2(n, e) {
  return n ? e ? n + " " + e : n : e;
}
function jhe(n, e, t, i, s, r) {
  let o = n.textDirection == nn.RTL, l = o, a = !1, c = "top", u, h, d = e.left - s.left, f = s.right - e.right, p = i.right - i.left, g = i.bottom - i.top;
  if (l && d < Math.min(p, f) ? l = !1 : !l && f < Math.min(p, d) && (l = !0), p <= (l ? d : f))
    u = Math.max(s.top, Math.min(t.top, s.bottom - g)) - e.top, h = Math.min(400, l ? d : f);
  else {
    a = !0, h = Math.min(
      400,
      (o ? e.right : s.right - e.left) - 30
      /* Info.Margin */
    );
    let O = s.bottom - e.bottom;
    O >= g || O > e.top ? u = t.bottom - e.top : (c = "bottom", u = e.bottom - t.top);
  }
  let m = (e.bottom - e.top) / r.offsetHeight, v = (e.right - e.left) / r.offsetWidth;
  return {
    style: `${c}: ${u / m}px; max-width: ${h / v}px`,
    class: "cm-completionInfo-" + (a ? o ? "left-narrow" : "right-narrow" : l ? "left" : "right")
  };
}
function Vhe(n) {
  let e = n.addToOptions.slice();
  return n.icons && e.push({
    render(t) {
      let i = document.createElement("div");
      return i.classList.add("cm-completionIcon"), t.type && i.classList.add(...t.type.split(/\s+/g).map((s) => "cm-completionIcon-" + s)), i.setAttribute("aria-hidden", "true"), i;
    },
    position: 20
  }), e.push({
    render(t, i, s, r) {
      let o = document.createElement("span");
      o.className = "cm-completionLabel";
      let l = t.displayLabel || t.label, a = 0;
      for (let c = 0; c < r.length; ) {
        let u = r[c++], h = r[c++];
        u > a && o.appendChild(document.createTextNode(l.slice(a, u)));
        let d = o.appendChild(document.createElement("span"));
        d.appendChild(document.createTextNode(l.slice(u, h))), d.className = "cm-completionMatchedText", a = h;
      }
      return a < l.length && o.appendChild(document.createTextNode(l.slice(a))), o;
    },
    position: 50
  }, {
    render(t) {
      if (!t.detail)
        return null;
      let i = document.createElement("span");
      return i.className = "cm-completionDetail", i.textContent = t.detail, i;
    },
    position: 80
  }), e.sort((t, i) => t.position - i.position).map((t) => t.render);
}
function Uv(n, e, t) {
  if (n <= t)
    return { from: 0, to: n };
  if (e < 0 && (e = 0), e <= n >> 1) {
    let s = Math.floor(e / t);
    return { from: s * t, to: (s + 1) * t };
  }
  let i = Math.floor((n - e) / t);
  return { from: n - (i + 1) * t, to: n - i * t };
}
class Fhe {
  constructor(e, t, i) {
    this.view = e, this.stateField = t, this.applyCompletion = i, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (a) => this.placeInfo(a),
      key: this
    }, this.space = null, this.currentClass = "";
    let s = e.state.field(t), { options: r, selected: o } = s.open, l = e.state.facet(xi);
    this.optionContent = Vhe(l), this.optionClass = l.optionClass, this.tooltipClass = l.tooltipClass, this.range = Uv(r.length, o, l.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (a) => {
      let { options: c } = e.state.field(t).open;
      for (let u = a.target, h; u && u != this.dom; u = u.parentNode)
        if (u.nodeName == "LI" && (h = /-(\d+)$/.exec(u.id)) && +h[1] < c.length) {
          this.applyCompletion(e, c[+h[1]]), a.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (a) => {
      let c = e.state.field(this.stateField, !1);
      c && c.tooltip && e.state.facet(xi).closeOnBlur && a.relatedTarget != e.contentDOM && e.dispatch({ effects: tf.of(null) });
    }), this.showOptions(r, s.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, t) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, t, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var t;
    let i = e.state.field(this.stateField), s = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), i != s) {
      let { options: r, selected: o, disabled: l } = i.open;
      (!s.open || s.open.options != r) && (this.range = Uv(r.length, o, e.state.facet(xi).maxRenderedOptions), this.showOptions(r, i.id)), this.updateSel(), l != ((t = s.open) === null || t === void 0 ? void 0 : t.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!l);
    }
  }
  updateTooltipClass(e) {
    let t = this.tooltipClass(e);
    if (t != this.currentClass) {
      for (let i of this.currentClass.split(" "))
        i && this.dom.classList.remove(i);
      for (let i of t.split(" "))
        i && this.dom.classList.add(i);
      this.currentClass = t;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), t = e.open;
    if ((t.selected > -1 && t.selected < this.range.from || t.selected >= this.range.to) && (this.range = Uv(t.options.length, t.selected, this.view.state.facet(xi).maxRenderedOptions), this.showOptions(t.options, e.id)), this.updateSelectedOption(t.selected)) {
      this.destroyInfo();
      let { completion: i } = t.options[t.selected], { info: s } = i;
      if (!s)
        return;
      let r = typeof s == "string" ? document.createTextNode(s) : s(i);
      if (!r)
        return;
      "then" in r ? r.then((o) => {
        o && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(o, i);
      }).catch((o) => Zs(this.view.state, o, "completion info")) : this.addInfoPane(r, i);
    }
  }
  addInfoPane(e, t) {
    this.destroyInfo();
    let i = this.info = document.createElement("div");
    if (i.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      i.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: s, destroy: r } = e;
      i.appendChild(s), this.infoDestroy = r || null;
    }
    this.dom.appendChild(i), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let t = null;
    for (let i = this.list.firstChild, s = this.range.from; i; i = i.nextSibling, s++)
      i.nodeName != "LI" || !i.id ? s-- : s == e ? i.hasAttribute("aria-selected") || (i.setAttribute("aria-selected", "true"), t = i) : i.hasAttribute("aria-selected") && i.removeAttribute("aria-selected");
    return t && qhe(this.list, t), t;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let t = this.dom.getBoundingClientRect(), i = this.info.getBoundingClientRect(), s = e.getBoundingClientRect(), r = this.space;
    if (!r) {
      let o = this.dom.ownerDocument.defaultView || window;
      r = { left: 0, top: 0, right: o.innerWidth, bottom: o.innerHeight };
    }
    return s.top > Math.min(r.bottom, t.bottom) - 10 || s.bottom < Math.max(r.top, t.top) + 10 ? null : this.view.state.facet(xi).positionInfo(this.view, t, s, i, r, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, t, i) {
    const s = document.createElement("ul");
    s.id = t, s.setAttribute("role", "listbox"), s.setAttribute("aria-expanded", "true"), s.setAttribute("aria-label", this.view.state.phrase("Completions"));
    let r = null;
    for (let o = i.from; o < i.to; o++) {
      let { completion: l, match: a } = e[o], { section: c } = l;
      if (c) {
        let d = typeof c == "string" ? c : c.name;
        if (d != r && (o > i.from || i.from == 0))
          if (r = d, typeof c != "string" && c.header)
            s.appendChild(c.header(c));
          else {
            let f = s.appendChild(document.createElement("completion-section"));
            f.textContent = d;
          }
      }
      const u = s.appendChild(document.createElement("li"));
      u.id = t + "-" + o, u.setAttribute("role", "option");
      let h = this.optionClass(l);
      h && (u.className = h);
      for (let d of this.optionContent) {
        let f = d(l, this.view.state, this.view, a);
        f && u.appendChild(f);
      }
    }
    return i.from && s.classList.add("cm-completionListIncompleteTop"), i.to < e.length && s.classList.add("cm-completionListIncompleteBottom"), s;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function Zhe(n, e) {
  return (t) => new Fhe(t, n, e);
}
function qhe(n, e) {
  let t = n.getBoundingClientRect(), i = e.getBoundingClientRect(), s = t.height / n.offsetHeight;
  i.top < t.top ? n.scrollTop -= (t.top - i.top) / s : i.bottom > t.bottom && (n.scrollTop += (i.bottom - t.bottom) / s);
}
function eP(n) {
  return (n.boost || 0) * 100 + (n.apply ? 10 : 0) + (n.info ? 5 : 0) + (n.type ? 1 : 0);
}
function Whe(n, e) {
  let t = [], i = null, s = (a) => {
    t.push(a);
    let { section: c } = a.completion;
    if (c) {
      i || (i = []);
      let u = typeof c == "string" ? c : c.name;
      i.some((h) => h.name == u) || i.push(typeof c == "string" ? { name: u } : c);
    }
  };
  for (let a of n)
    if (a.hasResult()) {
      let c = a.result.getMatch;
      if (a.result.filter === !1)
        for (let u of a.result.options)
          s(new G2(u, a.source, c ? c(u) : [], 1e9 - t.length));
      else {
        let u = new zhe(e.sliceDoc(a.from, a.to));
        for (let h of a.result.options)
          if (u.match(h.label)) {
            let d = h.displayLabel ? c ? c(h, u.matched) : [] : u.matched;
            s(new G2(h, a.source, d, u.score + (h.boost || 0)));
          }
      }
    }
  if (i) {
    let a = /* @__PURE__ */ Object.create(null), c = 0, u = (h, d) => {
      var f, p;
      return ((f = h.rank) !== null && f !== void 0 ? f : 1e9) - ((p = d.rank) !== null && p !== void 0 ? p : 1e9) || (h.name < d.name ? -1 : 1);
    };
    for (let h of i.sort(u))
      c -= 1e5, a[h.name] = c;
    for (let h of t) {
      let { section: d } = h.completion;
      d && (h.score += a[typeof d == "string" ? d : d.name]);
    }
  }
  let r = [], o = null, l = e.facet(xi).compareCompletions;
  for (let a of t.sort((c, u) => u.score - c.score || l(c.completion, u.completion))) {
    let c = a.completion;
    !o || o.label != c.label || o.detail != c.detail || o.type != null && c.type != null && o.type != c.type || o.apply != c.apply || o.boost != c.boost ? r.push(a) : eP(a.completion) > eP(o) && (r[r.length - 1] = a), o = a.completion;
  }
  return r;
}
class Tc {
  constructor(e, t, i, s, r, o) {
    this.options = e, this.attrs = t, this.tooltip = i, this.timestamp = s, this.selected = r, this.disabled = o;
  }
  setSelected(e, t) {
    return e == this.selected || e >= this.options.length ? this : new Tc(this.options, tP(t, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, t, i, s, r) {
    let o = Whe(e, t);
    if (!o.length)
      return s && e.some(
        (a) => a.state == 1
        /* State.Pending */
      ) ? new Tc(s.options, s.attrs, s.tooltip, s.timestamp, s.selected, !0) : null;
    let l = t.facet(xi).selectOnOpen ? 0 : -1;
    if (s && s.selected != l && s.selected != -1) {
      let a = s.options[s.selected].completion;
      for (let c = 0; c < o.length; c++)
        if (o[c].completion == a) {
          l = c;
          break;
        }
    }
    return new Tc(o, tP(i, l), {
      pos: e.reduce((a, c) => c.hasResult() ? Math.min(a, c.from) : a, 1e8),
      create: Ghe,
      above: r.aboveCursor
    }, s ? s.timestamp : Date.now(), l, !1);
  }
  map(e) {
    return new Tc(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
}
class Am {
  constructor(e, t, i) {
    this.active = e, this.id = t, this.open = i;
  }
  static start() {
    return new Am(Yhe, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: t } = e, i = t.facet(xi), r = (i.override || t.languageDataAt("autocomplete", Al(t)).map(Qhe)).map((l) => (this.active.find((c) => c.source == l) || new ns(
      l,
      this.active.some(
        (c) => c.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, i));
    r.length == this.active.length && r.every((l, a) => l == this.active[a]) && (r = this.active);
    let o = this.open;
    o && e.docChanged && (o = o.map(e.changes)), e.selection || r.some((l) => l.hasResult() && e.changes.touchesRange(l.from, l.to)) || !Hhe(r, this.active) ? o = Tc.build(r, t, this.id, o, i) : o && o.disabled && !r.some(
      (l) => l.state == 1
      /* State.Pending */
    ) && (o = null), !o && r.every(
      (l) => l.state != 1
      /* State.Pending */
    ) && r.some((l) => l.hasResult()) && (r = r.map((l) => l.hasResult() ? new ns(
      l.source,
      0
      /* State.Inactive */
    ) : l));
    for (let l of e.effects)
      l.is(KN) && (o = o && o.setSelected(l.value, this.id));
    return r == this.active && o == this.open ? this : new Am(r, this.id, o);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : Xhe;
  }
}
function Hhe(n, e) {
  if (n == e)
    return !0;
  for (let t = 0, i = 0; ; ) {
    for (; t < n.length && !n[t].hasResult; )
      t++;
    for (; i < e.length && !e[i].hasResult; )
      i++;
    let s = t == n.length, r = i == e.length;
    if (s || r)
      return s == r;
    if (n[t++].result != e[i++].result)
      return !1;
  }
}
const Xhe = {
  "aria-autocomplete": "list"
};
function tP(n, e) {
  let t = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": n
  };
  return e > -1 && (t["aria-activedescendant"] = n + "-" + e), t;
}
const Yhe = [];
function RO(n) {
  return n.isUserEvent("input.type") ? "input" : n.isUserEvent("delete.backward") ? "delete" : null;
}
class ns {
  constructor(e, t, i = -1) {
    this.source = e, this.state = t, this.explicitPos = i;
  }
  hasResult() {
    return !1;
  }
  update(e, t) {
    let i = RO(e), s = this;
    i ? s = s.handleUserEvent(e, i, t) : e.docChanged ? s = s.handleChange(e) : e.selection && s.state != 0 && (s = new ns(
      s.source,
      0
      /* State.Inactive */
    ));
    for (let r of e.effects)
      if (r.is(Em))
        s = new ns(s.source, 1, r.value ? Al(e.state) : -1);
      else if (r.is(tf))
        s = new ns(
          s.source,
          0
          /* State.Inactive */
        );
      else if (r.is(GN))
        for (let o of r.value)
          o.source == s.source && (s = o);
    return s;
  }
  handleUserEvent(e, t, i) {
    return t == "delete" || !i.activateOnTyping ? this.map(e.changes) : new ns(
      this.source,
      1
      /* State.Pending */
    );
  }
  handleChange(e) {
    return e.changes.touchesRange(Al(e.startState)) ? new ns(
      this.source,
      0
      /* State.Inactive */
    ) : this.map(e.changes);
  }
  map(e) {
    return e.empty || this.explicitPos < 0 ? this : new ns(this.source, this.state, e.mapPos(this.explicitPos));
  }
}
class qc extends ns {
  constructor(e, t, i, s, r) {
    super(e, 2, t), this.result = i, this.from = s, this.to = r;
  }
  hasResult() {
    return !0;
  }
  handleUserEvent(e, t, i) {
    var s;
    let r = e.changes.mapPos(this.from), o = e.changes.mapPos(this.to, 1), l = Al(e.state);
    if ((this.explicitPos < 0 ? l <= r : l < this.from) || l > o || t == "delete" && Al(e.startState) == this.from)
      return new ns(
        this.source,
        t == "input" && i.activateOnTyping ? 1 : 0
        /* State.Inactive */
      );
    let a = this.explicitPos < 0 ? -1 : e.changes.mapPos(this.explicitPos), c;
    return Uhe(this.result.validFor, e.state, r, o) ? new qc(this.source, a, this.result, r, o) : this.result.update && (c = this.result.update(this.result, r, o, new HN(e.state, l, a >= 0))) ? new qc(this.source, a, c, c.from, (s = c.to) !== null && s !== void 0 ? s : Al(e.state)) : new ns(this.source, 1, a);
  }
  handleChange(e) {
    return e.changes.touchesRange(this.from, this.to) ? new ns(
      this.source,
      0
      /* State.Inactive */
    ) : this.map(e.changes);
  }
  map(e) {
    return e.empty ? this : new qc(this.source, this.explicitPos < 0 ? -1 : e.mapPos(this.explicitPos), this.result, e.mapPos(this.from), e.mapPos(this.to, 1));
  }
}
function Uhe(n, e, t, i) {
  if (!n)
    return !1;
  let s = e.sliceDoc(t, i);
  return typeof n == "function" ? n(s, t, i, e) : YN(n, !0).test(s);
}
const GN = /* @__PURE__ */ ct.define({
  map(n, e) {
    return n.map((t) => t.map(e));
  }
}), KN = /* @__PURE__ */ ct.define(), xs = /* @__PURE__ */ ui.define({
  create() {
    return Am.start();
  },
  update(n, e) {
    return n.update(e);
  },
  provide: (n) => [
    Bw.from(n, (e) => e.tooltip),
    _e.contentAttributes.from(n, (e) => e.attrs)
  ]
});
function JN(n, e) {
  const t = e.completion.apply || e.completion.label;
  let i = n.state.field(xs).active.find((s) => s.source == e.source);
  return i instanceof qc ? (typeof t == "string" ? n.dispatch(Object.assign(Object.assign({}, Bhe(n.state, t, i.from, i.to)), { annotations: UN.of(e.completion) })) : t(n, e.completion, i.from, i.to), !0) : !1;
}
const Ghe = /* @__PURE__ */ Zhe(xs, JN);
function $p(n, e = "option") {
  return (t) => {
    let i = t.state.field(xs, !1);
    if (!i || !i.open || i.open.disabled || Date.now() - i.open.timestamp < t.state.facet(xi).interactionDelay)
      return !1;
    let s = 1, r;
    e == "page" && (r = N3(t, i.open.tooltip)) && (s = Math.max(2, Math.floor(r.dom.offsetHeight / r.dom.querySelector("li").offsetHeight) - 1));
    let { length: o } = i.open.options, l = i.open.selected > -1 ? i.open.selected + s * (n ? 1 : -1) : n ? 0 : o - 1;
    return l < 0 ? l = e == "page" ? 0 : o - 1 : l >= o && (l = e == "page" ? o - 1 : 0), t.dispatch({ effects: KN.of(l) }), !0;
  };
}
const Khe = (n) => {
  let e = n.state.field(xs, !1);
  return n.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < n.state.facet(xi).interactionDelay ? !1 : JN(n, e.open.options[e.open.selected]);
}, Jhe = (n) => n.state.field(xs, !1) ? (n.dispatch({ effects: Em.of(!0) }), !0) : !1, ede = (n) => {
  let e = n.state.field(xs, !1);
  return !e || !e.active.some(
    (t) => t.state != 0
    /* State.Inactive */
  ) ? !1 : (n.dispatch({ effects: tf.of(null) }), !0);
};
class tde {
  constructor(e, t) {
    this.active = e, this.context = t, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const nde = 50, ide = 1e3, sde = /* @__PURE__ */ Bn.fromClass(class {
  constructor(n) {
    this.view = n, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of n.state.field(xs).active)
      e.state == 1 && this.startQuery(e);
  }
  update(n) {
    let e = n.state.field(xs);
    if (!n.selectionSet && !n.docChanged && n.startState.field(xs) == e)
      return;
    let t = n.transactions.some((s) => (s.selection || s.docChanged) && !RO(s));
    for (let s = 0; s < this.running.length; s++) {
      let r = this.running[s];
      if (t || r.updates.length + n.transactions.length > nde && Date.now() - r.time > ide) {
        for (let o of r.context.abortListeners)
          try {
            o();
          } catch (l) {
            Zs(this.view.state, l);
          }
        r.context.abortListeners = null, this.running.splice(s--, 1);
      } else
        r.updates.push(...n.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), n.transactions.some((s) => s.effects.some((r) => r.is(Em))) && (this.pendingStart = !0);
    let i = this.pendingStart ? 50 : n.state.facet(xi).activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((s) => s.state == 1 && !this.running.some((r) => r.active.source == s.source)) ? setTimeout(() => this.startUpdate(), i) : -1, this.composing != 0)
      for (let s of n.transactions)
        RO(s) == "input" ? this.composing = 2 : this.composing == 2 && s.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: n } = this.view, e = n.field(xs);
    for (let t of e.active)
      t.state == 1 && !this.running.some((i) => i.active.source == t.source) && this.startQuery(t);
  }
  startQuery(n) {
    let { state: e } = this.view, t = Al(e), i = new HN(e, t, n.explicitPos == t), s = new tde(n, i);
    this.running.push(s), Promise.resolve(n.source(i)).then((r) => {
      s.context.aborted || (s.done = r || null, this.scheduleAccept());
    }, (r) => {
      this.view.dispatch({ effects: tf.of(null) }), Zs(this.view.state, r);
    });
  }
  scheduleAccept() {
    this.running.every((n) => n.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(xi).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var n;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], t = this.view.state.facet(xi);
    for (let i = 0; i < this.running.length; i++) {
      let s = this.running[i];
      if (s.done === void 0)
        continue;
      if (this.running.splice(i--, 1), s.done) {
        let o = new qc(s.active.source, s.active.explicitPos, s.done, s.done.from, (n = s.done.to) !== null && n !== void 0 ? n : Al(s.updates.length ? s.updates[0].startState : this.view.state));
        for (let l of s.updates)
          o = o.update(l, t);
        if (o.hasResult()) {
          e.push(o);
          continue;
        }
      }
      let r = this.view.state.field(xs).active.find((o) => o.source == s.active.source);
      if (r && r.state == 1)
        if (s.done == null) {
          let o = new ns(
            s.active.source,
            0
            /* State.Inactive */
          );
          for (let l of s.updates)
            o = o.update(l, t);
          o.state != 1 && e.push(o);
        } else
          this.startQuery(r);
    }
    e.length && this.view.dispatch({ effects: GN.of(e) });
  }
}, {
  eventHandlers: {
    blur(n) {
      let e = this.view.state.field(xs, !1);
      if (e && e.tooltip && this.view.state.facet(xi).closeOnBlur) {
        let t = e.open && N3(this.view, e.open.tooltip);
        (!t || !t.dom.contains(n.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: tf.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: Em.of(!1) }), 20), this.composing = 0;
    }
  }
}), eD = /* @__PURE__ */ _e.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
});
class rde {
  constructor(e, t, i, s) {
    this.field = e, this.line = t, this.from = i, this.to = s;
  }
}
class nx {
  constructor(e, t, i) {
    this.field = e, this.from = t, this.to = i;
  }
  map(e) {
    let t = e.mapPos(this.from, -1, wi.TrackDel), i = e.mapPos(this.to, 1, wi.TrackDel);
    return t == null || i == null ? null : new nx(this.field, t, i);
  }
}
class ix {
  constructor(e, t) {
    this.lines = e, this.fieldPositions = t;
  }
  instantiate(e, t) {
    let i = [], s = [t], r = e.doc.lineAt(t), o = /^\s*/.exec(r.text)[0];
    for (let a of this.lines) {
      if (i.length) {
        let c = o, u = /^\t*/.exec(a)[0].length;
        for (let h = 0; h < u; h++)
          c += e.facet(E0);
        s.push(t + c.length - u), a = c + a.slice(u);
      }
      i.push(a), t += a.length + 1;
    }
    let l = this.fieldPositions.map((a) => new nx(a.field, s[a.line] + a.from, s[a.line] + a.to));
    return { text: i, ranges: l };
  }
  static parse(e) {
    let t = [], i = [], s = [], r;
    for (let o of e.split(/\r\n?|\n/)) {
      for (; r = /[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(o); ) {
        let l = r[1] ? +r[1] : null, a = r[2] || r[3] || "", c = -1;
        for (let u = 0; u < t.length; u++)
          (l != null ? t[u].seq == l : a && t[u].name == a) && (c = u);
        if (c < 0) {
          let u = 0;
          for (; u < t.length && (l == null || t[u].seq != null && t[u].seq < l); )
            u++;
          t.splice(u, 0, { seq: l, name: a }), c = u;
          for (let h of s)
            h.field >= c && h.field++;
        }
        s.push(new rde(c, i.length, r.index, r.index + a.length)), o = o.slice(0, r.index) + a + o.slice(r.index + r[0].length);
      }
      for (let l; l = /\\([{}])/.exec(o); ) {
        o = o.slice(0, l.index) + l[1] + o.slice(l.index + l[0].length);
        for (let a of s)
          a.line == i.length && a.from > l.index && (a.from--, a.to--);
      }
      i.push(o);
    }
    return new ix(i, s);
  }
}
let ode = /* @__PURE__ */ He.widget({ widget: /* @__PURE__ */ new class extends Ko {
  toDOM() {
    let n = document.createElement("span");
    return n.className = "cm-snippetFieldPosition", n;
  }
  ignoreEvent() {
    return !1;
  }
}() }), lde = /* @__PURE__ */ He.mark({ class: "cm-snippetField" });
class dh {
  constructor(e, t) {
    this.ranges = e, this.active = t, this.deco = He.set(e.map((i) => (i.from == i.to ? ode : lde).range(i.from, i.to)));
  }
  map(e) {
    let t = [];
    for (let i of this.ranges) {
      let s = i.map(e);
      if (!s)
        return null;
      t.push(s);
    }
    return new dh(t, this.active);
  }
  selectionInsideField(e) {
    return e.ranges.every((t) => this.ranges.some((i) => i.field == this.active && i.from <= t.from && i.to >= t.to));
  }
}
const Nf = /* @__PURE__ */ ct.define({
  map(n, e) {
    return n && n.map(e);
  }
}), ade = /* @__PURE__ */ ct.define(), nf = /* @__PURE__ */ ui.define({
  create() {
    return null;
  },
  update(n, e) {
    for (let t of e.effects) {
      if (t.is(Nf))
        return t.value;
      if (t.is(ade) && n)
        return new dh(n.ranges, t.value);
    }
    return n && e.docChanged && (n = n.map(e.changes)), n && e.selection && !n.selectionInsideField(e.selection) && (n = null), n;
  },
  provide: (n) => _e.decorations.from(n, (e) => e ? e.deco : He.none)
});
function sx(n, e) {
  return ue.create(n.filter((t) => t.field == e).map((t) => ue.range(t.from, t.to)));
}
function cde(n) {
  let e = ix.parse(n);
  return (t, i, s, r) => {
    let { text: o, ranges: l } = e.instantiate(t.state, s), a = {
      changes: { from: s, to: r, insert: $t.of(o) },
      scrollIntoView: !0,
      annotations: i ? [UN.of(i), Nn.userEvent.of("input.complete")] : void 0
    };
    if (l.length && (a.selection = sx(l, 0)), l.some((c) => c.field > 0)) {
      let c = new dh(l, 0), u = a.effects = [Nf.of(c)];
      t.state.field(nf, !1) === void 0 && u.push(ct.appendConfig.of([nf, pde, gde, eD]));
    }
    t.dispatch(t.state.update(a));
  };
}
function tD(n) {
  return ({ state: e, dispatch: t }) => {
    let i = e.field(nf, !1);
    if (!i || n < 0 && i.active == 0)
      return !1;
    let s = i.active + n, r = n > 0 && !i.ranges.some((o) => o.field == s + n);
    return t(e.update({
      selection: sx(i.ranges, s),
      effects: Nf.of(r ? null : new dh(i.ranges, s)),
      scrollIntoView: !0
    })), !0;
  };
}
const ude = ({ state: n, dispatch: e }) => n.field(nf, !1) ? (e(n.update({ effects: Nf.of(null) })), !0) : !1, hde = /* @__PURE__ */ tD(1), dde = /* @__PURE__ */ tD(-1), fde = [
  { key: "Tab", run: hde, shift: dde },
  { key: "Escape", run: ude }
], nP = /* @__PURE__ */ Me.define({
  combine(n) {
    return n.length ? n[0] : fde;
  }
}), pde = /* @__PURE__ */ sc.highest(/* @__PURE__ */ C0.compute([nP], (n) => n.facet(nP)));
function es(n, e) {
  return Object.assign(Object.assign({}, e), { apply: cde(n) });
}
const gde = /* @__PURE__ */ _e.domEventHandlers({
  mousedown(n, e) {
    let t = e.state.field(nf, !1), i;
    if (!t || (i = e.posAtCoords({ x: n.clientX, y: n.clientY })) == null)
      return !1;
    let s = t.ranges.find((r) => r.from <= i && r.to >= i);
    return !s || s.field == t.active ? !1 : (e.dispatch({
      selection: sx(t.ranges, s.field),
      effects: Nf.of(t.ranges.some((r) => r.field > s.field) ? new dh(t.ranges, s.field) : null),
      scrollIntoView: !0
    }), !0);
  }
}), sf = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, Sa = /* @__PURE__ */ ct.define({
  map(n, e) {
    let t = e.mapPos(n, -1, wi.TrackAfter);
    return t ?? void 0;
  }
}), rx = /* @__PURE__ */ new class extends qa {
}();
rx.startSide = 1;
rx.endSide = -1;
const nD = /* @__PURE__ */ ui.define({
  create() {
    return kt.empty;
  },
  update(n, e) {
    if (n = n.map(e.changes), e.selection) {
      let t = e.state.doc.lineAt(e.selection.main.head);
      n = n.update({ filter: (i) => i >= t.from && i <= t.to });
    }
    for (let t of e.effects)
      t.is(Sa) && (n = n.update({ add: [rx.range(t.value, t.value + 1)] }));
    return n;
  }
});
function mde() {
  return [bde, nD];
}
const Gv = "()[]{}<>";
function iD(n) {
  for (let e = 0; e < Gv.length; e += 2)
    if (Gv.charCodeAt(e) == n)
      return Gv.charAt(e + 1);
  return Pw(n < 128 ? n : n + 1);
}
function sD(n, e) {
  return n.languageDataAt("closeBrackets", e)[0] || sf;
}
const vde = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), bde = /* @__PURE__ */ _e.inputHandler.of((n, e, t, i) => {
  if ((vde ? n.composing : n.compositionStarted) || n.state.readOnly)
    return !1;
  let s = n.state.selection.main;
  if (i.length > 2 || i.length == 2 && zs(bi(i, 0)) == 1 || e != s.from || t != s.to)
    return !1;
  let r = wde(n.state, i);
  return r ? (n.dispatch(r), !0) : !1;
}), yde = ({ state: n, dispatch: e }) => {
  if (n.readOnly)
    return !1;
  let i = sD(n, n.selection.main.head).brackets || sf.brackets, s = null, r = n.changeByRange((o) => {
    if (o.empty) {
      let l = xde(n.doc, o.head);
      for (let a of i)
        if (a == l && I0(n.doc, o.head) == iD(bi(a, 0)))
          return {
            changes: { from: o.head - a.length, to: o.head + a.length },
            range: ue.cursor(o.head - a.length)
          };
    }
    return { range: s = o };
  });
  return s || e(n.update(r, { scrollIntoView: !0, userEvent: "delete.backward" })), !s;
}, Ode = [
  { key: "Backspace", run: yde }
];
function wde(n, e) {
  let t = sD(n, n.selection.main.head), i = t.brackets || sf.brackets;
  for (let s of i) {
    let r = iD(bi(s, 0));
    if (e == s)
      return r == s ? kde(n, s, i.indexOf(s + s + s) > -1, t) : Sde(n, s, r, t.before || sf.before);
    if (e == r && rD(n, n.selection.main.from))
      return Cde(n, s, r);
  }
  return null;
}
function rD(n, e) {
  let t = !1;
  return n.field(nD).between(0, n.doc.length, (i) => {
    i == e && (t = !0);
  }), t;
}
function I0(n, e) {
  let t = n.sliceString(e, e + 2);
  return t.slice(0, zs(bi(t, 0)));
}
function xde(n, e) {
  let t = n.sliceString(e - 2, e);
  return zs(bi(t, 0)) == t.length ? t : t.slice(1);
}
function Sde(n, e, t, i) {
  let s = null, r = n.changeByRange((o) => {
    if (!o.empty)
      return {
        changes: [{ insert: e, from: o.from }, { insert: t, from: o.to }],
        effects: Sa.of(o.to + e.length),
        range: ue.range(o.anchor + e.length, o.head + e.length)
      };
    let l = I0(n.doc, o.head);
    return !l || /\s/.test(l) || i.indexOf(l) > -1 ? {
      changes: { insert: e + t, from: o.head },
      effects: Sa.of(o.head + e.length),
      range: ue.cursor(o.head + e.length)
    } : { range: s = o };
  });
  return s ? null : n.update(r, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function Cde(n, e, t) {
  let i = null, s = n.changeByRange((r) => r.empty && I0(n.doc, r.head) == t ? {
    changes: { from: r.head, to: r.head + t.length, insert: t },
    range: ue.cursor(r.head + t.length)
  } : i = { range: r });
  return i ? null : n.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function kde(n, e, t, i) {
  let s = i.stringPrefixes || sf.stringPrefixes, r = null, o = n.changeByRange((l) => {
    if (!l.empty)
      return {
        changes: [{ insert: e, from: l.from }, { insert: e, from: l.to }],
        effects: Sa.of(l.to + e.length),
        range: ue.range(l.anchor + e.length, l.head + e.length)
      };
    let a = l.head, c = I0(n.doc, a), u;
    if (c == e) {
      if (iP(n, a))
        return {
          changes: { insert: e + e, from: a },
          effects: Sa.of(a + e.length),
          range: ue.cursor(a + e.length)
        };
      if (rD(n, a)) {
        let d = t && n.sliceDoc(a, a + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: a, to: a + d.length, insert: d },
          range: ue.cursor(a + d.length)
        };
      }
    } else {
      if (t && n.sliceDoc(a - 2 * e.length, a) == e + e && (u = sP(n, a - 2 * e.length, s)) > -1 && iP(n, u))
        return {
          changes: { insert: e + e + e + e, from: a },
          effects: Sa.of(a + e.length),
          range: ue.cursor(a + e.length)
        };
      if (n.charCategorizer(a)(c) != an.Word && sP(n, a, s) > -1 && !Pde(n, a, e, s))
        return {
          changes: { insert: e + e, from: a },
          effects: Sa.of(a + e.length),
          range: ue.cursor(a + e.length)
        };
    }
    return { range: r = l };
  });
  return r ? null : n.update(o, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function iP(n, e) {
  let t = Qn(n).resolveInner(e + 1);
  return t.parent && t.from == e;
}
function Pde(n, e, t, i) {
  let s = Qn(n).resolveInner(e, -1), r = i.reduce((o, l) => Math.max(o, l.length), 0);
  for (let o = 0; o < 5; o++) {
    let l = n.sliceDoc(s.from, Math.min(s.to, s.from + t.length + r)), a = l.indexOf(t);
    if (!a || a > -1 && i.indexOf(l.slice(0, a)) > -1) {
      let u = s.firstChild;
      for (; u && u.from == s.from && u.to - u.from > t.length + a; ) {
        if (n.sliceDoc(u.to - t.length, u.to) == t)
          return !1;
        u = u.firstChild;
      }
      return !0;
    }
    let c = s.to == e && s.parent;
    if (!c)
      break;
    s = c;
  }
  return !1;
}
function sP(n, e, t) {
  let i = n.charCategorizer(e);
  if (i(n.sliceDoc(e - 1, e)) != an.Word)
    return e;
  for (let s of t) {
    let r = e - s.length;
    if (n.sliceDoc(r, e) == s && i(n.sliceDoc(r - 1, r)) != an.Word)
      return r;
  }
  return -1;
}
function Ede(n = {}) {
  return [
    xs,
    xi.of(n),
    sde,
    Ade,
    eD
  ];
}
const oD = [
  { key: "Ctrl-Space", run: Jhe },
  { key: "Escape", run: ede },
  { key: "ArrowDown", run: /* @__PURE__ */ $p(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ $p(!1) },
  { key: "PageDown", run: /* @__PURE__ */ $p(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ $p(!1, "page") },
  { key: "Enter", run: Khe }
], Ade = /* @__PURE__ */ sc.highest(/* @__PURE__ */ C0.computeN([xi], (n) => n.facet(xi).defaultKeymap ? [oD] : []));
class $de {
  constructor(e, t, i) {
    this.from = e, this.to = t, this.diagnostic = i;
  }
}
class pa {
  constructor(e, t, i) {
    this.diagnostics = e, this.panel = t, this.selected = i;
  }
  static init(e, t, i) {
    let s = e, r = i.facet(cD).markerFilter;
    r && (s = r(s, i));
    let o = He.set(s.map((l) => l.from == l.to || l.from == l.to - 1 && i.doc.lineAt(l.from).to == l.from ? He.widget({
      widget: new Bde(l),
      diagnostic: l
    }).range(l.from) : He.mark({
      attributes: { class: "cm-lintRange cm-lintRange-" + l.severity + (l.markClass ? " " + l.markClass : "") },
      diagnostic: l,
      inclusive: !0
    }).range(l.from, l.to)), !0);
    return new pa(o, t, Qu(o));
  }
}
function Qu(n, e = null, t = 0) {
  let i = null;
  return n.between(t, 1e9, (s, r, { spec: o }) => {
    if (!(e && o.diagnostic != e))
      return i = new $de(s, r, o.diagnostic), !1;
  }), i;
}
function Tde(n, e) {
  let t = n.startState.doc.lineAt(e.pos);
  return !!(n.effects.some((i) => i.is(lD)) || n.changes.touchesRange(t.from, t.to));
}
function _de(n, e) {
  return n.field(Es, !1) ? e : e.concat(ct.appendConfig.of(jde));
}
const lD = /* @__PURE__ */ ct.define(), ox = /* @__PURE__ */ ct.define(), aD = /* @__PURE__ */ ct.define(), Es = /* @__PURE__ */ ui.define({
  create() {
    return new pa(He.none, null, null);
  },
  update(n, e) {
    if (e.docChanged) {
      let t = n.diagnostics.map(e.changes), i = null;
      if (n.selected) {
        let s = e.changes.mapPos(n.selected.from, 1);
        i = Qu(t, n.selected.diagnostic, s) || Qu(t, null, s);
      }
      n = new pa(t, n.panel, i);
    }
    for (let t of e.effects)
      t.is(lD) ? n = pa.init(t.value, n.panel, e.state) : t.is(ox) ? n = new pa(n.diagnostics, t.value ? B0.open : null, n.selected) : t.is(aD) && (n = new pa(n.diagnostics, n.panel, t.value));
    return n;
  },
  provide: (n) => [
    Gd.from(n, (e) => e.panel),
    _e.decorations.from(n, (e) => e.diagnostics)
  ]
}), Mde = /* @__PURE__ */ He.mark({ class: "cm-lintRange cm-lintRange-active", inclusive: !0 });
function Rde(n, e, t) {
  let { diagnostics: i } = n.state.field(Es), s = [], r = 2e8, o = 0;
  i.between(e - (t < 0 ? 1 : 0), e + (t > 0 ? 1 : 0), (a, c, { spec: u }) => {
    e >= a && e <= c && (a == c || (e > a || t > 0) && (e < c || t < 0)) && (s.push(u.diagnostic), r = Math.min(a, r), o = Math.max(c, o));
  });
  let l = n.state.facet(cD).tooltipFilter;
  return l && (s = l(s, n.state)), s.length ? {
    pos: r,
    end: o,
    above: n.state.doc.lineAt(r).to < o,
    create() {
      return { dom: Nde(n, s) };
    }
  } : null;
}
function Nde(n, e) {
  return Ht("ul", { class: "cm-tooltip-lint" }, e.map((t) => hD(n, t, !1)));
}
const Dde = (n) => {
  let e = n.state.field(Es, !1);
  (!e || !e.panel) && n.dispatch({ effects: _de(n.state, [ox.of(!0)]) });
  let t = Ud(n, B0.open);
  return t && t.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, rP = (n) => {
  let e = n.state.field(Es, !1);
  return !e || !e.panel ? !1 : (n.dispatch({ effects: ox.of(!1) }), !0);
}, Lde = (n) => {
  let e = n.state.field(Es, !1);
  if (!e)
    return !1;
  let t = n.state.selection.main, i = e.diagnostics.iter(t.to + 1);
  return !i.value && (i = e.diagnostics.iter(0), !i.value || i.from == t.from && i.to == t.to) ? !1 : (n.dispatch({ selection: { anchor: i.from, head: i.to }, scrollIntoView: !0 }), !0);
}, Ide = [
  { key: "Mod-Shift-m", run: Dde, preventDefault: !0 },
  { key: "F8", run: Lde }
], cD = /* @__PURE__ */ Me.define({
  combine(n) {
    return Object.assign({ sources: n.map((e) => e.source).filter((e) => e != null) }, bo(n.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null
    }, {
      needsRefresh: (e, t) => e ? t ? (i) => e(i) || t(i) : e : t
    }));
  }
});
function uD(n) {
  let e = [];
  if (n)
    e:
      for (let { name: t } of n) {
        for (let i = 0; i < t.length; i++) {
          let s = t[i];
          if (/[a-zA-Z]/.test(s) && !e.some((r) => r.toLowerCase() == s.toLowerCase())) {
            e.push(s);
            continue e;
          }
        }
        e.push("");
      }
  return e;
}
function hD(n, e, t) {
  var i;
  let s = t ? uD(e.actions) : [];
  return Ht("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, Ht("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage() : e.message), (i = e.actions) === null || i === void 0 ? void 0 : i.map((r, o) => {
    let l = !1, a = (d) => {
      if (d.preventDefault(), l)
        return;
      l = !0;
      let f = Qu(n.state.field(Es).diagnostics, e);
      f && r.apply(n, f.from, f.to);
    }, { name: c } = r, u = s[o] ? c.indexOf(s[o]) : -1, h = u < 0 ? c : [
      c.slice(0, u),
      Ht("u", c.slice(u, u + 1)),
      c.slice(u + 1)
    ];
    return Ht("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: a,
      onmousedown: a,
      "aria-label": ` Action: ${c}${u < 0 ? "" : ` (access key "${s[o]})"`}.`
    }, h);
  }), e.source && Ht("div", { class: "cm-diagnosticSource" }, e.source));
}
class Bde extends Ko {
  constructor(e) {
    super(), this.diagnostic = e;
  }
  eq(e) {
    return e.diagnostic == this.diagnostic;
  }
  toDOM() {
    return Ht("span", { class: "cm-lintPoint cm-lintPoint-" + this.diagnostic.severity });
  }
}
class oP {
  constructor(e, t) {
    this.diagnostic = t, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = hD(e, t, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class B0 {
  constructor(e) {
    this.view = e, this.items = [];
    let t = (s) => {
      if (s.keyCode == 27)
        rP(this.view), this.view.focus();
      else if (s.keyCode == 38 || s.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (s.keyCode == 40 || s.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (s.keyCode == 36)
        this.moveSelection(0);
      else if (s.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (s.keyCode == 13)
        this.view.focus();
      else if (s.keyCode >= 65 && s.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: r } = this.items[this.selectedIndex], o = uD(r.actions);
        for (let l = 0; l < o.length; l++)
          if (o[l].toUpperCase().charCodeAt(0) == s.keyCode) {
            let a = Qu(this.view.state.field(Es).diagnostics, r);
            a && r.actions[l].apply(e, a.from, a.to);
          }
      } else
        return;
      s.preventDefault();
    }, i = (s) => {
      for (let r = 0; r < this.items.length; r++)
        this.items[r].dom.contains(s.target) && this.moveSelection(r);
    };
    this.list = Ht("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: t,
      onclick: i
    }), this.dom = Ht("div", { class: "cm-panel-lint" }, this.list, Ht("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => rP(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(Es).selected;
    if (!e)
      return -1;
    for (let t = 0; t < this.items.length; t++)
      if (this.items[t].diagnostic == e.diagnostic)
        return t;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: t } = this.view.state.field(Es), i = 0, s = !1, r = null;
    for (e.between(0, this.view.state.doc.length, (o, l, { spec: a }) => {
      let c = -1, u;
      for (let h = i; h < this.items.length; h++)
        if (this.items[h].diagnostic == a.diagnostic) {
          c = h;
          break;
        }
      c < 0 ? (u = new oP(this.view, a.diagnostic), this.items.splice(i, 0, u), s = !0) : (u = this.items[c], c > i && (this.items.splice(i, c - i), s = !0)), t && u.diagnostic == t.diagnostic ? u.dom.hasAttribute("aria-selected") || (u.dom.setAttribute("aria-selected", "true"), r = u) : u.dom.hasAttribute("aria-selected") && u.dom.removeAttribute("aria-selected"), i++;
    }); i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      s = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new oP(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), s = !0), r ? (this.list.setAttribute("aria-activedescendant", r.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: r.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: o, panel: l }) => {
        let a = l.height / this.list.offsetHeight;
        o.top < l.top ? this.list.scrollTop -= (l.top - o.top) / a : o.bottom > l.bottom && (this.list.scrollTop += (o.bottom - l.bottom) / a);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), s && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function t() {
      let i = e;
      e = i.nextSibling, i.remove();
    }
    for (let i of this.items)
      if (i.dom.parentNode == this.list) {
        for (; e != i.dom; )
          t();
        e = i.dom.nextSibling;
      } else
        this.list.insertBefore(i.dom, e);
    for (; e; )
      t();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let t = this.view.state.field(Es), i = Qu(t.diagnostics, this.items[e].diagnostic);
    i && this.view.dispatch({
      selection: { anchor: i.from, head: i.to },
      scrollIntoView: !0,
      effects: aD.of(i)
    });
  }
  static open(e) {
    return new B0(e);
  }
}
function Qde(n, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(n)}</svg>')`;
}
function Tp(n) {
  return Qde(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${n}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const zde = /* @__PURE__ */ _e.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ Tp("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ Tp("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ Tp("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ Tp("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
}), jde = [
  Es,
  /* @__PURE__ */ _e.decorations.compute([Es], (n) => {
    let { selected: e, panel: t } = n.field(Es);
    return !e || !t || e.from == e.to ? He.none : He.set([
      Mde.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ Rae(Rde, { hideOn: Tde }),
  zde
], iGe = [
  Vae(),
  qae(),
  uae(),
  lue(),
  Rce(),
  Jle(),
  sae(),
  Et.allowMultipleSelections.of(!0),
  Oce(),
  Dce(Bce, { fallback: !0 }),
  qce(),
  mde(),
  Ede(),
  xae(),
  kae(),
  mae(),
  phe(),
  C0.of([
    ...Ode,
    ...che,
    ...Rhe,
    ...mue,
    ...$ce,
    ...oD,
    ...Ide
  ])
];
let Vde = class NO {
  /**
  @internal
  */
  constructor(e, t, i, s, r, o, l, a, c, u = 0, h) {
    this.p = e, this.stack = t, this.state = i, this.reducePos = s, this.pos = r, this.score = o, this.buffer = l, this.bufferBase = a, this.curContext = c, this.lookAhead = u, this.parent = h;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, t) => t % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, t, i = 0) {
    let s = e.parser.context;
    return new NO(e, [], t, i, i, 0, [], 0, s ? new lP(s, s.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, t) {
    this.stack.push(this.state, t, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var t;
    let i = e >> 19, s = e & 65535, { parser: r } = this.p, o = r.dynamicPrecedence(s);
    if (o && (this.score += o), i == 0) {
      this.pushState(r.getGoto(this.state, s, !0), this.reducePos), s < r.minRepeatTerm && this.storeNode(s, this.reducePos, this.reducePos, 4, !0), this.reduceContext(s, this.reducePos);
      return;
    }
    let l = this.stack.length - (i - 1) * 3 - (e & 262144 ? 6 : 0), a = l ? this.stack[l - 2] : this.p.ranges[0].from, c = this.reducePos - a;
    c >= 2e3 && !(!((t = this.p.parser.nodeSet.types[s]) === null || t === void 0) && t.isAnonymous) && (a == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = c) : this.p.lastBigReductionSize < c && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = a, this.p.lastBigReductionSize = c));
    let u = l ? this.stack[l - 1] : 0, h = this.bufferBase + this.buffer.length - u;
    if (s < r.minRepeatTerm || e & 131072) {
      let d = r.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(s, a, d, h + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[l];
    else {
      let d = this.stack[l - 3];
      this.state = r.getGoto(d, s, !0);
    }
    for (; this.stack.length > l; )
      this.stack.pop();
    this.reduceContext(s, a);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, t, i, s = 4, r = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let o = this, l = this.buffer.length;
      if (l == 0 && o.parent && (l = o.bufferBase - o.parent.bufferBase, o = o.parent), l > 0 && o.buffer[l - 4] == 0 && o.buffer[l - 1] > -1) {
        if (t == i)
          return;
        if (o.buffer[l - 2] >= t) {
          o.buffer[l - 2] = i;
          return;
        }
      }
    }
    if (!r || this.pos == i)
      this.buffer.push(e, t, i, s);
    else {
      let o = this.buffer.length;
      if (o > 0 && this.buffer[o - 4] != 0)
        for (; o > 0 && this.buffer[o - 2] > i; )
          this.buffer[o] = this.buffer[o - 4], this.buffer[o + 1] = this.buffer[o - 3], this.buffer[o + 2] = this.buffer[o - 2], this.buffer[o + 3] = this.buffer[o - 1], o -= 4, s > 4 && (s -= 4);
      this.buffer[o] = e, this.buffer[o + 1] = t, this.buffer[o + 2] = i, this.buffer[o + 3] = s;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, t, i, s) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if (e & 262144)
      this.pos = s, this.shiftContext(t, i), t <= this.p.parser.maxNode && this.buffer.push(t, i, s, 4);
    else {
      let r = e, { parser: o } = this.p;
      (s > this.pos || t <= o.maxNode) && (this.pos = s, o.stateFlag(
        r,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = s)), this.pushState(r, i), this.shiftContext(t, i), t <= o.maxNode && this.buffer.push(t, i, s, 4);
    }
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, t, i, s) {
    e & 65536 ? this.reduce(e) : this.shift(e, t, i, s);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, t) {
    let i = this.p.reused.length - 1;
    (i < 0 || this.p.reused[i] != e) && (this.p.reused.push(e), i++);
    let s = this.pos;
    this.reducePos = this.pos = s + e.length, this.pushState(t, s), this.buffer.push(
      i,
      s,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, t = e.buffer.length;
    for (; t > 0 && e.buffer[t - 2] > e.reducePos; )
      t -= 4;
    let i = e.buffer.slice(t), s = e.bufferBase + t;
    for (; e && s == e.bufferBase; )
      e = e.parent;
    return new NO(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, i, s, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, t) {
    let i = e <= this.p.parser.maxNode;
    i && this.storeNode(e, this.pos, t, 4), this.storeNode(0, this.pos, t, i ? 8 : 4), this.pos = this.reducePos = t, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let t = new Fde(this); ; ) {
      let i = this.p.parser.stateSlot(
        t.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(t.state, e);
      if (i == 0)
        return !1;
      if (!(i & 65536))
        return !0;
      t.reduce(i);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let t = this.p.parser.nextStates(this.state);
    if (t.length > 8 || this.stack.length >= 120) {
      let s = [];
      for (let r = 0, o; r < t.length; r += 2)
        (o = t[r + 1]) != this.state && this.p.parser.hasAction(o, e) && s.push(t[r], o);
      if (this.stack.length < 120)
        for (let r = 0; s.length < 8 && r < t.length; r += 2) {
          let o = t[r + 1];
          s.some((l, a) => a & 1 && l == o) || s.push(t[r], o);
        }
      t = s;
    }
    let i = [];
    for (let s = 0; s < t.length && i.length < 4; s += 2) {
      let r = t[s + 1];
      if (r == this.state)
        continue;
      let o = this.split();
      o.pushState(r, this.pos), o.storeNode(0, o.pos, o.pos, 4, !0), o.shiftContext(t[s], this.pos), o.reducePos = this.pos, o.score -= 200, i.push(o);
    }
    return i;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, t = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if (!(t & 65536))
      return !1;
    if (!e.validAction(this.state, t)) {
      let i = t >> 19, s = t & 65535, r = this.stack.length - i * 3;
      if (r < 0 || e.getGoto(this.stack[r], s, !1) < 0) {
        let o = this.findForcedReduction();
        if (o == null)
          return !1;
        t = o;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(t), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, t = [], i = (s, r) => {
      if (!t.includes(s))
        return t.push(s), e.allActions(s, (o) => {
          if (!(o & 393216))
            if (o & 65536) {
              let l = (o >> 19) - r;
              if (l > 1) {
                let a = o & 65535, c = this.stack.length - l * 3;
                if (c >= 0 && e.getGoto(this.stack[c], a, !1) >= 0)
                  return l << 19 | 65536 | a;
              }
            } else {
              let l = i(o, r + 1);
              if (l != null)
                return l;
            }
        });
    };
    return i(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let t = 0; t < this.stack.length; t += 3)
      if (this.stack[t] != e.stack[t])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  reduceContext(e, t) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(t)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let t = new lP(this.curContext.tracker, e);
      t.hash != this.curContext.hash && this.emitContext(), this.curContext = t;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
};
class lP {
  constructor(e, t) {
    this.tracker = e, this.context = t, this.hash = e.strict ? e.hash(t) : 0;
  }
}
class Fde {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let t = e & 65535, i = e >> 19;
    i == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (i - 1) * 3;
    let s = this.start.p.parser.getGoto(this.stack[this.base - 3], t, !0);
    this.state = s;
  }
}
class $m {
  constructor(e, t, i) {
    this.stack = e, this.pos = t, this.index = i, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, t = e.bufferBase + e.buffer.length) {
    return new $m(e, t, t - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new $m(this.stack, this.pos, this.index);
  }
}
function Bh(n, e = Uint16Array) {
  if (typeof n != "string")
    return n;
  let t = null;
  for (let i = 0, s = 0; i < n.length; ) {
    let r = 0;
    for (; ; ) {
      let o = n.charCodeAt(i++), l = !1;
      if (o == 126) {
        r = 65535;
        break;
      }
      o >= 92 && o--, o >= 34 && o--;
      let a = o - 32;
      if (a >= 46 && (a -= 46, l = !0), r += a, l)
        break;
      r *= 46;
    }
    t ? t[s++] = r : t = new e(r);
  }
  return t;
}
class yg {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const aP = new yg();
class Zde {
  /**
  @internal
  */
  constructor(e, t) {
    this.input = e, this.ranges = t, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = aP, this.rangeIndex = 0, this.pos = this.chunkPos = t[0].from, this.range = t[0], this.end = t[t.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, t) {
    let i = this.range, s = this.rangeIndex, r = this.pos + e;
    for (; r < i.from; ) {
      if (!s)
        return null;
      let o = this.ranges[--s];
      r -= i.from - o.to, i = o;
    }
    for (; t < 0 ? r > i.to : r >= i.to; ) {
      if (s == this.ranges.length - 1)
        return null;
      let o = this.ranges[++s];
      r += o.from - i.to, i = o;
    }
    return r;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let t of this.ranges)
      if (t.to > e)
        return Math.max(e, t.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let t = this.chunkOff + e, i, s;
    if (t >= 0 && t < this.chunk.length)
      i = this.pos + e, s = this.chunk.charCodeAt(t);
    else {
      let r = this.resolveOffset(e, 1);
      if (r == null)
        return -1;
      if (i = r, i >= this.chunk2Pos && i < this.chunk2Pos + this.chunk2.length)
        s = this.chunk2.charCodeAt(i - this.chunk2Pos);
      else {
        let o = this.rangeIndex, l = this.range;
        for (; l.to <= i; )
          l = this.ranges[++o];
        this.chunk2 = this.input.chunk(this.chunk2Pos = i), i + this.chunk2.length > l.to && (this.chunk2 = this.chunk2.slice(0, l.to - i)), s = this.chunk2.charCodeAt(0);
      }
    }
    return i >= this.token.lookAhead && (this.token.lookAhead = i + 1), s;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, t = 0) {
    let i = t ? this.resolveOffset(t, -1) : this.pos;
    if (i == null || i < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = i;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, t) {
    this.token.value = e, this.token.end = t;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: t } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = t, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), t = this.pos + e.length;
      this.chunk = t > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, t) {
    if (t ? (this.token = t, t.start = e, t.lookAhead = e + 1, t.value = t.extended = -1) : this.token = aP, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, t) {
    if (e >= this.chunkPos && t <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, t - this.chunkPos);
    if (e >= this.chunk2Pos && t <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, t - this.chunk2Pos);
    if (e >= this.range.from && t <= this.range.to)
      return this.input.read(e, t);
    let i = "";
    for (let s of this.ranges) {
      if (s.from >= t)
        break;
      s.to > e && (i += this.input.read(Math.max(s.from, e), Math.min(s.to, t)));
    }
    return i;
  }
}
class Wc {
  constructor(e, t) {
    this.data = e, this.id = t;
  }
  token(e, t) {
    let { parser: i } = t.p;
    dD(this.data, e, t, this.id, i.data, i.tokenPrecTable);
  }
}
Wc.prototype.contextual = Wc.prototype.fallback = Wc.prototype.extend = !1;
class DO {
  constructor(e, t, i) {
    this.precTable = t, this.elseToken = i, this.data = typeof e == "string" ? Bh(e) : e;
  }
  token(e, t) {
    let i = e.pos, s = 0;
    for (; ; ) {
      let r = e.next < 0, o = e.resolveOffset(1, 1);
      if (dD(this.data, e, t, 0, this.data, this.precTable), e.token.value > -1)
        break;
      if (this.elseToken == null)
        return;
      if (r || s++, o == null)
        break;
      e.reset(o, e.token);
    }
    s && (e.reset(i, e.token), e.acceptToken(this.elseToken, s));
  }
}
DO.prototype.contextual = Wc.prototype.fallback = Wc.prototype.extend = !1;
class Df {
  /**
  Create a tokenizer. The first argument is the function that,
  given an input stream, scans for the types of tokens it
  recognizes at the stream's position, and calls
  [`acceptToken`](#lr.InputStream.acceptToken) when it finds
  one.
  */
  constructor(e, t = {}) {
    this.token = e, this.contextual = !!t.contextual, this.fallback = !!t.fallback, this.extend = !!t.extend;
  }
}
function dD(n, e, t, i, s, r) {
  let o = 0, l = 1 << i, { dialect: a } = t.p.parser;
  e:
    for (; l & n[o]; ) {
      let c = n[o + 1];
      for (let f = o + 3; f < c; f += 2)
        if ((n[f + 1] & l) > 0) {
          let p = n[f];
          if (a.allows(p) && (e.token.value == -1 || e.token.value == p || qde(p, e.token.value, s, r))) {
            e.acceptToken(p);
            break;
          }
        }
      let u = e.next, h = 0, d = n[o + 2];
      if (e.next < 0 && d > h && n[c + d * 3 - 3] == 65535) {
        o = n[c + d * 3 - 1];
        continue e;
      }
      for (; h < d; ) {
        let f = h + d >> 1, p = c + f + (f << 1), g = n[p], m = n[p + 1] || 65536;
        if (u < g)
          d = f;
        else if (u >= m)
          h = f + 1;
        else {
          o = n[p + 2], e.advance();
          continue e;
        }
      }
      break;
    }
}
function cP(n, e, t) {
  for (let i = e, s; (s = n[i]) != 65535; i++)
    if (s == t)
      return i - e;
  return -1;
}
function qde(n, e, t, i) {
  let s = cP(t, i, e);
  return s < 0 || cP(t, i, n) < s;
}
const ps = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let Kv = null;
function uP(n, e, t) {
  let i = n.cursor(Hn.IncludeAnonymous);
  for (i.moveTo(e); ; )
    if (!(t < 0 ? i.childBefore(e) : i.childAfter(e)))
      for (; ; ) {
        if ((t < 0 ? i.to < e : i.from > e) && !i.type.isError)
          return t < 0 ? Math.max(0, Math.min(
            i.to - 1,
            e - 25
            /* Safety.Margin */
          )) : Math.min(n.length, Math.max(
            i.from + 1,
            e + 25
            /* Safety.Margin */
          ));
        if (t < 0 ? i.prevSibling() : i.nextSibling())
          break;
        if (!i.parent())
          return t < 0 ? 0 : n.length;
      }
}
class Wde {
  constructor(e, t) {
    this.fragments = e, this.nodeSet = t, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? uP(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? uP(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let t = this.trees.length - 1;
      if (t < 0)
        return this.nextFragment(), null;
      let i = this.trees[t], s = this.index[t];
      if (s == i.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let r = i.children[s], o = this.start[t] + i.positions[s];
      if (o > e)
        return this.nextStart = o, null;
      if (r instanceof Dn) {
        if (o == e) {
          if (o < this.safeFrom)
            return null;
          let l = o + r.length;
          if (l <= this.safeTo) {
            let a = r.prop(mt.lookAhead);
            if (!a || l + a < this.fragment.to)
              return r;
          }
        }
        this.index[t]++, o + r.length >= Math.max(this.safeFrom, e) && (this.trees.push(r), this.start.push(o), this.index.push(0));
      } else
        this.index[t]++, this.nextStart = o + r.length;
    }
  }
}
class Hde {
  constructor(e, t) {
    this.stream = t, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((i) => new yg());
  }
  getActions(e) {
    let t = 0, i = null, { parser: s } = e.p, { tokenizers: r } = s, o = s.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), l = e.curContext ? e.curContext.hash : 0, a = 0;
    for (let c = 0; c < r.length; c++) {
      if (!(1 << c & o))
        continue;
      let u = r[c], h = this.tokens[c];
      if (!(i && !u.fallback) && ((u.contextual || h.start != e.pos || h.mask != o || h.context != l) && (this.updateCachedToken(h, u, e), h.mask = o, h.context = l), h.lookAhead > h.end + 25 && (a = Math.max(h.lookAhead, a)), h.value != 0)) {
        let d = t;
        if (h.extended > -1 && (t = this.addActions(e, h.extended, h.end, t)), t = this.addActions(e, h.value, h.end, t), !u.extend && (i = h, t > d))
          break;
      }
    }
    for (; this.actions.length > t; )
      this.actions.pop();
    return a && e.setLookAhead(a), !i && e.pos == this.stream.end && (i = new yg(), i.value = e.p.parser.eofTerm, i.start = i.end = e.pos, t = this.addActions(e, i.value, i.end, t)), this.mainToken = i, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let t = new yg(), { pos: i, p: s } = e;
    return t.start = i, t.end = Math.min(i + 1, s.stream.end), t.value = i == s.stream.end ? s.parser.eofTerm : 0, t;
  }
  updateCachedToken(e, t, i) {
    let s = this.stream.clipPos(i.pos);
    if (t.token(this.stream.reset(s, e), i), e.value > -1) {
      let { parser: r } = i.p;
      for (let o = 0; o < r.specialized.length; o++)
        if (r.specialized[o] == e.value) {
          let l = r.specializers[o](this.stream.read(e.start, e.end), i);
          if (l >= 0 && i.p.parser.dialect.allows(l >> 1)) {
            l & 1 ? e.extended = l >> 1 : e.value = l >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(s + 1);
  }
  putAction(e, t, i, s) {
    for (let r = 0; r < s; r += 3)
      if (this.actions[r] == e)
        return s;
    return this.actions[s++] = e, this.actions[s++] = t, this.actions[s++] = i, s;
  }
  addActions(e, t, i, s) {
    let { state: r } = e, { parser: o } = e.p, { data: l } = o;
    for (let a = 0; a < 2; a++)
      for (let c = o.stateSlot(
        r,
        a ? 2 : 1
        /* ParseState.Actions */
      ); ; c += 3) {
        if (l[c] == 65535)
          if (l[c + 1] == 1)
            c = Eo(l, c + 2);
          else {
            s == 0 && l[c + 1] == 2 && (s = this.putAction(Eo(l, c + 2), t, i, s));
            break;
          }
        l[c] == t && (s = this.putAction(Eo(l, c + 1), t, i, s));
      }
    return s;
  }
}
class Xde {
  constructor(e, t, i, s) {
    this.parser = e, this.input = t, this.ranges = s, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new Zde(t, s), this.tokens = new Hde(e, this.stream), this.topTerm = e.top[1];
    let { from: r } = s[0];
    this.stacks = [Vde.start(this, e.top[0], r)], this.fragments = i.length && this.stream.end - r > e.bufferLength * 4 ? new Wde(i, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, t = this.minStackPos, i = this.stacks = [], s, r;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [o] = e;
      for (; o.forceReduce() && o.stack.length && o.stack[o.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let o = 0; o < e.length; o++) {
      let l = e[o];
      for (; ; ) {
        if (this.tokens.mainToken = null, l.pos > t)
          i.push(l);
        else {
          if (this.advanceStack(l, i, e))
            continue;
          {
            s || (s = [], r = []), s.push(l);
            let a = this.tokens.getMainToken(l);
            r.push(a.value, a.end);
          }
        }
        break;
      }
    }
    if (!i.length) {
      let o = s && Gde(s);
      if (o)
        return ps && console.log("Finish with " + this.stackID(o)), this.stackToTree(o);
      if (this.parser.strict)
        throw ps && s && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + t);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && s) {
      let o = this.stoppedAt != null && s[0].pos > this.stoppedAt ? s[0] : this.runRecovery(s, r, i);
      if (o)
        return ps && console.log("Force-finish " + this.stackID(o)), this.stackToTree(o.forceAll());
    }
    if (this.recovering) {
      let o = this.recovering == 1 ? 1 : this.recovering * 3;
      if (i.length > o)
        for (i.sort((l, a) => a.score - l.score); i.length > o; )
          i.pop();
      i.some((l) => l.reducePos > t) && this.recovering--;
    } else if (i.length > 1) {
      e:
        for (let o = 0; o < i.length - 1; o++) {
          let l = i[o];
          for (let a = o + 1; a < i.length; a++) {
            let c = i[a];
            if (l.sameState(c) || l.buffer.length > 500 && c.buffer.length > 500)
              if ((l.score - c.score || l.buffer.length - c.buffer.length) > 0)
                i.splice(a--, 1);
              else {
                i.splice(o--, 1);
                continue e;
              }
          }
        }
      i.length > 12 && i.splice(
        12,
        i.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = i[0].pos;
    for (let o = 1; o < i.length; o++)
      i[o].pos < this.minStackPos && (this.minStackPos = i[o].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, t, i) {
    let s = e.pos, { parser: r } = this, o = ps ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && s > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let c = e.curContext && e.curContext.tracker.strict, u = c ? e.curContext.hash : 0;
      for (let h = this.fragments.nodeAt(s); h; ) {
        let d = this.parser.nodeSet.types[h.type.id] == h.type ? r.getGoto(e.state, h.type.id) : -1;
        if (d > -1 && h.length && (!c || (h.prop(mt.contextHash) || 0) == u))
          return e.useNode(h, d), ps && console.log(o + this.stackID(e) + ` (via reuse of ${r.getName(h.type.id)})`), !0;
        if (!(h instanceof Dn) || h.children.length == 0 || h.positions[0] > 0)
          break;
        let f = h.children[0];
        if (f instanceof Dn && h.positions[0] == 0)
          h = f;
        else
          break;
      }
    }
    let l = r.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (l > 0)
      return e.reduce(l), ps && console.log(o + this.stackID(e) + ` (via always-reduce ${r.getName(
        l & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let a = this.tokens.getActions(e);
    for (let c = 0; c < a.length; ) {
      let u = a[c++], h = a[c++], d = a[c++], f = c == a.length || !i, p = f ? e : e.split(), g = this.tokens.mainToken;
      if (p.apply(u, h, g ? g.start : p.pos, d), ps && console.log(o + this.stackID(p) + ` (via ${u & 65536 ? `reduce of ${r.getName(
        u & 65535
        /* Action.ValueMask */
      )}` : "shift"} for ${r.getName(h)} @ ${s}${p == e ? "" : ", split"})`), f)
        return !0;
      p.pos > s ? t.push(p) : i.push(p);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, t) {
    let i = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > i)
        return hP(e, t), !0;
    }
  }
  runRecovery(e, t, i) {
    let s = null, r = !1;
    for (let o = 0; o < e.length; o++) {
      let l = e[o], a = t[o << 1], c = t[(o << 1) + 1], u = ps ? this.stackID(l) + " -> " : "";
      if (l.deadEnd && (r || (r = !0, l.restart(), ps && console.log(u + this.stackID(l) + " (restarted)"), this.advanceFully(l, i))))
        continue;
      let h = l.split(), d = u;
      for (let f = 0; h.forceReduce() && f < 10 && (ps && console.log(d + this.stackID(h) + " (via force-reduce)"), !this.advanceFully(h, i)); f++)
        ps && (d = this.stackID(h) + " -> ");
      for (let f of l.recoverByInsert(a))
        ps && console.log(u + this.stackID(f) + " (via recover-insert)"), this.advanceFully(f, i);
      this.stream.end > l.pos ? (c == l.pos && (c++, a = 0), l.recoverByDelete(a, c), ps && console.log(u + this.stackID(l) + ` (via recover-delete ${this.parser.getName(a)})`), hP(l, i)) : (!s || s.score < l.score) && (s = l);
    }
    return s;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), Dn.build({
      buffer: $m.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let t = (Kv || (Kv = /* @__PURE__ */ new WeakMap())).get(e);
    return t || Kv.set(e, t = String.fromCodePoint(this.nextStackID++)), t + e;
  }
}
function hP(n, e) {
  for (let t = 0; t < e.length; t++) {
    let i = e[t];
    if (i.pos == n.pos && i.sameState(n)) {
      e[t].score < n.score && (e[t] = n);
      return;
    }
  }
  e.push(n);
}
class Yde {
  constructor(e, t, i) {
    this.source = e, this.flags = t, this.disabled = i;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
const Jv = (n) => n;
class Ude {
  /**
  Define a context tracker.
  */
  constructor(e) {
    this.start = e.start, this.shift = e.shift || Jv, this.reduce = e.reduce || Jv, this.reuse = e.reuse || Jv, this.hash = e.hash || (() => 0), this.strict = e.strict !== !1;
  }
}
class zu extends V3 {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let t = e.nodeNames.split(" ");
    this.minRepeatTerm = t.length;
    for (let l = 0; l < e.repeatNodeCount; l++)
      t.push("");
    let i = Object.keys(e.topRules).map((l) => e.topRules[l][1]), s = [];
    for (let l = 0; l < t.length; l++)
      s.push([]);
    function r(l, a, c) {
      s[l].push([a, a.deserialize(String(c))]);
    }
    if (e.nodeProps)
      for (let l of e.nodeProps) {
        let a = l[0];
        typeof a == "string" && (a = mt[a]);
        for (let c = 1; c < l.length; ) {
          let u = l[c++];
          if (u >= 0)
            r(u, a, l[c++]);
          else {
            let h = l[c + -u];
            for (let d = -u; d > 0; d--)
              r(l[c++], a, h);
            c++;
          }
        }
      }
    this.nodeSet = new Qw(t.map((l, a) => us.define({
      name: a >= this.minRepeatTerm ? void 0 : l,
      id: a,
      props: s[a],
      top: i.indexOf(a) > -1,
      error: a == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(a) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = B3;
    let o = Bh(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let l = 0; l < this.specializerSpecs.length; l++)
      this.specialized[l] = this.specializerSpecs[l].term;
    this.specializers = this.specializerSpecs.map(dP), this.states = Bh(e.states, Uint32Array), this.data = Bh(e.stateData), this.goto = Bh(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((l) => typeof l == "number" ? new Wc(o, l) : l), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, t, i) {
    let s = new Xde(this, e, t, i);
    for (let r of this.wrappers)
      s = r(s, e, t, i);
    return s;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, t, i = !1) {
    let s = this.goto;
    if (t >= s[0])
      return -1;
    for (let r = s[t + 1]; ; ) {
      let o = s[r++], l = o & 1, a = s[r++];
      if (l && i)
        return a;
      for (let c = r + (o >> 1); r < c; r++)
        if (s[r] == e)
          return a;
      if (l)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, t) {
    let i = this.data;
    for (let s = 0; s < 2; s++)
      for (let r = this.stateSlot(
        e,
        s ? 2 : 1
        /* ParseState.Actions */
      ), o; ; r += 3) {
        if ((o = i[r]) == 65535)
          if (i[r + 1] == 1)
            o = i[r = Eo(i, r + 2)];
          else {
            if (i[r + 1] == 2)
              return Eo(i, r + 2);
            break;
          }
        if (o == t || o == 0)
          return Eo(i, r + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, t) {
    return this.states[e * 6 + t];
  }
  /**
  @internal
  */
  stateFlag(e, t) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & t) > 0;
  }
  /**
  @internal
  */
  validAction(e, t) {
    return !!this.allActions(e, (i) => i == t ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, t) {
    let i = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), s = i ? t(i) : void 0;
    for (let r = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); s == null; r += 3) {
      if (this.data[r] == 65535)
        if (this.data[r + 1] == 1)
          r = Eo(this.data, r + 2);
        else
          break;
      s = t(Eo(this.data, r + 1));
    }
    return s;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let t = [];
    for (let i = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; i += 3) {
      if (this.data[i] == 65535)
        if (this.data[i + 1] == 1)
          i = Eo(this.data, i + 2);
        else
          break;
      if (!(this.data[i + 2] & 1)) {
        let s = this.data[i + 1];
        t.some((r, o) => o & 1 && r == s) || t.push(this.data[i], s);
      }
    }
    return t;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let t = Object.assign(Object.create(zu.prototype), this);
    if (e.props && (t.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let i = this.topRules[e.top];
      if (!i)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      t.top = i;
    }
    return e.tokenizers && (t.tokenizers = this.tokenizers.map((i) => {
      let s = e.tokenizers.find((r) => r.from == i);
      return s ? s.to : i;
    })), e.specializers && (t.specializers = this.specializers.slice(), t.specializerSpecs = this.specializerSpecs.map((i, s) => {
      let r = e.specializers.find((l) => l.from == i.external);
      if (!r)
        return i;
      let o = Object.assign(Object.assign({}, i), { external: r.to });
      return t.specializers[s] = dP(o), o;
    })), e.contextTracker && (t.context = e.contextTracker), e.dialect && (t.dialect = this.parseDialect(e.dialect)), e.strict != null && (t.strict = e.strict), e.wrap && (t.wrappers = t.wrappers.concat(e.wrap)), e.bufferLength != null && (t.bufferLength = e.bufferLength), t;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let t = this.dynamicPrecedences;
    return t == null ? 0 : t[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let t = Object.keys(this.dialects), i = t.map(() => !1);
    if (e)
      for (let r of e.split(" ")) {
        let o = t.indexOf(r);
        o >= 0 && (i[o] = !0);
      }
    let s = null;
    for (let r = 0; r < t.length; r++)
      if (!i[r])
        for (let o = this.dialects[t[r]], l; (l = this.data[o++]) != 65535; )
          (s || (s = new Uint8Array(this.maxTerm + 1)))[l] = 1;
    return new Yde(e, i, s);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new zu(e);
  }
}
function Eo(n, e) {
  return n[e] | n[e + 1] << 16;
}
function Gde(n) {
  let e = null;
  for (let t of n) {
    let i = t.p.stoppedAt;
    (t.pos == t.p.stream.end || i != null && t.pos > i) && t.p.parser.stateFlag(
      t.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < t.score) && (e = t);
  }
  return e;
}
function dP(n) {
  if (n.external) {
    let e = n.extend ? 1 : 0;
    return (t, i) => n.external(t, i) << 1 | e;
  }
  return n.get;
}
const Kde = 309, fP = 1, Jde = 2, efe = 3, tfe = 310, nfe = 312, ife = 313, sfe = 4, rfe = 5, ofe = 0, LO = [
  9,
  10,
  11,
  12,
  13,
  32,
  133,
  160,
  5760,
  8192,
  8193,
  8194,
  8195,
  8196,
  8197,
  8198,
  8199,
  8200,
  8201,
  8202,
  8232,
  8233,
  8239,
  8287,
  12288
], fD = 125, lfe = 59, IO = 47, afe = 42, cfe = 43, ufe = 45, hfe = 60, dfe = 44, ffe = new Ude({
  start: !1,
  shift(n, e) {
    return e == sfe || e == rfe || e == nfe ? n : e == ife;
  },
  strict: !1
}), pfe = new Df((n, e) => {
  let { next: t } = n;
  (t == fD || t == -1 || e.context) && n.acceptToken(tfe);
}, { contextual: !0, fallback: !0 }), gfe = new Df((n, e) => {
  let { next: t } = n, i;
  LO.indexOf(t) > -1 || t == IO && ((i = n.peek(1)) == IO || i == afe) || t != fD && t != lfe && t != -1 && !e.context && n.acceptToken(Kde);
}, { contextual: !0 }), mfe = new Df((n, e) => {
  let { next: t } = n;
  if ((t == cfe || t == ufe) && (n.advance(), t == n.next)) {
    n.advance();
    let i = !e.context && e.canShift(fP);
    n.acceptToken(i ? fP : Jde);
  }
}, { contextual: !0 });
function eb(n, e) {
  return n >= 65 && n <= 90 || n >= 97 && n <= 122 || n == 95 || n >= 192 || !e && n >= 48 && n <= 57;
}
const vfe = new Df((n, e) => {
  if (n.next != hfe || !e.dialectEnabled(ofe) || (n.advance(), n.next == IO))
    return;
  let t = 0;
  for (; LO.indexOf(n.next) > -1; )
    n.advance(), t++;
  if (eb(n.next, !0)) {
    for (n.advance(), t++; eb(n.next, !1); )
      n.advance(), t++;
    for (; LO.indexOf(n.next) > -1; )
      n.advance(), t++;
    if (n.next == dfe)
      return;
    for (let i = 0; ; i++) {
      if (i == 7) {
        if (!eb(n.next, !0))
          return;
        break;
      }
      if (n.next != "extends".charCodeAt(i))
        break;
      n.advance(), t++;
    }
  }
  n.acceptToken(efe, -t);
}), bfe = P0({
  "get set async static": X.modifier,
  "for while do if else switch try catch finally return throw break continue default case": X.controlKeyword,
  "in of await yield void typeof delete instanceof": X.operatorKeyword,
  "let var const using function class extends": X.definitionKeyword,
  "import export from": X.moduleKeyword,
  "with debugger as new": X.keyword,
  TemplateString: X.special(X.string),
  super: X.atom,
  BooleanLiteral: X.bool,
  this: X.self,
  null: X.null,
  Star: X.modifier,
  VariableName: X.variableName,
  "CallExpression/VariableName TaggedTemplateExpression/VariableName": X.function(X.variableName),
  VariableDefinition: X.definition(X.variableName),
  Label: X.labelName,
  PropertyName: X.propertyName,
  PrivatePropertyName: X.special(X.propertyName),
  "CallExpression/MemberExpression/PropertyName": X.function(X.propertyName),
  "FunctionDeclaration/VariableDefinition": X.function(X.definition(X.variableName)),
  "ClassDeclaration/VariableDefinition": X.definition(X.className),
  PropertyDefinition: X.definition(X.propertyName),
  PrivatePropertyDefinition: X.definition(X.special(X.propertyName)),
  UpdateOp: X.updateOperator,
  "LineComment Hashbang": X.lineComment,
  BlockComment: X.blockComment,
  Number: X.number,
  String: X.string,
  Escape: X.escape,
  ArithOp: X.arithmeticOperator,
  LogicOp: X.logicOperator,
  BitOp: X.bitwiseOperator,
  CompareOp: X.compareOperator,
  RegExp: X.regexp,
  Equals: X.definitionOperator,
  Arrow: X.function(X.punctuation),
  ": Spread": X.punctuation,
  "( )": X.paren,
  "[ ]": X.squareBracket,
  "{ }": X.brace,
  "InterpolationStart InterpolationEnd": X.special(X.brace),
  ".": X.derefOperator,
  ", ;": X.separator,
  "@": X.meta,
  TypeName: X.typeName,
  TypeDefinition: X.definition(X.typeName),
  "type enum interface implements namespace module declare": X.definitionKeyword,
  "abstract global Privacy readonly override": X.modifier,
  "is keyof unique infer": X.operatorKeyword,
  JSXAttributeValue: X.attributeValue,
  JSXText: X.content,
  "JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag": X.angleBracket,
  "JSXIdentifier JSXNameSpacedName": X.tagName,
  "JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName": X.attributeName,
  "JSXBuiltin/JSXIdentifier": X.standard(X.tagName)
}), yfe = { __proto__: null, export: 18, as: 23, from: 31, default: 34, async: 39, function: 40, extends: 52, this: 56, true: 64, false: 64, null: 76, void: 80, typeof: 84, super: 102, new: 136, delete: 152, yield: 161, await: 165, class: 170, public: 227, private: 227, protected: 227, readonly: 229, instanceof: 248, satisfies: 251, in: 252, const: 254, import: 286, keyof: 339, unique: 343, infer: 349, is: 385, abstract: 405, implements: 407, type: 409, let: 412, var: 414, using: 417, interface: 423, enum: 427, namespace: 433, module: 435, declare: 439, global: 443, for: 462, of: 471, while: 474, with: 478, do: 482, if: 486, else: 488, switch: 492, case: 498, try: 504, catch: 508, finally: 512, return: 516, throw: 520, break: 524, continue: 528, debugger: 532 }, Ofe = { __proto__: null, async: 123, get: 125, set: 127, declare: 187, public: 189, private: 189, protected: 189, static: 191, abstract: 193, override: 195, readonly: 201, accessor: 203, new: 389 }, wfe = { __proto__: null, "<": 143 }, xfe = zu.deserialize({
  version: 14,
  states: "$<UO%TQ^OOO%[Q^OOO'_Q`OOP(lOWOOO*zQ08SO'#ChO+RO!bO'#CiO+aO#tO'#CiO+oO?MpO'#D^O.QQ^O'#DdO.bQ^O'#DoO%[Q^O'#DyO0fQ^O'#EROOQ07b'#EZ'#EZO1PQWO'#EWOOQO'#El'#ElOOQO'#Ie'#IeO1XQWO'#GmO1dQWO'#EkO1iQWO'#EkO3kQ08SO'#JiO6[Q08SO'#JjO6xQWO'#FZO6}Q&jO'#FqOOQ07b'#Fc'#FcO7YO,YO'#FcO7hQ7[O'#FxO9UQWO'#FwOOQ07b'#Jj'#JjOOQ07`'#Ji'#JiO9ZQWO'#GqOOQU'#KU'#KUO9fQWO'#IRO9kQ07hO'#ISOOQU'#JW'#JWOOQU'#IW'#IWQ`Q^OOO`Q^OOO%[Q^O'#DqO9sQ^O'#D}O9zQ^O'#EPO9aQWO'#GmO:RQ7[O'#CnO:aQWO'#EjO:lQWO'#EuO:qQ7[O'#FbO;`QWO'#GmOOQO'#KV'#KVO;eQWO'#KVO;sQWO'#GuO;sQWO'#GvO;sQWO'#GxO9aQWO'#G{O<jQWO'#HOO>RQWO'#CdO>cQWO'#H[O>kQWO'#HbO>kQWO'#HdO`Q^O'#HfO>kQWO'#HhO>kQWO'#HkO>pQWO'#HqO>uQ07iO'#HwO%[Q^O'#HyO?QQ07iO'#H{O?]Q07iO'#H}O9kQ07hO'#IPO?hQ08SO'#ChO@jQ`O'#DiQOQWOOO%[Q^O'#EPOAQQWO'#ESO:RQ7[O'#EjOA]QWO'#EjOAhQpO'#FbOOQU'#Cf'#CfOOQ07`'#Dn'#DnOOQ07`'#Jm'#JmO%[Q^O'#JmOOQO'#Jq'#JqOOQO'#Ib'#IbOBhQ`O'#EcOOQ07`'#Eb'#EbOCdQ07pO'#EcOCnQ`O'#EVOOQO'#Jp'#JpODSQ`O'#JqOEaQ`O'#EVOCnQ`O'#EcPEnO!0LbO'#CaPOOO)CDu)CDuOOOO'#IX'#IXOEyO!bO,59TOOQ07b,59T,59TOOOO'#IY'#IYOFXO#tO,59TO%[Q^O'#D`OOOO'#I['#I[OFgO?MpO,59xOOQ07b,59x,59xOFuQ^O'#I]OGYQWO'#JkOI[QrO'#JkO+}Q^O'#JkOIcQWO,5:OOIyQWO'#ElOJWQWO'#JyOJcQWO'#JxOJcQWO'#JxOJkQWO,5;YOJpQWO'#JwOOQ07f,5:Z,5:ZOJwQ^O,5:ZOLxQ08SO,5:eOMiQWO,5:mONSQ07hO'#JvONZQWO'#JuO9ZQWO'#JuONoQWO'#JuONwQWO,5;XON|QWO'#JuO!#UQrO'#JjOOQ07b'#Ch'#ChO%[Q^O'#ERO!#tQpO,5:rOOQO'#Jr'#JrOOQO-E<c-E<cO9aQWO,5=XO!$[QWO,5=XO!$aQ^O,5;VO!&dQ7[O'#EgO!'}QWO,5;VO!)mQ7[O'#DsO!)tQ^O'#DxO!*OQ`O,5;`O!*WQ`O,5;`O%[Q^O,5;`OOQU'#FR'#FROOQU'#FT'#FTO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aO%[Q^O,5;aOOQU'#FX'#FXO!*fQ^O,5;rOOQ07b,5;w,5;wOOQ07b,5;x,5;xO!,iQWO,5;xOOQ07b,5;y,5;yO%[Q^O'#IiO!,qQ07hO,5<eO!&dQ7[O,5;aO!-`Q7[O,5;aO%[Q^O,5;uO!-gQ&jO'#FgO!.dQ&jO'#J}O!.OQ&jO'#J}O!.kQ&jO'#J}OOQO'#J}'#J}O!/PQ&jO,5<POOOS,5<],5<]O!/bQ^O'#FsOOOS'#Ih'#IhO7YO,YO,5;}O!/iQ&jO'#FuOOQ07b,5;},5;}O!0YQMhO'#CuOOQ07b'#Cy'#CyO!0mQWO'#CyO!0rO?MpO'#C}O!1`Q7[O,5<bO!1gQWO,5<dO!3SQ!LQO'#GSO!3aQWO'#GTO!3fQWO'#GTO!3kQ!LQO'#GXO!4jQ`O'#G]OOQO'#Gh'#GhO!(SQ7[O'#GgOOQO'#Gj'#GjO!(SQ7[O'#GiO!5]QMhO'#JdOOQ07b'#Jd'#JdO!5gQWO'#JcO!5uQWO'#JbO!5}QWO'#CtOOQ07b'#Cw'#CwOOQ07b'#DR'#DROOQ07b'#DT'#DTO1SQWO'#DVO!(SQ7[O'#FzO!(SQ7[O'#F|O!6VQWO'#GOO!6[QWO'#GPO!3fQWO'#GVO!(SQ7[O'#G[O!6aQWO'#EmO!7OQWO,5<cOOQ07`'#Cq'#CqO!7WQWO'#EnO!8QQ`O'#EoOOQ07`'#Jw'#JwO!8XQ07hO'#KWO9kQ07hO,5=]O`Q^O,5>mOOQU'#J`'#J`OOQU,5>n,5>nOOQU-E<U-E<UO!:ZQ08SO,5:]O!<wQ08SO,5:iO%[Q^O,5:iO!?bQ08SO,5:kOOQO,5@q,5@qO!@RQ7[O,5=XO!@aQ07hO'#JaO9UQWO'#JaO!@rQ07hO,59YO!@}Q`O,59YO!AVQ7[O,59YO:RQ7[O,59YO!AbQWO,5;VO!AjQWO'#HZO!BOQWO'#KZO%[Q^O,5;zO!7{Q`O,5;|O!BWQWO,5=tO!B]QWO,5=tO!BbQWO,5=tO9kQ07hO,5=tO;sQWO,5=dOOQO'#Cu'#CuO!BpQ`O,5=aO!BxQ7[O,5=bO!CTQWO,5=dO!CYQpO,5=gO!CbQWO'#KVO>pQWO'#HQO9aQWO'#HSO!CgQWO'#HSO:RQ7[O'#HUO!ClQWO'#HUOOQU,5=j,5=jO!CqQWO'#HVO!DSQWO'#CnO!DXQWO,59OO!DcQWO,59OO!FhQ^O,59OOOQU,59O,59OO!FxQ07hO,59OO%[Q^O,59OO!ITQ^O'#H^OOQU'#H_'#H_OOQU'#H`'#H`O`Q^O,5=vO!IkQWO,5=vO`Q^O,5=|O`Q^O,5>OO!IpQWO,5>QO`Q^O,5>SO!IuQWO,5>VO!IzQ^O,5>]OOQU,5>c,5>cO%[Q^O,5>cO9kQ07hO,5>eOOQU,5>g,5>gO!NUQWO,5>gOOQU,5>i,5>iO!NUQWO,5>iOOQU,5>k,5>kO!NZQ`O'#D[O%[Q^O'#JmO!NxQ`O'#JmO# gQ`O'#DjO# xQ`O'#DjO#$ZQ^O'#DjO#$bQWO'#JlO#$jQWO,5:TO#$oQWO'#EpO#$}QWO'#JzO#%VQWO,5;ZO#%[Q`O'#DjO#%iQ`O'#EUOOQ07b,5:n,5:nO%[Q^O,5:nO#%pQWO,5:nO>pQWO,5;UO!@}Q`O,5;UO!AVQ7[O,5;UO:RQ7[O,5;UO#%xQWO,5@XO#%}Q$ISO,5:rOOQO-E<`-E<`O#'TQ07pO,5:}OCnQ`O,5:qO#'_Q`O,5:qOCnQ`O,5:}O!@rQ07hO,5:qOOQ07`'#Ef'#EfOOQO,5:},5:}O%[Q^O,5:}O#'lQ07hO,5:}O#'wQ07hO,5:}O!@}Q`O,5:qOOQO,5;T,5;TO#(VQ07hO,5:}POOO'#IV'#IVP#(kO!0LbO,58{POOO,58{,58{OOOO-E<V-E<VOOQ07b1G.o1G.oOOOO-E<W-E<WO#(vQpO,59zOOOO-E<Y-E<YOOQ07b1G/d1G/dO#({QrO,5>wO+}Q^O,5>wOOQO,5>},5>}O#)VQ^O'#I]OOQO-E<Z-E<ZO#)dQWO,5@VO#)lQrO,5@VO#)sQWO,5@dOOQ07b1G/j1G/jO%[Q^O,5@eO#){QWO'#IcOOQO-E<a-E<aO#)sQWO,5@dOOQ07`1G0t1G0tOOQ07f1G/u1G/uOOQ07f1G0X1G0XO%[Q^O,5@bO#*aQ07hO,5@bO#*rQ07hO,5@bO#*yQWO,5@aO9ZQWO,5@aO#+RQWO,5@aO#+aQWO'#IfO#*yQWO,5@aOOQ07`1G0s1G0sO!*OQ`O,5:tO!*ZQ`O,5:tOOQO,5:v,5:vO#,RQWO,5:vO#,ZQ7[O1G2sO9aQWO1G2sOOQ07b1G0q1G0qO#,iQ08SO1G0qO#-nQ08QO,5;ROOQ07b'#GR'#GRO#.[Q08SO'#JdO!$aQ^O1G0qO#0dQ7[O'#JnO#0nQWO,5:_O#0sQrO'#JoO%[Q^O'#JoO#0}QWO,5:dOOQ07b'#D['#D[OOQ07b1G0z1G0zO%[Q^O1G0zOOQ07b1G1d1G1dO#1SQWO1G0zO#3kQ08SO1G0{O#3rQ08SO1G0{O#6]Q08SO1G0{O#6dQ08SO1G0{O#8nQ08SO1G0{O#9UQ08SO1G0{O#<OQ08SO1G0{O#<VQ08SO1G0{O#>jQ08SO1G0{O#>wQ08SO1G0{O#@uQ08SO1G0{O#CuQ(CYO'#ChO#EsQ(CYO1G1^O#EzQ(CYO'#JjO!,lQWO1G1dO#F[Q08SO,5?TOOQ07`-E<g-E<gO#GOQ08SO1G0{OOQ07b1G0{1G0{O#IZQ08SO1G1aO#I}Q&jO,5<TO#JVQ&jO,5<UO#J_Q&jO'#FlO#JvQWO'#FkOOQO'#KO'#KOOOQO'#Ig'#IgO#J{Q&jO1G1kOOQ07b1G1k1G1kOOOS1G1v1G1vO#K^Q(CYO'#JiO#KhQWO,5<_O!*fQ^O,5<_OOOS-E<f-E<fOOQ07b1G1i1G1iO#KmQ`O'#J}OOQ07b,5<a,5<aO#KuQ`O,5<aOOQ07b,59e,59eO!&dQ7[O'#DPOOOO'#IZ'#IZO#KzO?MpO,59iOOQ07b,59i,59iO%[Q^O1G1|O!6[QWO'#IkO#LVQ7[O,5<uOOQ07b,5<r,5<rO!(SQ7[O'#InO#LuQ7[O,5=RO!(SQ7[O'#IpO#MhQ7[O,5=TO!&dQ7[O,5=VOOQO1G2O1G2OO#MrQpO'#CqO#NVQpO,5<nO#N^QWO'#KRO9aQWO'#KRO#NlQWO,5<pO!(SQ7[O,5<oO#NqQWO'#GUO#N|QWO,5<oO$ RQpO'#GRO$ `QpO'#KSO$ jQWO'#KSO!&dQ7[O'#KSO$ oQWO,5<sO$ tQ`O'#G^O!4eQ`O'#G^O$!VQWO'#G`O$![QWO'#GbO!3fQWO'#GeO$!aQ07hO'#ImO$!lQ`O,5<wOOQ07f,5<w,5<wO$!sQ`O'#G^O$#RQ`O'#G_O$#ZQ`O'#G_O$#`Q7[O,5=RO$#pQ7[O,5=TOOQ07b,5=W,5=WO!(SQ7[O,5?}O!(SQ7[O,5?}O$$QQWO'#IrO$$]QWO,5?|O$$eQWO,59`O$%UQ7[O,59qOOQ07b,59q,59qO$%wQ7[O,5<fO$&jQ7[O,5<hO@bQWO,5<jOOQ07b,5<k,5<kO$&tQWO,5<qO$&yQ7[O,5<vO$'ZQWO'#JuO!$aQ^O1G1}O$'`QWO1G1}O9ZQWO'#JxO9ZQWO'#EpO%[Q^O'#EpO9ZQWO'#ItO$'eQ07hO,5@rOOQU1G2w1G2wOOQU1G4X1G4XOOQ07b1G/w1G/wO!,iQWO1G/wO$)jQ08SO1G0TOOQU1G2s1G2sO!&dQ7[O1G2sO%[Q^O1G2sO#,^QWO1G2sO$+nQ7[O'#EgOOQ07`,5?{,5?{O$+xQ07hO,5?{OOQU1G.t1G.tO!@rQ07hO1G.tO!@}Q`O1G.tO!AVQ7[O1G.tO$,ZQWO1G0qO$,`QWO'#ChO$,kQWO'#K[O$,sQWO,5=uO$,xQWO'#K[O$,}QWO'#K[O$-]QWO'#IzO$-kQWO,5@uO$-sQrO1G1fOOQ07b1G1h1G1hO9aQWO1G3`O@bQWO1G3`O$-zQWO1G3`O$.PQWO1G3`OOQU1G3`1G3`O!CTQWO1G3OO!&dQ7[O1G2{O$.UQWO1G2{OOQU1G2|1G2|O!&dQ7[O1G2|O$.ZQWO1G2|O$.cQ`O'#GzOOQU1G3O1G3OO!4eQ`O'#IvO!CYQpO1G3ROOQU1G3R1G3ROOQU,5=l,5=lO$.kQ7[O,5=nO9aQWO,5=nO$![QWO,5=pO9UQWO,5=pO!@}Q`O,5=pO!AVQ7[O,5=pO:RQ7[O,5=pO$.yQWO'#KYO$/UQWO,5=qOOQU1G.j1G.jO$/ZQ07hO1G.jO@bQWO1G.jO$/fQWO1G.jO9kQ07hO1G.jO$1kQrO,5@wO$1{QWO,5@wO9ZQWO,5@wO$2WQ^O,5=xO$2_QWO,5=xOOQU1G3b1G3bO`Q^O1G3bOOQU1G3h1G3hOOQU1G3j1G3jO>kQWO1G3lO$2dQ^O1G3nO$6hQ^O'#HmOOQU1G3q1G3qO$6uQWO'#HsO>pQWO'#HuOOQU1G3w1G3wO$6}Q^O1G3wO9kQ07hO1G3}OOQU1G4P1G4POOQ07`'#GY'#GYO9kQ07hO1G4RO9kQ07hO1G4TO$;UQWO,5@XO!*fQ^O,5;[O9ZQWO,5;[O>pQWO,5:UO!*fQ^O,5:UO!@}Q`O,5:UO$;ZQ(CYO,5:UOOQO,5;[,5;[O$;eQ`O'#I^O$;{QWO,5@WOOQ07b1G/o1G/oO$<TQ`O'#IdO$<_QWO,5@fOOQ07`1G0u1G0uO# xQ`O,5:UOOQO'#Ia'#IaO$<gQ`O,5:pOOQ07f,5:p,5:pO#%sQWO1G0YOOQ07b1G0Y1G0YO%[Q^O1G0YOOQ07b1G0p1G0pO>pQWO1G0pO!@}Q`O1G0pO!AVQ7[O1G0pOOQ07`1G5s1G5sO!@rQ07hO1G0]OOQO1G0i1G0iO%[Q^O1G0iO$<nQ07hO1G0iO$<yQ07hO1G0iO!@}Q`O1G0]OCnQ`O1G0]O$=XQ07hO1G0iOOQO1G0]1G0]O$=mQ08SO1G0iPOOO-E<T-E<TPOOO1G.g1G.gOOOO1G/f1G/fO$=wQpO,5<eO$>PQrO1G4cOOQO1G4i1G4iO%[Q^O,5>wO$>ZQWO1G5qO$>cQWO1G6OO$>kQrO1G6PO9ZQWO,5>}O$>uQ08SO1G5|O%[Q^O1G5|O$?VQ07hO1G5|O$?hQWO1G5{O$?hQWO1G5{O9ZQWO1G5{O$?pQWO,5?QO9ZQWO,5?QOOQO,5?Q,5?QO$@UQWO,5?QO$'ZQWO,5?QOOQO-E<d-E<dOOQO1G0`1G0`OOQO1G0b1G0bO!,lQWO1G0bOOQU7+(_7+(_O!&dQ7[O7+(_O%[Q^O7+(_O$@dQWO7+(_O$@oQ7[O7+(_O$@}Q08SO,5=RO$CYQ08SO,5=TO$EeQ08SO,5=RO$GvQ08SO,5=TO$JXQ08SO,59qO$LaQ08SO,5<fO$NlQ08SO,5<hO%!wQ08SO,5<vOOQ07b7+&]7+&]O%%YQ08SO7+&]O%%|Q7[O'#I_O%&WQWO,5@YOOQ07b1G/y1G/yO%&`Q^O'#I`O%&mQWO,5@ZO%&uQrO,5@ZOOQ07b1G0O1G0OO%'PQWO7+&fOOQ07b7+&f7+&fO%'UQ(CYO,5:eO%[Q^O7+&xO%'`Q(CYO,5:]O%'mQ(CYO,5:iO%'wQ(CYO,5:kOOQ07b7+'O7+'OOOQO1G1o1G1oOOQO1G1p1G1pO%(RQtO,5<WO!*fQ^O,5<VOOQO-E<e-E<eOOQ07b7+'V7+'VOOOS7+'b7+'bOOOS1G1y1G1yO%(^QWO1G1yOOQ07b1G1{1G1{O%(cQpO,59kOOOO-E<X-E<XOOQ07b1G/T1G/TO%(jQ08SO7+'hOOQ07b,5?V,5?VO%)^QpO,5?VOOQ07b1G2a1G2aP!&dQ7[O'#IkPOQ07b-E<i-E<iO%)|Q7[O,5?YOOQ07b-E<l-E<lO%*oQ7[O,5?[OOQ07b-E<n-E<nO%*yQpO1G2qOOQ07b1G2Y1G2YO%+QQWO'#IjO%+`QWO,5@mO%+`QWO,5@mO%+hQWO,5@mO%+sQWO,5@mOOQO1G2[1G2[O%,RQ7[O1G2ZO!(SQ7[O1G2ZO%,cQ!LQO'#IlO%,sQWO,5@nO!&dQ7[O,5@nO%,{QpO,5@nOOQ07b1G2_1G2_OOQ07`,5<x,5<xOOQ07`,5<y,5<yO$'ZQWO,5<yOC_QWO,5<yO!@}Q`O,5<xOOQO'#Ga'#GaO%-VQWO,5<zOOQ07`,5<|,5<|O$'ZQWO,5=POOQO,5?X,5?XOOQO-E<k-E<kOOQ07f1G2c1G2cO!4eQ`O,5<xO%-_QWO,5<yO$!VQWO,5<zO!4eQ`O,5<yO!(SQ7[O'#InO%.RQ7[O1G2mO!(SQ7[O'#IpO%.tQ7[O1G2oO%/OQ7[O1G5iO%/YQ7[O1G5iOOQO,5?^,5?^OOQO-E<p-E<pOOQO1G.z1G.zO!7{Q`O,59sO%[Q^O,59sO%/gQWO1G2UO!(SQ7[O1G2]O%/lQ08SO7+'iOOQ07b7+'i7+'iO!$aQ^O7+'iO%0`QWO,5;[OOQ07`,5?`,5?`OOQ07`-E<r-E<rOOQ07b7+%c7+%cO%0eQpO'#KTO#%sQWO7+(_O%0oQrO7+(_O$@gQWO7+(_O%0vQ08QO'#ChO%1ZQ08QO,5<}O%1{QWO,5<}OOQ07`1G5g1G5gOOQU7+$`7+$`O!@rQ07hO7+$`O!@}Q`O7+$`O!$aQ^O7+&]O%2QQWO'#IyO%2iQWO,5@vOOQO1G3a1G3aO9aQWO,5@vO%2iQWO,5@vO%2qQWO,5@vOOQO,5?f,5?fOOQO-E<x-E<xOOQ07b7+'Q7+'QO%2vQWO7+(zO9kQ07hO7+(zO9aQWO7+(zO@bQWO7+(zOOQU7+(j7+(jO%2{Q08QO7+(gO!&dQ7[O7+(gO%3VQpO7+(hOOQU7+(h7+(hO!&dQ7[O7+(hO%3^QWO'#KXO%3iQWO,5=fOOQO,5?b,5?bOOQO-E<t-E<tOOQU7+(m7+(mO%4xQ`O'#HTOOQU1G3Y1G3YO!&dQ7[O1G3YO%[Q^O1G3YO%5PQWO1G3YO%5[Q7[O1G3YO9kQ07hO1G3[O$![QWO1G3[O9UQWO1G3[O!@}Q`O1G3[O!AVQ7[O1G3[O%5jQWO'#IxO%6OQWO,5@tO%6WQ`O,5@tOOQ07`1G3]1G3]OOQU7+$U7+$UO@bQWO7+$UO9kQ07hO7+$UO%6cQWO7+$UO%[Q^O1G6cO%[Q^O1G6dO%6hQ07hO1G6cO%6rQ^O1G3dO%6yQWO1G3dO%7OQ^O1G3dOOQU7+(|7+(|O9kQ07hO7+)WO`Q^O7+)YOOQU'#K_'#K_OOQU'#I{'#I{O%7VQ^O,5>XOOQU,5>X,5>XO%[Q^O'#HnO%7dQWO'#HpOOQU,5>_,5>_O9ZQWO,5>_OOQU,5>a,5>aOOQU7+)c7+)cOOQU7+)i7+)iOOQU7+)m7+)mOOQU7+)o7+)oO%7iQ`O1G5sO%7}Q(CYO1G0vO%8XQWO1G0vOOQO1G/p1G/pO%8dQ(CYO1G/pO>pQWO1G/pO!*fQ^O'#DjOOQO,5>x,5>xOOQO-E<[-E<[OOQO,5?O,5?OOOQO-E<b-E<bO!@}Q`O1G/pOOQO-E<_-E<_OOQ07f1G0[1G0[OOQ07b7+%t7+%tO#%sQWO7+%tOOQ07b7+&[7+&[O>pQWO7+&[O!@}Q`O7+&[OOQO7+%w7+%wO$=mQ08SO7+&TOOQO7+&T7+&TO%[Q^O7+&TO%8nQ07hO7+&TO!@rQ07hO7+%wO!@}Q`O7+%wO%8yQ07hO7+&TO%9XQ08SO7++hO%[Q^O7++hO%9iQWO7++gO%9iQWO7++gOOQO1G4l1G4lO9ZQWO1G4lO%9qQWO1G4lOOQO7+%|7+%|O#%sQWO<<KyO%0oQrO<<KyO%:PQWO<<KyOOQU<<Ky<<KyO!&dQ7[O<<KyO%[Q^O<<KyO%:XQWO<<KyO%:dQ08SO,5?YO%<oQ08SO,5?[O%>zQ08SO1G2ZO%A]Q08SO1G2mO%ChQ08SO1G2oO%EsQ7[O,5>yOOQO-E<]-E<]O%E}QrO,5>zO%[Q^O,5>zOOQO-E<^-E<^O%FXQWO1G5uOOQ07b<<JQ<<JQO%FaQ(CYO1G0qO%HkQ(CYO1G0{O%HrQ(CYO1G0{O%JvQ(CYO1G0{O%J}Q(CYO1G0{O%LrQ(CYO1G0{O%MYQ(CYO1G0{O& mQ(CYO1G0{O& tQ(CYO1G0{O&#rQ(CYO1G0{O&$PQ(CYO1G0{O&%}Q(CYO1G0{O&&bQ08SO<<JdO&'gQ(CYO1G0{O&)]Q(CYO'#JdO&+`Q(CYO1G1aO&+mQ(CYO1G0TO!*fQ^O'#FnOOQO'#KP'#KPOOQO1G1r1G1rO&+wQWO1G1qO&+|Q(CYO,5?TOOOS7+'e7+'eOOOO1G/V1G/VOOQ07b1G4q1G4qO!(SQ7[O7+(]O&,WQWO,5?UO9aQWO,5?UOOQO-E<h-E<hO&,fQWO1G6XO&,fQWO1G6XO&,nQWO1G6XO&,yQ7[O7+'uO&-ZQpO,5?WO&-eQWO,5?WO!&dQ7[O,5?WOOQO-E<j-E<jO&-jQpO1G6YO&-tQWO1G6YOOQ07`1G2e1G2eO$'ZQWO1G2eOOQ07`1G2d1G2dO&-|QWO1G2fO!&dQ7[O1G2fOOQ07`1G2k1G2kO!@}Q`O1G2dOC_QWO1G2eO&.RQWO1G2fO&.ZQWO1G2eO&.}Q7[O,5?YOOQ07b-E<m-E<mO&/pQ7[O,5?[OOQ07b-E<o-E<oO!(SQ7[O7++TOOQ07b1G/_1G/_O&/zQWO1G/_OOQ07b7+'p7+'pO&0PQ7[O7+'wO&0aQ08SO<<KTOOQ07b<<KT<<KTO&1TQWO1G0vO!&dQ7[O'#IsO&1YQWO,5@oO!&dQ7[O1G2iOOQU<<Gz<<GzO!@rQ07hO<<GzO&1bQ08SO<<IwOOQ07b<<Iw<<IwOOQO,5?e,5?eO&2UQWO,5?eO&2ZQWO,5?eOOQO-E<w-E<wO&2iQWO1G6bO&2iQWO1G6bO9aQWO1G6bO@bQWO<<LfOOQU<<Lf<<LfO&2qQWO<<LfO9kQ07hO<<LfOOQU<<LR<<LRO%2{Q08QO<<LROOQU<<LS<<LSO%3VQpO<<LSO&2vQ`O'#IuO&3RQWO,5@sO!*fQ^O,5@sOOQU1G3Q1G3QO&3ZQ^O'#JmOOQO'#Iw'#IwO9kQ07hO'#IwO&3eQ`O,5=oOOQU,5=o,5=oO&3lQ`O'#EcO&4QQWO7+(tO&4VQWO7+(tOOQU7+(t7+(tO!&dQ7[O7+(tO%[Q^O7+(tO&4_QWO7+(tOOQU7+(v7+(vO9kQ07hO7+(vO$![QWO7+(vO9UQWO7+(vO!@}Q`O7+(vO&4jQWO,5?dOOQO-E<v-E<vOOQO'#HW'#HWO&4uQWO1G6`O9kQ07hO<<GpOOQU<<Gp<<GpO@bQWO<<GpO&4}QWO7++}O&5SQWO7+,OO%[Q^O7++}O%[Q^O7+,OOOQU7+)O7+)OO&5XQWO7+)OO&5^Q^O7+)OO&5eQWO7+)OOOQU<<Lr<<LrOOQU<<Lt<<LtOOQU-E<y-E<yOOQU1G3s1G3sO&5jQWO,5>YOOQU,5>[,5>[O&5oQWO1G3yO9ZQWO7+&bO!*fQ^O7+&bOOQO7+%[7+%[O&5tQ(CYO1G6PO>pQWO7+%[OOQ07b<<I`<<I`OOQ07b<<Iv<<IvO>pQWO<<IvOOQO<<Io<<IoO$=mQ08SO<<IoO%[Q^O<<IoOOQO<<Ic<<IcO!@rQ07hO<<IcO&6OQ07hO<<IoO&6ZQ08SO<= SO&6kQWO<= ROOQO7+*W7+*WO9ZQWO7+*WOOQUANAeANAeO&6sQWOANAeO!&dQ7[OANAeO#%sQWOANAeO%0oQrOANAeO%[Q^OANAeO&6{Q08SO7+'uO&9^Q08SO,5?YO&;iQ08SO,5?[O&=tQ08SO7+'wO&@VQrO1G4fO&@aQ(CYO7+&]O&BeQ(CYO,5=RO&DlQ(CYO,5=TO&D|Q(CYO,5=RO&E^Q(CYO,5=TO&EnQ(CYO,59qO&GqQ(CYO,5<fO&ItQ(CYO,5<hO&KwQ(CYO,5<vO&MmQ(CYO7+'hO&MzQ(CYO7+'iO&NXQWO,5<YOOQO7+']7+']O&N^Q7[O<<KwOOQO1G4p1G4pO&NeQWO1G4pO&NpQWO1G4pO' OQWO7++sO' OQWO7++sO!&dQ7[O1G4rO' WQpO1G4rO' bQWO7++tOOQ07`7+(P7+(PO$'ZQWO7+(QO' jQpO7+(QOOQ07`7+(O7+(OO$'ZQWO7+(PO' qQWO7+(QO!&dQ7[O7+(QOC_QWO7+(PO' vQ7[O<<NoOOQ07b7+$y7+$yO'!QQpO,5?_OOQO-E<q-E<qO'![Q08QO7+(TOOQUAN=fAN=fO9aQWO1G5POOQO1G5P1G5PO'!lQWO1G5PO'!qQWO7++|O'!qQWO7++|O9kQ07hOANBQO@bQWOANBQOOQUANBQANBQOOQUANAmANAmOOQUANAnANAnO'!yQWO,5?aOOQO-E<s-E<sO'#UQ(CYO1G6_O'%fQrO'#ChOOQO,5?c,5?cOOQO-E<u-E<uOOQU1G3Z1G3ZO&3ZQ^O,5<zOOQU<<L`<<L`O!&dQ7[O<<L`O&4QQWO<<L`O'%pQWO<<L`O%[Q^O<<L`OOQU<<Lb<<LbO9kQ07hO<<LbO$![QWO<<LbO9UQWO<<LbO'%xQ`O1G5OO'&TQWO7++zOOQUAN=[AN=[O9kQ07hOAN=[OOQU<= i<= iOOQU<= j<= jO'&]QWO<= iO'&bQWO<= jOOQU<<Lj<<LjO'&gQWO<<LjO'&lQ^O<<LjOOQU1G3t1G3tO>pQWO7+)eO'&sQWO<<I|O''OQ(CYO<<I|OOQO<<Hv<<HvOOQ07bAN?bAN?bOOQOAN?ZAN?ZO$=mQ08SOAN?ZOOQOAN>}AN>}O%[Q^OAN?ZOOQO<<Mr<<MrOOQUG27PG27PO!&dQ7[OG27PO#%sQWOG27PO''YQWOG27PO%0oQrOG27PO''bQ(CYO<<JdO''oQ(CYO1G2ZO')eQ(CYO,5?YO'+hQ(CYO,5?[O'-kQ(CYO1G2mO'/nQ(CYO1G2oO'1qQ(CYO<<KTO'2OQ(CYO<<IwOOQO1G1t1G1tO!(SQ7[OANAcOOQO7+*[7+*[O'2]QWO7+*[O'2hQWO<= _O'2pQpO7+*^OOQ07`<<Kl<<KlO$'ZQWO<<KlOOQ07`<<Kk<<KkO'2zQpO<<KlO$'ZQWO<<KkOOQO7+*k7+*kO9aQWO7+*kO'3RQWO<= hOOQUG27lG27lO9kQ07hOG27lO!*fQ^O1G4{O'3ZQWO7++yO&4QQWOANAzOOQUANAzANAzO!&dQ7[OANAzO'3cQWOANAzOOQUANA|ANA|O9kQ07hOANA|O$![QWOANA|OOQO'#HX'#HXOOQO7+*j7+*jOOQUG22vG22vOOQUANETANETOOQUANEUANEUOOQUANBUANBUO'3kQWOANBUOOQU<<MP<<MPO!*fQ^OAN?hOOQOG24uG24uO$=mQ08SOG24uO#%sQWOLD,kOOQULD,kLD,kO!&dQ7[OLD,kO'3pQWOLD,kO'3xQ(CYO7+'uO'5nQ(CYO,5?YO'7qQ(CYO,5?[O'9tQ(CYO7+'wO';jQ7[OG26}OOQO<<Mv<<MvOOQ07`ANAWANAWO$'ZQWOANAWOOQ07`ANAVANAVOOQO<<NV<<NVOOQULD-WLD-WO';zQ(CYO7+*gOOQUG27fG27fO&4QQWOG27fO!&dQ7[OG27fOOQUG27hG27hO9kQ07hOG27hOOQUG27pG27pO'<UQ(CYOG25SOOQOLD*aLD*aOOQU!$(!V!$(!VO#%sQWO!$(!VO!&dQ7[O!$(!VO'<`Q08SOG26}OOQ07`G26rG26rOOQULD-QLD-QO&4QQWOLD-QOOQULD-SLD-SOOQU!)9Eq!)9EqO#%sQWO!)9EqOOQU!$(!l!$(!lOOQU!.K;]!.K;]O'>qQ(CYOG26}O!*fQ^O'#DyO1PQWO'#EWO'@gQrO'#JiO!*fQ^O'#DqO'@nQ^O'#D}O'@uQrO'#ChO'C]QrO'#ChO!*fQ^O'#EPO'CmQ^O,5;VO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O,5;aO!*fQ^O'#IiO'EpQWO,5<eO'ExQ7[O,5;aO'GcQ7[O,5;aO!*fQ^O,5;uO!&dQ7[O'#GgO'ExQ7[O'#GgO!&dQ7[O'#GiO'ExQ7[O'#GiO1SQWO'#DVO1SQWO'#DVO!&dQ7[O'#FzO'ExQ7[O'#FzO!&dQ7[O'#F|O'ExQ7[O'#F|O!&dQ7[O'#G[O'ExQ7[O'#G[O!*fQ^O,5:iO!*fQ^O,5@eO'CmQ^O1G0qO'GjQ(CYO'#ChO!*fQ^O1G1|O!&dQ7[O'#InO'ExQ7[O'#InO!&dQ7[O'#IpO'ExQ7[O'#IpO!&dQ7[O,5<oO'ExQ7[O,5<oO'CmQ^O1G1}O!*fQ^O7+&xO!&dQ7[O1G2ZO'ExQ7[O1G2ZO!&dQ7[O'#InO'ExQ7[O'#InO!&dQ7[O'#IpO'ExQ7[O'#IpO!&dQ7[O1G2]O'ExQ7[O1G2]O'CmQ^O7+'iO'CmQ^O7+&]O!&dQ7[OANAcO'ExQ7[OANAcO'GtQWO'#EkO'GyQWO'#EkO'HRQWO'#FZO'HWQWO'#EuO'H]QWO'#JyO'HhQWO'#JwO'HsQWO,5;VO'HxQ7[O,5<bO'IPQWO'#GTO'IUQWO'#GTO'IZQWO,5<cO'IcQWO,5;VO'IkQ(CYO1G1^O'IrQWO,5<oO'IwQWO,5<oO'I|QWO,5<qO'JRQWO,5<qO'JWQWO1G1}O'J]QWO1G0qO'JbQ7[O<<KwO'JiQ7[O<<KwO7hQ7[O'#FxO9UQWO'#FwOA]QWO'#EjO!*fQ^O,5;rO!3fQWO'#GTO!3fQWO'#GTO!3fQWO'#GVO!3fQWO'#GVO!(SQ7[O7+(]O!(SQ7[O7+(]O%*yQpO1G2qO%*yQpO1G2qO!&dQ7[O,5=VO!&dQ7[O,5=V",
  stateData: "'Km~O'tOS'uOSSOS'vRQ~OPYOQYORfOX!VO`qOczOdyOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![XO!fuO!kZO!nYO!oYO!pYO!rvO!twO!wxO!{]O#s!PO$T|O%b}O%d!QO%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO%s!UO&P!WO&V!XO&X!YO&Z!ZO&]![O&`!]O&f!^O&l!_O&n!`O&p!aO&r!bO&t!cO'{SO'}TO(QUO(XVO(g[O(tiO~OVtO~P`OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~O`!vOo!nO!P!oO!_!xO!`!uO!a!uO!{:dO#P!pO#Q!pO#R!wO#S!pO#T!pO#W!yO#X!yO'|!lO'}TO(QUO([!mO(g!sO~O'v!zO~OP[XZ[X`[Xn[X|[X}[X!P[X!Y[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X'r[X(X[X(h[X(o[X(p[X~O!d$|X~P(qO^!|O'}#OO(O!|O(P#OO~O^#PO(P#OO(Q#OO(R#PO~Ot#RO!R#SO(Y#SO(Z#UO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{:hO'}TO(QUO(XVO(g[O(tiO~O!X#YO!Y#VO!V(_P!V(lP~P+}O!Z#bO~P`OPYOQYORfOc!jOd!iOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'}TO(QUO(XVO(g[O(tiO~Ol#lO!X#hO!{]O#e#kO#f#hO'{:iO!j(iP~P.iO!k#nO'{#mO~O!w#rO!{]O%b#sO~O#g#tO~O!d#uO#g#tO~OP$]OZ$dOn$QO|#yO}#zO!P#{O!Y$aO!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O`(]X'r(]X'p(]X!j(]X!V(]X![(]X%c(]X!d(]X~P1qO#[$eO$O$eOP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X![(^X%c(^X~O`(^X!i(^X'r(^X'p(^X!V(^X!j(^Xr(^X!d(^X~P4XO#[$eO~O$Y$gO$[$fO$c$lO~ORfO![$mO$f$nO$h$pO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz%ZO!P${O![$|O!f%`O!k$xO#f%aO$T%^O$o%[O$q%]O$t%_O'{$rO'}TO(QUO(X$uO(o$}O(p%POf(UP~O!k%bO~O!P%eO![%fO'{%dO~O!d%jO~O`%kO'r%kO~O'|!lO~P%[O%h%rO~P%[Og%VO!k%bO'{%dO'|!lO~Od%yO!k%bO'{%dO~O#r$SO~O|&OO![%{O!k%}O%d&RO'{%dO'|!lO'}TO(QUO_(}P~O!w#rO~O%m&TO!P(yX![(yX'{(yX~O'{&UO~O!t&ZO#s!PO%d!QO%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO~Oc&`Od&_O!w&]O%b&^O%u&[O~P;xOc&cOdyO![&bO!t&ZO!wxO!{]O#s!PO%b}O%f!OO%g!OO%h!OO%k!RO%m!SO%p!TO%q!TO%s!UO~Oa&fO#[&iO%d&dO'|!lO~P<}O!k&jO!t&nO~O!k#nO~O![XO~O`%kO'q&vO'r%kO~O`%kO'q&yO'r%kO~O`%kO'q&{O'r%kO~O'p[X!V[Xr[X!j[X&T[X![[X%c[X!d[X~P(qO!_'YO!`'RO!a'RO'|!lO'}TO(QUO~Oo'PO!P'OO!X'SO([&}O!Z(`P!Z(nP~P@UOj']O!['ZO'{%dO~Od'bO!k%bO'{%dO~O|&OO!k%}O~Oo!nO!P!oO!{:dO#P!pO#Q!pO#S!pO#T!pO'|!lO'}TO(QUO([!mO(g!sO~O!_'hO!`'gO!a'gO#R!pO#W'iO#X'iO~PApO`%kOg%VO!d#uO!k%bO'r%kO(h'kO~O!o'oO#['mO~PCOOo!nO!P!oO'}TO(QUO([!mO(g!sO~O![XOo(eX!P(eX!_(eX!`(eX!a(eX!{(eX#P(eX#Q(eX#R(eX#S(eX#T(eX#W(eX#X(eX'|(eX'}(eX(Q(eX([(eX(g(eX~O!`'gO!a'gO'|!lO~PCnO'w'sO'x'sO'y'uO~O^!|O'}'wO(O!|O(P'wO~O^#PO(P'wO(Q'wO(R#PO~Ot#RO!R#SO(Y#SO(Z'{O~O!X'}O!V'PX!V'VX!Y'PX!Y'VX~P+}O!Y(PO!V(_X~OP$]OZ$dOn$QO|#yO}#zO!P#{O!Y(PO!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O!V(_X~PGbO!V(UO~O!V(kX!Y(kX!d(kX!j(kX(h(kX~O#[(kX#g#`X!Z(kX~PIhO#[(VO!V(mX!Y(mX~O!Y(WO!V(lX~O!V(ZO~O#[$eO~PIhO!Z([O~P`O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!maZ!man!ma!Y!ma!h!ma!o!ma#j!ma#k!ma#l!ma#m!ma#n!ma#o!ma#p!ma#q!ma#r!ma#t!ma#v!ma#x!ma#y!ma(h!ma(o!ma(p!ma~O`!ma'r!ma'p!ma!V!ma!j!mar!ma![!ma%c!ma!d!ma~PKOO!j(]O~O!d#uO#[(^O(h'kO!Y(jX`(jX'r(jX~O!j(jX~PMnO!P%eO![%fO!{]O#e(cO#f(bO'{%dO~O!Y(dO!j(iX~O!j(fO~O!P%eO![%fO#f(bO'{%dO~OP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!i(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#r(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X~O!d#uO!j(^X~P! [O|(gO}(hO!i#wO!k#xO!{!za!P!za~O!w!za%b!za![!za#e!za#f!za'{!za~P!#`O!w(lO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![XO!fuO!kZO!nYO!oYO!pYO!rvO!t!gO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~O#g(rO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz%ZO!P${O![$|O!f%`O!k$xO#f%aO$T%^O$o%[O$q%]O$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~Of(bP~P!(SO!X(vO!j(cP~P%[O([(xO(g[O~O!P(zO!k#xO([(xO(g[O~OP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![!eO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'{)YO'}TO(QUO(XVO(g[O(t<YO~O})]O!k#xO~O!Y$aO`$ma'r$ma'p$ma!j$ma!V$ma![$ma%c$ma!d$ma~O#s)aO~P!&dO|)dO!d)cO![$ZX$W$ZX$Y$ZX$[$ZX$c$ZX~O!d)cO![(qX$W(qX$Y(qX$[(qX$c(qX~O|)dO~P!.OO|)dO![(qX$W(qX$Y(qX$[(qX$c(qX~O![)fO$W)jO$Y)eO$[)eO$c)kO~O!X)nO~P!*fO$Y$gO$[$fO$c)rO~Oj$uX|$uX!P$uX!i$uX(o$uX(p$uX~OfiXf$uXjiX!YiX#[iX~P!/tOo)tO~Ot)uO(Y)vO(Z)xO~Oj*RO|)zO!P){O(o$}O(p%PO~Of)yO~P!0}Of*SO~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'}TO(QUO(X$uO(o$}O(p%PO~O!X*WO'{*TO!j(uP~P!1lO#g*YO~O!k*ZO~O!X*`O'{*]O!V(vP~P!1lOn*lO!P*dO!_*jO!`*cO!a*cO!k*ZO#W*kO%Y*fO'|!lO([!mO~O!Z*iO~P!3xO!i#wOj(WX|(WX!P(WX(o(WX(p(WX!Y(WX#[(WX~Of(WX#|(WX~P!4qOj*qO#[*pOf(VX!Y(VX~O!Y*rOf(UX~O'{&UOf(UP~O!k*yO~O'{(pO~Ol*}O!P%eO!X#hO![%fO!{]O#e#kO#f#hO'{%dO!j(iP~O!d#uO#g+OO~O!P%eO!X+QO!Y(WO![%fO'{%dO!V(lP~Oo'VO!P+SO!X+RO'}TO(QUO([(xO~O!Z(nP~P!7lO!Y+TO`(zX'r(zX~OP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO#y$YO(XVO(h$ZO(o#|O(p#}O~O`!ea!Y!ea'r!ea'p!ea!V!ea!j!ear!ea![!ea%c!ea!d!ea~P!8dO|#yO}#zO!P#{O!i#wO!k#xO(XVOP!qaZ!qan!qa!Y!qa!h!qa!o!qa#j!qa#k!qa#l!qa#m!qa#n!qa#o!qa#p!qa#q!qa#r!qa#t!qa#v!qa#x!qa#y!qa(h!qa(o!qa(p!qa~O`!qa'r!qa'p!qa!V!qa!j!qar!qa![!qa%c!qa!d!qa~P!:}O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!saZ!san!sa!Y!sa!h!sa!o!sa#j!sa#k!sa#l!sa#m!sa#n!sa#o!sa#p!sa#q!sa#r!sa#t!sa#v!sa#x!sa#y!sa(h!sa(o!sa(p!sa~O`!sa'r!sa'p!sa!V!sa!j!sar!sa![!sa%c!sa!d!sa~P!=hOg%VOj+^O!['ZO%c+]O~O!d+`O`(TX![(TX'r(TX!Y(TX~O`%kO![XO'r%kO~Og%VO!k%bO~Og%VO!k%bO'{%dO~O!d#uO#g(rO~Oa+kO%d+lO'{+hO'}TO(QUO!Z)OP~O!Y+mO_(}X~OZ+qO~O_+rO~O![%{O'{%dO'|!lO_(}P~Og%VO#[+wO~Og%VOj+zO![$|O~O![+|O~O|,OO![XO~O%h%rO~O!w,TO~Od,YO~Oa,ZO'{#mO'}TO(QUO!Z(|P~Od%yO~O%d!QO'{&UO~P<}OZ,`O_,_O~OPYOQYORfOczOdyOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO!fuO!kZO!nYO!oYO!pYO!rvO!wxO!{]O%b}O'}TO(QUO(XVO(g[O(tiO~O![!eO!t!gO$T!kO'{!dO~P!DkO_,_O`%kO'r%kO~OPYOQYORfOc!jOd!iOlkOnYOokOpkOvkOxYOzYO!PWO!TkO!UkO![!eO!fuO!kZO!nYO!oYO!pYO!rvO!w!hO$T!kO'{!dO'}TO(QUO(XVO(g[O(tiO~O`,eO!twO#s!OO%f!OO%g!OO%h!OO~P!GTO!k&jO~O&V,kO~O![,mO~O&h,oO&j,pOP&eaQ&eaR&eaX&ea`&eac&ead&eal&ean&eao&eap&eav&eax&eaz&ea!P&ea!T&ea!U&ea![&ea!f&ea!k&ea!n&ea!o&ea!p&ea!r&ea!t&ea!w&ea!{&ea#s&ea$T&ea%b&ea%d&ea%f&ea%g&ea%h&ea%k&ea%m&ea%p&ea%q&ea%s&ea&P&ea&V&ea&X&ea&Z&ea&]&ea&`&ea&f&ea&l&ea&n&ea&p&ea&r&ea&t&ea'p&ea'{&ea'}&ea(Q&ea(X&ea(g&ea(t&ea!Z&ea&^&eaa&ea&c&ea~O'{,uO~Og!bX!Y!OX!Y!bX!Z!OX!Z!bX!d!OX!d!bX!k!bX#[!OX~O!d,zO#[,yOg(aX!Y#dX!Y(aX!Z#dX!Z(aX!d(aX!k(aX~Og%VO!d,|O!k%bO!Y!^X!Z!^X~Oo!nO!P!oO'}TO(QUO([!mO~OP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![!eO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'}TO(QUO(XVO(g[O(t<YO~O'{;]O~P#!ZO!Y-QO!Z(`X~O!Z-SO~O!d,zO#[,yO!Y#dX!Z#dX~O!Y-TO!Z(nX~O!Z-VO~O!`-WO!a-WO'|!lO~P# xO!Z-ZO~P'_Oj-^O!['ZO~O!V-cO~Oo!za!_!za!`!za!a!za#P!za#Q!za#R!za#S!za#T!za#W!za#X!za'|!za'}!za(Q!za([!za(g!za~P!#`O!o-hO#[-fO~PCOO!`-jO!a-jO'|!lO~PCnO`%kO#[-fO'r%kO~O`%kO!d#uO#[-fO'r%kO~O`%kO!d#uO!o-hO#[-fO'r%kO(h'kO~O'w'sO'x'sO'y-oO~Or-pO~O!V'Pa!Y'Pa~P!8dO!X-tO!V'PX!Y'PX~P%[O!Y(PO!V(_a~O!V(_a~PGbO!Y(WO!V(la~O!P%eO!X-xO![%fO'{%dO!V'VX!Y'VX~O#[-zO!Y(ja!j(ja`(ja'r(ja~O!d#uO~P#*aO!Y(dO!j(ia~O!P%eO![%fO#f.OO'{%dO~Ol.TO!P%eO!X.QO![%fO!{]O#e.SO#f.QO'{%dO!Y'YX!j'YX~O}.XO!k#xO~Og%VOj.[O!['ZO%c.ZO~O`#_i!Y#_i'r#_i'p#_i!V#_i!j#_ir#_i![#_i%c#_i!d#_i~P!8dOj<fO|)zO!P){O(o$}O(p%PO~O#g#Za`#Za#[#Za'r#Za!Y#Za!j#Za![#Za!V#Za~P#-]O#g(WXP(WXZ(WX`(WXn(WX}(WX!h(WX!k(WX!o(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#p(WX#q(WX#r(WX#t(WX#v(WX#x(WX#y(WX'r(WX(X(WX(h(WX!j(WX!V(WX'p(WXr(WX![(WX%c(WX!d(WX~P!4qO!Y.iOf(bX~P!0}Of.kO~O!Y.lO!j(cX~P!8dO!j.oO~O!V.qO~OP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O(XVOZ#ii`#iin#ii!Y#ii!h#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#j#ii~P#1XO#j$OO~P#1XOP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO(XVOZ#ii`#ii!Y#ii!h#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~On#ii~P#3yOn$QO~P#3yOP$]On$QO|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO(XVO`#ii!Y#ii#t#ii#v#ii#x#ii#y#ii'r#ii(h#ii(o#ii(p#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~OZ#ii!h#ii#o#ii#p#ii#q#ii#r#ii~P#6kOZ$dO!h$SO#o$SO#p$SO#q$cO#r$SO~P#6kOP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO(XVO(p#}O`#ii!Y#ii#x#ii#y#ii'r#ii(h#ii(o#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#v$VO~P#9lO#v#ii~P#9lOP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO(XVO`#ii!Y#ii#x#ii#y#ii'r#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~O#v#ii(o#ii(p#ii~P#<^O#v$VO(o#|O(p#}O~P#<^OP$]OZ$dOn$QO|#yO}#zO!P#{O!h$SO!i#wO!k#xO!o$]O#j$OO#k$PO#l$PO#m$PO#n$RO#o$SO#p$SO#q$cO#r$SO#t$TO#v$VO#x$XO(XVO(o#|O(p#}O~O`#ii!Y#ii#y#ii'r#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~P#?UOP[XZ[Xn[X|[X}[X!P[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X!Y[X!Z[X~O#|[X~P#AoOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO#v:sO#x:uO#y:vO(XVO(h$ZO(o#|O(p#}O~O#|.sO~P#C|O#[:{O$O:{O#|(^X!Z(^X~P! [O`']a!Y']a'r']a'p']a!j']a!V']ar']a![']a%c']a!d']a~P!8dOP#iiZ#ii`#iin#ii}#ii!Y#ii!h#ii!i#ii!k#ii!o#ii#j#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii'r#ii(X#ii(h#ii'p#ii!V#ii!j#iir#ii![#ii%c#ii!d#ii~P#-]O`#}i!Y#}i'r#}i'p#}i!V#}i!j#}ir#}i![#}i%c#}i!d#}i~P!8dO$Y.xO$[.xO~O$Y.yO$[.yO~O!d)cO#[.zO![$`X$W$`X$Y$`X$[$`X$c$`X~O!X.{O~O![)fO$W.}O$Y)eO$[)eO$c/OO~O!Y:wO!Z(]X~P#C|O!Z/PO~O!d)cO$c(qX~O$c/RO~Ot)uO(Y)vO(Z/UO~O!V/YO~P!&dO(o$}Oj%Za|%Za!P%Za(p%Za!Y%Za#[%Za~Of%Za#|%Za~P#L^O(p%POj%]a|%]a!P%]a(o%]a!Y%]a#[%]a~Of%]a#|%]a~P#MPO!YeX!deX!jeX!j$uX(heX~P!/tO!j/bO~P#-]O!Y/cO!d#uO(h'kO!j(uX~O!j/hO~O!X*WO'{%dO!j(uP~O#g/jO~O!V$uX!Y$uX!d$|X~P!/tO!Y/kO!V(vX~P#-]O!d/mO~O!V/oO~Og%VOn/sO!d#uO!k%bO(h'kO~O'{/uO~O!d+`O~O`%kO!Y/yO'r%kO~O!Z/{O~P!3xO!`/|O!a/|O'|!lO([!mO~O!P0OO([!mO~O#W0PO~Of%Za!Y%Za#[%Za#|%Za~P!0}Of%]a!Y%]a#[%]a#|%]a~P!0}O'{&UOf'fX!Y'fX~O!Y*rOf(Ua~Of0YO~O|0ZO}0ZO!P0[Ojya(oya(pya!Yya#[ya~Ofya#|ya~P$$jO|)zO!P){Oj$na(o$na(p$na!Y$na#[$na~Of$na#|$na~P$%`O|)zO!P){Oj$pa(o$pa(p$pa!Y$pa#[$pa~Of$pa#|$pa~P$&RO#g0^O~Of%Oa!Y%Oa#[%Oa#|%Oa~P!0}O!d#uO~O#g0aO~O!Y+TO`(za'r(za~O|#yO}#zO!P#{O!i#wO!k#xO(XVOP!qiZ!qin!qi!Y!qi!h!qi!o!qi#j!qi#k!qi#l!qi#m!qi#n!qi#o!qi#p!qi#q!qi#r!qi#t!qi#v!qi#x!qi#y!qi(h!qi(o!qi(p!qi~O`!qi'r!qi'p!qi!V!qi!j!qir!qi![!qi%c!qi!d!qi~P$'pOg%VOn$tOo$sOp$sOv%XOx%YOz;QO!P${O![$|O!f<`O!k$xO#f;WO$T%^O$o;SO$q;UO$t%_O'}TO(QUO(X$uO(o$}O(p%PO~Ol0kO'{0jO~P$*ZO!d+`O`(Ta![(Ta'r(Ta!Y(Ta~O#g0qO~OZ[X!YeX!ZeX~O!Y0rO!Z)OX~O!Z0tO~OZ0uO~Oa0wO'{+hO'}TO(QUO~O![%{O'{%dO_'nX!Y'nX~O!Y+mO_(}a~O!j0zO~P!8dOZ0}O~O_1OO~O#[1RO~Oj1UO![$|O~O([(xO!Z({P~Og%VOj1_O![1[O%c1^O~OZ1iO!Y1gO!Z(|X~O!Z1jO~O_1lO`%kO'r%kO~O'{#mO'}TO(QUO~O#[$eO$O$eOP(^XZ(^Xn(^X|(^X}(^X!P(^X!Y(^X!h(^X!k(^X!o(^X#j(^X#k(^X#l(^X#m(^X#n(^X#o(^X#p(^X#q(^X#t(^X#v(^X#x(^X#y(^X(X(^X(h(^X(o(^X(p(^X~O#r1oO&T1pO`(^X!i(^X~P$/qO#[$eO#r1oO&T1pO~O`1rO~P%[O`1tO~O&^1wOP&[iQ&[iR&[iX&[i`&[ic&[id&[il&[in&[io&[ip&[iv&[ix&[iz&[i!P&[i!T&[i!U&[i![&[i!f&[i!k&[i!n&[i!o&[i!p&[i!r&[i!t&[i!w&[i!{&[i#s&[i$T&[i%b&[i%d&[i%f&[i%g&[i%h&[i%k&[i%m&[i%p&[i%q&[i%s&[i&P&[i&V&[i&X&[i&Z&[i&]&[i&`&[i&f&[i&l&[i&n&[i&p&[i&r&[i&t&[i'p&[i'{&[i'}&[i(Q&[i(X&[i(g&[i(t&[i!Z&[ia&[i&c&[i~Oa1}O!Z1{O&c1|O~P`O![XO!k2PO~O&j,pOP&eiQ&eiR&eiX&ei`&eic&eid&eil&ein&eio&eip&eiv&eix&eiz&ei!P&ei!T&ei!U&ei![&ei!f&ei!k&ei!n&ei!o&ei!p&ei!r&ei!t&ei!w&ei!{&ei#s&ei$T&ei%b&ei%d&ei%f&ei%g&ei%h&ei%k&ei%m&ei%p&ei%q&ei%s&ei&P&ei&V&ei&X&ei&Z&ei&]&ei&`&ei&f&ei&l&ei&n&ei&p&ei&r&ei&t&ei'p&ei'{&ei'}&ei(Q&ei(X&ei(g&ei(t&ei!Z&ei&^&eia&ei&c&ei~O!V2VO~O!Y!^a!Z!^a~P#C|Oo!nO!P!oO!X2]O([!mO!Y'QX!Z'QX~P@UO!Y-QO!Z(`a~O!Y'WX!Z'WX~P!7lO!Y-TO!Z(na~O!Z2dO~P'_O`%kO#[2mO'r%kO~O`%kO!d#uO#[2mO'r%kO~O`%kO!d#uO!o2qO#[2mO'r%kO(h'kO~O`%kO'r%kO~P!8dO!Y$aOr$ma~O!V'Pi!Y'Pi~P!8dO!Y(PO!V(_i~O!Y(WO!V(li~O!V(mi!Y(mi~P!8dO!Y(ji!j(ji`(ji'r(ji~P!8dO#[2sO!Y(ji!j(ji`(ji'r(ji~O!Y(dO!j(ii~O!P%eO![%fO!{]O#e2xO#f2wO'{%dO~O!P%eO![%fO#f2wO'{%dO~Oj3PO!['ZO%c3OO~Og%VOj3PO!['ZO%c3OO~O#g%ZaP%ZaZ%Za`%Zan%Za}%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za'r%Za(X%Za(h%Za!j%Za!V%Za'p%Zar%Za![%Za%c%Za!d%Za~P#L^O#g%]aP%]aZ%]a`%]an%]a}%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a'r%]a(X%]a(h%]a!j%]a!V%]a'p%]ar%]a![%]a%c%]a!d%]a~P#MPO#g%ZaP%ZaZ%Za`%Zan%Za}%Za!Y%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za'r%Za(X%Za(h%Za!j%Za!V%Za'p%Za#[%Zar%Za![%Za%c%Za!d%Za~P#-]O#g%]aP%]aZ%]a`%]an%]a}%]a!Y%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a'r%]a(X%]a(h%]a!j%]a!V%]a'p%]a#[%]ar%]a![%]a%c%]a!d%]a~P#-]O#gyaPyaZya`yanya!hya!iya!kya!oya#jya#kya#lya#mya#nya#oya#pya#qya#rya#tya#vya#xya#yya'rya(Xya(hya!jya!Vya'pyarya![ya%cya!dya~P$$jO#g$naP$naZ$na`$nan$na}$na!h$na!i$na!k$na!o$na#j$na#k$na#l$na#m$na#n$na#o$na#p$na#q$na#r$na#t$na#v$na#x$na#y$na'r$na(X$na(h$na!j$na!V$na'p$nar$na![$na%c$na!d$na~P$%`O#g$paP$paZ$pa`$pan$pa}$pa!h$pa!i$pa!k$pa!o$pa#j$pa#k$pa#l$pa#m$pa#n$pa#o$pa#p$pa#q$pa#r$pa#t$pa#v$pa#x$pa#y$pa'r$pa(X$pa(h$pa!j$pa!V$pa'p$par$pa![$pa%c$pa!d$pa~P$&RO#g%OaP%OaZ%Oa`%Oan%Oa}%Oa!Y%Oa!h%Oa!i%Oa!k%Oa!o%Oa#j%Oa#k%Oa#l%Oa#m%Oa#n%Oa#o%Oa#p%Oa#q%Oa#r%Oa#t%Oa#v%Oa#x%Oa#y%Oa'r%Oa(X%Oa(h%Oa!j%Oa!V%Oa'p%Oa#[%Oar%Oa![%Oa%c%Oa!d%Oa~P#-]O`#_q!Y#_q'r#_q'p#_q!V#_q!j#_qr#_q![#_q%c#_q!d#_q~P!8dOf'RX!Y'RX~P!(SO!Y.iOf(ba~O!X3ZO!Y'SX!j'SX~P%[O!Y.lO!j(ca~O!Y.lO!j(ca~P!8dO!V3^O~O#|!ma!Z!ma~PKOO#|!ea!Y!ea!Z!ea~P#C|O#|!qa!Z!qa~P!:}O#|!sa!Z!sa~P!=hORfO![3pO$a3qO~O!Z3uO~Or3vO~P#-]O`$jq!Y$jq'r$jq'p$jq!V$jq!j$jqr$jq![$jq%c$jq!d$jq~P!8dO!V3wO~P#-]O|)zO!P){O(p%POj'ba(o'ba!Y'ba#['ba~Of'ba#|'ba~P%)eO|)zO!P){Oj'da(o'da(p'da!Y'da#['da~Of'da#|'da~P%*WO(h$ZO~P#-]O!X3zO'{%dO!Y'^X!j'^X~O!Y/cO!j(ua~O!Y/cO!d#uO!j(ua~O!Y/cO!d#uO(h'kO!j(ua~Of$wi!Y$wi#[$wi#|$wi~P!0}O!X4SO'{*]O!V'`X!Y'`X~P!1lO!Y/kO!V(va~O!Y/kO!V(va~P#-]O!d#uO#r4[O~On4_O!d#uO(h'kO~O(o$}Oj%Zi|%Zi!P%Zi(p%Zi!Y%Zi#[%Zi~Of%Zi#|%Zi~P%-jO(p%POj%]i|%]i!P%]i(o%]i!Y%]i#[%]i~Of%]i#|%]i~P%.]Of(Vi!Y(Vi~P!0}O#[4fOf(Vi!Y(Vi~P!0}O!j4iO~O`$kq!Y$kq'r$kq'p$kq!V$kq!j$kqr$kq![$kq%c$kq!d$kq~P!8dO!V4mO~O!Y4nO![(wX~P#-]O!i#wO~P4XO`$uX![$uX%W[X'r$uX!Y$uX~P!/tO%W4pO`kXjkX|kX!PkX![kX'rkX(okX(pkX!YkX~O%W4pO~Oa4vO%d4wO'{+hO'}TO(QUO!Y'mX!Z'mX~O!Y0rO!Z)Oa~OZ4{O~O_4|O~O`%kO'r%kO~P#-]O![$|O~P#-]O!Y5UO#[5WO!Z({X~O!Z5XO~Oo!nO!P5YO!_!xO!`!uO!a!uO!{:dO#P!pO#Q!pO#R!pO#S!pO#T!pO#W5_O#X!yO'|!lO'}TO(QUO([!mO(g!sO~O!Z5^O~P%3nOj5dO![1[O%c5cO~Og%VOj5dO![1[O%c5cO~Oa5kO'{#mO'}TO(QUO!Y'lX!Z'lX~O!Y1gO!Z(|a~O'}TO(QUO([5mO~O_5qO~O#r5tO&T5uO~PMnO!j5vO~P%[O`5xO~O`5xO~P%[Oa1}O!Z5}O&c1|O~P`O!d6PO~O!d6ROg(ai!Y(ai!Z(ai!d(ai!k(ai~O!Y#di!Z#di~P#C|O#[6SO!Y#di!Z#di~O!Y!^i!Z!^i~P#C|O`%kO#[6]O'r%kO~O`%kO!d#uO#[6]O'r%kO~O!Y(jq!j(jq`(jq'r(jq~P!8dO!Y(dO!j(iq~O!P%eO![%fO#f6dO'{%dO~O!['ZO%c6gO~Oj6jO!['ZO%c6gO~O#g'baP'baZ'ba`'ban'ba}'ba!h'ba!i'ba!k'ba!o'ba#j'ba#k'ba#l'ba#m'ba#n'ba#o'ba#p'ba#q'ba#r'ba#t'ba#v'ba#x'ba#y'ba'r'ba(X'ba(h'ba!j'ba!V'ba'p'bar'ba!['ba%c'ba!d'ba~P%)eO#g'daP'daZ'da`'dan'da}'da!h'da!i'da!k'da!o'da#j'da#k'da#l'da#m'da#n'da#o'da#p'da#q'da#r'da#t'da#v'da#x'da#y'da'r'da(X'da(h'da!j'da!V'da'p'dar'da!['da%c'da!d'da~P%*WO#g$wiP$wiZ$wi`$win$wi}$wi!Y$wi!h$wi!i$wi!k$wi!o$wi#j$wi#k$wi#l$wi#m$wi#n$wi#o$wi#p$wi#q$wi#r$wi#t$wi#v$wi#x$wi#y$wi'r$wi(X$wi(h$wi!j$wi!V$wi'p$wi#[$wir$wi![$wi%c$wi!d$wi~P#-]O#g%ZiP%ZiZ%Zi`%Zin%Zi}%Zi!h%Zi!i%Zi!k%Zi!o%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#p%Zi#q%Zi#r%Zi#t%Zi#v%Zi#x%Zi#y%Zi'r%Zi(X%Zi(h%Zi!j%Zi!V%Zi'p%Zir%Zi![%Zi%c%Zi!d%Zi~P%-jO#g%]iP%]iZ%]i`%]in%]i}%]i!h%]i!i%]i!k%]i!o%]i#j%]i#k%]i#l%]i#m%]i#n%]i#o%]i#p%]i#q%]i#r%]i#t%]i#v%]i#x%]i#y%]i'r%]i(X%]i(h%]i!j%]i!V%]i'p%]ir%]i![%]i%c%]i!d%]i~P%.]Of'Ra!Y'Ra~P!0}O!Y'Sa!j'Sa~P!8dO!Y.lO!j(ci~O#|#_i!Y#_i!Z#_i~P#C|OP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O(XVOZ#iin#ii!h#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~O#j#ii~P%FnO#j:lO~P%FnOP$]O|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO(XVOZ#ii!h#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~On#ii~P%HyOn:nO~P%HyOP$]On:nO|#yO}#zO!P#{O!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO(XVO#t#ii#v#ii#x#ii#y#ii#|#ii(h#ii(o#ii(p#ii!Y#ii!Z#ii~OZ#ii!h#ii#o#ii#p#ii#q#ii#r#ii~P%KUOZ:zO!h:pO#o:pO#p:pO#q:yO#r:pO~P%KUOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO(XVO(p#}O#x#ii#y#ii#|#ii(h#ii(o#ii!Y#ii!Z#ii~O#v:sO~P%MpO#v#ii~P%MpOP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO(XVO#x#ii#y#ii#|#ii(h#ii!Y#ii!Z#ii~O#v#ii(o#ii(p#ii~P& {O#v:sO(o#|O(p#}O~P& {OP$]OZ:zOn:nO|#yO}#zO!P#{O!h:pO!i#wO!k#xO!o$]O#j:lO#k:mO#l:mO#m:mO#n:oO#o:pO#p:pO#q:yO#r:pO#t:qO#v:sO#x:uO(XVO(o#|O(p#}O~O#y#ii#|#ii(h#ii!Y#ii!Z#ii~P&$^O`#zy!Y#zy'r#zy'p#zy!V#zy!j#zyr#zy![#zy%c#zy!d#zy~P!8dOj<gO|)zO!P){O(o$}O(p%PO~OP#iiZ#iin#ii}#ii!h#ii!i#ii!k#ii!o#ii#j#ii#k#ii#l#ii#m#ii#n#ii#o#ii#p#ii#q#ii#r#ii#t#ii#v#ii#x#ii#y#ii#|#ii(X#ii(h#ii!Y#ii!Z#ii~P&'UO!i#wOP(WXZ(WXj(WXn(WX|(WX}(WX!P(WX!h(WX!k(WX!o(WX#j(WX#k(WX#l(WX#m(WX#n(WX#o(WX#p(WX#q(WX#r(WX#t(WX#v(WX#x(WX#y(WX#|(WX(X(WX(h(WX(o(WX(p(WX!Y(WX!Z(WX~O#|#}i!Y#}i!Z#}i~P#C|O#|!qi!Z!qi~P$'pO!Z6|O~O!Y']a!Z']a~P#C|O!d#uO(h'kO!Y'^a!j'^a~O!Y/cO!j(ui~O!Y/cO!d#uO!j(ui~Of$wq!Y$wq#[$wq#|$wq~P!0}O!V'`a!Y'`a~P#-]O!d7TO~O!Y/kO!V(vi~P#-]O!Y/kO!V(vi~O!V7XO~O!d#uO#r7^O~On7_O!d#uO(h'kO~O|)zO!P){O(p%POj'ca(o'ca!Y'ca#['ca~Of'ca#|'ca~P&.fO|)zO!P){Oj'ea(o'ea(p'ea!Y'ea#['ea~Of'ea#|'ea~P&/XO!V7aO~Of$yq!Y$yq#[$yq#|$yq~P!0}O`$ky!Y$ky'r$ky'p$ky!V$ky!j$kyr$ky![$ky%c$ky!d$ky~P!8dO!d6RO~O!Y4nO![(wa~O`#_y!Y#_y'r#_y'p#_y!V#_y!j#_yr#_y![#_y%c#_y!d#_y~P!8dOZ7fO~Oa7hO'{+hO'}TO(QUO~O!Y0rO!Z)Oi~O_7lO~O([(xO!Y'iX!Z'iX~O!Y5UO!Z({a~OlkO'{7sO~P.iO!Z7vO~P%3nOo!nO!P7wO'}TO(QUO([!mO(g!sO~O![1[O~O![1[O%c7yO~Oj7|O![1[O%c7yO~OZ8RO!Y'la!Z'la~O!Y1gO!Z(|i~O!j8VO~O!j8WO~O!j8ZO~O!j8ZO~P%[O`8]O~O!d8^O~O!j8_O~O!Y(mi!Z(mi~P#C|O`%kO#[8gO'r%kO~O!Y(jy!j(jy`(jy'r(jy~P!8dO!Y(dO!j(iy~O!['ZO%c8jO~O#g$wqP$wqZ$wq`$wqn$wq}$wq!Y$wq!h$wq!i$wq!k$wq!o$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#p$wq#q$wq#r$wq#t$wq#v$wq#x$wq#y$wq'r$wq(X$wq(h$wq!j$wq!V$wq'p$wq#[$wqr$wq![$wq%c$wq!d$wq~P#-]O#g'caP'caZ'ca`'can'ca}'ca!h'ca!i'ca!k'ca!o'ca#j'ca#k'ca#l'ca#m'ca#n'ca#o'ca#p'ca#q'ca#r'ca#t'ca#v'ca#x'ca#y'ca'r'ca(X'ca(h'ca!j'ca!V'ca'p'car'ca!['ca%c'ca!d'ca~P&.fO#g'eaP'eaZ'ea`'ean'ea}'ea!h'ea!i'ea!k'ea!o'ea#j'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#t'ea#v'ea#x'ea#y'ea'r'ea(X'ea(h'ea!j'ea!V'ea'p'ear'ea!['ea%c'ea!d'ea~P&/XO#g$yqP$yqZ$yq`$yqn$yq}$yq!Y$yq!h$yq!i$yq!k$yq!o$yq#j$yq#k$yq#l$yq#m$yq#n$yq#o$yq#p$yq#q$yq#r$yq#t$yq#v$yq#x$yq#y$yq'r$yq(X$yq(h$yq!j$yq!V$yq'p$yq#[$yqr$yq![$yq%c$yq!d$yq~P#-]O!Y'Si!j'Si~P!8dO#|#_q!Y#_q!Z#_q~P#C|O(o$}OP%ZaZ%Zan%Za}%Za!h%Za!i%Za!k%Za!o%Za#j%Za#k%Za#l%Za#m%Za#n%Za#o%Za#p%Za#q%Za#r%Za#t%Za#v%Za#x%Za#y%Za#|%Za(X%Za(h%Za!Y%Za!Z%Za~Oj%Za|%Za!P%Za(p%Za~P&@nO(p%POP%]aZ%]an%]a}%]a!h%]a!i%]a!k%]a!o%]a#j%]a#k%]a#l%]a#m%]a#n%]a#o%]a#p%]a#q%]a#r%]a#t%]a#v%]a#x%]a#y%]a#|%]a(X%]a(h%]a!Y%]a!Z%]a~Oj%]a|%]a!P%]a(o%]a~P&BuOj<gO|)zO!P){O(p%PO~P&@nOj<gO|)zO!P){O(o$}O~P&BuO|0ZO}0ZO!P0[OPyaZyajyanya!hya!iya!kya!oya#jya#kya#lya#mya#nya#oya#pya#qya#rya#tya#vya#xya#yya#|ya(Xya(hya(oya(pya!Yya!Zya~O|)zO!P){OP$naZ$naj$nan$na}$na!h$na!i$na!k$na!o$na#j$na#k$na#l$na#m$na#n$na#o$na#p$na#q$na#r$na#t$na#v$na#x$na#y$na#|$na(X$na(h$na(o$na(p$na!Y$na!Z$na~O|)zO!P){OP$paZ$paj$pan$pa}$pa!h$pa!i$pa!k$pa!o$pa#j$pa#k$pa#l$pa#m$pa#n$pa#o$pa#p$pa#q$pa#r$pa#t$pa#v$pa#x$pa#y$pa#|$pa(X$pa(h$pa(o$pa(p$pa!Y$pa!Z$pa~OP%OaZ%Oan%Oa}%Oa!h%Oa!i%Oa!k%Oa!o%Oa#j%Oa#k%Oa#l%Oa#m%Oa#n%Oa#o%Oa#p%Oa#q%Oa#r%Oa#t%Oa#v%Oa#x%Oa#y%Oa#|%Oa(X%Oa(h%Oa!Y%Oa!Z%Oa~P&'UO#|$jq!Y$jq!Z$jq~P#C|O#|$kq!Y$kq!Z$kq~P#C|O!Z8vO~O#|8wO~P!0}O!d#uO!Y'^i!j'^i~O!d#uO(h'kO!Y'^i!j'^i~O!Y/cO!j(uq~O!V'`i!Y'`i~P#-]O!Y/kO!V(vq~O!V8}O~P#-]O!V8}O~Of(Vy!Y(Vy~P!0}O!Y'ga!['ga~P#-]O`%Vq![%Vq'r%Vq!Y%Vq~P#-]OZ9SO~O!Y0rO!Z)Oq~O#[9WO!Y'ia!Z'ia~O!Y5UO!Z({i~P#C|OP[XZ[Xn[X|[X}[X!P[X!V[X!Y[X!h[X!i[X!k[X!o[X#[[X#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X~O!d%TX#r%TX~P'#`O![1[O%c9[O~O'}TO(QUO([9aO~O!Y1gO!Z(|q~O!j9dO~O!j9eO~O!j9fO~O!j9fO~P%[O#[9iO!Y#dy!Z#dy~O!Y#dy!Z#dy~P#C|O!['ZO%c9nO~O#|#zy!Y#zy!Z#zy~P#C|OP$wiZ$win$wi}$wi!h$wi!i$wi!k$wi!o$wi#j$wi#k$wi#l$wi#m$wi#n$wi#o$wi#p$wi#q$wi#r$wi#t$wi#v$wi#x$wi#y$wi#|$wi(X$wi(h$wi!Y$wi!Z$wi~P&'UO|)zO!P){O(p%POP'baZ'baj'ban'ba}'ba!h'ba!i'ba!k'ba!o'ba#j'ba#k'ba#l'ba#m'ba#n'ba#o'ba#p'ba#q'ba#r'ba#t'ba#v'ba#x'ba#y'ba#|'ba(X'ba(h'ba(o'ba!Y'ba!Z'ba~O|)zO!P){OP'daZ'daj'dan'da}'da!h'da!i'da!k'da!o'da#j'da#k'da#l'da#m'da#n'da#o'da#p'da#q'da#r'da#t'da#v'da#x'da#y'da#|'da(X'da(h'da(o'da(p'da!Y'da!Z'da~O(o$}OP%ZiZ%Zij%Zin%Zi|%Zi}%Zi!P%Zi!h%Zi!i%Zi!k%Zi!o%Zi#j%Zi#k%Zi#l%Zi#m%Zi#n%Zi#o%Zi#p%Zi#q%Zi#r%Zi#t%Zi#v%Zi#x%Zi#y%Zi#|%Zi(X%Zi(h%Zi(p%Zi!Y%Zi!Z%Zi~O(p%POP%]iZ%]ij%]in%]i|%]i}%]i!P%]i!h%]i!i%]i!k%]i!o%]i#j%]i#k%]i#l%]i#m%]i#n%]i#o%]i#p%]i#q%]i#r%]i#t%]i#v%]i#x%]i#y%]i#|%]i(X%]i(h%]i(o%]i!Y%]i!Z%]i~O#|$ky!Y$ky!Z$ky~P#C|O#|#_y!Y#_y!Z#_y~P#C|O!d#uO!Y'^q!j'^q~O!Y/cO!j(uy~O!V'`q!Y'`q~P#-]O!V9wO~P#-]O!Y0rO!Z)Oy~O!Y5UO!Z({q~O![1[O%c:OO~O!j:RO~O!['ZO%c:WO~OP$wqZ$wqn$wq}$wq!h$wq!i$wq!k$wq!o$wq#j$wq#k$wq#l$wq#m$wq#n$wq#o$wq#p$wq#q$wq#r$wq#t$wq#v$wq#x$wq#y$wq#|$wq(X$wq(h$wq!Y$wq!Z$wq~P&'UO|)zO!P){O(p%POP'caZ'caj'can'ca}'ca!h'ca!i'ca!k'ca!o'ca#j'ca#k'ca#l'ca#m'ca#n'ca#o'ca#p'ca#q'ca#r'ca#t'ca#v'ca#x'ca#y'ca#|'ca(X'ca(h'ca(o'ca!Y'ca!Z'ca~O|)zO!P){OP'eaZ'eaj'ean'ea}'ea!h'ea!i'ea!k'ea!o'ea#j'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#t'ea#v'ea#x'ea#y'ea#|'ea(X'ea(h'ea(o'ea(p'ea!Y'ea!Z'ea~OP$yqZ$yqn$yq}$yq!h$yq!i$yq!k$yq!o$yq#j$yq#k$yq#l$yq#m$yq#n$yq#o$yq#p$yq#q$yq#r$yq#t$yq#v$yq#x$yq#y$yq#|$yq(X$yq(h$yq!Y$yq!Z$yq~P&'UOf%_!Z!Y%_!Z#[%_!Z#|%_!Z~P!0}O!Y'iq!Z'iq~P#C|O!Y#d!Z!Z#d!Z~P#C|O#g%_!ZP%_!ZZ%_!Z`%_!Zn%_!Z}%_!Z!Y%_!Z!h%_!Z!i%_!Z!k%_!Z!o%_!Z#j%_!Z#k%_!Z#l%_!Z#m%_!Z#n%_!Z#o%_!Z#p%_!Z#q%_!Z#r%_!Z#t%_!Z#v%_!Z#x%_!Z#y%_!Z'r%_!Z(X%_!Z(h%_!Z!j%_!Z!V%_!Z'p%_!Z#[%_!Zr%_!Z![%_!Z%c%_!Z!d%_!Z~P#-]OP%_!ZZ%_!Zn%_!Z}%_!Z!h%_!Z!i%_!Z!k%_!Z!o%_!Z#j%_!Z#k%_!Z#l%_!Z#m%_!Z#n%_!Z#o%_!Z#p%_!Z#q%_!Z#r%_!Z#t%_!Z#v%_!Z#x%_!Z#y%_!Z#|%_!Z(X%_!Z(h%_!Z!Y%_!Z!Z%_!Z~P&'UOr(]X~P1qO'|!lO~P!*fO!VeX!YeX#[eX~P'#`OP[XZ[Xn[X|[X}[X!P[X!Y[X!YeX!h[X!i[X!k[X!o[X#[[X#[eX#geX#j[X#k[X#l[X#m[X#n[X#o[X#p[X#q[X#r[X#t[X#v[X#x[X#y[X$O[X(X[X(h[X(o[X(p[X~O!deX!j[X!jeX(heX~P'ASOP:cOQ:cORfOc<[Od!iOlkOn:cOokOpkOvkOx:cOz:cO!PWO!TkO!UkO![XO!f:fO!kZO!n:cO!o:cO!p:cO!r:gO!t:jO!w!hO$T!kO'{)YO'}TO(QUO(XVO(g[O(t<YO~O!Y:wO!Z$ma~Og%VOl%WOn$tOo$sOp$sOv%XOx%YOz;RO!P${O![$|O!f<aO!k$xO#f;XO$T%^O$o;TO$q;VO$t%_O'{(pO'}TO(QUO(X$uO(o$}O(p%PO~O#s)aO~P'ExO!Z[X!ZeX~P'ASO#g:kO~O!d#uO#g:kO~O#[:{O~O#r:pO~O#[;ZO!Y(mX!Z(mX~O#[:{O!Y(kX!Z(kX~O#g;[O~Of;^O~P!0}O#g;cO~O#g;dO~O!d#uO#g;eO~O!d#uO#g;[O~O#|;fO~P#C|O#g;gO~O#g;hO~O#g;mO~O#g;nO~O#g;oO~O#g;pO~O#|;qO~P!0}O#|;rO~P!0}O!i#P#Q#S#T#W#e#f#q(t$o$q$t%W%b%c%d%k%m%p%q%s%u~'vS#k!U't'|#lo#j#mn|'u$Y'u'{$[([~",
  goto: "$2p)SPPPPP)TPP)WP)iP*x.|PPPP5pPP6WPP<S?gP?zP?zPPP?zPAxP?zP?zP?zPA|PPBRPBlPGdPPPGhPPPPGhJiPPPJoKjPGhPMxPPPP!!WGhPPPGhPGhP!$fGhP!'z!(|!)VP!)y!)}!)yPPPPP!-Y!(|PP!-v!.pP!1dGhGh!1i!4s!9Y!9Y!=OPPP!=VGhPPPPPPPPPPP!@dP!AqPPGh!CSPGhPGhGhGhGhPGh!DfP!GnP!JrP!Jv!KQ!KU!KUP!GkP!KY!KYP!N^P!NbGhGh!Nh##k?zP?zP?z?zP#$v?z?z#'O?z#)k?z#+m?z?z#,[#.f#.f#.j#.r#.f#.zP#.fP?z#/d?z#3R?z?z5pPPP#6vPPP#7a#7aP#7aP#7w#7aPP#7}P#7tP#7t#8b#7t#8|#9S5m)W#9V)WP#9^#9^#9^P)WP)WP)WP)WPP)WP#9d#9gP#9g)WP#9kP#9nP)WP)WP)WP)WP)WP)W)WPP#9t#9z#:V#:]#:c#:i#:o#:}#;T#;Z#;e#;k#;u#<U#<[#<|#=`#=f#=l#=z#>a#@O#@^#@d#Ax#BW#Cr#DQ#DW#D^#Dd#Dn#Dt#Dz#EU#Eh#EnPPPPPPPPPP#EtPPPPPPP#Fi#Ip#KP#KW#K`PPPP$!d$%Z$+r$+u$+x$,q$,t$,w$-O$-WPP$-^$-b$.Y$/X$/]$/qPP$/u$/{$0PP$0S$0W$0Z$1P$1h$2P$2T$2W$2Z$2a$2d$2h$2lR!{RoqOXst!Z#c%j&m&o&p&r,h,m1w1zY!uQ'Z-Y1[5]Q%pvQ%xyQ&P|Q&e!VS'R!e-QQ'a!iS'g!r!xS*c$|*hQ+f%yQ+s&RQ,X&_Q-W'YQ-b'bQ-j'hQ/|*jQ1f,YR;Y:g%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S,e,h,m-^-f-t-z.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3Z5Y5d5t5u5x6]7w7|8]8gS#p]:d!r)[$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q*u%ZQ+k%{Q,Z&bQ,b&jQ.c;QQ0h+^Q0l+`Q0w+lQ1n,`Q2{.[Q4v0rQ5k1gQ6i3PQ6u;RQ7h4wR8m6j&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]t!nQ!r!u!x!y'R'Y'Z'g'h'i-Q-W-Y-j1[5]5_$v$si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gQ&S|Q'P!eS'V%f-TQ+k%{Q,Z&bQ0]*yQ0w+lQ0|+rQ1m,_Q1n,`Q4v0rQ5P1OQ5k1gQ5n1iQ5o1lQ7h4wQ7k4|Q8U5qQ9V7lR9b8RrnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zR,]&f&v^OPXYstuvwz!Z!`!g!j!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O']'m(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<[<][#[WZ#V#Y'S'}!S%gm#g#h#k%b%e(W(b(c(d+Q+R+T,d,z-x.O.P.Q.S2P2w2x6R6dQ%sxQ%wyS%||&RQ&Y!TQ'^!hQ'`!iQ(k#rS*V$x*ZS+e%x%yQ+i%{Q,S&]Q,W&_S-a'a'bQ.^(lQ/g*WQ0p+fQ0v+lQ0x+mQ0{+qQ1a,TS1e,X,YQ2i-bQ3y/cQ4u0rQ4y0uQ5O0}Q5j1fQ7Q3zQ7g4wQ7j4{Q9R7fR9y9S!O$zi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c!S%uy!i!t%w%x%y'Q'`'a'b'f'p*b+e+f,}-a-b-i/t0p2b2i2p4^Q+_%sQ+x&VQ+{&WQ,V&_Q.](kQ1`,SU1d,W,X,YQ3Q.^Q5e1aS5i1e1fQ8Q5j#W<^#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<go<_:y:z:};P;T;V;X;`;b;d;h;j;l;n;rW%Ti%V*r<YS&V!Q&dQ&W!RQ&X!SR+v&T$w%Si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gT)v$u)wV*v%Z;Q;RU'V!e%f-TS(y#y#zQ+p&OS.V(g(hQ1V+|Q4g0ZR7p5U&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]$i$`c#X#d%n%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.t.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PT#SV#T&}kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q'T!eR2^-Qv!nQ!e!r!u!x!y'R'Y'Z'g'h'i-Q-W-Y-j1[5]5_S*b$|*hS/t*c*jQ/}*kQ1X,OQ4^/|R4a0PnqOXst!Z#c%j&m&o&p&r,h,m1w1zQ&t!^Q'q!wS(m#t:kQ+c%vQ,Q&YQ,R&[Q-_'_Q-l'jS.g(r;[S0`+O;eQ0n+dQ1Z,PQ2O,oQ2Q,pQ2Y,{Q2g-`Q2j-dS4l0a;oQ4q0oS4t0q;pQ6T2[Q6X2hQ6^2oQ7e4rQ8b6VQ8c6YQ8f6_R9h8_$d$_c#X#d%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PS(j#o'dU*o%R(q3mS+Y%n.tQ2|0hQ6f2{Q8l6iR9o8m$d$^c#X#d%o%q'|(S(n(u(})O)P)Q)R)S)T)U)V)W)X)Z)^)b)l+Z+o-O-m-r-w-y.h.n.r.u.v/V0_2W2Z2k2r3Y3_3`3a3b3c3d3e3f3g3h3i3j3k3n3o3t4k4s6U6[6a6o6p6y6z7r8a8e8n8t8u9k9{:S:e<PS(i#o'dS({#z$_S+X%n.tS.W(h(jQ.w)]Q0e+YR2y.X&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]S#p]:dQ&o!XQ&p!YQ&r![Q&s!]R1v,kQ'[!hQ+[%sQ-]'^S.Y(k+_Q2e-[W2}.].^0g0iQ6W2fU6e2z2|3QS8i6f6hS9m8k8lS:U9l9oQ:^:VR:a:_U!vQ'Z-YT5Z1[5]!Q_OXZ`st!V!Z#c#g%b%j&d&f&m&o&p&r(d,h,m.P1w1z]!pQ!r'Z-Y1[5]T#p]:d%Y{OPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gS(y#y#zS.V(g(h!s;v$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Y!tQ'Z-Y1[5]Q'f!rS'p!u!xS'r!y5_S-i'g'hQ-k'iR2p-jQ'o!tS(`#f1qS-h'f'rQ/f*VQ/r*bQ2q-kQ4O/gS4X/s/}Q7P3yS7[4_4aQ8y7QR9Q7_Q#vbQ'n!tS(_#f1qS(a#l*}Q+P%cQ+a%tQ+g%zU-g'f'o'rQ-{(`Q/e*VQ/q*bQ/w*eQ0m+bQ1b,US2n-h-kQ2v.TS3}/f/gS4W/r/}Q4Z/vQ4]/xQ5g1cQ6`2qQ7O3yQ7S4OS7W4X4aQ7]4`Q8O5hS8x7P7QQ8|7XQ9O7[Q9_8PQ9u8yQ9v8}Q9x9QQ:Q9`Q:Y9wQ;y;tQ<U;}R<V<OV!vQ'Z-Y%YaOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gS#vz!j!r;s$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]R;y<[%YbOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gQ%cj!S%ty!i!t%w%x%y'Q'`'a'b'f'p*b+e+f,}-a-b-i/t0p2b2i2p4^S%zz!jQ+b%uQ,U&_W1c,V,W,X,YU5h1d1e1fS8P5i5jQ9`8Q!r;t$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q;}<ZR<O<[$|eOPXYstuvw!Z!`!g!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8gY#aWZ#V#Y'}!S%gm#g#h#k%b%e(W(b(c(d+Q+R+T,d,z-x.O.P.Q.S2P2w2x6R6dQ,c&j!p;u$[$m)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]R;x'SS'W!e%fR2`-T%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S,e,h,m-^-f-t-z.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3Z5Y5d5t5u5x6]7w7|8]8g!r)[$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]Q,b&jQ0h+^Q2{.[Q6i3PR8m6j!b$Uc#X%n'|(S(n(u)W)X)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:e!P:r)Z)l-O.t2W2Z3_3i3j3n3t6U6p6y6z7r8a8n8t8u9{:S<P!f$Wc#X%n'|(S(n(u)T)U)W)X)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:e!T:t)Z)l-O.t2W2Z3_3f3g3i3j3n3t6U6p6y6z7r8a8n8t8u9{:S<P!^$[c#X%n'|(S(n(u)^)b+o-m-r-w-y.h.n/V0_2k2r3Y3k4k4s6[6a6o8e9k:eQ3x/az<])Z)l-O.t2W2Z3_3n3t6U6p6y6z7r8a8n8t8u9{:S<PQ<b<dR<c<e&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]S$nh$oR3q.z'TgOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.z.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]T$jf$pQ$hfS)e$k)iR)q$pT$if$pT)g$k)i'ThOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%j%p%}&f&i&j&m&o&p&r&v'O'S']'m'}(P(V(^(r(v(z)n)y+O+S+^,e,h,m,y,|-^-f-t-z.[.l.s.z.{0[0a0q1_1o1p1r1t1w1z1|2]2m2s3P3Z3p5W5Y5d5t5u5x6S6]6j7w7|8]8g9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]T$nh$oQ$qhR)p$o%YjOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%j%p%}&f&i&j&m&o&p&r&v'O']'m'}(P(V(^(r(v(z)y+O+S+^,e,h,m-^-f-t-z.[.l.s0[0a0q1_1o1p1r1t1w1z1|2m2s3P3Z5Y5d5t5u5x6]6j7w7|8]8g!s<Z$[$m'S)n,y,|.{2]3p5W6S9W9i:c:f:g:j:k:l:m:n:o:p:q:r:s:t:u:v:w:{;Y;Z;[;^;e;f;o;p<]#clOPXZst!Z!`!o#R#c#n#{$m%j&f&i&j&m&o&p&r&v'O'](z)n+S+^,e,h,m-^.[.{0[1_1o1p1r1t1w1z1|3P3p5Y5d5t5u5x6j7w7|8]!O%Ri#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c#W(q#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gQ*z%_Q/W)zo3m:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!O$yi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cQ*[$zS*e$|*hQ*{%`Q/x*f#W;{#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn;|:y:z:};P;T;V;X;`;b;d;h;j;l;n;rQ<Q<^Q<R<_Q<S<`R<T<a!O%Ri#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<c#W(q#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<go3m:y:z:};P;T;V;X;`;b;d;h;j;l;n;rnoOXst!Z#c%j&m&o&p&r,h,m1w1zQ*_${Q,v&yQ,w&{R4R/k$v%Si#u#w$c$d$x${%O%Q%[%]%a)u){)}*P*R*Y*`*p*q+]+`+w+z.Z.i/Z/j/k/m0Q0S0^1R1U1^3O3x4S4[4f4n4p5c6g7T7^7y8j8w9[9n:O:W:y:z:|:};O;P;S;T;U;V;W;X;_;`;a;b;c;d;g;h;i;j;k;l;m;n;q;r<Y<b<c<f<gQ+y&WQ1T+{Q5S1SR7o5TT*g$|*hS*g$|*hT5[1[5]S/v*d5YT4`0O7wQ+a%tQ/w*eQ0m+bQ1b,UQ5g1cQ8O5hQ9_8PR:Q9`!O%Oi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cr)}$v(s*O*n*|/i0U0V3W4P4j6}7`9t;z<W<XS0Q*m0R#W:|#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn:}:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!^;_(o)`*U*^._.b.f/S/X/a/n0f1Q1S3T4Q4U5R5T6k6n7U7Y7b7d8{9P:X<d<e`;`3l6q6t6x8o9p9s:bS;i.a3UT;j6s8r!O%Qi#w%O%Q%[%]%a)}*P*Y*p*q.i/j0Q0S0^3x4f8w<Y<b<cv*P$v(s*Q*m*|/]/i0U0V3W4P4b4j6}7`9t;z<W<XS0S*n0T#W;O#u$c$d$x${)u){*R*`+]+`+w+z.Z/Z/k/m1R1U1^3O4S4[4n4p5c6g7T7^7y8j9[9n:O:W:|;O;S;U;W;_;a;c;g;i;k;m;q<f<gn;P:y:z:};P;T;V;X;`;b;d;h;j;l;n;r!b;a(o)`*U*^.`.a.f/S/X/a/n0f1Q1S3R3T4Q4U5R5T6k6l6n7U7Y7b7d8{9P:X<d<ed;b3l6r6s6x8o8p9p9q9s:bS;k.b3VT;l6t8srnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zQ&a!UR,e&jrnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zR&a!UQ+}&XR1P+vsnOXst!V!Z#c%j&d&m&o&p&r,h,m1w1zQ1],SS5b1`1aU7x5`5a5eS9Z7z7{S9|9Y9]Q:Z9}R:`:[Q&h!VR,^&dR5n1iS%||&RR0x+mQ&m!WR,h&nR,n&sT1x,m1zR,r&tQ,q&tR2R,rQ't!zR-n'tSsOtQ#cXT%ms#cQ!}TR'v!}Q#QUR'x#QQ)w$uR/T)wQ#TVR'z#TQ#WWU(Q#W(R-uQ(R#XR-u(SQ-R'TR2_-RQ.j(sR3X.jQ.m(uS3[.m3]R3].nQ-Y'ZR2c-YY!rQ'Z-Y1[5]R'e!rS#^W%eU(X#^(Y-vQ(Y#_R-v(TQ-U'WR2a-Ut`OXst!V!Z#c%j&d&f&m&o&p&r,h,m1w1zS#gZ%bU#q`#g.PR.P(dQ(e#iQ-|(aW.U(e-|2t6bQ2t-}R6b2uQ)i$kR.|)iQ$ohR)o$oQ$bcU)_$b-q:xQ-q:eR:x)lQ/d*VW3{/d3|7R8zU3|/e/f/gS7R3}4OR8z7S$X)|$v(o(s)`*U*^*m*n*w*x*|.a.b.d.e.f/S/X/]/_/a/i/n0U0V0f1Q1S3R3S3T3W3l4P4Q4U4b4d4j5R5T6k6l6m6n6s6t6v6w6x6}7U7Y7`7b7d8o8p8q8{9P9p9q9r9s9t:X:b;z<W<X<d<eQ/l*^U4T/l4V7VQ4V/nR7V4UQ*h$|R/z*hr*O$v(s*m*n*|/i0U0V3W4P4j6}7`9t;z<W<X!^._(o)`*U*^.a.b.f/S/X/a/n0f1Q1S3T4Q4U5R5T6k6n7U7Y7b7d8{9P:X<d<eU/^*O._6qa6q3l6s6t6x8o9p9s:bQ0R*mQ3U.aU4c0R3U8rR8r6sv*Q$v(s*m*n*|/]/i0U0V3W4P4b4j6}7`9t;z<W<X!b.`(o)`*U*^.a.b.f/S/X/a/n0f1Q1S3R3T4Q4U5R5T6k6l6n7U7Y7b7d8{9P:X<d<eU/`*Q.`6re6r3l6s6t6x8o8p9p9q9s:bQ0T*nQ3V.bU4e0T3V8sR8s6tQ*s%UR0X*sQ4o0fR7c4oQ+U%hR0d+UQ5V1VS7q5V9XR9X7rQ,P&YR1Y,PQ5]1[R7u5]Q1h,ZS5l1h8SR8S5nQ0s+iW4x0s4z7i9TQ4z0vQ7i4yR9T7jQ+n%|R0y+nQ1z,mR5|1zYrOXst#cQ&q!ZQ+W%jQ,g&mQ,i&oQ,j&pQ,l&rQ1u,hS1x,m1zR5{1wQ%lpQ&u!_Q&x!aQ&z!bQ&|!cQ'l!tQ+V%iQ+c%vQ+u&SQ,]&hQ,t&wW-e'f'n'o'rQ-l'jQ/y*gQ0n+dS1k,^,aQ2S,sQ2T,vQ2U,wQ2j-dW2l-g-h-k-mQ4q0oQ4}0|Q5Q1QQ5f1bQ5p1mQ5z1vU6Z2k2n2qQ6^2oQ7e4rQ7m5PQ7n5RQ7t5[Q7}5gQ8T5oS8d6[6`Q8f6_Q9U7kQ9^8OQ9c8UQ9j8eQ9z9VQ:P9_Q:T9kR:]:QQ%vyQ'_!iQ'j!tU+d%w%x%yQ,{'QU-`'`'a'bS-d'f'pQ/p*bS0o+e+fQ2[,}S2h-a-bQ2o-iQ4Y/tQ4r0pQ6V2bQ6Y2iQ6_2pR7Z4^S$wi<YR*t%VU%Ui%V<YR0W*rQ$viS(o#u+`Q(s#wS)`$c$dQ*U$xQ*^${Q*m%OQ*n%QQ*w%[Q*x%]Q*|%aQ.a:|Q.b;OQ.d;SQ.e;UQ.f;WQ/S)uS/X){/ZQ/])}Q/_*PQ/a*RQ/i*YQ/n*`Q0U*pQ0V*qh0f+].Z1^3O5c6g7y8j9[9n:O:WQ1Q+wQ1S+zQ3R;_Q3S;aQ3T;cQ3W.iS3l:y:zQ4P/jQ4Q/kQ4U/mQ4b0QQ4d0SQ4j0^Q5R1RQ5T1UQ6k;gQ6l;iQ6m;kQ6n;mQ6s:}Q6t;PQ6v;TQ6w;VQ6x;XQ6}3xQ7U4SQ7Y4[Q7`4fQ7b4nQ7d4pQ8o;dQ8p;`Q8q;bQ8{7TQ9P7^Q9p;hQ9q;jQ9r;lQ9s;nQ9t8wQ:X;qQ:b;rQ;z<YQ<W<bQ<X<cQ<d<fR<e<gnpOXst!Z#c%j&m&o&p&r,h,m1w1zQ!fPS#eZ#nQ&w!`U'c!o5Y7wQ'y#RQ(|#{Q)m$mS,a&f&iQ,f&jQ,s&vQ,x'OQ-[']Q.p(zQ/Q)nQ0b+SQ0i+^Q1s,eQ2f-^Q2|.[Q3s.{Q4h0[Q5a1_Q5r1oQ5s1pQ5w1rQ5y1tQ6O1|Q6f3PQ6{3pQ7{5dQ8X5tQ8Y5uQ8[5xQ8l6jQ9]7|R9g8]#WcOPXZst!Z!`!o#c#n#{%j&f&i&j&m&o&p&r&v'O'](z+S+^,e,h,m-^.[0[1_1o1p1r1t1w1z1|3P5Y5d5t5u5x6j7w7|8]Q#XWQ#dYQ%nuQ%ovS%qw!gS'|#V(PQ(S#YQ(n#tQ(u#xQ(}$OQ)O$PQ)P$QQ)Q$RQ)R$SQ)S$TQ)T$UQ)U$VQ)V$WQ)W$XQ)X$YQ)Z$[Q)^$aQ)b$eW)l$m)n.{3pQ+Z%pQ+o%}S-O'S2]Q-m'mS-r'}-tQ-w(VQ-y(^Q.h(rQ.n(vQ.r:cQ.t:fQ.u:gQ.v:jQ/V)yQ0_+OQ2W,yQ2Z,|Q2k-fQ2r-zQ3Y.lQ3_:kQ3`:lQ3a:mQ3b:nQ3c:oQ3d:pQ3e:qQ3f:rQ3g:sQ3h:tQ3i:uQ3j:vQ3k.sQ3n:{Q3o;YQ3t:wQ4k0aQ4s0qQ6U;ZQ6[2mQ6a2sQ6o3ZQ6p;[Q6y;^Q6z;eQ7r5WQ8a6SQ8e6]Q8n;fQ8t;oQ8u;pQ9k8gQ9{9WQ:S9iQ:e#RR<P<]R#ZWR'U!eY!tQ'Z-Y1[5]S'Q!e-QQ'f!rS'p!u!xS'r!y5_S,}'R'YS-i'g'hQ-k'iQ2b-WR2p-jR(t#wR(w#xQ!fQT-X'Z-Y]!qQ!r'Z-Y1[5]Q#o]R'd:dT#jZ%bS#iZ%bS%hm,dU(a#g#h#kS-}(b(cQ.R(dQ0c+TQ2u.OU2v.P.Q.SS6c2w2xR8h6d`#]W#V#Y%e'}(W+Q-xr#fZm#g#h#k%b(b(c(d+T.O.P.Q.S2w2x6dQ1q,dQ2X,zQ6Q2PQ8`6RT;w'S+RT#`W%eS#_W%eS(O#V(WS(T#Y+QS-P'S+RT-s'}-xT'X!e%fQ$kfR)s$pT)h$k)iR3r.zT*X$x*ZR*a${Q0g+]Q2z.ZQ5`1^Q6h3OQ7z5cQ8k6gQ9Y7yQ9l8jQ9}9[Q:V9nQ:[:OR:_:WnqOXst!Z#c%j&m&o&p&r,h,m1w1zQ&g!VR,]&dtmOXst!U!V!Z#c%j&d&m&o&p&r,h,m1w1zR,d&jT%im,dR1W+|R,[&bQ&Q|R+t&RR+j%{T&k!W&nT&l!W&nT1y,m1z",
  nodeNames: "⚠ ArithOp ArithOp JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem",
  maxTerm: 371,
  context: ffe,
  nodeProps: [
    ["isolate", -8, 4, 5, 13, 33, 35, 48, 50, 52, ""],
    ["group", -26, 8, 16, 18, 65, 201, 205, 209, 210, 212, 215, 218, 228, 230, 236, 238, 240, 242, 245, 251, 257, 259, 261, 263, 265, 267, 268, "Statement", -32, 12, 13, 28, 31, 32, 38, 48, 51, 52, 54, 59, 67, 75, 79, 81, 83, 84, 106, 107, 116, 117, 134, 137, 139, 140, 141, 142, 144, 145, 164, 165, 167, "Expression", -23, 27, 29, 33, 37, 39, 41, 168, 170, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 195, 197, 199, 200, "Type", -3, 87, 99, 105, "ClassItem"],
    ["openedBy", 22, "<", 34, "InterpolationStart", 53, "[", 57, "{", 72, "(", 157, "JSXStartCloseTag"],
    ["closedBy", 23, ">", 36, "InterpolationEnd", 47, "]", 58, "}", 73, ")", 162, "JSXEndTag"]
  ],
  propSources: [bfe],
  skippedNodes: [0, 4, 5, 271],
  repeatNodeCount: 37,
  tokenData: "$Fj(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#8g!R![#:v![!]#Gv!]!^#IS!^!_#J^!_!`#Ns!`!a$#_!a!b$(l!b!c$,k!c!}Er!}#O$-u#O#P$/P#P#Q$4h#Q#R$5r#R#SEr#S#T$7P#T#o$8Z#o#p$<k#p#q$=a#q#r$>q#r#s$?}#s$f%Z$f$g+g$g#BYEr#BY#BZ$AX#BZ$ISEr$IS$I_$AX$I_$I|Er$I|$I}$Dd$I}$JO$Dd$JO$JTEr$JT$JU$AX$JU$KVEr$KV$KW$AX$KW&FUEr&FU&FV$AX&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AX?HUOEr(n%d_$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$f&j(R!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(R!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$f&j(OpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(OpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$f&j(Op(R!b't(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST(P#S$f&j'u(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$f&j(Op(R!b'u(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$f&j!o$Ip(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#t$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#t$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/|3l_'}$(n$f&j(R!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$f&j(R!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$f&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$a`$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$a``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$a`$f&j(R!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(R!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$a`(R!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k#%|:hh$f&j(Op(R!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__VS$f&j(Op(R!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]VS$f&j(R!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXVS$f&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSVSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWVS(R!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]VS$f&j(OpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWVS(OpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYVS(Op(R!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S#%|C}i$f&j(g!L^(Op(R!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr#%|EoP;=`<%lCr(CSFRk$f&j(Op(R!b$Y#t'{&;d([!LYOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$f&j(Op(R!b$Y#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv(CSJPP;=`<%lEr%#SJ_`$f&j(Op(R!b#l$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SKl_$f&j$O$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&COLva(p&;`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SNW`$f&j#x$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/|! c_(Q$)`$f&j(OpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$f&j(OpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$f&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$a`$f&j(OpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(OpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$a`(OpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b(*Q!'t_!k(!b$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l!)O_!jM|$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!*[b$f&j(Op(R!b'|#)d#m$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!+o`$f&j(Op(R!b#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!,|`$f&j(Op(R!bn&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!.Z_!Y&;l$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!/ec$f&j(Op(R!b|'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!0ya$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!2Z_!XMt$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!3eg$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!5Vg$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!6wc$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!8_c$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!9uf$f&j(Op(R!b#k$IdOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpxz!;Zz{#,f{!P!;Z!P!Q#-{!Q!^!;Z!^!_#'Z!_!`#5k!`!a#7Q!a!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(r!;fb$f&j(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(Q!<w`$f&j(R!b!USOY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eb!Q!^!<n!^!_!GY!_!}!<n!}#O!Ja#O#P!Dj#P#o!<n#o#p!GY#p;'S!<n;'S;=`!Kj<%lO!<n&n!>Q^$f&j!USOY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@Y!_!}!=y!}#O!Bw#O#P!Dj#P#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!?Ta$f&j!USO!^&c!_#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&cS!@_X!USOY!@YZ!P!@Y!P!Q!@z!Q!}!@Y!}#O!Ac#O#P!Bb#P;'S!@Y;'S;=`!Bq<%lO!@YS!APU!US#Z#[!@z#]#^!@z#a#b!@z#g#h!@z#i#j!@z#m#n!@zS!AfVOY!AcZ#O!Ac#O#P!A{#P#Q!@Y#Q;'S!Ac;'S;=`!B[<%lO!AcS!BOSOY!AcZ;'S!Ac;'S;=`!B[<%lO!AcS!B_P;=`<%l!AcS!BeSOY!@YZ;'S!@Y;'S;=`!Bq<%lO!@YS!BtP;=`<%l!@Y&n!B|[$f&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#O!Bw#O#P!Cr#P#Q!=y#Q#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!CwX$f&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!DgP;=`<%l!Bw&n!DoX$f&jOY!=yYZ&cZ!^!=y!^!_!@Y!_#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!E_P;=`<%l!=y(Q!Eki$f&j(R!b!USOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!Eb#[#]&}#]#^!Eb#^#a&}#a#b!Eb#b#g&}#g#h!Eb#h#i&}#i#j!Eb#j#m&}#m#n!Eb#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!GaZ(R!b!USOY!GYZw!GYwx!@Yx!P!GY!P!Q!HS!Q!}!GY!}#O!Ic#O#P!Bb#P;'S!GY;'S;=`!JZ<%lO!GY!f!HZb(R!b!USOY'}Zw'}x#O'}#P#Z'}#Z#[!HS#[#]'}#]#^!HS#^#a'}#a#b!HS#b#g'}#g#h!HS#h#i'}#i#j!HS#j#m'}#m#n!HS#n;'S'};'S;=`(f<%lO'}!f!IhX(R!bOY!IcZw!Icwx!Acx#O!Ic#O#P!A{#P#Q!GY#Q;'S!Ic;'S;=`!JT<%lO!Ic!f!JWP;=`<%l!Ic!f!J^P;=`<%l!GY(Q!Jh^$f&j(R!bOY!JaYZ&cZw!Jawx!Bwx!^!Ja!^!_!Ic!_#O!Ja#O#P!Cr#P#Q!<n#Q#o!Ja#o#p!Ic#p;'S!Ja;'S;=`!Kd<%lO!Ja(Q!KgP;=`<%l!Ja(Q!KmP;=`<%l!<n'`!Ky`$f&j(Op!USOY!KpYZ&cZr!Kprs!=ys!P!Kp!P!Q!L{!Q!^!Kp!^!_!Ns!_!}!Kp!}#O##z#O#P!Dj#P#o!Kp#o#p!Ns#p;'S!Kp;'S;=`#%T<%lO!Kp'`!MUi$f&j(Op!USOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!L{#[#](r#]#^!L{#^#a(r#a#b!L{#b#g(r#g#h!L{#h#i(r#i#j!L{#j#m(r#m#n!L{#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!NzZ(Op!USOY!NsZr!Nsrs!@Ys!P!Ns!P!Q# m!Q!}!Ns!}#O#!|#O#P!Bb#P;'S!Ns;'S;=`##t<%lO!Nst# tb(Op!USOY)rZr)rs#O)r#P#Z)r#Z#[# m#[#])r#]#^# m#^#a)r#a#b# m#b#g)r#g#h# m#h#i)r#i#j# m#j#m)r#m#n# m#n;'S)r;'S;=`*Z<%lO)rt##RX(OpOY#!|Zr#!|rs!Acs#O#!|#O#P!A{#P#Q!Ns#Q;'S#!|;'S;=`##n<%lO#!|t##qP;=`<%l#!|t##wP;=`<%l!Ns'`#$R^$f&j(OpOY##zYZ&cZr##zrs!Bws!^##z!^!_#!|!_#O##z#O#P!Cr#P#Q!Kp#Q#o##z#o#p#!|#p;'S##z;'S;=`#$}<%lO##z'`#%QP;=`<%l##z'`#%WP;=`<%l!Kp(r#%fk$f&j(Op(R!b!USOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[#%Z#[#]%Z#]#^#%Z#^#a%Z#a#b#%Z#b#g%Z#g#h#%Z#h#i%Z#i#j#%Z#j#m%Z#m#n#%Z#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W#'d](Op(R!b!USOY#'ZZr#'Zrs!GYsw#'Zwx!Nsx!P#'Z!P!Q#(]!Q!}#'Z!}#O#)w#O#P!Bb#P;'S#'Z;'S;=`#*w<%lO#'Z#W#(fe(Op(R!b!USOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[#(]#[#]*g#]#^#(]#^#a*g#a#b#(]#b#g*g#g#h#(]#h#i*g#i#j#(]#j#m*g#m#n#(]#n;'S*g;'S;=`+Z<%lO*g#W#*OZ(Op(R!bOY#)wZr#)wrs!Icsw#)wwx#!|x#O#)w#O#P!A{#P#Q#'Z#Q;'S#)w;'S;=`#*q<%lO#)w#W#*tP;=`<%l#)w#W#*zP;=`<%l#'Z(r#+W`$f&j(Op(R!bOY#*}YZ&cZr#*}rs!Jasw#*}wx##zx!^#*}!^!_#)w!_#O#*}#O#P!Cr#P#Q!;Z#Q#o#*}#o#p#)w#p;'S#*};'S;=`#,Y<%lO#*}(r#,]P;=`<%l#*}(r#,cP;=`<%l!;Z(CS#,sb$f&j(Op(R!b'v(;d!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(CS#.W_$f&j(Op(R!bS(;dOY#-{YZ&cZr#-{rs#/Vsw#-{wx#2gx!^#-{!^!_#4f!_#O#-{#O#P#0X#P#o#-{#o#p#4f#p;'S#-{;'S;=`#5e<%lO#-{(Bb#/`]$f&j(R!bS(;dOY#/VYZ&cZw#/Vwx#0Xx!^#/V!^!_#1j!_#O#/V#O#P#0X#P#o#/V#o#p#1j#p;'S#/V;'S;=`#2a<%lO#/V(AO#0`X$f&jS(;dOY#0XYZ&cZ!^#0X!^!_#0{!_#o#0X#o#p#0{#p;'S#0X;'S;=`#1d<%lO#0X(;d#1QSS(;dOY#0{Z;'S#0{;'S;=`#1^<%lO#0{(;d#1aP;=`<%l#0{(AO#1gP;=`<%l#0X(<v#1qW(R!bS(;dOY#1jZw#1jwx#0{x#O#1j#O#P#0{#P;'S#1j;'S;=`#2Z<%lO#1j(<v#2^P;=`<%l#1j(Bb#2dP;=`<%l#/V(Ap#2p]$f&j(OpS(;dOY#2gYZ&cZr#2grs#0Xs!^#2g!^!_#3i!_#O#2g#O#P#0X#P#o#2g#o#p#3i#p;'S#2g;'S;=`#4`<%lO#2g(<U#3pW(OpS(;dOY#3iZr#3irs#0{s#O#3i#O#P#0{#P;'S#3i;'S;=`#4Y<%lO#3i(<U#4]P;=`<%l#3i(Ap#4cP;=`<%l#2g(=h#4oY(Op(R!bS(;dOY#4fZr#4frs#1jsw#4fwx#3ix#O#4f#O#P#0{#P;'S#4f;'S;=`#5_<%lO#4f(=h#5bP;=`<%l#4f(CS#5hP;=`<%l#-{%#W#5xb$f&j$O$Id(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z+h#7_b$W#t$f&j(Op(R!b!USOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z$/l#8rp$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#U%Z#U#V#>Q#V#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#d#AY#d#l%Z#l#m#D[#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;Rk$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#=R_$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>Zd$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#?tf$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Acc$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Bye$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Deg$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#FXi$f&j(Op(R!bo$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#HT_!d$b$f&j#|%<f(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#I__`l$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^#Jk^g!*v!h'.r(Op(R!b(tSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Kg!Q!^*g!^!_#L]!_!`#M}!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#KpX$h&j(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#LfZ#n$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#MX!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#MbX$O$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#NWX#o$Id(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh$ Oa#[%?x$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$!T!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W$!`_#g$Ih$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh$#nafBf#o$Id$c#|$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$$s!`!a$%}!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$%O_#o$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$&Ya#n$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$'_!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$'j`#n$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$(wc(h$Ip$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$*S!P!^%Z!^!_*g!_!a%Z!a!b$+^!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$*__}'#p$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$+i`$f&j#y$Id(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$,v_!{!Ln$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$.Q_!P(8n$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/UZ$f&jO!^$/w!^!_$0_!_#i$/w#i#j$0d#j#l$/w#l#m$2V#m#o$/w#o#p$0_#p;'S$/w;'S;=`$4b<%lO$/w(n$0OT^#S$f&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0dO^#S(n$0i[$f&jO!Q&c!Q![$1_![!^&c!_!c&c!c!i$1_!i#T&c#T#Z$1_#Z#o&c#o#p$3u#p;'S&c;'S;=`&w<%lO&c(n$1dZ$f&jO!Q&c!Q![$2V![!^&c!_!c&c!c!i$2V!i#T&c#T#Z$2V#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2[Z$f&jO!Q&c!Q![$2}![!^&c!_!c&c!c!i$2}!i#T&c#T#Z$2}#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3SZ$f&jO!Q&c!Q![$/w![!^&c!_!c&c!c!i$/w!i#T&c#T#Z$/w#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$3xR!Q![$4R!c!i$4R#T#Z$4R#S$4US!Q![$4R!c!i$4R#T#Z$4R#q#r$0_(n$4eP;=`<%l$/w!2r$4s_!V!+S$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$5}`#v$Id$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$7[_$f&j(Op(R!b(X&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$8jk$f&j(Op(R!b'{&;d$[#t([!LYOY%ZYZ&cZr%Zrs&}st%Ztu$8Zuw%Zwx(rx}%Z}!O$:_!O!Q%Z!Q![$8Z![!^%Z!^!_*g!_!c%Z!c!}$8Z!}#O%Z#O#P&c#P#R%Z#R#S$8Z#S#T%Z#T#o$8Z#o#p*g#p$g%Z$g;'S$8Z;'S;=`$<e<%lO$8Z+d$:jk$f&j(Op(R!b$[#tOY%ZYZ&cZr%Zrs&}st%Ztu$:_uw%Zwx(rx}%Z}!O$:_!O!Q%Z!Q![$:_![!^%Z!^!_*g!_!c%Z!c!}$:_!}#O%Z#O#P&c#P#R%Z#R#S$:_#S#T%Z#T#o$:_#o#p*g#p$g%Z$g;'S$:_;'S;=`$<_<%lO$:_+d$<bP;=`<%l$:_(CS$<hP;=`<%l$8Z!5p$<tX![!3l(Op(R!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g&CO$=la(o&;`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+^#q;'S%Z;'S;=`+a<%lO%Z%#`$?O_!Z$I`r`$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$@Y_!pS$f&j(Op(R!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$Aj|$f&j(Op(R!b't(;d$Y#t'{&;d([!LYOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$AX#BZ$ISEr$IS$I_$AX$I_$JTEr$JT$JU$AX$JU$KVEr$KV$KW$AX$KW&FUEr&FU&FV$AX&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AX?HUOEr(CS$Duk$f&j(Op(R!b'u(;d$Y#t'{&;d([!LYOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr",
  tokenizers: [gfe, mfe, vfe, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, pfe, new DO("$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOt~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!R~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(Z~~", 141, 332), new DO("j~RQYZXz{^~^O'x~~aP!P!Qd~iO'y~~", 25, 315)],
  topRules: { Script: [0, 6], SingleExpression: [1, 269], SingleClassItem: [2, 270] },
  dialects: { jsx: 0, ts: 14614 },
  dynamicPrecedences: { 69: 1, 79: 1, 81: 1, 165: 1, 193: 1 },
  specialized: [{ term: 319, get: (n) => yfe[n] || -1 }, { term: 334, get: (n) => Ofe[n] || -1 }, { term: 70, get: (n) => wfe[n] || -1 }],
  tokenPrec: 14638
}), pD = [
  /* @__PURE__ */ es("function ${name}(${params}) {\n	${}\n}", {
    label: "function",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ es("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n	${}\n}", {
    label: "for",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ es("for (let ${name} of ${collection}) {\n	${}\n}", {
    label: "for",
    detail: "of loop",
    type: "keyword"
  }),
  /* @__PURE__ */ es("do {\n	${}\n} while (${})", {
    label: "do",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ es("while (${}) {\n	${}\n}", {
    label: "while",
    detail: "loop",
    type: "keyword"
  }),
  /* @__PURE__ */ es(`try {
	\${}
} catch (\${error}) {
	\${}
}`, {
    label: "try",
    detail: "/ catch block",
    type: "keyword"
  }),
  /* @__PURE__ */ es("if (${}) {\n	${}\n}", {
    label: "if",
    detail: "block",
    type: "keyword"
  }),
  /* @__PURE__ */ es(`if (\${}) {
	\${}
} else {
	\${}
}`, {
    label: "if",
    detail: "/ else block",
    type: "keyword"
  }),
  /* @__PURE__ */ es(`class \${name} {
	constructor(\${params}) {
		\${}
	}
}`, {
    label: "class",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ es('import {${names}} from "${module}"\n${}', {
    label: "import",
    detail: "named",
    type: "keyword"
  }),
  /* @__PURE__ */ es('import ${name} from "${module}"\n${}', {
    label: "import",
    detail: "default",
    type: "keyword"
  })
], Sfe = /* @__PURE__ */ pD.concat([
  /* @__PURE__ */ es("interface ${name} {\n	${}\n}", {
    label: "interface",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ es("type ${name} = ${type}", {
    label: "type",
    detail: "definition",
    type: "keyword"
  }),
  /* @__PURE__ */ es("enum ${name} {\n	${}\n}", {
    label: "enum",
    detail: "definition",
    type: "keyword"
  })
]), pP = /* @__PURE__ */ new Kae(), gD = /* @__PURE__ */ new Set([
  "Script",
  "Block",
  "FunctionExpression",
  "FunctionDeclaration",
  "ArrowFunction",
  "MethodDeclaration",
  "ForStatement"
]);
function Ph(n) {
  return (e, t) => {
    let i = e.node.getChild("VariableDefinition");
    return i && t(i, n), !0;
  };
}
const Cfe = ["FunctionDeclaration"], kfe = {
  FunctionDeclaration: /* @__PURE__ */ Ph("function"),
  ClassDeclaration: /* @__PURE__ */ Ph("class"),
  ClassExpression: () => !0,
  EnumDeclaration: /* @__PURE__ */ Ph("constant"),
  TypeAliasDeclaration: /* @__PURE__ */ Ph("type"),
  NamespaceDeclaration: /* @__PURE__ */ Ph("namespace"),
  VariableDefinition(n, e) {
    n.matchContext(Cfe) || e(n, "variable");
  },
  TypeDefinition(n, e) {
    e(n, "type");
  },
  __proto__: null
};
function mD(n, e) {
  let t = pP.get(e);
  if (t)
    return t;
  let i = [], s = !0;
  function r(o, l) {
    let a = n.sliceString(o.from, o.to);
    i.push({ label: a, type: l });
  }
  return e.cursor(Hn.IncludeAnonymous).iterate((o) => {
    if (s)
      s = !1;
    else if (o.name) {
      let l = kfe[o.name];
      if (l && l(o, r) || gD.has(o.name))
        return !1;
    } else if (o.to - o.from > 8192) {
      for (let l of mD(n, o.node))
        i.push(l);
      return !1;
    }
  }), pP.set(e, i), i;
}
const gP = /^[\w$\xa1-\uffff][\w$\d\xa1-\uffff]*$/, vD = [
  "TemplateString",
  "String",
  "RegExp",
  "LineComment",
  "BlockComment",
  "VariableDefinition",
  "TypeDefinition",
  "Label",
  "PropertyDefinition",
  "PropertyName",
  "PrivatePropertyDefinition",
  "PrivatePropertyName",
  ".",
  "?."
];
function Pfe(n) {
  let e = Qn(n.state).resolveInner(n.pos, -1);
  if (vD.indexOf(e.name) > -1)
    return null;
  let t = e.name == "VariableName" || e.to - e.from < 20 && gP.test(n.state.sliceDoc(e.from, e.to));
  if (!t && !n.explicit)
    return null;
  let i = [];
  for (let s = e; s; s = s.parent)
    gD.has(s.name) && (i = i.concat(mD(n.state.doc, s)));
  return {
    options: i,
    from: t ? e.from : n.pos,
    validFor: gP
  };
}
const Da = /* @__PURE__ */ Lu.define({
  name: "javascript",
  parser: /* @__PURE__ */ xfe.configure({
    props: [
      /* @__PURE__ */ $0.add({
        IfStatement: /* @__PURE__ */ Fc({ except: /^\s*({|else\b)/ }),
        TryStatement: /* @__PURE__ */ Fc({ except: /^\s*({|catch\b|finally\b)/ }),
        LabeledStatement: bce,
        SwitchBody: (n) => {
          let e = n.textAfter, t = /^\s*\}/.test(e), i = /^\s*(case|default)\b/.test(e);
          return n.baseIndent + (t ? 0 : i ? 1 : 2) * n.unit;
        },
        Block: /* @__PURE__ */ vce({ closing: "}" }),
        ArrowFunction: (n) => n.baseIndent + n.unit,
        "TemplateString BlockComment": () => null,
        "Statement Property": /* @__PURE__ */ Fc({ except: /^{/ }),
        JSXElement(n) {
          let e = /^\s*<\//.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        JSXEscape(n) {
          let e = /\s*\}/.test(n.textAfter);
          return n.lineIndent(n.node.from) + (e ? 0 : n.unit);
        },
        "JSXOpenTag JSXSelfClosingTag"(n) {
          return n.column(n.node.from) + n.unit;
        }
      }),
      /* @__PURE__ */ T0.add({
        "Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType": Y3,
        BlockComment(n) {
          return { from: n.from + 2, to: n.to - 2 };
        }
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] },
    commentTokens: { line: "//", block: { open: "/*", close: "*/" } },
    indentOnInput: /^\s*(?:case |default:|\{|\}|<\/)$/,
    wordChars: "$"
  }
}), bD = {
  test: (n) => /^JSX/.test(n.name),
  facet: /* @__PURE__ */ q3({ commentTokens: { block: { open: "{/*", close: "*/}" } } })
}, Efe = /* @__PURE__ */ Da.configure({ dialect: "ts" }, "typescript"), Afe = /* @__PURE__ */ Da.configure({
  dialect: "jsx",
  props: [/* @__PURE__ */ Fw.add((n) => n.isTop ? [bD] : void 0)]
}), $fe = /* @__PURE__ */ Da.configure({
  dialect: "jsx ts",
  props: [/* @__PURE__ */ Fw.add((n) => n.isTop ? [bD] : void 0)]
}, "typescript");
let yD = (n) => ({ label: n, type: "keyword" });
const OD = /* @__PURE__ */ "break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield".split(" ").map(yD), Tfe = /* @__PURE__ */ OD.concat(/* @__PURE__ */ ["declare", "implements", "private", "protected", "public"].map(yD));
function sGe(n = {}) {
  let e = n.jsx ? n.typescript ? $fe : Afe : n.typescript ? Efe : Da, t = n.typescript ? Sfe.concat(Tfe) : pD.concat(OD);
  return new Zw(e, [
    Da.data.of({
      autocomplete: XN(vD, tx(t))
    }),
    Da.data.of({
      autocomplete: Pfe
    }),
    n.jsx ? Rfe : []
  ]);
}
function _fe(n) {
  for (; ; ) {
    if (n.name == "JSXOpenTag" || n.name == "JSXSelfClosingTag" || n.name == "JSXFragmentTag")
      return n;
    if (n.name == "JSXEscape" || !n.parent)
      return null;
    n = n.parent;
  }
}
function mP(n, e, t = n.length) {
  for (let i = e == null ? void 0 : e.firstChild; i; i = i.nextSibling)
    if (i.name == "JSXIdentifier" || i.name == "JSXBuiltin" || i.name == "JSXNamespacedName" || i.name == "JSXMemberExpression")
      return n.sliceString(i.from, Math.min(i.to, t));
  return "";
}
const Mfe = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), Rfe = /* @__PURE__ */ _e.inputHandler.of((n, e, t, i, s) => {
  if ((Mfe ? n.composing : n.compositionStarted) || n.state.readOnly || e != t || i != ">" && i != "/" || !Da.isActiveAt(n.state, e, -1))
    return !1;
  let r = s(), { state: o } = r, l = o.changeByRange((a) => {
    var c;
    let { head: u } = a, h = Qn(o).resolveInner(u - 1, -1), d;
    if (h.name == "JSXStartTag" && (h = h.parent), !(o.doc.sliceString(u - 1, u) != i || h.name == "JSXAttributeValue" && h.to > u)) {
      if (i == ">" && h.name == "JSXFragmentTag")
        return { range: a, changes: { from: u, insert: "</>" } };
      if (i == "/" && h.name == "JSXStartCloseTag") {
        let f = h.parent, p = f.parent;
        if (p && f.from == u - 2 && ((d = mP(o.doc, p.firstChild, u)) || ((c = p.firstChild) === null || c === void 0 ? void 0 : c.name) == "JSXFragmentTag")) {
          let g = `${d}>`;
          return { range: ue.cursor(u + g.length, -1), changes: { from: u, insert: g } };
        }
      } else if (i == ">") {
        let f = _fe(h);
        if (f && f.name == "JSXOpenTag" && !/^\/?>|^<\//.test(o.doc.sliceString(u, u + 2)) && (d = mP(o.doc, f, u)))
          return { range: a, changes: { from: u, insert: `</${d}>` } };
      }
    }
    return { range: a };
  });
  return l.changes.empty ? !1 : (n.dispatch([
    r,
    o.update(l, { userEvent: "input.complete", scrollIntoView: !0 })
  ]), !0);
});
/*! medium-zoom 1.1.0 | MIT License | https://github.com/francoischalifour/medium-zoom */
var la = Object.assign || function(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
  }
  return n;
}, _p = function(e) {
  return e.tagName === "IMG";
}, Nfe = function(e) {
  return NodeList.prototype.isPrototypeOf(e);
}, Og = function(e) {
  return e && e.nodeType === 1;
}, vP = function(e) {
  var t = e.currentSrc || e.src;
  return t.substr(-4).toLowerCase() === ".svg";
}, bP = function(e) {
  try {
    return Array.isArray(e) ? e.filter(_p) : Nfe(e) ? [].slice.call(e).filter(_p) : Og(e) ? [e].filter(_p) : typeof e == "string" ? [].slice.call(document.querySelectorAll(e)).filter(_p) : [];
  } catch {
    throw new TypeError(`The provided selector is invalid.
Expects a CSS selector, a Node element, a NodeList or an array.
See: https://github.com/francoischalifour/medium-zoom`);
  }
}, Dfe = function(e) {
  var t = document.createElement("div");
  return t.classList.add("medium-zoom-overlay"), t.style.background = e, t;
}, Lfe = function(e) {
  var t = e.getBoundingClientRect(), i = t.top, s = t.left, r = t.width, o = t.height, l = e.cloneNode(), a = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0, c = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
  return l.removeAttribute("id"), l.style.position = "absolute", l.style.top = i + a + "px", l.style.left = s + c + "px", l.style.width = r + "px", l.style.height = o + "px", l.style.transform = "", l;
}, vc = function(e, t) {
  var i = la({
    bubbles: !1,
    cancelable: !1,
    detail: void 0
  }, t);
  if (typeof window.CustomEvent == "function")
    return new CustomEvent(e, i);
  var s = document.createEvent("CustomEvent");
  return s.initCustomEvent(e, i.bubbles, i.cancelable, i.detail), s;
}, Ife = function n(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = window.Promise || function(T) {
    function B() {
    }
    T(B, B);
  }, s = function(T) {
    var B = T.target;
    if (B === E) {
      p();
      return;
    }
    b.indexOf(B) !== -1 && g({ target: B });
  }, r = function() {
    if (!(x || !k.original)) {
      var T = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
      Math.abs(S - T) > C.scrollOffset && setTimeout(p, 150);
    }
  }, o = function(T) {
    var B = T.key || T.keyCode;
    (B === "Escape" || B === "Esc" || B === 27) && p();
  }, l = function() {
    var T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, B = T;
    if (T.background && (E.style.background = T.background), T.container && T.container instanceof Object && (B.container = la({}, C.container, T.container)), T.template) {
      var I = Og(T.template) ? T.template : document.querySelector(T.template);
      B.template = I;
    }
    return C = la({}, C, B), b.forEach(function(P) {
      P.dispatchEvent(vc("medium-zoom:update", {
        detail: { zoom: M }
      }));
    }), M;
  }, a = function() {
    var T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return n(la({}, C, T));
  }, c = function() {
    for (var T = arguments.length, B = Array(T), I = 0; I < T; I++)
      B[I] = arguments[I];
    var P = B.reduce(function(A, N) {
      return [].concat(A, bP(N));
    }, []);
    return P.filter(function(A) {
      return b.indexOf(A) === -1;
    }).forEach(function(A) {
      b.push(A), A.classList.add("medium-zoom-image");
    }), w.forEach(function(A) {
      var N = A.type, q = A.listener, j = A.options;
      P.forEach(function(H) {
        H.addEventListener(N, q, j);
      });
    }), M;
  }, u = function() {
    for (var T = arguments.length, B = Array(T), I = 0; I < T; I++)
      B[I] = arguments[I];
    k.zoomed && p();
    var P = B.length > 0 ? B.reduce(function(A, N) {
      return [].concat(A, bP(N));
    }, []) : b;
    return P.forEach(function(A) {
      A.classList.remove("medium-zoom-image"), A.dispatchEvent(vc("medium-zoom:detach", {
        detail: { zoom: M }
      }));
    }), b = b.filter(function(A) {
      return P.indexOf(A) === -1;
    }), M;
  }, h = function(T, B) {
    var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return b.forEach(function(P) {
      P.addEventListener("medium-zoom:" + T, B, I);
    }), w.push({ type: "medium-zoom:" + T, listener: B, options: I }), M;
  }, d = function(T, B) {
    var I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return b.forEach(function(P) {
      P.removeEventListener("medium-zoom:" + T, B, I);
    }), w = w.filter(function(P) {
      return !(P.type === "medium-zoom:" + T && P.listener.toString() === B.toString());
    }), M;
  }, f = function() {
    var T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, B = T.target, I = function() {
      var A = {
        width: document.documentElement.clientWidth,
        height: document.documentElement.clientHeight,
        left: 0,
        top: 0,
        right: 0,
        bottom: 0
      }, N = void 0, q = void 0;
      if (C.container)
        if (C.container instanceof Object)
          A = la({}, A, C.container), N = A.width - A.left - A.right - C.margin * 2, q = A.height - A.top - A.bottom - C.margin * 2;
        else {
          var j = Og(C.container) ? C.container : document.querySelector(C.container), H = j.getBoundingClientRect(), oe = H.width, te = H.height, W = H.left, U = H.top;
          A = la({}, A, {
            width: oe,
            height: te,
            left: W,
            top: U
          });
        }
      N = N || A.width - C.margin * 2, q = q || A.height - C.margin * 2;
      var le = k.zoomedHd || k.original, he = vP(le) ? N : le.naturalWidth || N, ee = vP(le) ? q : le.naturalHeight || q, pe = le.getBoundingClientRect(), be = pe.top, fe = pe.left, Ae = pe.width, ut = pe.height, zt = Math.min(Math.max(Ae, he), N) / Ae, Kn = Math.min(Math.max(ut, ee), q) / ut, Jn = Math.min(zt, Kn), Di = (-fe + (N - Ae) / 2 + C.margin + A.left) / Jn, hi = (-be + (q - ut) / 2 + C.margin + A.top) / Jn, Li = "scale(" + Jn + ") translate3d(" + Di + "px, " + hi + "px, 0)";
      k.zoomed.style.transform = Li, k.zoomedHd && (k.zoomedHd.style.transform = Li);
    };
    return new i(function(P) {
      if (B && b.indexOf(B) === -1) {
        P(M);
        return;
      }
      var A = function oe() {
        x = !1, k.zoomed.removeEventListener("transitionend", oe), k.original.dispatchEvent(vc("medium-zoom:opened", {
          detail: { zoom: M }
        })), P(M);
      };
      if (k.zoomed) {
        P(M);
        return;
      }
      if (B)
        k.original = B;
      else if (b.length > 0) {
        var N = b;
        k.original = N[0];
      } else {
        P(M);
        return;
      }
      if (k.original.dispatchEvent(vc("medium-zoom:open", {
        detail: { zoom: M }
      })), S = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0, x = !0, k.zoomed = Lfe(k.original), document.body.appendChild(E), C.template) {
        var q = Og(C.template) ? C.template : document.querySelector(C.template);
        k.template = document.createElement("div"), k.template.appendChild(q.content.cloneNode(!0)), document.body.appendChild(k.template);
      }
      if (k.original.parentElement && k.original.parentElement.tagName === "PICTURE" && k.original.currentSrc && (k.zoomed.src = k.original.currentSrc), document.body.appendChild(k.zoomed), window.requestAnimationFrame(function() {
        document.body.classList.add("medium-zoom--opened");
      }), k.original.classList.add("medium-zoom-image--hidden"), k.zoomed.classList.add("medium-zoom-image--opened"), k.zoomed.addEventListener("click", p), k.zoomed.addEventListener("transitionend", A), k.original.getAttribute("data-zoom-src")) {
        k.zoomedHd = k.zoomed.cloneNode(), k.zoomedHd.removeAttribute("srcset"), k.zoomedHd.removeAttribute("sizes"), k.zoomedHd.removeAttribute("loading"), k.zoomedHd.src = k.zoomed.getAttribute("data-zoom-src"), k.zoomedHd.onerror = function() {
          clearInterval(j), console.warn("Unable to reach the zoom image target " + k.zoomedHd.src), k.zoomedHd = null, I();
        };
        var j = setInterval(function() {
          k.zoomedHd.complete && (clearInterval(j), k.zoomedHd.classList.add("medium-zoom-image--opened"), k.zoomedHd.addEventListener("click", p), document.body.appendChild(k.zoomedHd), I());
        }, 10);
      } else if (k.original.hasAttribute("srcset")) {
        k.zoomedHd = k.zoomed.cloneNode(), k.zoomedHd.removeAttribute("sizes"), k.zoomedHd.removeAttribute("loading");
        var H = k.zoomedHd.addEventListener("load", function() {
          k.zoomedHd.removeEventListener("load", H), k.zoomedHd.classList.add("medium-zoom-image--opened"), k.zoomedHd.addEventListener("click", p), document.body.appendChild(k.zoomedHd), I();
        });
      } else
        I();
    });
  }, p = function() {
    return new i(function(T) {
      if (x || !k.original) {
        T(M);
        return;
      }
      var B = function I() {
        k.original.classList.remove("medium-zoom-image--hidden"), document.body.removeChild(k.zoomed), k.zoomedHd && document.body.removeChild(k.zoomedHd), document.body.removeChild(E), k.zoomed.classList.remove("medium-zoom-image--opened"), k.template && document.body.removeChild(k.template), x = !1, k.zoomed.removeEventListener("transitionend", I), k.original.dispatchEvent(vc("medium-zoom:closed", {
          detail: { zoom: M }
        })), k.original = null, k.zoomed = null, k.zoomedHd = null, k.template = null, T(M);
      };
      x = !0, document.body.classList.remove("medium-zoom--opened"), k.zoomed.style.transform = "", k.zoomedHd && (k.zoomedHd.style.transform = ""), k.template && (k.template.style.transition = "opacity 150ms", k.template.style.opacity = 0), k.original.dispatchEvent(vc("medium-zoom:close", {
        detail: { zoom: M }
      })), k.zoomed.addEventListener("transitionend", B);
    });
  }, g = function() {
    var T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, B = T.target;
    return k.original ? p() : f({ target: B });
  }, m = function() {
    return C;
  }, v = function() {
    return b;
  }, O = function() {
    return k.original;
  }, b = [], w = [], x = !1, S = 0, C = t, k = {
    original: null,
    zoomed: null,
    zoomedHd: null,
    template: null
    // If the selector is omitted, it's replaced by the options
  };
  Object.prototype.toString.call(e) === "[object Object]" ? C = e : (e || typeof e == "string") && c(e), C = la({
    margin: 0,
    background: "#fff",
    scrollOffset: 40,
    container: null,
    template: null
  }, C);
  var E = Dfe(C.background);
  document.addEventListener("click", s), document.addEventListener("keyup", o), document.addEventListener("scroll", r), window.addEventListener("resize", p);
  var M = {
    open: f,
    close: p,
    toggle: g,
    update: l,
    clone: a,
    attach: c,
    detach: u,
    on: h,
    off: d,
    getOptions: m,
    getImages: v,
    getZoomedImage: O
  };
  return M;
};
function Bfe(n, e) {
  e === void 0 && (e = {});
  var t = e.insertAt;
  if (!(!n || typeof document > "u")) {
    var i = document.head || document.getElementsByTagName("head")[0], s = document.createElement("style");
    s.type = "text/css", t === "top" && i.firstChild ? i.insertBefore(s, i.firstChild) : i.appendChild(s), s.styleSheet ? s.styleSheet.cssText = n : s.appendChild(document.createTextNode(n));
  }
}
var Qfe = ".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}";
Bfe(Qfe);
const zfe = Ife;
var jfe = function() {
  var n = document.getSelection();
  if (!n.rangeCount)
    return function() {
    };
  for (var e = document.activeElement, t = [], i = 0; i < n.rangeCount; i++)
    t.push(n.getRangeAt(i));
  switch (e.tagName.toUpperCase()) {
    case "INPUT":
    case "TEXTAREA":
      e.blur();
      break;
    default:
      e = null;
      break;
  }
  return n.removeAllRanges(), function() {
    n.type === "Caret" && n.removeAllRanges(), n.rangeCount || t.forEach(function(s) {
      n.addRange(s);
    }), e && e.focus();
  };
}, Vfe = jfe, yP = {
  "text/plain": "Text",
  "text/html": "Url",
  default: "Text"
}, Ffe = "Copy to clipboard: #{key}, Enter";
function Zfe(n) {
  var e = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return n.replace(/#{\s*key\s*}/g, e);
}
function qfe(n, e) {
  var t, i, s, r, o, l, a = !1;
  e || (e = {}), t = e.debug || !1;
  try {
    s = Vfe(), r = document.createRange(), o = document.getSelection(), l = document.createElement("span"), l.textContent = n, l.ariaHidden = "true", l.style.all = "unset", l.style.position = "fixed", l.style.top = 0, l.style.clip = "rect(0, 0, 0, 0)", l.style.whiteSpace = "pre", l.style.webkitUserSelect = "text", l.style.MozUserSelect = "text", l.style.msUserSelect = "text", l.style.userSelect = "text", l.addEventListener("copy", function(u) {
      if (u.stopPropagation(), e.format)
        if (u.preventDefault(), typeof u.clipboardData > "u") {
          t && console.warn("unable to use e.clipboardData"), t && console.warn("trying IE specific stuff"), window.clipboardData.clearData();
          var h = yP[e.format] || yP.default;
          window.clipboardData.setData(h, n);
        } else
          u.clipboardData.clearData(), u.clipboardData.setData(e.format, n);
      e.onCopy && (u.preventDefault(), e.onCopy(u.clipboardData));
    }), document.body.appendChild(l), r.selectNodeContents(l), o.addRange(r);
    var c = document.execCommand("copy");
    if (!c)
      throw new Error("copy command was unsuccessful");
    a = !0;
  } catch (u) {
    t && console.error("unable to copy using execCommand: ", u), t && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(e.format || "text", n), e.onCopy && e.onCopy(window.clipboardData), a = !0;
    } catch (h) {
      t && console.error("unable to copy using clipboardData: ", h), t && console.error("falling back to prompt"), i = Zfe("message" in e ? e.message : Ffe), window.prompt(i, n);
    }
  } finally {
    o && (typeof o.removeRange == "function" ? o.removeRange(r) : o.removeAllRanges()), l && document.body.removeChild(l), s();
  }
  return a;
}
var Wfe = qfe;
const Hfe = /* @__PURE__ */ xf(Wfe);
var Nt = {};
const Xfe = "Á", Yfe = "á", Ufe = "Ă", Gfe = "ă", Kfe = "∾", Jfe = "∿", epe = "∾̳", tpe = "Â", npe = "â", ipe = "´", spe = "А", rpe = "а", ope = "Æ", lpe = "æ", ape = "⁡", cpe = "𝔄", upe = "𝔞", hpe = "À", dpe = "à", fpe = "ℵ", ppe = "ℵ", gpe = "Α", mpe = "α", vpe = "Ā", bpe = "ā", ype = "⨿", Ope = "&", wpe = "&", xpe = "⩕", Spe = "⩓", Cpe = "∧", kpe = "⩜", Ppe = "⩘", Epe = "⩚", Ape = "∠", $pe = "⦤", Tpe = "∠", _pe = "⦨", Mpe = "⦩", Rpe = "⦪", Npe = "⦫", Dpe = "⦬", Lpe = "⦭", Ipe = "⦮", Bpe = "⦯", Qpe = "∡", zpe = "∟", jpe = "⊾", Vpe = "⦝", Fpe = "∢", Zpe = "Å", qpe = "⍼", Wpe = "Ą", Hpe = "ą", Xpe = "𝔸", Ype = "𝕒", Upe = "⩯", Gpe = "≈", Kpe = "⩰", Jpe = "≊", ege = "≋", tge = "'", nge = "⁡", ige = "≈", sge = "≊", rge = "Å", oge = "å", lge = "𝒜", age = "𝒶", cge = "≔", uge = "*", hge = "≈", dge = "≍", fge = "Ã", pge = "ã", gge = "Ä", mge = "ä", vge = "∳", bge = "⨑", yge = "≌", Oge = "϶", wge = "‵", xge = "∽", Sge = "⋍", Cge = "∖", kge = "⫧", Pge = "⊽", Ege = "⌅", Age = "⌆", $ge = "⌅", Tge = "⎵", _ge = "⎶", Mge = "≌", Rge = "Б", Nge = "б", Dge = "„", Lge = "∵", Ige = "∵", Bge = "∵", Qge = "⦰", zge = "϶", jge = "ℬ", Vge = "ℬ", Fge = "Β", Zge = "β", qge = "ℶ", Wge = "≬", Hge = "𝔅", Xge = "𝔟", Yge = "⋂", Uge = "◯", Gge = "⋃", Kge = "⨀", Jge = "⨁", eme = "⨂", tme = "⨆", nme = "★", ime = "▽", sme = "△", rme = "⨄", ome = "⋁", lme = "⋀", ame = "⤍", cme = "⧫", ume = "▪", hme = "▴", dme = "▾", fme = "◂", pme = "▸", gme = "␣", mme = "▒", vme = "░", bme = "▓", yme = "█", Ome = "=⃥", wme = "≡⃥", xme = "⫭", Sme = "⌐", Cme = "𝔹", kme = "𝕓", Pme = "⊥", Eme = "⊥", Ame = "⋈", $me = "⧉", Tme = "┐", _me = "╕", Mme = "╖", Rme = "╗", Nme = "┌", Dme = "╒", Lme = "╓", Ime = "╔", Bme = "─", Qme = "═", zme = "┬", jme = "╤", Vme = "╥", Fme = "╦", Zme = "┴", qme = "╧", Wme = "╨", Hme = "╩", Xme = "⊟", Yme = "⊞", Ume = "⊠", Gme = "┘", Kme = "╛", Jme = "╜", e0e = "╝", t0e = "└", n0e = "╘", i0e = "╙", s0e = "╚", r0e = "│", o0e = "║", l0e = "┼", a0e = "╪", c0e = "╫", u0e = "╬", h0e = "┤", d0e = "╡", f0e = "╢", p0e = "╣", g0e = "├", m0e = "╞", v0e = "╟", b0e = "╠", y0e = "‵", O0e = "˘", w0e = "˘", x0e = "¦", S0e = "𝒷", C0e = "ℬ", k0e = "⁏", P0e = "∽", E0e = "⋍", A0e = "⧅", $0e = "\\", T0e = "⟈", _0e = "•", M0e = "•", R0e = "≎", N0e = "⪮", D0e = "≏", L0e = "≎", I0e = "≏", B0e = "Ć", Q0e = "ć", z0e = "⩄", j0e = "⩉", V0e = "⩋", F0e = "∩", Z0e = "⋒", q0e = "⩇", W0e = "⩀", H0e = "ⅅ", X0e = "∩︀", Y0e = "⁁", U0e = "ˇ", G0e = "ℭ", K0e = "⩍", J0e = "Č", eve = "č", tve = "Ç", nve = "ç", ive = "Ĉ", sve = "ĉ", rve = "∰", ove = "⩌", lve = "⩐", ave = "Ċ", cve = "ċ", uve = "¸", hve = "¸", dve = "⦲", fve = "¢", pve = "·", gve = "·", mve = "𝔠", vve = "ℭ", bve = "Ч", yve = "ч", Ove = "✓", wve = "✓", xve = "Χ", Sve = "χ", Cve = "ˆ", kve = "≗", Pve = "↺", Eve = "↻", Ave = "⊛", $ve = "⊚", Tve = "⊝", _ve = "⊙", Mve = "®", Rve = "Ⓢ", Nve = "⊖", Dve = "⊕", Lve = "⊗", Ive = "○", Bve = "⧃", Qve = "≗", zve = "⨐", jve = "⫯", Vve = "⧂", Fve = "∲", Zve = "”", qve = "’", Wve = "♣", Hve = "♣", Xve = ":", Yve = "∷", Uve = "⩴", Gve = "≔", Kve = "≔", Jve = ",", ebe = "@", tbe = "∁", nbe = "∘", ibe = "∁", sbe = "ℂ", rbe = "≅", obe = "⩭", lbe = "≡", abe = "∮", cbe = "∯", ube = "∮", hbe = "𝕔", dbe = "ℂ", fbe = "∐", pbe = "∐", gbe = "©", mbe = "©", vbe = "℗", bbe = "∳", ybe = "↵", Obe = "✗", wbe = "⨯", xbe = "𝒞", Sbe = "𝒸", Cbe = "⫏", kbe = "⫑", Pbe = "⫐", Ebe = "⫒", Abe = "⋯", $be = "⤸", Tbe = "⤵", _be = "⋞", Mbe = "⋟", Rbe = "↶", Nbe = "⤽", Dbe = "⩈", Lbe = "⩆", Ibe = "≍", Bbe = "∪", Qbe = "⋓", zbe = "⩊", jbe = "⊍", Vbe = "⩅", Fbe = "∪︀", Zbe = "↷", qbe = "⤼", Wbe = "⋞", Hbe = "⋟", Xbe = "⋎", Ybe = "⋏", Ube = "¤", Gbe = "↶", Kbe = "↷", Jbe = "⋎", eye = "⋏", tye = "∲", nye = "∱", iye = "⌭", sye = "†", rye = "‡", oye = "ℸ", lye = "↓", aye = "↡", cye = "⇓", uye = "‐", hye = "⫤", dye = "⊣", fye = "⤏", pye = "˝", gye = "Ď", mye = "ď", vye = "Д", bye = "д", yye = "‡", Oye = "⇊", wye = "ⅅ", xye = "ⅆ", Sye = "⤑", Cye = "⩷", kye = "°", Pye = "∇", Eye = "Δ", Aye = "δ", $ye = "⦱", Tye = "⥿", _ye = "𝔇", Mye = "𝔡", Rye = "⥥", Nye = "⇃", Dye = "⇂", Lye = "´", Iye = "˙", Bye = "˝", Qye = "`", zye = "˜", jye = "⋄", Vye = "⋄", Fye = "⋄", Zye = "♦", qye = "♦", Wye = "¨", Hye = "ⅆ", Xye = "ϝ", Yye = "⋲", Uye = "÷", Gye = "÷", Kye = "⋇", Jye = "⋇", eOe = "Ђ", tOe = "ђ", nOe = "⌞", iOe = "⌍", sOe = "$", rOe = "𝔻", oOe = "𝕕", lOe = "¨", aOe = "˙", cOe = "⃜", uOe = "≐", hOe = "≑", dOe = "≐", fOe = "∸", pOe = "∔", gOe = "⊡", mOe = "⌆", vOe = "∯", bOe = "¨", yOe = "⇓", OOe = "⇐", wOe = "⇔", xOe = "⫤", SOe = "⟸", COe = "⟺", kOe = "⟹", POe = "⇒", EOe = "⊨", AOe = "⇑", $Oe = "⇕", TOe = "∥", _Oe = "⤓", MOe = "↓", ROe = "↓", NOe = "⇓", DOe = "⇵", LOe = "̑", IOe = "⇊", BOe = "⇃", QOe = "⇂", zOe = "⥐", jOe = "⥞", VOe = "⥖", FOe = "↽", ZOe = "⥟", qOe = "⥗", WOe = "⇁", HOe = "↧", XOe = "⊤", YOe = "⤐", UOe = "⌟", GOe = "⌌", KOe = "𝒟", JOe = "𝒹", e1e = "Ѕ", t1e = "ѕ", n1e = "⧶", i1e = "Đ", s1e = "đ", r1e = "⋱", o1e = "▿", l1e = "▾", a1e = "⇵", c1e = "⥯", u1e = "⦦", h1e = "Џ", d1e = "џ", f1e = "⟿", p1e = "É", g1e = "é", m1e = "⩮", v1e = "Ě", b1e = "ě", y1e = "Ê", O1e = "ê", w1e = "≖", x1e = "≕", S1e = "Э", C1e = "э", k1e = "⩷", P1e = "Ė", E1e = "ė", A1e = "≑", $1e = "ⅇ", T1e = "≒", _1e = "𝔈", M1e = "𝔢", R1e = "⪚", N1e = "È", D1e = "è", L1e = "⪖", I1e = "⪘", B1e = "⪙", Q1e = "∈", z1e = "⏧", j1e = "ℓ", V1e = "⪕", F1e = "⪗", Z1e = "Ē", q1e = "ē", W1e = "∅", H1e = "∅", X1e = "◻", Y1e = "∅", U1e = "▫", G1e = " ", K1e = " ", J1e = " ", ewe = "Ŋ", twe = "ŋ", nwe = " ", iwe = "Ę", swe = "ę", rwe = "𝔼", owe = "𝕖", lwe = "⋕", awe = "⧣", cwe = "⩱", uwe = "ε", hwe = "Ε", dwe = "ε", fwe = "ϵ", pwe = "≖", gwe = "≕", mwe = "≂", vwe = "⪖", bwe = "⪕", ywe = "⩵", Owe = "=", wwe = "≂", xwe = "≟", Swe = "⇌", Cwe = "≡", kwe = "⩸", Pwe = "⧥", Ewe = "⥱", Awe = "≓", $we = "ℯ", Twe = "ℰ", _we = "≐", Mwe = "⩳", Rwe = "≂", Nwe = "Η", Dwe = "η", Lwe = "Ð", Iwe = "ð", Bwe = "Ë", Qwe = "ë", zwe = "€", jwe = "!", Vwe = "∃", Fwe = "∃", Zwe = "ℰ", qwe = "ⅇ", Wwe = "ⅇ", Hwe = "≒", Xwe = "Ф", Ywe = "ф", Uwe = "♀", Gwe = "ﬃ", Kwe = "ﬀ", Jwe = "ﬄ", exe = "𝔉", txe = "𝔣", nxe = "ﬁ", ixe = "◼", sxe = "▪", rxe = "fj", oxe = "♭", lxe = "ﬂ", axe = "▱", cxe = "ƒ", uxe = "𝔽", hxe = "𝕗", dxe = "∀", fxe = "∀", pxe = "⋔", gxe = "⫙", mxe = "ℱ", vxe = "⨍", bxe = "½", yxe = "⅓", Oxe = "¼", wxe = "⅕", xxe = "⅙", Sxe = "⅛", Cxe = "⅔", kxe = "⅖", Pxe = "¾", Exe = "⅗", Axe = "⅜", $xe = "⅘", Txe = "⅚", _xe = "⅝", Mxe = "⅞", Rxe = "⁄", Nxe = "⌢", Dxe = "𝒻", Lxe = "ℱ", Ixe = "ǵ", Bxe = "Γ", Qxe = "γ", zxe = "Ϝ", jxe = "ϝ", Vxe = "⪆", Fxe = "Ğ", Zxe = "ğ", qxe = "Ģ", Wxe = "Ĝ", Hxe = "ĝ", Xxe = "Г", Yxe = "г", Uxe = "Ġ", Gxe = "ġ", Kxe = "≥", Jxe = "≧", eSe = "⪌", tSe = "⋛", nSe = "≥", iSe = "≧", sSe = "⩾", rSe = "⪩", oSe = "⩾", lSe = "⪀", aSe = "⪂", cSe = "⪄", uSe = "⋛︀", hSe = "⪔", dSe = "𝔊", fSe = "𝔤", pSe = "≫", gSe = "⋙", mSe = "⋙", vSe = "ℷ", bSe = "Ѓ", ySe = "ѓ", OSe = "⪥", wSe = "≷", xSe = "⪒", SSe = "⪤", CSe = "⪊", kSe = "⪊", PSe = "⪈", ESe = "≩", ASe = "⪈", $Se = "≩", TSe = "⋧", _Se = "𝔾", MSe = "𝕘", RSe = "`", NSe = "≥", DSe = "⋛", LSe = "≧", ISe = "⪢", BSe = "≷", QSe = "⩾", zSe = "≳", jSe = "𝒢", VSe = "ℊ", FSe = "≳", ZSe = "⪎", qSe = "⪐", WSe = "⪧", HSe = "⩺", XSe = ">", YSe = ">", USe = "≫", GSe = "⋗", KSe = "⦕", JSe = "⩼", eCe = "⪆", tCe = "⥸", nCe = "⋗", iCe = "⋛", sCe = "⪌", rCe = "≷", oCe = "≳", lCe = "≩︀", aCe = "≩︀", cCe = "ˇ", uCe = " ", hCe = "½", dCe = "ℋ", fCe = "Ъ", pCe = "ъ", gCe = "⥈", mCe = "↔", vCe = "⇔", bCe = "↭", yCe = "^", OCe = "ℏ", wCe = "Ĥ", xCe = "ĥ", SCe = "♥", CCe = "♥", kCe = "…", PCe = "⊹", ECe = "𝔥", ACe = "ℌ", $Ce = "ℋ", TCe = "⤥", _Ce = "⤦", MCe = "⇿", RCe = "∻", NCe = "↩", DCe = "↪", LCe = "𝕙", ICe = "ℍ", BCe = "―", QCe = "─", zCe = "𝒽", jCe = "ℋ", VCe = "ℏ", FCe = "Ħ", ZCe = "ħ", qCe = "≎", WCe = "≏", HCe = "⁃", XCe = "‐", YCe = "Í", UCe = "í", GCe = "⁣", KCe = "Î", JCe = "î", eke = "И", tke = "и", nke = "İ", ike = "Е", ske = "е", rke = "¡", oke = "⇔", lke = "𝔦", ake = "ℑ", cke = "Ì", uke = "ì", hke = "ⅈ", dke = "⨌", fke = "∭", pke = "⧜", gke = "℩", mke = "Ĳ", vke = "ĳ", bke = "Ī", yke = "ī", Oke = "ℑ", wke = "ⅈ", xke = "ℐ", Ske = "ℑ", Cke = "ı", kke = "ℑ", Pke = "⊷", Eke = "Ƶ", Ake = "⇒", $ke = "℅", Tke = "∞", _ke = "⧝", Mke = "ı", Rke = "⊺", Nke = "∫", Dke = "∬", Lke = "ℤ", Ike = "∫", Bke = "⊺", Qke = "⋂", zke = "⨗", jke = "⨼", Vke = "⁣", Fke = "⁢", Zke = "Ё", qke = "ё", Wke = "Į", Hke = "į", Xke = "𝕀", Yke = "𝕚", Uke = "Ι", Gke = "ι", Kke = "⨼", Jke = "¿", e2e = "𝒾", t2e = "ℐ", n2e = "∈", i2e = "⋵", s2e = "⋹", r2e = "⋴", o2e = "⋳", l2e = "∈", a2e = "⁢", c2e = "Ĩ", u2e = "ĩ", h2e = "І", d2e = "і", f2e = "Ï", p2e = "ï", g2e = "Ĵ", m2e = "ĵ", v2e = "Й", b2e = "й", y2e = "𝔍", O2e = "𝔧", w2e = "ȷ", x2e = "𝕁", S2e = "𝕛", C2e = "𝒥", k2e = "𝒿", P2e = "Ј", E2e = "ј", A2e = "Є", $2e = "є", T2e = "Κ", _2e = "κ", M2e = "ϰ", R2e = "Ķ", N2e = "ķ", D2e = "К", L2e = "к", I2e = "𝔎", B2e = "𝔨", Q2e = "ĸ", z2e = "Х", j2e = "х", V2e = "Ќ", F2e = "ќ", Z2e = "𝕂", q2e = "𝕜", W2e = "𝒦", H2e = "𝓀", X2e = "⇚", Y2e = "Ĺ", U2e = "ĺ", G2e = "⦴", K2e = "ℒ", J2e = "Λ", ePe = "λ", tPe = "⟨", nPe = "⟪", iPe = "⦑", sPe = "⟨", rPe = "⪅", oPe = "ℒ", lPe = "«", aPe = "⇤", cPe = "⤟", uPe = "←", hPe = "↞", dPe = "⇐", fPe = "⤝", pPe = "↩", gPe = "↫", mPe = "⤹", vPe = "⥳", bPe = "↢", yPe = "⤙", OPe = "⤛", wPe = "⪫", xPe = "⪭", SPe = "⪭︀", CPe = "⤌", kPe = "⤎", PPe = "❲", EPe = "{", APe = "[", $Pe = "⦋", TPe = "⦏", _Pe = "⦍", MPe = "Ľ", RPe = "ľ", NPe = "Ļ", DPe = "ļ", LPe = "⌈", IPe = "{", BPe = "Л", QPe = "л", zPe = "⤶", jPe = "“", VPe = "„", FPe = "⥧", ZPe = "⥋", qPe = "↲", WPe = "≤", HPe = "≦", XPe = "⟨", YPe = "⇤", UPe = "←", GPe = "←", KPe = "⇐", JPe = "⇆", eEe = "↢", tEe = "⌈", nEe = "⟦", iEe = "⥡", sEe = "⥙", rEe = "⇃", oEe = "⌊", lEe = "↽", aEe = "↼", cEe = "⇇", uEe = "↔", hEe = "↔", dEe = "⇔", fEe = "⇆", pEe = "⇋", gEe = "↭", mEe = "⥎", vEe = "↤", bEe = "⊣", yEe = "⥚", OEe = "⋋", wEe = "⧏", xEe = "⊲", SEe = "⊴", CEe = "⥑", kEe = "⥠", PEe = "⥘", EEe = "↿", AEe = "⥒", $Ee = "↼", TEe = "⪋", _Ee = "⋚", MEe = "≤", REe = "≦", NEe = "⩽", DEe = "⪨", LEe = "⩽", IEe = "⩿", BEe = "⪁", QEe = "⪃", zEe = "⋚︀", jEe = "⪓", VEe = "⪅", FEe = "⋖", ZEe = "⋚", qEe = "⪋", WEe = "⋚", HEe = "≦", XEe = "≶", YEe = "≶", UEe = "⪡", GEe = "≲", KEe = "⩽", JEe = "≲", eAe = "⥼", tAe = "⌊", nAe = "𝔏", iAe = "𝔩", sAe = "≶", rAe = "⪑", oAe = "⥢", lAe = "↽", aAe = "↼", cAe = "⥪", uAe = "▄", hAe = "Љ", dAe = "љ", fAe = "⇇", pAe = "≪", gAe = "⋘", mAe = "⌞", vAe = "⇚", bAe = "⥫", yAe = "◺", OAe = "Ŀ", wAe = "ŀ", xAe = "⎰", SAe = "⎰", CAe = "⪉", kAe = "⪉", PAe = "⪇", EAe = "≨", AAe = "⪇", $Ae = "≨", TAe = "⋦", _Ae = "⟬", MAe = "⇽", RAe = "⟦", NAe = "⟵", DAe = "⟵", LAe = "⟸", IAe = "⟷", BAe = "⟷", QAe = "⟺", zAe = "⟼", jAe = "⟶", VAe = "⟶", FAe = "⟹", ZAe = "↫", qAe = "↬", WAe = "⦅", HAe = "𝕃", XAe = "𝕝", YAe = "⨭", UAe = "⨴", GAe = "∗", KAe = "_", JAe = "↙", e$e = "↘", t$e = "◊", n$e = "◊", i$e = "⧫", s$e = "(", r$e = "⦓", o$e = "⇆", l$e = "⌟", a$e = "⇋", c$e = "⥭", u$e = "‎", h$e = "⊿", d$e = "‹", f$e = "𝓁", p$e = "ℒ", g$e = "↰", m$e = "↰", v$e = "≲", b$e = "⪍", y$e = "⪏", O$e = "[", w$e = "‘", x$e = "‚", S$e = "Ł", C$e = "ł", k$e = "⪦", P$e = "⩹", E$e = "<", A$e = "<", $$e = "≪", T$e = "⋖", _$e = "⋋", M$e = "⋉", R$e = "⥶", N$e = "⩻", D$e = "◃", L$e = "⊴", I$e = "◂", B$e = "⦖", Q$e = "⥊", z$e = "⥦", j$e = "≨︀", V$e = "≨︀", F$e = "¯", Z$e = "♂", q$e = "✠", W$e = "✠", H$e = "↦", X$e = "↦", Y$e = "↧", U$e = "↤", G$e = "↥", K$e = "▮", J$e = "⨩", eTe = "М", tTe = "м", nTe = "—", iTe = "∺", sTe = "∡", rTe = " ", oTe = "ℳ", lTe = "𝔐", aTe = "𝔪", cTe = "℧", uTe = "µ", hTe = "*", dTe = "⫰", fTe = "∣", pTe = "·", gTe = "⊟", mTe = "−", vTe = "∸", bTe = "⨪", yTe = "∓", OTe = "⫛", wTe = "…", xTe = "∓", STe = "⊧", CTe = "𝕄", kTe = "𝕞", PTe = "∓", ETe = "𝓂", ATe = "ℳ", $Te = "∾", TTe = "Μ", _Te = "μ", MTe = "⊸", RTe = "⊸", NTe = "∇", DTe = "Ń", LTe = "ń", ITe = "∠⃒", BTe = "≉", QTe = "⩰̸", zTe = "≋̸", jTe = "ŉ", VTe = "≉", FTe = "♮", ZTe = "ℕ", qTe = "♮", WTe = " ", HTe = "≎̸", XTe = "≏̸", YTe = "⩃", UTe = "Ň", GTe = "ň", KTe = "Ņ", JTe = "ņ", e_e = "≇", t_e = "⩭̸", n_e = "⩂", i_e = "Н", s_e = "н", r_e = "–", o_e = "⤤", l_e = "↗", a_e = "⇗", c_e = "↗", u_e = "≠", h_e = "≐̸", d_e = "​", f_e = "​", p_e = "​", g_e = "​", m_e = "≢", v_e = "⤨", b_e = "≂̸", y_e = "≫", O_e = "≪", w_e = `
`, x_e = "∄", S_e = "∄", C_e = "𝔑", k_e = "𝔫", P_e = "≧̸", E_e = "≱", A_e = "≱", $_e = "≧̸", T_e = "⩾̸", __e = "⩾̸", M_e = "⋙̸", R_e = "≵", N_e = "≫⃒", D_e = "≯", L_e = "≯", I_e = "≫̸", B_e = "↮", Q_e = "⇎", z_e = "⫲", j_e = "∋", V_e = "⋼", F_e = "⋺", Z_e = "∋", q_e = "Њ", W_e = "њ", H_e = "↚", X_e = "⇍", Y_e = "‥", U_e = "≦̸", G_e = "≰", K_e = "↚", J_e = "⇍", eMe = "↮", tMe = "⇎", nMe = "≰", iMe = "≦̸", sMe = "⩽̸", rMe = "⩽̸", oMe = "≮", lMe = "⋘̸", aMe = "≴", cMe = "≪⃒", uMe = "≮", hMe = "⋪", dMe = "⋬", fMe = "≪̸", pMe = "∤", gMe = "⁠", mMe = " ", vMe = "𝕟", bMe = "ℕ", yMe = "⫬", OMe = "¬", wMe = "≢", xMe = "≭", SMe = "∦", CMe = "∉", kMe = "≠", PMe = "≂̸", EMe = "∄", AMe = "≯", $Me = "≱", TMe = "≧̸", _Me = "≫̸", MMe = "≹", RMe = "⩾̸", NMe = "≵", DMe = "≎̸", LMe = "≏̸", IMe = "∉", BMe = "⋵̸", QMe = "⋹̸", zMe = "∉", jMe = "⋷", VMe = "⋶", FMe = "⧏̸", ZMe = "⋪", qMe = "⋬", WMe = "≮", HMe = "≰", XMe = "≸", YMe = "≪̸", UMe = "⩽̸", GMe = "≴", KMe = "⪢̸", JMe = "⪡̸", eRe = "∌", tRe = "∌", nRe = "⋾", iRe = "⋽", sRe = "⊀", rRe = "⪯̸", oRe = "⋠", lRe = "∌", aRe = "⧐̸", cRe = "⋫", uRe = "⋭", hRe = "⊏̸", dRe = "⋢", fRe = "⊐̸", pRe = "⋣", gRe = "⊂⃒", mRe = "⊈", vRe = "⊁", bRe = "⪰̸", yRe = "⋡", ORe = "≿̸", wRe = "⊃⃒", xRe = "⊉", SRe = "≁", CRe = "≄", kRe = "≇", PRe = "≉", ERe = "∤", ARe = "∦", $Re = "∦", TRe = "⫽⃥", _Re = "∂̸", MRe = "⨔", RRe = "⊀", NRe = "⋠", DRe = "⊀", LRe = "⪯̸", IRe = "⪯̸", BRe = "⤳̸", QRe = "↛", zRe = "⇏", jRe = "↝̸", VRe = "↛", FRe = "⇏", ZRe = "⋫", qRe = "⋭", WRe = "⊁", HRe = "⋡", XRe = "⪰̸", YRe = "𝒩", URe = "𝓃", GRe = "∤", KRe = "∦", JRe = "≁", e3e = "≄", t3e = "≄", n3e = "∤", i3e = "∦", s3e = "⋢", r3e = "⋣", o3e = "⊄", l3e = "⫅̸", a3e = "⊈", c3e = "⊂⃒", u3e = "⊈", h3e = "⫅̸", d3e = "⊁", f3e = "⪰̸", p3e = "⊅", g3e = "⫆̸", m3e = "⊉", v3e = "⊃⃒", b3e = "⊉", y3e = "⫆̸", O3e = "≹", w3e = "Ñ", x3e = "ñ", S3e = "≸", C3e = "⋪", k3e = "⋬", P3e = "⋫", E3e = "⋭", A3e = "Ν", $3e = "ν", T3e = "#", _3e = "№", M3e = " ", R3e = "≍⃒", N3e = "⊬", D3e = "⊭", L3e = "⊮", I3e = "⊯", B3e = "≥⃒", Q3e = ">⃒", z3e = "⤄", j3e = "⧞", V3e = "⤂", F3e = "≤⃒", Z3e = "<⃒", q3e = "⊴⃒", W3e = "⤃", H3e = "⊵⃒", X3e = "∼⃒", Y3e = "⤣", U3e = "↖", G3e = "⇖", K3e = "↖", J3e = "⤧", eNe = "Ó", tNe = "ó", nNe = "⊛", iNe = "Ô", sNe = "ô", rNe = "⊚", oNe = "О", lNe = "о", aNe = "⊝", cNe = "Ő", uNe = "ő", hNe = "⨸", dNe = "⊙", fNe = "⦼", pNe = "Œ", gNe = "œ", mNe = "⦿", vNe = "𝔒", bNe = "𝔬", yNe = "˛", ONe = "Ò", wNe = "ò", xNe = "⧁", SNe = "⦵", CNe = "Ω", kNe = "∮", PNe = "↺", ENe = "⦾", ANe = "⦻", $Ne = "‾", TNe = "⧀", _Ne = "Ō", MNe = "ō", RNe = "Ω", NNe = "ω", DNe = "Ο", LNe = "ο", INe = "⦶", BNe = "⊖", QNe = "𝕆", zNe = "𝕠", jNe = "⦷", VNe = "“", FNe = "‘", ZNe = "⦹", qNe = "⊕", WNe = "↻", HNe = "⩔", XNe = "∨", YNe = "⩝", UNe = "ℴ", GNe = "ℴ", KNe = "ª", JNe = "º", eDe = "⊶", tDe = "⩖", nDe = "⩗", iDe = "⩛", sDe = "Ⓢ", rDe = "𝒪", oDe = "ℴ", lDe = "Ø", aDe = "ø", cDe = "⊘", uDe = "Õ", hDe = "õ", dDe = "⨶", fDe = "⨷", pDe = "⊗", gDe = "Ö", mDe = "ö", vDe = "⌽", bDe = "‾", yDe = "⏞", ODe = "⎴", wDe = "⏜", xDe = "¶", SDe = "∥", CDe = "∥", kDe = "⫳", PDe = "⫽", EDe = "∂", ADe = "∂", $De = "П", TDe = "п", _De = "%", MDe = ".", RDe = "‰", NDe = "⊥", DDe = "‱", LDe = "𝔓", IDe = "𝔭", BDe = "Φ", QDe = "φ", zDe = "ϕ", jDe = "ℳ", VDe = "☎", FDe = "Π", ZDe = "π", qDe = "⋔", WDe = "ϖ", HDe = "ℏ", XDe = "ℎ", YDe = "ℏ", UDe = "⨣", GDe = "⊞", KDe = "⨢", JDe = "+", e4e = "∔", t4e = "⨥", n4e = "⩲", i4e = "±", s4e = "±", r4e = "⨦", o4e = "⨧", l4e = "±", a4e = "ℌ", c4e = "⨕", u4e = "𝕡", h4e = "ℙ", d4e = "£", f4e = "⪷", p4e = "⪻", g4e = "≺", m4e = "≼", v4e = "⪷", b4e = "≺", y4e = "≼", O4e = "≺", w4e = "⪯", x4e = "≼", S4e = "≾", C4e = "⪯", k4e = "⪹", P4e = "⪵", E4e = "⋨", A4e = "⪯", $4e = "⪳", T4e = "≾", _4e = "′", M4e = "″", R4e = "ℙ", N4e = "⪹", D4e = "⪵", L4e = "⋨", I4e = "∏", B4e = "∏", Q4e = "⌮", z4e = "⌒", j4e = "⌓", V4e = "∝", F4e = "∝", Z4e = "∷", q4e = "∝", W4e = "≾", H4e = "⊰", X4e = "𝒫", Y4e = "𝓅", U4e = "Ψ", G4e = "ψ", K4e = " ", J4e = "𝔔", eLe = "𝔮", tLe = "⨌", nLe = "𝕢", iLe = "ℚ", sLe = "⁗", rLe = "𝒬", oLe = "𝓆", lLe = "ℍ", aLe = "⨖", cLe = "?", uLe = "≟", hLe = '"', dLe = '"', fLe = "⇛", pLe = "∽̱", gLe = "Ŕ", mLe = "ŕ", vLe = "√", bLe = "⦳", yLe = "⟩", OLe = "⟫", wLe = "⦒", xLe = "⦥", SLe = "⟩", CLe = "»", kLe = "⥵", PLe = "⇥", ELe = "⤠", ALe = "⤳", $Le = "→", TLe = "↠", _Le = "⇒", MLe = "⤞", RLe = "↪", NLe = "↬", DLe = "⥅", LLe = "⥴", ILe = "⤖", BLe = "↣", QLe = "↝", zLe = "⤚", jLe = "⤜", VLe = "∶", FLe = "ℚ", ZLe = "⤍", qLe = "⤏", WLe = "⤐", HLe = "❳", XLe = "}", YLe = "]", ULe = "⦌", GLe = "⦎", KLe = "⦐", JLe = "Ř", eIe = "ř", tIe = "Ŗ", nIe = "ŗ", iIe = "⌉", sIe = "}", rIe = "Р", oIe = "р", lIe = "⤷", aIe = "⥩", cIe = "”", uIe = "”", hIe = "↳", dIe = "ℜ", fIe = "ℛ", pIe = "ℜ", gIe = "ℝ", mIe = "ℜ", vIe = "▭", bIe = "®", yIe = "®", OIe = "∋", wIe = "⇋", xIe = "⥯", SIe = "⥽", CIe = "⌋", kIe = "𝔯", PIe = "ℜ", EIe = "⥤", AIe = "⇁", $Ie = "⇀", TIe = "⥬", _Ie = "Ρ", MIe = "ρ", RIe = "ϱ", NIe = "⟩", DIe = "⇥", LIe = "→", IIe = "→", BIe = "⇒", QIe = "⇄", zIe = "↣", jIe = "⌉", VIe = "⟧", FIe = "⥝", ZIe = "⥕", qIe = "⇂", WIe = "⌋", HIe = "⇁", XIe = "⇀", YIe = "⇄", UIe = "⇌", GIe = "⇉", KIe = "↝", JIe = "↦", e5e = "⊢", t5e = "⥛", n5e = "⋌", i5e = "⧐", s5e = "⊳", r5e = "⊵", o5e = "⥏", l5e = "⥜", a5e = "⥔", c5e = "↾", u5e = "⥓", h5e = "⇀", d5e = "˚", f5e = "≓", p5e = "⇄", g5e = "⇌", m5e = "‏", v5e = "⎱", b5e = "⎱", y5e = "⫮", O5e = "⟭", w5e = "⇾", x5e = "⟧", S5e = "⦆", C5e = "𝕣", k5e = "ℝ", P5e = "⨮", E5e = "⨵", A5e = "⥰", $5e = ")", T5e = "⦔", _5e = "⨒", M5e = "⇉", R5e = "⇛", N5e = "›", D5e = "𝓇", L5e = "ℛ", I5e = "↱", B5e = "↱", Q5e = "]", z5e = "’", j5e = "’", V5e = "⋌", F5e = "⋊", Z5e = "▹", q5e = "⊵", W5e = "▸", H5e = "⧎", X5e = "⧴", Y5e = "⥨", U5e = "℞", G5e = "Ś", K5e = "ś", J5e = "‚", e8e = "⪸", t8e = "Š", n8e = "š", i8e = "⪼", s8e = "≻", r8e = "≽", o8e = "⪰", l8e = "⪴", a8e = "Ş", c8e = "ş", u8e = "Ŝ", h8e = "ŝ", d8e = "⪺", f8e = "⪶", p8e = "⋩", g8e = "⨓", m8e = "≿", v8e = "С", b8e = "с", y8e = "⊡", O8e = "⋅", w8e = "⩦", x8e = "⤥", S8e = "↘", C8e = "⇘", k8e = "↘", P8e = "§", E8e = ";", A8e = "⤩", $8e = "∖", T8e = "∖", _8e = "✶", M8e = "𝔖", R8e = "𝔰", N8e = "⌢", D8e = "♯", L8e = "Щ", I8e = "щ", B8e = "Ш", Q8e = "ш", z8e = "↓", j8e = "←", V8e = "∣", F8e = "∥", Z8e = "→", q8e = "↑", W8e = "­", H8e = "Σ", X8e = "σ", Y8e = "ς", U8e = "ς", G8e = "∼", K8e = "⩪", J8e = "≃", e6e = "≃", t6e = "⪞", n6e = "⪠", i6e = "⪝", s6e = "⪟", r6e = "≆", o6e = "⨤", l6e = "⥲", a6e = "←", c6e = "∘", u6e = "∖", h6e = "⨳", d6e = "⧤", f6e = "∣", p6e = "⌣", g6e = "⪪", m6e = "⪬", v6e = "⪬︀", b6e = "Ь", y6e = "ь", O6e = "⌿", w6e = "⧄", x6e = "/", S6e = "𝕊", C6e = "𝕤", k6e = "♠", P6e = "♠", E6e = "∥", A6e = "⊓", $6e = "⊓︀", T6e = "⊔", _6e = "⊔︀", M6e = "√", R6e = "⊏", N6e = "⊑", D6e = "⊏", L6e = "⊑", I6e = "⊐", B6e = "⊒", Q6e = "⊐", z6e = "⊒", j6e = "□", V6e = "□", F6e = "⊓", Z6e = "⊏", q6e = "⊑", W6e = "⊐", H6e = "⊒", X6e = "⊔", Y6e = "▪", U6e = "□", G6e = "▪", K6e = "→", J6e = "𝒮", eBe = "𝓈", tBe = "∖", nBe = "⌣", iBe = "⋆", sBe = "⋆", rBe = "☆", oBe = "★", lBe = "ϵ", aBe = "ϕ", cBe = "¯", uBe = "⊂", hBe = "⋐", dBe = "⪽", fBe = "⫅", pBe = "⊆", gBe = "⫃", mBe = "⫁", vBe = "⫋", bBe = "⊊", yBe = "⪿", OBe = "⥹", wBe = "⊂", xBe = "⋐", SBe = "⊆", CBe = "⫅", kBe = "⊆", PBe = "⊊", EBe = "⫋", ABe = "⫇", $Be = "⫕", TBe = "⫓", _Be = "⪸", MBe = "≻", RBe = "≽", NBe = "≻", DBe = "⪰", LBe = "≽", IBe = "≿", BBe = "⪰", QBe = "⪺", zBe = "⪶", jBe = "⋩", VBe = "≿", FBe = "∋", ZBe = "∑", qBe = "∑", WBe = "♪", HBe = "¹", XBe = "²", YBe = "³", UBe = "⊃", GBe = "⋑", KBe = "⪾", JBe = "⫘", eQe = "⫆", tQe = "⊇", nQe = "⫄", iQe = "⊃", sQe = "⊇", rQe = "⟉", oQe = "⫗", lQe = "⥻", aQe = "⫂", cQe = "⫌", uQe = "⊋", hQe = "⫀", dQe = "⊃", fQe = "⋑", pQe = "⊇", gQe = "⫆", mQe = "⊋", vQe = "⫌", bQe = "⫈", yQe = "⫔", OQe = "⫖", wQe = "⤦", xQe = "↙", SQe = "⇙", CQe = "↙", kQe = "⤪", PQe = "ß", EQe = "	", AQe = "⌖", $Qe = "Τ", TQe = "τ", _Qe = "⎴", MQe = "Ť", RQe = "ť", NQe = "Ţ", DQe = "ţ", LQe = "Т", IQe = "т", BQe = "⃛", QQe = "⌕", zQe = "𝔗", jQe = "𝔱", VQe = "∴", FQe = "∴", ZQe = "∴", qQe = "Θ", WQe = "θ", HQe = "ϑ", XQe = "ϑ", YQe = "≈", UQe = "∼", GQe = "  ", KQe = " ", JQe = " ", eze = "≈", tze = "∼", nze = "Þ", ize = "þ", sze = "˜", rze = "∼", oze = "≃", lze = "≅", aze = "≈", cze = "⨱", uze = "⊠", hze = "×", dze = "⨰", fze = "∭", pze = "⤨", gze = "⌶", mze = "⫱", vze = "⊤", bze = "𝕋", yze = "𝕥", Oze = "⫚", wze = "⤩", xze = "‴", Sze = "™", Cze = "™", kze = "▵", Pze = "▿", Eze = "◃", Aze = "⊴", $ze = "≜", Tze = "▹", _ze = "⊵", Mze = "◬", Rze = "≜", Nze = "⨺", Dze = "⃛", Lze = "⨹", Ize = "⧍", Bze = "⨻", Qze = "⏢", zze = "𝒯", jze = "𝓉", Vze = "Ц", Fze = "ц", Zze = "Ћ", qze = "ћ", Wze = "Ŧ", Hze = "ŧ", Xze = "≬", Yze = "↞", Uze = "↠", Gze = "Ú", Kze = "ú", Jze = "↑", eje = "↟", tje = "⇑", nje = "⥉", ije = "Ў", sje = "ў", rje = "Ŭ", oje = "ŭ", lje = "Û", aje = "û", cje = "У", uje = "у", hje = "⇅", dje = "Ű", fje = "ű", pje = "⥮", gje = "⥾", mje = "𝔘", vje = "𝔲", bje = "Ù", yje = "ù", Oje = "⥣", wje = "↿", xje = "↾", Sje = "▀", Cje = "⌜", kje = "⌜", Pje = "⌏", Eje = "◸", Aje = "Ū", $je = "ū", Tje = "¨", _je = "_", Mje = "⏟", Rje = "⎵", Nje = "⏝", Dje = "⋃", Lje = "⊎", Ije = "Ų", Bje = "ų", Qje = "𝕌", zje = "𝕦", jje = "⤒", Vje = "↑", Fje = "↑", Zje = "⇑", qje = "⇅", Wje = "↕", Hje = "↕", Xje = "⇕", Yje = "⥮", Uje = "↿", Gje = "↾", Kje = "⊎", Jje = "↖", eVe = "↗", tVe = "υ", nVe = "ϒ", iVe = "ϒ", sVe = "Υ", rVe = "υ", oVe = "↥", lVe = "⊥", aVe = "⇈", cVe = "⌝", uVe = "⌝", hVe = "⌎", dVe = "Ů", fVe = "ů", pVe = "◹", gVe = "𝒰", mVe = "𝓊", vVe = "⋰", bVe = "Ũ", yVe = "ũ", OVe = "▵", wVe = "▴", xVe = "⇈", SVe = "Ü", CVe = "ü", kVe = "⦧", PVe = "⦜", EVe = "ϵ", AVe = "ϰ", $Ve = "∅", TVe = "ϕ", _Ve = "ϖ", MVe = "∝", RVe = "↕", NVe = "⇕", DVe = "ϱ", LVe = "ς", IVe = "⊊︀", BVe = "⫋︀", QVe = "⊋︀", zVe = "⫌︀", jVe = "ϑ", VVe = "⊲", FVe = "⊳", ZVe = "⫨", qVe = "⫫", WVe = "⫩", HVe = "В", XVe = "в", YVe = "⊢", UVe = "⊨", GVe = "⊩", KVe = "⊫", JVe = "⫦", eFe = "⊻", tFe = "∨", nFe = "⋁", iFe = "≚", sFe = "⋮", rFe = "|", oFe = "‖", lFe = "|", aFe = "‖", cFe = "∣", uFe = "|", hFe = "❘", dFe = "≀", fFe = " ", pFe = "𝔙", gFe = "𝔳", mFe = "⊲", vFe = "⊂⃒", bFe = "⊃⃒", yFe = "𝕍", OFe = "𝕧", wFe = "∝", xFe = "⊳", SFe = "𝒱", CFe = "𝓋", kFe = "⫋︀", PFe = "⊊︀", EFe = "⫌︀", AFe = "⊋︀", $Fe = "⊪", TFe = "⦚", _Fe = "Ŵ", MFe = "ŵ", RFe = "⩟", NFe = "∧", DFe = "⋀", LFe = "≙", IFe = "℘", BFe = "𝔚", QFe = "𝔴", zFe = "𝕎", jFe = "𝕨", VFe = "℘", FFe = "≀", ZFe = "≀", qFe = "𝒲", WFe = "𝓌", HFe = "⋂", XFe = "◯", YFe = "⋃", UFe = "▽", GFe = "𝔛", KFe = "𝔵", JFe = "⟷", eZe = "⟺", tZe = "Ξ", nZe = "ξ", iZe = "⟵", sZe = "⟸", rZe = "⟼", oZe = "⋻", lZe = "⨀", aZe = "𝕏", cZe = "𝕩", uZe = "⨁", hZe = "⨂", dZe = "⟶", fZe = "⟹", pZe = "𝒳", gZe = "𝓍", mZe = "⨆", vZe = "⨄", bZe = "△", yZe = "⋁", OZe = "⋀", wZe = "Ý", xZe = "ý", SZe = "Я", CZe = "я", kZe = "Ŷ", PZe = "ŷ", EZe = "Ы", AZe = "ы", $Ze = "¥", TZe = "𝔜", _Ze = "𝔶", MZe = "Ї", RZe = "ї", NZe = "𝕐", DZe = "𝕪", LZe = "𝒴", IZe = "𝓎", BZe = "Ю", QZe = "ю", zZe = "ÿ", jZe = "Ÿ", VZe = "Ź", FZe = "ź", ZZe = "Ž", qZe = "ž", WZe = "З", HZe = "з", XZe = "Ż", YZe = "ż", UZe = "ℨ", GZe = "​", KZe = "Ζ", JZe = "ζ", eqe = "𝔷", tqe = "ℨ", nqe = "Ж", iqe = "ж", sqe = "⇝", rqe = "𝕫", oqe = "ℤ", lqe = "𝒵", aqe = "𝓏", cqe = "‍", uqe = "‌", hqe = {
  Aacute: Xfe,
  aacute: Yfe,
  Abreve: Ufe,
  abreve: Gfe,
  ac: Kfe,
  acd: Jfe,
  acE: epe,
  Acirc: tpe,
  acirc: npe,
  acute: ipe,
  Acy: spe,
  acy: rpe,
  AElig: ope,
  aelig: lpe,
  af: ape,
  Afr: cpe,
  afr: upe,
  Agrave: hpe,
  agrave: dpe,
  alefsym: fpe,
  aleph: ppe,
  Alpha: gpe,
  alpha: mpe,
  Amacr: vpe,
  amacr: bpe,
  amalg: ype,
  amp: Ope,
  AMP: wpe,
  andand: xpe,
  And: Spe,
  and: Cpe,
  andd: kpe,
  andslope: Ppe,
  andv: Epe,
  ang: Ape,
  ange: $pe,
  angle: Tpe,
  angmsdaa: _pe,
  angmsdab: Mpe,
  angmsdac: Rpe,
  angmsdad: Npe,
  angmsdae: Dpe,
  angmsdaf: Lpe,
  angmsdag: Ipe,
  angmsdah: Bpe,
  angmsd: Qpe,
  angrt: zpe,
  angrtvb: jpe,
  angrtvbd: Vpe,
  angsph: Fpe,
  angst: Zpe,
  angzarr: qpe,
  Aogon: Wpe,
  aogon: Hpe,
  Aopf: Xpe,
  aopf: Ype,
  apacir: Upe,
  ap: Gpe,
  apE: Kpe,
  ape: Jpe,
  apid: ege,
  apos: tge,
  ApplyFunction: nge,
  approx: ige,
  approxeq: sge,
  Aring: rge,
  aring: oge,
  Ascr: lge,
  ascr: age,
  Assign: cge,
  ast: uge,
  asymp: hge,
  asympeq: dge,
  Atilde: fge,
  atilde: pge,
  Auml: gge,
  auml: mge,
  awconint: vge,
  awint: bge,
  backcong: yge,
  backepsilon: Oge,
  backprime: wge,
  backsim: xge,
  backsimeq: Sge,
  Backslash: Cge,
  Barv: kge,
  barvee: Pge,
  barwed: Ege,
  Barwed: Age,
  barwedge: $ge,
  bbrk: Tge,
  bbrktbrk: _ge,
  bcong: Mge,
  Bcy: Rge,
  bcy: Nge,
  bdquo: Dge,
  becaus: Lge,
  because: Ige,
  Because: Bge,
  bemptyv: Qge,
  bepsi: zge,
  bernou: jge,
  Bernoullis: Vge,
  Beta: Fge,
  beta: Zge,
  beth: qge,
  between: Wge,
  Bfr: Hge,
  bfr: Xge,
  bigcap: Yge,
  bigcirc: Uge,
  bigcup: Gge,
  bigodot: Kge,
  bigoplus: Jge,
  bigotimes: eme,
  bigsqcup: tme,
  bigstar: nme,
  bigtriangledown: ime,
  bigtriangleup: sme,
  biguplus: rme,
  bigvee: ome,
  bigwedge: lme,
  bkarow: ame,
  blacklozenge: cme,
  blacksquare: ume,
  blacktriangle: hme,
  blacktriangledown: dme,
  blacktriangleleft: fme,
  blacktriangleright: pme,
  blank: gme,
  blk12: mme,
  blk14: vme,
  blk34: bme,
  block: yme,
  bne: Ome,
  bnequiv: wme,
  bNot: xme,
  bnot: Sme,
  Bopf: Cme,
  bopf: kme,
  bot: Pme,
  bottom: Eme,
  bowtie: Ame,
  boxbox: $me,
  boxdl: Tme,
  boxdL: _me,
  boxDl: Mme,
  boxDL: Rme,
  boxdr: Nme,
  boxdR: Dme,
  boxDr: Lme,
  boxDR: Ime,
  boxh: Bme,
  boxH: Qme,
  boxhd: zme,
  boxHd: jme,
  boxhD: Vme,
  boxHD: Fme,
  boxhu: Zme,
  boxHu: qme,
  boxhU: Wme,
  boxHU: Hme,
  boxminus: Xme,
  boxplus: Yme,
  boxtimes: Ume,
  boxul: Gme,
  boxuL: Kme,
  boxUl: Jme,
  boxUL: e0e,
  boxur: t0e,
  boxuR: n0e,
  boxUr: i0e,
  boxUR: s0e,
  boxv: r0e,
  boxV: o0e,
  boxvh: l0e,
  boxvH: a0e,
  boxVh: c0e,
  boxVH: u0e,
  boxvl: h0e,
  boxvL: d0e,
  boxVl: f0e,
  boxVL: p0e,
  boxvr: g0e,
  boxvR: m0e,
  boxVr: v0e,
  boxVR: b0e,
  bprime: y0e,
  breve: O0e,
  Breve: w0e,
  brvbar: x0e,
  bscr: S0e,
  Bscr: C0e,
  bsemi: k0e,
  bsim: P0e,
  bsime: E0e,
  bsolb: A0e,
  bsol: $0e,
  bsolhsub: T0e,
  bull: _0e,
  bullet: M0e,
  bump: R0e,
  bumpE: N0e,
  bumpe: D0e,
  Bumpeq: L0e,
  bumpeq: I0e,
  Cacute: B0e,
  cacute: Q0e,
  capand: z0e,
  capbrcup: j0e,
  capcap: V0e,
  cap: F0e,
  Cap: Z0e,
  capcup: q0e,
  capdot: W0e,
  CapitalDifferentialD: H0e,
  caps: X0e,
  caret: Y0e,
  caron: U0e,
  Cayleys: G0e,
  ccaps: K0e,
  Ccaron: J0e,
  ccaron: eve,
  Ccedil: tve,
  ccedil: nve,
  Ccirc: ive,
  ccirc: sve,
  Cconint: rve,
  ccups: ove,
  ccupssm: lve,
  Cdot: ave,
  cdot: cve,
  cedil: uve,
  Cedilla: hve,
  cemptyv: dve,
  cent: fve,
  centerdot: pve,
  CenterDot: gve,
  cfr: mve,
  Cfr: vve,
  CHcy: bve,
  chcy: yve,
  check: Ove,
  checkmark: wve,
  Chi: xve,
  chi: Sve,
  circ: Cve,
  circeq: kve,
  circlearrowleft: Pve,
  circlearrowright: Eve,
  circledast: Ave,
  circledcirc: $ve,
  circleddash: Tve,
  CircleDot: _ve,
  circledR: Mve,
  circledS: Rve,
  CircleMinus: Nve,
  CirclePlus: Dve,
  CircleTimes: Lve,
  cir: Ive,
  cirE: Bve,
  cire: Qve,
  cirfnint: zve,
  cirmid: jve,
  cirscir: Vve,
  ClockwiseContourIntegral: Fve,
  CloseCurlyDoubleQuote: Zve,
  CloseCurlyQuote: qve,
  clubs: Wve,
  clubsuit: Hve,
  colon: Xve,
  Colon: Yve,
  Colone: Uve,
  colone: Gve,
  coloneq: Kve,
  comma: Jve,
  commat: ebe,
  comp: tbe,
  compfn: nbe,
  complement: ibe,
  complexes: sbe,
  cong: rbe,
  congdot: obe,
  Congruent: lbe,
  conint: abe,
  Conint: cbe,
  ContourIntegral: ube,
  copf: hbe,
  Copf: dbe,
  coprod: fbe,
  Coproduct: pbe,
  copy: gbe,
  COPY: mbe,
  copysr: vbe,
  CounterClockwiseContourIntegral: bbe,
  crarr: ybe,
  cross: Obe,
  Cross: wbe,
  Cscr: xbe,
  cscr: Sbe,
  csub: Cbe,
  csube: kbe,
  csup: Pbe,
  csupe: Ebe,
  ctdot: Abe,
  cudarrl: $be,
  cudarrr: Tbe,
  cuepr: _be,
  cuesc: Mbe,
  cularr: Rbe,
  cularrp: Nbe,
  cupbrcap: Dbe,
  cupcap: Lbe,
  CupCap: Ibe,
  cup: Bbe,
  Cup: Qbe,
  cupcup: zbe,
  cupdot: jbe,
  cupor: Vbe,
  cups: Fbe,
  curarr: Zbe,
  curarrm: qbe,
  curlyeqprec: Wbe,
  curlyeqsucc: Hbe,
  curlyvee: Xbe,
  curlywedge: Ybe,
  curren: Ube,
  curvearrowleft: Gbe,
  curvearrowright: Kbe,
  cuvee: Jbe,
  cuwed: eye,
  cwconint: tye,
  cwint: nye,
  cylcty: iye,
  dagger: sye,
  Dagger: rye,
  daleth: oye,
  darr: lye,
  Darr: aye,
  dArr: cye,
  dash: uye,
  Dashv: hye,
  dashv: dye,
  dbkarow: fye,
  dblac: pye,
  Dcaron: gye,
  dcaron: mye,
  Dcy: vye,
  dcy: bye,
  ddagger: yye,
  ddarr: Oye,
  DD: wye,
  dd: xye,
  DDotrahd: Sye,
  ddotseq: Cye,
  deg: kye,
  Del: Pye,
  Delta: Eye,
  delta: Aye,
  demptyv: $ye,
  dfisht: Tye,
  Dfr: _ye,
  dfr: Mye,
  dHar: Rye,
  dharl: Nye,
  dharr: Dye,
  DiacriticalAcute: Lye,
  DiacriticalDot: Iye,
  DiacriticalDoubleAcute: Bye,
  DiacriticalGrave: Qye,
  DiacriticalTilde: zye,
  diam: jye,
  diamond: Vye,
  Diamond: Fye,
  diamondsuit: Zye,
  diams: qye,
  die: Wye,
  DifferentialD: Hye,
  digamma: Xye,
  disin: Yye,
  div: Uye,
  divide: Gye,
  divideontimes: Kye,
  divonx: Jye,
  DJcy: eOe,
  djcy: tOe,
  dlcorn: nOe,
  dlcrop: iOe,
  dollar: sOe,
  Dopf: rOe,
  dopf: oOe,
  Dot: lOe,
  dot: aOe,
  DotDot: cOe,
  doteq: uOe,
  doteqdot: hOe,
  DotEqual: dOe,
  dotminus: fOe,
  dotplus: pOe,
  dotsquare: gOe,
  doublebarwedge: mOe,
  DoubleContourIntegral: vOe,
  DoubleDot: bOe,
  DoubleDownArrow: yOe,
  DoubleLeftArrow: OOe,
  DoubleLeftRightArrow: wOe,
  DoubleLeftTee: xOe,
  DoubleLongLeftArrow: SOe,
  DoubleLongLeftRightArrow: COe,
  DoubleLongRightArrow: kOe,
  DoubleRightArrow: POe,
  DoubleRightTee: EOe,
  DoubleUpArrow: AOe,
  DoubleUpDownArrow: $Oe,
  DoubleVerticalBar: TOe,
  DownArrowBar: _Oe,
  downarrow: MOe,
  DownArrow: ROe,
  Downarrow: NOe,
  DownArrowUpArrow: DOe,
  DownBreve: LOe,
  downdownarrows: IOe,
  downharpoonleft: BOe,
  downharpoonright: QOe,
  DownLeftRightVector: zOe,
  DownLeftTeeVector: jOe,
  DownLeftVectorBar: VOe,
  DownLeftVector: FOe,
  DownRightTeeVector: ZOe,
  DownRightVectorBar: qOe,
  DownRightVector: WOe,
  DownTeeArrow: HOe,
  DownTee: XOe,
  drbkarow: YOe,
  drcorn: UOe,
  drcrop: GOe,
  Dscr: KOe,
  dscr: JOe,
  DScy: e1e,
  dscy: t1e,
  dsol: n1e,
  Dstrok: i1e,
  dstrok: s1e,
  dtdot: r1e,
  dtri: o1e,
  dtrif: l1e,
  duarr: a1e,
  duhar: c1e,
  dwangle: u1e,
  DZcy: h1e,
  dzcy: d1e,
  dzigrarr: f1e,
  Eacute: p1e,
  eacute: g1e,
  easter: m1e,
  Ecaron: v1e,
  ecaron: b1e,
  Ecirc: y1e,
  ecirc: O1e,
  ecir: w1e,
  ecolon: x1e,
  Ecy: S1e,
  ecy: C1e,
  eDDot: k1e,
  Edot: P1e,
  edot: E1e,
  eDot: A1e,
  ee: $1e,
  efDot: T1e,
  Efr: _1e,
  efr: M1e,
  eg: R1e,
  Egrave: N1e,
  egrave: D1e,
  egs: L1e,
  egsdot: I1e,
  el: B1e,
  Element: Q1e,
  elinters: z1e,
  ell: j1e,
  els: V1e,
  elsdot: F1e,
  Emacr: Z1e,
  emacr: q1e,
  empty: W1e,
  emptyset: H1e,
  EmptySmallSquare: X1e,
  emptyv: Y1e,
  EmptyVerySmallSquare: U1e,
  emsp13: G1e,
  emsp14: K1e,
  emsp: J1e,
  ENG: ewe,
  eng: twe,
  ensp: nwe,
  Eogon: iwe,
  eogon: swe,
  Eopf: rwe,
  eopf: owe,
  epar: lwe,
  eparsl: awe,
  eplus: cwe,
  epsi: uwe,
  Epsilon: hwe,
  epsilon: dwe,
  epsiv: fwe,
  eqcirc: pwe,
  eqcolon: gwe,
  eqsim: mwe,
  eqslantgtr: vwe,
  eqslantless: bwe,
  Equal: ywe,
  equals: Owe,
  EqualTilde: wwe,
  equest: xwe,
  Equilibrium: Swe,
  equiv: Cwe,
  equivDD: kwe,
  eqvparsl: Pwe,
  erarr: Ewe,
  erDot: Awe,
  escr: $we,
  Escr: Twe,
  esdot: _we,
  Esim: Mwe,
  esim: Rwe,
  Eta: Nwe,
  eta: Dwe,
  ETH: Lwe,
  eth: Iwe,
  Euml: Bwe,
  euml: Qwe,
  euro: zwe,
  excl: jwe,
  exist: Vwe,
  Exists: Fwe,
  expectation: Zwe,
  exponentiale: qwe,
  ExponentialE: Wwe,
  fallingdotseq: Hwe,
  Fcy: Xwe,
  fcy: Ywe,
  female: Uwe,
  ffilig: Gwe,
  fflig: Kwe,
  ffllig: Jwe,
  Ffr: exe,
  ffr: txe,
  filig: nxe,
  FilledSmallSquare: ixe,
  FilledVerySmallSquare: sxe,
  fjlig: rxe,
  flat: oxe,
  fllig: lxe,
  fltns: axe,
  fnof: cxe,
  Fopf: uxe,
  fopf: hxe,
  forall: dxe,
  ForAll: fxe,
  fork: pxe,
  forkv: gxe,
  Fouriertrf: mxe,
  fpartint: vxe,
  frac12: bxe,
  frac13: yxe,
  frac14: Oxe,
  frac15: wxe,
  frac16: xxe,
  frac18: Sxe,
  frac23: Cxe,
  frac25: kxe,
  frac34: Pxe,
  frac35: Exe,
  frac38: Axe,
  frac45: $xe,
  frac56: Txe,
  frac58: _xe,
  frac78: Mxe,
  frasl: Rxe,
  frown: Nxe,
  fscr: Dxe,
  Fscr: Lxe,
  gacute: Ixe,
  Gamma: Bxe,
  gamma: Qxe,
  Gammad: zxe,
  gammad: jxe,
  gap: Vxe,
  Gbreve: Fxe,
  gbreve: Zxe,
  Gcedil: qxe,
  Gcirc: Wxe,
  gcirc: Hxe,
  Gcy: Xxe,
  gcy: Yxe,
  Gdot: Uxe,
  gdot: Gxe,
  ge: Kxe,
  gE: Jxe,
  gEl: eSe,
  gel: tSe,
  geq: nSe,
  geqq: iSe,
  geqslant: sSe,
  gescc: rSe,
  ges: oSe,
  gesdot: lSe,
  gesdoto: aSe,
  gesdotol: cSe,
  gesl: uSe,
  gesles: hSe,
  Gfr: dSe,
  gfr: fSe,
  gg: pSe,
  Gg: gSe,
  ggg: mSe,
  gimel: vSe,
  GJcy: bSe,
  gjcy: ySe,
  gla: OSe,
  gl: wSe,
  glE: xSe,
  glj: SSe,
  gnap: CSe,
  gnapprox: kSe,
  gne: PSe,
  gnE: ESe,
  gneq: ASe,
  gneqq: $Se,
  gnsim: TSe,
  Gopf: _Se,
  gopf: MSe,
  grave: RSe,
  GreaterEqual: NSe,
  GreaterEqualLess: DSe,
  GreaterFullEqual: LSe,
  GreaterGreater: ISe,
  GreaterLess: BSe,
  GreaterSlantEqual: QSe,
  GreaterTilde: zSe,
  Gscr: jSe,
  gscr: VSe,
  gsim: FSe,
  gsime: ZSe,
  gsiml: qSe,
  gtcc: WSe,
  gtcir: HSe,
  gt: XSe,
  GT: YSe,
  Gt: USe,
  gtdot: GSe,
  gtlPar: KSe,
  gtquest: JSe,
  gtrapprox: eCe,
  gtrarr: tCe,
  gtrdot: nCe,
  gtreqless: iCe,
  gtreqqless: sCe,
  gtrless: rCe,
  gtrsim: oCe,
  gvertneqq: lCe,
  gvnE: aCe,
  Hacek: cCe,
  hairsp: uCe,
  half: hCe,
  hamilt: dCe,
  HARDcy: fCe,
  hardcy: pCe,
  harrcir: gCe,
  harr: mCe,
  hArr: vCe,
  harrw: bCe,
  Hat: yCe,
  hbar: OCe,
  Hcirc: wCe,
  hcirc: xCe,
  hearts: SCe,
  heartsuit: CCe,
  hellip: kCe,
  hercon: PCe,
  hfr: ECe,
  Hfr: ACe,
  HilbertSpace: $Ce,
  hksearow: TCe,
  hkswarow: _Ce,
  hoarr: MCe,
  homtht: RCe,
  hookleftarrow: NCe,
  hookrightarrow: DCe,
  hopf: LCe,
  Hopf: ICe,
  horbar: BCe,
  HorizontalLine: QCe,
  hscr: zCe,
  Hscr: jCe,
  hslash: VCe,
  Hstrok: FCe,
  hstrok: ZCe,
  HumpDownHump: qCe,
  HumpEqual: WCe,
  hybull: HCe,
  hyphen: XCe,
  Iacute: YCe,
  iacute: UCe,
  ic: GCe,
  Icirc: KCe,
  icirc: JCe,
  Icy: eke,
  icy: tke,
  Idot: nke,
  IEcy: ike,
  iecy: ske,
  iexcl: rke,
  iff: oke,
  ifr: lke,
  Ifr: ake,
  Igrave: cke,
  igrave: uke,
  ii: hke,
  iiiint: dke,
  iiint: fke,
  iinfin: pke,
  iiota: gke,
  IJlig: mke,
  ijlig: vke,
  Imacr: bke,
  imacr: yke,
  image: Oke,
  ImaginaryI: wke,
  imagline: xke,
  imagpart: Ske,
  imath: Cke,
  Im: kke,
  imof: Pke,
  imped: Eke,
  Implies: Ake,
  incare: $ke,
  in: "∈",
  infin: Tke,
  infintie: _ke,
  inodot: Mke,
  intcal: Rke,
  int: Nke,
  Int: Dke,
  integers: Lke,
  Integral: Ike,
  intercal: Bke,
  Intersection: Qke,
  intlarhk: zke,
  intprod: jke,
  InvisibleComma: Vke,
  InvisibleTimes: Fke,
  IOcy: Zke,
  iocy: qke,
  Iogon: Wke,
  iogon: Hke,
  Iopf: Xke,
  iopf: Yke,
  Iota: Uke,
  iota: Gke,
  iprod: Kke,
  iquest: Jke,
  iscr: e2e,
  Iscr: t2e,
  isin: n2e,
  isindot: i2e,
  isinE: s2e,
  isins: r2e,
  isinsv: o2e,
  isinv: l2e,
  it: a2e,
  Itilde: c2e,
  itilde: u2e,
  Iukcy: h2e,
  iukcy: d2e,
  Iuml: f2e,
  iuml: p2e,
  Jcirc: g2e,
  jcirc: m2e,
  Jcy: v2e,
  jcy: b2e,
  Jfr: y2e,
  jfr: O2e,
  jmath: w2e,
  Jopf: x2e,
  jopf: S2e,
  Jscr: C2e,
  jscr: k2e,
  Jsercy: P2e,
  jsercy: E2e,
  Jukcy: A2e,
  jukcy: $2e,
  Kappa: T2e,
  kappa: _2e,
  kappav: M2e,
  Kcedil: R2e,
  kcedil: N2e,
  Kcy: D2e,
  kcy: L2e,
  Kfr: I2e,
  kfr: B2e,
  kgreen: Q2e,
  KHcy: z2e,
  khcy: j2e,
  KJcy: V2e,
  kjcy: F2e,
  Kopf: Z2e,
  kopf: q2e,
  Kscr: W2e,
  kscr: H2e,
  lAarr: X2e,
  Lacute: Y2e,
  lacute: U2e,
  laemptyv: G2e,
  lagran: K2e,
  Lambda: J2e,
  lambda: ePe,
  lang: tPe,
  Lang: nPe,
  langd: iPe,
  langle: sPe,
  lap: rPe,
  Laplacetrf: oPe,
  laquo: lPe,
  larrb: aPe,
  larrbfs: cPe,
  larr: uPe,
  Larr: hPe,
  lArr: dPe,
  larrfs: fPe,
  larrhk: pPe,
  larrlp: gPe,
  larrpl: mPe,
  larrsim: vPe,
  larrtl: bPe,
  latail: yPe,
  lAtail: OPe,
  lat: wPe,
  late: xPe,
  lates: SPe,
  lbarr: CPe,
  lBarr: kPe,
  lbbrk: PPe,
  lbrace: EPe,
  lbrack: APe,
  lbrke: $Pe,
  lbrksld: TPe,
  lbrkslu: _Pe,
  Lcaron: MPe,
  lcaron: RPe,
  Lcedil: NPe,
  lcedil: DPe,
  lceil: LPe,
  lcub: IPe,
  Lcy: BPe,
  lcy: QPe,
  ldca: zPe,
  ldquo: jPe,
  ldquor: VPe,
  ldrdhar: FPe,
  ldrushar: ZPe,
  ldsh: qPe,
  le: WPe,
  lE: HPe,
  LeftAngleBracket: XPe,
  LeftArrowBar: YPe,
  leftarrow: UPe,
  LeftArrow: GPe,
  Leftarrow: KPe,
  LeftArrowRightArrow: JPe,
  leftarrowtail: eEe,
  LeftCeiling: tEe,
  LeftDoubleBracket: nEe,
  LeftDownTeeVector: iEe,
  LeftDownVectorBar: sEe,
  LeftDownVector: rEe,
  LeftFloor: oEe,
  leftharpoondown: lEe,
  leftharpoonup: aEe,
  leftleftarrows: cEe,
  leftrightarrow: uEe,
  LeftRightArrow: hEe,
  Leftrightarrow: dEe,
  leftrightarrows: fEe,
  leftrightharpoons: pEe,
  leftrightsquigarrow: gEe,
  LeftRightVector: mEe,
  LeftTeeArrow: vEe,
  LeftTee: bEe,
  LeftTeeVector: yEe,
  leftthreetimes: OEe,
  LeftTriangleBar: wEe,
  LeftTriangle: xEe,
  LeftTriangleEqual: SEe,
  LeftUpDownVector: CEe,
  LeftUpTeeVector: kEe,
  LeftUpVectorBar: PEe,
  LeftUpVector: EEe,
  LeftVectorBar: AEe,
  LeftVector: $Ee,
  lEg: TEe,
  leg: _Ee,
  leq: MEe,
  leqq: REe,
  leqslant: NEe,
  lescc: DEe,
  les: LEe,
  lesdot: IEe,
  lesdoto: BEe,
  lesdotor: QEe,
  lesg: zEe,
  lesges: jEe,
  lessapprox: VEe,
  lessdot: FEe,
  lesseqgtr: ZEe,
  lesseqqgtr: qEe,
  LessEqualGreater: WEe,
  LessFullEqual: HEe,
  LessGreater: XEe,
  lessgtr: YEe,
  LessLess: UEe,
  lesssim: GEe,
  LessSlantEqual: KEe,
  LessTilde: JEe,
  lfisht: eAe,
  lfloor: tAe,
  Lfr: nAe,
  lfr: iAe,
  lg: sAe,
  lgE: rAe,
  lHar: oAe,
  lhard: lAe,
  lharu: aAe,
  lharul: cAe,
  lhblk: uAe,
  LJcy: hAe,
  ljcy: dAe,
  llarr: fAe,
  ll: pAe,
  Ll: gAe,
  llcorner: mAe,
  Lleftarrow: vAe,
  llhard: bAe,
  lltri: yAe,
  Lmidot: OAe,
  lmidot: wAe,
  lmoustache: xAe,
  lmoust: SAe,
  lnap: CAe,
  lnapprox: kAe,
  lne: PAe,
  lnE: EAe,
  lneq: AAe,
  lneqq: $Ae,
  lnsim: TAe,
  loang: _Ae,
  loarr: MAe,
  lobrk: RAe,
  longleftarrow: NAe,
  LongLeftArrow: DAe,
  Longleftarrow: LAe,
  longleftrightarrow: IAe,
  LongLeftRightArrow: BAe,
  Longleftrightarrow: QAe,
  longmapsto: zAe,
  longrightarrow: jAe,
  LongRightArrow: VAe,
  Longrightarrow: FAe,
  looparrowleft: ZAe,
  looparrowright: qAe,
  lopar: WAe,
  Lopf: HAe,
  lopf: XAe,
  loplus: YAe,
  lotimes: UAe,
  lowast: GAe,
  lowbar: KAe,
  LowerLeftArrow: JAe,
  LowerRightArrow: e$e,
  loz: t$e,
  lozenge: n$e,
  lozf: i$e,
  lpar: s$e,
  lparlt: r$e,
  lrarr: o$e,
  lrcorner: l$e,
  lrhar: a$e,
  lrhard: c$e,
  lrm: u$e,
  lrtri: h$e,
  lsaquo: d$e,
  lscr: f$e,
  Lscr: p$e,
  lsh: g$e,
  Lsh: m$e,
  lsim: v$e,
  lsime: b$e,
  lsimg: y$e,
  lsqb: O$e,
  lsquo: w$e,
  lsquor: x$e,
  Lstrok: S$e,
  lstrok: C$e,
  ltcc: k$e,
  ltcir: P$e,
  lt: E$e,
  LT: A$e,
  Lt: $$e,
  ltdot: T$e,
  lthree: _$e,
  ltimes: M$e,
  ltlarr: R$e,
  ltquest: N$e,
  ltri: D$e,
  ltrie: L$e,
  ltrif: I$e,
  ltrPar: B$e,
  lurdshar: Q$e,
  luruhar: z$e,
  lvertneqq: j$e,
  lvnE: V$e,
  macr: F$e,
  male: Z$e,
  malt: q$e,
  maltese: W$e,
  Map: "⤅",
  map: H$e,
  mapsto: X$e,
  mapstodown: Y$e,
  mapstoleft: U$e,
  mapstoup: G$e,
  marker: K$e,
  mcomma: J$e,
  Mcy: eTe,
  mcy: tTe,
  mdash: nTe,
  mDDot: iTe,
  measuredangle: sTe,
  MediumSpace: rTe,
  Mellintrf: oTe,
  Mfr: lTe,
  mfr: aTe,
  mho: cTe,
  micro: uTe,
  midast: hTe,
  midcir: dTe,
  mid: fTe,
  middot: pTe,
  minusb: gTe,
  minus: mTe,
  minusd: vTe,
  minusdu: bTe,
  MinusPlus: yTe,
  mlcp: OTe,
  mldr: wTe,
  mnplus: xTe,
  models: STe,
  Mopf: CTe,
  mopf: kTe,
  mp: PTe,
  mscr: ETe,
  Mscr: ATe,
  mstpos: $Te,
  Mu: TTe,
  mu: _Te,
  multimap: MTe,
  mumap: RTe,
  nabla: NTe,
  Nacute: DTe,
  nacute: LTe,
  nang: ITe,
  nap: BTe,
  napE: QTe,
  napid: zTe,
  napos: jTe,
  napprox: VTe,
  natural: FTe,
  naturals: ZTe,
  natur: qTe,
  nbsp: WTe,
  nbump: HTe,
  nbumpe: XTe,
  ncap: YTe,
  Ncaron: UTe,
  ncaron: GTe,
  Ncedil: KTe,
  ncedil: JTe,
  ncong: e_e,
  ncongdot: t_e,
  ncup: n_e,
  Ncy: i_e,
  ncy: s_e,
  ndash: r_e,
  nearhk: o_e,
  nearr: l_e,
  neArr: a_e,
  nearrow: c_e,
  ne: u_e,
  nedot: h_e,
  NegativeMediumSpace: d_e,
  NegativeThickSpace: f_e,
  NegativeThinSpace: p_e,
  NegativeVeryThinSpace: g_e,
  nequiv: m_e,
  nesear: v_e,
  nesim: b_e,
  NestedGreaterGreater: y_e,
  NestedLessLess: O_e,
  NewLine: w_e,
  nexist: x_e,
  nexists: S_e,
  Nfr: C_e,
  nfr: k_e,
  ngE: P_e,
  nge: E_e,
  ngeq: A_e,
  ngeqq: $_e,
  ngeqslant: T_e,
  nges: __e,
  nGg: M_e,
  ngsim: R_e,
  nGt: N_e,
  ngt: D_e,
  ngtr: L_e,
  nGtv: I_e,
  nharr: B_e,
  nhArr: Q_e,
  nhpar: z_e,
  ni: j_e,
  nis: V_e,
  nisd: F_e,
  niv: Z_e,
  NJcy: q_e,
  njcy: W_e,
  nlarr: H_e,
  nlArr: X_e,
  nldr: Y_e,
  nlE: U_e,
  nle: G_e,
  nleftarrow: K_e,
  nLeftarrow: J_e,
  nleftrightarrow: eMe,
  nLeftrightarrow: tMe,
  nleq: nMe,
  nleqq: iMe,
  nleqslant: sMe,
  nles: rMe,
  nless: oMe,
  nLl: lMe,
  nlsim: aMe,
  nLt: cMe,
  nlt: uMe,
  nltri: hMe,
  nltrie: dMe,
  nLtv: fMe,
  nmid: pMe,
  NoBreak: gMe,
  NonBreakingSpace: mMe,
  nopf: vMe,
  Nopf: bMe,
  Not: yMe,
  not: OMe,
  NotCongruent: wMe,
  NotCupCap: xMe,
  NotDoubleVerticalBar: SMe,
  NotElement: CMe,
  NotEqual: kMe,
  NotEqualTilde: PMe,
  NotExists: EMe,
  NotGreater: AMe,
  NotGreaterEqual: $Me,
  NotGreaterFullEqual: TMe,
  NotGreaterGreater: _Me,
  NotGreaterLess: MMe,
  NotGreaterSlantEqual: RMe,
  NotGreaterTilde: NMe,
  NotHumpDownHump: DMe,
  NotHumpEqual: LMe,
  notin: IMe,
  notindot: BMe,
  notinE: QMe,
  notinva: zMe,
  notinvb: jMe,
  notinvc: VMe,
  NotLeftTriangleBar: FMe,
  NotLeftTriangle: ZMe,
  NotLeftTriangleEqual: qMe,
  NotLess: WMe,
  NotLessEqual: HMe,
  NotLessGreater: XMe,
  NotLessLess: YMe,
  NotLessSlantEqual: UMe,
  NotLessTilde: GMe,
  NotNestedGreaterGreater: KMe,
  NotNestedLessLess: JMe,
  notni: eRe,
  notniva: tRe,
  notnivb: nRe,
  notnivc: iRe,
  NotPrecedes: sRe,
  NotPrecedesEqual: rRe,
  NotPrecedesSlantEqual: oRe,
  NotReverseElement: lRe,
  NotRightTriangleBar: aRe,
  NotRightTriangle: cRe,
  NotRightTriangleEqual: uRe,
  NotSquareSubset: hRe,
  NotSquareSubsetEqual: dRe,
  NotSquareSuperset: fRe,
  NotSquareSupersetEqual: pRe,
  NotSubset: gRe,
  NotSubsetEqual: mRe,
  NotSucceeds: vRe,
  NotSucceedsEqual: bRe,
  NotSucceedsSlantEqual: yRe,
  NotSucceedsTilde: ORe,
  NotSuperset: wRe,
  NotSupersetEqual: xRe,
  NotTilde: SRe,
  NotTildeEqual: CRe,
  NotTildeFullEqual: kRe,
  NotTildeTilde: PRe,
  NotVerticalBar: ERe,
  nparallel: ARe,
  npar: $Re,
  nparsl: TRe,
  npart: _Re,
  npolint: MRe,
  npr: RRe,
  nprcue: NRe,
  nprec: DRe,
  npreceq: LRe,
  npre: IRe,
  nrarrc: BRe,
  nrarr: QRe,
  nrArr: zRe,
  nrarrw: jRe,
  nrightarrow: VRe,
  nRightarrow: FRe,
  nrtri: ZRe,
  nrtrie: qRe,
  nsc: WRe,
  nsccue: HRe,
  nsce: XRe,
  Nscr: YRe,
  nscr: URe,
  nshortmid: GRe,
  nshortparallel: KRe,
  nsim: JRe,
  nsime: e3e,
  nsimeq: t3e,
  nsmid: n3e,
  nspar: i3e,
  nsqsube: s3e,
  nsqsupe: r3e,
  nsub: o3e,
  nsubE: l3e,
  nsube: a3e,
  nsubset: c3e,
  nsubseteq: u3e,
  nsubseteqq: h3e,
  nsucc: d3e,
  nsucceq: f3e,
  nsup: p3e,
  nsupE: g3e,
  nsupe: m3e,
  nsupset: v3e,
  nsupseteq: b3e,
  nsupseteqq: y3e,
  ntgl: O3e,
  Ntilde: w3e,
  ntilde: x3e,
  ntlg: S3e,
  ntriangleleft: C3e,
  ntrianglelefteq: k3e,
  ntriangleright: P3e,
  ntrianglerighteq: E3e,
  Nu: A3e,
  nu: $3e,
  num: T3e,
  numero: _3e,
  numsp: M3e,
  nvap: R3e,
  nvdash: N3e,
  nvDash: D3e,
  nVdash: L3e,
  nVDash: I3e,
  nvge: B3e,
  nvgt: Q3e,
  nvHarr: z3e,
  nvinfin: j3e,
  nvlArr: V3e,
  nvle: F3e,
  nvlt: Z3e,
  nvltrie: q3e,
  nvrArr: W3e,
  nvrtrie: H3e,
  nvsim: X3e,
  nwarhk: Y3e,
  nwarr: U3e,
  nwArr: G3e,
  nwarrow: K3e,
  nwnear: J3e,
  Oacute: eNe,
  oacute: tNe,
  oast: nNe,
  Ocirc: iNe,
  ocirc: sNe,
  ocir: rNe,
  Ocy: oNe,
  ocy: lNe,
  odash: aNe,
  Odblac: cNe,
  odblac: uNe,
  odiv: hNe,
  odot: dNe,
  odsold: fNe,
  OElig: pNe,
  oelig: gNe,
  ofcir: mNe,
  Ofr: vNe,
  ofr: bNe,
  ogon: yNe,
  Ograve: ONe,
  ograve: wNe,
  ogt: xNe,
  ohbar: SNe,
  ohm: CNe,
  oint: kNe,
  olarr: PNe,
  olcir: ENe,
  olcross: ANe,
  oline: $Ne,
  olt: TNe,
  Omacr: _Ne,
  omacr: MNe,
  Omega: RNe,
  omega: NNe,
  Omicron: DNe,
  omicron: LNe,
  omid: INe,
  ominus: BNe,
  Oopf: QNe,
  oopf: zNe,
  opar: jNe,
  OpenCurlyDoubleQuote: VNe,
  OpenCurlyQuote: FNe,
  operp: ZNe,
  oplus: qNe,
  orarr: WNe,
  Or: HNe,
  or: XNe,
  ord: YNe,
  order: UNe,
  orderof: GNe,
  ordf: KNe,
  ordm: JNe,
  origof: eDe,
  oror: tDe,
  orslope: nDe,
  orv: iDe,
  oS: sDe,
  Oscr: rDe,
  oscr: oDe,
  Oslash: lDe,
  oslash: aDe,
  osol: cDe,
  Otilde: uDe,
  otilde: hDe,
  otimesas: dDe,
  Otimes: fDe,
  otimes: pDe,
  Ouml: gDe,
  ouml: mDe,
  ovbar: vDe,
  OverBar: bDe,
  OverBrace: yDe,
  OverBracket: ODe,
  OverParenthesis: wDe,
  para: xDe,
  parallel: SDe,
  par: CDe,
  parsim: kDe,
  parsl: PDe,
  part: EDe,
  PartialD: ADe,
  Pcy: $De,
  pcy: TDe,
  percnt: _De,
  period: MDe,
  permil: RDe,
  perp: NDe,
  pertenk: DDe,
  Pfr: LDe,
  pfr: IDe,
  Phi: BDe,
  phi: QDe,
  phiv: zDe,
  phmmat: jDe,
  phone: VDe,
  Pi: FDe,
  pi: ZDe,
  pitchfork: qDe,
  piv: WDe,
  planck: HDe,
  planckh: XDe,
  plankv: YDe,
  plusacir: UDe,
  plusb: GDe,
  pluscir: KDe,
  plus: JDe,
  plusdo: e4e,
  plusdu: t4e,
  pluse: n4e,
  PlusMinus: i4e,
  plusmn: s4e,
  plussim: r4e,
  plustwo: o4e,
  pm: l4e,
  Poincareplane: a4e,
  pointint: c4e,
  popf: u4e,
  Popf: h4e,
  pound: d4e,
  prap: f4e,
  Pr: p4e,
  pr: g4e,
  prcue: m4e,
  precapprox: v4e,
  prec: b4e,
  preccurlyeq: y4e,
  Precedes: O4e,
  PrecedesEqual: w4e,
  PrecedesSlantEqual: x4e,
  PrecedesTilde: S4e,
  preceq: C4e,
  precnapprox: k4e,
  precneqq: P4e,
  precnsim: E4e,
  pre: A4e,
  prE: $4e,
  precsim: T4e,
  prime: _4e,
  Prime: M4e,
  primes: R4e,
  prnap: N4e,
  prnE: D4e,
  prnsim: L4e,
  prod: I4e,
  Product: B4e,
  profalar: Q4e,
  profline: z4e,
  profsurf: j4e,
  prop: V4e,
  Proportional: F4e,
  Proportion: Z4e,
  propto: q4e,
  prsim: W4e,
  prurel: H4e,
  Pscr: X4e,
  pscr: Y4e,
  Psi: U4e,
  psi: G4e,
  puncsp: K4e,
  Qfr: J4e,
  qfr: eLe,
  qint: tLe,
  qopf: nLe,
  Qopf: iLe,
  qprime: sLe,
  Qscr: rLe,
  qscr: oLe,
  quaternions: lLe,
  quatint: aLe,
  quest: cLe,
  questeq: uLe,
  quot: hLe,
  QUOT: dLe,
  rAarr: fLe,
  race: pLe,
  Racute: gLe,
  racute: mLe,
  radic: vLe,
  raemptyv: bLe,
  rang: yLe,
  Rang: OLe,
  rangd: wLe,
  range: xLe,
  rangle: SLe,
  raquo: CLe,
  rarrap: kLe,
  rarrb: PLe,
  rarrbfs: ELe,
  rarrc: ALe,
  rarr: $Le,
  Rarr: TLe,
  rArr: _Le,
  rarrfs: MLe,
  rarrhk: RLe,
  rarrlp: NLe,
  rarrpl: DLe,
  rarrsim: LLe,
  Rarrtl: ILe,
  rarrtl: BLe,
  rarrw: QLe,
  ratail: zLe,
  rAtail: jLe,
  ratio: VLe,
  rationals: FLe,
  rbarr: ZLe,
  rBarr: qLe,
  RBarr: WLe,
  rbbrk: HLe,
  rbrace: XLe,
  rbrack: YLe,
  rbrke: ULe,
  rbrksld: GLe,
  rbrkslu: KLe,
  Rcaron: JLe,
  rcaron: eIe,
  Rcedil: tIe,
  rcedil: nIe,
  rceil: iIe,
  rcub: sIe,
  Rcy: rIe,
  rcy: oIe,
  rdca: lIe,
  rdldhar: aIe,
  rdquo: cIe,
  rdquor: uIe,
  rdsh: hIe,
  real: dIe,
  realine: fIe,
  realpart: pIe,
  reals: gIe,
  Re: mIe,
  rect: vIe,
  reg: bIe,
  REG: yIe,
  ReverseElement: OIe,
  ReverseEquilibrium: wIe,
  ReverseUpEquilibrium: xIe,
  rfisht: SIe,
  rfloor: CIe,
  rfr: kIe,
  Rfr: PIe,
  rHar: EIe,
  rhard: AIe,
  rharu: $Ie,
  rharul: TIe,
  Rho: _Ie,
  rho: MIe,
  rhov: RIe,
  RightAngleBracket: NIe,
  RightArrowBar: DIe,
  rightarrow: LIe,
  RightArrow: IIe,
  Rightarrow: BIe,
  RightArrowLeftArrow: QIe,
  rightarrowtail: zIe,
  RightCeiling: jIe,
  RightDoubleBracket: VIe,
  RightDownTeeVector: FIe,
  RightDownVectorBar: ZIe,
  RightDownVector: qIe,
  RightFloor: WIe,
  rightharpoondown: HIe,
  rightharpoonup: XIe,
  rightleftarrows: YIe,
  rightleftharpoons: UIe,
  rightrightarrows: GIe,
  rightsquigarrow: KIe,
  RightTeeArrow: JIe,
  RightTee: e5e,
  RightTeeVector: t5e,
  rightthreetimes: n5e,
  RightTriangleBar: i5e,
  RightTriangle: s5e,
  RightTriangleEqual: r5e,
  RightUpDownVector: o5e,
  RightUpTeeVector: l5e,
  RightUpVectorBar: a5e,
  RightUpVector: c5e,
  RightVectorBar: u5e,
  RightVector: h5e,
  ring: d5e,
  risingdotseq: f5e,
  rlarr: p5e,
  rlhar: g5e,
  rlm: m5e,
  rmoustache: v5e,
  rmoust: b5e,
  rnmid: y5e,
  roang: O5e,
  roarr: w5e,
  robrk: x5e,
  ropar: S5e,
  ropf: C5e,
  Ropf: k5e,
  roplus: P5e,
  rotimes: E5e,
  RoundImplies: A5e,
  rpar: $5e,
  rpargt: T5e,
  rppolint: _5e,
  rrarr: M5e,
  Rrightarrow: R5e,
  rsaquo: N5e,
  rscr: D5e,
  Rscr: L5e,
  rsh: I5e,
  Rsh: B5e,
  rsqb: Q5e,
  rsquo: z5e,
  rsquor: j5e,
  rthree: V5e,
  rtimes: F5e,
  rtri: Z5e,
  rtrie: q5e,
  rtrif: W5e,
  rtriltri: H5e,
  RuleDelayed: X5e,
  ruluhar: Y5e,
  rx: U5e,
  Sacute: G5e,
  sacute: K5e,
  sbquo: J5e,
  scap: e8e,
  Scaron: t8e,
  scaron: n8e,
  Sc: i8e,
  sc: s8e,
  sccue: r8e,
  sce: o8e,
  scE: l8e,
  Scedil: a8e,
  scedil: c8e,
  Scirc: u8e,
  scirc: h8e,
  scnap: d8e,
  scnE: f8e,
  scnsim: p8e,
  scpolint: g8e,
  scsim: m8e,
  Scy: v8e,
  scy: b8e,
  sdotb: y8e,
  sdot: O8e,
  sdote: w8e,
  searhk: x8e,
  searr: S8e,
  seArr: C8e,
  searrow: k8e,
  sect: P8e,
  semi: E8e,
  seswar: A8e,
  setminus: $8e,
  setmn: T8e,
  sext: _8e,
  Sfr: M8e,
  sfr: R8e,
  sfrown: N8e,
  sharp: D8e,
  SHCHcy: L8e,
  shchcy: I8e,
  SHcy: B8e,
  shcy: Q8e,
  ShortDownArrow: z8e,
  ShortLeftArrow: j8e,
  shortmid: V8e,
  shortparallel: F8e,
  ShortRightArrow: Z8e,
  ShortUpArrow: q8e,
  shy: W8e,
  Sigma: H8e,
  sigma: X8e,
  sigmaf: Y8e,
  sigmav: U8e,
  sim: G8e,
  simdot: K8e,
  sime: J8e,
  simeq: e6e,
  simg: t6e,
  simgE: n6e,
  siml: i6e,
  simlE: s6e,
  simne: r6e,
  simplus: o6e,
  simrarr: l6e,
  slarr: a6e,
  SmallCircle: c6e,
  smallsetminus: u6e,
  smashp: h6e,
  smeparsl: d6e,
  smid: f6e,
  smile: p6e,
  smt: g6e,
  smte: m6e,
  smtes: v6e,
  SOFTcy: b6e,
  softcy: y6e,
  solbar: O6e,
  solb: w6e,
  sol: x6e,
  Sopf: S6e,
  sopf: C6e,
  spades: k6e,
  spadesuit: P6e,
  spar: E6e,
  sqcap: A6e,
  sqcaps: $6e,
  sqcup: T6e,
  sqcups: _6e,
  Sqrt: M6e,
  sqsub: R6e,
  sqsube: N6e,
  sqsubset: D6e,
  sqsubseteq: L6e,
  sqsup: I6e,
  sqsupe: B6e,
  sqsupset: Q6e,
  sqsupseteq: z6e,
  square: j6e,
  Square: V6e,
  SquareIntersection: F6e,
  SquareSubset: Z6e,
  SquareSubsetEqual: q6e,
  SquareSuperset: W6e,
  SquareSupersetEqual: H6e,
  SquareUnion: X6e,
  squarf: Y6e,
  squ: U6e,
  squf: G6e,
  srarr: K6e,
  Sscr: J6e,
  sscr: eBe,
  ssetmn: tBe,
  ssmile: nBe,
  sstarf: iBe,
  Star: sBe,
  star: rBe,
  starf: oBe,
  straightepsilon: lBe,
  straightphi: aBe,
  strns: cBe,
  sub: uBe,
  Sub: hBe,
  subdot: dBe,
  subE: fBe,
  sube: pBe,
  subedot: gBe,
  submult: mBe,
  subnE: vBe,
  subne: bBe,
  subplus: yBe,
  subrarr: OBe,
  subset: wBe,
  Subset: xBe,
  subseteq: SBe,
  subseteqq: CBe,
  SubsetEqual: kBe,
  subsetneq: PBe,
  subsetneqq: EBe,
  subsim: ABe,
  subsub: $Be,
  subsup: TBe,
  succapprox: _Be,
  succ: MBe,
  succcurlyeq: RBe,
  Succeeds: NBe,
  SucceedsEqual: DBe,
  SucceedsSlantEqual: LBe,
  SucceedsTilde: IBe,
  succeq: BBe,
  succnapprox: QBe,
  succneqq: zBe,
  succnsim: jBe,
  succsim: VBe,
  SuchThat: FBe,
  sum: ZBe,
  Sum: qBe,
  sung: WBe,
  sup1: HBe,
  sup2: XBe,
  sup3: YBe,
  sup: UBe,
  Sup: GBe,
  supdot: KBe,
  supdsub: JBe,
  supE: eQe,
  supe: tQe,
  supedot: nQe,
  Superset: iQe,
  SupersetEqual: sQe,
  suphsol: rQe,
  suphsub: oQe,
  suplarr: lQe,
  supmult: aQe,
  supnE: cQe,
  supne: uQe,
  supplus: hQe,
  supset: dQe,
  Supset: fQe,
  supseteq: pQe,
  supseteqq: gQe,
  supsetneq: mQe,
  supsetneqq: vQe,
  supsim: bQe,
  supsub: yQe,
  supsup: OQe,
  swarhk: wQe,
  swarr: xQe,
  swArr: SQe,
  swarrow: CQe,
  swnwar: kQe,
  szlig: PQe,
  Tab: EQe,
  target: AQe,
  Tau: $Qe,
  tau: TQe,
  tbrk: _Qe,
  Tcaron: MQe,
  tcaron: RQe,
  Tcedil: NQe,
  tcedil: DQe,
  Tcy: LQe,
  tcy: IQe,
  tdot: BQe,
  telrec: QQe,
  Tfr: zQe,
  tfr: jQe,
  there4: VQe,
  therefore: FQe,
  Therefore: ZQe,
  Theta: qQe,
  theta: WQe,
  thetasym: HQe,
  thetav: XQe,
  thickapprox: YQe,
  thicksim: UQe,
  ThickSpace: GQe,
  ThinSpace: KQe,
  thinsp: JQe,
  thkap: eze,
  thksim: tze,
  THORN: nze,
  thorn: ize,
  tilde: sze,
  Tilde: rze,
  TildeEqual: oze,
  TildeFullEqual: lze,
  TildeTilde: aze,
  timesbar: cze,
  timesb: uze,
  times: hze,
  timesd: dze,
  tint: fze,
  toea: pze,
  topbot: gze,
  topcir: mze,
  top: vze,
  Topf: bze,
  topf: yze,
  topfork: Oze,
  tosa: wze,
  tprime: xze,
  trade: Sze,
  TRADE: Cze,
  triangle: kze,
  triangledown: Pze,
  triangleleft: Eze,
  trianglelefteq: Aze,
  triangleq: $ze,
  triangleright: Tze,
  trianglerighteq: _ze,
  tridot: Mze,
  trie: Rze,
  triminus: Nze,
  TripleDot: Dze,
  triplus: Lze,
  trisb: Ize,
  tritime: Bze,
  trpezium: Qze,
  Tscr: zze,
  tscr: jze,
  TScy: Vze,
  tscy: Fze,
  TSHcy: Zze,
  tshcy: qze,
  Tstrok: Wze,
  tstrok: Hze,
  twixt: Xze,
  twoheadleftarrow: Yze,
  twoheadrightarrow: Uze,
  Uacute: Gze,
  uacute: Kze,
  uarr: Jze,
  Uarr: eje,
  uArr: tje,
  Uarrocir: nje,
  Ubrcy: ije,
  ubrcy: sje,
  Ubreve: rje,
  ubreve: oje,
  Ucirc: lje,
  ucirc: aje,
  Ucy: cje,
  ucy: uje,
  udarr: hje,
  Udblac: dje,
  udblac: fje,
  udhar: pje,
  ufisht: gje,
  Ufr: mje,
  ufr: vje,
  Ugrave: bje,
  ugrave: yje,
  uHar: Oje,
  uharl: wje,
  uharr: xje,
  uhblk: Sje,
  ulcorn: Cje,
  ulcorner: kje,
  ulcrop: Pje,
  ultri: Eje,
  Umacr: Aje,
  umacr: $je,
  uml: Tje,
  UnderBar: _je,
  UnderBrace: Mje,
  UnderBracket: Rje,
  UnderParenthesis: Nje,
  Union: Dje,
  UnionPlus: Lje,
  Uogon: Ije,
  uogon: Bje,
  Uopf: Qje,
  uopf: zje,
  UpArrowBar: jje,
  uparrow: Vje,
  UpArrow: Fje,
  Uparrow: Zje,
  UpArrowDownArrow: qje,
  updownarrow: Wje,
  UpDownArrow: Hje,
  Updownarrow: Xje,
  UpEquilibrium: Yje,
  upharpoonleft: Uje,
  upharpoonright: Gje,
  uplus: Kje,
  UpperLeftArrow: Jje,
  UpperRightArrow: eVe,
  upsi: tVe,
  Upsi: nVe,
  upsih: iVe,
  Upsilon: sVe,
  upsilon: rVe,
  UpTeeArrow: oVe,
  UpTee: lVe,
  upuparrows: aVe,
  urcorn: cVe,
  urcorner: uVe,
  urcrop: hVe,
  Uring: dVe,
  uring: fVe,
  urtri: pVe,
  Uscr: gVe,
  uscr: mVe,
  utdot: vVe,
  Utilde: bVe,
  utilde: yVe,
  utri: OVe,
  utrif: wVe,
  uuarr: xVe,
  Uuml: SVe,
  uuml: CVe,
  uwangle: kVe,
  vangrt: PVe,
  varepsilon: EVe,
  varkappa: AVe,
  varnothing: $Ve,
  varphi: TVe,
  varpi: _Ve,
  varpropto: MVe,
  varr: RVe,
  vArr: NVe,
  varrho: DVe,
  varsigma: LVe,
  varsubsetneq: IVe,
  varsubsetneqq: BVe,
  varsupsetneq: QVe,
  varsupsetneqq: zVe,
  vartheta: jVe,
  vartriangleleft: VVe,
  vartriangleright: FVe,
  vBar: ZVe,
  Vbar: qVe,
  vBarv: WVe,
  Vcy: HVe,
  vcy: XVe,
  vdash: YVe,
  vDash: UVe,
  Vdash: GVe,
  VDash: KVe,
  Vdashl: JVe,
  veebar: eFe,
  vee: tFe,
  Vee: nFe,
  veeeq: iFe,
  vellip: sFe,
  verbar: rFe,
  Verbar: oFe,
  vert: lFe,
  Vert: aFe,
  VerticalBar: cFe,
  VerticalLine: uFe,
  VerticalSeparator: hFe,
  VerticalTilde: dFe,
  VeryThinSpace: fFe,
  Vfr: pFe,
  vfr: gFe,
  vltri: mFe,
  vnsub: vFe,
  vnsup: bFe,
  Vopf: yFe,
  vopf: OFe,
  vprop: wFe,
  vrtri: xFe,
  Vscr: SFe,
  vscr: CFe,
  vsubnE: kFe,
  vsubne: PFe,
  vsupnE: EFe,
  vsupne: AFe,
  Vvdash: $Fe,
  vzigzag: TFe,
  Wcirc: _Fe,
  wcirc: MFe,
  wedbar: RFe,
  wedge: NFe,
  Wedge: DFe,
  wedgeq: LFe,
  weierp: IFe,
  Wfr: BFe,
  wfr: QFe,
  Wopf: zFe,
  wopf: jFe,
  wp: VFe,
  wr: FFe,
  wreath: ZFe,
  Wscr: qFe,
  wscr: WFe,
  xcap: HFe,
  xcirc: XFe,
  xcup: YFe,
  xdtri: UFe,
  Xfr: GFe,
  xfr: KFe,
  xharr: JFe,
  xhArr: eZe,
  Xi: tZe,
  xi: nZe,
  xlarr: iZe,
  xlArr: sZe,
  xmap: rZe,
  xnis: oZe,
  xodot: lZe,
  Xopf: aZe,
  xopf: cZe,
  xoplus: uZe,
  xotime: hZe,
  xrarr: dZe,
  xrArr: fZe,
  Xscr: pZe,
  xscr: gZe,
  xsqcup: mZe,
  xuplus: vZe,
  xutri: bZe,
  xvee: yZe,
  xwedge: OZe,
  Yacute: wZe,
  yacute: xZe,
  YAcy: SZe,
  yacy: CZe,
  Ycirc: kZe,
  ycirc: PZe,
  Ycy: EZe,
  ycy: AZe,
  yen: $Ze,
  Yfr: TZe,
  yfr: _Ze,
  YIcy: MZe,
  yicy: RZe,
  Yopf: NZe,
  yopf: DZe,
  Yscr: LZe,
  yscr: IZe,
  YUcy: BZe,
  yucy: QZe,
  yuml: zZe,
  Yuml: jZe,
  Zacute: VZe,
  zacute: FZe,
  Zcaron: ZZe,
  zcaron: qZe,
  Zcy: WZe,
  zcy: HZe,
  Zdot: XZe,
  zdot: YZe,
  zeetrf: UZe,
  ZeroWidthSpace: GZe,
  Zeta: KZe,
  zeta: JZe,
  zfr: eqe,
  Zfr: tqe,
  ZHcy: nqe,
  zhcy: iqe,
  zigrarr: sqe,
  zopf: rqe,
  Zopf: oqe,
  Zscr: lqe,
  zscr: aqe,
  zwj: cqe,
  zwnj: uqe
};
var wD = hqe, lx = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, fh = {}, OP = {};
function dqe(n) {
  var e, t, i = OP[n];
  if (i)
    return i;
  for (i = OP[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), /^[0-9a-z]$/i.test(t) ? i.push(t) : i.push("%" + ("0" + e.toString(16).toUpperCase()).slice(-2));
  for (e = 0; e < n.length; e++)
    i[n.charCodeAt(e)] = n[e];
  return i;
}
function Q0(n, e, t) {
  var i, s, r, o, l, a = "";
  for (typeof e != "string" && (t = e, e = Q0.defaultChars), typeof t > "u" && (t = !0), l = dqe(e), i = 0, s = n.length; i < s; i++) {
    if (r = n.charCodeAt(i), t && r === 37 && i + 2 < s && /^[0-9a-f]{2}$/i.test(n.slice(i + 1, i + 3))) {
      a += n.slice(i, i + 3), i += 2;
      continue;
    }
    if (r < 128) {
      a += l[r];
      continue;
    }
    if (r >= 55296 && r <= 57343) {
      if (r >= 55296 && r <= 56319 && i + 1 < s && (o = n.charCodeAt(i + 1), o >= 56320 && o <= 57343)) {
        a += encodeURIComponent(n[i] + n[i + 1]), i++;
        continue;
      }
      a += "%EF%BF%BD";
      continue;
    }
    a += encodeURIComponent(n[i]);
  }
  return a;
}
Q0.defaultChars = ";/?:@&=+$,-_.!~*'()#";
Q0.componentChars = "-_.!~*'()";
var fqe = Q0, wP = {};
function pqe(n) {
  var e, t, i = wP[n];
  if (i)
    return i;
  for (i = wP[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), i.push(t);
  for (e = 0; e < n.length; e++)
    t = n.charCodeAt(e), i[t] = "%" + ("0" + t.toString(16).toUpperCase()).slice(-2);
  return i;
}
function z0(n, e) {
  var t;
  return typeof e != "string" && (e = z0.defaultChars), t = pqe(e), n.replace(/(%[a-f0-9]{2})+/gi, function(i) {
    var s, r, o, l, a, c, u, h = "";
    for (s = 0, r = i.length; s < r; s += 3) {
      if (o = parseInt(i.slice(s + 1, s + 3), 16), o < 128) {
        h += t[o];
        continue;
      }
      if ((o & 224) === 192 && s + 3 < r && (l = parseInt(i.slice(s + 4, s + 6), 16), (l & 192) === 128)) {
        u = o << 6 & 1984 | l & 63, u < 128 ? h += "��" : h += String.fromCharCode(u), s += 3;
        continue;
      }
      if ((o & 240) === 224 && s + 6 < r && (l = parseInt(i.slice(s + 4, s + 6), 16), a = parseInt(i.slice(s + 7, s + 9), 16), (l & 192) === 128 && (a & 192) === 128)) {
        u = o << 12 & 61440 | l << 6 & 4032 | a & 63, u < 2048 || u >= 55296 && u <= 57343 ? h += "���" : h += String.fromCharCode(u), s += 6;
        continue;
      }
      if ((o & 248) === 240 && s + 9 < r && (l = parseInt(i.slice(s + 4, s + 6), 16), a = parseInt(i.slice(s + 7, s + 9), 16), c = parseInt(i.slice(s + 10, s + 12), 16), (l & 192) === 128 && (a & 192) === 128 && (c & 192) === 128)) {
        u = o << 18 & 1835008 | l << 12 & 258048 | a << 6 & 4032 | c & 63, u < 65536 || u > 1114111 ? h += "����" : (u -= 65536, h += String.fromCharCode(55296 + (u >> 10), 56320 + (u & 1023))), s += 9;
        continue;
      }
      h += "�";
    }
    return h;
  });
}
z0.defaultChars = ";/?:@&=+$,#";
z0.componentChars = "";
var gqe = z0, mqe = function(e) {
  var t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
};
function Tm() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
var vqe = /^([a-z0-9.+-]+:)/i, bqe = /:[0-9]*$/, yqe = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, Oqe = ["<", ">", '"', "`", " ", "\r", `
`, "	"], wqe = ["{", "}", "|", "\\", "^", "`"].concat(Oqe), xqe = ["'"].concat(wqe), xP = ["%", "/", "?", ";", "#"].concat(xqe), SP = ["/", "?", "#"], Sqe = 255, CP = /^[+a-z0-9A-Z_-]{0,63}$/, Cqe = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, kP = {
  javascript: !0,
  "javascript:": !0
}, PP = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function kqe(n, e) {
  if (n && n instanceof Tm)
    return n;
  var t = new Tm();
  return t.parse(n, e), t;
}
Tm.prototype.parse = function(n, e) {
  var t, i, s, r, o, l = n;
  if (l = l.trim(), !e && n.split("#").length === 1) {
    var a = yqe.exec(l);
    if (a)
      return this.pathname = a[1], a[2] && (this.search = a[2]), this;
  }
  var c = vqe.exec(l);
  if (c && (c = c[0], s = c.toLowerCase(), this.protocol = c, l = l.substr(c.length)), (e || c || l.match(/^\/\/[^@\/]+@[^@\/]+/)) && (o = l.substr(0, 2) === "//", o && !(c && kP[c]) && (l = l.substr(2), this.slashes = !0)), !kP[c] && (o || c && !PP[c])) {
    var u = -1;
    for (t = 0; t < SP.length; t++)
      r = l.indexOf(SP[t]), r !== -1 && (u === -1 || r < u) && (u = r);
    var h, d;
    for (u === -1 ? d = l.lastIndexOf("@") : d = l.lastIndexOf("@", u), d !== -1 && (h = l.slice(0, d), l = l.slice(d + 1), this.auth = h), u = -1, t = 0; t < xP.length; t++)
      r = l.indexOf(xP[t]), r !== -1 && (u === -1 || r < u) && (u = r);
    u === -1 && (u = l.length), l[u - 1] === ":" && u--;
    var f = l.slice(0, u);
    l = l.slice(u), this.parseHost(f), this.hostname = this.hostname || "";
    var p = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!p) {
      var g = this.hostname.split(/\./);
      for (t = 0, i = g.length; t < i; t++) {
        var m = g[t];
        if (m && !m.match(CP)) {
          for (var v = "", O = 0, b = m.length; O < b; O++)
            m.charCodeAt(O) > 127 ? v += "x" : v += m[O];
          if (!v.match(CP)) {
            var w = g.slice(0, t), x = g.slice(t + 1), S = m.match(Cqe);
            S && (w.push(S[1]), x.unshift(S[2])), x.length && (l = x.join(".") + l), this.hostname = w.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > Sqe && (this.hostname = ""), p && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  var C = l.indexOf("#");
  C !== -1 && (this.hash = l.substr(C), l = l.slice(0, C));
  var k = l.indexOf("?");
  return k !== -1 && (this.search = l.substr(k), l = l.slice(0, k)), l && (this.pathname = l), PP[s] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
Tm.prototype.parseHost = function(n) {
  var e = bqe.exec(n);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), n = n.substr(0, n.length - e.length)), n && (this.hostname = n);
};
var Pqe = kqe;
fh.encode = fqe;
fh.decode = gqe;
fh.format = mqe;
fh.parse = Pqe;
var na = {}, tb, EP;
function xD() {
  return EP || (EP = 1, tb = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), tb;
}
var nb, AP;
function SD() {
  return AP || (AP = 1, nb = /[\0-\x1F\x7F-\x9F]/), nb;
}
var ib, $P;
function Eqe() {
  return $P || ($P = 1, ib = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/), ib;
}
var sb, TP;
function CD() {
  return TP || (TP = 1, sb = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/), sb;
}
var _P;
function Aqe() {
  return _P || (_P = 1, na.Any = xD(), na.Cc = SD(), na.Cf = Eqe(), na.P = lx, na.Z = CD()), na;
}
(function(n) {
  function e(I) {
    return Object.prototype.toString.call(I);
  }
  function t(I) {
    return e(I) === "[object String]";
  }
  var i = Object.prototype.hasOwnProperty;
  function s(I, P) {
    return i.call(I, P);
  }
  function r(I) {
    var P = Array.prototype.slice.call(arguments, 1);
    return P.forEach(function(A) {
      if (A) {
        if (typeof A != "object")
          throw new TypeError(A + "must be object");
        Object.keys(A).forEach(function(N) {
          I[N] = A[N];
        });
      }
    }), I;
  }
  function o(I, P, A) {
    return [].concat(I.slice(0, P), A, I.slice(P + 1));
  }
  function l(I) {
    return !(I >= 55296 && I <= 57343 || I >= 64976 && I <= 65007 || (I & 65535) === 65535 || (I & 65535) === 65534 || I >= 0 && I <= 8 || I === 11 || I >= 14 && I <= 31 || I >= 127 && I <= 159 || I > 1114111);
  }
  function a(I) {
    if (I > 65535) {
      I -= 65536;
      var P = 55296 + (I >> 10), A = 56320 + (I & 1023);
      return String.fromCharCode(P, A);
    }
    return String.fromCharCode(I);
  }
  var c = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, u = /&([a-z#][a-z0-9]{1,31});/gi, h = new RegExp(c.source + "|" + u.source, "gi"), d = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i, f = wD;
  function p(I, P) {
    var A;
    return s(f, P) ? f[P] : P.charCodeAt(0) === 35 && d.test(P) && (A = P[1].toLowerCase() === "x" ? parseInt(P.slice(2), 16) : parseInt(P.slice(1), 10), l(A)) ? a(A) : I;
  }
  function g(I) {
    return I.indexOf("\\") < 0 ? I : I.replace(c, "$1");
  }
  function m(I) {
    return I.indexOf("\\") < 0 && I.indexOf("&") < 0 ? I : I.replace(h, function(P, A, N) {
      return A || p(P, N);
    });
  }
  var v = /[&<>"]/, O = /[&<>"]/g, b = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function w(I) {
    return b[I];
  }
  function x(I) {
    return v.test(I) ? I.replace(O, w) : I;
  }
  var S = /[.?*+^$[\]\\(){}|-]/g;
  function C(I) {
    return I.replace(S, "\\$&");
  }
  function k(I) {
    switch (I) {
      case 9:
      case 32:
        return !0;
    }
    return !1;
  }
  function E(I) {
    if (I >= 8192 && I <= 8202)
      return !0;
    switch (I) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return !0;
    }
    return !1;
  }
  var M = lx;
  function _(I) {
    return M.test(I);
  }
  function T(I) {
    switch (I) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return !0;
      default:
        return !1;
    }
  }
  function B(I) {
    return I = I.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (I = I.replace(/ẞ/g, "ß")), I.toLowerCase().toUpperCase();
  }
  n.lib = {}, n.lib.mdurl = fh, n.lib.ucmicro = Aqe(), n.assign = r, n.isString = t, n.has = s, n.unescapeMd = g, n.unescapeAll = m, n.isValidEntityCode = l, n.fromCodePoint = a, n.escapeHtml = x, n.arrayReplaceAt = o, n.isSpace = k, n.isWhiteSpace = E, n.isMdAsciiPunct = T, n.isPunctChar = _, n.escapeRE = C, n.normalizeReference = B;
})(Nt);
var j0 = {}, $qe = function(e, t, i) {
  var s, r, o, l, a = -1, c = e.posMax, u = e.pos;
  for (e.pos = t + 1, s = 1; e.pos < c; ) {
    if (o = e.src.charCodeAt(e.pos), o === 93 && (s--, s === 0)) {
      r = !0;
      break;
    }
    if (l = e.pos, e.md.inline.skipToken(e), o === 91) {
      if (l === e.pos - 1)
        s++;
      else if (i)
        return e.pos = u, -1;
    }
  }
  return r && (a = e.pos), e.pos = u, a;
}, MP = Nt.unescapeAll, Tqe = function(e, t, i) {
  var s, r, o = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (e.charCodeAt(o) === 60) {
    for (o++; o < i; ) {
      if (s = e.charCodeAt(o), s === 10 || s === 60)
        return l;
      if (s === 62)
        return l.pos = o + 1, l.str = MP(e.slice(t + 1, o)), l.ok = !0, l;
      if (s === 92 && o + 1 < i) {
        o += 2;
        continue;
      }
      o++;
    }
    return l;
  }
  for (r = 0; o < i && (s = e.charCodeAt(o), !(s === 32 || s < 32 || s === 127)); ) {
    if (s === 92 && o + 1 < i) {
      if (e.charCodeAt(o + 1) === 32)
        break;
      o += 2;
      continue;
    }
    if (s === 40 && (r++, r > 32))
      return l;
    if (s === 41) {
      if (r === 0)
        break;
      r--;
    }
    o++;
  }
  return t === o || r !== 0 || (l.str = MP(e.slice(t, o)), l.pos = o, l.ok = !0), l;
}, _qe = Nt.unescapeAll, Mqe = function(e, t, i) {
  var s, r, o = 0, l = t, a = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (l >= i || (r = e.charCodeAt(l), r !== 34 && r !== 39 && r !== 40))
    return a;
  for (l++, r === 40 && (r = 41); l < i; ) {
    if (s = e.charCodeAt(l), s === r)
      return a.pos = l + 1, a.lines = o, a.str = _qe(e.slice(t + 1, l)), a.ok = !0, a;
    if (s === 40 && r === 41)
      return a;
    s === 10 ? o++ : s === 92 && l + 1 < i && (l++, e.charCodeAt(l) === 10 && o++), l++;
  }
  return a;
};
j0.parseLinkLabel = $qe;
j0.parseLinkDestination = Tqe;
j0.parseLinkTitle = Mqe;
var Rqe = Nt.assign, Nqe = Nt.unescapeAll, Ya = Nt.escapeHtml, Oo = {};
Oo.code_inline = function(n, e, t, i, s) {
  var r = n[e];
  return "<code" + s.renderAttrs(r) + ">" + Ya(r.content) + "</code>";
};
Oo.code_block = function(n, e, t, i, s) {
  var r = n[e];
  return "<pre" + s.renderAttrs(r) + "><code>" + Ya(n[e].content) + `</code></pre>
`;
};
Oo.fence = function(n, e, t, i, s) {
  var r = n[e], o = r.info ? Nqe(r.info).trim() : "", l = "", a = "", c, u, h, d, f;
  return o && (h = o.split(/(\s+)/g), l = h[0], a = h.slice(2).join("")), t.highlight ? c = t.highlight(r.content, l, a) || Ya(r.content) : c = Ya(r.content), c.indexOf("<pre") === 0 ? c + `
` : o ? (u = r.attrIndex("class"), d = r.attrs ? r.attrs.slice() : [], u < 0 ? d.push(["class", t.langPrefix + l]) : (d[u] = d[u].slice(), d[u][1] += " " + t.langPrefix + l), f = {
    attrs: d
  }, "<pre><code" + s.renderAttrs(f) + ">" + c + `</code></pre>
`) : "<pre><code" + s.renderAttrs(r) + ">" + c + `</code></pre>
`;
};
Oo.image = function(n, e, t, i, s) {
  var r = n[e];
  return r.attrs[r.attrIndex("alt")][1] = s.renderInlineAsText(r.children, t, i), s.renderToken(n, e, t);
};
Oo.hardbreak = function(n, e, t) {
  return t.xhtmlOut ? `<br />
` : `<br>
`;
};
Oo.softbreak = function(n, e, t) {
  return t.breaks ? t.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
Oo.text = function(n, e) {
  return Ya(n[e].content);
};
Oo.html_block = function(n, e) {
  return n[e].content;
};
Oo.html_inline = function(n, e) {
  return n[e].content;
};
function ph() {
  this.rules = Rqe({}, Oo);
}
ph.prototype.renderAttrs = function(e) {
  var t, i, s;
  if (!e.attrs)
    return "";
  for (s = "", t = 0, i = e.attrs.length; t < i; t++)
    s += " " + Ya(e.attrs[t][0]) + '="' + Ya(e.attrs[t][1]) + '"';
  return s;
};
ph.prototype.renderToken = function(e, t, i) {
  var s, r = "", o = !1, l = e[t];
  return l.hidden ? "" : (l.block && l.nesting !== -1 && t && e[t - 1].hidden && (r += `
`), r += (l.nesting === -1 ? "</" : "<") + l.tag, r += this.renderAttrs(l), l.nesting === 0 && i.xhtmlOut && (r += " /"), l.block && (o = !0, l.nesting === 1 && t + 1 < e.length && (s = e[t + 1], (s.type === "inline" || s.hidden || s.nesting === -1 && s.tag === l.tag) && (o = !1))), r += o ? `>
` : ">", r);
};
ph.prototype.renderInline = function(n, e, t) {
  for (var i, s = "", r = this.rules, o = 0, l = n.length; o < l; o++)
    i = n[o].type, typeof r[i] < "u" ? s += r[i](n, o, e, t, this) : s += this.renderToken(n, o, e);
  return s;
};
ph.prototype.renderInlineAsText = function(n, e, t) {
  for (var i = "", s = 0, r = n.length; s < r; s++)
    n[s].type === "text" ? i += n[s].content : n[s].type === "image" ? i += this.renderInlineAsText(n[s].children, e, t) : n[s].type === "softbreak" && (i += `
`);
  return i;
};
ph.prototype.render = function(n, e, t) {
  var i, s, r, o = "", l = this.rules;
  for (i = 0, s = n.length; i < s; i++)
    r = n[i].type, r === "inline" ? o += this.renderInline(n[i].children, e, t) : typeof l[r] < "u" ? o += l[r](n, i, e, t, this) : o += this.renderToken(n, i, e, t);
  return o;
};
var Dqe = ph;
function _r() {
  this.__rules__ = [], this.__cache__ = null;
}
_r.prototype.__find__ = function(n) {
  for (var e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === n)
      return e;
  return -1;
};
_r.prototype.__compile__ = function() {
  var n = this, e = [""];
  n.__rules__.forEach(function(t) {
    t.enabled && t.alt.forEach(function(i) {
      e.indexOf(i) < 0 && e.push(i);
    });
  }), n.__cache__ = {}, e.forEach(function(t) {
    n.__cache__[t] = [], n.__rules__.forEach(function(i) {
      i.enabled && (t && i.alt.indexOf(t) < 0 || n.__cache__[t].push(i.fn));
    });
  });
};
_r.prototype.at = function(n, e, t) {
  var i = this.__find__(n), s = t || {};
  if (i === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__[i].fn = e, this.__rules__[i].alt = s.alt || [], this.__cache__ = null;
};
_r.prototype.before = function(n, e, t, i) {
  var s = this.__find__(n), r = i || {};
  if (s === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(s, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: r.alt || []
  }), this.__cache__ = null;
};
_r.prototype.after = function(n, e, t, i) {
  var s = this.__find__(n), r = i || {};
  if (s === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(s + 1, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: r.alt || []
  }), this.__cache__ = null;
};
_r.prototype.push = function(n, e, t) {
  var i = t || {};
  this.__rules__.push({
    name: n,
    enabled: !0,
    fn: e,
    alt: i.alt || []
  }), this.__cache__ = null;
};
_r.prototype.enable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(i) {
    var s = this.__find__(i);
    if (s < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + i);
    }
    this.__rules__[s].enabled = !0, t.push(i);
  }, this), this.__cache__ = null, t;
};
_r.prototype.enableOnly = function(n, e) {
  Array.isArray(n) || (n = [n]), this.__rules__.forEach(function(t) {
    t.enabled = !1;
  }), this.enable(n, e);
};
_r.prototype.disable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(i) {
    var s = this.__find__(i);
    if (s < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + i);
    }
    this.__rules__[s].enabled = !1, t.push(i);
  }, this), this.__cache__ = null, t;
};
_r.prototype.getRules = function(n) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[n] || [];
};
var ax = _r, Lqe = /\r\n?|\n/g, Iqe = /\0/g, Bqe = function(e) {
  var t;
  t = e.src.replace(Lqe, `
`), t = t.replace(Iqe, "�"), e.src = t;
}, Qqe = function(e) {
  var t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}, zqe = function(e) {
  var t = e.tokens, i, s, r;
  for (s = 0, r = t.length; s < r; s++)
    i = t[s], i.type === "inline" && e.md.inline.parse(i.content, e.md, e.env, i.children);
}, jqe = Nt.arrayReplaceAt;
function Vqe(n) {
  return /^<a[>\s]/i.test(n);
}
function Fqe(n) {
  return /^<\/a\s*>/i.test(n);
}
var Zqe = function(e) {
  var t, i, s, r, o, l, a, c, u, h, d, f, p, g, m, v, O = e.tokens, b;
  if (e.md.options.linkify) {
    for (i = 0, s = O.length; i < s; i++)
      if (!(O[i].type !== "inline" || !e.md.linkify.pretest(O[i].content)))
        for (r = O[i].children, p = 0, t = r.length - 1; t >= 0; t--) {
          if (l = r[t], l.type === "link_close") {
            for (t--; r[t].level !== l.level && r[t].type !== "link_open"; )
              t--;
            continue;
          }
          if (l.type === "html_inline" && (Vqe(l.content) && p > 0 && p--, Fqe(l.content) && p++), !(p > 0) && l.type === "text" && e.md.linkify.test(l.content)) {
            for (u = l.content, b = e.md.linkify.match(u), a = [], f = l.level, d = 0, b.length > 0 && b[0].index === 0 && t > 0 && r[t - 1].type === "text_special" && (b = b.slice(1)), c = 0; c < b.length; c++)
              g = b[c].url, m = e.md.normalizeLink(g), e.md.validateLink(m) && (v = b[c].text, b[c].schema ? b[c].schema === "mailto:" && !/^mailto:/i.test(v) ? v = e.md.normalizeLinkText("mailto:" + v).replace(/^mailto:/, "") : v = e.md.normalizeLinkText(v) : v = e.md.normalizeLinkText("http://" + v).replace(/^http:\/\//, ""), h = b[c].index, h > d && (o = new e.Token("text", "", 0), o.content = u.slice(d, h), o.level = f, a.push(o)), o = new e.Token("link_open", "a", 1), o.attrs = [["href", m]], o.level = f++, o.markup = "linkify", o.info = "auto", a.push(o), o = new e.Token("text", "", 0), o.content = v, o.level = f, a.push(o), o = new e.Token("link_close", "a", -1), o.level = --f, o.markup = "linkify", o.info = "auto", a.push(o), d = b[c].lastIndex);
            d < u.length && (o = new e.Token("text", "", 0), o.content = u.slice(d), o.level = f, a.push(o)), O[i].children = r = jqe(r, t, a);
          }
        }
  }
}, kD = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, qqe = /\((c|tm|r)\)/i, Wqe = /\((c|tm|r)\)/ig, Hqe = {
  c: "©",
  r: "®",
  tm: "™"
};
function Xqe(n, e) {
  return Hqe[e.toLowerCase()];
}
function Yqe(n) {
  var e, t, i = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !i && (t.content = t.content.replace(Wqe, Xqe)), t.type === "link_open" && t.info === "auto" && i--, t.type === "link_close" && t.info === "auto" && i++;
}
function Uqe(n) {
  var e, t, i = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !i && kD.test(t.content) && (t.content = t.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), t.type === "link_open" && t.info === "auto" && i--, t.type === "link_close" && t.info === "auto" && i++;
}
var Gqe = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (qqe.test(e.tokens[t].content) && Yqe(e.tokens[t].children), kD.test(e.tokens[t].content) && Uqe(e.tokens[t].children));
}, RP = Nt.isWhiteSpace, NP = Nt.isPunctChar, DP = Nt.isMdAsciiPunct, Kqe = /['"]/, LP = /['"]/g, IP = "’";
function Mp(n, e, t) {
  return n.slice(0, e) + t + n.slice(e + 1);
}
function Jqe(n, e) {
  var t, i, s, r, o, l, a, c, u, h, d, f, p, g, m, v, O, b, w, x, S;
  for (w = [], t = 0; t < n.length; t++) {
    for (i = n[t], a = n[t].level, O = w.length - 1; O >= 0 && !(w[O].level <= a); O--)
      ;
    if (w.length = O + 1, i.type === "text") {
      s = i.content, o = 0, l = s.length;
      e:
        for (; o < l && (LP.lastIndex = o, r = LP.exec(s), !!r); ) {
          if (m = v = !0, o = r.index + 1, b = r[0] === "'", u = 32, r.index - 1 >= 0)
            u = s.charCodeAt(r.index - 1);
          else
            for (O = t - 1; O >= 0 && !(n[O].type === "softbreak" || n[O].type === "hardbreak"); O--)
              if (n[O].content) {
                u = n[O].content.charCodeAt(n[O].content.length - 1);
                break;
              }
          if (h = 32, o < l)
            h = s.charCodeAt(o);
          else
            for (O = t + 1; O < n.length && !(n[O].type === "softbreak" || n[O].type === "hardbreak"); O++)
              if (n[O].content) {
                h = n[O].content.charCodeAt(0);
                break;
              }
          if (d = DP(u) || NP(String.fromCharCode(u)), f = DP(h) || NP(String.fromCharCode(h)), p = RP(u), g = RP(h), g ? m = !1 : f && (p || d || (m = !1)), p ? v = !1 : d && (g || f || (v = !1)), h === 34 && r[0] === '"' && u >= 48 && u <= 57 && (v = m = !1), m && v && (m = d, v = f), !m && !v) {
            b && (i.content = Mp(i.content, r.index, IP));
            continue;
          }
          if (v) {
            for (O = w.length - 1; O >= 0 && (c = w[O], !(w[O].level < a)); O--)
              if (c.single === b && w[O].level === a) {
                c = w[O], b ? (x = e.md.options.quotes[2], S = e.md.options.quotes[3]) : (x = e.md.options.quotes[0], S = e.md.options.quotes[1]), i.content = Mp(i.content, r.index, S), n[c.token].content = Mp(
                  n[c.token].content,
                  c.pos,
                  x
                ), o += S.length - 1, c.token === t && (o += x.length - 1), s = i.content, l = s.length, w.length = O;
                continue e;
              }
          }
          m ? w.push({
            token: t,
            pos: r.index,
            single: b,
            level: a
          }) : v && b && (i.content = Mp(i.content, r.index, IP));
        }
    }
  }
}
var e7e = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !Kqe.test(e.tokens[t].content) || Jqe(e.tokens[t].children, e);
}, t7e = function(e) {
  var t, i, s, r, o, l, a = e.tokens;
  for (t = 0, i = a.length; t < i; t++)
    if (a[t].type === "inline") {
      for (s = a[t].children, o = s.length, r = 0; r < o; r++)
        s[r].type === "text_special" && (s[r].type = "text");
      for (r = l = 0; r < o; r++)
        s[r].type === "text" && r + 1 < o && s[r + 1].type === "text" ? s[r + 1].content = s[r].content + s[r + 1].content : (r !== l && (s[l] = s[r]), l++);
      r !== l && (s.length = l);
    }
};
function gh(n, e, t) {
  this.type = n, this.tag = e, this.attrs = null, this.map = null, this.nesting = t, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
gh.prototype.attrIndex = function(e) {
  var t, i, s;
  if (!this.attrs)
    return -1;
  for (t = this.attrs, i = 0, s = t.length; i < s; i++)
    if (t[i][0] === e)
      return i;
  return -1;
};
gh.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
gh.prototype.attrSet = function(e, t) {
  var i = this.attrIndex(e), s = [e, t];
  i < 0 ? this.attrPush(s) : this.attrs[i] = s;
};
gh.prototype.attrGet = function(e) {
  var t = this.attrIndex(e), i = null;
  return t >= 0 && (i = this.attrs[t][1]), i;
};
gh.prototype.attrJoin = function(e, t) {
  var i = this.attrIndex(e);
  i < 0 ? this.attrPush([e, t]) : this.attrs[i][1] = this.attrs[i][1] + " " + t;
};
var cx = gh, n7e = cx;
function PD(n, e, t) {
  this.src = n, this.env = t, this.tokens = [], this.inlineMode = !1, this.md = e;
}
PD.prototype.Token = n7e;
var i7e = PD, s7e = ax, rb = [
  ["normalize", Bqe],
  ["block", Qqe],
  ["inline", zqe],
  ["linkify", Zqe],
  ["replacements", Gqe],
  ["smartquotes", e7e],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", t7e]
];
function ux() {
  this.ruler = new s7e();
  for (var n = 0; n < rb.length; n++)
    this.ruler.push(rb[n][0], rb[n][1]);
}
ux.prototype.process = function(n) {
  var e, t, i;
  for (i = this.ruler.getRules(""), e = 0, t = i.length; e < t; e++)
    i[e](n);
};
ux.prototype.State = i7e;
var r7e = ux, ob = Nt.isSpace;
function lb(n, e) {
  var t = n.bMarks[e] + n.tShift[e], i = n.eMarks[e];
  return n.src.slice(t, i);
}
function BP(n) {
  var e = [], t = 0, i = n.length, s, r = !1, o = 0, l = "";
  for (s = n.charCodeAt(t); t < i; )
    s === 124 && (r ? (l += n.substring(o, t - 1), o = t) : (e.push(l + n.substring(o, t)), l = "", o = t + 1)), r = s === 92, t++, s = n.charCodeAt(t);
  return e.push(l + n.substring(o)), e;
}
var o7e = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d, f, p, g, m, v, O, b, w, x, S;
  if (t + 2 > i || (u = t + 1, e.sCount[u] < e.blkIndent) || e.sCount[u] - e.blkIndent >= 4 || (l = e.bMarks[u] + e.tShift[u], l >= e.eMarks[u]) || (x = e.src.charCodeAt(l++), x !== 124 && x !== 45 && x !== 58) || l >= e.eMarks[u] || (S = e.src.charCodeAt(l++), S !== 124 && S !== 45 && S !== 58 && !ob(S)) || x === 45 && ob(S))
    return !1;
  for (; l < e.eMarks[u]; ) {
    if (r = e.src.charCodeAt(l), r !== 124 && r !== 45 && r !== 58 && !ob(r))
      return !1;
    l++;
  }
  for (o = lb(e, t + 1), h = o.split("|"), p = [], a = 0; a < h.length; a++) {
    if (g = h[a].trim(), !g) {
      if (a === 0 || a === h.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(g))
      return !1;
    g.charCodeAt(g.length - 1) === 58 ? p.push(g.charCodeAt(0) === 58 ? "center" : "right") : g.charCodeAt(0) === 58 ? p.push("left") : p.push("");
  }
  if (o = lb(e, t).trim(), o.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4 || (h = BP(o), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), d = h.length, d === 0 || d !== p.length))
    return !1;
  if (s)
    return !0;
  for (O = e.parentType, e.parentType = "table", w = e.md.block.ruler.getRules("blockquote"), f = e.push("table_open", "table", 1), f.map = m = [t, 0], f = e.push("thead_open", "thead", 1), f.map = [t, t + 1], f = e.push("tr_open", "tr", 1), f.map = [t, t + 1], a = 0; a < h.length; a++)
    f = e.push("th_open", "th", 1), p[a] && (f.attrs = [["style", "text-align:" + p[a]]]), f = e.push("inline", "", 0), f.content = h[a].trim(), f.children = [], f = e.push("th_close", "th", -1);
  for (f = e.push("tr_close", "tr", -1), f = e.push("thead_close", "thead", -1), u = t + 2; u < i && !(e.sCount[u] < e.blkIndent); u++) {
    for (b = !1, a = 0, c = w.length; a < c; a++)
      if (w[a](e, u, i, !0)) {
        b = !0;
        break;
      }
    if (b || (o = lb(e, u).trim(), !o) || e.sCount[u] - e.blkIndent >= 4)
      break;
    for (h = BP(o), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), u === t + 2 && (f = e.push("tbody_open", "tbody", 1), f.map = v = [t + 2, 0]), f = e.push("tr_open", "tr", 1), f.map = [u, u + 1], a = 0; a < d; a++)
      f = e.push("td_open", "td", 1), p[a] && (f.attrs = [["style", "text-align:" + p[a]]]), f = e.push("inline", "", 0), f.content = h[a] ? h[a].trim() : "", f.children = [], f = e.push("td_close", "td", -1);
    f = e.push("tr_close", "tr", -1);
  }
  return v && (f = e.push("tbody_close", "tbody", -1), v[1] = u), f = e.push("table_close", "table", -1), m[1] = u, e.parentType = O, e.line = u, !0;
}, l7e = function(e, t, i) {
  var s, r, o;
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  for (r = s = t + 1; s < i; ) {
    if (e.isEmpty(s)) {
      s++;
      continue;
    }
    if (e.sCount[s] - e.blkIndent >= 4) {
      s++, r = s;
      continue;
    }
    break;
  }
  return e.line = r, o = e.push("code_block", "code", 0), o.content = e.getLines(t, r, 4 + e.blkIndent, !1) + `
`, o.map = [t, e.line], !0;
}, a7e = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d = !1, f = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || f + 3 > p || (r = e.src.charCodeAt(f), r !== 126 && r !== 96) || (c = f, f = e.skipChars(f, r), o = f - c, o < 3) || (h = e.src.slice(c, f), l = e.src.slice(f, p), r === 96 && l.indexOf(String.fromCharCode(r)) >= 0))
    return !1;
  if (s)
    return !0;
  for (a = t; a++, !(a >= i || (f = c = e.bMarks[a] + e.tShift[a], p = e.eMarks[a], f < p && e.sCount[a] < e.blkIndent)); )
    if (e.src.charCodeAt(f) === r && !(e.sCount[a] - e.blkIndent >= 4) && (f = e.skipChars(f, r), !(f - c < o) && (f = e.skipSpaces(f), !(f < p)))) {
      d = !0;
      break;
    }
  return o = e.sCount[t], e.line = a + (d ? 1 : 0), u = e.push("fence", "code", 0), u.info = l, u.content = e.getLines(t + 1, a, o, !0), u.markup = h, u.map = [t, e.line], !0;
}, c7e = Nt.isSpace, u7e = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d, f, p, g, m, v, O, b, w, x, S, C, k, E = e.lineMax, M = e.bMarks[t] + e.tShift[t], _ = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(M) !== 62)
    return !1;
  if (s)
    return !0;
  for (p = [], g = [], O = [], b = [], S = e.md.block.ruler.getRules("blockquote"), v = e.parentType, e.parentType = "blockquote", d = t; d < i && (k = e.sCount[d] < e.blkIndent, M = e.bMarks[d] + e.tShift[d], _ = e.eMarks[d], !(M >= _)); d++) {
    if (e.src.charCodeAt(M++) === 62 && !k) {
      for (a = e.sCount[d] + 1, e.src.charCodeAt(M) === 32 ? (M++, a++, r = !1, w = !0) : e.src.charCodeAt(M) === 9 ? (w = !0, (e.bsCount[d] + a) % 4 === 3 ? (M++, a++, r = !1) : r = !0) : w = !1, f = a, p.push(e.bMarks[d]), e.bMarks[d] = M; M < _ && (o = e.src.charCodeAt(M), c7e(o)); ) {
        o === 9 ? f += 4 - (f + e.bsCount[d] + (r ? 1 : 0)) % 4 : f++;
        M++;
      }
      u = M >= _, g.push(e.bsCount[d]), e.bsCount[d] = e.sCount[d] + 1 + (w ? 1 : 0), O.push(e.sCount[d]), e.sCount[d] = f - a, b.push(e.tShift[d]), e.tShift[d] = M - e.bMarks[d];
      continue;
    }
    if (u)
      break;
    for (x = !1, l = 0, c = S.length; l < c; l++)
      if (S[l](e, d, i, !0)) {
        x = !0;
        break;
      }
    if (x) {
      e.lineMax = d, e.blkIndent !== 0 && (p.push(e.bMarks[d]), g.push(e.bsCount[d]), b.push(e.tShift[d]), O.push(e.sCount[d]), e.sCount[d] -= e.blkIndent);
      break;
    }
    p.push(e.bMarks[d]), g.push(e.bsCount[d]), b.push(e.tShift[d]), O.push(e.sCount[d]), e.sCount[d] = -1;
  }
  for (m = e.blkIndent, e.blkIndent = 0, C = e.push("blockquote_open", "blockquote", 1), C.markup = ">", C.map = h = [t, 0], e.md.block.tokenize(e, t, d), C = e.push("blockquote_close", "blockquote", -1), C.markup = ">", e.lineMax = E, e.parentType = v, h[1] = e.line, l = 0; l < b.length; l++)
    e.bMarks[l + t] = p[l], e.tShift[l + t] = b[l], e.sCount[l + t] = O[l], e.bsCount[l + t] = g[l];
  return e.blkIndent = m, !0;
}, h7e = Nt.isSpace, d7e = function(e, t, i, s) {
  var r, o, l, a, c = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (r = e.src.charCodeAt(c++), r !== 42 && r !== 45 && r !== 95))
    return !1;
  for (o = 1; c < u; ) {
    if (l = e.src.charCodeAt(c++), l !== r && !h7e(l))
      return !1;
    l === r && o++;
  }
  return o < 3 ? !1 : (s || (e.line = t + 1, a = e.push("hr", "hr", 0), a.map = [t, e.line], a.markup = Array(o + 1).join(String.fromCharCode(r))), !0);
}, ED = Nt.isSpace;
function QP(n, e) {
  var t, i, s, r;
  return i = n.bMarks[e] + n.tShift[e], s = n.eMarks[e], t = n.src.charCodeAt(i++), t !== 42 && t !== 45 && t !== 43 || i < s && (r = n.src.charCodeAt(i), !ED(r)) ? -1 : i;
}
function zP(n, e) {
  var t, i = n.bMarks[e] + n.tShift[e], s = i, r = n.eMarks[e];
  if (s + 1 >= r || (t = n.src.charCodeAt(s++), t < 48 || t > 57))
    return -1;
  for (; ; ) {
    if (s >= r)
      return -1;
    if (t = n.src.charCodeAt(s++), t >= 48 && t <= 57) {
      if (s - i >= 10)
        return -1;
      continue;
    }
    if (t === 41 || t === 46)
      break;
    return -1;
  }
  return s < r && (t = n.src.charCodeAt(s), !ED(t)) ? -1 : s;
}
function f7e(n, e) {
  var t, i, s = n.level + 2;
  for (t = e + 2, i = n.tokens.length - 2; t < i; t++)
    n.tokens[t].level === s && n.tokens[t].type === "paragraph_open" && (n.tokens[t + 2].hidden = !0, n.tokens[t].hidden = !0, t += 2);
}
var p7e = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d, f, p, g, m, v, O, b, w, x, S, C, k, E, M, _, T, B, I, P, A = t, N = !1, q = !0;
  if (e.sCount[A] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[A] - e.listIndent >= 4 && e.sCount[A] < e.blkIndent)
    return !1;
  if (s && e.parentType === "paragraph" && e.sCount[A] >= e.blkIndent && (N = !0), (M = zP(e, A)) >= 0) {
    if (h = !0, T = e.bMarks[A] + e.tShift[A], v = Number(e.src.slice(T, M - 1)), N && v !== 1)
      return !1;
  } else if ((M = QP(e, A)) >= 0)
    h = !1;
  else
    return !1;
  if (N && e.skipSpaces(M) >= e.eMarks[A])
    return !1;
  if (s)
    return !0;
  for (m = e.src.charCodeAt(M - 1), g = e.tokens.length, h ? (P = e.push("ordered_list_open", "ol", 1), v !== 1 && (P.attrs = [["start", v]])) : P = e.push("bullet_list_open", "ul", 1), P.map = p = [A, 0], P.markup = String.fromCharCode(m), _ = !1, I = e.md.block.ruler.getRules("list"), x = e.parentType, e.parentType = "list"; A < i; ) {
    for (E = M, O = e.eMarks[A], u = b = e.sCount[A] + M - (e.bMarks[A] + e.tShift[A]); E < O; ) {
      if (r = e.src.charCodeAt(E), r === 9)
        b += 4 - (b + e.bsCount[A]) % 4;
      else if (r === 32)
        b++;
      else
        break;
      E++;
    }
    if (o = E, o >= O ? c = 1 : c = b - u, c > 4 && (c = 1), a = u + c, P = e.push("list_item_open", "li", 1), P.markup = String.fromCharCode(m), P.map = d = [A, 0], h && (P.info = e.src.slice(T, M - 1)), k = e.tight, C = e.tShift[A], S = e.sCount[A], w = e.listIndent, e.listIndent = e.blkIndent, e.blkIndent = a, e.tight = !0, e.tShift[A] = o - e.bMarks[A], e.sCount[A] = b, o >= O && e.isEmpty(A + 1) ? e.line = Math.min(e.line + 2, i) : e.md.block.tokenize(e, A, i, !0), (!e.tight || _) && (q = !1), _ = e.line - A > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = w, e.tShift[A] = C, e.sCount[A] = S, e.tight = k, P = e.push("list_item_close", "li", -1), P.markup = String.fromCharCode(m), A = e.line, d[1] = A, A >= i || e.sCount[A] < e.blkIndent || e.sCount[A] - e.blkIndent >= 4)
      break;
    for (B = !1, l = 0, f = I.length; l < f; l++)
      if (I[l](e, A, i, !0)) {
        B = !0;
        break;
      }
    if (B)
      break;
    if (h) {
      if (M = zP(e, A), M < 0)
        break;
      T = e.bMarks[A] + e.tShift[A];
    } else if (M = QP(e, A), M < 0)
      break;
    if (m !== e.src.charCodeAt(M - 1))
      break;
  }
  return h ? P = e.push("ordered_list_close", "ol", -1) : P = e.push("bullet_list_close", "ul", -1), P.markup = String.fromCharCode(m), p[1] = A, e.line = A, e.parentType = x, q && f7e(e, g), !0;
}, g7e = Nt.normalizeReference, Rp = Nt.isSpace, m7e = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d, f, p, g, m, v, O, b, w, x = 0, S = e.bMarks[t] + e.tShift[t], C = e.eMarks[t], k = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(S) !== 91)
    return !1;
  for (; ++S < C; )
    if (e.src.charCodeAt(S) === 93 && e.src.charCodeAt(S - 1) !== 92) {
      if (S + 1 === C || e.src.charCodeAt(S + 1) !== 58)
        return !1;
      break;
    }
  for (a = e.lineMax, b = e.md.block.ruler.getRules("reference"), p = e.parentType, e.parentType = "reference"; k < a && !e.isEmpty(k); k++)
    if (!(e.sCount[k] - e.blkIndent > 3) && !(e.sCount[k] < 0)) {
      for (O = !1, u = 0, h = b.length; u < h; u++)
        if (b[u](e, k, a, !0)) {
          O = !0;
          break;
        }
      if (O)
        break;
    }
  for (v = e.getLines(t, k, e.blkIndent, !1).trim(), C = v.length, S = 1; S < C; S++) {
    if (r = v.charCodeAt(S), r === 91)
      return !1;
    if (r === 93) {
      f = S;
      break;
    } else
      r === 10 ? x++ : r === 92 && (S++, S < C && v.charCodeAt(S) === 10 && x++);
  }
  if (f < 0 || v.charCodeAt(f + 1) !== 58)
    return !1;
  for (S = f + 2; S < C; S++)
    if (r = v.charCodeAt(S), r === 10)
      x++;
    else if (!Rp(r))
      break;
  if (g = e.md.helpers.parseLinkDestination(v, S, C), !g.ok || (c = e.md.normalizeLink(g.str), !e.md.validateLink(c)))
    return !1;
  for (S = g.pos, x += g.lines, o = S, l = x, m = S; S < C; S++)
    if (r = v.charCodeAt(S), r === 10)
      x++;
    else if (!Rp(r))
      break;
  for (g = e.md.helpers.parseLinkTitle(v, S, C), S < C && m !== S && g.ok ? (w = g.str, S = g.pos, x += g.lines) : (w = "", S = o, x = l); S < C && (r = v.charCodeAt(S), !!Rp(r)); )
    S++;
  if (S < C && v.charCodeAt(S) !== 10 && w)
    for (w = "", S = o, x = l; S < C && (r = v.charCodeAt(S), !!Rp(r)); )
      S++;
  return S < C && v.charCodeAt(S) !== 10 || (d = g7e(v.slice(1, f)), !d) ? !1 : (s || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[d] > "u" && (e.env.references[d] = { title: w, href: c }), e.parentType = p, e.line = t + x + 1), !0);
}, v7e = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "source",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], V0 = {}, b7e = "[a-zA-Z_:][a-zA-Z0-9:._-]*", y7e = "[^\"'=<>`\\x00-\\x20]+", O7e = "'[^']*'", w7e = '"[^"]*"', x7e = "(?:" + y7e + "|" + O7e + "|" + w7e + ")", S7e = "(?:\\s+" + b7e + "(?:\\s*=\\s*" + x7e + ")?)", AD = "<[A-Za-z][A-Za-z0-9\\-]*" + S7e + "*\\s*\\/?>", $D = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", C7e = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", k7e = "<[?][\\s\\S]*?[?]>", P7e = "<![A-Z]+\\s+[^>]*>", E7e = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", A7e = new RegExp("^(?:" + AD + "|" + $D + "|" + C7e + "|" + k7e + "|" + P7e + "|" + E7e + ")"), $7e = new RegExp("^(?:" + AD + "|" + $D + ")");
V0.HTML_TAG_RE = A7e;
V0.HTML_OPEN_CLOSE_TAG_RE = $7e;
var T7e = v7e, _7e = V0.HTML_OPEN_CLOSE_TAG_RE, bc = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + T7e.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(_7e.source + "\\s*$"), /^$/, !1]
], M7e = function(e, t, i, s) {
  var r, o, l, a, c = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(c) !== 60)
    return !1;
  for (a = e.src.slice(c, u), r = 0; r < bc.length && !bc[r][0].test(a); r++)
    ;
  if (r === bc.length)
    return !1;
  if (s)
    return bc[r][2];
  if (o = t + 1, !bc[r][1].test(a)) {
    for (; o < i && !(e.sCount[o] < e.blkIndent); o++)
      if (c = e.bMarks[o] + e.tShift[o], u = e.eMarks[o], a = e.src.slice(c, u), bc[r][1].test(a)) {
        a.length !== 0 && o++;
        break;
      }
  }
  return e.line = o, l = e.push("html_block", "", 0), l.map = [t, o], l.content = e.getLines(t, o, e.blkIndent, !0), !0;
}, jP = Nt.isSpace, R7e = function(e, t, i, s) {
  var r, o, l, a, c = e.bMarks[t] + e.tShift[t], u = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (r = e.src.charCodeAt(c), r !== 35 || c >= u))
    return !1;
  for (o = 1, r = e.src.charCodeAt(++c); r === 35 && c < u && o <= 6; )
    o++, r = e.src.charCodeAt(++c);
  return o > 6 || c < u && !jP(r) ? !1 : (s || (u = e.skipSpacesBack(u, c), l = e.skipCharsBack(u, 35, c), l > c && jP(e.src.charCodeAt(l - 1)) && (u = l), e.line = t + 1, a = e.push("heading_open", "h" + String(o), 1), a.markup = "########".slice(0, o), a.map = [t, e.line], a = e.push("inline", "", 0), a.content = e.src.slice(c, u).trim(), a.map = [t, e.line], a.children = [], a = e.push("heading_close", "h" + String(o), -1), a.markup = "########".slice(0, o)), !0);
}, N7e = function(e, t, i) {
  var s, r, o, l, a, c, u, h, d, f = t + 1, p, g = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  for (p = e.parentType, e.parentType = "paragraph"; f < i && !e.isEmpty(f); f++)
    if (!(e.sCount[f] - e.blkIndent > 3)) {
      if (e.sCount[f] >= e.blkIndent && (c = e.bMarks[f] + e.tShift[f], u = e.eMarks[f], c < u && (d = e.src.charCodeAt(c), (d === 45 || d === 61) && (c = e.skipChars(c, d), c = e.skipSpaces(c), c >= u)))) {
        h = d === 61 ? 1 : 2;
        break;
      }
      if (!(e.sCount[f] < 0)) {
        for (r = !1, o = 0, l = g.length; o < l; o++)
          if (g[o](e, f, i, !0)) {
            r = !0;
            break;
          }
        if (r)
          break;
      }
    }
  return h ? (s = e.getLines(t, f, e.blkIndent, !1).trim(), e.line = f + 1, a = e.push("heading_open", "h" + String(h), 1), a.markup = String.fromCharCode(d), a.map = [t, e.line], a = e.push("inline", "", 0), a.content = s, a.map = [t, e.line - 1], a.children = [], a = e.push("heading_close", "h" + String(h), -1), a.markup = String.fromCharCode(d), e.parentType = p, !0) : !1;
}, D7e = function(e, t, i) {
  var s, r, o, l, a, c, u = t + 1, h = e.md.block.ruler.getRules("paragraph");
  for (c = e.parentType, e.parentType = "paragraph"; u < i && !e.isEmpty(u); u++)
    if (!(e.sCount[u] - e.blkIndent > 3) && !(e.sCount[u] < 0)) {
      for (r = !1, o = 0, l = h.length; o < l; o++)
        if (h[o](e, u, i, !0)) {
          r = !0;
          break;
        }
      if (r)
        break;
    }
  return s = e.getLines(t, u, e.blkIndent, !1).trim(), e.line = u, a = e.push("paragraph_open", "p", 1), a.map = [t, e.line], a = e.push("inline", "", 0), a.content = s, a.map = [t, e.line], a.children = [], a = e.push("paragraph_close", "p", -1), e.parentType = c, !0;
}, TD = cx, F0 = Nt.isSpace;
function wo(n, e, t, i) {
  var s, r, o, l, a, c, u, h;
  for (this.src = n, this.md = e, this.env = t, this.tokens = i, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", r = this.src, h = !1, o = l = c = u = 0, a = r.length; l < a; l++) {
    if (s = r.charCodeAt(l), !h)
      if (F0(s)) {
        c++, s === 9 ? u += 4 - u % 4 : u++;
        continue;
      } else
        h = !0;
    (s === 10 || l === a - 1) && (s !== 10 && l++, this.bMarks.push(o), this.eMarks.push(l), this.tShift.push(c), this.sCount.push(u), this.bsCount.push(0), h = !1, c = 0, u = 0, o = l + 1);
  }
  this.bMarks.push(r.length), this.eMarks.push(r.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
wo.prototype.push = function(n, e, t) {
  var i = new TD(n, e, t);
  return i.block = !0, t < 0 && this.level--, i.level = this.level, t > 0 && this.level++, this.tokens.push(i), i;
};
wo.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
wo.prototype.skipEmptyLines = function(e) {
  for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
wo.prototype.skipSpaces = function(e) {
  for (var t, i = this.src.length; e < i && (t = this.src.charCodeAt(e), !!F0(t)); e++)
    ;
  return e;
};
wo.prototype.skipSpacesBack = function(e, t) {
  if (e <= t)
    return e;
  for (; e > t; )
    if (!F0(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
wo.prototype.skipChars = function(e, t) {
  for (var i = this.src.length; e < i && this.src.charCodeAt(e) === t; e++)
    ;
  return e;
};
wo.prototype.skipCharsBack = function(e, t, i) {
  if (e <= i)
    return e;
  for (; e > i; )
    if (t !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
wo.prototype.getLines = function(e, t, i, s) {
  var r, o, l, a, c, u, h, d = e;
  if (e >= t)
    return "";
  for (u = new Array(t - e), r = 0; d < t; d++, r++) {
    for (o = 0, h = a = this.bMarks[d], d + 1 < t || s ? c = this.eMarks[d] + 1 : c = this.eMarks[d]; a < c && o < i; ) {
      if (l = this.src.charCodeAt(a), F0(l))
        l === 9 ? o += 4 - (o + this.bsCount[d]) % 4 : o++;
      else if (a - h < this.tShift[d])
        o++;
      else
        break;
      a++;
    }
    o > i ? u[r] = new Array(o - i + 1).join(" ") + this.src.slice(a, c) : u[r] = this.src.slice(a, c);
  }
  return u.join("");
};
wo.prototype.Token = TD;
var L7e = wo, I7e = ax, Np = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", o7e, ["paragraph", "reference"]],
  ["code", l7e],
  ["fence", a7e, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", u7e, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", d7e, ["paragraph", "reference", "blockquote", "list"]],
  ["list", p7e, ["paragraph", "reference", "blockquote"]],
  ["reference", m7e],
  ["html_block", M7e, ["paragraph", "reference", "blockquote"]],
  ["heading", R7e, ["paragraph", "reference", "blockquote"]],
  ["lheading", N7e],
  ["paragraph", D7e]
];
function Z0() {
  this.ruler = new I7e();
  for (var n = 0; n < Np.length; n++)
    this.ruler.push(Np[n][0], Np[n][1], { alt: (Np[n][2] || []).slice() });
}
Z0.prototype.tokenize = function(n, e, t) {
  for (var i, s, r, o = this.ruler.getRules(""), l = o.length, a = e, c = !1, u = n.md.options.maxNesting; a < t && (n.line = a = n.skipEmptyLines(a), !(a >= t || n.sCount[a] < n.blkIndent)); ) {
    if (n.level >= u) {
      n.line = t;
      break;
    }
    for (r = n.line, s = 0; s < l; s++)
      if (i = o[s](n, a, t, !1), i) {
        if (r >= n.line)
          throw new Error("block rule didn't increment state.line");
        break;
      }
    if (!i)
      throw new Error("none of the block rules matched");
    n.tight = !c, n.isEmpty(n.line - 1) && (c = !0), a = n.line, a < t && n.isEmpty(a) && (c = !0, a++, n.line = a);
  }
};
Z0.prototype.parse = function(n, e, t, i) {
  var s;
  n && (s = new this.State(n, e, t, i), this.tokenize(s, s.line, s.lineMax));
};
Z0.prototype.State = L7e;
var B7e = Z0;
function Q7e(n) {
  switch (n) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
var z7e = function(e, t) {
  for (var i = e.pos; i < e.posMax && !Q7e(e.src.charCodeAt(i)); )
    i++;
  return i === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, i)), e.pos = i, !0);
}, j7e = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i, V7e = function(e, t) {
  var i, s, r, o, l, a, c, u;
  return !e.md.options.linkify || e.linkLevel > 0 || (i = e.pos, s = e.posMax, i + 3 > s) || e.src.charCodeAt(i) !== 58 || e.src.charCodeAt(i + 1) !== 47 || e.src.charCodeAt(i + 2) !== 47 || (r = e.pending.match(j7e), !r) || (o = r[1], l = e.md.linkify.matchAtStart(e.src.slice(i - o.length)), !l) || (a = l.url, a.length <= o.length) || (a = a.replace(/\*+$/, ""), c = e.md.normalizeLink(a), !e.md.validateLink(c)) ? !1 : (t || (e.pending = e.pending.slice(0, -o.length), u = e.push("link_open", "a", 1), u.attrs = [["href", c]], u.markup = "linkify", u.info = "auto", u = e.push("text", "", 0), u.content = e.md.normalizeLinkText(a), u = e.push("link_close", "a", -1), u.markup = "linkify", u.info = "auto"), e.pos += a.length - o.length, !0);
}, F7e = Nt.isSpace, Z7e = function(e, t) {
  var i, s, r, o = e.pos;
  if (e.src.charCodeAt(o) !== 10)
    return !1;
  if (i = e.pending.length - 1, s = e.posMax, !t)
    if (i >= 0 && e.pending.charCodeAt(i) === 32)
      if (i >= 1 && e.pending.charCodeAt(i - 1) === 32) {
        for (r = i - 1; r >= 1 && e.pending.charCodeAt(r - 1) === 32; )
          r--;
        e.pending = e.pending.slice(0, r), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (o++; o < s && F7e(e.src.charCodeAt(o)); )
    o++;
  return e.pos = o, !0;
}, q7e = Nt.isSpace, hx = [];
for (var VP = 0; VP < 256; VP++)
  hx.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(n) {
  hx[n.charCodeAt(0)] = 1;
});
var W7e = function(e, t) {
  var i, s, r, o, l, a = e.pos, c = e.posMax;
  if (e.src.charCodeAt(a) !== 92 || (a++, a >= c))
    return !1;
  if (i = e.src.charCodeAt(a), i === 10) {
    for (t || e.push("hardbreak", "br", 0), a++; a < c && (i = e.src.charCodeAt(a), !!q7e(i)); )
      a++;
    return e.pos = a, !0;
  }
  return o = e.src[a], i >= 55296 && i <= 56319 && a + 1 < c && (s = e.src.charCodeAt(a + 1), s >= 56320 && s <= 57343 && (o += e.src[a + 1], a++)), r = "\\" + o, t || (l = e.push("text_special", "", 0), i < 256 && hx[i] !== 0 ? l.content = o : l.content = r, l.markup = r, l.info = "escape"), e.pos = a + 1, !0;
}, H7e = function(e, t) {
  var i, s, r, o, l, a, c, u, h = e.pos, d = e.src.charCodeAt(h);
  if (d !== 96)
    return !1;
  for (i = h, h++, s = e.posMax; h < s && e.src.charCodeAt(h) === 96; )
    h++;
  if (r = e.src.slice(i, h), c = r.length, e.backticksScanned && (e.backticks[c] || 0) <= i)
    return t || (e.pending += r), e.pos += c, !0;
  for (a = h; (l = e.src.indexOf("`", a)) !== -1; ) {
    for (a = l + 1; a < s && e.src.charCodeAt(a) === 96; )
      a++;
    if (u = a - l, u === c)
      return t || (o = e.push("code_inline", "code", 0), o.markup = r, o.content = e.src.slice(h, l).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e.pos = a, !0;
    e.backticks[u] = l;
  }
  return e.backticksScanned = !0, t || (e.pending += r), e.pos += c, !0;
}, q0 = {};
q0.tokenize = function(e, t) {
  var i, s, r, o, l, a = e.pos, c = e.src.charCodeAt(a);
  if (t || c !== 126 || (s = e.scanDelims(e.pos, !0), o = s.length, l = String.fromCharCode(c), o < 2))
    return !1;
  for (o % 2 && (r = e.push("text", "", 0), r.content = l, o--), i = 0; i < o; i += 2)
    r = e.push("text", "", 0), r.content = l + l, e.delimiters.push({
      marker: c,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: s.can_open,
      close: s.can_close
    });
  return e.pos += s.length, !0;
};
function FP(n, e) {
  var t, i, s, r, o, l = [], a = e.length;
  for (t = 0; t < a; t++)
    s = e[t], s.marker === 126 && s.end !== -1 && (r = e[s.end], o = n.tokens[s.token], o.type = "s_open", o.tag = "s", o.nesting = 1, o.markup = "~~", o.content = "", o = n.tokens[r.token], o.type = "s_close", o.tag = "s", o.nesting = -1, o.markup = "~~", o.content = "", n.tokens[r.token - 1].type === "text" && n.tokens[r.token - 1].content === "~" && l.push(r.token - 1));
  for (; l.length; ) {
    for (t = l.pop(), i = t + 1; i < n.tokens.length && n.tokens[i].type === "s_close"; )
      i++;
    i--, t !== i && (o = n.tokens[i], n.tokens[i] = n.tokens[t], n.tokens[t] = o);
  }
}
q0.postProcess = function(e) {
  var t, i = e.tokens_meta, s = e.tokens_meta.length;
  for (FP(e, e.delimiters), t = 0; t < s; t++)
    i[t] && i[t].delimiters && FP(e, i[t].delimiters);
};
var W0 = {};
W0.tokenize = function(e, t) {
  var i, s, r, o = e.pos, l = e.src.charCodeAt(o);
  if (t || l !== 95 && l !== 42)
    return !1;
  for (s = e.scanDelims(e.pos, l === 42), i = 0; i < s.length; i++)
    r = e.push("text", "", 0), r.content = String.fromCharCode(l), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: l,
      // Total length of these series of delimiters.
      //
      length: s.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: s.can_open,
      close: s.can_close
    });
  return e.pos += s.length, !0;
};
function ZP(n, e) {
  var t, i, s, r, o, l, a = e.length;
  for (t = a - 1; t >= 0; t--)
    i = e[t], !(i.marker !== 95 && i.marker !== 42) && i.end !== -1 && (s = e[i.end], l = t > 0 && e[t - 1].end === i.end + 1 && // check that first two markers match and adjacent
    e[t - 1].marker === i.marker && e[t - 1].token === i.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[i.end + 1].token === s.token + 1, o = String.fromCharCode(i.marker), r = n.tokens[i.token], r.type = l ? "strong_open" : "em_open", r.tag = l ? "strong" : "em", r.nesting = 1, r.markup = l ? o + o : o, r.content = "", r = n.tokens[s.token], r.type = l ? "strong_close" : "em_close", r.tag = l ? "strong" : "em", r.nesting = -1, r.markup = l ? o + o : o, r.content = "", l && (n.tokens[e[t - 1].token].content = "", n.tokens[e[i.end + 1].token].content = "", t--));
}
W0.postProcess = function(e) {
  var t, i = e.tokens_meta, s = e.tokens_meta.length;
  for (ZP(e, e.delimiters), t = 0; t < s; t++)
    i[t] && i[t].delimiters && ZP(e, i[t].delimiters);
};
var X7e = Nt.normalizeReference, ab = Nt.isSpace, Y7e = function(e, t) {
  var i, s, r, o, l, a, c, u, h, d = "", f = "", p = e.pos, g = e.posMax, m = e.pos, v = !0;
  if (e.src.charCodeAt(e.pos) !== 91 || (l = e.pos + 1, o = e.md.helpers.parseLinkLabel(e, e.pos, !0), o < 0))
    return !1;
  if (a = o + 1, a < g && e.src.charCodeAt(a) === 40) {
    for (v = !1, a++; a < g && (s = e.src.charCodeAt(a), !(!ab(s) && s !== 10)); a++)
      ;
    if (a >= g)
      return !1;
    if (m = a, c = e.md.helpers.parseLinkDestination(e.src, a, e.posMax), c.ok) {
      for (d = e.md.normalizeLink(c.str), e.md.validateLink(d) ? a = c.pos : d = "", m = a; a < g && (s = e.src.charCodeAt(a), !(!ab(s) && s !== 10)); a++)
        ;
      if (c = e.md.helpers.parseLinkTitle(e.src, a, e.posMax), a < g && m !== a && c.ok)
        for (f = c.str, a = c.pos; a < g && (s = e.src.charCodeAt(a), !(!ab(s) && s !== 10)); a++)
          ;
    }
    (a >= g || e.src.charCodeAt(a) !== 41) && (v = !0), a++;
  }
  if (v) {
    if (typeof e.env.references > "u")
      return !1;
    if (a < g && e.src.charCodeAt(a) === 91 ? (m = a + 1, a = e.md.helpers.parseLinkLabel(e, a), a >= 0 ? r = e.src.slice(m, a++) : a = o + 1) : a = o + 1, r || (r = e.src.slice(l, o)), u = e.env.references[X7e(r)], !u)
      return e.pos = p, !1;
    d = u.href, f = u.title;
  }
  return t || (e.pos = l, e.posMax = o, h = e.push("link_open", "a", 1), h.attrs = i = [["href", d]], f && i.push(["title", f]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, h = e.push("link_close", "a", -1)), e.pos = a, e.posMax = g, !0;
}, U7e = Nt.normalizeReference, cb = Nt.isSpace, G7e = function(e, t) {
  var i, s, r, o, l, a, c, u, h, d, f, p, g, m = "", v = e.pos, O = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91 || (a = e.pos + 2, l = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1), l < 0))
    return !1;
  if (c = l + 1, c < O && e.src.charCodeAt(c) === 40) {
    for (c++; c < O && (s = e.src.charCodeAt(c), !(!cb(s) && s !== 10)); c++)
      ;
    if (c >= O)
      return !1;
    for (g = c, h = e.md.helpers.parseLinkDestination(e.src, c, e.posMax), h.ok && (m = e.md.normalizeLink(h.str), e.md.validateLink(m) ? c = h.pos : m = ""), g = c; c < O && (s = e.src.charCodeAt(c), !(!cb(s) && s !== 10)); c++)
      ;
    if (h = e.md.helpers.parseLinkTitle(e.src, c, e.posMax), c < O && g !== c && h.ok)
      for (d = h.str, c = h.pos; c < O && (s = e.src.charCodeAt(c), !(!cb(s) && s !== 10)); c++)
        ;
    else
      d = "";
    if (c >= O || e.src.charCodeAt(c) !== 41)
      return e.pos = v, !1;
    c++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (c < O && e.src.charCodeAt(c) === 91 ? (g = c + 1, c = e.md.helpers.parseLinkLabel(e, c), c >= 0 ? o = e.src.slice(g, c++) : c = l + 1) : c = l + 1, o || (o = e.src.slice(a, l)), u = e.env.references[U7e(o)], !u)
      return e.pos = v, !1;
    m = u.href, d = u.title;
  }
  return t || (r = e.src.slice(a, l), e.md.inline.parse(
    r,
    e.md,
    e.env,
    p = []
  ), f = e.push("image", "img", 0), f.attrs = i = [["src", m], ["alt", ""]], f.children = p, f.content = r, d && i.push(["title", d])), e.pos = c, e.posMax = O, !0;
}, K7e = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, J7e = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, e9e = function(e, t) {
  var i, s, r, o, l, a, c = e.pos;
  if (e.src.charCodeAt(c) !== 60)
    return !1;
  for (l = e.pos, a = e.posMax; ; ) {
    if (++c >= a || (o = e.src.charCodeAt(c), o === 60))
      return !1;
    if (o === 62)
      break;
  }
  return i = e.src.slice(l + 1, c), J7e.test(i) ? (s = e.md.normalizeLink(i), e.md.validateLink(s) ? (t || (r = e.push("link_open", "a", 1), r.attrs = [["href", s]], r.markup = "autolink", r.info = "auto", r = e.push("text", "", 0), r.content = e.md.normalizeLinkText(i), r = e.push("link_close", "a", -1), r.markup = "autolink", r.info = "auto"), e.pos += i.length + 2, !0) : !1) : K7e.test(i) ? (s = e.md.normalizeLink("mailto:" + i), e.md.validateLink(s) ? (t || (r = e.push("link_open", "a", 1), r.attrs = [["href", s]], r.markup = "autolink", r.info = "auto", r = e.push("text", "", 0), r.content = e.md.normalizeLinkText(i), r = e.push("link_close", "a", -1), r.markup = "autolink", r.info = "auto"), e.pos += i.length + 2, !0) : !1) : !1;
}, t9e = V0.HTML_TAG_RE;
function n9e(n) {
  return /^<a[>\s]/i.test(n);
}
function i9e(n) {
  return /^<\/a\s*>/i.test(n);
}
function s9e(n) {
  var e = n | 32;
  return e >= 97 && e <= 122;
}
var r9e = function(e, t) {
  var i, s, r, o, l = e.pos;
  return !e.md.options.html || (r = e.posMax, e.src.charCodeAt(l) !== 60 || l + 2 >= r) || (i = e.src.charCodeAt(l + 1), i !== 33 && i !== 63 && i !== 47 && !s9e(i)) || (s = e.src.slice(l).match(t9e), !s) ? !1 : (t || (o = e.push("html_inline", "", 0), o.content = s[0], n9e(o.content) && e.linkLevel++, i9e(o.content) && e.linkLevel--), e.pos += s[0].length, !0);
}, qP = wD, o9e = Nt.has, l9e = Nt.isValidEntityCode, WP = Nt.fromCodePoint, a9e = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, c9e = /^&([a-z][a-z0-9]{1,31});/i, u9e = function(e, t) {
  var i, s, r, o, l = e.pos, a = e.posMax;
  if (e.src.charCodeAt(l) !== 38 || l + 1 >= a)
    return !1;
  if (i = e.src.charCodeAt(l + 1), i === 35) {
    if (r = e.src.slice(l).match(a9e), r)
      return t || (s = r[1][0].toLowerCase() === "x" ? parseInt(r[1].slice(1), 16) : parseInt(r[1], 10), o = e.push("text_special", "", 0), o.content = l9e(s) ? WP(s) : WP(65533), o.markup = r[0], o.info = "entity"), e.pos += r[0].length, !0;
  } else if (r = e.src.slice(l).match(c9e), r && o9e(qP, r[1]))
    return t || (o = e.push("text_special", "", 0), o.content = qP[r[1]], o.markup = r[0], o.info = "entity"), e.pos += r[0].length, !0;
  return !1;
};
function HP(n) {
  var e, t, i, s, r, o, l, a, c = {}, u = n.length;
  if (u) {
    var h = 0, d = -2, f = [];
    for (e = 0; e < u; e++)
      if (i = n[e], f.push(0), (n[h].marker !== i.marker || d !== i.token - 1) && (h = e), d = i.token, i.length = i.length || 0, !!i.close) {
        for (c.hasOwnProperty(i.marker) || (c[i.marker] = [-1, -1, -1, -1, -1, -1]), r = c[i.marker][(i.open ? 3 : 0) + i.length % 3], t = h - f[h] - 1, o = t; t > r; t -= f[t] + 1)
          if (s = n[t], s.marker === i.marker && s.open && s.end < 0 && (l = !1, (s.close || i.open) && (s.length + i.length) % 3 === 0 && (s.length % 3 !== 0 || i.length % 3 !== 0) && (l = !0), !l)) {
            a = t > 0 && !n[t - 1].open ? f[t - 1] + 1 : 0, f[e] = e - t + a, f[t] = a, i.open = !1, s.end = e, s.close = !1, o = -1, d = -2;
            break;
          }
        o !== -1 && (c[i.marker][(i.open ? 3 : 0) + (i.length || 0) % 3] = o);
      }
  }
}
var h9e = function(e) {
  var t, i = e.tokens_meta, s = e.tokens_meta.length;
  for (HP(e.delimiters), t = 0; t < s; t++)
    i[t] && i[t].delimiters && HP(i[t].delimiters);
}, d9e = function(e) {
  var t, i, s = 0, r = e.tokens, o = e.tokens.length;
  for (t = i = 0; t < o; t++)
    r[t].nesting < 0 && s--, r[t].level = s, r[t].nesting > 0 && s++, r[t].type === "text" && t + 1 < o && r[t + 1].type === "text" ? r[t + 1].content = r[t].content + r[t + 1].content : (t !== i && (r[i] = r[t]), i++);
  t !== i && (r.length = i);
}, dx = cx, XP = Nt.isWhiteSpace, YP = Nt.isPunctChar, UP = Nt.isMdAsciiPunct;
function Lf(n, e, t, i) {
  this.src = n, this.env = t, this.md = e, this.tokens = i, this.tokens_meta = Array(i.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
Lf.prototype.pushPending = function() {
  var n = new dx("text", "", 0);
  return n.content = this.pending, n.level = this.pendingLevel, this.tokens.push(n), this.pending = "", n;
};
Lf.prototype.push = function(n, e, t) {
  this.pending && this.pushPending();
  var i = new dx(n, e, t), s = null;
  return t < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), i.level = this.level, t > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], s = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(i), this.tokens_meta.push(s), i;
};
Lf.prototype.scanDelims = function(n, e) {
  var t = n, i, s, r, o, l, a, c, u, h, d = !0, f = !0, p = this.posMax, g = this.src.charCodeAt(n);
  for (i = n > 0 ? this.src.charCodeAt(n - 1) : 32; t < p && this.src.charCodeAt(t) === g; )
    t++;
  return r = t - n, s = t < p ? this.src.charCodeAt(t) : 32, c = UP(i) || YP(String.fromCharCode(i)), h = UP(s) || YP(String.fromCharCode(s)), a = XP(i), u = XP(s), u ? d = !1 : h && (a || c || (d = !1)), a ? f = !1 : c && (u || h || (f = !1)), e ? (o = d, l = f) : (o = d && (!f || c), l = f && (!d || h)), {
    can_open: o,
    can_close: l,
    length: r
  };
};
Lf.prototype.Token = dx;
var f9e = Lf, GP = ax, ub = [
  ["text", z7e],
  ["linkify", V7e],
  ["newline", Z7e],
  ["escape", W7e],
  ["backticks", H7e],
  ["strikethrough", q0.tokenize],
  ["emphasis", W0.tokenize],
  ["link", Y7e],
  ["image", G7e],
  ["autolink", e9e],
  ["html_inline", r9e],
  ["entity", u9e]
], hb = [
  ["balance_pairs", h9e],
  ["strikethrough", q0.postProcess],
  ["emphasis", W0.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", d9e]
];
function If() {
  var n;
  for (this.ruler = new GP(), n = 0; n < ub.length; n++)
    this.ruler.push(ub[n][0], ub[n][1]);
  for (this.ruler2 = new GP(), n = 0; n < hb.length; n++)
    this.ruler2.push(hb[n][0], hb[n][1]);
}
If.prototype.skipToken = function(n) {
  var e, t, i = n.pos, s = this.ruler.getRules(""), r = s.length, o = n.md.options.maxNesting, l = n.cache;
  if (typeof l[i] < "u") {
    n.pos = l[i];
    return;
  }
  if (n.level < o) {
    for (t = 0; t < r; t++)
      if (n.level++, e = s[t](n, !0), n.level--, e) {
        if (i >= n.pos)
          throw new Error("inline rule didn't increment state.pos");
        break;
      }
  } else
    n.pos = n.posMax;
  e || n.pos++, l[i] = n.pos;
};
If.prototype.tokenize = function(n) {
  for (var e, t, i, s = this.ruler.getRules(""), r = s.length, o = n.posMax, l = n.md.options.maxNesting; n.pos < o; ) {
    if (i = n.pos, n.level < l) {
      for (t = 0; t < r; t++)
        if (e = s[t](n, !1), e) {
          if (i >= n.pos)
            throw new Error("inline rule didn't increment state.pos");
          break;
        }
    }
    if (e) {
      if (n.pos >= o)
        break;
      continue;
    }
    n.pending += n.src[n.pos++];
  }
  n.pending && n.pushPending();
};
If.prototype.parse = function(n, e, t, i) {
  var s, r, o, l = new this.State(n, e, t, i);
  for (this.tokenize(l), r = this.ruler2.getRules(""), o = r.length, s = 0; s < o; s++)
    r[s](l);
};
If.prototype.State = f9e;
var p9e = If, db, KP;
function g9e() {
  return KP || (KP = 1, db = function(n) {
    var e = {};
    n = n || {}, e.src_Any = xD().source, e.src_Cc = SD().source, e.src_Z = CD().source, e.src_P = lx.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
    var t = "[><｜]";
    return e.src_pseudo_letter = "(?:(?!" + t + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + t + "|" + e.src_ZPCc + ")(?!" + (n["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + t + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (n["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
    "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + t + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
  }), db;
}
function BO(n) {
  var e = Array.prototype.slice.call(arguments, 1);
  return e.forEach(function(t) {
    t && Object.keys(t).forEach(function(i) {
      n[i] = t[i];
    });
  }), n;
}
function H0(n) {
  return Object.prototype.toString.call(n);
}
function m9e(n) {
  return H0(n) === "[object String]";
}
function v9e(n) {
  return H0(n) === "[object Object]";
}
function b9e(n) {
  return H0(n) === "[object RegExp]";
}
function JP(n) {
  return H0(n) === "[object Function]";
}
function y9e(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var _D = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function O9e(n) {
  return Object.keys(n || {}).reduce(function(e, t) {
    return e || _D.hasOwnProperty(t);
  }, !1);
}
var w9e = {
  "http:": {
    validate: function(n, e, t) {
      var i = n.slice(e);
      return t.re.http || (t.re.http = new RegExp(
        "^\\/\\/" + t.re.src_auth + t.re.src_host_port_strict + t.re.src_path,
        "i"
      )), t.re.http.test(i) ? i.match(t.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(n, e, t) {
      var i = n.slice(e);
      return t.re.no_http || (t.re.no_http = new RegExp(
        "^" + t.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + t.re.src_domain + ")\\.)+" + t.re.src_domain_root + ")" + t.re.src_port + t.re.src_host_terminator + t.re.src_path,
        "i"
      )), t.re.no_http.test(i) ? e >= 3 && n[e - 3] === ":" || e >= 3 && n[e - 3] === "/" ? 0 : i.match(t.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(n, e, t) {
      var i = n.slice(e);
      return t.re.mailto || (t.re.mailto = new RegExp(
        "^" + t.re.src_email_name + "@" + t.re.src_host_strict,
        "i"
      )), t.re.mailto.test(i) ? i.match(t.re.mailto)[0].length : 0;
    }
  }
}, x9e = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", S9e = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function C9e(n) {
  n.__index__ = -1, n.__text_cache__ = "";
}
function k9e(n) {
  return function(e, t) {
    var i = e.slice(t);
    return n.test(i) ? i.match(n)[0].length : 0;
  };
}
function eE() {
  return function(n, e) {
    e.normalize(n);
  };
}
function _m(n) {
  var e = n.re = g9e()(n.__opts__), t = n.__tlds__.slice();
  n.onCompile(), n.__tlds_replaced__ || t.push(x9e), t.push(e.src_xn), e.src_tlds = t.join("|");
  function i(l) {
    return l.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(i(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(i(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(i(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(i(e.tpl_host_fuzzy_test), "i");
  var s = [];
  n.__compiled__ = {};
  function r(l, a) {
    throw new Error('(LinkifyIt) Invalid schema "' + l + '": ' + a);
  }
  Object.keys(n.__schemas__).forEach(function(l) {
    var a = n.__schemas__[l];
    if (a !== null) {
      var c = { validate: null, link: null };
      if (n.__compiled__[l] = c, v9e(a)) {
        b9e(a.validate) ? c.validate = k9e(a.validate) : JP(a.validate) ? c.validate = a.validate : r(l, a), JP(a.normalize) ? c.normalize = a.normalize : a.normalize ? r(l, a) : c.normalize = eE();
        return;
      }
      if (m9e(a)) {
        s.push(l);
        return;
      }
      r(l, a);
    }
  }), s.forEach(function(l) {
    n.__compiled__[n.__schemas__[l]] && (n.__compiled__[l].validate = n.__compiled__[n.__schemas__[l]].validate, n.__compiled__[l].normalize = n.__compiled__[n.__schemas__[l]].normalize);
  }), n.__compiled__[""] = { validate: null, normalize: eE() };
  var o = Object.keys(n.__compiled__).filter(function(l) {
    return l.length > 0 && n.__compiled__[l];
  }).map(y9e).join("|");
  n.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + o + ")", "i"), n.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + o + ")", "ig"), n.re.schema_at_start = RegExp("^" + n.re.schema_search.source, "i"), n.re.pretest = RegExp(
    "(" + n.re.schema_test.source + ")|(" + n.re.host_fuzzy_test.source + ")|@",
    "i"
  ), C9e(n);
}
function P9e(n, e) {
  var t = n.__index__, i = n.__last_index__, s = n.__text_cache__.slice(t, i);
  this.schema = n.__schema__.toLowerCase(), this.index = t + e, this.lastIndex = i + e, this.raw = s, this.text = s, this.url = s;
}
function QO(n, e) {
  var t = new P9e(n, e);
  return n.__compiled__[t.schema].normalize(t, n), t;
}
function $s(n, e) {
  if (!(this instanceof $s))
    return new $s(n, e);
  e || O9e(n) && (e = n, n = {}), this.__opts__ = BO({}, _D, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = BO({}, w9e, n), this.__compiled__ = {}, this.__tlds__ = S9e, this.__tlds_replaced__ = !1, this.re = {}, _m(this);
}
$s.prototype.add = function(e, t) {
  return this.__schemas__[e] = t, _m(this), this;
};
$s.prototype.set = function(e) {
  return this.__opts__ = BO(this.__opts__, e), this;
};
$s.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  var t, i, s, r, o, l, a, c, u;
  if (this.re.schema_test.test(e)) {
    for (a = this.re.schema_search, a.lastIndex = 0; (t = a.exec(e)) !== null; )
      if (r = this.testSchemaAt(e, t[2], a.lastIndex), r) {
        this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + r;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (c = e.search(this.re.host_fuzzy_test), c >= 0 && (this.__index__ < 0 || c < this.__index__) && (i = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (o = i.index + i[1].length, (this.__index__ < 0 || o < this.__index__) && (this.__schema__ = "", this.__index__ = o, this.__last_index__ = i.index + i[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (u = e.indexOf("@"), u >= 0 && (s = e.match(this.re.email_fuzzy)) !== null && (o = s.index + s[1].length, l = s.index + s[0].length, (this.__index__ < 0 || o < this.__index__ || o === this.__index__ && l > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = o, this.__last_index__ = l))), this.__index__ >= 0;
};
$s.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
$s.prototype.testSchemaAt = function(e, t, i) {
  return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, i, this) : 0;
};
$s.prototype.match = function(e) {
  var t = 0, i = [];
  this.__index__ >= 0 && this.__text_cache__ === e && (i.push(QO(this, t)), t = this.__last_index__);
  for (var s = t ? e.slice(t) : e; this.test(s); )
    i.push(QO(this, t)), s = s.slice(this.__last_index__), t += this.__last_index__;
  return i.length ? i : null;
};
$s.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return null;
  var t = this.re.schema_at_start.exec(e);
  if (!t)
    return null;
  var i = this.testSchemaAt(e, t[2], t[0].length);
  return i ? (this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + i, QO(this, 0)) : null;
};
$s.prototype.tlds = function(e, t) {
  return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(i, s, r) {
    return i !== r[s - 1];
  }).reverse(), _m(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, _m(this), this);
};
$s.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
$s.prototype.onCompile = function() {
};
var E9e = $s;
const Hc = 2147483647, Jr = 36, fx = 1, rf = 26, A9e = 38, $9e = 700, MD = 72, RD = 128, ND = "-", T9e = /^xn--/, _9e = /[^\0-\x7F]/, M9e = /[\x2E\u3002\uFF0E\uFF61]/g, R9e = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, fb = Jr - fx, eo = Math.floor, pb = String.fromCharCode;
function dl(n) {
  throw new RangeError(R9e[n]);
}
function N9e(n, e) {
  const t = [];
  let i = n.length;
  for (; i--; )
    t[i] = e(n[i]);
  return t;
}
function DD(n, e) {
  const t = n.split("@");
  let i = "";
  t.length > 1 && (i = t[0] + "@", n = t[1]), n = n.replace(M9e, ".");
  const s = n.split("."), r = N9e(s, e).join(".");
  return i + r;
}
function px(n) {
  const e = [];
  let t = 0;
  const i = n.length;
  for (; t < i; ) {
    const s = n.charCodeAt(t++);
    if (s >= 55296 && s <= 56319 && t < i) {
      const r = n.charCodeAt(t++);
      (r & 64512) == 56320 ? e.push(((s & 1023) << 10) + (r & 1023) + 65536) : (e.push(s), t--);
    } else
      e.push(s);
  }
  return e;
}
const LD = (n) => String.fromCodePoint(...n), D9e = function(n) {
  return n >= 48 && n < 58 ? 26 + (n - 48) : n >= 65 && n < 91 ? n - 65 : n >= 97 && n < 123 ? n - 97 : Jr;
}, tE = function(n, e) {
  return n + 22 + 75 * (n < 26) - ((e != 0) << 5);
}, ID = function(n, e, t) {
  let i = 0;
  for (n = t ? eo(n / $9e) : n >> 1, n += eo(n / e); n > fb * rf >> 1; i += Jr)
    n = eo(n / fb);
  return eo(i + (fb + 1) * n / (n + A9e));
}, gx = function(n) {
  const e = [], t = n.length;
  let i = 0, s = RD, r = MD, o = n.lastIndexOf(ND);
  o < 0 && (o = 0);
  for (let l = 0; l < o; ++l)
    n.charCodeAt(l) >= 128 && dl("not-basic"), e.push(n.charCodeAt(l));
  for (let l = o > 0 ? o + 1 : 0; l < t; ) {
    const a = i;
    for (let u = 1, h = Jr; ; h += Jr) {
      l >= t && dl("invalid-input");
      const d = D9e(n.charCodeAt(l++));
      d >= Jr && dl("invalid-input"), d > eo((Hc - i) / u) && dl("overflow"), i += d * u;
      const f = h <= r ? fx : h >= r + rf ? rf : h - r;
      if (d < f)
        break;
      const p = Jr - f;
      u > eo(Hc / p) && dl("overflow"), u *= p;
    }
    const c = e.length + 1;
    r = ID(i - a, c, a == 0), eo(i / c) > Hc - s && dl("overflow"), s += eo(i / c), i %= c, e.splice(i++, 0, s);
  }
  return String.fromCodePoint(...e);
}, mx = function(n) {
  const e = [];
  n = px(n);
  const t = n.length;
  let i = RD, s = 0, r = MD;
  for (const a of n)
    a < 128 && e.push(pb(a));
  const o = e.length;
  let l = o;
  for (o && e.push(ND); l < t; ) {
    let a = Hc;
    for (const u of n)
      u >= i && u < a && (a = u);
    const c = l + 1;
    a - i > eo((Hc - s) / c) && dl("overflow"), s += (a - i) * c, i = a;
    for (const u of n)
      if (u < i && ++s > Hc && dl("overflow"), u === i) {
        let h = s;
        for (let d = Jr; ; d += Jr) {
          const f = d <= r ? fx : d >= r + rf ? rf : d - r;
          if (h < f)
            break;
          const p = h - f, g = Jr - f;
          e.push(
            pb(tE(f + p % g, 0))
          ), h = eo(p / g);
        }
        e.push(pb(tE(h, 0))), r = ID(s, c, l === o), s = 0, ++l;
      }
    ++s, ++i;
  }
  return e.join("");
}, BD = function(n) {
  return DD(n, function(e) {
    return T9e.test(e) ? gx(e.slice(4).toLowerCase()) : e;
  });
}, QD = function(n) {
  return DD(n, function(e) {
    return _9e.test(e) ? "xn--" + mx(e) : e;
  });
}, L9e = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.3.1",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: px,
    encode: LD
  },
  decode: gx,
  encode: mx,
  toASCII: QD,
  toUnicode: BD
}, I9e = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: gx,
  default: L9e,
  encode: mx,
  toASCII: QD,
  toUnicode: BD,
  ucs2decode: px,
  ucs2encode: LD
}, Symbol.toStringTag, { value: "Module" })), B9e = /* @__PURE__ */ v9(I9e);
var Q9e = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 100
    // Internal protection, recursion limit
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, z9e = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, j9e = {
  options: {
    html: !0,
    // Enable HTML tags in source
    xhtmlOut: !0,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, hd = Nt, V9e = j0, F9e = Dqe, Z9e = r7e, q9e = B7e, W9e = p9e, H9e = E9e, Ca = fh, zD = B9e, X9e = {
  default: Q9e,
  zero: z9e,
  commonmark: j9e
}, Y9e = /^(vbscript|javascript|file|data):/, U9e = /^data:image\/(gif|png|jpeg|webp);/;
function G9e(n) {
  var e = n.trim().toLowerCase();
  return Y9e.test(e) ? !!U9e.test(e) : !0;
}
var jD = ["http:", "https:", "mailto:"];
function K9e(n) {
  var e = Ca.parse(n, !0);
  if (e.hostname && (!e.protocol || jD.indexOf(e.protocol) >= 0))
    try {
      e.hostname = zD.toASCII(e.hostname);
    } catch {
    }
  return Ca.encode(Ca.format(e));
}
function J9e(n) {
  var e = Ca.parse(n, !0);
  if (e.hostname && (!e.protocol || jD.indexOf(e.protocol) >= 0))
    try {
      e.hostname = zD.toUnicode(e.hostname);
    } catch {
    }
  return Ca.decode(Ca.format(e), Ca.decode.defaultChars + "%");
}
function Js(n, e) {
  if (!(this instanceof Js))
    return new Js(n, e);
  e || hd.isString(n) || (e = n || {}, n = "default"), this.inline = new W9e(), this.block = new q9e(), this.core = new Z9e(), this.renderer = new F9e(), this.linkify = new H9e(), this.validateLink = G9e, this.normalizeLink = K9e, this.normalizeLinkText = J9e, this.utils = hd, this.helpers = hd.assign({}, V9e), this.options = {}, this.configure(n), e && this.set(e);
}
Js.prototype.set = function(n) {
  return hd.assign(this.options, n), this;
};
Js.prototype.configure = function(n) {
  var e = this, t;
  if (hd.isString(n) && (t = n, n = X9e[t], !n))
    throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
  if (!n)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return n.options && e.set(n.options), n.components && Object.keys(n.components).forEach(function(i) {
    n.components[i].rules && e[i].ruler.enableOnly(n.components[i].rules), n.components[i].rules2 && e[i].ruler2.enableOnly(n.components[i].rules2);
  }), this;
};
Js.prototype.enable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(s) {
    t = t.concat(this[s].ruler.enable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.enable(n, !0));
  var i = n.filter(function(s) {
    return t.indexOf(s) < 0;
  });
  if (i.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + i);
  return this;
};
Js.prototype.disable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(s) {
    t = t.concat(this[s].ruler.disable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.disable(n, !0));
  var i = n.filter(function(s) {
    return t.indexOf(s) < 0;
  });
  if (i.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + i);
  return this;
};
Js.prototype.use = function(n) {
  var e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return n.apply(n, e), this;
};
Js.prototype.parse = function(n, e) {
  if (typeof n != "string")
    throw new Error("Input data should be a String");
  var t = new this.core.State(n, this, e);
  return this.core.process(t), t.tokens;
};
Js.prototype.render = function(n, e) {
  return e = e || {}, this.renderer.render(this.parse(n, e), this.options, e);
};
Js.prototype.parseInline = function(n, e) {
  var t = new this.core.State(n, this, e);
  return t.inlineMode = !0, this.core.process(t), t.tokens;
};
Js.prototype.renderInline = function(n, e) {
  return e = e || {}, this.renderer.render(this.parseInline(n, e), this.options, e);
};
var eWe = Js, tWe = eWe;
const nWe = /* @__PURE__ */ xf(tWe), nE = /* @__PURE__ */ new Set([!0, !1, "alt", "title"]);
function VD(n, e) {
  return (Array.isArray(n) ? n : []).filter(([t]) => t !== e);
}
function FD(n, e) {
  n && n.attrs && (n.attrs = VD(n.attrs, e));
}
function iWe(n, e) {
  if (!nE.has(n))
    throw new TypeError(`figcaption must be one of: ${[...nE]}.`);
  if (n === "alt")
    return e.content;
  const t = e.attrs.find(([i]) => i === "title");
  return Array.isArray(t) && t[1] ? (FD(e, "title"), t[1]) : void 0;
}
function sWe(n, e) {
  e = e || {}, n.core.ruler.before("linkify", "image_figures", function(t) {
    let i = 1;
    for (let s = 1, r = t.tokens.length; s < r - 1; ++s) {
      const o = t.tokens[s];
      if (o.type !== "inline" || !o.children || o.children.length !== 1 && o.children.length !== 3 || o.children.length === 1 && o.children[0].type !== "image")
        continue;
      if (o.children.length === 3) {
        const [c, u, h] = o.children;
        if (c.type !== "link_open" || u.type !== "image" || h.type !== "link_close")
          continue;
      }
      if (s !== 0 && t.tokens[s - 1].type !== "paragraph_open" || s !== r - 1 && t.tokens[s + 1].type !== "paragraph_close")
        continue;
      const l = t.tokens[s - 1];
      let a;
      if (l.type = "figure_open", l.tag = "figure", t.tokens[s + 1].type = "figure_close", t.tokens[s + 1].tag = "figure", e.dataType && t.tokens[s - 1].attrPush(["data-type", "image"]), e.link && o.children.length === 1) {
        [a] = o.children;
        const c = new t.Token("link_open", "a", 1);
        c.attrPush(["href", a.attrGet("src")]), o.children.unshift(c), o.children.push(new t.Token("link_close", "a", -1));
      }
      if (a = o.children.length === 1 ? o.children[0] : o.children[1], e.figcaption) {
        const c = iWe(e.figcaption, a);
        if (c) {
          const [u] = n.parseInline(c, t.env);
          o.children.push(new t.Token("figcaption_open", "figcaption", 1)), o.children.push(...u.children), o.children.push(new t.Token("figcaption_close", "figcaption", -1)), a.attrs && (a.attrs = VD(a.attrs, "title"));
        }
      }
      if (e.copyAttrs && a.attrs) {
        const c = e.copyAttrs === !0 ? "" : e.copyAttrs;
        l.attrs = a.attrs.filter(([u]) => u.match(c)).map((u) => Array.from(u));
      }
      if (e.tabindex && (t.tokens[s - 1].attrPush(["tabindex", i]), i++), e.lazy && (a.attrs.some(([c]) => c === "loading") || a.attrs.push(["loading", "lazy"])), e.async && (a.attrs.some(([c]) => c === "decoding") || a.attrs.push(["decoding", "async"])), e.classes && typeof e.classes == "string") {
        let c = !1;
        for (let u = 0, h = a.attrs.length; u < h && !c; u++) {
          const d = a.attrs[u];
          d[0] === "class" && (d[1] = `${d[1]} ${e.classes}`, c = !0);
        }
        c || a.attrs.push(["class", e.classes]);
      }
      if (e.removeSrc) {
        const c = a.attrs.find(([u]) => u === "src");
        a.attrs.push(["data-src", c[1]]), FD(a, "src");
      }
    }
  });
}
var zO = !0, ZD = !1, qD = !1, rWe = function(n, e) {
  e && (zO = !e.enabled, ZD = !!e.label, qD = !!e.labelAfter), n.core.ruler.after("inline", "github-task-lists", function(t) {
    for (var i = t.tokens, s = 2; s < i.length; s++)
      lWe(i, s) && (aWe(i[s], t.Token), iE(i[s - 2], "class", "task-list-item" + (zO ? "" : " enabled")), iE(i[oWe(i, s - 2)], "class", "contains-task-list"));
  });
};
function iE(n, e, t) {
  var i = n.attrIndex(e), s = [e, t];
  i < 0 ? n.attrPush(s) : n.attrs[i] = s;
}
function oWe(n, e) {
  for (var t = n[e].level - 1, i = e - 1; i >= 0; i--)
    if (n[i].level === t)
      return i;
  return -1;
}
function lWe(n, e) {
  return fWe(n[e]) && pWe(n[e - 1]) && gWe(n[e - 2]) && mWe(n[e]);
}
function aWe(n, e) {
  if (n.children.unshift(cWe(n, e)), n.children[1].content = n.children[1].content.slice(3), n.content = n.content.slice(3), ZD)
    if (qD) {
      n.children.pop();
      var t = "task-item-" + Math.ceil(Math.random() * (1e4 * 1e3) - 1e3);
      n.children[0].content = n.children[0].content.slice(0, -1) + ' id="' + t + '">', n.children.push(dWe(n.content, t, e));
    } else
      n.children.unshift(uWe(e)), n.children.push(hWe(e));
}
function cWe(n, e) {
  var t = new e("html_inline", "", 0), i = zO ? ' disabled="" ' : "";
  return n.content.indexOf("[ ] ") === 0 ? t.content = '<input class="task-list-item-checkbox"' + i + 'type="checkbox">' : (n.content.indexOf("[x] ") === 0 || n.content.indexOf("[X] ") === 0) && (t.content = '<input class="task-list-item-checkbox" checked=""' + i + 'type="checkbox">'), t;
}
function uWe(n) {
  var e = new n("html_inline", "", 0);
  return e.content = "<label>", e;
}
function hWe(n) {
  var e = new n("html_inline", "", 0);
  return e.content = "</label>", e;
}
function dWe(n, e, t) {
  var i = new t("html_inline", "", 0);
  return i.content = '<label class="task-list-item-label" for="' + e + '">' + n + "</label>", i.attrs = [{ for: e }], i;
}
function fWe(n) {
  return n.type === "inline";
}
function pWe(n) {
  return n.type === "paragraph_open";
}
function gWe(n) {
  return n.type === "list_item_open";
}
function mWe(n) {
  return n.content.indexOf("[ ] ") === 0 || n.content.indexOf("[x] ") === 0 || n.content.indexOf("[X] ") === 0;
}
const vWe = /* @__PURE__ */ xf(rWe);
var jO = { exports: {} }, vn = {}, VO = { exports: {} }, rc = {};
function WD() {
  var n = {};
  return n["align-content"] = !1, n["align-items"] = !1, n["align-self"] = !1, n["alignment-adjust"] = !1, n["alignment-baseline"] = !1, n.all = !1, n["anchor-point"] = !1, n.animation = !1, n["animation-delay"] = !1, n["animation-direction"] = !1, n["animation-duration"] = !1, n["animation-fill-mode"] = !1, n["animation-iteration-count"] = !1, n["animation-name"] = !1, n["animation-play-state"] = !1, n["animation-timing-function"] = !1, n.azimuth = !1, n["backface-visibility"] = !1, n.background = !0, n["background-attachment"] = !0, n["background-clip"] = !0, n["background-color"] = !0, n["background-image"] = !0, n["background-origin"] = !0, n["background-position"] = !0, n["background-repeat"] = !0, n["background-size"] = !0, n["baseline-shift"] = !1, n.binding = !1, n.bleed = !1, n["bookmark-label"] = !1, n["bookmark-level"] = !1, n["bookmark-state"] = !1, n.border = !0, n["border-bottom"] = !0, n["border-bottom-color"] = !0, n["border-bottom-left-radius"] = !0, n["border-bottom-right-radius"] = !0, n["border-bottom-style"] = !0, n["border-bottom-width"] = !0, n["border-collapse"] = !0, n["border-color"] = !0, n["border-image"] = !0, n["border-image-outset"] = !0, n["border-image-repeat"] = !0, n["border-image-slice"] = !0, n["border-image-source"] = !0, n["border-image-width"] = !0, n["border-left"] = !0, n["border-left-color"] = !0, n["border-left-style"] = !0, n["border-left-width"] = !0, n["border-radius"] = !0, n["border-right"] = !0, n["border-right-color"] = !0, n["border-right-style"] = !0, n["border-right-width"] = !0, n["border-spacing"] = !0, n["border-style"] = !0, n["border-top"] = !0, n["border-top-color"] = !0, n["border-top-left-radius"] = !0, n["border-top-right-radius"] = !0, n["border-top-style"] = !0, n["border-top-width"] = !0, n["border-width"] = !0, n.bottom = !1, n["box-decoration-break"] = !0, n["box-shadow"] = !0, n["box-sizing"] = !0, n["box-snap"] = !0, n["box-suppress"] = !0, n["break-after"] = !0, n["break-before"] = !0, n["break-inside"] = !0, n["caption-side"] = !1, n.chains = !1, n.clear = !0, n.clip = !1, n["clip-path"] = !1, n["clip-rule"] = !1, n.color = !0, n["color-interpolation-filters"] = !0, n["column-count"] = !1, n["column-fill"] = !1, n["column-gap"] = !1, n["column-rule"] = !1, n["column-rule-color"] = !1, n["column-rule-style"] = !1, n["column-rule-width"] = !1, n["column-span"] = !1, n["column-width"] = !1, n.columns = !1, n.contain = !1, n.content = !1, n["counter-increment"] = !1, n["counter-reset"] = !1, n["counter-set"] = !1, n.crop = !1, n.cue = !1, n["cue-after"] = !1, n["cue-before"] = !1, n.cursor = !1, n.direction = !1, n.display = !0, n["display-inside"] = !0, n["display-list"] = !0, n["display-outside"] = !0, n["dominant-baseline"] = !1, n.elevation = !1, n["empty-cells"] = !1, n.filter = !1, n.flex = !1, n["flex-basis"] = !1, n["flex-direction"] = !1, n["flex-flow"] = !1, n["flex-grow"] = !1, n["flex-shrink"] = !1, n["flex-wrap"] = !1, n.float = !1, n["float-offset"] = !1, n["flood-color"] = !1, n["flood-opacity"] = !1, n["flow-from"] = !1, n["flow-into"] = !1, n.font = !0, n["font-family"] = !0, n["font-feature-settings"] = !0, n["font-kerning"] = !0, n["font-language-override"] = !0, n["font-size"] = !0, n["font-size-adjust"] = !0, n["font-stretch"] = !0, n["font-style"] = !0, n["font-synthesis"] = !0, n["font-variant"] = !0, n["font-variant-alternates"] = !0, n["font-variant-caps"] = !0, n["font-variant-east-asian"] = !0, n["font-variant-ligatures"] = !0, n["font-variant-numeric"] = !0, n["font-variant-position"] = !0, n["font-weight"] = !0, n.grid = !1, n["grid-area"] = !1, n["grid-auto-columns"] = !1, n["grid-auto-flow"] = !1, n["grid-auto-rows"] = !1, n["grid-column"] = !1, n["grid-column-end"] = !1, n["grid-column-start"] = !1, n["grid-row"] = !1, n["grid-row-end"] = !1, n["grid-row-start"] = !1, n["grid-template"] = !1, n["grid-template-areas"] = !1, n["grid-template-columns"] = !1, n["grid-template-rows"] = !1, n["hanging-punctuation"] = !1, n.height = !0, n.hyphens = !1, n.icon = !1, n["image-orientation"] = !1, n["image-resolution"] = !1, n["ime-mode"] = !1, n["initial-letters"] = !1, n["inline-box-align"] = !1, n["justify-content"] = !1, n["justify-items"] = !1, n["justify-self"] = !1, n.left = !1, n["letter-spacing"] = !0, n["lighting-color"] = !0, n["line-box-contain"] = !1, n["line-break"] = !1, n["line-grid"] = !1, n["line-height"] = !1, n["line-snap"] = !1, n["line-stacking"] = !1, n["line-stacking-ruby"] = !1, n["line-stacking-shift"] = !1, n["line-stacking-strategy"] = !1, n["list-style"] = !0, n["list-style-image"] = !0, n["list-style-position"] = !0, n["list-style-type"] = !0, n.margin = !0, n["margin-bottom"] = !0, n["margin-left"] = !0, n["margin-right"] = !0, n["margin-top"] = !0, n["marker-offset"] = !1, n["marker-side"] = !1, n.marks = !1, n.mask = !1, n["mask-box"] = !1, n["mask-box-outset"] = !1, n["mask-box-repeat"] = !1, n["mask-box-slice"] = !1, n["mask-box-source"] = !1, n["mask-box-width"] = !1, n["mask-clip"] = !1, n["mask-image"] = !1, n["mask-origin"] = !1, n["mask-position"] = !1, n["mask-repeat"] = !1, n["mask-size"] = !1, n["mask-source-type"] = !1, n["mask-type"] = !1, n["max-height"] = !0, n["max-lines"] = !1, n["max-width"] = !0, n["min-height"] = !0, n["min-width"] = !0, n["move-to"] = !1, n["nav-down"] = !1, n["nav-index"] = !1, n["nav-left"] = !1, n["nav-right"] = !1, n["nav-up"] = !1, n["object-fit"] = !1, n["object-position"] = !1, n.opacity = !1, n.order = !1, n.orphans = !1, n.outline = !1, n["outline-color"] = !1, n["outline-offset"] = !1, n["outline-style"] = !1, n["outline-width"] = !1, n.overflow = !1, n["overflow-wrap"] = !1, n["overflow-x"] = !1, n["overflow-y"] = !1, n.padding = !0, n["padding-bottom"] = !0, n["padding-left"] = !0, n["padding-right"] = !0, n["padding-top"] = !0, n.page = !1, n["page-break-after"] = !1, n["page-break-before"] = !1, n["page-break-inside"] = !1, n["page-policy"] = !1, n.pause = !1, n["pause-after"] = !1, n["pause-before"] = !1, n.perspective = !1, n["perspective-origin"] = !1, n.pitch = !1, n["pitch-range"] = !1, n["play-during"] = !1, n.position = !1, n["presentation-level"] = !1, n.quotes = !1, n["region-fragment"] = !1, n.resize = !1, n.rest = !1, n["rest-after"] = !1, n["rest-before"] = !1, n.richness = !1, n.right = !1, n.rotation = !1, n["rotation-point"] = !1, n["ruby-align"] = !1, n["ruby-merge"] = !1, n["ruby-position"] = !1, n["shape-image-threshold"] = !1, n["shape-outside"] = !1, n["shape-margin"] = !1, n.size = !1, n.speak = !1, n["speak-as"] = !1, n["speak-header"] = !1, n["speak-numeral"] = !1, n["speak-punctuation"] = !1, n["speech-rate"] = !1, n.stress = !1, n["string-set"] = !1, n["tab-size"] = !1, n["table-layout"] = !1, n["text-align"] = !0, n["text-align-last"] = !0, n["text-combine-upright"] = !0, n["text-decoration"] = !0, n["text-decoration-color"] = !0, n["text-decoration-line"] = !0, n["text-decoration-skip"] = !0, n["text-decoration-style"] = !0, n["text-emphasis"] = !0, n["text-emphasis-color"] = !0, n["text-emphasis-position"] = !0, n["text-emphasis-style"] = !0, n["text-height"] = !0, n["text-indent"] = !0, n["text-justify"] = !0, n["text-orientation"] = !0, n["text-overflow"] = !0, n["text-shadow"] = !0, n["text-space-collapse"] = !0, n["text-transform"] = !0, n["text-underline-position"] = !0, n["text-wrap"] = !0, n.top = !1, n.transform = !1, n["transform-origin"] = !1, n["transform-style"] = !1, n.transition = !1, n["transition-delay"] = !1, n["transition-duration"] = !1, n["transition-property"] = !1, n["transition-timing-function"] = !1, n["unicode-bidi"] = !1, n["vertical-align"] = !1, n.visibility = !1, n["voice-balance"] = !1, n["voice-duration"] = !1, n["voice-family"] = !1, n["voice-pitch"] = !1, n["voice-range"] = !1, n["voice-rate"] = !1, n["voice-stress"] = !1, n["voice-volume"] = !1, n.volume = !1, n["white-space"] = !1, n.widows = !1, n.width = !0, n["will-change"] = !1, n["word-break"] = !0, n["word-spacing"] = !0, n["word-wrap"] = !0, n["wrap-flow"] = !1, n["wrap-through"] = !1, n["writing-mode"] = !1, n["z-index"] = !1, n;
}
function bWe(n, e, t) {
}
function yWe(n, e, t) {
}
var OWe = /javascript\s*\:/img;
function wWe(n, e) {
  return OWe.test(e) ? "" : e;
}
rc.whiteList = WD();
rc.getDefaultWhiteList = WD;
rc.onAttr = bWe;
rc.onIgnoreAttr = yWe;
rc.safeAttrValue = wWe;
var xWe = {
  indexOf: function(n, e) {
    var t, i;
    if (Array.prototype.indexOf)
      return n.indexOf(e);
    for (t = 0, i = n.length; t < i; t++)
      if (n[t] === e)
        return t;
    return -1;
  },
  forEach: function(n, e, t) {
    var i, s;
    if (Array.prototype.forEach)
      return n.forEach(e, t);
    for (i = 0, s = n.length; i < s; i++)
      e.call(t, n[i], i, n);
  },
  trim: function(n) {
    return String.prototype.trim ? n.trim() : n.replace(/(^\s*)|(\s*$)/g, "");
  },
  trimRight: function(n) {
    return String.prototype.trimRight ? n.trimRight() : n.replace(/(\s*$)/g, "");
  }
}, Eh = xWe;
function SWe(n, e) {
  n = Eh.trimRight(n), n[n.length - 1] !== ";" && (n += ";");
  var t = n.length, i = !1, s = 0, r = 0, o = "";
  function l() {
    if (!i) {
      var u = Eh.trim(n.slice(s, r)), h = u.indexOf(":");
      if (h !== -1) {
        var d = Eh.trim(u.slice(0, h)), f = Eh.trim(u.slice(h + 1));
        if (d) {
          var p = e(s, o.length, d, f, u);
          p && (o += p + "; ");
        }
      }
    }
    s = r + 1;
  }
  for (; r < t; r++) {
    var a = n[r];
    if (a === "/" && n[r + 1] === "*") {
      var c = n.indexOf("*/", r + 2);
      if (c === -1)
        break;
      r = c + 1, s = r + 1, i = !1;
    } else
      a === "(" ? i = !0 : a === ")" ? i = !1 : a === ";" ? i || l() : a === `
` && l();
  }
  return Eh.trim(o);
}
var CWe = SWe, Dp = rc, kWe = CWe;
function sE(n) {
  return n == null;
}
function PWe(n) {
  var e = {};
  for (var t in n)
    e[t] = n[t];
  return e;
}
function HD(n) {
  n = PWe(n || {}), n.whiteList = n.whiteList || Dp.whiteList, n.onAttr = n.onAttr || Dp.onAttr, n.onIgnoreAttr = n.onIgnoreAttr || Dp.onIgnoreAttr, n.safeAttrValue = n.safeAttrValue || Dp.safeAttrValue, this.options = n;
}
HD.prototype.process = function(n) {
  if (n = n || "", n = n.toString(), !n)
    return "";
  var e = this, t = e.options, i = t.whiteList, s = t.onAttr, r = t.onIgnoreAttr, o = t.safeAttrValue, l = kWe(n, function(a, c, u, h, d) {
    var f = i[u], p = !1;
    if (f === !0 ? p = f : typeof f == "function" ? p = f(h) : f instanceof RegExp && (p = f.test(h)), p !== !0 && (p = !1), h = o(u, h), !!h) {
      var g = {
        position: c,
        sourcePosition: a,
        source: d,
        isWhite: p
      };
      if (p) {
        var m = s(u, h, g);
        return sE(m) ? u + ":" + h : m;
      } else {
        var m = r(u, h, g);
        if (!sE(m))
          return m;
      }
    }
  });
  return l;
};
var EWe = HD;
(function(n, e) {
  var t = rc, i = EWe;
  function s(o, l) {
    var a = new i(l);
    return a.process(o);
  }
  e = n.exports = s, e.FilterCSS = i;
  for (var r in t)
    e[r] = t[r];
  typeof window < "u" && (window.filterCSS = n.exports);
})(VO, VO.exports);
var vx = VO.exports, bx = {
  indexOf: function(n, e) {
    var t, i;
    if (Array.prototype.indexOf)
      return n.indexOf(e);
    for (t = 0, i = n.length; t < i; t++)
      if (n[t] === e)
        return t;
    return -1;
  },
  forEach: function(n, e, t) {
    var i, s;
    if (Array.prototype.forEach)
      return n.forEach(e, t);
    for (i = 0, s = n.length; i < s; i++)
      e.call(t, n[i], i, n);
  },
  trim: function(n) {
    return String.prototype.trim ? n.trim() : n.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function(n) {
    var e = /\s|\n|\t/, t = e.exec(n);
    return t ? t.index : -1;
  }
}, AWe = vx.FilterCSS, $We = vx.getDefaultWhiteList, Mm = bx;
function XD() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "preload",
      "src"
    ],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "playsinline",
      "poster",
      "preload",
      "src",
      "height",
      "width"
    ]
  };
}
var YD = new AWe();
function TWe(n, e, t) {
}
function _We(n, e, t) {
}
function MWe(n, e, t) {
}
function RWe(n, e, t) {
}
function UD(n) {
  return n.replace(DWe, "&lt;").replace(LWe, "&gt;");
}
function NWe(n, e, t, i) {
  if (t = n4(t), e === "href" || e === "src") {
    if (t = Mm.trim(t), t === "#")
      return "#";
    if (!(t.substr(0, 7) === "http://" || t.substr(0, 8) === "https://" || t.substr(0, 7) === "mailto:" || t.substr(0, 4) === "tel:" || t.substr(0, 11) === "data:image/" || t.substr(0, 6) === "ftp://" || t.substr(0, 2) === "./" || t.substr(0, 3) === "../" || t[0] === "#" || t[0] === "/"))
      return "";
  } else if (e === "background") {
    if (Lp.lastIndex = 0, Lp.test(t))
      return "";
  } else if (e === "style") {
    if (rE.lastIndex = 0, rE.test(t) || (oE.lastIndex = 0, oE.test(t) && (Lp.lastIndex = 0, Lp.test(t))))
      return "";
    i !== !1 && (i = i || YD, t = i.process(t));
  }
  return t = i4(t), t;
}
var DWe = /</g, LWe = />/g, IWe = /"/g, BWe = /&quot;/g, QWe = /&#([a-zA-Z0-9]*);?/gim, zWe = /&colon;?/gim, jWe = /&newline;?/gim, Lp = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi, rE = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi, oE = /u\s*r\s*l\s*\(.*/gi;
function GD(n) {
  return n.replace(IWe, "&quot;");
}
function KD(n) {
  return n.replace(BWe, '"');
}
function JD(n) {
  return n.replace(QWe, function(t, i) {
    return i[0] === "x" || i[0] === "X" ? String.fromCharCode(parseInt(i.substr(1), 16)) : String.fromCharCode(parseInt(i, 10));
  });
}
function e4(n) {
  return n.replace(zWe, ":").replace(jWe, " ");
}
function t4(n) {
  for (var e = "", t = 0, i = n.length; t < i; t++)
    e += n.charCodeAt(t) < 32 ? " " : n.charAt(t);
  return Mm.trim(e);
}
function n4(n) {
  return n = KD(n), n = JD(n), n = e4(n), n = t4(n), n;
}
function i4(n) {
  return n = GD(n), n = UD(n), n;
}
function VWe() {
  return "";
}
function FWe(n, e) {
  typeof e != "function" && (e = function() {
  });
  var t = !Array.isArray(n);
  function i(o) {
    return t ? !0 : Mm.indexOf(n, o) !== -1;
  }
  var s = [], r = !1;
  return {
    onIgnoreTag: function(o, l, a) {
      if (i(o))
        if (a.isClosing) {
          var c = "[/removed]", u = a.position + c.length;
          return s.push([
            r !== !1 ? r : a.position,
            u
          ]), r = !1, c;
        } else
          return r || (r = a.position), "[removed]";
      else
        return e(o, l, a);
    },
    remove: function(o) {
      var l = "", a = 0;
      return Mm.forEach(s, function(c) {
        l += o.slice(a, c[0]), a = c[1];
      }), l += o.slice(a), l;
    }
  };
}
function ZWe(n) {
  for (var e = "", t = 0; t < n.length; ) {
    var i = n.indexOf("<!--", t);
    if (i === -1) {
      e += n.slice(t);
      break;
    }
    e += n.slice(t, i);
    var s = n.indexOf("-->", i);
    if (s === -1)
      break;
    t = s + 3;
  }
  return e;
}
function qWe(n) {
  var e = n.split("");
  return e = e.filter(function(t) {
    var i = t.charCodeAt(0);
    return i === 127 ? !1 : i <= 31 ? i === 10 || i === 13 : !0;
  }), e.join("");
}
vn.whiteList = XD();
vn.getDefaultWhiteList = XD;
vn.onTag = TWe;
vn.onIgnoreTag = _We;
vn.onTagAttr = MWe;
vn.onIgnoreTagAttr = RWe;
vn.safeAttrValue = NWe;
vn.escapeHtml = UD;
vn.escapeQuote = GD;
vn.unescapeQuote = KD;
vn.escapeHtmlEntities = JD;
vn.escapeDangerHtml5Entities = e4;
vn.clearNonPrintableCharacter = t4;
vn.friendlyAttrValue = n4;
vn.escapeAttrValue = i4;
vn.onIgnoreTagStripAll = VWe;
vn.StripTagBody = FWe;
vn.stripCommentTag = ZWe;
vn.stripBlankChar = qWe;
vn.cssFilter = YD;
vn.getDefaultCSSWhiteList = $We;
var X0 = {}, fl = bx;
function WWe(n) {
  var e = fl.spaceIndex(n), t;
  return e === -1 ? t = n.slice(1, -1) : t = n.slice(1, e + 1), t = fl.trim(t).toLowerCase(), t.slice(0, 1) === "/" && (t = t.slice(1)), t.slice(-1) === "/" && (t = t.slice(0, -1)), t;
}
function HWe(n) {
  return n.slice(0, 2) === "</";
}
function XWe(n, e, t) {
  var i = "", s = 0, r = !1, o = !1, l = 0, a = n.length, c = "", u = "";
  e:
    for (l = 0; l < a; l++) {
      var h = n.charAt(l);
      if (r === !1) {
        if (h === "<") {
          r = l;
          continue;
        }
      } else if (o === !1) {
        if (h === "<") {
          i += t(n.slice(s, l)), r = l, s = l;
          continue;
        }
        if (h === ">" || l === a - 1) {
          i += t(n.slice(s, r)), u = n.slice(r, l + 1), c = WWe(u), i += e(
            r,
            i.length,
            c,
            u,
            HWe(u)
          ), s = l + 1, r = !1;
          continue;
        }
        if (h === '"' || h === "'")
          for (var d = 1, f = n.charAt(l - d); f.trim() === "" || f === "="; ) {
            if (f === "=") {
              o = h;
              continue e;
            }
            f = n.charAt(l - ++d);
          }
      } else if (h === o) {
        o = !1;
        continue;
      }
    }
  return s < a && (i += t(n.substr(s))), i;
}
var YWe = /[^a-zA-Z0-9\\_:.-]/gim;
function UWe(n, e) {
  var t = 0, i = 0, s = [], r = !1, o = n.length;
  function l(d, f) {
    if (d = fl.trim(d), d = d.replace(YWe, "").toLowerCase(), !(d.length < 1)) {
      var p = e(d, f || "");
      p && s.push(p);
    }
  }
  for (var a = 0; a < o; a++) {
    var c = n.charAt(a), u, h;
    if (r === !1 && c === "=") {
      r = n.slice(t, a), t = a + 1, i = n.charAt(t) === '"' || n.charAt(t) === "'" ? t : KWe(n, a + 1);
      continue;
    }
    if (r !== !1 && a === i) {
      if (h = n.indexOf(c, a + 1), h === -1)
        break;
      u = fl.trim(n.slice(i + 1, h)), l(r, u), r = !1, a = h, t = a + 1;
      continue;
    }
    if (/\s|\n|\t/.test(c))
      if (n = n.replace(/\s|\n|\t/g, " "), r === !1)
        if (h = GWe(n, a), h === -1) {
          u = fl.trim(n.slice(t, a)), l(u), r = !1, t = a + 1;
          continue;
        } else {
          a = h - 1;
          continue;
        }
      else if (h = JWe(n, a - 1), h === -1) {
        u = fl.trim(n.slice(t, a)), u = lE(u), l(r, u), r = !1, t = a + 1;
        continue;
      } else
        continue;
  }
  return t < n.length && (r === !1 ? l(n.slice(t)) : l(r, lE(fl.trim(n.slice(t))))), fl.trim(s.join(" "));
}
function GWe(n, e) {
  for (; e < n.length; e++) {
    var t = n[e];
    if (t !== " ")
      return t === "=" ? e : -1;
  }
}
function KWe(n, e) {
  for (; e < n.length; e++) {
    var t = n[e];
    if (t !== " ")
      return t === "'" || t === '"' ? e : -1;
  }
}
function JWe(n, e) {
  for (; e > 0; e--) {
    var t = n[e];
    if (t !== " ")
      return t === "=" ? e : -1;
  }
}
function eHe(n) {
  return n[0] === '"' && n[n.length - 1] === '"' || n[0] === "'" && n[n.length - 1] === "'";
}
function lE(n) {
  return eHe(n) ? n.substr(1, n.length - 2) : n;
}
X0.parseTag = XWe;
X0.parseAttr = UWe;
var tHe = vx.FilterCSS, ar = vn, s4 = X0, nHe = s4.parseTag, iHe = s4.parseAttr, wg = bx;
function Ip(n) {
  return n == null;
}
function sHe(n) {
  var e = wg.spaceIndex(n);
  if (e === -1)
    return {
      html: "",
      closing: n[n.length - 2] === "/"
    };
  n = wg.trim(n.slice(e + 1, -1));
  var t = n[n.length - 1] === "/";
  return t && (n = wg.trim(n.slice(0, -1))), {
    html: n,
    closing: t
  };
}
function rHe(n) {
  var e = {};
  for (var t in n)
    e[t] = n[t];
  return e;
}
function oHe(n) {
  var e = {};
  for (var t in n)
    Array.isArray(n[t]) ? e[t.toLowerCase()] = n[t].map(function(i) {
      return i.toLowerCase();
    }) : e[t.toLowerCase()] = n[t];
  return e;
}
function r4(n) {
  n = rHe(n || {}), n.stripIgnoreTag && (n.onIgnoreTag && console.error(
    'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
  ), n.onIgnoreTag = ar.onIgnoreTagStripAll), n.whiteList || n.allowList ? n.whiteList = oHe(n.whiteList || n.allowList) : n.whiteList = ar.whiteList, n.onTag = n.onTag || ar.onTag, n.onTagAttr = n.onTagAttr || ar.onTagAttr, n.onIgnoreTag = n.onIgnoreTag || ar.onIgnoreTag, n.onIgnoreTagAttr = n.onIgnoreTagAttr || ar.onIgnoreTagAttr, n.safeAttrValue = n.safeAttrValue || ar.safeAttrValue, n.escapeHtml = n.escapeHtml || ar.escapeHtml, this.options = n, n.css === !1 ? this.cssFilter = !1 : (n.css = n.css || {}, this.cssFilter = new tHe(n.css));
}
r4.prototype.process = function(n) {
  if (n = n || "", n = n.toString(), !n)
    return "";
  var e = this, t = e.options, i = t.whiteList, s = t.onTag, r = t.onIgnoreTag, o = t.onTagAttr, l = t.onIgnoreTagAttr, a = t.safeAttrValue, c = t.escapeHtml, u = e.cssFilter;
  t.stripBlankChar && (n = ar.stripBlankChar(n)), t.allowCommentTag || (n = ar.stripCommentTag(n));
  var h = !1;
  t.stripIgnoreTagBody && (h = ar.StripTagBody(
    t.stripIgnoreTagBody,
    r
  ), r = h.onIgnoreTag);
  var d = nHe(
    n,
    function(f, p, g, m, v) {
      var O = {
        sourcePosition: f,
        position: p,
        isClosing: v,
        isWhite: Object.prototype.hasOwnProperty.call(i, g)
      }, b = s(g, m, O);
      if (!Ip(b))
        return b;
      if (O.isWhite) {
        if (O.isClosing)
          return "</" + g + ">";
        var w = sHe(m), x = i[g], S = iHe(w.html, function(C, k) {
          var E = wg.indexOf(x, C) !== -1, M = o(g, C, k, E);
          return Ip(M) ? E ? (k = a(g, C, k, u), k ? C + '="' + k + '"' : C) : (M = l(g, C, k, E), Ip(M) ? void 0 : M) : M;
        });
        return m = "<" + g, S && (m += " " + S), w.closing && (m += " /"), m += ">", m;
      } else
        return b = r(g, m, O), Ip(b) ? c(m) : b;
    },
    c
  );
  return h && (d = h.remove(d)), d;
};
var lHe = r4;
(function(n, e) {
  var t = vn, i = X0, s = lHe;
  function r(l, a) {
    var c = new s(a);
    return c.process(l);
  }
  e = n.exports = r, e.filterXSS = r, e.FilterXSS = s, function() {
    for (var l in t)
      e[l] = t[l];
    for (var a in i)
      e[a] = i[a];
  }(), typeof window < "u" && (window.filterXSS = n.exports);
  function o() {
    return typeof self < "u" && typeof DedicatedWorkerGlobalScope < "u" && self instanceof DedicatedWorkerGlobalScope;
  }
  o() && (self.filterXSS = n.exports);
})(jO, jO.exports);
var aHe = jO.exports;
const aE = aHe;
var cHe = function(e, { xss: t } = {}) {
  const i = new aE.FilterXSS(typeof t == "function" ? t(aE) : t);
  function s(o) {
    return o = i.process(o), o;
  }
  function r(o) {
    for (let l = 0; l < o.tokens.length; l++) {
      let a = o.tokens[l];
      if (a.type === "html_block" && (a.content = s(a.content)), a.type === "inline") {
        let c = a.children;
        for (let u = 0; u < c.length; u++)
          c[u].type === "html_inline" && (c[u].content = s(c[u].content));
      }
    }
  }
  e.core.ruler.after("linkify", "xss", r);
};
const uHe = /* @__PURE__ */ xf(cHe), Ah = typeof performance == "object" && performance && typeof performance.now == "function" ? performance : Date, o4 = /* @__PURE__ */ new Set(), hHe = (n, e, t, i) => {
  typeof process == "object" && process && typeof process.emitWarning == "function" ? process.emitWarning(n, e, t, i) : console.error(`[${t}] ${e}: ${n}`);
}, dHe = (n) => !o4.has(n), ol = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n), l4 = (n) => ol(n) ? n <= Math.pow(2, 8) ? Uint8Array : n <= Math.pow(2, 16) ? Uint16Array : n <= Math.pow(2, 32) ? Uint32Array : n <= Number.MAX_SAFE_INTEGER ? xg : null : null;
class xg extends Array {
  constructor(e) {
    super(e), this.fill(0);
  }
}
var Yc;
const ga = class ga {
  constructor(e, t) {
    ni(this, "heap");
    ni(this, "length");
    if (!Q(ga, Yc))
      throw new TypeError("instantiate Stack using Stack.create(n)");
    this.heap = new t(e), this.length = 0;
  }
  static create(e) {
    const t = l4(e);
    if (!t)
      return [];
    Ge(ga, Yc, !0);
    const i = new ga(e, t);
    return Ge(ga, Yc, !1), i;
  }
  push(e) {
    this.heap[this.length++] = e;
  }
  pop() {
    return this.heap[--this.length];
  }
};
Yc = new WeakMap(), // private constructor
ht(ga, Yc, !1);
let FO = ga;
var cr, bs, zr, ur, Uc, jn, hr, Vn, Kt, rt, ji, ys, $i, ii, dr, fi, Ao, $o, fr, jr, bl, ts, lf, qO, ka, To, af, Os, zm, a4, Pa, Gc, cf, Vr, ll, Fr, al, uf, WO, Kc, Sg, Jc, Cg, qt, sn, hf, HO, Ea, Qh;
const kx = class kx {
  constructor(e) {
    ht(this, lf);
    ht(this, zm);
    ht(this, Vr);
    ht(this, Fr);
    ht(this, uf);
    ht(this, Kc);
    ht(this, Jc);
    ht(this, qt);
    ht(this, hf);
    ht(this, Ea);
    // properties coming in from the options of these, only max and maxSize
    // really *need* to be protected. The rest can be modified, as they just
    // set defaults for various methods.
    ht(this, cr, void 0);
    ht(this, bs, void 0);
    ht(this, zr, void 0);
    ht(this, ur, void 0);
    ht(this, Uc, void 0);
    /**
     * {@link LRUCache.OptionsBase.ttl}
     */
    ni(this, "ttl");
    /**
     * {@link LRUCache.OptionsBase.ttlResolution}
     */
    ni(this, "ttlResolution");
    /**
     * {@link LRUCache.OptionsBase.ttlAutopurge}
     */
    ni(this, "ttlAutopurge");
    /**
     * {@link LRUCache.OptionsBase.updateAgeOnGet}
     */
    ni(this, "updateAgeOnGet");
    /**
     * {@link LRUCache.OptionsBase.updateAgeOnHas}
     */
    ni(this, "updateAgeOnHas");
    /**
     * {@link LRUCache.OptionsBase.allowStale}
     */
    ni(this, "allowStale");
    /**
     * {@link LRUCache.OptionsBase.noDisposeOnSet}
     */
    ni(this, "noDisposeOnSet");
    /**
     * {@link LRUCache.OptionsBase.noUpdateTTL}
     */
    ni(this, "noUpdateTTL");
    /**
     * {@link LRUCache.OptionsBase.maxEntrySize}
     */
    ni(this, "maxEntrySize");
    /**
     * {@link LRUCache.OptionsBase.sizeCalculation}
     */
    ni(this, "sizeCalculation");
    /**
     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}
     */
    ni(this, "noDeleteOnFetchRejection");
    /**
     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}
     */
    ni(this, "noDeleteOnStaleGet");
    /**
     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}
     */
    ni(this, "allowStaleOnFetchAbort");
    /**
     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}
     */
    ni(this, "allowStaleOnFetchRejection");
    /**
     * {@link LRUCache.OptionsBase.ignoreFetchAbort}
     */
    ni(this, "ignoreFetchAbort");
    // computed properties
    ht(this, jn, void 0);
    ht(this, hr, void 0);
    ht(this, Vn, void 0);
    ht(this, Kt, void 0);
    ht(this, rt, void 0);
    ht(this, ji, void 0);
    ht(this, ys, void 0);
    ht(this, $i, void 0);
    ht(this, ii, void 0);
    ht(this, dr, void 0);
    ht(this, fi, void 0);
    ht(this, Ao, void 0);
    ht(this, $o, void 0);
    ht(this, fr, void 0);
    ht(this, jr, void 0);
    ht(this, bl, void 0);
    ht(this, ts, void 0);
    // conditionally set private methods related to TTL
    ht(this, ka, () => {
    });
    ht(this, To, () => {
    });
    ht(this, af, () => {
    });
    /* c8 ignore stop */
    ht(this, Os, () => !1);
    ht(this, Pa, (e) => {
    });
    ht(this, Gc, (e, t, i) => {
    });
    ht(this, cf, (e, t, i, s) => {
      if (i || s)
        throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
      return 0;
    });
    const { max: t = 0, ttl: i, ttlResolution: s = 1, ttlAutopurge: r, updateAgeOnGet: o, updateAgeOnHas: l, allowStale: a, dispose: c, disposeAfter: u, noDisposeOnSet: h, noUpdateTTL: d, maxSize: f = 0, maxEntrySize: p = 0, sizeCalculation: g, fetchMethod: m, noDeleteOnFetchRejection: v, noDeleteOnStaleGet: O, allowStaleOnFetchRejection: b, allowStaleOnFetchAbort: w, ignoreFetchAbort: x } = e;
    if (t !== 0 && !ol(t))
      throw new TypeError("max option must be a nonnegative integer");
    const S = t ? l4(t) : Array;
    if (!S)
      throw new Error("invalid max value: " + t);
    if (Ge(this, cr, t), Ge(this, bs, f), this.maxEntrySize = p || Q(this, bs), this.sizeCalculation = g, this.sizeCalculation) {
      if (!Q(this, bs) && !this.maxEntrySize)
        throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
      if (typeof this.sizeCalculation != "function")
        throw new TypeError("sizeCalculation set to non-function");
    }
    if (m !== void 0 && typeof m != "function")
      throw new TypeError("fetchMethod must be a function if specified");
    if (Ge(this, Uc, m), Ge(this, bl, !!m), Ge(this, Vn, /* @__PURE__ */ new Map()), Ge(this, Kt, new Array(t).fill(void 0)), Ge(this, rt, new Array(t).fill(void 0)), Ge(this, ji, new S(t)), Ge(this, ys, new S(t)), Ge(this, $i, 0), Ge(this, ii, 0), Ge(this, dr, FO.create(t)), Ge(this, jn, 0), Ge(this, hr, 0), typeof c == "function" && Ge(this, zr, c), typeof u == "function" ? (Ge(this, ur, u), Ge(this, fi, [])) : (Ge(this, ur, void 0), Ge(this, fi, void 0)), Ge(this, jr, !!Q(this, zr)), Ge(this, ts, !!Q(this, ur)), this.noDisposeOnSet = !!h, this.noUpdateTTL = !!d, this.noDeleteOnFetchRejection = !!v, this.allowStaleOnFetchRejection = !!b, this.allowStaleOnFetchAbort = !!w, this.ignoreFetchAbort = !!x, this.maxEntrySize !== 0) {
      if (Q(this, bs) !== 0 && !ol(Q(this, bs)))
        throw new TypeError("maxSize must be a positive integer if specified");
      if (!ol(this.maxEntrySize))
        throw new TypeError("maxEntrySize must be a positive integer if specified");
      ze(this, zm, a4).call(this);
    }
    if (this.allowStale = !!a, this.noDeleteOnStaleGet = !!O, this.updateAgeOnGet = !!o, this.updateAgeOnHas = !!l, this.ttlResolution = ol(s) || s === 0 ? s : 1, this.ttlAutopurge = !!r, this.ttl = i || 0, this.ttl) {
      if (!ol(this.ttl))
        throw new TypeError("ttl must be a positive integer if specified");
      ze(this, lf, qO).call(this);
    }
    if (Q(this, cr) === 0 && this.ttl === 0 && Q(this, bs) === 0)
      throw new TypeError("At least one of max, maxSize, or ttl is required");
    if (!this.ttlAutopurge && !Q(this, cr) && !Q(this, bs)) {
      const C = "LRU_CACHE_UNBOUNDED";
      dHe(C) && (o4.add(C), hHe("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", C, kx));
    }
  }
  /**
   * Do not call this method unless you need to inspect the
   * inner workings of the cache.  If anything returned by this
   * object is modified in any way, strange breakage may occur.
   *
   * These fields are private for a reason!
   *
   * @internal
   */
  static unsafeExposeInternals(e) {
    return {
      // properties
      starts: Q(e, $o),
      ttls: Q(e, fr),
      sizes: Q(e, Ao),
      keyMap: Q(e, Vn),
      keyList: Q(e, Kt),
      valList: Q(e, rt),
      next: Q(e, ji),
      prev: Q(e, ys),
      get head() {
        return Q(e, $i);
      },
      get tail() {
        return Q(e, ii);
      },
      free: Q(e, dr),
      // methods
      isBackgroundFetch: (t) => {
        var i;
        return ze(i = e, qt, sn).call(i, t);
      },
      backgroundFetch: (t, i, s, r) => {
        var o;
        return ze(o = e, Jc, Cg).call(o, t, i, s, r);
      },
      moveToTail: (t) => {
        var i;
        return ze(i = e, Ea, Qh).call(i, t);
      },
      indexes: (t) => {
        var i;
        return ze(i = e, Vr, ll).call(i, t);
      },
      rindexes: (t) => {
        var i;
        return ze(i = e, Fr, al).call(i, t);
      },
      isStale: (t) => {
        var i;
        return Q(i = e, Os).call(i, t);
      }
    };
  }
  // Protected read-only members
  /**
   * {@link LRUCache.OptionsBase.max} (read-only)
   */
  get max() {
    return Q(this, cr);
  }
  /**
   * {@link LRUCache.OptionsBase.maxSize} (read-only)
   */
  get maxSize() {
    return Q(this, bs);
  }
  /**
   * The total computed size of items in the cache (read-only)
   */
  get calculatedSize() {
    return Q(this, hr);
  }
  /**
   * The number of items stored in the cache (read-only)
   */
  get size() {
    return Q(this, jn);
  }
  /**
   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)
   */
  get fetchMethod() {
    return Q(this, Uc);
  }
  /**
   * {@link LRUCache.OptionsBase.dispose} (read-only)
   */
  get dispose() {
    return Q(this, zr);
  }
  /**
   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)
   */
  get disposeAfter() {
    return Q(this, ur);
  }
  /**
   * Return the remaining TTL time for a given entry key
   */
  getRemainingTTL(e) {
    return Q(this, Vn).has(e) ? 1 / 0 : 0;
  }
  /**
   * Return a generator yielding `[key, value]` pairs,
   * in order from most recently used to least recently used.
   */
  *entries() {
    for (const e of ze(this, Vr, ll).call(this))
      Q(this, rt)[e] !== void 0 && Q(this, Kt)[e] !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield [Q(this, Kt)[e], Q(this, rt)[e]]);
  }
  /**
   * Inverse order version of {@link LRUCache.entries}
   *
   * Return a generator yielding `[key, value]` pairs,
   * in order from least recently used to most recently used.
   */
  *rentries() {
    for (const e of ze(this, Fr, al).call(this))
      Q(this, rt)[e] !== void 0 && Q(this, Kt)[e] !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield [Q(this, Kt)[e], Q(this, rt)[e]]);
  }
  /**
   * Return a generator yielding the keys in the cache,
   * in order from most recently used to least recently used.
   */
  *keys() {
    for (const e of ze(this, Vr, ll).call(this)) {
      const t = Q(this, Kt)[e];
      t !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield t);
    }
  }
  /**
   * Inverse order version of {@link LRUCache.keys}
   *
   * Return a generator yielding the keys in the cache,
   * in order from least recently used to most recently used.
   */
  *rkeys() {
    for (const e of ze(this, Fr, al).call(this)) {
      const t = Q(this, Kt)[e];
      t !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield t);
    }
  }
  /**
   * Return a generator yielding the values in the cache,
   * in order from most recently used to least recently used.
   */
  *values() {
    for (const e of ze(this, Vr, ll).call(this))
      Q(this, rt)[e] !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield Q(this, rt)[e]);
  }
  /**
   * Inverse order version of {@link LRUCache.values}
   *
   * Return a generator yielding the values in the cache,
   * in order from least recently used to most recently used.
   */
  *rvalues() {
    for (const e of ze(this, Fr, al).call(this))
      Q(this, rt)[e] !== void 0 && !ze(this, qt, sn).call(this, Q(this, rt)[e]) && (yield Q(this, rt)[e]);
  }
  /**
   * Iterating over the cache itself yields the same results as
   * {@link LRUCache.entries}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * Find a value for which the supplied fn method returns a truthy value,
   * similar to Array.find().  fn is called as fn(value, key, cache).
   */
  find(e, t = {}) {
    for (const i of ze(this, Vr, ll).call(this)) {
      const s = Q(this, rt)[i], r = ze(this, qt, sn).call(this, s) ? s.__staleWhileFetching : s;
      if (r !== void 0 && e(r, Q(this, Kt)[i], this))
        return this.get(Q(this, Kt)[i], t);
    }
  }
  /**
   * Call the supplied function on each item in the cache, in order from
   * most recently used to least recently used.  fn is called as
   * fn(value, key, cache).  Does not update age or recenty of use.
   * Does not iterate over stale values.
   */
  forEach(e, t = this) {
    for (const i of ze(this, Vr, ll).call(this)) {
      const s = Q(this, rt)[i], r = ze(this, qt, sn).call(this, s) ? s.__staleWhileFetching : s;
      r !== void 0 && e.call(t, r, Q(this, Kt)[i], this);
    }
  }
  /**
   * The same as {@link LRUCache.forEach} but items are iterated over in
   * reverse order.  (ie, less recently used items are iterated over first.)
   */
  rforEach(e, t = this) {
    for (const i of ze(this, Fr, al).call(this)) {
      const s = Q(this, rt)[i], r = ze(this, qt, sn).call(this, s) ? s.__staleWhileFetching : s;
      r !== void 0 && e.call(t, r, Q(this, Kt)[i], this);
    }
  }
  /**
   * Delete any stale entries. Returns true if anything was removed,
   * false otherwise.
   */
  purgeStale() {
    let e = !1;
    for (const t of ze(this, Fr, al).call(this, { allowStale: !0 }))
      Q(this, Os).call(this, t) && (this.delete(Q(this, Kt)[t]), e = !0);
    return e;
  }
  /**
   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be
   * passed to cache.load()
   */
  dump() {
    const e = [];
    for (const t of ze(this, Vr, ll).call(this, { allowStale: !0 })) {
      const i = Q(this, Kt)[t], s = Q(this, rt)[t], r = ze(this, qt, sn).call(this, s) ? s.__staleWhileFetching : s;
      if (r === void 0 || i === void 0)
        continue;
      const o = { value: r };
      if (Q(this, fr) && Q(this, $o)) {
        o.ttl = Q(this, fr)[t];
        const l = Ah.now() - Q(this, $o)[t];
        o.start = Math.floor(Date.now() - l);
      }
      Q(this, Ao) && (o.size = Q(this, Ao)[t]), e.unshift([i, o]);
    }
    return e;
  }
  /**
   * Reset the cache and load in the items in entries in the order listed.
   * Note that the shape of the resulting cache may be different if the
   * same options are not used in both caches.
   */
  load(e) {
    this.clear();
    for (const [t, i] of e) {
      if (i.start) {
        const s = Date.now() - i.start;
        i.start = Ah.now() - s;
      }
      this.set(t, i.value, i);
    }
  }
  /**
   * Add a value to the cache.
   */
  set(e, t, i = {}) {
    var d, f, p;
    const { ttl: s = this.ttl, start: r, noDisposeOnSet: o = this.noDisposeOnSet, sizeCalculation: l = this.sizeCalculation, status: a } = i;
    let { noUpdateTTL: c = this.noUpdateTTL } = i;
    const u = Q(this, cf).call(this, e, t, i.size || 0, l);
    if (this.maxEntrySize && u > this.maxEntrySize)
      return a && (a.set = "miss", a.maxEntrySizeExceeded = !0), this.delete(e), this;
    let h = Q(this, jn) === 0 ? void 0 : Q(this, Vn).get(e);
    if (h === void 0)
      h = Q(this, jn) === 0 ? Q(this, ii) : Q(this, dr).length !== 0 ? Q(this, dr).pop() : Q(this, jn) === Q(this, cr) ? ze(this, Kc, Sg).call(this, !1) : Q(this, jn), Q(this, Kt)[h] = e, Q(this, rt)[h] = t, Q(this, Vn).set(e, h), Q(this, ji)[Q(this, ii)] = h, Q(this, ys)[h] = Q(this, ii), Ge(this, ii, h), Ff(this, jn)._++, Q(this, Gc).call(this, h, u, a), a && (a.set = "add"), c = !1;
    else {
      ze(this, Ea, Qh).call(this, h);
      const g = Q(this, rt)[h];
      if (t !== g) {
        if (Q(this, bl) && ze(this, qt, sn).call(this, g) ? g.__abortController.abort(new Error("replaced")) : o || (Q(this, jr) && ((d = Q(this, zr)) == null || d.call(this, g, e, "set")), Q(this, ts) && ((f = Q(this, fi)) == null || f.push([g, e, "set"]))), Q(this, Pa).call(this, h), Q(this, Gc).call(this, h, u, a), Q(this, rt)[h] = t, a) {
          a.set = "replace";
          const m = g && ze(this, qt, sn).call(this, g) ? g.__staleWhileFetching : g;
          m !== void 0 && (a.oldValue = m);
        }
      } else
        a && (a.set = "update");
    }
    if (s !== 0 && !Q(this, fr) && ze(this, lf, qO).call(this), Q(this, fr) && (c || Q(this, af).call(this, h, s, r), a && Q(this, To).call(this, a, h)), !o && Q(this, ts) && Q(this, fi)) {
      const g = Q(this, fi);
      let m;
      for (; m = g == null ? void 0 : g.shift(); )
        (p = Q(this, ur)) == null || p.call(this, ...m);
    }
    return this;
  }
  /**
   * Evict the least recently used item, returning its value or
   * `undefined` if cache is empty.
   */
  pop() {
    var e;
    try {
      for (; Q(this, jn); ) {
        const t = Q(this, rt)[Q(this, $i)];
        if (ze(this, Kc, Sg).call(this, !0), ze(this, qt, sn).call(this, t)) {
          if (t.__staleWhileFetching)
            return t.__staleWhileFetching;
        } else if (t !== void 0)
          return t;
      }
    } finally {
      if (Q(this, ts) && Q(this, fi)) {
        const t = Q(this, fi);
        let i;
        for (; i = t == null ? void 0 : t.shift(); )
          (e = Q(this, ur)) == null || e.call(this, ...i);
      }
    }
  }
  /**
   * Check if a key is in the cache, without updating the recency of use.
   * Will return false if the item is stale, even though it is technically
   * in the cache.
   *
   * Will not update item age unless
   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.
   */
  has(e, t = {}) {
    const { updateAgeOnHas: i = this.updateAgeOnHas, status: s } = t, r = Q(this, Vn).get(e);
    if (r !== void 0) {
      const o = Q(this, rt)[r];
      if (ze(this, qt, sn).call(this, o) && o.__staleWhileFetching === void 0)
        return !1;
      if (Q(this, Os).call(this, r))
        s && (s.has = "stale", Q(this, To).call(this, s, r));
      else
        return i && Q(this, ka).call(this, r), s && (s.has = "hit", Q(this, To).call(this, s, r)), !0;
    } else
      s && (s.has = "miss");
    return !1;
  }
  /**
   * Like {@link LRUCache#get} but doesn't update recency or delete stale
   * items.
   *
   * Returns `undefined` if the item is stale, unless
   * {@link LRUCache.OptionsBase.allowStale} is set.
   */
  peek(e, t = {}) {
    const { allowStale: i = this.allowStale } = t, s = Q(this, Vn).get(e);
    if (s !== void 0 && (i || !Q(this, Os).call(this, s))) {
      const r = Q(this, rt)[s];
      return ze(this, qt, sn).call(this, r) ? r.__staleWhileFetching : r;
    }
  }
  async fetch(e, t = {}) {
    const {
      // get options
      allowStale: i = this.allowStale,
      updateAgeOnGet: s = this.updateAgeOnGet,
      noDeleteOnStaleGet: r = this.noDeleteOnStaleGet,
      // set options
      ttl: o = this.ttl,
      noDisposeOnSet: l = this.noDisposeOnSet,
      size: a = 0,
      sizeCalculation: c = this.sizeCalculation,
      noUpdateTTL: u = this.noUpdateTTL,
      // fetch exclusive options
      noDeleteOnFetchRejection: h = this.noDeleteOnFetchRejection,
      allowStaleOnFetchRejection: d = this.allowStaleOnFetchRejection,
      ignoreFetchAbort: f = this.ignoreFetchAbort,
      allowStaleOnFetchAbort: p = this.allowStaleOnFetchAbort,
      context: g,
      forceRefresh: m = !1,
      status: v,
      signal: O
    } = t;
    if (!Q(this, bl))
      return v && (v.fetch = "get"), this.get(e, {
        allowStale: i,
        updateAgeOnGet: s,
        noDeleteOnStaleGet: r,
        status: v
      });
    const b = {
      allowStale: i,
      updateAgeOnGet: s,
      noDeleteOnStaleGet: r,
      ttl: o,
      noDisposeOnSet: l,
      size: a,
      sizeCalculation: c,
      noUpdateTTL: u,
      noDeleteOnFetchRejection: h,
      allowStaleOnFetchRejection: d,
      allowStaleOnFetchAbort: p,
      ignoreFetchAbort: f,
      status: v,
      signal: O
    };
    let w = Q(this, Vn).get(e);
    if (w === void 0) {
      v && (v.fetch = "miss");
      const x = ze(this, Jc, Cg).call(this, e, w, b, g);
      return x.__returned = x;
    } else {
      const x = Q(this, rt)[w];
      if (ze(this, qt, sn).call(this, x)) {
        const M = i && x.__staleWhileFetching !== void 0;
        return v && (v.fetch = "inflight", M && (v.returnedStale = !0)), M ? x.__staleWhileFetching : x.__returned = x;
      }
      const S = Q(this, Os).call(this, w);
      if (!m && !S)
        return v && (v.fetch = "hit"), ze(this, Ea, Qh).call(this, w), s && Q(this, ka).call(this, w), v && Q(this, To).call(this, v, w), x;
      const C = ze(this, Jc, Cg).call(this, e, w, b, g), E = C.__staleWhileFetching !== void 0 && i;
      return v && (v.fetch = S ? "stale" : "refresh", E && S && (v.returnedStale = !0)), E ? C.__staleWhileFetching : C.__returned = C;
    }
  }
  /**
   * Return a value from the cache. Will update the recency of the cache
   * entry found.
   *
   * If the key is not found, get() will return `undefined`.
   */
  get(e, t = {}) {
    const { allowStale: i = this.allowStale, updateAgeOnGet: s = this.updateAgeOnGet, noDeleteOnStaleGet: r = this.noDeleteOnStaleGet, status: o } = t, l = Q(this, Vn).get(e);
    if (l !== void 0) {
      const a = Q(this, rt)[l], c = ze(this, qt, sn).call(this, a);
      return o && Q(this, To).call(this, o, l), Q(this, Os).call(this, l) ? (o && (o.get = "stale"), c ? (o && i && a.__staleWhileFetching !== void 0 && (o.returnedStale = !0), i ? a.__staleWhileFetching : void 0) : (r || this.delete(e), o && i && (o.returnedStale = !0), i ? a : void 0)) : (o && (o.get = "hit"), c ? a.__staleWhileFetching : (ze(this, Ea, Qh).call(this, l), s && Q(this, ka).call(this, l), a));
    } else
      o && (o.get = "miss");
  }
  /**
   * Deletes a key out of the cache.
   * Returns true if the key was deleted, false otherwise.
   */
  delete(e) {
    var i, s, r, o;
    let t = !1;
    if (Q(this, jn) !== 0) {
      const l = Q(this, Vn).get(e);
      if (l !== void 0)
        if (t = !0, Q(this, jn) === 1)
          this.clear();
        else {
          Q(this, Pa).call(this, l);
          const a = Q(this, rt)[l];
          ze(this, qt, sn).call(this, a) ? a.__abortController.abort(new Error("deleted")) : (Q(this, jr) || Q(this, ts)) && (Q(this, jr) && ((i = Q(this, zr)) == null || i.call(this, a, e, "delete")), Q(this, ts) && ((s = Q(this, fi)) == null || s.push([a, e, "delete"]))), Q(this, Vn).delete(e), Q(this, Kt)[l] = void 0, Q(this, rt)[l] = void 0, l === Q(this, ii) ? Ge(this, ii, Q(this, ys)[l]) : l === Q(this, $i) ? Ge(this, $i, Q(this, ji)[l]) : (Q(this, ji)[Q(this, ys)[l]] = Q(this, ji)[l], Q(this, ys)[Q(this, ji)[l]] = Q(this, ys)[l]), Ff(this, jn)._--, Q(this, dr).push(l);
        }
    }
    if (Q(this, ts) && ((r = Q(this, fi)) != null && r.length)) {
      const l = Q(this, fi);
      let a;
      for (; a = l == null ? void 0 : l.shift(); )
        (o = Q(this, ur)) == null || o.call(this, ...a);
    }
    return t;
  }
  /**
   * Clear the cache entirely, throwing away all values.
   */
  clear() {
    var e, t, i;
    for (const s of ze(this, Fr, al).call(this, { allowStale: !0 })) {
      const r = Q(this, rt)[s];
      if (ze(this, qt, sn).call(this, r))
        r.__abortController.abort(new Error("deleted"));
      else {
        const o = Q(this, Kt)[s];
        Q(this, jr) && ((e = Q(this, zr)) == null || e.call(this, r, o, "delete")), Q(this, ts) && ((t = Q(this, fi)) == null || t.push([r, o, "delete"]));
      }
    }
    if (Q(this, Vn).clear(), Q(this, rt).fill(void 0), Q(this, Kt).fill(void 0), Q(this, fr) && Q(this, $o) && (Q(this, fr).fill(0), Q(this, $o).fill(0)), Q(this, Ao) && Q(this, Ao).fill(0), Ge(this, $i, 0), Ge(this, ii, 0), Q(this, dr).length = 0, Ge(this, hr, 0), Ge(this, jn, 0), Q(this, ts) && Q(this, fi)) {
      const s = Q(this, fi);
      let r;
      for (; r = s == null ? void 0 : s.shift(); )
        (i = Q(this, ur)) == null || i.call(this, ...r);
    }
  }
};
cr = new WeakMap(), bs = new WeakMap(), zr = new WeakMap(), ur = new WeakMap(), Uc = new WeakMap(), jn = new WeakMap(), hr = new WeakMap(), Vn = new WeakMap(), Kt = new WeakMap(), rt = new WeakMap(), ji = new WeakMap(), ys = new WeakMap(), $i = new WeakMap(), ii = new WeakMap(), dr = new WeakMap(), fi = new WeakMap(), Ao = new WeakMap(), $o = new WeakMap(), fr = new WeakMap(), jr = new WeakMap(), bl = new WeakMap(), ts = new WeakMap(), lf = new WeakSet(), qO = function() {
  const e = new xg(Q(this, cr)), t = new xg(Q(this, cr));
  Ge(this, fr, e), Ge(this, $o, t), Ge(this, af, (r, o, l = Ah.now()) => {
    if (t[r] = o !== 0 ? l : 0, e[r] = o, o !== 0 && this.ttlAutopurge) {
      const a = setTimeout(() => {
        Q(this, Os).call(this, r) && this.delete(Q(this, Kt)[r]);
      }, o + 1);
      a.unref && a.unref();
    }
  }), Ge(this, ka, (r) => {
    t[r] = e[r] !== 0 ? Ah.now() : 0;
  }), Ge(this, To, (r, o) => {
    if (e[o]) {
      const l = e[o], a = t[o];
      r.ttl = l, r.start = a, r.now = i || s(), r.remainingTTL = r.now + l - a;
    }
  });
  let i = 0;
  const s = () => {
    const r = Ah.now();
    if (this.ttlResolution > 0) {
      i = r;
      const o = setTimeout(() => i = 0, this.ttlResolution);
      o.unref && o.unref();
    }
    return r;
  };
  this.getRemainingTTL = (r) => {
    const o = Q(this, Vn).get(r);
    return o === void 0 ? 0 : e[o] === 0 || t[o] === 0 ? 1 / 0 : t[o] + e[o] - (i || s());
  }, Ge(this, Os, (r) => e[r] !== 0 && t[r] !== 0 && (i || s()) - t[r] > e[r]);
}, ka = new WeakMap(), To = new WeakMap(), af = new WeakMap(), Os = new WeakMap(), zm = new WeakSet(), a4 = function() {
  const e = new xg(Q(this, cr));
  Ge(this, hr, 0), Ge(this, Ao, e), Ge(this, Pa, (t) => {
    Ge(this, hr, Q(this, hr) - e[t]), e[t] = 0;
  }), Ge(this, cf, (t, i, s, r) => {
    if (ze(this, qt, sn).call(this, i))
      return 0;
    if (!ol(s))
      if (r) {
        if (typeof r != "function")
          throw new TypeError("sizeCalculation must be a function");
        if (s = r(i, t), !ol(s))
          throw new TypeError("sizeCalculation return invalid (expect positive integer)");
      } else
        throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
    return s;
  }), Ge(this, Gc, (t, i, s) => {
    if (e[t] = i, Q(this, bs)) {
      const r = Q(this, bs) - e[t];
      for (; Q(this, hr) > r; )
        ze(this, Kc, Sg).call(this, !0);
    }
    Ge(this, hr, Q(this, hr) + e[t]), s && (s.entrySize = i, s.totalCalculatedSize = Q(this, hr));
  });
}, Pa = new WeakMap(), Gc = new WeakMap(), cf = new WeakMap(), Vr = new WeakSet(), ll = function* ({ allowStale: e = this.allowStale } = {}) {
  if (Q(this, jn))
    for (let t = Q(this, ii); !(!ze(this, uf, WO).call(this, t) || ((e || !Q(this, Os).call(this, t)) && (yield t), t === Q(this, $i))); )
      t = Q(this, ys)[t];
}, Fr = new WeakSet(), al = function* ({ allowStale: e = this.allowStale } = {}) {
  if (Q(this, jn))
    for (let t = Q(this, $i); !(!ze(this, uf, WO).call(this, t) || ((e || !Q(this, Os).call(this, t)) && (yield t), t === Q(this, ii))); )
      t = Q(this, ji)[t];
}, uf = new WeakSet(), WO = function(e) {
  return e !== void 0 && Q(this, Vn).get(Q(this, Kt)[e]) === e;
}, Kc = new WeakSet(), Sg = function(e) {
  var r, o;
  const t = Q(this, $i), i = Q(this, Kt)[t], s = Q(this, rt)[t];
  return Q(this, bl) && ze(this, qt, sn).call(this, s) ? s.__abortController.abort(new Error("evicted")) : (Q(this, jr) || Q(this, ts)) && (Q(this, jr) && ((r = Q(this, zr)) == null || r.call(this, s, i, "evict")), Q(this, ts) && ((o = Q(this, fi)) == null || o.push([s, i, "evict"]))), Q(this, Pa).call(this, t), e && (Q(this, Kt)[t] = void 0, Q(this, rt)[t] = void 0, Q(this, dr).push(t)), Q(this, jn) === 1 ? (Ge(this, $i, Ge(this, ii, 0)), Q(this, dr).length = 0) : Ge(this, $i, Q(this, ji)[t]), Q(this, Vn).delete(i), Ff(this, jn)._--, t;
}, Jc = new WeakSet(), Cg = function(e, t, i, s) {
  const r = t === void 0 ? void 0 : Q(this, rt)[t];
  if (ze(this, qt, sn).call(this, r))
    return r;
  const o = new AbortController(), { signal: l } = i;
  l == null || l.addEventListener("abort", () => o.abort(l.reason), {
    signal: o.signal
  });
  const a = {
    signal: o.signal,
    options: i,
    context: s
  }, c = (g, m = !1) => {
    const { aborted: v } = o.signal, O = i.ignoreFetchAbort && g !== void 0;
    if (i.status && (v && !m ? (i.status.fetchAborted = !0, i.status.fetchError = o.signal.reason, O && (i.status.fetchAbortIgnored = !0)) : i.status.fetchResolved = !0), v && !O && !m)
      return h(o.signal.reason);
    const b = f;
    return Q(this, rt)[t] === f && (g === void 0 ? b.__staleWhileFetching ? Q(this, rt)[t] = b.__staleWhileFetching : this.delete(e) : (i.status && (i.status.fetchUpdated = !0), this.set(e, g, a.options))), g;
  }, u = (g) => (i.status && (i.status.fetchRejected = !0, i.status.fetchError = g), h(g)), h = (g) => {
    const { aborted: m } = o.signal, v = m && i.allowStaleOnFetchAbort, O = v || i.allowStaleOnFetchRejection, b = O || i.noDeleteOnFetchRejection, w = f;
    if (Q(this, rt)[t] === f && (!b || w.__staleWhileFetching === void 0 ? this.delete(e) : v || (Q(this, rt)[t] = w.__staleWhileFetching)), O)
      return i.status && w.__staleWhileFetching !== void 0 && (i.status.returnedStale = !0), w.__staleWhileFetching;
    if (w.__returned === w)
      throw g;
  }, d = (g, m) => {
    var O;
    const v = (O = Q(this, Uc)) == null ? void 0 : O.call(this, e, r, a);
    v && v instanceof Promise && v.then((b) => g(b), m), o.signal.addEventListener("abort", () => {
      (!i.ignoreFetchAbort || i.allowStaleOnFetchAbort) && (g(), i.allowStaleOnFetchAbort && (g = (b) => c(b, !0)));
    });
  };
  i.status && (i.status.fetchDispatched = !0);
  const f = new Promise(d).then(c, u), p = Object.assign(f, {
    __abortController: o,
    __staleWhileFetching: r,
    __returned: void 0
  });
  return t === void 0 ? (this.set(e, p, { ...a.options, status: void 0 }), t = Q(this, Vn).get(e)) : Q(this, rt)[t] = p, p;
}, qt = new WeakSet(), sn = function(e) {
  if (!Q(this, bl))
    return !1;
  const t = e;
  return !!t && t instanceof Promise && t.hasOwnProperty("__staleWhileFetching") && t.__abortController instanceof AbortController;
}, hf = new WeakSet(), HO = function(e, t) {
  Q(this, ys)[t] = e, Q(this, ji)[e] = t;
}, Ea = new WeakSet(), Qh = function(e) {
  e !== Q(this, ii) && (e === Q(this, $i) ? Ge(this, $i, Q(this, ji)[e]) : ze(this, hf, HO).call(this, Q(this, ys)[e], Q(this, ji)[e]), ze(this, hf, HO).call(this, Q(this, ii), e), Ge(this, ii, e));
};
let ZO = kx;
const fHe = (n, e) => {
  const t = ke("editorId"), { noImgZoomIn: i } = n, s = kw(() => {
    const r = document.querySelectorAll(`#${t}-preview img`);
    r.length !== 0 && zfe(r, {
      background: "#00000073"
    });
  });
  qe(() => {
    !i && n.setting.preview && s();
  }), ne([e], () => {
    !i && s();
  });
}, pHe = fHe, gHe = (n, e) => {
  if (typeof e[n] == "string")
    return e[n];
  const t = `<i class="${Lt}-iconfont ${Lt}-icon-${n}"></i>`;
  switch (so.iconfontType) {
    case "svg":
      return `<svg class="${Lt}-icon" aria-hidden="true"><use xlink:href="#${Lt}-icon-${n}"></use></svg>`;
    default:
      return t;
  }
}, mHe = (n, e, t) => {
  const i = ke("editorId"), s = ke("usedLanguageText"), r = ke("customIcon"), o = () => {
    document.querySelectorAll(`#${i}-preview pre`).forEach((c) => {
      var u, h;
      let d = -1;
      (u = c.querySelector(".copy-button")) == null || u.remove();
      const f = ((h = s.value.copyCode) == null ? void 0 : h.text) || "复制代码", p = document.createElement("span");
      p.setAttribute("class", "copy-button"), p.dataset.tips = f, p.innerHTML = gHe("copy", r.value), p.addEventListener("click", () => {
        var g, m;
        clearTimeout(d);
        const v = c.querySelector("code").innerText, O = Hfe(n.formatCopiedText(v)), b = ((g = s.value.copyCode) == null ? void 0 : g.successTips) || "已复制！", w = ((m = s.value.copyCode) == null ? void 0 : m.failTips) || "已复制！";
        p.dataset.tips = O ? b : w, d = window.setTimeout(() => {
          p.dataset.tips = f;
        }, 1500);
      }), c.appendChild(p);
    });
  }, l = () => {
    $e(o);
  }, a = (c) => {
    c && $e(o);
  };
  ne([e, t], l), ne(() => n.setting.preview, a), ne(() => n.setting.htmlPreview, a), ne(() => s.value, o), qe(o);
}, vHe = mHe, bHe = (n) => {
  var e;
  const t = (e = so.editorExtensions) == null ? void 0 : e.highlight, i = t == null ? void 0 : t.instance, s = ke("highlight"), r = Ln(i);
  return qe(() => {
    if (!n.noHighlight && !r.value) {
      const o = document.createElement("script");
      o.src = s.value.js, o.onload = () => {
        r.value = window.hljs;
      }, o.id = `${Lt}-hljs`, Za(o, "hljs");
      const l = document.createElement("link");
      l.rel = "stylesheet", l.href = s.value.css, l.id = `${Lt}-hlCss`, Za(l);
    }
  }), ne(
    () => s.value.css,
    (o) => {
      Jre(`${Lt}-hlCss`, "href", o);
    }
  ), r;
}, yHe = bHe, OHe = (n) => {
  const e = ke("theme"), { editorExtensions: t, mermaidConfig: i } = so, s = t == null ? void 0 : t.mermaid, r = Ln(s == null ? void 0 : s.instance), o = Ln(-1), l = new ZO({
    max: 1e3,
    // 缓存10分钟
    ttl: 6e5
  }), a = () => {
    const c = r.value;
    !n.noMermaid && c && (c.initialize(
      i({
        startOnLoad: !1,
        theme: e.value === "dark" ? "dark" : "default"
      })
    ), o.value = o.value + 1);
  };
  return ne(
    () => e.value,
    () => {
      l.clear(), a();
    }
  ), qe(() => {
    if (!n.noMermaid && !(s != null && s.instance)) {
      const c = (s == null ? void 0 : s.js) || qre;
      if (/\.mjs/.test(c))
        import(
          /* @vite-ignore */
          /* webpackIgnore: true */
          c
        ).then((u) => {
          r.value = u.default, a();
        });
      else {
        const u = document.createElement("script");
        u.id = `${Lt}-mermaid`, u.src = c, u.onload = () => {
          r.value = window.mermaid, a();
        }, Za(u, "mermaid");
      }
    }
  }), { mermaidRef: r, reRenderRef: o, replaceMermaid: () => {
    $e(() => {
      if (!n.noMermaid && r.value) {
        const c = document.querySelectorAll(
          `div.${Lt}-mermaid`
        ), u = document.createElement("div");
        u.style.width = document.body.offsetWidth + "px", u.style.height = document.body.offsetHeight + "px", u.style.position = "fixed", u.style.zIndex = "-10000", u.style.top = "-10000";
        let h = c.length;
        h > 0 && document.body.appendChild(u), c.forEach(async (d) => {
          let f = l.get(d.innerText);
          if (!f) {
            const g = By(), m = r.value.renderAsync || r.value.render;
            let v = "";
            try {
              v = await m(g, d.innerText, u);
            } catch {
            }
            f = await n.sanitizeMermaid(
              typeof v == "string" ? v : v.svg
            ), l.set(d.innerText, f);
          }
          const p = document.createElement("p");
          p.className = `${Lt}-mermaid`, p.setAttribute("data-processed", ""), p.innerHTML = f, d.dataset.line !== void 0 && (p.dataset.line = d.dataset.line), d.replaceWith(p), --h === 0 && u.remove();
        });
      }
    });
  } };
}, wHe = OHe, xHe = (n) => {
  var e;
  const t = (e = so.editorExtensions) == null ? void 0 : e.katex, i = t == null ? void 0 : t.instance, s = Ln(i);
  return qe(() => {
    if (!n.noKatex && !s.value) {
      const r = document.createElement("script");
      r.src = (t == null ? void 0 : t.js) || xk.js, r.onload = () => {
        s.value = window.katex;
      }, r.id = `${Lt}-katex`;
      const o = document.createElement("link");
      o.rel = "stylesheet", o.href = (t == null ? void 0 : t.css) || xk.css, o.id = `${Lt}-katexCss`, Za(r, "katex"), Za(o);
    }
  }), s;
}, SHe = xHe, CHe = (n, e) => {
  const t = n.renderer.rules.fence.bind(n.renderer.rules);
  n.renderer.rules.fence = (i, s, r, o, l) => {
    const a = i[s], c = a.content.trim();
    if (a.info === "mermaid") {
      let u;
      return i[s].map && i[s].level === 0 && (u = i[s].map[0], i[s].attrSet("data-line", String(u))), `<div class="${Lt}-mermaid" ${u !== void 0 ? "data-line=" + u : ""} data-mermaid-theme=${e.themeRef.value}>${c}</div>`;
    }
    return t(i, s, r, o, l);
  };
}, kHe = CHe, cE = (n, e) => {
  let t = !0, i = !0;
  const s = n.posMax, r = e > 0 ? n.src.charCodeAt(e - 1) : -1, o = e + 1 <= s ? n.src.charCodeAt(e + 1) : -1;
  return (r === 32 || r === 9 || o >= 48 && o <= 57) && (i = !1), (o === 32 || o === 9) && (t = !1), {
    can_open: t,
    can_close: i
  };
}, PHe = (n, e) => {
  let t, i, s, r;
  if (n.src[n.pos] !== "$")
    return !1;
  if (s = cE(n, n.pos), !s.can_open)
    return e || (n.pending += "$"), n.pos += 1, !0;
  const o = n.pos + 1;
  for (t = o; (t = n.src.indexOf("$", t)) !== -1; ) {
    for (r = t - 1; n.src[r] === "\\"; )
      r -= 1;
    if ((t - r) % 2 == 1)
      break;
    t += 1;
  }
  return t === -1 ? (e || (n.pending += "$"), n.pos = o, !0) : t - o === 0 ? (e || (n.pending += "$$"), n.pos = o + 1, !0) : (s = cE(n, t), s.can_close ? (e || (i = n.push("math_inline", "math", 0), i.markup = "$", i.content = n.src.slice(o, t)), n.pos = t + 1, !0) : (e || (n.pending += "$"), n.pos = o, !0));
}, EHe = (n, e, t, i) => {
  let s, r, o, l, a = !1, c = n.bMarks[e] + n.tShift[e], u = n.eMarks[e];
  if (c + 2 > u || n.src.slice(c, c + 2) !== "$$")
    return !1;
  if (c += 2, s = n.src.slice(c, u), i)
    return !0;
  for (s.trim().slice(-2) === "$$" && (s = s.trim().slice(0, -2), a = !0), o = e; !a && (o++, !(o >= t || (c = n.bMarks[o] + n.tShift[o], u = n.eMarks[o], c < u && n.tShift[o] < n.blkIndent))); )
    n.src.slice(c, u).trim().slice(-2) === "$$" && (l = n.src.slice(0, u).lastIndexOf("$$"), r = n.src.slice(c, l), a = !0);
  n.line = o + 1;
  const h = n.push("math_block", "math", 0);
  return h.block = !0, h.content = (s && s.trim() ? s + `
` : "") + n.getLines(e + 1, o, n.tShift[e], !0) + (r && r.trim() ? r : ""), h.map = [e, n.line], h.markup = "$$", !0;
}, AHe = (n, e) => {
  const t = (s) => {
    if (e.katexRef.value) {
      const r = e.katexRef.value.renderToString(s, {
        throwOnError: !1
      });
      return `<span class="${Lt}-katex-inline" data-processed>${r}</span>`;
    } else
      return `<span class="${Lt}-katex-inline">${s}</span>`;
  }, i = (s, r) => {
    if (e.katexRef.value) {
      const o = e.katexRef.value.renderToString(s, {
        throwOnError: !1,
        displayMode: !0
      });
      return `<p class="${Lt}-katex-block" data-line=${r} data-processed>${o}</p>`;
    } else
      return `<p class="${Lt}-katex-block" data-line=${r}>${s}</p>`;
  };
  n.inline.ruler.after("escape", "math_inline", PHe), n.block.ruler.after("blockquote", "math_block", EHe, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), n.renderer.rules.math_inline = (s, r) => t(s[r].content), n.renderer.rules.math_block = (s, r) => i(s[r].content, s[r].map[0]) + `
`;
}, $He = AHe, THe = (n, e) => {
  e = e || {};
  const t = 3, i = e.marker || "!", s = i.charCodeAt(0), r = i.length;
  let o = "", l = "";
  const a = (u, h, d, f, p) => {
    const g = u[h];
    return g.type === "admonition_open" ? (u[h].attrPush([
      "class",
      `${Lt}-admonition ${Lt}-admonition-${g.info}`
    ]), u[h].attrSet("data-line", String(u[h].map[0]))) : g.type === "admonition_title_open" && u[h].attrPush(["class", `${Lt}-admonition-title`]), p.renderToken(u, h, d);
  }, c = (u) => {
    const h = u.trim().split(" ", 2);
    l = "", o = h[0], h.length > 1 && (l = u.substring(o.length + 2)), (l === "" || !l) && (l = o);
  };
  n.block.ruler.before(
    "code",
    "admonition",
    (u, h, d, f) => {
      let p, g, m, v = !1, O = u.bMarks[h] + u.tShift[h], b = u.eMarks[h];
      if (s !== u.src.charCodeAt(O))
        return !1;
      for (p = O + 1; p <= b && i[(p - O) % r] === u.src[p]; p++)
        ;
      const w = Math.floor((p - O) / r);
      if (w !== t)
        return !1;
      p -= (p - O) % r;
      const x = u.src.slice(O, p), S = u.src.slice(p, b);
      if (c(S), f)
        return !0;
      for (g = h; g++, !(g >= d || (O = u.bMarks[g] + u.tShift[g], b = u.eMarks[g], O < b && u.sCount[g] < u.blkIndent)); )
        if (s === u.src.charCodeAt(O) && !(u.sCount[g] - u.blkIndent >= 4)) {
          for (p = O + 1; p <= b && i[(p - O) % r] === u.src[p]; p++)
            ;
          if (!(Math.floor((p - O) / r) < w) && (p -= (p - O) % r, p = u.skipSpaces(p), !(p < b))) {
            v = !0;
            break;
          }
        }
      const C = u.parentType, k = u.lineMax;
      return u.parentType = "root", u.lineMax = g, m = u.push("admonition_open", "div", 1), m.markup = x, m.block = !0, m.info = o, m.map = [h, g], m = u.push("admonition_title_open", "p", 1), m.markup = x + " " + o, m.map = [h, g], m = u.push("inline", "", 0), m.content = l, m.map = [h, u.line - 1], m.children = [], m = u.push("admonition_title_close", "p", -1), m.markup = x + " " + o, u.md.block.tokenize(u, h + 1, g), m = u.push("admonition_close", "div", -1), m.markup = u.src.slice(O, p), m.block = !0, u.parentType = C, u.lineMax = k, u.line = g + (v ? 1 : 0), !0;
    },
    {
      alt: ["paragraph", "reference", "blockquote", "list"]
    }
  ), n.renderer.rules.admonition_open = a, n.renderer.rules.admonition_title_open = a, n.renderer.rules.admonition_title_close = a, n.renderer.rules.admonition_close = a;
}, _He = THe, MHe = (n, e) => {
  n.renderer.rules.heading_open = (t, i) => {
    var s;
    const r = t[i], o = ((s = t[i + 1].children) == null ? void 0 : s.reduce((a, c) => a + (c.content || ""), "")) || "", l = r.markup.length;
    return e.headsRef.value.push({
      text: o,
      level: l
    }), r.map && r.level === 0 && (r.attrSet("data-line", String(r.map[0])), r.attrSet(
      "id",
      e.mdHeadingId(o, l, e.headsRef.value.length)
    )), n.renderer.renderToken(t, i, e);
  }, n.renderer.rules.heading_close = (t, i, s, r, o) => o.renderToken(t, i, s);
}, RHe = MHe, NHe = (n, e) => {
  const t = n.renderer.rules.fence, i = n.utils.unescapeAll, s = /\[(\w*)(?::([\w ]*))?\]/;
  function r(c) {
    return c.info ? i(c.info).trim() : "";
  }
  function o(c) {
    const u = r(c), [h = null, d = ""] = (s.exec(u) || []).slice(1);
    return [h, d];
  }
  function l(c) {
    const u = r(c);
    return u ? u.split(/(\s+)/g)[0] : "";
  }
  const a = (c, u, h, d, f) => {
    if (c[u].hidden)
      return "";
    const [p, g] = o(c[u]);
    if (p === null)
      return t(c, u, h, d, f);
    let m, v, O, b, w = "", x = "";
    for (let S = u; S < c.length && (m = c[S], [v, O] = o(m), v === p); S++)
      m.info = m.info.replace(s, ""), m.hidden = !0, b = S - u > 0 ? "" : " checked", w += `<li><input type="radio" name="label-group-${e.editorId}-${u}"${b}><label for="group-${e.editorId}-${u}-tab-${S - u}" onclick="this.previousElementSibling.click()">${O || l(m)}</label></li>
`, x += `<input type="radio" id="group-${e.editorId}-${u}-tab-${S - u}" name="group-${e.editorId}-${u}"${b}>
` + t(c, S, h, d, f);
    return `<div class="code-tabs">
<ul>
` + w + `</ul>
` + x + "</div>";
  };
  n.renderer.rules.fence = a;
}, DHe = NHe, LHe = (n) => {
  [
    "paragraph_open",
    "table_open",
    "ordered_list_open",
    "bullet_list_open",
    "blockquote_open",
    "hr",
    "html_block",
    "fence"
  ].forEach((e) => {
    const t = n.renderer.rules[e];
    t ? n.renderer.rules[e] = (i, s, r, o, l) => {
      let a;
      const c = t(i, s, r, o, l);
      return i[s].map && i[s].level === 0 && !/^<!--/.test(c) ? (a = i[s].map[0], c.replace(/^(<[^>]*)/, `$1 data-line="${a}"`)) : c;
    } : n.renderer.rules[e] = (i, s, r, o, l) => {
      let a;
      return i[s].map && i[s].level === 0 && (a = i[s].map[0], i[s].attrSet("data-line", String(a))), l.renderToken(i, s, r);
    };
  });
}, IHe = (n, e) => {
  const { editorConfig: t, markdownItConfig: i, markdownItPlugins: s } = so, r = ke("editorId"), o = ke("showCodeRowNumber"), l = ke("theme"), a = D([]), c = yHe(n), u = SHe(n), { reRenderRef: h, replaceMermaid: d } = wHe(n), f = nWe({
    html: !0,
    breaks: !0
  });
  i(f, {
    editorId: r
  });
  const p = [
    {
      type: "katex",
      plugin: $He,
      options: { katexRef: u }
    },
    {
      type: "image",
      plugin: sWe,
      options: { figcaption: !0, classes: "md-zoom" }
    },
    {
      type: "admonition",
      plugin: _He,
      options: {}
    },
    {
      type: "taskList",
      plugin: vWe,
      options: {}
    },
    {
      type: "heading",
      plugin: RHe,
      options: { mdHeadingId: n.mdHeadingId, headsRef: a }
    },
    {
      type: "codeTabs",
      plugin: DHe,
      options: { editorId: r }
    },
    {
      type: "xss",
      plugin: uHe,
      options: {
        // https://github.com/leizongmin/js-xss/blob/master/README.zh.md
        xss(x) {
          return {
            whiteList: Object.assign({}, x.getDefaultWhiteList(), {
              input: ["class", "disabled", "type", "checked"]
            })
          };
        }
      }
    }
  ];
  n.noMermaid || p.push({
    type: "mermaid",
    plugin: kHe,
    options: { themeRef: l }
  }), s(p, {
    editorId: r
  }).forEach((x) => {
    f.use(x.plugin, x.options);
  });
  const g = f.options.highlight;
  f.set({
    highlight: (x, S, C) => {
      if (g) {
        const M = g(x, S, C);
        if (M)
          return M;
      }
      let k;
      !n.noHighlight && c.value ? c.value.getLanguage(S) ? k = c.value.highlight(x, {
        language: S,
        ignoreIllegals: !0
      }).value : k = c.value.highlightAuto(x).value : k = f.utils.escapeHtml(x);
      const E = o ? Kre(k.replace(/^\n+|\n+$/g, "")) : `<span class="code-block">${k.replace(/^\n+|\n+$/g, "")}</span>`;
      return `<pre><code class="language-${S}" language=${S}>${E}</code></pre>`;
    }
  }), LHe(f);
  const m = D(`_article-key_${By()}`), v = D(n.sanitize(f.render(n.modelValue))), O = () => {
    da.emit(r, Ure, v.value), n.onHtmlChanged(v.value), n.onGetCatalog(a.value), da.emit(r, Ck, a.value), d();
  };
  qe(O);
  const b = () => {
    a.value = [], v.value = n.sanitize(f.render(n.modelValue)), O();
  }, w = $(() => (n.noKatex || u.value) && (n.noHighlight || c.value));
  return ne(
    [ks(n, "modelValue"), w, h],
    kw(
      b,
      (t == null ? void 0 : t.renderDelay) !== void 0 ? t == null ? void 0 : t.renderDelay : e ? 0 : 500
    )
  ), qe(() => {
    da.on(r, {
      name: Gre,
      callback() {
        da.emit(r, Ck, a.value);
      }
    }), da.on(r, {
      name: fR,
      callback: () => {
        b(), m.value = `_article-key_${By()}`;
      }
    });
  }), { html: v, key: m };
}, BHe = IHe, c4 = {
  modelValue: {
    type: String,
    default: ""
  },
  setting: {
    type: Object,
    default: () => ({})
  },
  onHtmlChanged: {
    type: Function,
    default: () => {
    }
  },
  onGetCatalog: {
    type: Function,
    default: () => {
    }
  },
  mdHeadingId: {
    type: Function,
    default: () => ""
  },
  noMermaid: {
    type: Boolean,
    default: !1
  },
  sanitize: {
    type: Function,
    default: (n) => n
  },
  // 不使用该函数功能
  noKatex: {
    type: Boolean,
    default: !1
  },
  formatCopiedText: {
    type: Function,
    default: (n) => n
  },
  noHighlight: {
    type: Boolean,
    default: !1
  },
  previewOnly: {
    type: Boolean,
    default: !1
  },
  noImgZoomIn: {
    type: Boolean
  },
  sanitizeMermaid: {
    type: Function
  }
};
({
  ...c4
});
const QHe = /* @__PURE__ */ F({
  name: "ContentPreview",
  props: c4,
  setup(n) {
    const e = ke("editorId"), t = ke("previewTheme"), i = ke("showCodeRowNumber"), {
      html: s,
      key: r
    } = BHe(n, n.previewOnly);
    return vHe(n, s, r), pHe(n, s), () => K(Tt, null, [K("div", {
      id: `${e}-preview-wrapper`,
      class: `${Lt}-preview-wrapper`,
      "data-show": n.setting.preview,
      key: "content-preview-wrapper"
    }, [K("div", {
      key: r.value,
      id: `${e}-preview`,
      class: [`${Lt}-preview`, `${t == null ? void 0 : t.value}-theme`, i && `${Lt}-scrn`],
      innerHTML: s.value
    }, null)]), !n.previewOnly && K("div", {
      id: `${e}-html-wrapper`,
      class: `${Lt}-preview-wrapper`,
      "data-show": n.setting.htmlPreview,
      key: "html-preview-wrapper"
    }, [K("div", {
      class: `${Lt}-html`
    }, [s.value])])]);
  }
}), zHe = (n) => {
  var e, t;
  const { editorId: i } = n, s = (t = (e = so) == null ? void 0 : e.editorExtensions) == null ? void 0 : t.highlight;
  ft("editorId", i), ft(
    "theme",
    $(() => n.theme)
  ), ft(
    "language",
    $(() => n.language)
  ), ft(
    "highlight",
    $(() => {
      const o = {
        ...Sk,
        ...s == null ? void 0 : s.css
      }, l = n.codeStyleReverse && n.codeStyleReverseList.includes(n.previewTheme) ? "dark" : n.theme;
      return {
        js: (s == null ? void 0 : s.js) || Vre,
        css: o[n.codeTheme] ? o[n.codeTheme][l] : Sk.atom[l]
      };
    })
  ), ft("showCodeRowNumber", n.showCodeRowNumber);
  const r = $(() => {
    var o, l;
    const a = {
      ...wk,
      ...(l = (o = so) == null ? void 0 : o.editorConfig) == null ? void 0 : l.languageUserDefined
    };
    return a[n.language] ? a[n.language] : wk["zh-CN"];
  });
  ft("usedLanguageText", r), ft(
    "previewTheme",
    $(() => n.previewTheme)
  ), ft(
    "customIcon",
    $(() => n.customIcon)
  );
}, jHe = (n) => {
  qe(() => {
    var e, t;
    if (!n.noIconfont)
      if (so.iconfontType === "svg") {
        const i = document.createElement("script");
        i.src = ((e = so.editorExtensions) == null ? void 0 : e.iconfont) || zre, i.id = `${Lt}-icon`, Za(i);
      } else {
        const i = document.createElement("link");
        i.rel = "stylesheet", i.href = ((t = so.editorExtensions) == null ? void 0 : t.iconfontClass) || jre, i.id = `${Lt}-icon-class`, Za(i);
      }
  });
}, VHe = (n) => n, u4 = {
  /**
   * markdown content.
   *
   * @default ''
   */
  modelValue: {
    type: String,
    default: ""
  },
  /**
   * 主题，支持light和dark
   *
   * @default 'light'
   */
  theme: {
    type: String,
    default: "light"
  },
  /**
   * 外层类名
   *
   * @default ''
   */
  class: {
    type: String,
    default: ""
  },
  /**
   * 预设语言名称
   *
   * @default 'zh-CN'
   */
  language: {
    type: String,
    default: "zh-CN"
  },
  /**
   * html变化事件
   */
  onHtmlChanged: {
    type: Function
  },
  /**
   * 获取目录结构
   */
  onGetCatalog: {
    type: Function
  },
  /**
   * 编辑器唯一标识
   *
   * @default 'md-editor-v3'
   */
  editorId: {
    type: String,
    default: Qre
  },
  /**
   * 预览中代码是否显示行号
   *
   * @default false
   */
  showCodeRowNumber: {
    type: Boolean,
    default: !1
  },
  /**
   * 预览内容样式
   *
   * @default 'default'
   */
  previewTheme: {
    type: String,
    default: "default"
  },
  /**
   * 编辑器样式
   */
  style: {
    type: Object,
    default: () => ({})
  },
  /**
   * 标题的id生成方式
   *
   * @default (text: string) => text
   */
  mdHeadingId: {
    type: Function,
    default: VHe
  },
  /**
   *
   * 不能保证文本正确的情况，在marked编译md文本后通过该方法处理
   * 推荐DOMPurify、sanitize-html
   *
   * @default (text: string) => text
   */
  sanitize: {
    type: Function,
    default: (n) => n
  },
  /**
   * 不使用该mermaid
   *
   * @default false
   */
  noMermaid: {
    type: Boolean,
    default: !1
  },
  /**
   * 不使用katex
   *
   * @default false
   */
  noKatex: {
    type: Boolean,
    default: !1
  },
  /**
   * 代码主题
   *
   * @default 'atom'
   */
  codeTheme: {
    type: String,
    default: "atom"
  },
  /**
   * 不插入iconfont链接
   *
   * @default false
   */
  noIconfont: {
    type: Boolean
  },
  /**
   * 复制代码格式化方法
   *
   * @default (text) => text
   */
  formatCopiedText: {
    type: Function,
    default: (n) => n
  },
  /**
   * 某些预览主题的代码模块背景是暗色系
   * 将这个属性设置为true，会自动在该主题下的light模式下使用暗色系的代码风格
   *
   * @default true
   */
  codeStyleReverse: {
    type: Boolean,
    default: !0
  },
  /**
   * 需要自动调整的预览主题
   *
   * @default ['default', 'mk-cute']
   */
  codeStyleReverseList: {
    type: Array,
    default: ["default", "mk-cute"]
  },
  noHighlight: {
    type: Boolean,
    default: !1
  },
  /**
   * 是否关闭编辑器默认的放大缩小功能
   */
  noImgZoomIn: {
    type: Boolean,
    default: !1
  },
  /**
   * 自定义的图标
   */
  customIcon: {
    type: Object,
    default: {}
  },
  sanitizeMermaid: {
    type: Function,
    default: (n) => Promise.resolve(n)
  }
};
({
  ...u4
});
const h4 = ["onHtmlChanged", "onGetCatalog"];
[
  ...h4
];
const FHe = (n, e) => {
  const { editorId: t } = n, i = {
    rerender() {
      da.emit(t, fR);
    }
  };
  e.expose(i);
}, ZHe = /* @__PURE__ */ F({
  name: "MdPreview",
  props: u4,
  emits: h4,
  setup(n, e) {
    const {
      editorId: t,
      noKatex: i,
      noMermaid: s,
      noHighlight: r
    } = n;
    return zHe(n), jHe(n), FHe(n, e), Gn(() => {
      da.clear(t);
    }), () => K("div", {
      id: t,
      class: [Lt, n.class, n.theme === "dark" && `${Lt}-dark`, `${Lt}-previewOnly`],
      style: n.style
    }, [K(QHe, {
      modelValue: n.modelValue,
      onHtmlChanged: (o) => {
        n.onHtmlChanged ? n.onHtmlChanged(o) : e.emit("onHtmlChanged", o);
      },
      onGetCatalog: (o) => {
        n.onGetCatalog ? n.onGetCatalog(o) : e.emit("onGetCatalog", o);
      },
      mdHeadingId: n.mdHeadingId,
      noMermaid: s,
      sanitize: n.sanitize,
      noKatex: i,
      formatCopiedText: n.formatCopiedText,
      noHighlight: r,
      noImgZoomIn: n.noImgZoomIn,
      previewOnly: !0,
      sanitizeMermaid: n.sanitizeMermaid
    }, null)]);
  }
}), gb = ZHe;
gb.install = (n) => (n.component(gb.name, gb), n);
const qHe = P0({
  String: X.string,
  Number: X.number,
  "True False": X.bool,
  PropertyName: X.propertyName,
  Null: X.null,
  ",": X.separator,
  "[ ]": X.squareBracket,
  "{ }": X.brace
}), WHe = zu.deserialize({
  version: 14,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",
  stateData: "#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",
  goto: "!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array",
  maxTerm: 25,
  nodeProps: [
    ["isolate", -2, 6, 11, ""],
    ["openedBy", 7, "{", 12, "["],
    ["closedBy", 8, "}", 13, "]"]
  ],
  propSources: [qHe],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",
  tokenizers: [0],
  topRules: { JsonText: [0, 1] },
  tokenPrec: 0
}), HHe = /* @__PURE__ */ Lu.define({
  name: "json",
  parser: /* @__PURE__ */ WHe.configure({
    props: [
      /* @__PURE__ */ $0.add({
        Object: /* @__PURE__ */ Fc({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ Fc({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ T0.add({
        "Object Array": Y3
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function rGe() {
  return new Zw(HHe);
}
var XHe = Object.defineProperty, Rm = Object.getOwnPropertySymbols, d4 = Object.prototype.hasOwnProperty, f4 = Object.prototype.propertyIsEnumerable, uE = (n, e, t) => e in n ? XHe(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, _c = (n, e) => {
  for (var t in e || (e = {}))
    d4.call(e, t) && uE(n, t, e[t]);
  if (Rm)
    for (var t of Rm(e))
      f4.call(e, t) && uE(n, t, e[t]);
  return n;
}, p4 = (n, e) => {
  var t = {};
  for (var i in n)
    d4.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);
  if (n != null && Rm)
    for (var i of Rm(n))
      e.indexOf(i) < 0 && f4.call(n, i) && (t[i] = n[i]);
  return t;
};
const g4 = "[vue-draggable-plus]: ";
function YHe(n) {
  console.warn(g4 + n);
}
function UHe(n) {
  console.error(g4 + n);
}
function hE(n, e, t) {
  return t >= 0 && t < n.length && n.splice(t, 0, n.splice(e, 1)[0]), n;
}
function GHe(n) {
  return n.replace(/-(\w)/g, (e, t) => t ? t.toUpperCase() : "");
}
function KHe(n) {
  return Object.keys(n).reduce((e, t) => (typeof n[t] < "u" && (e[GHe(t)] = n[t]), e), {});
}
function JHe(n, e) {
  if (Array.isArray(n))
    return n.splice(e, 1);
}
function eXe(n, e, t) {
  if (Array.isArray(n))
    return n.splice(e, 0, t);
}
function tXe(n) {
  return typeof n > "u";
}
function nXe(n) {
  return typeof n == "string";
}
function dE(n, e, t) {
  const i = n.children[t];
  n.insertBefore(e, i);
}
function mb(n) {
  n.parentNode && n.parentNode.removeChild(n);
}
function iXe(n, e = document) {
  var t;
  let i = null;
  return typeof (e == null ? void 0 : e.querySelector) == "function" ? i = (t = e == null ? void 0 : e.querySelector) == null ? void 0 : t.call(e, n) : i = document.querySelector(n), i || YHe(`Element not found: ${n}`), i;
}
function sXe(n, e, t = null) {
  return function(...i) {
    return n.apply(t, i), e.apply(t, i);
  };
}
function rXe(n, e) {
  const t = _c({}, n);
  return Object.keys(e).forEach((i) => {
    t[i] ? t[i] = sXe(n[i], e[i]) : t[i] = e[i];
  }), t;
}
function oXe(n) {
  return n instanceof HTMLElement;
}
function lXe(n, e) {
  Object.keys(n).forEach((t) => {
    e(t, n[t]);
  });
}
/**!
 * Sortable 1.15.1
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function fE(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var i = Object.getOwnPropertySymbols(n);
    e && (i = i.filter(function(s) {
      return Object.getOwnPropertyDescriptor(n, s).enumerable;
    })), t.push.apply(t, i);
  }
  return t;
}
function po(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? arguments[e] : {};
    e % 2 ? fE(Object(t), !0).forEach(function(i) {
      aXe(n, i, t[i]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(t)) : fE(Object(t)).forEach(function(i) {
      Object.defineProperty(n, i, Object.getOwnPropertyDescriptor(t, i));
    });
  }
  return n;
}
function kg(n) {
  "@babel/helpers - typeof";
  return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? kg = function(e) {
    return typeof e;
  } : kg = function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, kg(n);
}
function aXe(n, e, t) {
  return e in n ? Object.defineProperty(n, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = t, n;
}
function Wo() {
  return Wo = Object.assign || function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var i in t)
        Object.prototype.hasOwnProperty.call(t, i) && (n[i] = t[i]);
    }
    return n;
  }, Wo.apply(this, arguments);
}
function cXe(n, e) {
  if (n == null)
    return {};
  var t = {}, i = Object.keys(n), s, r;
  for (r = 0; r < i.length; r++)
    s = i[r], !(e.indexOf(s) >= 0) && (t[s] = n[s]);
  return t;
}
function uXe(n, e) {
  if (n == null)
    return {};
  var t = cXe(n, e), i, s;
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    for (s = 0; s < r.length; s++)
      i = r[s], !(e.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(n, i) && (t[i] = n[i]);
  }
  return t;
}
var hXe = "1.15.1";
function No(n) {
  if (typeof window < "u" && window.navigator)
    return !!/* @__PURE__ */ navigator.userAgent.match(n);
}
var Jo = No(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i), Bf = No(/Edge/i), pE = No(/firefox/i), dd = No(/safari/i) && !No(/chrome/i) && !No(/android/i), m4 = No(/iP(ad|od|hone)/i), v4 = No(/chrome/i) && No(/android/i), b4 = {
  capture: !1,
  passive: !1
};
function Mt(n, e, t) {
  n.addEventListener(e, t, !Jo && b4);
}
function Ct(n, e, t) {
  n.removeEventListener(e, t, !Jo && b4);
}
function Nm(n, e) {
  if (e) {
    if (e[0] === ">" && (e = e.substring(1)), n)
      try {
        if (n.matches)
          return n.matches(e);
        if (n.msMatchesSelector)
          return n.msMatchesSelector(e);
        if (n.webkitMatchesSelector)
          return n.webkitMatchesSelector(e);
      } catch {
        return !1;
      }
    return !1;
  }
}
function dXe(n) {
  return n.host && n !== document && n.host.nodeType ? n.host : n.parentNode;
}
function Qr(n, e, t, i) {
  if (n) {
    t = t || document;
    do {
      if (e != null && (e[0] === ">" ? n.parentNode === t && Nm(n, e) : Nm(n, e)) || i && n === t)
        return n;
      if (n === t)
        break;
    } while (n = dXe(n));
  }
  return null;
}
var gE = /\s+/g;
function ms(n, e, t) {
  if (n && e)
    if (n.classList)
      n.classList[t ? "add" : "remove"](e);
    else {
      var i = (" " + n.className + " ").replace(gE, " ").replace(" " + e + " ", " ");
      n.className = (i + (t ? " " + e : "")).replace(gE, " ");
    }
}
function Ve(n, e, t) {
  var i = n && n.style;
  if (i) {
    if (t === void 0)
      return document.defaultView && document.defaultView.getComputedStyle ? t = document.defaultView.getComputedStyle(n, "") : n.currentStyle && (t = n.currentStyle), e === void 0 ? t : t[e];
    !(e in i) && e.indexOf("webkit") === -1 && (e = "-webkit-" + e), i[e] = t + (typeof t == "string" ? "" : "px");
  }
}
function Xc(n, e) {
  var t = "";
  if (typeof n == "string")
    t = n;
  else
    do {
      var i = Ve(n, "transform");
      i && i !== "none" && (t = i + " " + t);
    } while (!e && (n = n.parentNode));
  var s = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  return s && new s(t);
}
function y4(n, e, t) {
  if (n) {
    var i = n.getElementsByTagName(e), s = 0, r = i.length;
    if (t)
      for (; s < r; s++)
        t(i[s], s);
    return i;
  }
  return [];
}
function oo() {
  var n = document.scrollingElement;
  return n || document.documentElement;
}
function Mn(n, e, t, i, s) {
  if (!(!n.getBoundingClientRect && n !== window)) {
    var r, o, l, a, c, u, h;
    if (n !== window && n.parentNode && n !== oo() ? (r = n.getBoundingClientRect(), o = r.top, l = r.left, a = r.bottom, c = r.right, u = r.height, h = r.width) : (o = 0, l = 0, a = window.innerHeight, c = window.innerWidth, u = window.innerHeight, h = window.innerWidth), (e || t) && n !== window && (s = s || n.parentNode, !Jo))
      do
        if (s && s.getBoundingClientRect && (Ve(s, "transform") !== "none" || t && Ve(s, "position") !== "static")) {
          var d = s.getBoundingClientRect();
          o -= d.top + parseInt(Ve(s, "border-top-width")), l -= d.left + parseInt(Ve(s, "border-left-width")), a = o + r.height, c = l + r.width;
          break;
        }
      while (s = s.parentNode);
    if (i && n !== window) {
      var f = Xc(s || n), p = f && f.a, g = f && f.d;
      f && (o /= g, l /= p, h /= p, u /= g, a = o + u, c = l + h);
    }
    return {
      top: o,
      left: l,
      bottom: a,
      right: c,
      width: h,
      height: u
    };
  }
}
function O4(n) {
  var e = Mn(n), t = parseInt(Ve(n, "padding-left")), i = parseInt(Ve(n, "padding-top")), s = parseInt(Ve(n, "padding-right")), r = parseInt(Ve(n, "padding-bottom"));
  return e.top += i + parseInt(Ve(n, "border-top-width")), e.left += t + parseInt(Ve(n, "border-left-width")), e.width = n.clientWidth - t - s, e.height = n.clientHeight - i - r, e.bottom = e.top + e.height, e.right = e.left + e.width, e;
}
function mE(n, e, t) {
  for (var i = kl(n, !0), s = Mn(n)[e]; i; ) {
    var r = Mn(i)[t], o = void 0;
    if (t === "top" || t === "left" ? o = s >= r : o = s <= r, !o)
      return i;
    if (i === oo())
      break;
    i = kl(i, !1);
  }
  return !1;
}
function ju(n, e, t, i) {
  for (var s = 0, r = 0, o = n.children; r < o.length; ) {
    if (o[r].style.display !== "none" && o[r] !== et.ghost && (i || o[r] !== et.dragged) && Qr(o[r], t.draggable, n, !1)) {
      if (s === e)
        return o[r];
      s++;
    }
    r++;
  }
  return null;
}
function yx(n, e) {
  for (var t = n.lastElementChild; t && (t === et.ghost || Ve(t, "display") === "none" || e && !Nm(t, e)); )
    t = t.previousElementSibling;
  return t || null;
}
function Ls(n, e) {
  var t = 0;
  if (!n || !n.parentNode)
    return -1;
  for (; n = n.previousElementSibling; )
    n.nodeName.toUpperCase() !== "TEMPLATE" && n !== et.clone && (!e || Nm(n, e)) && t++;
  return t;
}
function vE(n) {
  var e = 0, t = 0, i = oo();
  if (n)
    do {
      var s = Xc(n), r = s.a, o = s.d;
      e += n.scrollLeft * r, t += n.scrollTop * o;
    } while (n !== i && (n = n.parentNode));
  return [e, t];
}
function fXe(n, e) {
  for (var t in n)
    if (n.hasOwnProperty(t)) {
      for (var i in e)
        if (e.hasOwnProperty(i) && e[i] === n[t][i])
          return Number(t);
    }
  return -1;
}
function kl(n, e) {
  if (!n || !n.getBoundingClientRect)
    return oo();
  var t = n, i = !1;
  do
    if (t.clientWidth < t.scrollWidth || t.clientHeight < t.scrollHeight) {
      var s = Ve(t);
      if (t.clientWidth < t.scrollWidth && (s.overflowX == "auto" || s.overflowX == "scroll") || t.clientHeight < t.scrollHeight && (s.overflowY == "auto" || s.overflowY == "scroll")) {
        if (!t.getBoundingClientRect || t === document.body)
          return oo();
        if (i || e)
          return t;
        i = !0;
      }
    }
  while (t = t.parentNode);
  return oo();
}
function pXe(n, e) {
  if (n && e)
    for (var t in e)
      e.hasOwnProperty(t) && (n[t] = e[t]);
  return n;
}
function vb(n, e) {
  return Math.round(n.top) === Math.round(e.top) && Math.round(n.left) === Math.round(e.left) && Math.round(n.height) === Math.round(e.height) && Math.round(n.width) === Math.round(e.width);
}
var fd;
function w4(n, e) {
  return function() {
    if (!fd) {
      var t = arguments, i = this;
      t.length === 1 ? n.call(i, t[0]) : n.apply(i, t), fd = setTimeout(function() {
        fd = void 0;
      }, e);
    }
  };
}
function gXe() {
  clearTimeout(fd), fd = void 0;
}
function x4(n, e, t) {
  n.scrollLeft += e, n.scrollTop += t;
}
function S4(n) {
  var e = window.Polymer, t = window.jQuery || window.Zepto;
  return e && e.dom ? e.dom(n).cloneNode(!0) : t ? t(n).clone(!0)[0] : n.cloneNode(!0);
}
var Cs = "Sortable" + (/* @__PURE__ */ new Date()).getTime();
function mXe() {
  var n = [], e;
  return {
    captureAnimationState: function() {
      if (n = [], !!this.options.animation) {
        var t = [].slice.call(this.el.children);
        t.forEach(function(i) {
          if (!(Ve(i, "display") === "none" || i === et.ghost)) {
            n.push({
              target: i,
              rect: Mn(i)
            });
            var s = po({}, n[n.length - 1].rect);
            if (i.thisAnimationDuration) {
              var r = Xc(i, !0);
              r && (s.top -= r.f, s.left -= r.e);
            }
            i.fromRect = s;
          }
        });
      }
    },
    addAnimationState: function(t) {
      n.push(t);
    },
    removeAnimationState: function(t) {
      n.splice(fXe(n, {
        target: t
      }), 1);
    },
    animateAll: function(t) {
      var i = this;
      if (!this.options.animation) {
        clearTimeout(e), typeof t == "function" && t();
        return;
      }
      var s = !1, r = 0;
      n.forEach(function(o) {
        var l = 0, a = o.target, c = a.fromRect, u = Mn(a), h = a.prevFromRect, d = a.prevToRect, f = o.rect, p = Xc(a, !0);
        p && (u.top -= p.f, u.left -= p.e), a.toRect = u, a.thisAnimationDuration && vb(h, u) && !vb(c, u) && // Make sure animatingRect is on line between toRect & fromRect
        (f.top - u.top) / (f.left - u.left) === (c.top - u.top) / (c.left - u.left) && (l = bXe(f, h, d, i.options)), vb(u, c) || (a.prevFromRect = c, a.prevToRect = u, l || (l = i.options.animation), i.animate(a, f, u, l)), l && (s = !0, r = Math.max(r, l), clearTimeout(a.animationResetTimer), a.animationResetTimer = setTimeout(function() {
          a.animationTime = 0, a.prevFromRect = null, a.fromRect = null, a.prevToRect = null, a.thisAnimationDuration = null;
        }, l), a.thisAnimationDuration = l);
      }), clearTimeout(e), s ? e = setTimeout(function() {
        typeof t == "function" && t();
      }, r) : typeof t == "function" && t(), n = [];
    },
    animate: function(t, i, s, r) {
      if (r) {
        Ve(t, "transition", ""), Ve(t, "transform", "");
        var o = Xc(this.el), l = o && o.a, a = o && o.d, c = (i.left - s.left) / (l || 1), u = (i.top - s.top) / (a || 1);
        t.animatingX = !!c, t.animatingY = !!u, Ve(t, "transform", "translate3d(" + c + "px," + u + "px,0)"), this.forRepaintDummy = vXe(t), Ve(t, "transition", "transform " + r + "ms" + (this.options.easing ? " " + this.options.easing : "")), Ve(t, "transform", "translate3d(0,0,0)"), typeof t.animated == "number" && clearTimeout(t.animated), t.animated = setTimeout(function() {
          Ve(t, "transition", ""), Ve(t, "transform", ""), t.animated = !1, t.animatingX = !1, t.animatingY = !1;
        }, r);
      }
    }
  };
}
function vXe(n) {
  return n.offsetWidth;
}
function bXe(n, e, t, i) {
  return Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) / Math.sqrt(Math.pow(e.top - t.top, 2) + Math.pow(e.left - t.left, 2)) * i.animation;
}
var yc = [], bb = {
  initializeByDefault: !0
}, Qf = {
  mount: function(n) {
    for (var e in bb)
      bb.hasOwnProperty(e) && !(e in n) && (n[e] = bb[e]);
    yc.forEach(function(t) {
      if (t.pluginName === n.pluginName)
        throw "Sortable: Cannot mount plugin ".concat(n.pluginName, " more than once");
    }), yc.push(n);
  },
  pluginEvent: function(n, e, t) {
    var i = this;
    this.eventCanceled = !1, t.cancel = function() {
      i.eventCanceled = !0;
    };
    var s = n + "Global";
    yc.forEach(function(r) {
      e[r.pluginName] && (e[r.pluginName][s] && e[r.pluginName][s](po({
        sortable: e
      }, t)), e.options[r.pluginName] && e[r.pluginName][n] && e[r.pluginName][n](po({
        sortable: e
      }, t)));
    });
  },
  initializePlugins: function(n, e, t, i) {
    yc.forEach(function(o) {
      var l = o.pluginName;
      if (!(!n.options[l] && !o.initializeByDefault)) {
        var a = new o(n, e, n.options);
        a.sortable = n, a.options = n.options, n[l] = a, Wo(t, a.defaults);
      }
    });
    for (var s in n.options)
      if (n.options.hasOwnProperty(s)) {
        var r = this.modifyOption(n, s, n.options[s]);
        typeof r < "u" && (n.options[s] = r);
      }
  },
  getEventProperties: function(n, e) {
    var t = {};
    return yc.forEach(function(i) {
      typeof i.eventProperties == "function" && Wo(t, i.eventProperties.call(e[i.pluginName], n));
    }), t;
  },
  modifyOption: function(n, e, t) {
    var i;
    return yc.forEach(function(s) {
      n[s.pluginName] && s.optionListeners && typeof s.optionListeners[e] == "function" && (i = s.optionListeners[e].call(n[s.pluginName], t));
    }), i;
  }
};
function yXe(n) {
  var e = n.sortable, t = n.rootEl, i = n.name, s = n.targetEl, r = n.cloneEl, o = n.toEl, l = n.fromEl, a = n.oldIndex, c = n.newIndex, u = n.oldDraggableIndex, h = n.newDraggableIndex, d = n.originalEvent, f = n.putSortable, p = n.extraEventProperties;
  if (e = e || t && t[Cs], !!e) {
    var g, m = e.options, v = "on" + i.charAt(0).toUpperCase() + i.substr(1);
    window.CustomEvent && !Jo && !Bf ? g = new CustomEvent(i, {
      bubbles: !0,
      cancelable: !0
    }) : (g = document.createEvent("Event"), g.initEvent(i, !0, !0)), g.to = o || t, g.from = l || t, g.item = s || t, g.clone = r, g.oldIndex = a, g.newIndex = c, g.oldDraggableIndex = u, g.newDraggableIndex = h, g.originalEvent = d, g.pullMode = f ? f.lastPutMode : void 0;
    var O = po(po({}, p), Qf.getEventProperties(i, e));
    for (var b in O)
      g[b] = O[b];
    t && t.dispatchEvent(g), m[v] && m[v].call(e, g);
  }
}
var OXe = ["evt"], Gi = function(n, e) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = t.evt, s = uXe(t, OXe);
  Qf.pluginEvent.bind(et)(n, e, po({
    dragEl: Oe,
    parentEl: bn,
    ghostEl: at,
    rootEl: rn,
    nextEl: aa,
    lastDownEl: Pg,
    cloneEl: fn,
    cloneHidden: vl,
    dragStarted: zh,
    putSortable: di,
    activeSortable: et.active,
    originalEvent: i,
    oldIndex: Mc,
    oldDraggableIndex: pd,
    newIndex: vs,
    newDraggableIndex: pl,
    hideGhostForTarget: E4,
    unhideGhostForTarget: A4,
    cloneNowHidden: function() {
      vl = !0;
    },
    cloneNowShown: function() {
      vl = !1;
    },
    dispatchSortableEvent: function(r) {
      zi({
        sortable: e,
        name: r,
        originalEvent: i
      });
    }
  }, s));
};
function zi(n) {
  yXe(po({
    putSortable: di,
    cloneEl: fn,
    targetEl: Oe,
    rootEl: rn,
    oldIndex: Mc,
    oldDraggableIndex: pd,
    newIndex: vs,
    newDraggableIndex: pl
  }, n));
}
var Oe, bn, at, rn, aa, Pg, fn, vl, Mc, vs, pd, pl, Bp, di, Pc = !1, Dm = !1, Lm = [], ia, rr, yb, Ob, bE, yE, zh, Oc, gd, md = !1, Qp = !1, Eg, Ai, wb = [], XO = !1, Im = [], Y0 = typeof document < "u", zp = m4, OE = Bf || Jo ? "cssFloat" : "float", wXe = Y0 && !v4 && !m4 && "draggable" in document.createElement("div"), C4 = function() {
  if (Y0) {
    if (Jo)
      return !1;
    var n = document.createElement("x");
    return n.style.cssText = "pointer-events:auto", n.style.pointerEvents === "auto";
  }
}(), k4 = function(n, e) {
  var t = Ve(n), i = parseInt(t.width) - parseInt(t.paddingLeft) - parseInt(t.paddingRight) - parseInt(t.borderLeftWidth) - parseInt(t.borderRightWidth), s = ju(n, 0, e), r = ju(n, 1, e), o = s && Ve(s), l = r && Ve(r), a = o && parseInt(o.marginLeft) + parseInt(o.marginRight) + Mn(s).width, c = l && parseInt(l.marginLeft) + parseInt(l.marginRight) + Mn(r).width;
  if (t.display === "flex")
    return t.flexDirection === "column" || t.flexDirection === "column-reverse" ? "vertical" : "horizontal";
  if (t.display === "grid")
    return t.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
  if (s && o.float && o.float !== "none") {
    var u = o.float === "left" ? "left" : "right";
    return r && (l.clear === "both" || l.clear === u) ? "vertical" : "horizontal";
  }
  return s && (o.display === "block" || o.display === "flex" || o.display === "table" || o.display === "grid" || a >= i && t[OE] === "none" || r && t[OE] === "none" && a + c > i) ? "vertical" : "horizontal";
}, xXe = function(n, e, t) {
  var i = t ? n.left : n.top, s = t ? n.right : n.bottom, r = t ? n.width : n.height, o = t ? e.left : e.top, l = t ? e.right : e.bottom, a = t ? e.width : e.height;
  return i === o || s === l || i + r / 2 === o + a / 2;
}, SXe = function(n, e) {
  var t;
  return Lm.some(function(i) {
    var s = i[Cs].options.emptyInsertThreshold;
    if (!(!s || yx(i))) {
      var r = Mn(i), o = n >= r.left - s && n <= r.right + s, l = e >= r.top - s && e <= r.bottom + s;
      if (o && l)
        return t = i;
    }
  }), t;
}, P4 = function(n) {
  function e(s, r) {
    return function(o, l, a, c) {
      var u = o.options.group.name && l.options.group.name && o.options.group.name === l.options.group.name;
      if (s == null && (r || u))
        return !0;
      if (s == null || s === !1)
        return !1;
      if (r && s === "clone")
        return s;
      if (typeof s == "function")
        return e(s(o, l, a, c), r)(o, l, a, c);
      var h = (r ? o : l).options.group.name;
      return s === !0 || typeof s == "string" && s === h || s.join && s.indexOf(h) > -1;
    };
  }
  var t = {}, i = n.group;
  (!i || kg(i) != "object") && (i = {
    name: i
  }), t.name = i.name, t.checkPull = e(i.pull, !0), t.checkPut = e(i.put), t.revertClone = i.revertClone, n.group = t;
}, E4 = function() {
  !C4 && at && Ve(at, "display", "none");
}, A4 = function() {
  !C4 && at && Ve(at, "display", "");
};
Y0 && !v4 && document.addEventListener("click", function(n) {
  if (Dm)
    return n.preventDefault(), n.stopPropagation && n.stopPropagation(), n.stopImmediatePropagation && n.stopImmediatePropagation(), Dm = !1, !1;
}, !0);
var sa = function(n) {
  if (Oe) {
    n = n.touches ? n.touches[0] : n;
    var e = SXe(n.clientX, n.clientY);
    if (e) {
      var t = {};
      for (var i in n)
        n.hasOwnProperty(i) && (t[i] = n[i]);
      t.target = t.rootEl = e, t.preventDefault = void 0, t.stopPropagation = void 0, e[Cs]._onDragOver(t);
    }
  }
}, CXe = function(n) {
  Oe && Oe.parentNode[Cs]._isOutsideThisEl(n.target);
};
function et(n, e) {
  if (!(n && n.nodeType && n.nodeType === 1))
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(n));
  this.el = n, this.options = e = Wo({}, e), n[Cs] = this;
  var t = {
    group: null,
    sort: !0,
    disabled: !1,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(n.nodeName) ? ">li" : ">*",
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: !1,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: !0,
    direction: function() {
      return k4(n, this.options);
    },
    ghostClass: "sortable-ghost",
    chosenClass: "sortable-chosen",
    dragClass: "sortable-drag",
    ignore: "a, img",
    filter: null,
    preventOnFilter: !0,
    animation: 0,
    easing: null,
    setData: function(r, o) {
      r.setData("Text", o.textContent);
    },
    dropBubble: !1,
    dragoverBubble: !1,
    dataIdAttr: "data-id",
    delay: 0,
    delayOnTouchOnly: !1,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: !1,
    fallbackClass: "sortable-fallback",
    fallbackOnBody: !1,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: et.supportPointer !== !1 && "PointerEvent" in window && !dd,
    emptyInsertThreshold: 5
  };
  Qf.initializePlugins(this, n, t);
  for (var i in t)
    !(i in e) && (e[i] = t[i]);
  P4(e);
  for (var s in this)
    s.charAt(0) === "_" && typeof this[s] == "function" && (this[s] = this[s].bind(this));
  this.nativeDraggable = e.forceFallback ? !1 : wXe, this.nativeDraggable && (this.options.touchStartThreshold = 1), e.supportPointer ? Mt(n, "pointerdown", this._onTapStart) : (Mt(n, "mousedown", this._onTapStart), Mt(n, "touchstart", this._onTapStart)), this.nativeDraggable && (Mt(n, "dragover", this), Mt(n, "dragenter", this)), Lm.push(this.el), e.store && e.store.get && this.sort(e.store.get(this) || []), Wo(this, mXe());
}
et.prototype = /** @lends Sortable.prototype */
{
  constructor: et,
  _isOutsideThisEl: function(n) {
    !this.el.contains(n) && n !== this.el && (Oc = null);
  },
  _getDirection: function(n, e) {
    return typeof this.options.direction == "function" ? this.options.direction.call(this, n, e, Oe) : this.options.direction;
  },
  _onTapStart: function(n) {
    if (n.cancelable) {
      var e = this, t = this.el, i = this.options, s = i.preventOnFilter, r = n.type, o = n.touches && n.touches[0] || n.pointerType && n.pointerType === "touch" && n, l = (o || n).target, a = n.target.shadowRoot && (n.path && n.path[0] || n.composedPath && n.composedPath()[0]) || l, c = i.filter;
      if (MXe(t), !Oe && !(/mousedown|pointerdown/.test(r) && n.button !== 0 || i.disabled) && !a.isContentEditable && !(!this.nativeDraggable && dd && l && l.tagName.toUpperCase() === "SELECT") && (l = Qr(l, i.draggable, t, !1), !(l && l.animated) && Pg !== l)) {
        if (Mc = Ls(l), pd = Ls(l, i.draggable), typeof c == "function") {
          if (c.call(this, n, l, this)) {
            zi({
              sortable: e,
              rootEl: a,
              name: "filter",
              targetEl: l,
              toEl: t,
              fromEl: t
            }), Gi("filter", e, {
              evt: n
            }), s && n.cancelable && n.preventDefault();
            return;
          }
        } else if (c && (c = c.split(",").some(function(u) {
          if (u = Qr(a, u.trim(), t, !1), u)
            return zi({
              sortable: e,
              rootEl: u,
              name: "filter",
              targetEl: l,
              fromEl: t,
              toEl: t
            }), Gi("filter", e, {
              evt: n
            }), !0;
        }), c)) {
          s && n.cancelable && n.preventDefault();
          return;
        }
        i.handle && !Qr(a, i.handle, t, !1) || this._prepareDragStart(n, o, l);
      }
    }
  },
  _prepareDragStart: function(n, e, t) {
    var i = this, s = i.el, r = i.options, o = s.ownerDocument, l;
    if (t && !Oe && t.parentNode === s) {
      var a = Mn(t);
      if (rn = s, Oe = t, bn = Oe.parentNode, aa = Oe.nextSibling, Pg = t, Bp = r.group, et.dragged = Oe, ia = {
        target: Oe,
        clientX: (e || n).clientX,
        clientY: (e || n).clientY
      }, bE = ia.clientX - a.left, yE = ia.clientY - a.top, this._lastX = (e || n).clientX, this._lastY = (e || n).clientY, Oe.style["will-change"] = "all", l = function() {
        if (Gi("delayEnded", i, {
          evt: n
        }), et.eventCanceled) {
          i._onDrop();
          return;
        }
        i._disableDelayedDragEvents(), !pE && i.nativeDraggable && (Oe.draggable = !0), i._triggerDragStart(n, e), zi({
          sortable: i,
          name: "choose",
          originalEvent: n
        }), ms(Oe, r.chosenClass, !0);
      }, r.ignore.split(",").forEach(function(c) {
        y4(Oe, c.trim(), xb);
      }), Mt(o, "dragover", sa), Mt(o, "mousemove", sa), Mt(o, "touchmove", sa), Mt(o, "mouseup", i._onDrop), Mt(o, "touchend", i._onDrop), Mt(o, "touchcancel", i._onDrop), pE && this.nativeDraggable && (this.options.touchStartThreshold = 4, Oe.draggable = !0), Gi("delayStart", this, {
        evt: n
      }), r.delay && (!r.delayOnTouchOnly || e) && (!this.nativeDraggable || !(Bf || Jo))) {
        if (et.eventCanceled) {
          this._onDrop();
          return;
        }
        Mt(o, "mouseup", i._disableDelayedDrag), Mt(o, "touchend", i._disableDelayedDrag), Mt(o, "touchcancel", i._disableDelayedDrag), Mt(o, "mousemove", i._delayedDragTouchMoveHandler), Mt(o, "touchmove", i._delayedDragTouchMoveHandler), r.supportPointer && Mt(o, "pointermove", i._delayedDragTouchMoveHandler), i._dragStartTimer = setTimeout(l, r.delay);
      } else
        l();
    }
  },
  _delayedDragTouchMoveHandler: function(n) {
    var e = n.touches ? n.touches[0] : n;
    Math.max(Math.abs(e.clientX - this._lastX), Math.abs(e.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag();
  },
  _disableDelayedDrag: function() {
    Oe && xb(Oe), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function() {
    var n = this.el.ownerDocument;
    Ct(n, "mouseup", this._disableDelayedDrag), Ct(n, "touchend", this._disableDelayedDrag), Ct(n, "touchcancel", this._disableDelayedDrag), Ct(n, "mousemove", this._delayedDragTouchMoveHandler), Ct(n, "touchmove", this._delayedDragTouchMoveHandler), Ct(n, "pointermove", this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function(n, e) {
    e = e || n.pointerType == "touch" && n, !this.nativeDraggable || e ? this.options.supportPointer ? Mt(document, "pointermove", this._onTouchMove) : e ? Mt(document, "touchmove", this._onTouchMove) : Mt(document, "mousemove", this._onTouchMove) : (Mt(Oe, "dragend", this), Mt(rn, "dragstart", this._onDragStart));
    try {
      document.selection ? Ag(function() {
        document.selection.empty();
      }) : window.getSelection().removeAllRanges();
    } catch {
    }
  },
  _dragStarted: function(n, e) {
    if (Pc = !1, rn && Oe) {
      Gi("dragStarted", this, {
        evt: e
      }), this.nativeDraggable && Mt(document, "dragover", CXe);
      var t = this.options;
      !n && ms(Oe, t.dragClass, !1), ms(Oe, t.ghostClass, !0), et.active = this, n && this._appendGhost(), zi({
        sortable: this,
        name: "start",
        originalEvent: e
      });
    } else
      this._nulling();
  },
  _emulateDragOver: function() {
    if (rr) {
      this._lastX = rr.clientX, this._lastY = rr.clientY, E4();
      for (var n = document.elementFromPoint(rr.clientX, rr.clientY), e = n; n && n.shadowRoot && (n = n.shadowRoot.elementFromPoint(rr.clientX, rr.clientY), n !== e); )
        e = n;
      if (Oe.parentNode[Cs]._isOutsideThisEl(n), e)
        do {
          if (e[Cs]) {
            var t = void 0;
            if (t = e[Cs]._onDragOver({
              clientX: rr.clientX,
              clientY: rr.clientY,
              target: n,
              rootEl: e
            }), t && !this.options.dragoverBubble)
              break;
          }
          n = e;
        } while (e = e.parentNode);
      A4();
    }
  },
  _onTouchMove: function(n) {
    if (ia) {
      var e = this.options, t = e.fallbackTolerance, i = e.fallbackOffset, s = n.touches ? n.touches[0] : n, r = at && Xc(at, !0), o = at && r && r.a, l = at && r && r.d, a = zp && Ai && vE(Ai), c = (s.clientX - ia.clientX + i.x) / (o || 1) + (a ? a[0] - wb[0] : 0) / (o || 1), u = (s.clientY - ia.clientY + i.y) / (l || 1) + (a ? a[1] - wb[1] : 0) / (l || 1);
      if (!et.active && !Pc) {
        if (t && Math.max(Math.abs(s.clientX - this._lastX), Math.abs(s.clientY - this._lastY)) < t)
          return;
        this._onDragStart(n, !0);
      }
      if (at) {
        r ? (r.e += c - (yb || 0), r.f += u - (Ob || 0)) : r = {
          a: 1,
          b: 0,
          c: 0,
          d: 1,
          e: c,
          f: u
        };
        var h = "matrix(".concat(r.a, ",").concat(r.b, ",").concat(r.c, ",").concat(r.d, ",").concat(r.e, ",").concat(r.f, ")");
        Ve(at, "webkitTransform", h), Ve(at, "mozTransform", h), Ve(at, "msTransform", h), Ve(at, "transform", h), yb = c, Ob = u, rr = s;
      }
      n.cancelable && n.preventDefault();
    }
  },
  _appendGhost: function() {
    if (!at) {
      var n = this.options.fallbackOnBody ? document.body : rn, e = Mn(Oe, !0, zp, !0, n), t = this.options;
      if (zp) {
        for (Ai = n; Ve(Ai, "position") === "static" && Ve(Ai, "transform") === "none" && Ai !== document; )
          Ai = Ai.parentNode;
        Ai !== document.body && Ai !== document.documentElement ? (Ai === document && (Ai = oo()), e.top += Ai.scrollTop, e.left += Ai.scrollLeft) : Ai = oo(), wb = vE(Ai);
      }
      at = Oe.cloneNode(!0), ms(at, t.ghostClass, !1), ms(at, t.fallbackClass, !0), ms(at, t.dragClass, !0), Ve(at, "transition", ""), Ve(at, "transform", ""), Ve(at, "box-sizing", "border-box"), Ve(at, "margin", 0), Ve(at, "top", e.top), Ve(at, "left", e.left), Ve(at, "width", e.width), Ve(at, "height", e.height), Ve(at, "opacity", "0.8"), Ve(at, "position", zp ? "absolute" : "fixed"), Ve(at, "zIndex", "100000"), Ve(at, "pointerEvents", "none"), et.ghost = at, n.appendChild(at), Ve(at, "transform-origin", bE / parseInt(at.style.width) * 100 + "% " + yE / parseInt(at.style.height) * 100 + "%");
    }
  },
  _onDragStart: function(n, e) {
    var t = this, i = n.dataTransfer, s = t.options;
    if (Gi("dragStart", this, {
      evt: n
    }), et.eventCanceled) {
      this._onDrop();
      return;
    }
    Gi("setupClone", this), et.eventCanceled || (fn = S4(Oe), fn.removeAttribute("id"), fn.draggable = !1, fn.style["will-change"] = "", this._hideClone(), ms(fn, this.options.chosenClass, !1), et.clone = fn), t.cloneId = Ag(function() {
      Gi("clone", t), !et.eventCanceled && (t.options.removeCloneOnHide || rn.insertBefore(fn, Oe), t._hideClone(), zi({
        sortable: t,
        name: "clone"
      }));
    }), !e && ms(Oe, s.dragClass, !0), e ? (Dm = !0, t._loopId = setInterval(t._emulateDragOver, 50)) : (Ct(document, "mouseup", t._onDrop), Ct(document, "touchend", t._onDrop), Ct(document, "touchcancel", t._onDrop), i && (i.effectAllowed = "move", s.setData && s.setData.call(t, i, Oe)), Mt(document, "drop", t), Ve(Oe, "transform", "translateZ(0)")), Pc = !0, t._dragStartId = Ag(t._dragStarted.bind(t, e, n)), Mt(document, "selectstart", t), zh = !0, dd && Ve(document.body, "user-select", "none");
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function(n) {
    var e = this.el, t = n.target, i, s, r, o = this.options, l = o.group, a = et.active, c = Bp === l, u = o.sort, h = di || a, d, f = this, p = !1;
    if (XO)
      return;
    function g(N, q) {
      Gi(N, f, po({
        evt: n,
        isOwner: c,
        axis: d ? "vertical" : "horizontal",
        revert: r,
        dragRect: i,
        targetRect: s,
        canSort: u,
        fromSortable: h,
        target: t,
        completed: v,
        onMove: function(j, H) {
          return jp(rn, e, Oe, i, j, Mn(j), n, H);
        },
        changed: O
      }, q));
    }
    function m() {
      g("dragOverAnimationCapture"), f.captureAnimationState(), f !== h && h.captureAnimationState();
    }
    function v(N) {
      return g("dragOverCompleted", {
        insertion: N
      }), N && (c ? a._hideClone() : a._showClone(f), f !== h && (ms(Oe, di ? di.options.ghostClass : a.options.ghostClass, !1), ms(Oe, o.ghostClass, !0)), di !== f && f !== et.active ? di = f : f === et.active && di && (di = null), h === f && (f._ignoreWhileAnimating = t), f.animateAll(function() {
        g("dragOverAnimationComplete"), f._ignoreWhileAnimating = null;
      }), f !== h && (h.animateAll(), h._ignoreWhileAnimating = null)), (t === Oe && !Oe.animated || t === e && !t.animated) && (Oc = null), !o.dragoverBubble && !n.rootEl && t !== document && (Oe.parentNode[Cs]._isOutsideThisEl(n.target), !N && sa(n)), !o.dragoverBubble && n.stopPropagation && n.stopPropagation(), p = !0;
    }
    function O() {
      vs = Ls(Oe), pl = Ls(Oe, o.draggable), zi({
        sortable: f,
        name: "change",
        toEl: e,
        newIndex: vs,
        newDraggableIndex: pl,
        originalEvent: n
      });
    }
    if (n.preventDefault !== void 0 && n.cancelable && n.preventDefault(), t = Qr(t, o.draggable, e, !0), g("dragOver"), et.eventCanceled)
      return p;
    if (Oe.contains(n.target) || t.animated && t.animatingX && t.animatingY || f._ignoreWhileAnimating === t)
      return v(!1);
    if (Dm = !1, a && !o.disabled && (c ? u || (r = bn !== rn) : di === this || (this.lastPutMode = Bp.checkPull(this, a, Oe, n)) && l.checkPut(this, a, Oe, n))) {
      if (d = this._getDirection(n, t) === "vertical", i = Mn(Oe), g("dragOverValid"), et.eventCanceled)
        return p;
      if (r)
        return bn = rn, m(), this._hideClone(), g("revert"), et.eventCanceled || (aa ? rn.insertBefore(Oe, aa) : rn.appendChild(Oe)), v(!0);
      var b = yx(e, o.draggable);
      if (!b || AXe(n, d, this) && !b.animated) {
        if (b === Oe)
          return v(!1);
        if (b && e === n.target && (t = b), t && (s = Mn(t)), jp(rn, e, Oe, i, t, s, n, !!t) !== !1)
          return m(), b && b.nextSibling ? e.insertBefore(Oe, b.nextSibling) : e.appendChild(Oe), bn = e, O(), v(!0);
      } else if (b && EXe(n, d, this)) {
        var w = ju(e, 0, o, !0);
        if (w === Oe)
          return v(!1);
        if (t = w, s = Mn(t), jp(rn, e, Oe, i, t, s, n, !1) !== !1)
          return m(), e.insertBefore(Oe, w), bn = e, O(), v(!0);
      } else if (t.parentNode === e) {
        s = Mn(t);
        var x = 0, S, C = Oe.parentNode !== e, k = !xXe(Oe.animated && Oe.toRect || i, t.animated && t.toRect || s, d), E = d ? "top" : "left", M = mE(t, "top", "top") || mE(Oe, "top", "top"), _ = M ? M.scrollTop : void 0;
        Oc !== t && (S = s[E], md = !1, Qp = !k && o.invertSwap || C), x = $Xe(n, t, s, d, k ? 1 : o.swapThreshold, o.invertedSwapThreshold == null ? o.swapThreshold : o.invertedSwapThreshold, Qp, Oc === t);
        var T;
        if (x !== 0) {
          var B = Ls(Oe);
          do
            B -= x, T = bn.children[B];
          while (T && (Ve(T, "display") === "none" || T === at));
        }
        if (x === 0 || T === t)
          return v(!1);
        Oc = t, gd = x;
        var I = t.nextElementSibling, P = !1;
        P = x === 1;
        var A = jp(rn, e, Oe, i, t, s, n, P);
        if (A !== !1)
          return (A === 1 || A === -1) && (P = A === 1), XO = !0, setTimeout(PXe, 30), m(), P && !I ? e.appendChild(Oe) : t.parentNode.insertBefore(Oe, P ? I : t), M && x4(M, 0, _ - M.scrollTop), bn = Oe.parentNode, S !== void 0 && !Qp && (Eg = Math.abs(S - Mn(t)[E])), O(), v(!0);
      }
      if (e.contains(Oe))
        return v(!1);
    }
    return !1;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function() {
    Ct(document, "mousemove", this._onTouchMove), Ct(document, "touchmove", this._onTouchMove), Ct(document, "pointermove", this._onTouchMove), Ct(document, "dragover", sa), Ct(document, "mousemove", sa), Ct(document, "touchmove", sa);
  },
  _offUpEvents: function() {
    var n = this.el.ownerDocument;
    Ct(n, "mouseup", this._onDrop), Ct(n, "touchend", this._onDrop), Ct(n, "pointerup", this._onDrop), Ct(n, "touchcancel", this._onDrop), Ct(document, "selectstart", this);
  },
  _onDrop: function(n) {
    var e = this.el, t = this.options;
    if (vs = Ls(Oe), pl = Ls(Oe, t.draggable), Gi("drop", this, {
      evt: n
    }), bn = Oe && Oe.parentNode, vs = Ls(Oe), pl = Ls(Oe, t.draggable), et.eventCanceled) {
      this._nulling();
      return;
    }
    Pc = !1, Qp = !1, md = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), YO(this.cloneId), YO(this._dragStartId), this.nativeDraggable && (Ct(document, "drop", this), Ct(e, "dragstart", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), dd && Ve(document.body, "user-select", ""), Ve(Oe, "transform", ""), n && (zh && (n.cancelable && n.preventDefault(), !t.dropBubble && n.stopPropagation()), at && at.parentNode && at.parentNode.removeChild(at), (rn === bn || di && di.lastPutMode !== "clone") && fn && fn.parentNode && fn.parentNode.removeChild(fn), Oe && (this.nativeDraggable && Ct(Oe, "dragend", this), xb(Oe), Oe.style["will-change"] = "", zh && !Pc && ms(Oe, di ? di.options.ghostClass : this.options.ghostClass, !1), ms(Oe, this.options.chosenClass, !1), zi({
      sortable: this,
      name: "unchoose",
      toEl: bn,
      newIndex: null,
      newDraggableIndex: null,
      originalEvent: n
    }), rn !== bn ? (vs >= 0 && (zi({
      rootEl: bn,
      name: "add",
      toEl: bn,
      fromEl: rn,
      originalEvent: n
    }), zi({
      sortable: this,
      name: "remove",
      toEl: bn,
      originalEvent: n
    }), zi({
      rootEl: bn,
      name: "sort",
      toEl: bn,
      fromEl: rn,
      originalEvent: n
    }), zi({
      sortable: this,
      name: "sort",
      toEl: bn,
      originalEvent: n
    })), di && di.save()) : vs !== Mc && vs >= 0 && (zi({
      sortable: this,
      name: "update",
      toEl: bn,
      originalEvent: n
    }), zi({
      sortable: this,
      name: "sort",
      toEl: bn,
      originalEvent: n
    })), et.active && ((vs == null || vs === -1) && (vs = Mc, pl = pd), zi({
      sortable: this,
      name: "end",
      toEl: bn,
      originalEvent: n
    }), this.save()))), this._nulling();
  },
  _nulling: function() {
    Gi("nulling", this), rn = Oe = bn = at = aa = fn = Pg = vl = ia = rr = zh = vs = pl = Mc = pd = Oc = gd = di = Bp = et.dragged = et.ghost = et.clone = et.active = null, Im.forEach(function(n) {
      n.checked = !0;
    }), Im.length = yb = Ob = 0;
  },
  handleEvent: function(n) {
    switch (n.type) {
      case "drop":
      case "dragend":
        this._onDrop(n);
        break;
      case "dragenter":
      case "dragover":
        Oe && (this._onDragOver(n), kXe(n));
        break;
      case "selectstart":
        n.preventDefault();
        break;
    }
  },
  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function() {
    for (var n = [], e, t = this.el.children, i = 0, s = t.length, r = this.options; i < s; i++)
      e = t[i], Qr(e, r.draggable, this.el, !1) && n.push(e.getAttribute(r.dataIdAttr) || _Xe(e));
    return n;
  },
  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function(n, e) {
    var t = {}, i = this.el;
    this.toArray().forEach(function(s, r) {
      var o = i.children[r];
      Qr(o, this.options.draggable, i, !1) && (t[s] = o);
    }, this), e && this.captureAnimationState(), n.forEach(function(s) {
      t[s] && (i.removeChild(t[s]), i.appendChild(t[s]));
    }), e && this.animateAll();
  },
  /**
   * Save the current sorting
   */
  save: function() {
    var n = this.options.store;
    n && n.set && n.set(this);
  },
  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function(n, e) {
    return Qr(n, e || this.options.draggable, this.el, !1);
  },
  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function(n, e) {
    var t = this.options;
    if (e === void 0)
      return t[n];
    var i = Qf.modifyOption(this, n, e);
    typeof i < "u" ? t[n] = i : t[n] = e, n === "group" && P4(t);
  },
  /**
   * Destroy
   */
  destroy: function() {
    Gi("destroy", this);
    var n = this.el;
    n[Cs] = null, Ct(n, "mousedown", this._onTapStart), Ct(n, "touchstart", this._onTapStart), Ct(n, "pointerdown", this._onTapStart), this.nativeDraggable && (Ct(n, "dragover", this), Ct(n, "dragenter", this)), Array.prototype.forEach.call(n.querySelectorAll("[draggable]"), function(e) {
      e.removeAttribute("draggable");
    }), this._onDrop(), this._disableDelayedDragEvents(), Lm.splice(Lm.indexOf(this.el), 1), this.el = n = null;
  },
  _hideClone: function() {
    if (!vl) {
      if (Gi("hideClone", this), et.eventCanceled)
        return;
      Ve(fn, "display", "none"), this.options.removeCloneOnHide && fn.parentNode && fn.parentNode.removeChild(fn), vl = !0;
    }
  },
  _showClone: function(n) {
    if (n.lastPutMode !== "clone") {
      this._hideClone();
      return;
    }
    if (vl) {
      if (Gi("showClone", this), et.eventCanceled)
        return;
      Oe.parentNode == rn && !this.options.group.revertClone ? rn.insertBefore(fn, Oe) : aa ? rn.insertBefore(fn, aa) : rn.appendChild(fn), this.options.group.revertClone && this.animate(Oe, fn), Ve(fn, "display", ""), vl = !1;
    }
  }
};
function kXe(n) {
  n.dataTransfer && (n.dataTransfer.dropEffect = "move"), n.cancelable && n.preventDefault();
}
function jp(n, e, t, i, s, r, o, l) {
  var a, c = n[Cs], u = c.options.onMove, h;
  return window.CustomEvent && !Jo && !Bf ? a = new CustomEvent("move", {
    bubbles: !0,
    cancelable: !0
  }) : (a = document.createEvent("Event"), a.initEvent("move", !0, !0)), a.to = e, a.from = n, a.dragged = t, a.draggedRect = i, a.related = s || e, a.relatedRect = r || Mn(e), a.willInsertAfter = l, a.originalEvent = o, n.dispatchEvent(a), u && (h = u.call(c, a, o)), h;
}
function xb(n) {
  n.draggable = !1;
}
function PXe() {
  XO = !1;
}
function EXe(n, e, t) {
  var i = Mn(ju(t.el, 0, t.options, !0)), s = O4(t.el), r = 10;
  return e ? n.clientX < s.left - r || n.clientY < i.top && n.clientX < i.right : n.clientY < s.top - r || n.clientY < i.bottom && n.clientX < i.left;
}
function AXe(n, e, t) {
  var i = Mn(yx(t.el, t.options.draggable)), s = O4(t.el), r = 10;
  return e ? n.clientX > s.right + r || n.clientY > i.bottom && n.clientX > i.left : n.clientY > s.bottom + r || n.clientX > i.right && n.clientY > i.top;
}
function $Xe(n, e, t, i, s, r, o, l) {
  var a = i ? n.clientY : n.clientX, c = i ? t.height : t.width, u = i ? t.top : t.left, h = i ? t.bottom : t.right, d = !1;
  if (!o) {
    if (l && Eg < c * s) {
      if (!md && (gd === 1 ? a > u + c * r / 2 : a < h - c * r / 2) && (md = !0), md)
        d = !0;
      else if (gd === 1 ? a < u + Eg : a > h - Eg)
        return -gd;
    } else if (a > u + c * (1 - s) / 2 && a < h - c * (1 - s) / 2)
      return TXe(e);
  }
  return d = d || o, d && (a < u + c * r / 2 || a > h - c * r / 2) ? a > u + c / 2 ? 1 : -1 : 0;
}
function TXe(n) {
  return Ls(Oe) < Ls(n) ? 1 : -1;
}
function _Xe(n) {
  for (var e = n.tagName + n.className + n.src + n.href + n.textContent, t = e.length, i = 0; t--; )
    i += e.charCodeAt(t);
  return i.toString(36);
}
function MXe(n) {
  Im.length = 0;
  for (var e = n.getElementsByTagName("input"), t = e.length; t--; ) {
    var i = e[t];
    i.checked && Im.push(i);
  }
}
function Ag(n) {
  return setTimeout(n, 0);
}
function YO(n) {
  return clearTimeout(n);
}
Y0 && Mt(document, "touchmove", function(n) {
  (et.active || Pc) && n.cancelable && n.preventDefault();
});
et.utils = {
  on: Mt,
  off: Ct,
  css: Ve,
  find: y4,
  is: function(n, e) {
    return !!Qr(n, e, n, !1);
  },
  extend: pXe,
  throttle: w4,
  closest: Qr,
  toggleClass: ms,
  clone: S4,
  index: Ls,
  nextTick: Ag,
  cancelNextTick: YO,
  detectDirection: k4,
  getChild: ju
};
et.get = function(n) {
  return n[Cs];
};
et.mount = function() {
  for (var n = arguments.length, e = new Array(n), t = 0; t < n; t++)
    e[t] = arguments[t];
  e[0].constructor === Array && (e = e[0]), e.forEach(function(i) {
    if (!i.prototype || !i.prototype.constructor)
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(i));
    i.utils && (et.utils = po(po({}, et.utils), i.utils)), Qf.mount(i);
  });
};
et.create = function(n, e) {
  return new et(n, e);
};
et.version = hXe;
var Tn = [], jh, UO, GO = !1, Sb, Cb, Bm, Vh;
function RXe() {
  function n() {
    this.defaults = {
      scroll: !0,
      forceAutoScrollFallback: !1,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: !0
    };
    for (var e in this)
      e.charAt(0) === "_" && typeof this[e] == "function" && (this[e] = this[e].bind(this));
  }
  return n.prototype = {
    dragStarted: function(e) {
      var t = e.originalEvent;
      this.sortable.nativeDraggable ? Mt(document, "dragover", this._handleAutoScroll) : this.options.supportPointer ? Mt(document, "pointermove", this._handleFallbackAutoScroll) : t.touches ? Mt(document, "touchmove", this._handleFallbackAutoScroll) : Mt(document, "mousemove", this._handleFallbackAutoScroll);
    },
    dragOverCompleted: function(e) {
      var t = e.originalEvent;
      !this.options.dragOverBubble && !t.rootEl && this._handleAutoScroll(t);
    },
    drop: function() {
      this.sortable.nativeDraggable ? Ct(document, "dragover", this._handleAutoScroll) : (Ct(document, "pointermove", this._handleFallbackAutoScroll), Ct(document, "touchmove", this._handleFallbackAutoScroll), Ct(document, "mousemove", this._handleFallbackAutoScroll)), wE(), $g(), gXe();
    },
    nulling: function() {
      Bm = UO = jh = GO = Vh = Sb = Cb = null, Tn.length = 0;
    },
    _handleFallbackAutoScroll: function(e) {
      this._handleAutoScroll(e, !0);
    },
    _handleAutoScroll: function(e, t) {
      var i = this, s = (e.touches ? e.touches[0] : e).clientX, r = (e.touches ? e.touches[0] : e).clientY, o = document.elementFromPoint(s, r);
      if (Bm = e, t || this.options.forceAutoScrollFallback || Bf || Jo || dd) {
        kb(e, this.options, o, t);
        var l = kl(o, !0);
        GO && (!Vh || s !== Sb || r !== Cb) && (Vh && wE(), Vh = setInterval(function() {
          var a = kl(document.elementFromPoint(s, r), !0);
          a !== l && (l = a, $g()), kb(e, i.options, a, t);
        }, 10), Sb = s, Cb = r);
      } else {
        if (!this.options.bubbleScroll || kl(o, !0) === oo()) {
          $g();
          return;
        }
        kb(e, this.options, kl(o, !1), !1);
      }
    }
  }, Wo(n, {
    pluginName: "scroll",
    initializeByDefault: !0
  });
}
function $g() {
  Tn.forEach(function(n) {
    clearInterval(n.pid);
  }), Tn = [];
}
function wE() {
  clearInterval(Vh);
}
var kb = w4(function(n, e, t, i) {
  if (e.scroll) {
    var s = (n.touches ? n.touches[0] : n).clientX, r = (n.touches ? n.touches[0] : n).clientY, o = e.scrollSensitivity, l = e.scrollSpeed, a = oo(), c = !1, u;
    UO !== t && (UO = t, $g(), jh = e.scroll, u = e.scrollFn, jh === !0 && (jh = kl(t, !0)));
    var h = 0, d = jh;
    do {
      var f = d, p = Mn(f), g = p.top, m = p.bottom, v = p.left, O = p.right, b = p.width, w = p.height, x = void 0, S = void 0, C = f.scrollWidth, k = f.scrollHeight, E = Ve(f), M = f.scrollLeft, _ = f.scrollTop;
      f === a ? (x = b < C && (E.overflowX === "auto" || E.overflowX === "scroll" || E.overflowX === "visible"), S = w < k && (E.overflowY === "auto" || E.overflowY === "scroll" || E.overflowY === "visible")) : (x = b < C && (E.overflowX === "auto" || E.overflowX === "scroll"), S = w < k && (E.overflowY === "auto" || E.overflowY === "scroll"));
      var T = x && (Math.abs(O - s) <= o && M + b < C) - (Math.abs(v - s) <= o && !!M), B = S && (Math.abs(m - r) <= o && _ + w < k) - (Math.abs(g - r) <= o && !!_);
      if (!Tn[h])
        for (var I = 0; I <= h; I++)
          Tn[I] || (Tn[I] = {});
      (Tn[h].vx != T || Tn[h].vy != B || Tn[h].el !== f) && (Tn[h].el = f, Tn[h].vx = T, Tn[h].vy = B, clearInterval(Tn[h].pid), (T != 0 || B != 0) && (c = !0, Tn[h].pid = setInterval((function() {
        i && this.layer === 0 && et.active._onTouchMove(Bm);
        var P = Tn[this.layer].vy ? Tn[this.layer].vy * l : 0, A = Tn[this.layer].vx ? Tn[this.layer].vx * l : 0;
        typeof u == "function" && u.call(et.dragged.parentNode[Cs], A, P, n, Bm, Tn[this.layer].el) !== "continue" || x4(Tn[this.layer].el, A, P);
      }).bind({
        layer: h
      }), 24))), h++;
    } while (e.bubbleScroll && d !== a && (d = kl(d, !1)));
    GO = c;
  }
}, 30), $4 = function(n) {
  var e = n.originalEvent, t = n.putSortable, i = n.dragEl, s = n.activeSortable, r = n.dispatchSortableEvent, o = n.hideGhostForTarget, l = n.unhideGhostForTarget;
  if (e) {
    var a = t || s;
    o();
    var c = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e, u = document.elementFromPoint(c.clientX, c.clientY);
    l(), a && !a.el.contains(u) && (r("spill"), this.onSpill({
      dragEl: i,
      putSortable: t
    }));
  }
};
function Ox() {
}
Ox.prototype = {
  startIndex: null,
  dragStart: function(n) {
    var e = n.oldDraggableIndex;
    this.startIndex = e;
  },
  onSpill: function(n) {
    var e = n.dragEl, t = n.putSortable;
    this.sortable.captureAnimationState(), t && t.captureAnimationState();
    var i = ju(this.sortable.el, this.startIndex, this.options);
    i ? this.sortable.el.insertBefore(e, i) : this.sortable.el.appendChild(e), this.sortable.animateAll(), t && t.animateAll();
  },
  drop: $4
};
Wo(Ox, {
  pluginName: "revertOnSpill"
});
function wx() {
}
wx.prototype = {
  onSpill: function(n) {
    var e = n.dragEl, t = n.putSortable, i = t || this.sortable;
    i.captureAnimationState(), e.parentNode && e.parentNode.removeChild(e), i.animateAll();
  },
  drop: $4
};
Wo(wx, {
  pluginName: "removeOnSpill"
});
et.mount(new RXe());
et.mount(wx, Ox);
function NXe(n) {
  return n == null ? n : JSON.parse(JSON.stringify(n));
}
function DXe(n) {
  Xe() && Vu(n);
}
function LXe(n) {
  Xe() ? qe(n) : $e(n);
}
const xE = Symbol("cloneElement");
function IXe(...n) {
  var e, t;
  const i = (e = Xe()) == null ? void 0 : e.proxy, s = n[0];
  let [, r, o] = n;
  Array.isArray(y(r)) || (o = r, r = null);
  let l = null;
  const {
    immediate: a = !0,
    clone: c = NXe,
    customUpdate: u
  } = (t = y(o)) != null ? t : {};
  function h(S) {
    var C;
    S.item[xE] = c(y((C = y(r)) == null ? void 0 : C[S.oldIndex]));
  }
  function d(S) {
    const C = S.item[xE];
    tXe(C) || (mb(S.item), eXe(y(r), S.newDraggableIndex, C));
  }
  function f(S) {
    const { from: C, item: k, oldIndex: E, oldDraggableIndex: M, pullMode: _, clone: T } = S;
    if (_ === "clone") {
      dE(C, k, E), mb(T);
      return;
    }
    JHe(y(r), M);
  }
  function p(S) {
    if (u) {
      u(S);
      return;
    }
    const { from: C, item: k, oldIndex: E, newIndex: M } = S;
    if (mb(k), dE(C, k, E), Fi(r)) {
      const _ = [...y(r)];
      r.value = hE(
        _,
        E,
        M
      );
      return;
    }
    hE(y(r), E, M);
  }
  const g = {
    onUpdate: p,
    onStart: h,
    onAdd: d,
    onRemove: f
  };
  function m(S) {
    const C = y(s);
    return S || (S = nXe(C) ? iXe(C, i == null ? void 0 : i.$el) : C), S && !oXe(S) && (S = S.$el), S || UHe("Root element not found"), S;
  }
  function v() {
    var S;
    const C = (S = y(o)) != null ? S : {}, k = p4(C, ["immediate", "clone"]);
    return rXe(
      r === null ? {} : g,
      k
    );
  }
  const O = (S) => {
    S = m(S), l && b.destroy(), l = new et(S, v());
  };
  ne(
    () => o,
    () => {
      l && lXe(v(), (S, C) => {
        l == null || l.option(S, C);
      });
    },
    { deep: !0 }
  );
  const b = {
    option: (S, C) => l == null ? void 0 : l.option(S, C),
    destroy: () => {
      l == null || l.destroy(), l = null;
    },
    save: () => l == null ? void 0 : l.save(),
    toArray: () => l == null ? void 0 : l.toArray(),
    closest: (...S) => l == null ? void 0 : l.closest(...S)
  }, w = () => b == null ? void 0 : b.option("disabled", !0), x = () => b == null ? void 0 : b.option("disabled", !1);
  return LXe(() => {
    a && O();
  }), DXe(b.destroy), _c({ start: O, pause: w, resume: x }, b);
}
const KO = [
  "update",
  "start",
  "add",
  "remove",
  "choose",
  "unchoose",
  "end",
  "sort",
  "filter",
  "clone",
  "move",
  "change"
], BXe = [
  "animation",
  "ghostClass",
  "group",
  "sort",
  "disabled",
  "store",
  "handle",
  "draggable",
  "swapThreshold",
  "invertSwap",
  "invertedSwapThreshold",
  "removeCloneOnHide",
  "direction",
  "chosenClass",
  "dragClass",
  "ignore",
  "filter",
  "preventOnFilter",
  "easing",
  "setData",
  "dropBubble",
  "dragoverBubble",
  "dataIdAttr",
  "delay",
  "delayOnTouchOnly",
  "touchStartThreshold",
  "forceFallback",
  "fallbackClass",
  "fallbackOnBody",
  "fallbackTolerance",
  "fallbackOffset",
  "supportPointer",
  "emptyInsertThreshold",
  "scroll",
  "forceAutoScrollFallback",
  "scrollSensitivity",
  "scrollSpeed",
  "bubbleScroll",
  "modelValue",
  "tag",
  "target",
  "customUpdate",
  ...KO.map((n) => `on${n.replace(/^\S/, (e) => e.toUpperCase())}`)
], oGe = F({
  name: "VueDraggable",
  model: {
    prop: "modelValue",
    event: "update:modelValue"
  },
  props: BXe,
  emits: ["update:modelValue", ...KO],
  setup(n, { slots: e, emit: t, expose: i, attrs: s }) {
    const r = KO.reduce((u, h) => {
      const d = `on${h.replace(/^\S/, (f) => f.toUpperCase())}`;
      return u[d] = (f) => t(h, f), u;
    }, {}), o = $(() => {
      const u = Ws(n), h = p4(u, ["modelValue"]), d = Object.entries(h).reduce((f, [p, g]) => {
        const m = y(g);
        return m !== void 0 && (f[p] = m), f;
      }, {});
      return _c(_c({}, r), KHe(_c(_c({}, s), d)));
    }), l = $({
      get: () => n.modelValue,
      set: (u) => t("update:modelValue", u)
    }), a = D(), c = Gt(
      IXe(n.target || a, l, o)
    );
    return i(c), () => {
      var u;
      return Re(n.tag || "div", { ref: a }, (u = e == null ? void 0 : e.default) == null ? void 0 : u.call(e, c));
    };
  }
}), QXe = 36, SE = 1, zXe = 2, $h = 3, Pb = 4, jXe = 5, VXe = 6, FXe = 7, ZXe = 8, qXe = 9, WXe = 10, HXe = 11, XXe = 12, YXe = 13, UXe = 14, GXe = 15, KXe = 16, JXe = 17, CE = 18, eYe = 19, T4 = 20, _4 = 21, kE = 22, tYe = 23, nYe = 24;
function JO(n) {
  return n >= 65 && n <= 90 || n >= 97 && n <= 122 || n >= 48 && n <= 57;
}
function iYe(n) {
  return n >= 48 && n <= 57 || n >= 97 && n <= 102 || n >= 65 && n <= 70;
}
function ca(n, e, t) {
  for (let i = !1; ; ) {
    if (n.next < 0)
      return;
    if (n.next == e && !i) {
      n.advance();
      return;
    }
    i = t && !i && n.next == 92, n.advance();
  }
}
function sYe(n) {
  for (; ; ) {
    if (n.next < 0 || n.peek(1) < 0)
      return;
    if (n.next == 36 && n.peek(1) == 36) {
      n.advance(2);
      return;
    }
    n.advance();
  }
}
function rYe(n, e) {
  let t = "[{<(".indexOf(String.fromCharCode(e)), i = t < 0 ? e : "]}>)".charCodeAt(t);
  for (; ; ) {
    if (n.next < 0)
      return;
    if (n.next == i && n.peek(1) == 39) {
      n.advance(2);
      return;
    }
    n.advance();
  }
}
function M4(n, e) {
  for (; !(n.next != 95 && !JO(n.next)); )
    e != null && (e += String.fromCharCode(n.next)), n.advance();
  return e;
}
function oYe(n) {
  if (n.next == 39 || n.next == 34 || n.next == 96) {
    let e = n.next;
    n.advance(), ca(n, e, !1);
  } else
    M4(n);
}
function PE(n, e) {
  for (; n.next == 48 || n.next == 49; )
    n.advance();
  e && n.next == e && n.advance();
}
function EE(n, e) {
  for (; ; ) {
    if (n.next == 46) {
      if (e)
        break;
      e = !0;
    } else if (n.next < 48 || n.next > 57)
      break;
    n.advance();
  }
  if (n.next == 69 || n.next == 101)
    for (n.advance(), (n.next == 43 || n.next == 45) && n.advance(); n.next >= 48 && n.next <= 57; )
      n.advance();
}
function AE(n) {
  for (; !(n.next < 0 || n.next == 10); )
    n.advance();
}
function ra(n, e) {
  for (let t = 0; t < e.length; t++)
    if (e.charCodeAt(t) == n)
      return !0;
  return !1;
}
const Eb = ` 	\r
`;
function R4(n, e, t) {
  let i = /* @__PURE__ */ Object.create(null);
  i.true = i.false = jXe, i.null = i.unknown = VXe;
  for (let s of n.split(" "))
    s && (i[s] = T4);
  for (let s of e.split(" "))
    s && (i[s] = _4);
  for (let s of (t || "").split(" "))
    s && (i[s] = nYe);
  return i;
}
const lYe = "array binary bit boolean char character clob date decimal double float int integer interval large national nchar nclob numeric object precision real smallint time timestamp varchar varying ", aYe = "absolute action add after all allocate alter and any are as asc assertion at authorization before begin between both breadth by call cascade cascaded case cast catalog check close collate collation column commit condition connect connection constraint constraints constructor continue corresponding count create cross cube current current_date current_default_transform_group current_transform_group_for_type current_path current_role current_time current_timestamp current_user cursor cycle data day deallocate declare default deferrable deferred delete depth deref desc describe descriptor deterministic diagnostics disconnect distinct do domain drop dynamic each else elseif end end-exec equals escape except exception exec execute exists exit external fetch first for foreign found from free full function general get global go goto grant group grouping handle having hold hour identity if immediate in indicator initially inner inout input insert intersect into is isolation join key language last lateral leading leave left level like limit local localtime localtimestamp locator loop map match method minute modifies module month names natural nesting new next no none not of old on only open option or order ordinality out outer output overlaps pad parameter partial path prepare preserve primary prior privileges procedure public read reads recursive redo ref references referencing relative release repeat resignal restrict result return returns revoke right role rollback rollup routine row rows savepoint schema scroll search second section select session session_user set sets signal similar size some space specific specifictype sql sqlexception sqlstate sqlwarning start state static system_user table temporary then timezone_hour timezone_minute to trailing transaction translation treat trigger under undo union unique unnest until update usage user using value values view when whenever where while with without work write year zone ", e1 = {
  backslashEscapes: !1,
  hashComments: !1,
  spaceAfterDashes: !1,
  slashComments: !1,
  doubleQuotedStrings: !1,
  doubleDollarQuotedStrings: !1,
  unquotedBitLiterals: !1,
  treatBitsAsBytes: !1,
  charSetCasts: !1,
  plsqlQuotingMechanism: !1,
  operatorChars: "*+-%<>!=&|~^/",
  specialVar: "?",
  identifierQuotes: '"',
  words: /* @__PURE__ */ R4(aYe, lYe)
};
function cYe(n, e, t, i) {
  let s = {};
  for (let r in e1)
    s[r] = (n.hasOwnProperty(r) ? n : e1)[r];
  return e && (s.words = R4(e, t || "", i)), s;
}
function N4(n) {
  return new Df((e) => {
    var t;
    let { next: i } = e;
    if (e.advance(), ra(i, Eb)) {
      for (; ra(e.next, Eb); )
        e.advance();
      e.acceptToken(QXe);
    } else if (i == 36 && e.next == 36 && n.doubleDollarQuotedStrings)
      sYe(e), e.acceptToken($h);
    else if (i == 39 || i == 34 && n.doubleQuotedStrings)
      ca(e, i, n.backslashEscapes), e.acceptToken($h);
    else if (i == 35 && n.hashComments || i == 47 && e.next == 47 && n.slashComments)
      AE(e), e.acceptToken(SE);
    else if (i == 45 && e.next == 45 && (!n.spaceAfterDashes || e.peek(1) == 32))
      AE(e), e.acceptToken(SE);
    else if (i == 47 && e.next == 42) {
      e.advance();
      for (let s = 1; ; ) {
        let r = e.next;
        if (e.next < 0)
          break;
        if (e.advance(), r == 42 && e.next == 47) {
          if (s--, e.advance(), !s)
            break;
        } else
          r == 47 && e.next == 42 && (s++, e.advance());
      }
      e.acceptToken(zXe);
    } else if ((i == 101 || i == 69) && e.next == 39)
      e.advance(), ca(e, 39, !0);
    else if ((i == 110 || i == 78) && e.next == 39 && n.charSetCasts)
      e.advance(), ca(e, 39, n.backslashEscapes), e.acceptToken($h);
    else if (i == 95 && n.charSetCasts)
      for (let s = 0; ; s++) {
        if (e.next == 39 && s > 1) {
          e.advance(), ca(e, 39, n.backslashEscapes), e.acceptToken($h);
          break;
        }
        if (!JO(e.next))
          break;
        e.advance();
      }
    else if (n.plsqlQuotingMechanism && (i == 113 || i == 81) && e.next == 39 && e.peek(1) > 0 && !ra(e.peek(1), Eb)) {
      let s = e.peek(1);
      e.advance(2), rYe(e, s), e.acceptToken($h);
    } else if (i == 40)
      e.acceptToken(FXe);
    else if (i == 41)
      e.acceptToken(ZXe);
    else if (i == 123)
      e.acceptToken(qXe);
    else if (i == 125)
      e.acceptToken(WXe);
    else if (i == 91)
      e.acceptToken(HXe);
    else if (i == 93)
      e.acceptToken(XXe);
    else if (i == 59)
      e.acceptToken(YXe);
    else if (n.unquotedBitLiterals && i == 48 && e.next == 98)
      e.advance(), PE(e), e.acceptToken(kE);
    else if ((i == 98 || i == 66) && (e.next == 39 || e.next == 34)) {
      const s = e.next;
      e.advance(), n.treatBitsAsBytes ? (ca(e, s, n.backslashEscapes), e.acceptToken(tYe)) : (PE(e, s), e.acceptToken(kE));
    } else if (i == 48 && (e.next == 120 || e.next == 88) || (i == 120 || i == 88) && e.next == 39) {
      let s = e.next == 39;
      for (e.advance(); iYe(e.next); )
        e.advance();
      s && e.next == 39 && e.advance(), e.acceptToken(Pb);
    } else if (i == 46 && e.next >= 48 && e.next <= 57)
      EE(e, !0), e.acceptToken(Pb);
    else if (i == 46)
      e.acceptToken(UXe);
    else if (i >= 48 && i <= 57)
      EE(e, !1), e.acceptToken(Pb);
    else if (ra(i, n.operatorChars)) {
      for (; ra(e.next, n.operatorChars); )
        e.advance();
      e.acceptToken(GXe);
    } else if (ra(i, n.specialVar))
      e.next == i && e.advance(), oYe(e), e.acceptToken(JXe);
    else if (ra(i, n.identifierQuotes))
      ca(e, i, !1), e.acceptToken(eYe);
    else if (i == 58 || i == 44)
      e.acceptToken(KXe);
    else if (JO(i)) {
      let s = M4(e, String.fromCharCode(i));
      e.acceptToken(e.next == 46 || e.peek(-s.length - 1) == 46 ? CE : (t = n.words[s.toLowerCase()]) !== null && t !== void 0 ? t : CE);
    }
  });
}
const D4 = /* @__PURE__ */ N4(e1), uYe = /* @__PURE__ */ zu.deserialize({
  version: 14,
  states: "%vQ]QQOOO#wQRO'#DSO$OQQO'#CwO%eQQO'#CxO%lQQO'#CyO%sQQO'#CzOOQQ'#DS'#DSOOQQ'#C}'#C}O'UQRO'#C{OOQQ'#Cv'#CvOOQQ'#C|'#C|Q]QQOOQOQQOOO'`QQO'#DOO(xQRO,59cO)PQQO,59cO)UQQO'#DSOOQQ,59d,59dO)cQQO,59dOOQQ,59e,59eO)jQQO,59eOOQQ,59f,59fO)qQQO,59fOOQQ-E6{-E6{OOQQ,59b,59bOOQQ-E6z-E6zOOQQ,59j,59jOOQQ-E6|-E6|O+VQRO1G.}O+^QQO,59cOOQQ1G/O1G/OOOQQ1G/P1G/POOQQ1G/Q1G/QP+kQQO'#C}O+rQQO1G.}O)PQQO,59cO,PQQO'#Cw",
  stateData: ",[~OtOSPOSQOS~ORUOSUOTUOUUOVROXSOZTO]XO^QO_UO`UOaPObPOcPOdUOeUOfUOgUOhUO~O^]ORvXSvXTvXUvXVvXXvXZvX]vX_vX`vXavXbvXcvXdvXevXfvXgvXhvX~OsvX~P!jOa_Ob_Oc_O~ORUOSUOTUOUUOVROXSOZTO^tO_UO`UOa`Ob`Oc`OdUOeUOfUOgUOhUO~OWaO~P$ZOYcO~P$ZO[eO~P$ZORUOSUOTUOUUOVROXSOZTO^QO_UO`UOaPObPOcPOdUOeUOfUOgUOhUO~O]hOsoX~P%zOajObjOcjO~O^]ORkaSkaTkaUkaVkaXkaZka]ka_ka`kaakabkackadkaekafkagkahka~Oska~P'kO^]O~OWvXYvX[vX~P!jOWnO~P$ZOYoO~P$ZO[pO~P$ZO^]ORkiSkiTkiUkiVkiXkiZki]ki_ki`kiakibkickidkiekifkigkihki~Oski~P)xOWkaYka[ka~P'kO]hO~P$ZOWkiYki[ki~P)xOasObsOcsO~O",
  goto: "#hwPPPPPPPPPPPPPPPPPPPPPPPPPPx||||!Y!^!d!xPPP#[TYOZeUORSTWZbdfqT[OZQZORiZSWOZQbRQdSQfTZgWbdfqQ^PWk^lmrQl_Qm`RrseVORSTWZbdfq",
  nodeNames: "⚠ LineComment BlockComment String Number Bool Null ( ) { } [ ] ; . Operator Punctuation SpecialVar Identifier QuotedIdentifier Keyword Type Bits Bytes Builtin Script Statement CompositeIdentifier Parens Braces Brackets Statement",
  maxTerm: 38,
  nodeProps: [
    ["isolate", -4, 1, 2, 3, 19, ""]
  ],
  skippedNodes: [0, 1, 2],
  repeatNodeCount: 3,
  tokenData: "RORO",
  tokenizers: [0, D4],
  topRules: { Script: [0, 25] },
  tokenPrec: 0
});
function t1(n) {
  let e = n.cursor().moveTo(n.from, -1);
  for (; /Comment/.test(e.name); )
    e.moveTo(e.from, -1);
  return e.node;
}
function of(n, e) {
  let t = n.sliceString(e.from, e.to), i = /^([`'"])(.*)\1$/.exec(t);
  return i ? i[2] : t;
}
function Qm(n) {
  return n && (n.name == "Identifier" || n.name == "QuotedIdentifier");
}
function hYe(n, e) {
  if (e.name == "CompositeIdentifier") {
    let t = [];
    for (let i = e.firstChild; i; i = i.nextSibling)
      Qm(i) && t.push(of(n, i));
    return t;
  }
  return [of(n, e)];
}
function $E(n, e) {
  for (let t = []; ; ) {
    if (!e || e.name != ".")
      return t;
    let i = t1(e);
    if (!Qm(i))
      return t;
    t.unshift(of(n, i)), e = t1(i);
  }
}
function dYe(n, e) {
  let t = Qn(n).resolveInner(e, -1), i = pYe(n.doc, t);
  return t.name == "Identifier" || t.name == "QuotedIdentifier" || t.name == "Keyword" ? {
    from: t.from,
    quoted: t.name == "QuotedIdentifier" ? n.doc.sliceString(t.from, t.from + 1) : null,
    parents: $E(n.doc, t1(t)),
    aliases: i
  } : t.name == "." ? { from: e, quoted: null, parents: $E(n.doc, t), aliases: i } : { from: e, quoted: null, parents: [], empty: !0, aliases: i };
}
const fYe = /* @__PURE__ */ new Set(/* @__PURE__ */ "where group having order union intersect except all distinct limit offset fetch for".split(" "));
function pYe(n, e) {
  let t;
  for (let s = e; !t; s = s.parent) {
    if (!s)
      return null;
    s.name == "Statement" && (t = s);
  }
  let i = null;
  for (let s = t.firstChild, r = !1, o = null; s; s = s.nextSibling) {
    let l = s.name == "Keyword" ? n.sliceString(s.from, s.to).toLowerCase() : null, a = null;
    if (!r)
      r = l == "from";
    else if (l == "as" && o && Qm(s.nextSibling))
      a = of(n, s.nextSibling);
    else {
      if (l && fYe.has(l))
        break;
      o && Qm(s) && (a = of(n, s));
    }
    a && (i || (i = /* @__PURE__ */ Object.create(null)), i[a] = hYe(n, o)), o = /Identifier$/.test(s.name) ? s : null;
  }
  return i;
}
function gYe(n, e) {
  return n ? e.map((t) => Object.assign(Object.assign({}, t), { label: t.label[0] == n ? t.label : n + t.label + n, apply: void 0 })) : e;
}
const mYe = /^\w*$/, vYe = /^[`'"]?\w*[`'"]?$/;
function TE(n) {
  return n.self && typeof n.self.label == "string";
}
class xx {
  constructor(e) {
    this.idQuote = e, this.list = [], this.children = void 0;
  }
  child(e) {
    let t = this.children || (this.children = /* @__PURE__ */ Object.create(null)), i = t[e];
    return i || (e && !this.list.some((s) => s.label == e) && this.list.push(_E(e, "type", this.idQuote)), t[e] = new xx(this.idQuote));
  }
  maybeChild(e) {
    return this.children ? this.children[e] : null;
  }
  addCompletion(e) {
    let t = this.list.findIndex((i) => i.label == e.label);
    t > -1 ? this.list[t] = e : this.list.push(e);
  }
  addCompletions(e) {
    for (let t of e)
      this.addCompletion(typeof t == "string" ? _E(t, "property", this.idQuote) : t);
  }
  addNamespace(e) {
    Array.isArray(e) ? this.addCompletions(e) : TE(e) ? this.addNamespace(e.children) : this.addNamespaceObject(e);
  }
  addNamespaceObject(e) {
    for (let t of Object.keys(e)) {
      let i = e[t], s = null, r = t.replace(/\\?\./g, (l) => l == "." ? "\0" : l).split("\0"), o = this;
      TE(i) && (s = i.self, i = i.children);
      for (let l = 0; l < r.length; l++)
        s && l == r.length - 1 && o.addCompletion(s), o = o.child(r[l].replace(/\\\./g, "."));
      o.addNamespace(i);
    }
  }
}
function _E(n, e, t) {
  return /^[a-z_][a-z_\d]*$/.test(n) ? { label: n, type: e } : { label: n, type: e, apply: t + n + t };
}
function bYe(n, e, t, i, s, r) {
  var o;
  let l = ((o = r == null ? void 0 : r.spec.identifierQuotes) === null || o === void 0 ? void 0 : o[0]) || '"', a = new xx(l), c = s ? a.child(s) : null;
  return a.addNamespace(n), e && (c || a).addCompletions(e), t && a.addCompletions(t), c && a.addCompletions(c.list), i && a.addCompletions((c || a).child(i).list), (u) => {
    let { parents: h, from: d, quoted: f, empty: p, aliases: g } = dYe(u.state, u.pos);
    if (p && !u.explicit)
      return null;
    g && h.length == 1 && (h = g[h[0]] || h);
    let m = a;
    for (let b of h) {
      for (; !m.children || !m.children[b]; )
        if (m == a)
          m = c;
        else if (m == c && i)
          m = m.child(i);
        else
          return null;
      let w = m.maybeChild(b);
      if (!w)
        return null;
      m = w;
    }
    let v = f && u.state.sliceDoc(u.pos, u.pos + 1) == f, O = m.list;
    return m == a && g && (O = O.concat(Object.keys(g).map((b) => ({ label: b, type: "constant" })))), {
      from: d,
      to: v ? u.pos + 1 : void 0,
      options: gYe(f, O),
      validFor: f ? vYe : mYe
    };
  };
}
function yYe(n, e) {
  let t = Object.keys(n).map((i) => ({
    label: e ? i.toUpperCase() : i,
    type: n[i] == _4 ? "type" : n[i] == T4 ? "keyword" : "variable",
    boost: -1
  }));
  return XN(["QuotedIdentifier", "SpecialVar", "String", "LineComment", "BlockComment", "."], tx(t));
}
let OYe = /* @__PURE__ */ uYe.configure({
  props: [
    /* @__PURE__ */ $0.add({
      Statement: /* @__PURE__ */ Fc()
    }),
    /* @__PURE__ */ T0.add({
      Statement(n) {
        return { from: n.firstChild.to, to: n.to };
      },
      BlockComment(n) {
        return { from: n.from + 2, to: n.to - 2 };
      }
    }),
    /* @__PURE__ */ P0({
      Keyword: X.keyword,
      Type: X.typeName,
      Builtin: /* @__PURE__ */ X.standard(X.name),
      Bits: X.number,
      Bytes: X.string,
      Bool: X.bool,
      Null: X.null,
      Number: X.number,
      String: X.string,
      Identifier: X.name,
      QuotedIdentifier: /* @__PURE__ */ X.special(X.string),
      SpecialVar: /* @__PURE__ */ X.special(X.name),
      LineComment: X.lineComment,
      BlockComment: X.blockComment,
      Operator: X.operator,
      "Semi Punctuation": X.punctuation,
      "( )": X.paren,
      "{ }": X.brace,
      "[ ]": X.squareBracket
    })
  ]
});
class Sx {
  constructor(e, t, i) {
    this.dialect = e, this.language = t, this.spec = i;
  }
  /**
  Returns the language for this dialect as an extension.
  */
  get extension() {
    return this.language.extension;
  }
  /**
  Define a new dialect.
  */
  static define(e) {
    let t = cYe(e, e.keywords, e.types, e.builtin), i = Lu.define({
      name: "sql",
      parser: OYe.configure({
        tokenizers: [{ from: D4, to: N4(t) }]
      }),
      languageData: {
        commentTokens: { line: "--", block: { open: "/*", close: "*/" } },
        closeBrackets: { brackets: ["(", "[", "{", "'", '"', "`"] }
      }
    });
    return new Sx(t, i, e);
  }
}
function wYe(n, e = !1) {
  return yYe(n.dialect.words, e);
}
function xYe(n, e = !1) {
  return n.language.data.of({
    autocomplete: wYe(n, e)
  });
}
function SYe(n) {
  return n.schema ? bYe(n.schema, n.tables, n.schemas, n.defaultTable, n.defaultSchema, n.dialect || Cx) : () => null;
}
function CYe(n) {
  return n.schema ? (n.dialect || Cx).language.data.of({
    autocomplete: SYe(n)
  }) : [];
}
function lGe(n = {}) {
  let e = n.dialect || Cx;
  return new Zw(e.language, [CYe(n), xYe(e, !!n.upperCaseKeywords)]);
}
const Cx = /* @__PURE__ */ Sx.define({});
export {
  YA as $,
  EUe as A,
  x1 as B,
  On as C,
  KUe as D,
  BUe as E,
  rUe as F,
  Pe as G,
  dj as H,
  tc as I,
  cUe as J,
  eUe as K,
  LYe as L,
  Yt as M,
  zYe as N,
  xUe as O,
  FYe as P,
  HUe as Q,
  qUe as R,
  WUe as S,
  MUe as T,
  RUe as U,
  qf as V,
  zUe as W,
  vUe as X,
  bUe as Y,
  Mu as Z,
  oS as _,
  IUe as a,
  Um as a$,
  GYe as a0,
  KYe as a1,
  Rj as a2,
  uUe as a3,
  ZYe as a4,
  wUe as a5,
  Ru as a6,
  jd as a7,
  Bre as a8,
  Vd as a9,
  oGe as aA,
  Jm as aB,
  Bt as aC,
  UYe as aD,
  nUe as aE,
  HYe as aF,
  jg as aG,
  Lo as aH,
  GX as aI,
  A_ as aJ,
  t$ as aK,
  OUe as aL,
  pUe as aM,
  sGe as aN,
  rGe as aO,
  VUe as aP,
  _e as aQ,
  Et as aR,
  iGe as aS,
  XYe as aT,
  gb as aU,
  xd as aV,
  li as aW,
  wn as aX,
  NYe as aY,
  _Ye as aZ,
  mf as a_,
  SUe as aa,
  QUe as ab,
  JUe as ac,
  sUe as ad,
  lUe as ae,
  XY as af,
  jYe as ag,
  iUe as ah,
  BYe as ai,
  YYe as aj,
  qYe as ak,
  W9 as al,
  CUe as am,
  fUe as an,
  lW as ao,
  UX as ap,
  $Ue as aq,
  oz as ar,
  hUe as as,
  dUe as at,
  AUe as au,
  Do as av,
  PUe as aw,
  LUe as ax,
  Bo as ay,
  DUe as az,
  ZUe as b,
  l1 as b0,
  CQ as b1,
  kr as b2,
  V6 as b3,
  Rg as b4,
  RYe as b5,
  AYe as b6,
  MYe as b7,
  XUe as b8,
  NUe as b9,
  TYe as ba,
  lGe as bb,
  mUe as bc,
  ec as bd,
  oUe as be,
  DYe as bf,
  WYe as bg,
  Vi as c,
  TUe as d,
  _Ue as e,
  Qa as f,
  on as g,
  Kz as h,
  QYe as i,
  zz as j,
  aUe as k,
  IYe as l,
  bj as m,
  $Ye as n,
  Fe as o,
  n$ as p,
  VYe as q,
  JYe as r,
  tUe as s,
  kUe as t,
  FUe as u,
  $j as v,
  jUe as w,
  uo as x,
  ic as y,
  lS as z
};
