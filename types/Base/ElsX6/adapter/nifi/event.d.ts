import type { Cell, Graph, Node } from "@antv/x6";
import { IElsX6 } from "../../inter";
import { AdapterNifi } from "./main";
export declare class NifiEvent {
    constructor(e: AdapterNifi);
    nifi: AdapterNifi;
    api: import("./api").NifiApi;
    data: IElsX6.Events;
    context: IElsX6.Context | undefined;
    graph: Graph | undefined;
    shadow: IElsX6.Context['graphShadow'] | undefined;
    drawerRef: IElsX6.Context['drawerRef'] | undefined;
    form: IElsX6.Context['graphForm'] | undefined;
    processGroupFlow: any;
    flow: Record<string, any[]> | undefined;
    breadcrumb: any;
    source: Map<string, any>;
    mounted(ctx: IElsX6.Context): void;
    initData(data: any): void;
    initFlow(): void;
    initCells(): void;
    initCell(cell: Cell): void;
    initCellForm(): void;
    initCellTabs(): void;
    initCellStatus(): void;
    refreshCell(cell: Cell): Promise<void>;
    updateCell(): void;
    updateCellFormData(): void;
    updateCellStatus(): void;
    updateCellData(): void;
    openCellDrawer(cell: Cell): void;
    cellAdd(cell: Cell): Promise<void>;
    cellDel(cell: Cell): Promise<void>;
    cellEdit(cell: Cell): Promise<void>;
    nodeMove(cell: Node): Promise<void>;
}
